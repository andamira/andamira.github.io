searchState.loadedDescShard("devela", 27, "Saturating absolute value, see <code>i16::saturating_abs</code>.\nSaturating absolute value, see <code>i32::saturating_abs</code>.\nSaturating absolute value, see <code>i128::saturating_abs</code>.\nAdds an unsigned integer to a non-zero value. Return ‚Ä¶\nAdds an unsigned integer to a non-zero value. Return ‚Ä¶\nAdds an unsigned integer to a non-zero value. Return ‚Ä¶\nAdds an unsigned integer to a non-zero value. Return ‚Ä¶\nAdds an unsigned integer to a non-zero value. Return ‚Ä¶\nAdds an unsigned integer to a non-zero value. Return ‚Ä¶\nAdd two time deltas together. If overflow occurs, then ‚Ä¶\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating integer addition. Computes <code>self + rhs</code>.\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, ‚Ä¶\nCasts <code>self</code> to <code>i128</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>i16</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>i32</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>i64</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>i8</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>isize</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>isize_down</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>u128</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>u16</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>u32</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>u64</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>u8</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>usize</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>usize_down</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>usize_up</code> clamping at the numeric bounds.\nReturns the amount of time elapsed from another instant to ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiplies two non-zero integers together. Return ‚Ä¶\nMultiply this time delta by an integer.\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, ‚Ä¶\nSaturating negation. Computes <code>-self</code>, returning ‚Ä¶\nSaturating negation. Computes <code>-self</code>, returning ‚Ä¶\nSaturating negation. Computes <code>-self</code>, returning ‚Ä¶\nSaturating negation. Computes <code>-self</code>, returning ‚Ä¶\nSaturating negation. Computes <code>-self</code>, returning ‚Ä¶\nSaturating negation. Computes <code>-self</code>, returning ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nRaise non-zero value to an integer power. Return ‚Ä¶\nAdd two time deltas together. If overflow occurs, then ‚Ä¶\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating integer substration. Computes <code>self - rhs</code>.\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, ‚Ä¶\nReturns <code>self</code> between <code>[min..=max]</code> scaled to a new range ‚Ä¶\nReturns the matrix scaled by a scalar value.\nReturns the matrix scaled by a scalar value.\nReturns the matrix scaled by a scalar value.\nReturns the matrix scaled by a scalar value.\nReturns the matrix scaled by a scalar value.\nReturns the matrix scaled by a scalar value.\nReturns the matrix scaled by a scalar value.\nReturns the matrix scaled by a scalar value.\nAn iterator adapter which, like <code>fold</code>, holds internal ‚Ä¶\nAn iterator adapter which, like <code>fold</code>, holds internal ‚Ä¶\nAn iterator adapter which, like <code>fold</code>, holds internal ‚Ä¶\nAn iterator adapter which, like <code>fold</code>, holds internal ‚Ä¶\nAn iterator adapter which, like <code>fold</code>, holds internal ‚Ä¶\nAn iterator adapter which, like <code>fold</code>, holds internal ‚Ä¶\nAn iterator adapter which, like <code>fold</code>, holds internal ‚Ä¶\nAn iterator adapter which, like <code>fold</code>, holds internal ‚Ä¶\nRequests an immediate update, ensuring <code>update()</code> and <code>draw()</code> ‚Ä¶\nCreate a scope for spawning scoped threads.\nCreate a scope for spawning scoped threads.\nReturns the scope ID associated with this address.\nEnables raw mode and returns a <code>ScopeGuard</code> that restores ‚Ä¶\nReturns the window‚Äôs distance to each screen edge in ‚Ä¶\n(screenLeft) (screenTop) The window‚Äôs offset in pixels ‚Ä¶\n(width) (height) The extent of the screen in pixels.\n(availWidth) (availHeight) The extent of the screen in ‚Ä¶\nSearch for <code>needle</code> in `haystack, with explicit string ‚Ä¶\nSearch for <code>needle</code> in `haystack, with explicit string ‚Ä¶\nSearch for <code>needle</code> in `haystack, with implicit string ‚Ä¶\nSearch for <code>needle</code> in `haystack, with implicit string ‚Ä¶\nThe number of seconds relative the Unix Epoch.\nThe number of seconds since the Unix Epoch.\nReturns the time code as <code>HH:MM:SS:MIL</code> or <code>MM:SS:MIL</code>.\nSeek to an offset, in bytes, in a stream.\nSeek to an offset, in bytes in a file.\nSeek to an offset, in bytes, in the underlying reader.\nSeek to the offset, in bytes, in the underlying writer.\nSeeks relative to the current position. If the new ‚Ä¶\nSeeks relative to the current position.\nSeeks relative to the current position.\nSeeks relative to the current position.\nReturns the eight 16-bit segments that make up this ‚Ä¶\nüõ°Ô∏è The key representing the human-readable code.\nThe key representing the human-readable code.\nSends data on the socket to the remote address to which it ‚Ä¶\nAttempts to send a value on this channel, returning it ‚Ä¶\nSends a value on this synchronous channel.\nSends a message to this Web Worker.\nSends data on the socket to the given address. On success, ‚Ä¶\n‚öñÔ∏è Wraps the given <code>OptRes</code> <code>value</code> in a <code>Some</code><code>(</code><code>Err</code><code>(error))</code>.\nSets or initializes the contained value.\nSets or initializes the contained value.\nSets the element at the given 2D coordinates in the ‚Ä¶\nSets the element at the given 2D coordinates in the ‚Ä¶\nInitializes the contents of the cell to <code>value</code>.\nSets the contained value.\nSets the contained value.\nSets the contained value.\nInitializes the contents of the cell to <code>value</code>.\nAssigns a new value to the memory location pointed to by ‚Ä¶\nSet the last access time of a file.\nSets the global logger to a <code>Box&lt;Log&gt;</code>.\nSets the value of the <code>SO_BROADCAST</code> option for this socket.\nSets the active canvas using a CSS <code>selector</code>.\nSets the bits in <code>self</code> to 1, from the <code>[start..=end]</code> checked ‚Ä¶\nSets the given checked <code>value</code> into the bits from the ‚Ä¶\nSets the element at the given 2D coordinates in the ‚Ä¶\nSets the element at the given 2D coordinates in the ‚Ä¶\nChanges the current working directory to the specified ‚Ä¶\nCapture mouse cursor to the current window On WASM this ‚Ä¶\nReturns a version of the angle with the given <code>direction</code>.\nSets the angle to the given <code>direction</code>.\nReturns a version of the angle with the given <code>direction</code> ‚Ä¶\nUpdates <code>self.extension</code> to <code>Some(extension)</code> or to <code>None</code> if ‚Ä¶\nUpdates <code>self.file_name</code> to <code>file_name</code>.\nChanges the flow information associated with this socket ‚Ä¶\nAssign to each reference in <code>self</code> from the <code>from</code> iterator, ‚Ä¶\nAssign to each reference in <code>self</code> from the <code>from</code> iterator, ‚Ä¶\nSets the full screen mode.\nRegisters a custom panic hook, replacing the previously ‚Ä¶\nSets the args into an <code>m128i</code>, first arg is the high lane.\nSet <code>i16</code> args into an <code>m256i</code> lane.\nSets the args into an <code>m128i</code>, first arg is the high lane.\nSet an <code>i32</code> as the low 32-bit lane of an <code>m128i</code>, other lanes ‚Ä¶\nSet <code>i32</code> args into an <code>m256i</code> lane.\nSets the args into an <code>m128i</code>, first arg is the high lane.\nSet an <code>i64</code> as the low 64-bit lane of an <code>m128i</code>, other lanes ‚Ä¶\nSet <code>i64</code> args into an <code>m256i</code> lane.\nSets the args into an <code>m128i</code>, first arg is the high lane.\nSet <code>i8</code> args into an <code>m256i</code> lane.\nSet whether to <code>interpolate</code> the scaled pixels.\nSet whether to <code>maintain</code> the aspect ratio on window resize.\n(setInterval) Calls a function repeatedly at a fixed ‚Ä¶\nChanges the IP address associated with this socket address.\nChanges the IP address associated with this socket address.\nChanges the IP address associated with this socket address.\nTruncates or extends the underlying file, updating the ‚Ä¶\nForces the length of the vector to <code>new_len</code>.\nSets the number of bytes that can be read before this ‚Ä¶\nSets the value of the <code>SO_LINGER</code> option on this socket.\nSets the global logger to a <code>&amp;&#39;static Log</code>.\nA thread-unsafe version of set_logger.\nSets the args into an <code>m128</code>, first arg is the high lane.\nSet <code>m128</code> args into an <code>m256</code>.\nSets the args into an <code>m128</code>, first arg is the high lane.\nSets the args into an <code>m128d</code>, first arg is the high lane.\nSet <code>m128d</code> args into an <code>m256d</code>.\nSets the args into the low lane of a <code>m128d</code>.\nSet <code>m128i</code> args into an <code>m256i</code>.\nSet <code>f32</code> args into an <code>m256</code> lane.\nSet <code>f64</code> args into an <code>m256d</code> lane.\nSet whether to <code>maintain</code> the aspect ratio on window resize.\nSet whether to <code>maintain</code> the aspect ratio on window resize.\nSets the global maximum log level.\nChanges the modification time of the underlying file.\nSet the last modified time of a file.\nSet the mouse cursor icon.\nSets the value of the <code>IP_MULTICAST_LOOP</code> option for this ‚Ä¶\nSets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this ‚Ä¶\nSets the value of the <code>IP_MULTICAST_TTL</code> option for this ‚Ä¶\n(name) Sets the current window <code>name</code>.\nSets the angle as negative (no-op for unsigned).\nSets the angle as negative.\nSets the angle as negative.\nSets the value of the <code>TCP_NODELAY</code> option on this socket.\nMoves this TCP stream into or out of nonblocking mode.\nMoves this TCP stream into or out of nonblocking mode.\nMoves this UDP socket into or out of nonblocking mode.\nSets the angle normalized (no-op for integer ‚Ä¶\nSets the angle normalized (no-op for integer ‚Ä¶\nSets the angle normalized to the non-inclusive range -1 to ‚Ä¶\nSets a panic handler based on the chosen strategy.\nChanges the permissions on the underlying file.\nChanges the permissions found on a file or a directory.\nChanges the port number associated with this socket ‚Ä¶\nChanges the port number associated with this socket ‚Ä¶\nChanges the port number associated with this socket ‚Ä¶\nSets the position of this cursor.\nSet the window position.\nSets the angle as positive.\nSets the angle as positive.\nSets the angle as positive (no-op for unsigned).\nSets the bits in <code>self</code> to 1, from the <code>[start..=end]</code> range.\nSets the read timeout to the timeout specified.\nSets the read timeout to the timeout specified.\nModifies the readonly flag for this set of permissions. If ‚Ä¶\nSets the read-only flag, returning the previous read-only ‚Ä¶\nSets the read-only flag, returning the previous read-only ‚Ä¶\nSets the args into an <code>m128i</code>, first arg is the low lane.\nSet <code>i16</code> args into an <code>m256i</code> lane.\nSets the args into an <code>m128i</code>, first arg is the low lane.\nSet <code>i32</code> args into an <code>m256i</code> lane.\nSet <code>i64</code> args into an <code>m256i</code> lane.\nSets the args into an <code>m128i</code>, first arg is the low lane.\nSet <code>i8</code> args into an <code>m256i</code> lane.\nSets the args into an <code>m128</code>, first arg is the low lane.\nSet <code>m128</code> args into an <code>m256</code>.\nSets the args into an <code>m128d</code>, first arg is the low lane.\nSet <code>m128d</code> args into an <code>m256d</code>.\nSet <code>m128i</code> args into an <code>m256i</code>.\nSet <code>f32</code> args into an <code>m256</code> lane.\nSet <code>f64</code> args into an <code>m256d</code> lane.\nSets the element at the given 2D coordinates in the ‚Ä¶\nSets the element at the given 2D coordinates in the ‚Ä¶\nChanges the scope ID associated with this socket address.\nSets the bit corresponding to a <code>signal</code> in the <code>sig</code> array.\nSet the application‚Äôs window size.\nSplats the <code>i16</code> to all lanes of the <code>m128i</code>.\nSets the lowest <code>i16</code> lane of an <code>m128i</code> as all lanes of an ‚Ä¶\nSplat an <code>i16</code> arg into an <code>m256i</code> lane.\nSplats the <code>i32</code> to all lanes of the <code>m128i</code>.\nSets the lowest <code>i32</code> lane of an <code>m128i</code> as all lanes of an ‚Ä¶\nSplat an <code>i32</code> arg into an <code>m256i</code> lane.\nSplats the <code>i64</code> to both lanes of the <code>m128i</code>.\nSets the lowest <code>i64</code> lane of an <code>m128i</code> as all lanes of an ‚Ä¶\nSplat an <code>i64</code> arg into an <code>m256i</code> lane.\nSplats the <code>i8</code> to all lanes of the <code>m128i</code>.\nSets the lowest <code>i8</code> lane of an <code>m128i</code> as all lanes of an ‚Ä¶\nSplat an <code>i8</code> arg into an <code>m256i</code> lane.\nSplats the value to all lanes.\nSets the lowest lane of an <code>m128</code> as all lanes of an <code>m256</code>.\nSplats the args into both lanes of the <code>m128d</code>.\nSets the lowest lane of an <code>m128d</code> as all lanes of an <code>m256d</code>.\nSplat an <code>f32</code> arg into an <code>m256</code> lane.\nSplat an <code>f64</code> arg into an <code>m256d</code> lane.\nSets the current termios <code>state</code>.\n(setTimeout) Calls a function after a delay in ‚Ä¶\nChanges the timestamps of the underlying file.\nSets the value for the <code>IP_TTL</code> option on this socket.\nSets the value for the <code>IP_TTL</code> option on this socket.\nSets the value for the <code>IP_TTL</code> option on this socket.\nSets the element at the given 2D coordinates in the ‚Ä¶\nSets the element at the given 2D coordinates in the ‚Ä¶\nSets the given <code>value</code> into the bits from the <code>[start..=end]</code> ‚Ä¶\nSets the given <code>value</code> into the bits from the <code>[start..=end]</code> ‚Ä¶\nSets the environment variable <code>key</code> to the value <code>value</code> for ‚Ä¶\nSets the write timeout to the timeout specified.\nSets the write timeout to the timeout specified.\n<em><code>s</code>kip <code>f</code>ormatting</em> macro.\nShift all <code>u16</code> lanes to the left by the <code>count</code> in the lower ‚Ä¶\nLanewise <code>u16</code> shift left by the lower <code>u64</code> lane of <code>count</code>.\nShift all <code>u32</code> lanes to the left by the <code>count</code> in the lower ‚Ä¶\nShift all <code>u32</code> lanes left by the lower <code>u64</code> lane of <code>count</code>.\nShift all <code>u64</code> lanes to the left by the <code>count</code> in the lower ‚Ä¶\nShift all <code>u64</code> lanes left by the lower <code>u64</code> lane of <code>count</code>.\nShift <code>u32</code> values to the left by <code>count</code> bits.\nLanewise <code>u32</code> shift left by the matching <code>i32</code> lane in <code>count</code>.\nShift <code>u64</code> values to the left by <code>count</code> bits.\nLanewise <code>u64</code> shift left by the matching <code>u64</code> lane in <code>count</code>.\nShifts all <code>u16</code> lanes left by an immediate.\nShifts all <code>u16</code> lanes left by an immediate.\nShifts all <code>u32</code> lanes left by an immediate.\nShifts all <code>u32</code> lanes left by an immediate.\nShifts both <code>u64</code> lanes left by an immediate.\nShifts all <code>u64</code> lanes left by an immediate.\nDetermines if rebuilding the table would improve ‚Ä¶\nShow/hide onscreen keyboard. Only works on Android right ‚Ä¶\nShow or hide the mouse cursor\nShift each <code>i16</code> lane to the right by the <code>count</code> in the lower ‚Ä¶\nLanewise <code>i16</code> shift right by the lower <code>i64</code> lane of <code>count</code>.\nShift each <code>i32</code> lane to the right by the <code>count</code> in the lower ‚Ä¶\nLanewise <code>i32</code> shift right by the lower <code>i64</code> lane of <code>count</code>.\nShift each <code>u16</code> lane to the right by the <code>count</code> in the lower ‚Ä¶\nLanewise <code>u16</code> shift right by the lower <code>u64</code> lane of <code>count</code>.\nShift each <code>u32</code> lane to the right by the <code>count</code> in the lower ‚Ä¶\nLanewise <code>u32</code> shift right by the lower <code>u64</code> lane of <code>count</code>.\nShift each <code>u64</code> lane to the right by the <code>count</code> in the lower ‚Ä¶\nLanewise <code>u64</code> shift right by the lower <code>u64</code> lane of <code>count</code>.\nShift <code>i32</code> values to the right by <code>count</code> bits.\nLanewise <code>i32</code> shift right by the matching <code>i32</code> lane in <code>count</code>.\nShift <code>u32</code> values to the left by <code>count</code> bits.\nLanewise <code>u32</code> shift right by the matching <code>u32</code> lane in <code>count</code>.\nShift <code>u64</code> values to the left by <code>count</code> bits.\nLanewise <code>u64</code> shift right by the matching <code>i64</code> lane in <code>count</code>.\nShifts all <code>i16</code> lanes right by an immediate.\nShifts all <code>i16</code> lanes left by an immediate.\nShifts all <code>i32</code> lanes right by an immediate.\nShifts all <code>i32</code> lanes left by an immediate.\nShifts all <code>u16</code> lanes right by an immediate.\nShifts all <code>u16</code> lanes right by an immediate.\nShifts all <code>u32</code> lanes right by an immediate.\nShifts all <code>u32</code> lanes right by an immediate.\nShifts both <code>u64</code> lanes right by an immediate.\nShifts all <code>u64</code> lanes right by an immediate.\nShrinks the capacity of the map with a lower limit. It ‚Ä¶\nDiscards capacity with a lower bound.\nShrinks the capacity of the set with a lower limit. It ‚Ä¶\nShrinks the capacity of the <code>OsString</code> with a lower bound.\nShrinks the capacity of the deque with a lower bound.\nInvokes <code>shrink_to</code> on the underlying instance of <code>OsString</code>.\nShrinks the capacity of the vector with a lower bound.\nShrinks the capacity of this <code>String</code> with a lower bound.\nShrinks the capacity of the map as much as possible. It ‚Ä¶\nDiscards as much additional capacity as possible.\nShrinks the capacity of the set as much as possible. It ‚Ä¶\nShrinks the capacity of the <code>OsString</code> to match its length.\nShrinks the capacity of the deque as much as possible.\nInvokes <code>shrink_to_fit</code> on the underlying instance of ‚Ä¶\nShrinks the capacity of the vector as much as possible.\nShrinks the capacity of this <code>String</code> to match its length.\nShuffle the <code>f32</code> lanes from <code>$a</code> and <code>$b</code> together using an ‚Ä¶\nShuffle the <code>f64</code> lanes from <code>$a</code> and <code>$b</code> together using an ‚Ä¶\nShuffle 128 bits of integer data from <code>$a</code> and <code>$b</code> using an ‚Ä¶\nShuffle the <code>i32</code> lanes in <code>$a</code> using an immediate control ‚Ä¶\nShuffle the <code>f64</code> lanes from <code>$a</code> using an immediate control ‚Ä¶\nShuffle the high <code>i16</code> lanes in <code>$a</code> using an immediate ‚Ä¶\nShuffle the high <code>i16</code> lanes in <code>$a</code> using an immediate ‚Ä¶\nShuffle the low <code>i16</code> lanes in <code>$a</code> using an immediate control ‚Ä¶\nShuffle the low <code>i16</code> lanes in <code>$a</code> using an immediate control ‚Ä¶\nShuffle the <code>i32</code> lanes in <code>a</code> using an immediate control ‚Ä¶\nShuffle the <code>f64</code> lanes in <code>$a</code> using an immediate control ‚Ä¶\nShuffle <code>f32</code> values in <code>a</code> using <code>i32</code> values in <code>v</code>.\nShuffle <code>f32</code> values in <code>a</code> using <code>i32</code> values in <code>v</code>.\nShuffle <code>f64</code> lanes in <code>a</code> using bit 1 of the <code>i64</code> lanes in <code>v</code>\nShuffle <code>f64</code> lanes in <code>a</code> using bit 1 of the <code>i64</code> lanes in <code>v</code>.\nShuffle <code>f32</code> lanes in <code>a</code> using <code>i32</code> values in <code>v</code>.\nShuffle <code>i32</code> lanes in <code>a</code> using <code>i32</code> values in <code>v</code>.\nShuffle <code>i8</code> lanes in <code>a</code> using <code>i8</code> values in <code>v</code>.\nShuffle <code>i8</code> lanes in <code>a</code> using <code>i8</code> values in <code>v</code>.\nShuffle the <code>f32</code> lanes from <code>a</code> and <code>b</code> together using an ‚Ä¶\nShuffle the <code>f64</code> lanes from <code>a</code> and <code>b</code> together using an ‚Ä¶\nShuts down the read, write, or both halves of this ‚Ä¶\nAn array of signals.\nRegisters multiple signals using a handler function.\nRegisters multiple signals using a handler function ‚Ä¶\nReturns the <code>Sign</code> of <code>self</code>.\nReturns the sign of this formatter (<code>+</code> or <code>-</code>).\nApplies the sign of <code>i16</code> values in <code>b</code> to the values in <code>a</code>.\nLanewise <code>a * signum(b)</code> with lanes as <code>i16</code>\nApplies the sign of <code>i32</code> values in <code>b</code> to the values in <code>a</code>.\nLanewise <code>a * signum(b)</code> with lanes as <code>i32</code>\nApplies the sign of <code>i8</code> values in <code>b</code> to the values in <code>a</code>.\nLanewise <code>a * signum(b)</code> with lanes as <code>i8</code>\nDetermines if the <code>0</code> flag was specified.\nDetermines if the <code>-</code> flag was specified.\nReturns the <code>Sign</code> of <code>self</code>, except for zero.\nDetermines if the <code>+</code> flag was specified.\nTermination by signal N.\nReturns the signal number.\nA number that represents the sign of <code>self</code>.\nReturns a number that represents the sign of this duration.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nReturns a number representing sign of <code>self</code>.\nThe sine.\nBoth the sine and cosine.\nReturns the duration between this and an earlier <code>JsInstant</code>.\nThe hyperbolic sine.\nCreates an instance of a writer which will successfully ‚Ä¶\nReturns the computed encoded size.\nSets the size (width, height).\nReturns the size of the interval, if finite.\nReturns the total size of this file in bytes.\nReturns the size in bytes of <code>LinuxSigset</code>.\nThe minimum size in bytes for a memory block of this ‚Ä¶\nReturns the bounds on the remaining length of the iterator.\nReturns the bounds on the remaining length of the iterator.\nReturns the bounds on the remaining length of the iterator.\nReturns the bounds on the remaining length of the iterator.\nReturns the bounds on the remaining length of the iterator.\nReturns the bounds on the remaining length of the iterator.\nReturns the bounds on the remaining length of the iterator.\nReturns the bounds on the remaining length of the iterator.\nReturns the size of a type in bytes.\nReturns the size of an expression in bytes.\nReturns the size of the pointed-to value in bytes. See ‚Ä¶\nReturns the ratio of a <code>usize</code> in respect to <code>other_size</code>.\nReturns the total size of this file in bytes.\nCreates an iterator that skips the first <code>n</code> elements.\nCreates an iterator that skips the first <code>n</code> elements.\nCreates an iterator that skips the first <code>n</code> elements.\nCreates an iterator that skips the first <code>n</code> elements.\nCreates an iterator that skips the first <code>n</code> elements.\nCreates an iterator that skips the first <code>n</code> elements.\nCreates an iterator that skips the first <code>n</code> elements.\nCreates an iterator that skips the first <code>n</code> elements.\nSkips all bytes until the delimiter <code>byte</code> or EOF is reached.\nSkips all bytes until the delimiter <code>byte</code> or EOF is reached.\nCreates an iterator that <code>skip</code>s elements based on a ‚Ä¶\nCreates an iterator that <code>skip</code>s elements based on a ‚Ä¶\nCreates an iterator that <code>skip</code>s elements based on a ‚Ä¶\nCreates an iterator that <code>skip</code>s elements based on a ‚Ä¶\nCreates an iterator that <code>skip</code>s elements based on a ‚Ä¶\nCreates an iterator that <code>skip</code>s elements based on a ‚Ä¶\nCreates an iterator that <code>skip</code>s elements based on a ‚Ä¶\nCreates an iterator that <code>skip</code>s elements based on a ‚Ä¶\nSuspends execution of calling thread for the given <code>duration</code>‚Ä¶\nPuts the current thread to sleep for at least the ‚Ä¶\nPuts the current thread to sleep for at least the ‚Ä¶\nA more compact <code>Thread::sleep</code>.\nSuspends execution of calling thread for the given ‚Ä¶\nPuts the current thread to sleep for at least the ‚Ä¶\nPuts the current thread to sleep for at least the ‚Ä¶\nPuts the current thread to sleep for at least the ‚Ä¶\nPuts the current thread to sleep for at least the ‚Ä¶\nPuts the current thread to sleep for at least the ‚Ä¶\nPuts the current thread to sleep for at least the ‚Ä¶\nGets a mutable pointer to the first element of the array.\nGets a pointer to the first element of the array.\nTakes a substring based on a range that corresponds to the ‚Ä¶\nCreates a non-null raw slice from a thin pointer and a ‚Ä¶\nForms a raw slice from a pointer and a length.\nForms a mutable raw slice from a mutable pointer and a ‚Ä¶\nConverts <code>&amp;[T]</code> to <code>[U; N]</code> when <code>U</code> implements <code>From&lt;T&gt;</code>.\nConverts <code>&amp;[T]</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements <code>From&lt;T&gt;</code>.\nReturns a left subslice of <code>slice</code> with the given maximum <code>len</code>‚Ä¶\nReturns a mutable left subslice of <code>slice</code> with the given ‚Ä¶\nReturns a middle subslice of <code>slice</code> with the given maximum ‚Ä¶\nReturns a mutable middle subslice of <code>slice</code> with the given ‚Ä¶\nReturns a middle subslice of <code>slice</code> with the given maximum ‚Ä¶\nReturns a mutable middle subslice of <code>slice</code> with the given ‚Ä¶\nReturns a right subslice of <code>slice</code> with the given maximum ‚Ä¶\nReturns a mutable right subslice of <code>slice</code> with the given ‚Ä¶\nTries to convert <code>&amp;[T]</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements ‚Ä¶\n‚öñÔ∏è Wraps the given <code>OptRes</code> <code>value</code> in a <code>Some</code><code>(</code><code>Ok</code><code>(value))</code>.\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSort all iterator elements into a new iterator in ‚Ä¶\nSound capabilities.\nReturns the lower-level source of this error, if any.\nReturns the lower-level source of this error, if any.\nReturns the lower-level source of this error, if any.\nReturns an iterator starting with the current error and ‚Ä¶\nReturns the remaining spare capacity of the vector as a ‚Ä¶\nSpawns a new thread within a scope, returning a ‚Ä¶\nExecutes the command as a child process, returning a ‚Ä¶\nSpawns a new thread by taking ownership of the <code>Builder</code>, ‚Ä¶\nSpawns a new JavaScript Web Worker from a script.\nSpawns a new thread, returning a <code>ThreadJoinHandle</code> for it.\nSpawns a new thread, returning a <code>ThreadJoinHandle</code> for it.\nSpawns a new scoped thread using the settings set through ‚Ä¶\nSpawns a new thread without any lifetime restrictions by ‚Ä¶\n<code>core</code> Signals the processor that it is running in a ‚Ä¶\nSplat the lowest 16-bit lane across the entire 128 bits.\nSplat the lowest 32-bit lane across the entire 128 bits.\nSplat the lowest 64-bit lane across the entire 128 bits.\nSplat the lowest 8-bit lane across the entire 128 bits.\nSplat the lowest <code>f32</code> across all four lanes.\nSplat the lower <code>f64</code> across both lanes of <code>m128d</code>.\nSplat the 128-bits across 256-bits.\nCreates a splicing iterator that replaces the specified ‚Ä¶\nThe integral and fractional parts ox <code>self</code>.\nReturns an iterator over the contents of this reader split ‚Ä¶\nReturns an iterator over the contents of this reader split ‚Ä¶\nSplits the underlying slice at the cursor position and ‚Ä¶\nSets the method for largest dimension for splitting.\nSplits the <code>UnixTimeI64</code> into <code>{ y, mo, d, h, m, s }</code>.\nSplits the <code>UnixTimeU32</code> into <code>{ y, mo, d, h, m, s }</code>.\nReturns vector content as a slice of <code>T</code>, along with the ‚Ä¶\nSets the <code>split</code> field to <code>SixelSplit::Auto</code>.\nReturns this tuple with the head element splitted from the ‚Ä¶\nSets the <code>split</code> field to <code>SixelSplit::Lum</code>.\nSplits the underlying slice at the cursor position and ‚Ä¶\nSplits a number of <code>nanoseconds</code> in <code>{ s, ms, ¬µs, ns }</code>.\nSplits a number of <code>nanoseconds</code> in <code>{ s, ms, ¬µs, ns }</code>.\nSets the <code>split</code> field to <code>SixelSplit::Norm</code>.\nSplits the collection into two at the given key. Returns ‚Ä¶\nSplits the collection into two at the value. Returns a new ‚Ä¶\nSplits the list into two at the given index. Returns ‚Ä¶\nSplits the deque into two at the given index.\nSplits the collection into two at the given index.\nSplits the string into two at the given byte index.\nParses input according to platform conventions for the <code>PATH</code>‚Ä¶\nDecomposes a number of <code>seconds</code> in <code>{ h, m, s, ms }</code>.\nReturns this tuple with the tail element splitted from the ‚Ä¶\nThe square root.\nThe square root calculated using the fast inverse square ‚Ä¶\nLanewise <code>sqrt(a)</code>.\nLow lane <code>sqrt(a)</code>, other lanes unchanged.\nLanewise <code>sqrt(a)</code>.\nLow lane <code>sqrt(b)</code>, upper lane is unchanged from <code>a</code>.\nLanewise <code>sqrt</code> on <code>f64</code> lanes.\nLanewise <code>sqrt</code> on <code>f64</code> lanes.\nThe square root calculated using the Newton-Raphson method.\nLast access time (nanoseconds).\nLast access time (nanoseconds).\nBlock size for filesystem I/O.\nNumber of 512B blocks allocated.\nLast status change time.\nLast status change time (nanoseconds).\nDevice ID containing file.\nGroup ID of owner.\nInode number.\nFile type and mode.\nLast modification time.\nLast modification time (nanoseconds).\nHard link count.\nDevice ID (if special file).\nTotal size, in bytes.\nUser ID of owner.\nRemove an element from the (back of the) stack.\nRemove an element from the back of the stack (calls ‚Ä¶\nRemove an element from the back of the stack (calls ‚Ä¶\nRemove an element from the front of the stack.\nAdd an element to the (back of the) stack.\nRemove an element from the back of the stack (calls ‚Ä¶\nRemove an element from the back of the stack (calls ‚Ä¶\nAdd an element to the front of the stack.\nSets the size of the stack (in bytes) for the new thread.\nReturns the lower bound of the range (inclusive).\nThe lower bound of the range (inclusive).\nThe lower bound of the range (inclusive).\nStart index bound.\nDetermines whether <code>base</code> is a prefix of <code>self</code>.\nReturns a new up-to-date <code>WebWindowState</code>.\nThe state of the key (pressed or released).\nThe state of the key (pressed or released).\nThe state of the mouse button (pressed, released, moved).\nThe state of the pointer (pressed, released, moved).\nGets a pinning mutable reference from a static mutable ‚Ä¶\nGets a pinning reference from a <code>&amp;&#39;static</code> reference.\nReturns the status of this backtrace, indicating whether ‚Ä¶\nExecutes a command as a child process, waiting for it to ‚Ä¶\nReturns the exit value or signal.\nThe status (exit code) of the process.\nConstructs a new handle to the standard error of the ‚Ä¶\nConfiguration for the child process‚Äôs standard error ‚Ä¶\nThe handle for reading from the child‚Äôs standard error ‚Ä¶\nThe data that the process wrote to stderr.\nConstructs a new handle to the standard input of the ‚Ä¶\nConfiguration for the child process‚Äôs standard input ‚Ä¶\nThe handle for writing to the child‚Äôs standard input ‚Ä¶\nConstructs a new handle to the standard output of the ‚Ä¶\nConfiguration for the child process‚Äôs standard output ‚Ä¶\nThe handle for reading from the child‚Äôs standard output ‚Ä¶\nThe data that the process wrote to stdout.\nCreates an iterator starting at the same point, but ‚Ä¶\nCreates an iterator starting at the same point, but ‚Ä¶\nCreates an iterator starting at the same point, but ‚Ä¶\nCreates an iterator starting at the same point, but ‚Ä¶\nCreates an iterator starting at the same point, but ‚Ä¶\nCreates an iterator starting at the same point, but ‚Ä¶\nCreates an iterator starting at the same point, but ‚Ä¶\nCreates an iterator starting at the same point, but ‚Ä¶\nStops this Web Worker.\nStores a value into the <code>Atomic</code>.\nStores a value into the bool.\nStores a value into the pointer.\nStores a value into the atomic integer.\nStores a value into the atomic integer.\nStores a value into the atomic integer.\nStores a value into the atomic integer.\nStores a value into the atomic integer.\nStores a value into the atomic integer.\nStores a value into the atomic integer.\nStores a value into the atomic integer.\nStores a value into the atomic float.\nStores a value into the atomic integer.\nStores a value into the atomic integer.\nStores a value into the atomic float.\nStores a value into the atomic integer.\nStores a value into the atomic integer.\nStores the high lane value to the reference given.\nStores the value to the reference given.\nStores the value to the reference given.\nStores the low lane value to the reference given.\nStores the value to the reference given.\nStores the low lane value to the reference given.\nStores the value to the reference given.\nStore data from a register into memory.\nStore data from a register into memory.\nStore data from a register into memory.\nStores the <code>i32</code> masked lanes given to the reference.\nStores the <code>i32</code> masked lanes given to the reference.\nStores the <code>i32</code> masked lanes given to the reference.\nStores the <code>i32</code> masked lanes given to the reference.\nStore data from a register into memory according to a mask.\nStore data from a register into memory according to a mask.\nStore data from a register into memory according to a mask.\nStore data from a register into memory according to a mask.\nStores the value to the reference given in reverse order.\nStores the value to the reference given.\nStores the low lane value to all lanes of the reference ‚Ä¶\nStores the low lane value to all lanes of the reference ‚Ä¶\nStore data from a register into memory.\nStore data from a register into memory.\nStore data from a register into memory.\nStores the value to the reference given.\nStores the value to the reference given.\nStores the value to the reference given.\nStore data from a register into memory.\nStore data from a register into memory.\nStore data from a register into memory.\nùêì <code>&amp;str</code> compile-time operations, namespaced from the ‚Ä¶\nReturns the length of this file (in bytes).\nReturns the length of this stream (in bytes).\nReturns the length of this stream (in bytes).\nReturns the current seek position from the start of the ‚Ä¶\nReturns the current seek position from the start of the ‚Ä¶\nReturns the current seek position from the start of the ‚Ä¶\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer addition. Computes <code>self + rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nStrict integer substration. Computes <code>self - rhs</code>.\nThe step size per dimension.\n<code>core</code> Stringifies its arguments.\nReturns a path that, when joined onto <code>base</code>, yields <code>self</code>.\n(strokeRect) Draws a rectangular outline.\n(strokeStyle) Sets the color or style for lines.\n(strokeText) Draws text outline at the specified position.\nGets the number of strong (<code>Arc</code>) pointers to this ‚Ä¶\nGets the number of strong (<code>Arc</code>) pointers pointing to this ‚Ä¶\nGets the number of strong (<code>Rc</code>) pointers to this allocation.\nGets the number of strong (<code>Rc</code>) pointers pointing to this ‚Ä¶\nPerforms the <code>-</code> operation.\nSubtracts from the current value.\nSubtracts from the current value.\nSubtracts from the current value.\nSubtracts from the current value.\nSubtracts from the current value.\nSubtracts from the current value.\nSubtracts from the current value.\nSubtracts from the current value.\nSubtracts from the current value.\nSubtracts from the current value.\nSubtracts from the current value.\nSubtracts from the current value.\nReturns the difference of <code>self</code> and <code>rhs</code> as a new ‚Ä¶\nSubtracts an offset from a pointer (convenience for ‚Ä¶\nReturns the difference of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>‚Ä¶\nSubtracts another vector from this vector.\nReturns the amount of time elapsed from another instant to ‚Ä¶\nPerforms the <code>-=</code> operation.\nModifies this set to contain the difference of <code>self</code> and <code>rhs</code>‚Ä¶\nPanics\nSubtract horizontal pairs of <code>i16</code> values, pack the outputs ‚Ä¶\nHorizontal <code>a - b</code> with lanes as <code>i16</code>.\nSubtract horizontal pairs of <code>i32</code> values, pack the outputs ‚Ä¶\nHorizontal <code>a - b</code> with lanes as <code>i32</code>.\nSubtract each lane horizontally, pack the outputs as <code>a</code> ‚Ä¶\nSubtract each lane horizontally, pack the outputs as <code>a</code> ‚Ä¶\nSubtract adjacent <code>f32</code> lanes.\nSubtract adjacent <code>f64</code> lanes.\nSubtract horizontal pairs of <code>i16</code> values, saturating, pack ‚Ä¶\nHorizontal saturating <code>a - b</code> with lanes as <code>i16</code>.\nLanewise <code>a - b</code> with lanes as <code>i16</code>.\nLanewise <code>a - b</code> with lanes as <code>i16</code>.\nLanewise <code>a - b</code> with lanes as <code>i32</code>.\nLanewise <code>a - b</code> with lanes as <code>i32</code>.\nLanewise <code>a - b</code> with lanes as <code>i64</code>.\nLanewise <code>a - b</code> with lanes as <code>i64</code>.\nLanewise <code>a - b</code> with lanes as <code>i8</code>.\nLanewise <code>a - b</code> with lanes as <code>i8</code>.\nLanewise <code>a - b</code>.\nLow lane <code>a - b</code>, other lanes unchanged.\nLanewise <code>a - b</code>.\nLowest lane <code>a - b</code>, high lane unchanged.\nLanewise <code>a - b</code> with <code>f32</code> lanes.\nLanewise <code>a - b</code> with <code>f64</code> lanes.\nLanewise saturating <code>a - b</code> with lanes as <code>i16</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>i16</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>i8</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>i8</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>u16</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>u16</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>u8</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>u8</code>.\nExtracts a <code>(D-1)x(D-1)</code> submatrix by removing the given row ‚Ä¶\nExtracts a <code>(D-1)x(D-1)</code> submatrix by removing the given row ‚Ä¶\nExtracts a <code>(D-1)x(D-1)</code> submatrix by removing the given row ‚Ä¶\nExtracts a <code>(D-1)x(D-1)</code> submatrix by removing the given row ‚Ä¶\nExtracts a <code>(D-1)x(D-1)</code> submatrix by removing the given row ‚Ä¶\nExtracts a <code>(D-1)x(D-1)</code> submatrix by removing the given row ‚Ä¶\nExtracts a <code>(D-1)x(D-1)</code> submatrix by removing the given row ‚Ä¶\nExtracts a <code>(D-1)x(D-1)</code> submatrix by removing the given row ‚Ä¶\nComputes the determinant of a square matrix using Laplace ‚Ä¶\nComputes the determinant of a square matrix using Laplace ‚Ä¶\nComputes the determinant of a square matrix using Laplace ‚Ä¶\nComputes the determinant of a square matrix using Laplace ‚Ä¶\nComputes the determinant of a square matrix using Laplace ‚Ä¶\nComputes the determinant of a square matrix using Laplace ‚Ä¶\nComputes the determinant of a square matrix using Laplace ‚Ä¶\nComputes the determinant of a square matrix using Laplace ‚Ä¶\nReturns the fractional part of this duration in whole ‚Ä¶\nReturns the fractional part of this <code>Duration</code>, in whole ‚Ä¶\nReturns the fractional part of this duration in whole ‚Ä¶\nReturns the fractional part of this <code>Duration</code>, in whole ‚Ä¶\nReturns the fractional part of this duration in whole ‚Ä¶\nReturns the fractional part of this <code>Duration</code>, in ‚Ä¶\nWas termination successful? Signal termination is not ‚Ä¶\nCreates an iterator where each successive item is computed ‚Ä¶\nTakes an iterator and generates <code>Self</code> from the elements by ‚Ä¶\nSums the elements of an iterator.\nSums the elements of an iterator.\nSums the elements of an iterator.\nSums the elements of an iterator.\nSums the elements of an iterator.\nSums the elements of an iterator.\nSums the elements of an iterator.\nSums the elements of an iterator.\nTakes each element in the <code>Iterator</code>: if it is a <code>None</code>, no ‚Ä¶\nTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no ‚Ä¶\nIterate over the entire iterator and add all the elements.\nIterate over the entire iterator and add all the elements.\nCompute ‚Äúsum of <code>u8</code> absolute differences‚Äù.\nCompute ‚Äúsum of <code>u8</code> absolute differences‚Äù.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nReturns both <code>state</code> and <code>value</code> as a tuple.\nAsserts both the <code>state</code> and <code>value</code> matches the corresponding ‚Ä¶\nAsserts the <code>state</code> and <code>value</code> equals the corresponding ‚Ä¶\nAsserts the <code>state</code> and <code>value</code> equals the corresponding ‚Ä¶\nAsserts both the <code>state</code> and <code>value</code> matches the corresponding ‚Ä¶\nTransforms itself into a tuple, in compile-time.\nReplaces the <code>state</code> self with a <code>new_state</code> and the <code>value</code> ‚Ä¶\nReturns <code>true</code> if the current <code>state</code> and <code>value</code> equals the ‚Ä¶\nApplies applies a separate mapping function to the state ‚Ä¶\nReturns exclusive references to both <code>state</code> and <code>value</code>.\nReturns shared references to both <code>state</code> and <code>value</code>.\nReplaces the existing <code>state</code> and <code>value</code> with <code>new_state</code> and ‚Ä¶\nStores a value into the <code>Atomic</code>, returning the old value.\nStores a value into the bool, returning the previous value.\nStores a value into the pointer, returning the previous ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic float, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic float, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nStores a value into the atomic integer, returning the ‚Ä¶\nSwaps the top two stack elements.\nSwaps the values at two mutable locations of the same ‚Ä¶\nSwaps elements at indices <code>i</code> and <code>j</code>.\nSwaps the values at two locations, without deinitializing ‚Ä¶\nSwaps the values at two mutable locations of the same ‚Ä¶\nSwaps the values of two <code>Cell</code>s.\nSwaps the wrapped value of <code>self</code> with the wrapped value of ‚Ä¶\nSwaps the values at two indices.\nSwaps the top two pair stack elements.\nSwaps the last two pairs of elements at the back of the ‚Ä¶\nUnchecked version of <code>swap2_back</code>.\nSwaps the front and back pairs of elements.\nSwaps the first two pairs of elements at the front of the ‚Ä¶\nUnchecked version of <code>swap2_back</code>.\nSwaps the last two elements at the back of the destaque.\nUnchecked version of <code>swap_back</code>.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nReverses the byte order of the integer.\nSwaps the front and back elements.\nSwaps the first two elements at the front of the destaque.\nUnchecked version of <code>swap_front</code>.\nOptional swap interval (vertical sync).\nSwaps the two regions of memory beginning at <code>x</code> and <code>y</code>. Must ‚Ä¶\nRemoves an element from the vector and returns it.\nRemoves an element from anywhere in the deque and returns ‚Ä¶\nRemoves an element from anywhere in the deque and returns ‚Ä¶\nReturns the symbol of the prefix.\nReturns the ASCII symbol of the prefix.\nQueries the metadata about a file without following ‚Ä¶\nQueries the metadata about a file without following ‚Ä¶\nVisits the values representing the symmetric difference, ‚Ä¶\nVisits the elements representing the symmetric difference, ‚Ä¶\nAttempts to sync all OS-internal file content and metadata ‚Ä¶\nCreates a new synchronous, bounded channel.\nThis function is similar to <code>sync_all</code>, except that it might ‚Ä¶\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a set of actions within a synchronous update.\nPerforms a close syscall.\nPerforms a dup syscall.\nPerforms a dup2 syscall.\nPerforms an exit syscall.\nPerforms a fcntl syscall.\nPerforms an fstat syscall.\nPerforms a getdents syscall.\nPerforms a getpid syscall.\nPerforms a getrandom syscall.\nPerforms an ioctl syscall.\nPerforms an lseek syscall.\nPerforms a nanosleep syscall.\nPerforms an open syscall.\nPerforms a pipe syscall.\nPerforms a pipe2 syscall.\nPerforms a read syscall.\nPerforms an rt_sigaction syscall.\nPerforms a stat syscall.\nPerforms a write syscall.\nSystem capabilities.\nReturns a shared reference to the tail of this tuple.\nConsumes the iterator and return an iterator of the last <code>n</code> ‚Ä¶\nConsumes the iterator and return an iterator of the last <code>n</code> ‚Ä¶\nReturns an exclusive reference to the tail of this tuple.\nTakes ownership of the ID data.\nTakes the contained value, leaving <code>Default::default()</code> in ‚Ä¶\nTakes the contained value, leaving <code>Default::default()</code> in ‚Ä¶\nTakes out some element at <code>index</code>, leaving <code>None</code> in its place.\nRemoves and returns the value in the set, if any, that is ‚Ä¶\nRemoves and returns the element in the set, if any, that ‚Ä¶\nCreates an adapter which will read at most <code>limit</code> bytes ‚Ä¶\nCreates an adapter which will read at most <code>limit</code> bytes ‚Ä¶\nReplaces <code>dest</code> with <code>T::default()</code>, returning the previous ‚Ä¶\nTakes the value out of this <code>OnceCell</code>, moving it back to an ‚Ä¶\nTakes the value of the cell, leaving <code>Default::default()</code> in ‚Ä¶\nTakes the wrapped value, leaving <code>Default::default()</code> in its ‚Ä¶\nTakes the value out of this <code>OnceLock</code>, moving it back to an ‚Ä¶\nCreates an iterator that yields the first <code>n</code> elements, or ‚Ä¶\nCreates an iterator that yields the first <code>n</code> elements, or ‚Ä¶\nCreates an iterator that yields the first <code>n</code> elements, or ‚Ä¶\nCreates an iterator that yields the first <code>n</code> elements, or ‚Ä¶\nCreates an iterator that yields the first <code>n</code> elements, or ‚Ä¶\nCreates an iterator that yields the first <code>n</code> elements, or ‚Ä¶\nCreates an iterator that yields the first <code>n</code> elements, or ‚Ä¶\nCreates an iterator that yields the first <code>n</code> elements, or ‚Ä¶\nTakes the value from the <code>ManuallyDrop&lt;T&gt;</code> container out.\nTakes the value out of the option, leaving a <code>None</code> in its ‚Ä¶\nGets the value of the <code>SO_ERROR</code> option on this socket.\nGets the value of the <code>SO_ERROR</code> option on this socket.\nGets the value of the <code>SO_ERROR</code> option on this socket.\nReturns the first <code>n</code> elements of the slice.\nReturns the first <code>n</code> elements of the slice.\nReturns the first <code>n</code> elements of the exclusive slice.\nReturns the first <code>n</code> elements of the slice.\nUnregisters the current panic hook, returns it and ‚Ä¶\nTakes the value out of the option, but only if the ‚Ä¶\nReturns the last <code>n</code> elements of the slice.\nReturns the last <code>n</code> elements of the slice.\nReturns the last <code>n</code> elements of the exclusive slice.\nReturns the last <code>n</code> elements of the slice.\nReturns the slice omitting the last <code>n</code> elements.\nReturns the slice omitting the last <code>n</code> elements.\nReturns the exclusive slice omitting the last <code>n</code> elements.\nReturns the slice omitting the last <code>n</code> elements.\nCreates an iterator that yields elements based on a ‚Ä¶\nCreates an iterator that yields elements based on a ‚Ä¶\nCreates an iterator that yields elements based on a ‚Ä¶\nCreates an iterator that yields elements based on a ‚Ä¶\nCreates an iterator that yields elements based on a ‚Ä¶\nCreates an iterator that yields elements based on a ‚Ä¶\nCreates an iterator that yields elements based on a ‚Ä¶\nCreates an iterator that yields elements based on a ‚Ä¶\nReturns an iterator adaptor that consumes elements while ‚Ä¶\nReturns an iterator adaptor that consumes elements while ‚Ä¶\nReturn an iterator adaptor that borrows from a <code>Clone</code>-able ‚Ä¶\nReturn an iterator adaptor that borrows from a <code>Clone</code>-able ‚Ä¶\nThe tangent.\nThe hyperbolic tangent.\nThe name of the target of the directive.\nThe name of the target of the directive.\n<code>core</code> Extracts the successful type of a [<code>TaskPoll&lt;T&gt;</code>].\nSplit into an iterator pair that both yield all elements ‚Ä¶\nSplit into an iterator pair that both yield all elements ‚Ä¶\nReturns the path of a temporary directory.\nReturns the terminal dimensions.\nTests if all bits are 1.\nReturns if all masked bits are 0, ‚Ä¶\nReturns if, among the masked bits, there‚Äôs both 0s and 1s\nCompute the bitwise of sign bit NOT of <code>a</code> and then AND with ‚Ä¶\nCompute the bitwise of sign bit NOT of <code>a</code> and then AND with ‚Ä¶\nCompute the bitwise NOT of <code>a</code> and then AND with <code>b</code>, returns ‚Ä¶\nCompute the bitwise of sign bit NOT of <code>a</code> and then AND with ‚Ä¶\nCompute the bitwise of sign bit NOT of <code>a</code> and then AND with ‚Ä¶\nCompute the bitwise NOT of <code>a</code> and then AND with <code>b</code>, returns ‚Ä¶\nComputes the bitwise AND of 256 bits in <code>a</code> and <code>b</code>, returns 1 ‚Ä¶\nComputes the bitwise of sign bitAND of 256 bits in <code>a</code> and <code>b</code>‚Ä¶\nComputes the bitwise AND of 256 bits in <code>a</code> and <code>b</code>, returns 1 ‚Ä¶\nComputes the bitwise AND of 256 bits in <code>a</code> and <code>b</code>, returns 1 ‚Ä¶\nComputes the bitwise of sign bit AND of 256 bits in <code>a</code> and <code>b</code>‚Ä¶\nComputes the bitwise of sign bit AND of 256 bits in <code>a</code> and <code>b</code>‚Ä¶\nReturns the rendered text width.\nMetal-specific note: if texture was created without ‚Ä¶\nGet OpenGL‚Äôs GLuint texture ID or metals ObjcId\nUpdate whole texture content bytes should be width * ‚Ä¶\nUpdate whole texture content bytes should be width * ‚Ä¶\nChains two orderings.\nChains the ordering with the given function.\nExtracts a handle to the underlying thread.\nExtracts a handle to the underlying thread.\n<code>std</code> Declare a new thread local storage key of type [‚Ä¶\nThe tilt of the stylus along the X-axis (-90¬∞ to 90¬∞).\nThe tilt angle of a stylus (if applicable).\nThe tilt of the stylus along the Y-axis (-90¬∞ to 90¬∞).\nThe tilt of the stylus along the Y-axis (-90¬∞ to 90¬∞).\n(time) Starts a timer with the given <code>name</code>.\n(timeEnd) Stops a timer with the given name, started with ‚Ä¶\n(timeLog) Logs a timer with the given name, started with ‚Ä¶\nThe JavaScript event timestamp.\nThe JavaScript event timestamp.\nüõ°Ô∏è The time stamp of when the event occurred.\nThe time stamp of when the event occurred.\nThe time stamp of when the event occurred.\nThe time stamp of the event.\nReturns <code>true</code> if the wait was known to have timed out.\n(setTimeout) Calls a function after a delay in ‚Ä¶\nThe timestamp of when the event occurred.\nSets the window title.\nGets the <em>Top Level Domain</em> of the application (e.g. <code>com</code> or ‚Ä¶\nMakes the current path absolute without accessing the ‚Ä¶\nConverts the string slice into an <code>Arc&lt;str&gt;</code>.\nConverts the string into an <code>Arc&lt;str&gt;</code>.\nTransmutes the <code>m128</code> to an array.\nTransmutes the <code>m128d</code> to an array.\nTransmutes the <code>m256</code> to an array.\nTransmutes the <code>m256d</code> to an array.\nConcatenates into <code>[u8; N]</code> (must have N == len()).\nConverts to <code>[u8; N]</code> (must have N == len()).\nConverts to <code>[u8; N]</code> (must have N == len()).\nConcatenates into <code>[u8; N]</code> (must have N == len()).\nConverts to <code>[u8; N]</code> (must have N == L).\nConverts to <code>[u8; N]</code> (must have N == 1).\nConverts to <code>[u8; N]</code> (must have N == len()).\nReturns some <code>LEN</code> destaqued elements as an array, or <code>None</code> ‚Ä¶\nReturns some <code>LEN</code> stacked elements as an array, or <code>None</code> if ‚Ä¶\nCopies all elements from <code>src</code> into a new fixed-size array.\nReturns the ASCII byte representation of the 8-bit color ‚Ä¶\nReturns the ASCII byte representation of the 8-bit color ‚Ä¶\nMakes a copy of the value in its ASCII lower case ‚Ä¶\nReturns a copy of this string where each character is ‚Ä¶\nMakes a copy of the value in its ASCII upper case ‚Ä¶\nReturns a copy of this string where each character is ‚Ä¶\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts <code>self</code> to big endian from the target‚Äôs endianness.\nConverts into the bit patterns of these floats (<code>[u32;4]</code>).\nConverts into the bit patterns of these doubles (<code>[u64;2]</code>).\nConverts into the bit patterns of these floats (<code>[u32;8]</code>).\nConverts into the bit patterns of these doubles (<code>[u64;4]</code>).\nConverts an IPv4 address into a <code>u32</code> representation using ‚Ä¶\nConverts an IPv6 address into a <code>u128</code> representation using ‚Ä¶\nConverts the string slice into a <code>Box&lt;str&gt;</code>.\nConverts the string into a <code>Box&lt;str&gt;</code>.\nIt just calls the method <code>String::into_boxed_str</code>.\nConverts this C string to a byte slice.\nGiven a base for encoding and a mutable byte slice, write ‚Ä¶\nConverts this C string to a byte slice containing the ‚Ä¶\nConverts this address to an <code>IpAddr::V4</code> if it is an ‚Ä¶\nConverts this address to an <code>IpAddr::V4</code> if it is an ‚Ä¶\nReturns a new allocated C-compatible, nul-terminanted ‚Ä¶\nReturns a new allocated C-compatible, nul-terminanted ‚Ä¶\nConverts the angle to a <code>custom_unit</code> which represents a ‚Ä¶\nConverts the angle to a <code>custom_unit</code> which represents a ‚Ä¶\nConverts the angle to a <code>custom_unit</code> which represents a ‚Ä¶\nConverts the angle to degrees.\nConverts the angle to degrees.\nConverts the angle to degrees.\nConverts the scalar to a digit in the given radix.\nConverts a <code>TimeDelta</code> to a <code>Duration</code> if it is non-negative. ‚Ä¶\nConvert the error to <code>LINUX_EXIT</code> with guaranteed valid ‚Ä¶\nConverts <code>Key</code> to <code>KeyFfi</code>.\nConverts <code>EventKey</code> to <code>EventKeyFfi</code>.\nConverts the current stack index size <code>IDX</code> to a <code>NEW_IDX</code>.\nConverts the current stack index size <code>IDX</code> to a <code>NEW_IDX</code>.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>(row, col)</code> into a linear index.\nConverts <code>LinuxError</code> to <code>IoError</code>.\nConverts this address to an <code>IPv4</code> address if it is either ‚Ä¶\nConverts this address to an <code>IPv4</code> address if it‚Äôs an ‚Ä¶\nConverts this address to an IPv4-compatible <code>IPv6</code> address.\nConverts this address to an IPv4-mapped <code>IPv6</code> address.\nConverts <code>TimeDelta</code> into <code>SignedDuration</code>.\nConverts a <code>TimeDelta</code> into a <code>JsInstant</code>, interpreting it as ‚Ä¶\nConverts a <code>KeyState</code> to <code>WebEventKind</code>.\nConverts <code>EventMouse</code> to <code>WebEventMouse</code>.\nConverts an EventButton to a JavaScript button index in ‚Ä¶\nConverts an <code>EventTimestamp</code> to a <code>JsInstant</code>.\nConverts a <code>EventButtonState</code> into a <code>WebEventKind</code>.\nConverts a <code>EventButtonState</code> into a <code>WebEventKind</code>.\nReturns a JavaScript <code>KeyboardEvent</code> physical code.\nReturns a JavaScript <code>KeyboardEvent</code> physical code.\nReturns a JavaScript <code>KeyboardEvent</code> physical code.\nReturns a JavaScript <code>KeyboardEvent</code> physical code and ‚Ä¶\nReturns a JavaScript <code>KeyboardEvent</code> physical code + a ‚Ä¶\nReturns a JavaScript <code>KeyboardEvent</code> semantic key.\nReturns a JavaScript <code>KeyboardEvent</code> semantic key.\nReturns a JavaScript <code>KeyboardEvent</code> semantic key.\nReturns a JavaScript <code>KeyboardEvent</code> semantic key and ‚Ä¶\nReturns a JavaScript <code>KeyboardEvent</code> semantic key + a ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to little endian from the target‚Äôs ‚Ä¶\nConverts <code>self</code> to the equivalent <code>Level</code>.\nConverts the <code>Level</code> to the equivalent <code>LevelFilter</code>.\nAcquires a mutable reference to the owned form of the data.\nCopies the slice into an owned <code>OsString</code>.\nCreates owned data from borrowed data, usually by cloning.\nConverts a <code>Path</code> to an owned <code>PathBuf</code>.\nConverts the angle to radians.\nConverts the angle to radians.\nConverts the angle to radians.\nConvert the error to <code>LINUX_EXIT</code> without validation.\nDecompose a (possibly wide) pointer into its data pointer ‚Ä¶\nComposes a fat pointer <code>*const T</code> from a <code>FatPtr</code> structure.\nConverts the string slice into an <code>Rc&lt;str&gt;</code>.\nConverts the string into an <code>Rc&lt;str&gt;</code>.\nCreate from <code>Rgb&lt;u16&gt;</code> by scaling each component ‚Ä¶\nConvert to <code>Rgb&lt;u16&gt;</code>.\nCreate from <code>Rgb&lt;u16&gt;</code> by scaling each component ‚Ä¶\nConvert to <code>Rgb&lt;u16&gt;</code>.\nConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBB</code> format.\nConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBB</code> format, ‚Ä¶\nConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBB</code> format.\nConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBB</code> format, ‚Ä¶\nConvert to <code>Rgb&lt;u8&gt;</code>.\nConvert to <code>Rgb&lt;u8&gt;</code>.\nConvert to a packed <code>u32</code> in <code>0xRRGGBB</code> format.\nConvert to a packed <code>u32</code> in <code>0xRRGGBB</code> format, discarding ‚Ä¶\nConvert to a packed <code>u32</code> in <code>0xRRGGBB</code> format.\nConvert to a packed <code>u32</code> in <code>0xRRGGBB</code> format, discarding ‚Ä¶\nConvert to <code>Rgb&lt;f64&gt;</code>.\nConvert to <code>Rgb&lt;f64&gt;</code>.\nConvert to <code>Rgb&lt;f64&gt;</code>.\nConvert to <code>Rgb&lt;f64&gt;</code>.\nConvert to <code>Rgb&lt;f64&gt;</code>.\nConvert to <code>Rgb&lt;f64&gt;</code>.\nConvert to <code>Rgb&lt;f64&gt;</code>.\nConvert to <code>Rgb&lt;f64&gt;</code>.\nConvert to Rgba16 by scaling each component proportionally.\nConvert to <code>Rgba&lt;u16&gt;</code>.\nConvert to <code>Rgba&lt;u16&gt;</code>.\nConvert to Rgba16 by scaling each component proportionally.\nConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format, with ‚Ä¶\nConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format ‚Ä¶\nConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format, with ‚Ä¶\nConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format ‚Ä¶\nConvert to <code>Rgba&lt;u8&gt;</code>.\nConvert to <code>Rgba&lt;u8&gt;</code>.\nConvert to a packed <code>u32</code> in <code>0xRRGGBBAA</code> format, with the ‚Ä¶\nConvert to a packed <code>u32</code> in <code>0xRRGGBBAA</code> format (big-endian).\nConvert to a packed <code>u32</code> in <code>0xRRGGBBAA</code> format, with the ‚Ä¶\nConvert to a packed <code>u32</code> in <code>0xRRGGBBAA</code> format (big-endian).\nConvert to <code>Rgba&lt;f64&gt;</code>.\nConvert to <code>Rgba&lt;f64&gt;</code>.\nConvert to <code>Rgba&lt;f64&gt;</code>.\nConvert to <code>Rgba&lt;f64&gt;</code>.\nConvert to <code>Rgba&lt;f64&gt;</code>.\nConvert to <code>Rgba&lt;f64&gt;</code>.\nConvert to <code>Rgba&lt;f64&gt;</code>.\nConvert to <code>Rgba&lt;f64&gt;</code>.\nConverts this object to an iterator of resolved <code>SocketAddr</code>‚Ä¶\nYields a &amp;str slice if the <code>OsStr</code> is valid Unicode.\nYields a <code>&amp;str</code> slice if the <code>Path</code> is valid unicode.\nYields a <code>&amp;str</code> slice if the FsPath is valid unicode.\nYields a &amp;str slice if the <code>CStr</code> contains valid UTF-8.\nConvenience method for quickly getting a string from the ‚Ä¶\nConverts the given value to a <code>String</code>.\nConverts an <code>OsStr</code> to a Cow&lt;str&gt;.\nConverts a <code>Path</code> to a <code>Cow&lt;str&gt;</code>.\nConverts a <code>FsPath</code> to a <code>Cow&lt;str&gt;</code>.\nConverts a <code>CStr</code> into a Cow&lt;str&gt;.\nConvert to a tuple.\nConvert to a tuple.\nConvert to a tuple.\nConvert to a tuple.\nConvert to a tuple.\nConvert to a tuple.\nConvert to a tuple.\nConvert to a tuple.\nReturns a copy of both bounds as a tuple <code>(lower, upper)</code>.\nReturns a (9) tuple with all the elements.\nReturns a (6) tuple if the 6 fields from <code>h</code> to <code>ns</code> are ‚Ä¶\nReturns a (3) tuple if the 3 fields from <code>h</code> to <code>s</code> are ‚Ä¶\nReturns a (3) tuple if the 3 fields from <code>ms</code> to <code>ns</code> are ‚Ä¶\nReturns a reference to both bounds as a tuple ‚Ä¶\nReturns a (3) tuple if the 3 fields from <code>y</code> to <code>d</code> are ‚Ä¶\nReturns a (9) tuple if the 9 fields from <code>y</code> to <code>ns</code> are ‚Ä¶\nReturns a (6) tuple if the 6 fields from <code>y</code> to <code>s</code> are ‚Ä¶\nConverts this <code>scalar</code> to an UTF-8 encoded sequence of bytes.\nReturns the destaqued elements as a vector.\nReturns the stacked elements as a vector.\nConverts this <code>Point</code> to a <code>Vector</code>, keeping <code>self</code> intact.\n<code>core</code> Indicates unfinished code.\nReturns the key value used to mark deleted slots.\nReturns a shared reference to the top item on the stack.\nReturns an exclusive reference to the top item on the ‚Ä¶\nA (<code>const</code>) port of <code>f64::</code><code>total_cmp</code>.\nDefault implementation emulates mouse clicks\nDefault implementation emulates mouse clicks\nTouchscreen input capabilities.\n(trace) Outputs a stack trace.\n<code>log</code> Logs a message at the indicated level.\nCounts the number of trailing zero bits in a <code>u32</code>.\nCounts the number of trailing zero bits in a <code>u64</code>.\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nReturns the number of trailing zeros in the binary ‚Ä¶\nTransforms each element in the chunk using the provided ‚Ä¶\nTransforms each element in the chunk into a new chunk and ‚Ä¶\n<code>core</code> Reinterprets the bits of a value of one type as ‚Ä¶\nReads <code>src</code> as having type <code>&amp;Dst</code> without moving the contained ‚Ä¶\nReturns the transposed matrix (C √ó R).\nTransposes a <code>MaybeUninit&lt;[T; N]&gt;</code> into a <code>[MaybeUninit&lt;T&gt;; N]</code>‚Ä¶\nTransposes an <code>Option</code> of a <code>Result</code> into a <code>Result</code> of an <code>Option</code>‚Ä¶\nTransposes a <code>Result</code> of an <code>Option</code> into an <code>Option</code> of a <code>Result</code>‚Ä¶\nTranspose four <code>m128</code> as if they were a 4x4 matrix.\nTransposes <code>Option&lt;Result&lt;T, E&gt;&gt;</code> into <code>Result&lt;Option&lt;T&gt;, E&gt;</code>.\nSee <code>.tree_reduce()</code>.\nSee <code>.tree_reduce()</code>.\nAccumulate the elements in the iterator in a tree-like ‚Ä¶\nAccumulate the elements in the iterator in a tree-like ‚Ä¶\nReturns a subslice without the given leading <code>byte</code>s.\nThe integral part of <code>self</code>.\nTruncate the <code>OsString</code> to the specified length.\nResize the string (discarding trailing data)\nShortens the deque, keeping the first <code>len</code> elements and ‚Ä¶\nShortens the vector, keeping the first <code>len</code> elements and ‚Ä¶\nShortens this <code>String</code> to the specified length.\nSets the option for truncating a previous file.\nShortens the deque, keeping the last <code>len</code> elements and ‚Ä¶\nTruncate the <code>f32</code> lanes to <code>i32</code> lanes.\nTruncate the <code>f64</code> lanes to the lower <code>i32</code> lanes (upper <code>i32</code> ‚Ä¶\nTruncate the lower lane into an <code>i32</code>.\nTruncate the lower lane into an <code>i64</code>.\nImmutably borrows the wrapped value, returning an error if ‚Ä¶\nMutably borrows the wrapped value, returning an error if ‚Ä¶\nImmutably borrows the wrapped value, returning an error if ‚Ä¶\nTry to cast to a pointer of another type by checking ‚Ä¶\nCreates a new <code>File</code> instance that shares the same ‚Ä¶\nCreates a new independently owned handle to the underlying ‚Ä¶\nCreates a new independently owned handle to the underlying ‚Ä¶\nCreates a new independently owned handle to the underlying ‚Ä¶\n<code>.try_collect()</code> is more convenient way of writing ‚Ä¶\n<code>.try_collect()</code> is more convenient way of writing ‚Ä¶\nFallibly transforms an iterator into a collection, short ‚Ä¶\nFallibly transforms an iterator into a collection, short ‚Ä¶\nFallibly transforms an iterator into a collection, short ‚Ä¶\nFallibly transforms an iterator into a collection, short ‚Ä¶\nFallibly transforms an iterator into a collection, short ‚Ä¶\nFallibly transforms an iterator into a collection, short ‚Ä¶\nFallibly transforms an iterator into a collection, short ‚Ä¶\nFallibly transforms an iterator into a collection, short ‚Ä¶\nReturns <code>Ok(true)</code> if the path points at an existing entity.\nApplies function to the elements of iterator and returns ‚Ä¶\nApplies function to the elements of iterator and returns ‚Ä¶\nApplies function to the elements of iterator and returns ‚Ä¶\nApplies function to the elements of iterator and returns ‚Ä¶\nApplies function to the elements of iterator and returns ‚Ä¶\nApplies function to the elements of iterator and returns ‚Ä¶\nApplies function to the elements of iterator and returns ‚Ä¶\nApplies function to the elements of iterator and returns ‚Ä¶\nAn iterator method that applies a function as long as it ‚Ä¶\nAn iterator method that applies a function as long as it ‚Ä¶\nAn iterator method that applies a function as long as it ‚Ä¶\nAn iterator method that applies a function as long as it ‚Ä¶\nAn iterator method that applies a function as long as it ‚Ä¶\nAn iterator method that applies a function as long as it ‚Ä¶\nAn iterator method that applies a function as long as it ‚Ä¶\nAn iterator method that applies a function as long as it ‚Ä¶\nAn iterator method that applies a fallible function to ‚Ä¶\nAn iterator method that applies a fallible function to ‚Ä¶\nAn iterator method that applies a fallible function to ‚Ä¶\nAn iterator method that applies a fallible function to ‚Ä¶\nAn iterator method that applies a fallible function to ‚Ä¶\nAn iterator method that applies a fallible function to ‚Ä¶\nAn iterator method that applies a fallible function to ‚Ä¶\nAn iterator method that applies a fallible function to ‚Ä¶\nPerforms the conversion.\nAttempts to convert a <code>Vec&lt;T&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.\nAttempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u8&gt;.\nAttempts to convert <code>i64</code> to NonZero&lt;i64&gt;.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i16&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u128&gt;.\nAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;i8&gt;.\nAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;i8&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i8&gt;.\nAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u16&gt;.\nAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;isize&gt;.\nAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u8&gt;.\nAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u8&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;usize&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i16&gt;.\nAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i64&gt;.\nAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u64&gt;.\nAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u128&gt;.\nAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;usize&gt;.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i8&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u64&gt;.\nAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u32&gt;.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;isize&gt;.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u128&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u32&gt;.\nAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u16&gt;.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u64&gt;.\nAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i32&gt;.\nAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i16&gt;.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u32&gt;.\nAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;usize&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u128&gt;.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i128&gt;.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u16&gt;.\nAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i8&gt;.\nAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;isize&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u16&gt;.\nAttempts to convert <code>u8</code> to NonZero&lt;u8&gt;.\nAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u128&gt;.\nAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u16&gt;.\nAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;i32&gt;.\nAttempts to convert <code>u16</code> to NonZero&lt;u16&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u8&gt;.\nAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u8&gt;.\nAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;i16&gt;.\nAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;isize&gt;.\nAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;i8&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;usize&gt;.\nAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;i16&gt;.\nAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u32&gt;.\nAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;i32&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u64&gt;.\nAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;isize&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u64&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i8&gt;.\nAttempts to convert <code>u32</code> to NonZero&lt;u32&gt;.\nAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;usize&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u32&gt;.\nAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u64&gt;.\nAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;i16&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i16&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i32&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;isize&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i32&gt;.\nAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u32&gt;.\nAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;i8&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u16&gt;.\nAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u64&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u8&gt;.\nAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;usize&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i64&gt;.\nAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;u32&gt;.\nAttempts to convert NonZero&lt;u8&gt; to NonZero&lt;i8&gt;.\nAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;u16&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u16&gt;.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i32&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u32&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i128&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;usize&gt;.\nAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u128&gt;.\nAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;usize&gt;.\nAttempts to convert <code>u64</code> to NonZero&lt;u64&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u8&gt;.\nAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;usize&gt;.\nAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;i16&gt;.\nAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u64&gt;.\nAttempts to convert <code>u128</code> to NonZero&lt;u128&gt;.\nAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;u16&gt;.\nAttempts to convert <code>usize</code> to NonZero&lt;usize&gt;.\nAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u128&gt;.\nAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;isize&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i64&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i8&gt;.\nAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u32&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i64&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i16&gt;.\nAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;u8&gt;.\nAttempts to convert <code>i8</code> to NonZero&lt;i8&gt;.\nAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i32&gt;.\nAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i128&gt;.\nAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;u8&gt;.\nAttempts to convert <code>i16</code> to NonZero&lt;i16&gt;.\nAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u8&gt;.\nAttempts to convert <code>i32</code> to NonZero&lt;i32&gt;.\nAttempts to convert <code>isize</code> to NonZero&lt;isize&gt;.\nAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;i8&gt;.\nAttempts to convert <code>i128</code> to NonZero&lt;i128&gt;.\nAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i64&gt;.\nAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;isize&gt;.\nAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u16&gt;.\nAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;u8&gt;.\nConverts a <code>CString</code> into a <code>String</code> if it contains valid ‚Ä¶\nConverts the given <code>Vec&lt;u8&gt;</code> into a  <code>String</code> if it contains ‚Ä¶\nTries to create a new <code>StringNonul</code> from the given slice of ‚Ä¶\nTries to create a new <code>StringNonul</code> from the given string ‚Ä¶\nTries to create a new <code>StringU8</code> from the given slice of‚Ä¶\nTries to create a new <code>StringU8</code> from the given <code>string</code> slice.\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nTries to convert a <code>JsInstant</code> to an <code>EventTimestamp</code>. Returns ‚Ä¶\nTries to create a timestamp from milliseconds. Returns <code>None</code>‚Ä¶\nReturns a time delta corresponding to the number of ‚Ä¶\nReturns a time delta corresponding to the number of ‚Ä¶\nTries to create a timestamp from milliseconds. Returns <code>None</code>‚Ä¶\nThe checked version of <code>from_secs_f32</code>.\nReturns a time delta corresponding to the number of ‚Ä¶\nThe checked version of <code>from_secs_f64</code>.\nAttempts to get a single byte from stdin without blocking.\nTries to insert a key-value pair into the map, and returns ‚Ä¶\nTries to insert a key-value pair into the map, and returns ‚Ä¶\nInitializes the contents of the cell to <code>value</code> if the cell ‚Ä¶\nInitializes the contents of the cell to <code>value</code> if the cell ‚Ä¶\nPerforms the conversion.\nTries to consume the lock and return the inner value.\nReturns an iterator that will attempt to yield all pending ‚Ä¶\nReturns the length of the iterator if one exists. ‚Ä¶\nReturns the length of the iterator if one exists. ‚Ä¶\nTry to acquire an exclusive lock on the file.\nAttempts to acquire this lock.\nAttempts to acquire the lock without blocking.\nTry to acquire a shared (non-exclusive) lock on the file.\nAllocates memory on the heap then places <code>x</code> into it, ‚Ä¶\nConstructs a new <code>Rc&lt;T&gt;</code>, returning an error if the ‚Ä¶\nAllocates memory in the given allocator then places <code>x</code> into ‚Ä¶\nConstructs a new <code>Rc&lt;T&gt;</code> in the provided allocator, ‚Ä¶\nConstructs a new box with uninitialized contents on the ‚Ä¶\nConstructs a new <code>Rc</code> with uninitialized contents, returning ‚Ä¶\nConstructs a new box with uninitialized contents in the ‚Ä¶\nConstructs a new <code>Rc</code> with uninitialized contents, in the ‚Ä¶\nConstructs a new boxed slice with uninitialized contents. ‚Ä¶\nConstructs a new boxed slice with uninitialized contents ‚Ä¶\nConstructs a new <code>Box</code> with uninitialized contents, with the ‚Ä¶\nConstructs a new <code>Rc</code> with uninitialized contents, with the ‚Ä¶\nConstructs a new <code>Box</code> with uninitialized contents, with the ‚Ä¶\nConstructs a new <code>Rc</code> with uninitialized contents, with the ‚Ä¶\nConstructs a new boxed slice with uninitialized contents, ‚Ä¶\nConstructs a new boxed slice with uninitialized contents ‚Ä¶\nTries to remove the last character and return it.\nTries to remove the last character and returns it, or <code>None</code> ‚Ä¶\nTries to append to the end of the string the given ‚Ä¶\nTries to append to the end of the string the given ‚Ä¶\nTries to append to the end the fitting characters from the ‚Ä¶\nTries to append to the end the characters from the given ‚Ä¶\nTries to append the complete <code>string</code> slice to the end.\nTries to append the complete <code>string</code> slice to the end.\nAttempts to acquire this <code>RwLock</code> with shared read access.\nAttempts to return a pending value on this receiver ‚Ä¶\nReduces the elements to a single one by repeatedly ‚Ä¶\nReduces the elements to a single one by repeatedly ‚Ä¶\nReduces the elements to a single one by repeatedly ‚Ä¶\nReduces the elements to a single one by repeatedly ‚Ä¶\nReduces the elements to a single one by repeatedly ‚Ä¶\nReduces the elements to a single one by repeatedly ‚Ä¶\nReduces the elements to a single one by repeatedly ‚Ä¶\nReduces the elements to a single one by repeatedly ‚Ä¶\nTries to reserve capacity for at least <code>additional</code> more ‚Ä¶\nTries to reserve capacity for at least <code>additional</code> elements ‚Ä¶\nTries to reserve capacity for at least <code>additional</code> more ‚Ä¶\nTries to reserve capacity for at least <code>additional</code> more ‚Ä¶\nTries to reserve capacity for at least <code>additional</code> more ‚Ä¶\nInvokes <code>try_reserve</code> on the underlying instance of <code>OsString</code>.\nTries to reserve capacity for at least <code>additional</code> more ‚Ä¶\nTries to reserve capacity for at least <code>additional</code> bytes ‚Ä¶\nTries to reserve the minimum capacity for at least ‚Ä¶\nTries to reserve the minimum capacity for at least ‚Ä¶\nTries to reserve the minimum capacity for at least ‚Ä¶\nInvokes <code>try_reserve_exact</code> on the underlying instance of ‚Ä¶\nTries to reserve the minimum capacity for at least ‚Ä¶\nTries to reserve the minimum capacity for at least ‚Ä¶\nThis is the reverse version of <code>Iterator::try_fold()</code>: it ‚Ä¶\nThis is the reverse version of <code>Iterator::try_fold()</code>: it ‚Ä¶\nThis is the reverse version of <code>Iterator::try_fold()</code>: it ‚Ä¶\nThis is the reverse version of <code>Iterator::try_fold()</code>: it ‚Ä¶\nThis is the reverse version of <code>Iterator::try_fold()</code>: it ‚Ä¶\nThis is the reverse version of <code>Iterator::try_fold()</code>: it ‚Ä¶\nThis is the reverse version of <code>Iterator::try_fold()</code>: it ‚Ä¶\nThis is the reverse version of <code>Iterator::try_fold()</code>: it ‚Ä¶\nAttempts to send a value on this channel without blocking.\nReturns the inner value, if the <code>Arc</code> has exactly one strong ‚Ä¶\nReturns the inner value, if the <code>Rc</code> has exactly one strong ‚Ä¶\nAttempts to collect the exit status of the child if it has ‚Ä¶\nAcquires a reference to the value in this TLS key.\nCreates an empty deque with space for at least <code>capacity</code> ‚Ä¶\nConstructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified ‚Ä¶\nCreates a new empty <code>String</code> with at least the specified ‚Ä¶\nConstructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the ‚Ä¶\nAttempts to lock this <code>RwLock</code> with exclusive write access.\nGets the value of the <code>IP_TTL</code> option for this socket.\nGets the value of the <code>IP_TTL</code> option for this socket.\nGets the value of the <code>IP_TTL</code> option for this socket.\nDuplicates the top element before the next of stack ‚Ä¶\nDuplicates the top pair of elements before the next of ‚Ä¶\nDuplicates the back pair of elements, before the second ‚Ä¶\nDuplicates the front pair of elements, after the second ‚Ä¶\nDuplicates the back element, before the second back ‚Ä¶\nDuplicates the front element, after the second front ‚Ä¶\nReturn an iterator adaptor that iterates over the ‚Ä¶\nReturn an iterator adaptor that iterates over the ‚Ä¶\nReturn an iterator over all contiguous windows producing ‚Ä¶\nReturn an iterator over all contiguous windows producing ‚Ä¶\nReturn an iterator that groups the items in tuples of a ‚Ä¶\nReturn an iterator that groups the items in tuples of a ‚Ä¶\nA unit-agnostic rotation.\nNumber of nanoseconds.\nNumber of whole seconds.\nThe rotation of the stylus around its own axis (0¬∞ to ‚Ä¶\nThe rotation of the stylus around its own axis (0¬∞ to ‚Ä¶\nGets the <code>TypeId</code> of <code>self</code>.\nDefines zero-cost, zero-sized, generic <em>marker</em> IDs.\nDefines zero-cost, zero-sized, type-safe <em>resource</em> IDs.\nReturns the number tag associated with the current variant.\nReturns the sender‚Äôs UID.\nReturns the user ID of the owner of this file.\nReturns the user ID of the owner of this file.\nCreates an unbounded interval $(-‚àû, ‚àû)$ <code>..</code> <code>RangeFull</code>.\nCreates an interval $(-‚àû, u]$ <code>..upper</code> <code>RangeTo</code>.\nCreates an interval $(-‚àû, u)$ <code>..=upper</code> <code>RangeToInclusive</code>.\nAdds an unsigned integer to a non-zero value, assuming ‚Ä¶\nAdds an unsigned integer to a non-zero value, assuming ‚Ä¶\nAdds an unsigned integer to a non-zero value, assuming ‚Ä¶\nAdds an unsigned integer to a non-zero value, assuming ‚Ä¶\nAdds an unsigned integer to a non-zero value, assuming ‚Ä¶\nAdds an unsigned integer to a non-zero value, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nMultiplies two non-zero integers together, assuming ‚Ä¶\nUndo the effect of leaked guards on the borrow state of ‚Ä¶\n<code>core</code> Indicates unimplemented code.\nCreates a new <code>MaybeUninit&lt;T&gt;</code> in an uninitialized state.\nVisits the values representing the union, i.e., all the ‚Ä¶\nVisits the elements representing the union, i.e., all the ‚Ä¶\nReturn an iterator adaptor that filters out elements that ‚Ä¶\nReturn an iterator adaptor that filters out elements that ‚Ä¶\nReturn an iterator adaptor that filters out elements that ‚Ä¶\nReturn an iterator adaptor that filters out elements that ‚Ä¶\nReturns a ‚Äòunixy‚Äô version of the application‚Äôs name, ‚Ä¶\nRelease all locks on the file.\nUnpack and interleave the high lanes.\nUnpack and interleave the high lanes.\nUnpack and interleave high <code>i16</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i16</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i32</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i32</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i64</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i64</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i8</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i8</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave the high lanes.\nUnpack and interleave the high lanes.\nUnpack and interleave low <code>i16</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i16</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i32</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i32</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i64</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i64</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i8</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i8</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low lanes of <code>a</code> and <code>b</code>.\nAtomically makes the handle‚Äôs token available if it is ‚Ä¶\n<code>core</code> Indicates unreachable code.\n<code>core</code> Informs the compiler that the current calling site is ‚Ä¶\nUnrolls the given for loop.\nSets the element at <code>index</code> to <code>None</code>.\nUnsets the bits in <code>self</code> to 0, from the <code>[start..=end]</code> ‚Ä¶\nUnsets the bits in <code>self</code> to 0, from the <code>[start..=end]</code> range.\nComputes the absolute value of self without any wrapping ‚Ä¶\nComputes the absolute value of self without any wrapping ‚Ä¶\nComputes the absolute value of self without any wrapping ‚Ä¶\nComputes the absolute value of self without any wrapping ‚Ä¶\nComputes the absolute value of self without any wrapping ‚Ä¶\nComputes the absolute value of self without any wrapping ‚Ä¶\nReturns the contained <code>Some</code> value, consuming the <code>self</code> value.\nReturns the contained <code>Ok</code> value, consuming the <code>self</code> value.\n‚öñÔ∏è An unwrapper macro that works in compile-time.\nUnwraps the inner <code>Result</code>, returning the <code>Ok</code> value or a ‚Ä¶\nUnwraps the inner <code>Option</code>, returning the contained value or ‚Ä¶\nReturns the contained <code>Err</code> value, consuming the <code>self</code> value.\nReturns the contained <code>Err</code> value, consuming the <code>self</code> value, ‚Ä¶\nReturns the contained <code>Some</code> value or a provided default.\nReturns the contained <code>Ok</code> value or a provided default.\nIf we have the only reference to <code>T</code> then unwrap it. ‚Ä¶\nIf we have the only reference to <code>T</code> then unwrap it. ‚Ä¶\nReturns the contained <code>Some</code> value or a default.\nReturns the contained <code>Ok</code> value or a default\nReturns the contained <code>Some</code> value or computes it from a ‚Ä¶\nReturns the contained <code>Ok</code> value or computes it from a ‚Ä¶\nUnwraps the result if the <code>Option</code> is <code>Some</code>, otherwise calls ‚Ä¶\nReturns the contained <code>Some</code> value, consuming the <code>self</code> value,\nReturns the contained <code>Ok</code> value, consuming the <code>self</code> value, ‚Ä¶\nConverts an iterator of pairs into a pair of containers.\nConverts an iterator of pairs into a pair of containers.\nConverts an iterator of pairs into a pair of containers.\nConverts an iterator of pairs into a pair of containers.\nConverts an iterator of pairs into a pair of containers.\nConverts an iterator of pairs into a pair of containers.\nConverts an iterator of pairs into a pair of containers.\nConverts an iterator of pairs into a pair of containers.\nUnzips an option containing a tuple of two options.\nOn most platforms update() and draw() are called each ‚Ä¶\nUpdates the contained value using a function.\nReturn an iterator adaptor that applies a mutating function\nReturn an iterator adaptor that applies a mutating function\nUpdates the contained value using a function.\nUpdates the hasher with more data.\nUpdates the hasher with more data.\nUpdates the hasher with more data.\nUpdates the hasher with more data.\nOverwrites this <code>WebWindowState</code> with the latest live ‚Ä¶\nAttempts to upgrade the <code>Weak</code> pointer to an <code>Arc</code>, delaying ‚Ä¶\nAttempts to upgrade the <code>Weak</code> pointer to an <code>Rc</code>, delaying ‚Ä¶\nThe upper bound (also known as the <em>end</em>, bound or the <em>right</em> ‚Ä¶\nReturns a <code>Cursor</code> pointing at the gap after the greatest key\nReturns a <code>Cursor</code> pointing at the gap after the greatest ‚Ä¶\nReturns a <code>CursorMut</code> pointing at the gap after the greatest ‚Ä¶\nReturns a <code>CursorMut</code> pointing at the gap after the greatest ‚Ä¶\nReturns a reference to the upper bound.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nThe name of the current user.\n‚öôÔ∏è ùüô A downcasted pointer-sized unsigned integer ‚Ä¶\n‚öôÔ∏è ùüô An upcasted pointer-sized unsigned integer ‚Ä¶\nThe <code>value</code> resulting from the operation.\nThe main value.\nReturns <code>None</code> if the value is <code>None</code>, otherwise returns <code>optb</code>.\nReturns <code>res</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> ‚Ä¶\nCalls <code>op</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> ‚Ä¶\nReturns <code>None</code> if the value is <code>None</code>, otherwise calls <code>op</code> with ‚Ä¶\nAsserts the <code>value</code> matches the <code>predicate</code>, otherwise panics.\nAsserts the <code>value</code> equals <code>expected</code> and returns <code>self</code>, ‚Ä¶\nAsserts the <code>value</code> equals <code>expected</code> and returns <code>self</code>, ‚Ä¶\nAsserts the <code>value</code> is <code>Err</code> and returns <code>self</code>, otherwise ‚Ä¶\nAsserts the <code>value</code> is <code>Err</code> and returns <code>self</code>, otherwise ‚Ä¶\nAsserts the value is <code>None</code> and returns <code>self</code>, otherwise ‚Ä¶\nAsserts the value is <code>None</code> and returns <code>self</code>, otherwise ‚Ä¶\nAsserts the <code>value</code> is <code>Ok</code> and returns <code>self</code>, otherwise panics.\nAsserts the <code>value</code> is <code>Ok</code> and returns <code>self</code>, otherwise panics ‚Ä¶\nAsserts the <code>value</code> matches the <code>predicate</code>, otherwise panics ‚Ä¶\nAsserts the value is <code>Some</code> and returns <code>self</code>, otherwise ‚Ä¶\nAsserts the value is <code>Some</code> and returns <code>self</code>, otherwise ‚Ä¶\nUnwraps the contained <code>Some(value)</code> or panics with the given ‚Ä¶\nUnwraps the contained <code>Ok(value)</code> or panics with the given ‚Ä¶\nReplaces the <code>value</code> with a <code>new_value</code>, in compile-time.\nUnwraps the contained <code>Ok(value)</code> or panics.\nUnwraps the contained <code>Some(value)</code> or panics.\nUnwraps the contained <code>Ok(value)</code> or provides a <code>default</code>.\nUnwraps the contained <code>Some(value)</code> or provides a <code>default</code>.\nWraps the <code>value</code> field into a <code>Result</code>, in compile-time.\nWraps the <code>value</code> field into an <code>Option</code>, in compile-time.\nReturns <code>true</code> if the current <code>value</code> equals the given <code>expected</code>‚Ä¶\nUnwraps the contained <code>Some(value)</code> or panics with the given ‚Ä¶\nUnwraps the contained <code>Ok(value)</code> or panics with a <code>message</code>.\nApplies a mapping function to the value.\nMaps a <code>Result&lt;V, E&gt;</code> to a <code>Result&lt;V, F&gt;</code> by applying the <code>op</code> ‚Ä¶\nMaps a <code>Result&lt;V&gt;</code> to a <code>Result&lt;W&gt;</code> by applying the <code>op</code> function\nMaps an <code>Option&lt;V&gt;</code> to an <code>Option&lt;W&gt;</code> by applying the <code>op</code> ‚Ä¶\nReplaces the <code>value</code> with a <code>new_value</code>.\nUnwraps the contained <code>Ok(value)</code> or panics.\nUnwraps the contained <code>Some(value)</code> or panics.\nUnwraps the contained <code>Ok(value)</code> or provides a <code>default</code>.\nUnwraps the contained <code>Some(value)</code> or provides a <code>default</code>.\nWraps the <code>value</code> field into <code>Ok</code>.\nWraps the <code>value</code> field into <code>Some</code>.\nThe index in the given string up to which valid UTF-8 was ‚Ä¶\nValidates that inactive <code>()</code> variants only appear at the end,\nAdds the value part of a new entry to the map output.\nReturns the value as <code>bool</code> (returns <code>true</code>).\nReturns the value as <code>bool</code> (returns <code>false</code>).\nReturns the signal value as an integer.\nReturns the signal value as a pointer.\nReturns the value as <code>bool</code> (returns <code>true</code>).\nReturns the value as <code>bool</code> (returns <code>false</code>).\nAdds the value part of a new entry to the map output.\nAn iterator visiting all values in arbitrary order. The ‚Ä¶\nGets an iterator over the values of the map, in order by ‚Ä¶\nCoefficient values defining the component‚Äôs shape.\nAn iterator visiting all values mutably in arbitrary order.\nGets a mutable iterator over the values of the map, in ‚Ä¶\nFetches the environment variable key from the current ‚Ä¶\nFetches the environment variable key from the current ‚Ä¶\nReturns the current variant index (0-based).\nReturns the current variant name.\nReturns an iterator of (variable, value) pairs of strings, ‚Ä¶\nReturns an iterator of (variable, value) pairs of OS ‚Ä¶\nThe vec of points.\n<code>alloc</code> Creates a <code>Vec</code> containing the arguments.\nConverts <code>Vec&lt;T&gt;</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements <code>From&lt;T&gt;</code>.\nTries to convert <code>Vec&lt;T&gt;</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements ‚Ä¶\nReturns <code>index</code> back if it‚Äôs within the range already ‚Ä¶\nReturns the service inner version numbers (major, minor, ‚Ä¶\nReturns the service version string.\nReturns the service version string.\nReturns the current viewport size\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nTransforms itself into a tuple.\nTransforms itself into a tuple, in compile-time.\nReturns a tuple of exclusive references to its fields.\nReturns a tuple of shared references to its fields.\nGets the <code>vtable</code> pointer used to create this <code>Waker</code>.\nWaits for the child to exit completely, returning the ‚Ä¶\nBlocks the current thread until this condition variable ‚Ä¶\nBlocks the current thread until initialization has ‚Ä¶\nBlocks the current thread until all threads have ‚Ä¶\nBlocks the current thread until the cell is initialized.\nBlocks the current thread until initialization has ‚Ä¶\nWaits on this condition variable for a notification, ‚Ä¶\nWaits on this condition variable for a notification, ‚Ä¶\nWaits on this condition variable for a notification, ‚Ä¶\nBlocks the current thread until the provided condition ‚Ä¶\nSimultaneously waits for the child to exit and collect all ‚Ä¶\nWake this task.\nWakes up the task associated with this <code>Waker</code>.\nWake this task without consuming the waker.\nWake this task without consuming the waker.\nWakes up the task associated with this <code>Waker</code> without ‚Ä¶\nReturns a reference to the <code>Waker</code> for the current task.\n(warn) Outputs a message to the console with the warning ‚Ä¶\n<code>log</code> Logs a message at the indicated level.\nCallback dispatcher for WebAssembly events without args.\nWebAssembly mouse event callback dispatcher.\nWebAssembly mouse event callback dispatcher.\nOn Wayland, specifies how to draw client-side decoration ‚Ä¶\nGets the number of <code>Weak</code> pointers to this allocation.\nGets an approximation of the number of <code>Weak</code> pointers ‚Ä¶\nGets the number of <code>Weak</code> pointers to this allocation.\nGets the number of <code>Weak</code> pointers pointing to this ‚Ä¶\nSpecifies which WebGL version to use on the Web (1.0. or ‚Ä¶\nReturn an iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator ‚Ä¶\nReturn an iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator ‚Ä¶\nReturns the optionally specified integer width that the ‚Ä¶\nReturns the width of any glyph.\nSets the width.\nThe width of the rendered text.\nThe width of the rendered text.\nThe width of each glyph in pixels.\nReturns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> would awake ‚Ä¶\n(Window) (Screen) Returns the handle to the browser‚Äôs ‚Ä¶\nWindowing capabilities.\nPreferred window height (ignored on WASM/Android). ‚Ä¶\nWindow has been minimized Right now is only implemented on ‚Ä¶\nWindow has been minimized Right now is only implemented on ‚Ä¶\nWhether the window should be <code>resizable</code> by the user.\nIf <code>true</code>, the user can resize the window.\nWindow has been restored Right now is only implemented on ‚Ä¶\nWindow has been restored Right now is only implemented on ‚Ä¶\nSets the window size.\nWindow title. Defaults to an empty string.\nPreferred window width (ignored on WASM/Android). Defaults ‚Ä¶\nAcquires a reference to the value in this TLS key.\nCreates a new <code>CodecJoin</code> combinator with a <code>separator</code>.\nReturns an FNV hasher with the given <code>input</code> data.\nReturns an FNV hasher with the given <code>input</code> data.\nReturns an FNV hasher with the given <code>input</code> data.\nReturns an FNV hasher with the given <code>input</code> data.\nReturns a new <code>LinuxTimespec</code> with the given <code>duration</code>.\nReturns a default <code>MiniquadService</code> with the given <code>handler</code>,\nCreates an owned <code>PathBuf</code> like <code>self</code> but with the extension ‚Ä¶\nCreates a new pointer with the given address and the ‚Ä¶\nAdd field <code>B</code> to a <code>Pinned</code>\nAcquires a reference to the contained value.\nAcquires a mutable reference to the contained value.\nConstructs a new (empty) queue using the given <code>buffer</code>.\nConstructs a new (empty) stack using the given <code>buffer</code>.\nReturns a new empty sixel builder with the given byte ‚Ä¶\nReturns a new empty sixel builder with the given byte ‚Ä¶\nAdd field <code>C</code> to a <code>Pinned</code>\nCreates an empty <code>HashMap</code> with the specified capacity.\nCreates an empty <code>BinaryHeap</code> with at least the specified ‚Ä¶\nCreates an empty <code>HashSet</code> with the specified capacity.\nCreates a new <code>OsString</code> with at least the given capacity.\nCreates a new <code>BufReader&lt;R&gt;</code> with the specified buffer ‚Ä¶\nCreates a new <code>BufWriter&lt;W&gt;</code> with at least the specified ‚Ä¶\nCreates a new <code>LineWriter</code> with at least the specified ‚Ä¶\nCreates an empty deque with space for at least <code>capacity</code> ‚Ä¶\nCreates a new <code>PathBuf</code> with a given capacity used to create ‚Ä¶\nConstructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified ‚Ä¶\nCreates a new empty <code>String</code> with at least the specified ‚Ä¶\nCreates an empty <code>HashMap</code> with the specified capacity, ‚Ä¶\nCreates an empty <code>HashSet</code> with the specified capacity, using\nCreates an empty <code>HashMap</code> with the specified capacity, ‚Ä¶\nCreates an empty <code>HashSet</code> with the specified capacity, using\nCreates an empty <code>HashMap</code> with the specified capacity using ‚Ä¶\nCreates an empty <code>BinaryHeap</code> with at least the specified ‚Ä¶\nCreates an empty <code>HashSet</code> with the specified capacity.\nCreates an empty deque with space for at least <code>capacity</code> ‚Ä¶\nConstructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the ‚Ä¶\nChange the case sensitivity while keeping everything else ‚Ä¶\nReturns an array, allocated in the heap, filled with ‚Ä¶\nReturns an array, allocated in the stack, filled with ‚Ä¶\nReturns a 2-dimensional grid, allocated in the stack, ‚Ä¶\nReturns a 2-dimensional grid, allocated in the heap, using ‚Ä¶\nReturns an array, allocated in the stack, filled with ‚Ä¶\nReturns a 2-dimensional grid, allocated in the stack, ‚Ä¶\nAdd field <code>D</code> to a <code>Pinned</code>\nReturns a version of the angle with the given <code>direction</code>.\nReturns a version of the angle with the given <code>direction</code> ‚Ä¶\nReturns a version of the angle with the given <code>direction</code>.\nAdd field <code>E</code> to a <code>Pinned</code>\nChange the encoding scheme while keeping everything else ‚Ä¶\nConverts an address back to a mutable pointer, picking up ‚Ä¶\nConverts an address back to a pointer, picking up some ‚Ä¶\nConverts an address back to a mutable pointer, picking up ‚Ä¶\nCreates an owned <code>PathBuf</code> like <code>self</code> but with the given ‚Ä¶\nAdd field <code>F</code> to a <code>Pinned</code>\nCreates an owned <code>PathBuf</code> like <code>self</code> but with the given file ‚Ä¶\nAdd field <code>G</code> to a <code>Pinned</code>\nAdd field <code>H</code> to a <code>Pinned</code>\nCreates an empty <code>HashMap</code> which will use the given hash ‚Ä¶\nCreates a new empty hash set which will use the given ‚Ä¶\nCreates an empty <code>HashMap</code> which will use the given hash ‚Ä¶\nCreates a new empty hash set which will use the given ‚Ä¶\nCreates a new <code>Mismatch</code> with the specified <code>need</code>, <code>have</code>, and ‚Ä¶\nToggle LUT usage while keeping everything else the same.\nCreates a new formatter based on this one with given ‚Ä¶\nToggle padding while keeping everything else the same.\nReturn an iterator adaptor that combines each element with ‚Ä¶\nReturn an iterator adaptor that combines each element with ‚Ä¶\nChange the radix while keeping everything else the same.\nReturns a new Fx hasher with the given <code>seed</code>.\nReturns a new Fx hasher with the given <code>seed</code>.\nReturns a new Fx hasher with the given <code>seed</code>.\nReturns a new pengy hasher with the given <code>seed</code>.\nReturns a new empty sixel builder with the given size.\nCreates a pointer with the given address and no provenance.\nCreates a pointer with the given address and no <em>provenance</em>.\nCreates a pointer with the given address and no <em>provenance</em>.\nReturns the associated worker.\nRequests execution of JavaScript inside a worker.\nCancels an ongoing JavaScript evaluation.\nChecks if this worker is still active by querying ‚Ä¶\nReturns the list of active worker IDs.\nWrites active worker handles into a buffer and returns the ‚Ä¶\nReturns the number of active workers.\nPolls for the result of a JavaScript execution in a ‚Ä¶\nPolls for the result of a JavaScript execution in a worker.\nSends a message to a specific Web Worker.\nSpawns a Web Worker and returns its ID.\nStops a specific Web Worker by ID.\nStops all Web Workers.\nWrapping absolute value, see <code>i32::wrapping_abs</code>.\nWrapping absolute value, see <code>isize::wrapping_abs</code>.\nWrapping absolute value, see <code>i8::wrapping_abs</code>.\nWrapping absolute value, see <code>i64::wrapping_abs</code>.\nWrapping absolute value, see <code>i128::wrapping_abs</code>.\nWrapping absolute value, see <code>i16::wrapping_abs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nWraping integer addition. Computes <code>self + rhs</code>.\nCasts <code>self</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>isize_down</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>usize_down</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>usize_up</code> wrapping at the numeric bounds.\nWrapping (modular) negation. Computes <code>-self</code>, wrapping ‚Ä¶\nWrapping (modular) negation. Computes <code>-self</code>, wrapping ‚Ä¶\nWrapping (modular) negation. Computes <code>-self</code>, wrapping ‚Ä¶\nWrapping (modular) negation. Computes <code>-self</code>, wrapping ‚Ä¶\nWrapping (modular) negation. Computes <code>-self</code>, wrapping ‚Ä¶\nWrapping (modular) negation. Computes <code>-self</code>, wrapping ‚Ä¶\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWraping integer subtraction. Computes <code>self - rhs</code>.\nWrites a buffer into this writer, returning how many bytes ‚Ä¶\nWrites some data into this <code>Hasher</code>.\nWrites the value and converts to <code>Box&lt;T, A&gt;</code>.\nWrites some bytes to the file.\nOverwrites a memory location with the given value without ‚Ä¶\nOverwrites a memory location with <code>src</code> without reading or ‚Ä¶\nTakes an output stream and an <code>FmtArguments</code> struct that can ‚Ä¶\nLocks this <code>RwLock</code> with exclusive write access, blocking ‚Ä¶\nSets the option for write access.\nWrites a slice as the entire contents of a file.\nSets the value of the <code>MaybeUninit&lt;T&gt;</code>.\nüñπ <code>core</code> Writes formatted data into a buffer.\nAttempts to write an entire buffer into this writer.\nAttempts to write an entire buffer into this writer.\nAttempts to write multiple buffers into this writer.\nAttempts to write multiple buffers into this writer.\nInvokes memset on the specified pointer, setting ‚Ä¶\nSets <code>count * size_of::&lt;T&gt;()</code> bytes of memory starting at <code>dst</code>‚Ä¶\nWrites a <code>char</code> into this writer, returning whether the ‚Ä¶\nWrites a <code>char</code> into this writer, returning whether the ‚Ä¶\nWrites a <code>char</code> into this writer, returning whether the ‚Ä¶\nWrites a formatted string into this writer, returning any ‚Ä¶\nWrites a formatted string into this writer, returning any ‚Ä¶\nGlue for usage of the <code>write!</code> macro with implementors of ‚Ä¶\nGlue for usage of the <code>write!</code> macro with implementors of ‚Ä¶\nGlue for usage of the <code>write!</code> macro with implementors of ‚Ä¶\nGlue for usage of the <code>write!</code> macro with implementors of ‚Ä¶\nWrites a single <code>i128</code> into this hasher.\nWrites a single <code>i128</code> into this hasher.\nWrites a single <code>i128</code> into this hasher.\nWrites a single <code>i16</code> into this hasher.\nWrites a single <code>i16</code> into this hasher.\nWrites a single <code>i16</code> into this hasher.\nWrites a single <code>i32</code> into this hasher.\nWrites a single <code>i32</code> into this hasher.\nWrites a single <code>i32</code> into this hasher.\nWrites a single <code>i64</code> into this hasher.\nWrites a single <code>i64</code> into this hasher.\nWrites a single <code>i64</code> into this hasher.\nWrites a single <code>i8</code> into this hasher.\nWrites a single <code>i8</code> into this hasher.\nWrites a single <code>i8</code> into this hasher.\nWrites a single <code>isize</code> into this hasher.\nWrites a single <code>isize</code> into this hasher.\nWrites a single <code>isize</code> into this hasher.\nWrites a length prefix into this hasher, as part of being ‚Ä¶\nWrites a length prefix into this hasher, as part of being ‚Ä¶\nWrites a length prefix into this hasher, as part of being ‚Ä¶\nWrites a string slice into this writer, returning whether ‚Ä¶\nWrites some data to the underlying buffer contained within ‚Ä¶\nWrites a single <code>str</code> into this hasher.\nWrites a single <code>str</code> into this hasher.\nWrites a single <code>str</code> into this hasher.\nReturns the write timeout of this socket.\nReturns the write timeout of this socket.\nWrites a single <code>u128</code> into this hasher.\nWrites a single <code>u128</code> into this hasher.\nWrites a single <code>u128</code> into this hasher.\nWrites a single <code>u16</code> into this hasher.\nWrites a single <code>u16</code> into this hasher.\nWrites a single <code>u16</code> into this hasher.\nWrites a single <code>u32</code> into this hasher.\nWrites a single <code>u32</code> into this hasher.\nWrites a single <code>u32</code> into this hasher.\nWrites a single <code>u64</code> into this hasher.\nWrites a single <code>u64</code> into this hasher.\nWrites a single <code>u64</code> into this hasher.\nWrites a single <code>u8</code> into this hasher.\nWrites a single <code>u8</code> into this hasher.\nWrites a single <code>u8</code> into this hasher.\nOverwrites a memory location with the given value without ‚Ä¶\nOverwrites a memory location with <code>src</code> without reading or ‚Ä¶\nWrites a single <code>usize</code> into this hasher.\nWrites a single <code>usize</code> into this hasher.\nWrites a single <code>usize</code> into this hasher.\nLike <code>write</code>, except that it writes into a slice of buffers.\nLike <code>write</code>, except that it writes from a slice of buffers.\nLike <code>write</code>, except that it writes from a slice of buffers.\nPerforms a volatile write of a memory location with the ‚Ä¶\nPerforms a volatile write of a memory location with <code>src</code> ‚Ä¶\nüñπ <code>core</code> Writes formatted data into a buffer, with a ‚Ä¶\nReturns a copy of the first dimension <code>x</code>.\nReturns a copy of the first dimension <code>x</code>.\nReturns a copy of the first dimension <code>x</code>.\nReturns a copy of the first dimension <code>x</code>.\nReturns a copy of the first dimension <code>x</code>.\nReturns a copy of the first dimension <code>x</code>.\nThe X-coordinate of the mouse event relative to the ‚Ä¶\nThe X-coordinate of the pointer event relative to the ‚Ä¶\nThe first B√©zout‚Äôs coefficient <code>x</code>.\nThe x-coordinate of the mouse cursor.\nThe x-coordinate of the pointer.\nThe x-coordinate of the mouse cursor during the event.\nHorizontal pixels.\nReturns an exclusive reference to the first dimension <code>x</code>.\nReturns an exclusive reference to the first dimension <code>x</code>.\nReturns an exclusive reference to the first dimension <code>x</code>.\nReturns an exclusive reference to the first dimension <code>x</code>.\nReturns an exclusive reference to the first dimension <code>x</code>.\nReturns an exclusive reference to the first dimension <code>x</code>.\nReturns a shared reference to the first dimension <code>x</code>.\nReturns a shared reference to the first dimension <code>x</code>.\nReturns a shared reference to the first dimension <code>x</code>.\nReturns a shared reference to the first dimension <code>x</code>.\nReturns a shared reference to the first dimension <code>x</code>.\nReturns a shared reference to the first dimension <code>x</code>.\nLogical ‚Äúxor‚Äù with a boolean value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nBitwise ‚Äúxor‚Äù with the current value.\nReturns <code>Some</code> if exactly one of <code>self</code>, <code>optb</code> is <code>Some</code>, ‚Ä¶\nüé≤ Constructs a <em>XorShift</em> prng with custom bits, basis, ‚Ä¶\nReturns a copy of the second dimension <code>y</code>.\nReturns a copy of the second dimension <code>y</code>.\nReturns a copy of the second dimension <code>y</code>.\nReturns a copy of the second dimension <code>y</code>.\nReturns a copy of the second dimension <code>y</code>.\nReturns a copy of the second dimension <code>y</code>.\nThe Y-coordinate of the mouse event relative to the ‚Ä¶\nThe Y-coordinate of the pointer event relative to the ‚Ä¶\nThe second B√©zout‚Äôs coefficient <code>y</code>.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nThe y-coordinate of the mouse cursor.\nThe y-coordinate of the pointer.\nThe y-coordinate of the mouse cursor during the event.\nVertical pixels.\nReturns an exclusive reference to the second dimension <code>y</code>.\nReturns an exclusive reference to the second dimension <code>y</code>.\nReturns an exclusive reference to the second dimension <code>y</code>.\nReturns an exclusive reference to the second dimension <code>y</code>.\nReturns an exclusive reference to the second dimension <code>y</code>.\nReturns an exclusive reference to the second dimension <code>y</code>.\nReturns a shared reference to the second dimension <code>y</code>.\nReturns a shared reference to the second dimension <code>y</code>.\nReturns a shared reference to the second dimension <code>y</code>.\nReturns a shared reference to the second dimension <code>y</code>.\nReturns a shared reference to the second dimension <code>y</code>.\nReturns a shared reference to the second dimension <code>y</code>.\nYields an <code>Err</code> and returns an awaitable <code>CoroWork</code>.\nCooperatively gives up a timeslice to the OS scheduler.\nCooperatively gives up a timeslice to the OS scheduler.\nYields an <code>Ok</code> <code>value</code> and returns an awaitable <code>CoroWork</code>.\nReturns a copy of the third dimension <code>z</code>.\nReturns a copy of the third dimension <code>z</code>.")