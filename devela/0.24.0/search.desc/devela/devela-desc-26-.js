searchState.loadedDescShard("devela", 26, "Returns the number of elements in the vector, also …\nReturns the length of this <code>String</code>, in bytes, not <code>char</code>s or …\nReturns the size of the file, in bytes, this metadata is …\nReturns the exact remaining length of the iterator.\nReturns the exact remaining length of the iterator.\nReturns the exact remaining length of the iterator.\nReturns the exact remaining length of the iterator.\nReturns the exact remaining length of the iterator.\nReturns the exact remaining length of the iterator.\nReturns the exact remaining length of the iterator.\nReturns the exact remaining length of the iterator.\nReturns the number of occupied slots in the hashmap.\nDetermines the length of this list.\nReturns the count of initialized elements.\nReturns the length in days of the current month, taking …\nReturns the size of the file, in bytes.\nReturns the current length.\nReturns the current string length in bytes.\nReturns the size of the file, in bytes.\nReturns the number of bytes needed to encode in UTF-16.\nReturns the number of bytes needed to encode in UTF-8.\nThe length of the 1d extent.\nThe length of the 1d extent.\nCalculates a linearly interpolated value between <code>u..=v</code> …\nThe verbosity level of the message.\nThe verbosity level of the message.\nResolution level of the component, indicating its level of …\nReturns the level filter for this logger.\nReturns the <strong>perceptual lightness</strong> (CIE L*).\nReturns the <strong>perceptual lightness</strong> (CIE L*).\nReturns the <strong>perceptual lightness</strong> (CIE L*).\nReturns the <strong>gamma-encoded luma</strong> (non-linear Y′).\nReturns the <strong>gamma-encoded luma</strong> (non-linear Y′).\nReturns the <strong>gamma-encoded luma</strong> (non-linear Y′).\nReturns the <strong>gamma-encoded luma</strong> (non-linear Y′).\nReturns the <strong>perceptual lightness</strong> (CIE L*).\nReturns the <strong>perceptual lightness</strong> (CIE L*).\nReturns the <strong>gamma-encoded luma</strong> (non-linear Y′).\nReturns the <strong>gamma-encoded luma</strong> (non-linear Y′).\nReturns the <strong>perceptual lightness</strong> (CIE L*).\nReturns a mutable reference to the <strong>perceptual lightness</strong>.\nReturns a mutable reference to the <strong>perceptual lightness</strong>.\nReturns a mutable reference to the <strong>perceptual lightness</strong>.\nReturns a mutable reference to the <strong>gamma-encoded luma</strong>.\nReturns a mutable reference to the <strong>gamma-encoded luma</strong>.\nReturns a mutable reference to the <strong>gamma-encoded luma</strong>.\nReturns a mutable reference to the <strong>perceptual lightness</strong>.\nReturns a mutable reference to the <strong>perceptual lightness</strong>.\nReturns a mutable reference to the <strong>gamma-encoded luma</strong>.\nReturns a mutable reference to the <strong>gamma-encoded luma</strong>.\nReturns a mutable reference to the <strong>gamma-encoded luma</strong>.\nReturns a mutable reference to the <strong>perceptual lightness</strong>.\nConverts CIE lightness (L*) to linear luminance\nConverts CIE lightness (L*) to linear luminance\nReturns the number of bytes that can be read before this …\nThe line containing the message.\nReturns the line number from which the panic originated.\nReturns the <strong>linear-light perceptual</strong> value (experimental).\nReturns the <strong>linear-light perceptual</strong> value (experimental).\nReturns the <strong>linear-light perceptual</strong> value (experimental).\nReturns the <strong>linear-light perceptual</strong> value (experimental).\nReturns the <strong>linear-light perceptual</strong> value (experimental).\nReturns the <strong>linear-light perceptual</strong> value (experimental).\nReturns a mutable reference to the <strong>linear-light perceptual</strong> …\nReturns a mutable reference to the <strong>linear-light perceptual</strong> …\nReturns a mutable reference to the <strong>linear-light perceptual</strong> …\nReturns a mutable reference to the <strong>linear-light perceptual</strong> …\nReturns a mutable reference to the <strong>linear-light perceptual</strong> …\nReturns a mutable reference to the <strong>linear-light perceptual</strong> …\nConsumes this handle and returns an iterator over input …\nReturns an iterator over the lines of this reader.\nReturns an iterator over the lines of this reader.\nGets the value of the <code>SO_LINGER</code> option on this socket.\nSpecifies which Linux window system (X11 or Wayland) is …\nDefines the program entry point and main function …\nSet the <code>WM_CLASS</code> window property on X11 and the <code>app_id</code> on …\nDetermines how to load an OpenGL context on X11 (via GLX …\nThe natural logarithm of <code>self</code>.\nThe natural logarithm of <code>self</code> plus 1, more accurately.\nLoads a value from the <code>Atomic</code>.\nLoads a value from the bool.\nLoads a value from the pointer.\nLoads a value from the atomic integer.\nLoads a value from the atomic integer.\nLoads a value from the atomic integer.\nLoads a value from the atomic integer.\nLoads a value from the atomic integer.\nLoads a value from the atomic integer.\nLoads a value from the atomic integer.\nLoads a value from the atomic integer.\nLoads a value from the atomic float.\nLoads a value from the atomic integer.\nLoads a value from the atomic integer.\nLoads a value from the atomic float.\nLoads a value from the atomic integer.\nLoads a value from the atomic integer.\nLoads the <code>f32</code> reference into the low lane of the register.\nLoads the <code>f32</code> reference into all lanes of a register.\nLoad an <code>f32</code> and splat it to all lanes of an <code>m256d</code>\nLoads the reference into the low lane of the register.\nLoads the <code>f64</code> reference into all lanes of a register.\nLoad an <code>f64</code> and splat it to all lanes of an <code>m256d</code>\nReturns the load factor as a fraction of total capacity.\nLoads the low <code>i64</code> into a register.\nLoads the reference into a register.\nLoad an <code>m128</code> and splat it to the lower and upper half of …\nLoads the reference into a register.\nLoad an <code>m128d</code> and splat it to the lower and upper half of …\nLoads the reference into a register.\nLoad data from memory into a register.\nLoad data from memory into a register.\nLoad data from memory into a register.\nLoads the reference given and zeroes any <code>i32</code> lanes not in …\nLoads the reference given and zeroes any <code>i32</code> lanes not in …\nLoads the reference given and zeroes any <code>i64</code> lanes not in …\nLoads the reference given and zeroes any <code>i64</code> lanes not in …\nLoad data from memory into a register according to a mask.\nLoad data from memory into a register according to a mask.\nLoad data from memory into a register according to a mask.\nLoad data from memory into a register according to a mask.\nLoads the reference into a register, replacing the high …\nLoads the reference into a register, replacing the low …\nLoads the reference into a register with reversed order.\nLoads the reference into a register with reversed order.\nLoad data from memory into a register.\nLoad data from memory into a register.\nLoad data from memory into a register.\nLoads the reference into a register.\nLoads the reference into a register.\nLoads the reference into a register.\nLoad data from memory into a register.\nLoad data from memory into a register.\nLoad data from memory into a register.\nReturns the socket address of the local half of this TCP …\nReturns the local socket address of this listener.\nReturns the socket address that this socket was created …\nReturns a reference to the <code>LocalWaker</code> for the current task.\nReturns information about the location from which the …\nReturns information about the location from which the …\n(assign) Loads the specified URL.\n(reload) Reloads the current document.\n(replace) Replaces the current document with the given URL,\nAcquire an exclusive lock on the file. Blocks until the …\nLocks this handle to the standard input stream, returning …\nLocks this handle to the standard output stream, returning …\nLocks this handle to the standard error stream, returning …\nAcquires a mutex, blocking the current thread until it is …\nAcquires the lock, spinning until it is available.\nAcquire a shared (non-exclusive) lock on the file. Blocks …\nLogs the <code>Record</code>.\nThe logarithm of <code>self</code> with respect to an arbitrary <code>base</code>.\n(log) Outputs a message to the console.\n<code>log</code> Logs a message at the indicated level.\nThe base 10 logarithm of <code>self</code>.\nThe base 2 logarithm of <code>self</code>.\nReturns a reference to the current global logger.\nThe long jump function for the generator, equivalent to …\nThe lower bound (also known as the <em>start</em> bound, or the <em>left</em>…\nReturns a <code>Cursor</code> pointing at the gap before the smallest …\nReturns a <code>Cursor</code> pointing at the gap before the smallest …\nReturns a <code>CursorMut</code> pointing at the gap before the …\nReturns a <code>CursorMut</code> pointing at the gap before the …\nReturns a reference to the lower bound.\nReturns the leftmost sub-<code>slice</code> with the given maximum <code>len</code>.\nReturns the leftmost exclusive sub-<code>slice</code> with the given …\nLess-than comparison for two <code>Arc</code>s.\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nReturns <code>true</code> if <code>self &lt; other</code>.\nReturns <code>true</code> if <code>self &lt; other</code>.\nReturns <code>true</code> if <code>self &lt; other</code>.\nReturns <code>true</code> if <code>self &lt; other</code> using total order.\nLess-than comparison for two <code>Rc</code>s.\nPanics\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nComputes luma from R′G′B′ using Rec. 2020 …\nComputes luma from R′G′B′ using Rec. 2020 …\nComputes luma from R′G′B′ using Rec. 601 …\nComputes luma from R′G′B′ using Rec. 601 …\nComputes luma from R′G′B′ using Rec. 709 …\nComputes luma from R′G′B′ using Rec. 709 …\nComputes luma from R′G′B′ using Rec. 709 …\nComputes luma from R′G′B′ using Rec. 709 …\nReturns the <strong>linear luminance</strong> (physical light intensity, Y).\nReturns the <strong>linear luminance</strong> (physical light intensity, Y).\nReturns the <strong>linear luminance</strong> (physical light intensity, Y).\nReturns the <strong>linear luminance</strong> (physical light intensity, Y).\nReturns the <strong>linear luminance</strong> (physical light intensity, Y).\nReturns the <strong>linear luminance</strong> (physical light intensity, Y).\nReturns a mutable reference to the <strong>linear luminance</strong>.\nReturns a mutable reference to the <strong>linear luminance</strong>.\nReturns a mutable reference to the <strong>linear luminance</strong>.\nReturns a mutable reference to the <strong>linear luminance</strong>.\nReturns a mutable reference to the <strong>linear luminance</strong>.\nReturns a mutable reference to the <strong>linear luminance</strong>.\nConverts linear luminance to CIE lightness (L*)\nConverts linear luminance to CIE lightness (L*)\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\n<code>safe_arch</code> The data for a 128-bit SSE register of four <code>f32</code> …\n<code>safe_arch</code> The data for a 128-bit SSE register of two <code>f64</code> …\n<code>safe_arch</code> The data for a 128-bit SSE register of integer …\n<code>safe_arch</code> The data for a 256-bit AVX register of eight <code>f32</code> …\n<code>safe_arch</code> The data for a 256-bit AVX register of four <code>f64</code> …\n<code>safe_arch</code> The data for a 256-bit AVX register of integer …\nCalculates the magnitude of the vector.\nCalculates the squared magnitude of the vector.\nWhether the aspect ratio is maintained on window resize.\nSet whether to <code>maintain</code> the aspect ratio on window resize.\nConverts this string to its ASCII lower case equivalent …\nConverts this string to its ASCII upper case equivalent …\nMakes the elements of the destaque contiguous, rearranging …\nRearranges the internal storage of this deque so it is one …\nMakes a mutable reference into the given <code>Arc</code>.\nMakes a mutable reference into the given <code>Rc</code>.\nReturns <code>true</code> if this requires <code>Command</code> to create a new pipe.\nMaps the inner value to another type using the provided …\nMakes a new <code>Ref</code> for a component of the borrowed data.\nMakes a new <code>RefMut</code> for a component of the borrowed data, …\nTakes a closure and creates an iterator which calls that …\nTakes a closure and creates an iterator which calls that …\nTakes a closure and creates an iterator which calls that …\nTakes a closure and creates an iterator which calls that …\nTakes a closure and creates an iterator which calls that …\nTakes a closure and creates an iterator which calls that …\nTakes a closure and creates an iterator which calls that …\nTakes a closure and creates an iterator which calls that …\nMakes a <code>MappedMutexGuard</code> for a component of the borrowed …\nMakes a <code>MappedRwLockReadGuard</code> for a component of the …\nMakes a <code>MappedRwLockWriteGuard</code> for a component of the …\nMaps a <code>Bound&lt;T&gt;</code> to a <code>Bound&lt;U&gt;</code> by applying a function to …\nMaps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a …\nMaps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;U, E&gt;</code> by applying a function …\nMaps a <code>Poll&lt;T&gt;</code> to <code>Poll&lt;U&gt;</code> by applying a function to a …\nTransforms the inner value in variant<code>_0</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_1</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_10</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_11</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_2</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_3</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_4</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_5</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_6</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_7</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_8</code> using <code>f</code>, leaving …\nTransforms the inner value in variant<code>_9</code> using <code>f</code>, leaving …\nCreates a new pointer by mapping <code>self</code>’s address to a new …\nMaps <code>ControlFlow&lt;B, C&gt;</code> to <code>ControlFlow&lt;T, C&gt;</code> by applying a …\nMaps <code>ControlFlow&lt;B, C&gt;</code> to <code>ControlFlow&lt;B, T&gt;</code> by applying a …\nApplies a function to the <code>Err</code> value inside …\nMaps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;T, F&gt;</code> by applying a function …\nMaps a <code>Poll::Ready&lt;Result&lt;T, E&gt;&gt;</code> to …\nMaps a <code>Poll::Ready&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …\nConvert each item of the iterator using the <code>Into</code> trait.\nConvert each item of the iterator using the <code>Into</code> trait.\nApplies a function to the <code>Ok</code> value inside …\nReturn an iterator adaptor that applies the provided …\nReturn an iterator adaptor that applies the provided …\nMaps a <code>Poll&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …\nMaps a <code>Poll&lt;Result&lt;T, E&gt;&gt;</code> to <code>Poll&lt;Result&lt;U, E&gt;&gt;</code> by …\nReturns the provided default result (if none), or applies …\nReturns the provided default (if <code>Err</code>), or applies a …\nMaps an <code>Option&lt;T&gt;</code> to a <code>U</code> by applying function <code>f</code> to the …\nMaps a <code>Result&lt;T, E&gt;</code> to a <code>U</code> by applying function <code>f</code> to the …\nComputes a default function result (if none), or applies a …\nMaps a <code>Result&lt;T, E&gt;</code> to <code>U</code> by applying fallback function …\nSplits a <code>Ref</code> into multiple <code>Ref</code>s for different components …\nSplits a <code>RefMut</code> into multiple <code>RefMut</code>s for different …\nConstructs a new pin by mapping the interior value.\nConstructs a new pin by mapping the interior value.\nCreates an iterator that both yields elements based on a …\nCreates an iterator that both yields elements based on a …\nCreates an iterator that both yields elements based on a …\nCreates an iterator that both yields elements based on a …\nCreates an iterator that both yields elements based on a …\nCreates an iterator that both yields elements based on a …\nCreates an iterator that both yields elements based on a …\nCreates an iterator that both yields elements based on a …\nCalls the given function <code>f</code> for each contiguous window of …\nCalls the given function <code>f</code> for each contiguous window of …\nCalls the given function <code>f</code> for each contiguous window of …\nCalls the given function <code>f</code> for each contiguous window of …\nCalls the given function <code>f</code> for each contiguous window of …\nCalls the given function <code>f</code> for each contiguous window of …\nCalls the given function <code>f</code> for each contiguous window of …\nCalls the given function <code>f</code> for each contiguous window of …\nReturns a new bitmask of ones from the <code>[start..=end]</code> …\nReturns a new bitmask of 1s from the <code>[start..=end]</code> range.\nMaterializes a chunk by converting it into a collected …\nReturns the most verbose logging level.\nReturns the most verbose logging level filter.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the <em>total ordered</em> maximum between <code>self</code>…\nCompares and returns the maximum between <code>self</code> and <code>other</code>.\nCompares and returns the maximum between <code>self</code> and <code>other</code>.\nCompares and returns the maximum between <code>self</code> and <code>other</code>.\nReturns the maximum element of an iterator.\nReturns the maximum element of an iterator.\nReturns the maximum element of an iterator.\nReturns the maximum element of an iterator.\nReturns the maximum element of an iterator.\nReturns the maximum element of an iterator.\nReturns the maximum element of an iterator.\nReturns the maximum element of an iterator.\nMaximum bitmap size, in native pixels.\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value from the …\nReturns the element that gives the maximum value from the …\nReturns the element that gives the maximum value from the …\nReturns the element that gives the maximum value from the …\nReturns the element that gives the maximum value from the …\nReturns the element that gives the maximum value from the …\nReturns the element that gives the maximum value from the …\nReturns the element that gives the maximum value from the …\nLanewise <code>max(a, b)</code> with lanes as <code>i16</code>.\nLanewise <code>max(a, b)</code> with lanes as <code>i16</code>.\nLanewise <code>max(a, b)</code> with lanes as <code>i32</code>.\nLanewise <code>max(a, b)</code> with lanes as <code>i32</code>.\nLanewise <code>max(a, b)</code> with lanes as <code>i8</code>.\nLanewise <code>max(a, b)</code> with lanes as <code>i8</code>.\nReturns the current maximum log level.\nLanewise <code>max(a, b)</code>.\nLow lane <code>max(a, b)</code>, other lanes unchanged.\nLanewise <code>max(a, b)</code>.\nLow lane <code>max(a, b)</code>, other lanes unchanged.\nLanewise <code>max(a, b)</code>.\nLanewise <code>max(a, b)</code>.\nThe maximum of two numbers, propagating <code>NaN</code>.\nReturn all maximum elements of an iterator.\nReturn all maximum elements of an iterator.\nReturn all maximum elements of an iterator, as determined …\nReturn all maximum elements of an iterator, as determined …\nReturn all maximum elements of an iterator, as determined …\nReturn all maximum elements of an iterator, as determined …\nThe maximum of two numbers using total order.\nLanewise <code>max(a, b)</code> with lanes as <code>u16</code>.\nLanewise <code>max(a, b)</code> with lanes as <code>u16</code>.\nLanewise <code>max(a, b)</code> with lanes as <code>u32</code>.\nLanewise <code>max(a, b)</code> with lanes as <code>u32</code>.\nLanewise <code>max(a, b)</code> with lanes as <code>u8</code>.\nLanewise <code>max(a, b)</code> with lanes as <code>u8</code>.\nHelper for using optionally implemented traits, like …\nSets the method for mean.\nMethod for choosing a representative mean color for the …\nSets the <code>mean</code> field to <code>SixelMean::Auto</code>.\nSets the <code>mean</code> field to <code>SixelMean::Center</code>.\nSets the <code>mean</code> field to <code>SixelMean::Colors</code>.\nSets the <code>mean</code> field to <code>SixelMean::Pixels</code>.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\n(measureText) Measures the essential properties of text.\n(measureTextFull) Measures all available text metrics.\nReturns the minimum alignment of the type in bytes.\nReturns the minimum alignment of the type in bytes.\nReturns the alignment of the pointed-to value in bytes.\nReturns the alignment of the pointed-to value in bytes.\nView a <code>Sync + Unpin</code> <code>self</code> as <code>&amp;[u8]</code>.\nView a <code>Sync + Unpin</code> <code>self</code> as <code>&amp;[u8]</code>.\nView a <code>Sync + Unpin</code> <code>self</code> as <code>&amp;mut [u8]</code>.\nView a <code>Sync + Unpin</code> <code>self</code> as <code>&amp;mut [u8]</code>.\nBitwise-copies a value.\nBitwise-copies a value.\nDrops <code>self</code> by running its destructor.\nDrops <code>self</code> by running its destructor.\nForgets about <code>self</code> <em>without running its destructor</em>.\nForgets about <code>self</code> <em>without running its destructor</em>.\nReturns <code>true</code> if dropping values of this type matters.\nReturns <code>true</code> if dropping values of this type matters.\nReplaces <code>self</code> with other, returning the previous value of …\nReplaces <code>self</code> with other, returning the previous value of …\nReturns the size of a type in bytes.\nReturns the size of a type in bytes.\nReturns the size of the pointed-to value in bytes.\nReturns the size of the pointed-to value in bytes.\nSwaps the value of <code>self</code> and <code>other</code> without deinitializing …\nSwaps the value of <code>self</code> and <code>other</code> without deinitializing …\nReplaces <code>self</code> with its default value, returning the …\nReplaces <code>self</code> with its default value, returning the …\nReturns the value of type <code>T</code> represented by the all-zero …\nReturns the value of type <code>T</code> represented by the all-zero …\nReturns the value of type <code>T</code> represented by the all-zero …\nReturns the value of type <code>T</code> represented by the all-zero …\nReturns the current memory size in bytes.\nReturns <code>true</code> if memory can still grow.\nAttempts to grow the default linear memory by the …\nAttempts to grow the default linear memory by the …\nReturns the current memory size in units of pages.\nReturn an iterator adaptor that merges the two base …\nReturn an iterator adaptor that merges the two base …\nReturn an iterator adaptor that merges the two base …\nReturn an iterator adaptor that merges the two base …\nCreate an iterator that merges items from both this and …\nCreate an iterator that merges items from both this and …\nThe message that was given to the <code>panic!</code> macro.\nMetadata about the log directive.\nQueries metadata about the underlying file.\nReturns the metadata for the file that this entry points …\nQueries the file system to get information about a file, …\nGiven a path, queries the file system to get information …\nReturns the metadata.\nReturns the metadata part of the fat pointer.\nReturns the metadata that <em>optionally</em> traverses symbolic …\nMidi input capabilities\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum between <code>self</code> and <code>other</code>.\nCompares and returns the minimum between <code>self</code> and <code>other</code>.\nCompares and returns the minimum between <code>self</code> and <code>other</code>.\nCompares and returns the <em>total ordered</em> minimum between <code>self</code>…\nReturns the minimum element of an iterator.\nReturns the minimum element of an iterator.\nReturns the minimum element of an iterator.\nReturns the minimum element of an iterator.\nReturns the minimum element of an iterator.\nReturns the minimum element of an iterator.\nReturns the minimum element of an iterator.\nReturns the minimum element of an iterator.\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value from the …\nReturns the element that gives the minimum value from the …\nReturns the element that gives the minimum value from the …\nReturns the element that gives the minimum value from the …\nReturns the element that gives the minimum value from the …\nReturns the element that gives the minimum value from the …\nReturns the element that gives the minimum value from the …\nReturns the element that gives the minimum value from the …\nReturns the rounded up byte size for this type.\nReturns the rounded up byte size for this type.\nLanewise <code>min(a, b)</code> with lanes as <code>i16</code>.\nLanewise <code>min(a, b)</code> with lanes as <code>i16</code>.\nLanewise <code>min(a, b)</code> with lanes as <code>i32</code>.\nLanewise <code>min(a, b)</code> with lanes as <code>i32</code>.\nLanewise <code>min(a, b)</code> with lanes as <code>i8</code>.\nLanewise <code>min(a, b)</code> with lanes as <code>i8</code>.\nLanewise <code>min(a, b)</code>.\nLow lane <code>min(a, b)</code>, other lanes unchanged.\nLanewise <code>min(a, b)</code>.\nLow lane <code>min(a, b)</code>, other lanes unchanged.\nLanewise <code>min(a, b)</code>.\nLanewise <code>min(a, b)</code>.\nThe minimum of two numbers, propagating <code>NaN</code>.\nMin <code>u16</code> value, position, and other lanes zeroed.\nReturn all minimum elements of an iterator.\nReturn all minimum elements of an iterator.\nReturn all minimum elements of an iterator, as determined …\nReturn all minimum elements of an iterator, as determined …\nReturn all minimum elements of an iterator, as determined …\nReturn all minimum elements of an iterator, as determined …\nThe minimum of two numbers using total order.\nLanewise <code>min(a, b)</code> with lanes as <code>u16</code>.\nLanewise <code>min(a, b)</code> with lanes as <code>u16</code>.\nLanewise <code>min(a, b)</code> with lanes as <code>u32</code>.\nLanewise <code>min(a, b)</code> with lanes as <code>u32</code>.\nLanewise <code>min(a, b)</code> with lanes as <code>u8</code>.\nLanewise <code>min(a, b)</code> with lanes as <code>u8</code>.\nA macro for namespaced <code>miniquad</code> operations.\nReturn the minimum and maximum elements in the iterator.\nReturn the minimum and maximum elements in the iterator.\nReturn the minimum and maximum element of an iterator, as …\nReturn the minimum and maximum element of an iterator, as …\nReturn the minimum and maximum element of an iterator, as …\nReturn the minimum and maximum element of an iterator, as …\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nDeclares a module by including a Rust source file relative …\nMaps a hash to the given <code>range</code> using retried mod mapping.\nMaps a hash to the given <code>range</code> using retried mod mapping.\nMaps a hash to the given <code>range</code> using retried mod mapping.\nMaps a hash to the given <code>range</code> using retried mod mapping.\nReturns the rights applied to this file.\nReturns the rights applied to this file.\nReturns the last modification time listed in this metadata.\nReturns the time of modification.\nReturns the time of modification.\nModifies the value inside the <code>Cell&lt;Option&lt;T&gt;&gt;</code> by applying …\nModifies the value inside the <code>Cell&lt;Option&lt;T&gt;&gt;</code> by applying …\nModifies the value inside the <code>Cell&lt;Option&lt;T&gt;&gt;</code> by applying …\nThe active modifiers of the key (e.g., Shift, Ctrl).\nThe active modifiers of the key (e.g., Shift, Ctrl).\nThe module path of the message.\nThe module path of the message, if it is a <code>&#39;static</code> string.\nMouse input capabilities.\nMove the high lanes of <code>b</code> to the low lanes of <code>a</code>, other …\nMove the low lanes of <code>b</code> to the high lanes of <code>a</code>, other …\nMove the low lane of <code>b</code> to <code>a</code>, other lanes unchanged.\nGathers the <code>i8</code> sign bit of each lane.\nCreate an <code>i32</code> mask of each sign bit in the <code>i8</code> lanes.\nGathers the sign bit of each lane.\nGathers the sign bit of each lane.\nCollects the sign bit of each lane into a 4-bit value.\nCollects the sign bit of each lane into a 4-bit value.\nMilliseconds since <code>performance.timeOrigin</code>.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nReturns the middle sub-<code>slice</code> with the given maximum <code>len</code> …\nReturns the middle exclusive sub-<code>slice</code> with the given …\nReturns the middle sub-<code>slice</code> with the given maximum <code>len</code> …\nReturns the middle exclusive sub-<code>slice</code> with the given …\nReturns the last modification time of the file, in seconds …\nReturns the last modification time of the file, in …\nReturns the last modification time of the file, in …\nReturns the last modification time of the file, in seconds …\nPerforms the <code>*</code> operation.\nComputes the matrix product (R × C) * (C × C2) = (R × …\nComputes the matrix product (R × C) * (C × C2) = (R × …\nComputes the matrix product (R × C) * (C × C2) = (R × …\nComputes the matrix product (R × C) * (C × C2) = (R × …\nComputes the matrix product (R × C) * (C × C2) = (R × …\nComputes the matrix product (R × C) * (C × C2) = (R × …\nComputes the matrix product (R × C) * (C × C2) = (R × …\nComputes the matrix product (R × C) * (C × C2) = (R × …\nLanewise <code>a * b</code> with 32-bit lanes.\nFused multiply-add. Computes <code>(self * mul) + add</code> with only …\nPerforms the <code>*=</code> operation.\nMultiply two <code>u32</code>, outputting the low bits and storing the …\nMultiply two <code>u64</code>, outputting the low bits and storing the …\nReturns the result of multiplying this duration by the …\nMultiplies <code>Duration</code> by <code>f32</code>.\nReturns the result of multiplying this duration by the …\nMultiplies <code>Duration</code> by <code>f64</code>.\nMultiply <code>i16</code> lanes producing <code>i32</code> values, horizontal add …\nMultiply <code>i16</code> lanes producing <code>i32</code> values, horizontal add …\nLanewise <code>a * b</code> with lanes as <code>i16</code>, keep the high bits of …\nMultiply the <code>i16</code> lanes and keep the high half of each …\nLanewise <code>a * b</code> with lanes as <code>i16</code>, keep the low bits of the …\nMultiply the <code>i16</code> lanes and keep the low half of each …\nMultiply <code>i16</code> lanes into <code>i32</code> intermediates, keep the high …\nMultiply <code>i16</code> lanes into <code>i32</code> intermediates, keep the high …\nMultiply the <code>i32</code> lanes and keep the low half of each …\nPerforms a “carryless” multiplication of two <code>i64</code> …\nMultiply the lower <code>i32</code> within each <code>i64</code> lane, <code>i64</code> output.\nLanewise <code>a * b</code>.\nLow lane <code>a * b</code>, other lanes unchanged.\nLanewise <code>a * b</code>.\nLowest lane <code>a * b</code>, high lane unchanged.\nLanewise <code>a * b</code> with <code>f32</code> lanes.\nLanewise <code>a * b</code> with <code>f64</code> lanes.\nLanewise <code>a * b</code> with lanes as <code>u16</code>, keep the high bits of …\nMultiply the <code>u16</code> lanes and keep the high half of each …\nMultiply the lower <code>u32</code> within each <code>u64</code> lane, <code>u64</code> output.\nThis is dumb and weird.\nThis is dumb and weird.\nMultiplies the odd <code>i32</code> lanes and gives the widened (<code>i64</code>) …\nMultiplies the odd <code>u32</code> lanes and gives the widened (<code>u64</code>) …\nWhether multiple windows are supported.\nReturn an iterator adaptor that iterates over the …\nReturn an iterator adaptor that iterates over the …\nComputes eight <code>u16</code> “sum of absolute difference” values …\nComputes eight <code>u16</code> “sum of absolute difference” values …\nGets the value of the <code>IP_MULTICAST_LOOP</code> option for this …\nGets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …\nReturns the address’s multicast scope if the address is …\nGets the value of the <code>IP_MULTICAST_TTL</code> option for this …\nAn iterator adaptor that allows the user to peek at …\nAn iterator adaptor that allows the user to peek at …\nUnzip this iterator into multiple collections.\nConverts an iterator of tuples into a tuple of containers.\nConverts an iterator of tuples into a tuple of containers.\nThe numerator.\nReturns the name of the prefix.\nReturns the static name of the storage implementation.\nNames the thread-to-be. Currently the name is used for …\nGets the thread’s name.\n(name) Gets the window name.\n(name) Gets the window name.\nReturns the time code, up to seconds, as …\nReturns the time code, up to seconds, as …\nInequality for two <code>Arc</code>s.\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nReturns <code>true</code> if <code>self != other</code> using total order.\nReturns <code>true</code> if <code>self != other</code>.\nReturns <code>true</code> if <code>self != other</code>.\nReturns <code>true</code> if <code>self != other</code>.\nInequality for two <code>Rc</code>s.\nDetermines if the elements of this <code>Iterator</code> are not equal …\nDetermines if the elements of this <code>Iterator</code> are not equal …\nDetermines if the elements of this <code>Iterator</code> are not equal …\nDetermines if the elements of this <code>Iterator</code> are not equal …\nDetermines if the elements of this <code>Iterator</code> are not equal …\nDetermines if the elements of this <code>Iterator</code> are not equal …\nDetermines if the elements of this <code>Iterator</code> are not equal …\nDetermines if the elements of this <code>Iterator</code> are not equal …\nCreates a <code>NonExtreme*</code> <code>niche</code> value with compile-time …\nInformation about something that was needed, expected or …\nReturns true if dropping values of type T matters.\nPerforms the unary <code>-</code> operation.\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nThe negative absolute value of <code>self</code>.\nReturns the negative absolute value of this time delta.\nReturns the negative version of the angle (no-op for …\nReturns the negative version of the angle.\nReturns the negative version of the angle.\nConstructs a new <code>Arc&lt;T&gt;</code>.\nConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. …\nCreates a new <code>Atomic</code>.\nCreates a new <code>TypeResource</code> instance with the given inner …\nCreates a new <code>Mismatch</code> with the specified <code>need</code> and <code>have</code>.\nCreates an empty <code>HashMap</code>.\nA constructor with the given <code>state</code> and <code>value</code>.\nA constructor with the given <code>value</code> and <code>quant</code>.\nAllocates memory on the heap and then places <code>x</code> into it.\nCreates a new <code>AtomicBool</code>.\nCreates a new <code>AtomicPtr</code>.\nCreates a new atomic integer.\nCreates a new atomic integer.\nCreates a new atomic integer.\nCreates a new atomic integer.\nCreates a non-zero if the given value is not zero.\nCreates a new atomic integer.\nCreates an empty <code>BinaryHeap</code> as a max-heap.\nCreates a new atomic integer.\nCreates a new atomic integer.\nCreates a new atomic integer.\nCreates a new atomic float.\nCreates a new atomic integer.\nCreates a new atomic integer.\nCreates a new atomic float.\nCreates a new atomic integer.\nCreates a new atomic integer.\nReturns a new <code>Array</code> from the given primitive <code>array</code>.\nCreates an empty <code>HashSet</code>.\nMakes a new, empty <code>BTreeMap</code>.\nReturns an empty destaque, allocated in the stack, cloning …\nReturns an empty destaque, allocated in the heap, cloning …\nReturns an empty stack, allocated in the heap, cloning …\nReturns an empty stack, allocated in the stack, cloning …\nConstructs a new empty <code>OsString</code>.\nCoerces into an <code>OsStr</code> slice.\nCreates a new <code>IdPin</code> with a unique stack memory address.\nCreates a new <code>NonNull</code> if <code>ptr</code> is non-null.\nConstructs a new (empty) queue.\nConstructs a new (empty) stack.\nConstruct a stack-based DST.\nCreates a new <code>BufReader&lt;R&gt;</code> with a default buffer capacity. …\nCreates a new <code>BufWriter&lt;W&gt;</code> with a default buffer capacity. …\nCreates a new <code>LineWriter</code>.\nNew <code>Rgb&lt;u8&gt;</code>.\nNew <code>Rgba8</code>.\nNew <code>Rgb&lt;u16&gt;</code>.\nNew <code>Rgba&lt;u16&gt;</code>.\nCreates a new I/O error from a known kind of error as well …\nMakes a new, empty <code>BTreeSet</code>.\nConstructs a new Distance from the given dimensions.\nCreates a new <code>IoSliceMut</code> wrapping a byte slice.\nConstructs a new Extent from the given dimensions.\nConstructs a new Position from the given dimensions.\nCreates an empty <code>LinkedList</code>.\nReturns a new <code>Vector</code> from the given <code>coords</code> array.\nReturns a new <code>VecVector</code> from the given <code>coords</code> vector.\nReturns a new <code>Point</code> from the given <code>coords</code> array.\nReturns new <code>Points</code> from the given <code>coords</code> array.\nCreates a new wavelet component of a specified type, …\nCreates a new <code>BumpAlloc</code> from <code>start..end</code> addresses.\nCreates an empty deque.\nCreates a new <code>BareBox</code> storage for the given <code>t</code>.\nCreates a new lazy value with the given initializing …\nCreates a new uninitialized cell.\nCreates a new <code>Cell</code> containing the given value.\nCreates a new <em>current guard</em> for the given value.\nCreates a new <code>Current&lt;T&gt;</code> marker object.\nConstructs a new <code>Rc&lt;T&gt;</code>.\nCreates a new <code>RefCell</code> containing <code>value</code>.\nConstructs a new instance of <code>UnsafeCell</code> which will wrap …\nAllocates an empty <code>PathBuf</code>.\nDirectly wraps a string slice as a <code>Path</code> slice.\nConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. …\nConstructs a new <code>Command</code> for launching the program at path …\nReturns a new <code>LinuxSigaction</code> for a simple handler.\nCreates a new condition variable which is ready to be …\nCreates a new mutex in an unlocked state ready for use.\nCreates a new <code>Once</code> value.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.\nCreates a <code>PoisonError</code>.\nCreates a new barrier that can block a given number of …\nCreates a new lazy value with the given initializing …\nCreates a new uninitialized cell.\nConstructs a new, empty <code>Vec&lt;T&gt;</code>.\nCreates a new <code>CodecBe</code> combinator.\nCreates a new <code>CodecLe</code> combinator.\nCreates a new C-compatible string from a container of …\nGenerates the base configuration for spawning a thread, …\nCreates a new empty <code>String</code>.\nCreates a blank new set of options ready for configuration.\nCreates a new <code>FileTimes</code> with no times set.\nCreates a new set of options with default mode/security …\nConstructs a new <code>RandomState</code> that is initialized with …\nCreates a new cursor wrapping the provided underlying …\nCreates a new <code>CodecIf</code> combinator.\nCreates a new <code>CodecFlags</code> combinator from 8 <code>bool</code>s.\nCreates a new <code>CodecJoin</code> combinator, without a separator.\nCreates a new <code>IoSlice</code> wrapping a byte slice.\nCreates a new <code>CodecLen</code>.\nCreates a new TLV combinator.\nReturns a new <code>Base</code> with the chosen generics.\nReturns a default Fx hasher.\nReturns a default Fx hasher.\nReturns a default Fx hasher.\nReturns a default pengy hasher.\nReturns a default FNV hasher.\nReturns a default FNV hasher.\nReturns a default FNV hasher.\nReturns a default FNV hasher.\nConstructs a new static map with runtime EMPTY and TOMB …\nCreates a new, empty list.\nReturns a new uninitialized empty array.\nCreates a new chunk containing a single element.\nCreates a new formatter with given <code>FormattingOptions</code>.\nCreates a new <code>IdPinBox</code> with a unique memory address.\nCreates a new BuildHasherDefault for Hasher <code>H</code>.\nReturns a new up-to-date <code>WebWindowState</code>.\nConstructs a new gamma curve with the given exponent.\nNew <code>Luminance</code> with the given channel.\nNew <code>Luminance</code> with the given channel.\nNew <code>Luminance</code> with the given channel.\nNew <code>Rgb&lt;u16&gt;</code>.\nNew <code>RgbF64</code>.\nNew <code>Rgb&lt;u8&gt;</code>.\nNew <code>RgbF64</code>.\nNew <code>Rgba&lt;u16&gt;</code>.\nNew <code>Rgba8</code>.\nNew <code>RgbF64</code>.\nNew <code>RgbF64</code>.\nReturns a new empty sixel builder.\nCreates a new <code>Waker</code> from the provided <code>data</code> pointer and …\nCreates a new angle.\nConstructs a new Orientation from the given dimensions.\nConstructs a new Stride from the given dimensions.\nReturns a new <code>Region</code> from a <code>pos</code>ition and a <code>size</code>.\nCreates a new interval with the given <code>lower</code> and <code>upper</code> …\nCreates a new <code>Ratio&lt;N, D&gt;</code>.\nReturns a seeded <code>XorShift128+</code> generator from the given 2 …\nReturns a seeded <code>XorShift128</code> generator from the given 4 × …\nReturns a seeded <code>XorShift16</code> generator from the given …\nReturns a seeded <code>XorShift32</code> generator from the given …\nReturns a seeded <code>XorShift64</code> generator from the given …\nReturns a seeded <code>XorShift8</code> generator from the given 8-bit …\nCreates a new <code>Lgc16</code> instance with the given seed.\nCreates a new Xoroshiro128++ PRNG with the given <code>seed</code>.\nReturns a seeded <code>Xyza8a</code> generator from the given 4 × …\nReturns a seeded <code>Xyza8b</code> generator from the given 4 × …\nReturns a seeded <code>Xabc</code> generator from the given 3 × 8-bit …\nCreates a new <code>TimeDelta</code> from the given number of whole …\nReturns a new <code>TimeSplit</code>.\nReturns a new <code>UnixTimeI64</code> from the given amount of seconds.\nReturns a new <code>UnixTimeU32</code> from the given amount of seconds.\nCreates a new <code>AppConfig</code> if all fields are valid.\nCreates a new Xdg directory environment.\nCreates a new Unix directory environment.\nCreates a new Apple directory environment.\nCreates a new Windows directory environment.\nReturns a <code>FsPath</code> from what could’ve been a <code>Path</code>.\nPads and aligns a value to the length of a cache line.\nCreates a new <code>FatPtr</code> from a data pointer and metadata.\nReturns a new <code>LinuxTimespec</code> with the given <code>seconds</code> and …\nReturns a new empty struct.\nCreates a new empty <code>StringNonul</code>.\nWIP\nCreates a new <code>AnsiColor8b</code> from an <code>AnsiColor3b</code>.\nCreates a new <code>CrosstermService</code>.\nReturns an uninitialized pixel-? stage with the given …\nReturns a new empty manager.\nCreates a new spinlock with the given value.\nCreates a new empty <code>StringU8</code> with a capacity of <code>CAP</code> bytes.\nReturns a <code>NonValueIsize</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueUsize</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueI128</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueI64</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueI32</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueI16</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueI8</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueU128</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueU64</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueU32</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueU16</code> with the given <code>value</code>, if it is not …\nReturns a <code>NonValueU8</code> with the given <code>value</code>, if it is not …\nWrap a value to be manually dropped.\nCreates a new <code>MaybeUninit&lt;T&gt;</code> initialized with the given …\nCreates a new inclusive range. Equivalent to writing …\nCreates a new iterator over the given <code>array</code>.\nCreates a new IPv4 address from four eight-bit octets.\nCreates a new IPv6 address from eight 16-bit segments.\nCreates a new socket address from an IP address and a port …\nCreates a new socket address from an <code>IPv4</code> address and a …\nCreates a new socket address from an <code>IPv6</code> address, a …\nConstructs a new <code>Pin&lt;Ptr&gt;</code> around a pointer to some data of …\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …\nCreates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>,\nConstructs a <code>Layout</code> suitable for holding a value of type <code>T</code>.\nReturns a seeded <code>XorShift128</code> generator from the given 4 × …\nReturns a seeded <code>XorShift128</code> generator from the given 16 …\nReturns a seeded <code>Xoroshiro128pp</code> generator from the given …\nReturns a seeded <code>XorShift128+</code> generator from the given …\nReturns a seeded <code>XorShift128</code> generator from the given …\nReturns a seeded <code>Xoroshiro128pp</code> generator from the given …\nReturns a seeded <code>XorShift16</code> generator from the given …\nReturns a seeded <code>Lgc16</code> generator from the given 16-bit …\nReturns a seeded <code>XorShift32</code> generator from the given …\nReturns a seeded <code>Xyza8a</code> generator from the given 32-bit …\nReturns a seeded <code>Xyza8a</code> generator from the given 32-bit …\nReturns a seeded <code>XorShift64</code> generator from the given …\nReturns a seeded <code>XorShift8</code> generator from the given 8-bit …\nReturns a seeded <code>XorShift32</code> generator from the given 2 × …\nReturns a seeded <code>Xyza8a</code> generator from the given 2 × …\nReturns a seeded <code>Xyza8a</code> generator from the given 2 × …\nReturns a seeded <code>XorShift64</code> generator from the given 2 × …\nReturns a seeded <code>XorShift128+</code> generator from the given 2 …\nReturns a seeded <code>XorShift128</code> generator from the given 2 × …\nReturns a seeded <code>Xoroshiro128pp</code> generator from the given 2 …\nReturns a seeded <code>XorShift16</code> generator from the given 2 × …\nReturns a seeded <code>Lgc16</code> generator from the given 2 × 8-bit …\nReturns a seeded <code>Xabc</code> generator from the given 3 × 8-bit …\nReturns a seeded <code>XorShift64</code> generator from the given 4 × …\nReturns a seeded <code>XorShift128+</code> generator from the given 4 …\nReturns a seeded <code>XorShift128</code> generator from the given 4 × …\nReturns a seeded <code>Xoroshiro128pp</code> generator from the given 4 …\nReturns a seeded <code>XorShift32</code> generator from the given 4 × …\nReturns a seeded <code>Xyza8b</code> generator from the given 4 × …\nReturns a seeded <code>Xyza8b</code> generator from the given 4 × …\nReturns a seeded <code>XorShift128+</code> generator from the given 8 …\nReturns a seeded <code>XorShift128</code> generator from the given 8 × …\nReturns a seeded <code>Xoroshiro128pp</code> generator from the given 8 …\nReturns a seeded <code>XorShift64</code> generator from the given 4 × …\nReturns a new <code>Array</code> allocated in the stack, from the given …\nReturns a new <code>Array</code> from the given <code>boxed_array</code>.\nCreate a buffer resource object.\nCreates a new <code>Ratio&lt;N, D&gt;</code>, ensuring <code>d != 0</code>.\nConstructs a new (empty) stack, in compile-time.\nReturns an empty destaque, allocated in the stack, copying …\nReturns an empty stack, allocated in the stack, copying …\nReturns a <code>&amp;str</code> backed by a <code>buffer</code>, where you always know …\nReturns a <code>String</code> where you always know each character’s …\nReturns a <code>&amp;str</code> backed by a <code>buffer</code>, where you always know …\nConstructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …\nConstructs a new <code>Rc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …\nConstructs a new <code>Rc&lt;T, A&gt;</code> in the given allocator while …\nCreates a normalized full positive angle at 0 degrees.\nCreates a normalized full positive angle at 0 degrees.\nCreates a normalized full positive angle at 0 degrees.\nReturns a new <code>TimeSplitHourNano</code>.\nReturns a new <code>TimeSplitHourNano</code>.\nReturns a new <code>TimeSplitHourSec</code>.\nReturns a new <code>TimeSplitHourSec</code>.\nCreates an empty <code>HashMap</code> using the given allocator.\nAllocates memory in the given allocator then places <code>x</code> into …\nCreates an empty <code>BinaryHeap</code> as a max-heap, using <code>A</code> as …\nCreates an empty <code>HashSet</code>.\nMakes a new empty BTreeMap with a reasonable choice for B.\nMakes a new <code>BTreeSet</code> with a reasonable choice of B.\nConstructs an empty <code>LinkedList&lt;T, A&gt;</code>.\nCreates an empty deque.\nConstructs a new <code>Rc</code> in the provided allocator.\nConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory, …\nConstructs a new, empty <code>Vec&lt;T, A&gt;</code>.\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nCreates a non-value integer, automatically converting the …\nReturns a new <code>TimeSplitMilliNano</code>.\nReturns a new <code>TimeSplitMilliNano</code>.\nReturns a new raw value.\nSame as “new_render_pass”, but allows multiple color …\nReturns a new rendering backend.\nCreates a normalized right positive angle at 90 degrees …\nCreates a normalized right positive angle at 90 degrees.\nCreates a normalized right positive angle at 90 degrees.\nFor metal context’s ShaderSource should contain MSL …\nReturns a new <code>LinuxSigaction</code> for a <code>SA_SIGINFO</code> handler.\nConstruct from a <code>str</code> using a default-constructed buffer\nConstruct from a <code>str</code> using a provided buffer\nCreates a normalized straight positive angle at 180 …\nCreates a normalized straight positive angle at 180 …\nCreates a normalized straight positive angle at 180 …\nCreates a non-zero without checking whether the value is …\nCreates a new <code>NonNull</code>.\nReturns a seeded <code>XorShift128p</code> generator from the given …\nReturns a seeded <code>XorShift128</code> generator from the given …\nReturns a seeded <code>XorShift16</code> generator from the given 8-bit …\nReturns a seeded <code>XorShift32</code> generator from the given 8-bit …\nReturns a seeded <code>XorShift64</code> generator from the given 8-bit …\nReturns a seeded <code>XorShift8</code> generator from the given 8-bit …\nCreates a new Xoroshiro128++ PRNG with the given seed …\nReturns a <code>NonValueIsize</code> if the given <code>value</code> if it is not …\nReturns a <code>NonValueUsize</code> if the given <code>value</code> if it is not …\nReturns a <code>NonValueI128</code> if the given <code>value</code> if it is not …\nReturns a <code>NonValueI64</code> if the given <code>value</code> if it is not …\nReturns a <code>NonValueI32</code> if the given <code>value</code> if it is not …\nReturns a <code>NonValueI16</code> if the given <code>value</code> if it is not …\nReturns a <code>NonValueI8</code> if the given <code>value</code> if it is not equal …\nReturns a <code>NonValueU128</code> if the given <code>value</code> if it is not …\nReturns a <code>NonValueU64</code> if the given <code>value</code> if it is not …\nReturns a <code>NonValueU32</code> if the given <code>value</code> if it is not …\nReturns a <code>NonValueU16</code> if the given <code>value</code> if it is not …\nReturns a <code>NonValueU8</code> if the given <code>value</code> if it is not equal …\nCreates an iterator over the elements in a …\nConstructs a new <code>Pin&lt;Ptr&gt;</code> around a reference to some data …\nConstructs a new <code>Arc</code> with uninitialized contents.\nConstructs a new box with uninitialized contents.\nConstructs a new <code>Rc</code> with uninitialized contents.\nConstructs a new box with uninitialized contents in the …\nConstructs a new <code>Rc</code> with uninitialized contents in the …\nConstructs a new atomically reference-counted slice with …\nConstructs a new boxed slice with uninitialized contents.\nConstructs a new reference-counted slice with …\nConstructs a new boxed slice with uninitialized contents …\nConstructs a new reference-counted slice with …\nReturns a new <code>TimeSplitYearDay</code>.\nReturns a new <code>TimeSplitYearDay</code>.\nReturns a new <code>TimeSplitYearSec</code>.\nReturns a new <code>TimeSplitYearSec</code>.\nConstructs a new <code>Box</code> with uninitialized contents, with the …\nConstructs a new <code>Rc</code> with uninitialized contents, with the …\nConstructs a new <code>Box</code> with uninitialized contents, with the …\nConstructs a new <code>Rc</code> with uninitialized contents, with the …\nConstructs a new boxed slice with uninitialized contents, …\nConstructs a new reference-counted slice with …\nConstructs a new boxed slice with uninitialized contents …\nConstructs a new reference-counted slice with …\nAdvances the iterator and returns the next value.\nIterates over shared references.\nIterates over shared references.\nReturns the next month.\nReturns the next weekday,\nOverflow Behavior\nGenerates the next 2 random <code>u32</code> values.\nGenerates the next random value split into 2 u16 values.\nGenerates the next 4 random <code>u32</code> values.\nGenerates the next random value split into 4 u8 values.\nAdvances the iterator and returns the next items grouped …\nAdvances the iterator and returns the next items grouped …\nRemoves and returns an element from the end of the …\nIterates over shared references.\nAdvances the iterator and returns an array containing the …\nAdvances the iterator and returns an array containing the …\nAdvances the iterator and returns an array containing the …\nAdvances the iterator and returns an array containing the …\nAdvances the iterator and returns an array containing the …\nAdvances the iterator and returns an array containing the …\nAdvances the iterator and returns an array containing the …\nAdvances the iterator and returns an array containing the …\nConsume and return the next value of this iterator if a …\nConsume and return the next item if it is equal to <code>expected</code>…\nRetrieve the current position of the iterator.\nReturns the next <code>nth</code> month.\nReturns the next <code>nth</code> weekday.\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nAdvances the iterator and returns the next items grouped …\nAdvances the iterator and returns the next items grouped …\nReturns the next u128, advancing the state 4 times.\nReturns the next random <code>u16</code>.\nAdvances to the next random <code>u16</code> value.\nReturns the next random <code>u32</code>, from the first 32-bits of …\nReturns the next random <code>u32</code>, from the first 32-bits of …\nReturns the next 2 × random <code>u16</code> combined as a single <code>u32</code>.\nReturns the next random <code>u32</code>.\nReturns the next random <code>u32</code>.\nReturns the next random <code>u32</code>, from the first 32-bits of …\nReturns the next 4 × random <code>u8</code> combined as a single <code>u32</code>.\nReturns the next 2 × random <code>u16</code> combined as a single <code>u32</code>.\nReturns the next random <code>u32</code>.\nGenerates the next random <code>u32</code> value.\nReturns the next 4 × random <code>u8</code> combined as a single <code>u32</code>.\nReturns the next 4 × random <code>u8</code> combined as a single <code>u32</code>.\nReturns the next 4 × random <code>u8</code> combined as a single <code>u32</code>.\nReturns the next random <code>u64</code>.\nReturns the next random <code>u64</code>.\nReturns the next random <code>u64</code>.\nReturns the next random <code>u64</code>.\nReturns the next 4 × random <code>u16</code> combined as a single <code>u64</code>.\nReturns the next 2 × random <code>u32</code> combined as a single <code>u64</code>.\nReturns the next random <code>u64</code>.\nReturns the next random <code>u64</code>.\nReturns the next 8 × random <code>u8</code> combined as a single <code>u64</code>.\nReturns the next 4 × random <code>u16</code> combined as a single <code>u64</code>.\nReturns the next u64, advancing the state 2 times.\nReturns the next random <code>u64</code>.\nReturns the next 8 × random <code>u8</code> combined as a single <code>u64</code>.\nReturns the next 8 × random <code>u8</code> combined as a single <code>u64</code>.\nReturns the next 8 × random <code>u8</code> combined as a single <code>u64</code>.\nUpdates the state and returns the next random <code>u8</code>.\nAdvances the state and returns the next random <code>u8</code>.\nReturns the next random <code>u8</code>.\nAdvances the state and returns the next random <code>u8</code>.\nDrops the next of stack element.\nDrops the pair of next stack elements.\nReturns the number of hard links pointing to this file.\nReturns the number of hard links pointing to this file.\nCreates a new <code>PtrNonNull</code> that is dangling, but …\nConverts a mutable reference to a <code>PtrNonNull</code>.\nConverts a reference to a <code>PtrNonNull</code>.\nCreates a new <code>PtrNonNull</code> if <code>ptr</code> is non-null.\nCreates a <code>PtrNonNull</code> with the given address and no …\nReturns this tuple without the head.\nDisables running and inheriting spawn hooks.\nReturns this tuple without the tail.\nGets the value of the <code>TCP_NODELAY</code> option on this socket.\nReturns a reference to a <code>Waker</code> that does nothing when used.\nReturns the normalized vector, as a <em>unit vector</em>.\nReturns the angle normalized (no-op for integer …\nReturns the angle normalized (no-op for integer …\nReturns the angle normalized to the non-inclusive range -1 …\nNormalize a path, including <code>..</code> without traversing the …\nPerforms the unary <code>!</code> operation.\nNot a direct intrinsic, but it’s very useful and the …\nNot a direct intrinsic, but it’s very useful and the …\nNot a direct intrinsic, but it’s very useful and the …\nNot a direct intrinsic, but it’s very useful and the …\nNot a direct intrinsic, but it’s very useful and the …\nNot a direct intrinsic, but it’s very useful and the …\nLogical “not” with a boolean value.\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nApplies the <code>not</code> operation, (returns <code>False</code>).\nApplies the <code>not</code> operation, (returns <code>True</code>).\nApplies the <code>not</code> operation, (returns <code>False</code>).\nApplies the <code>not</code> operation, (returns <code>True</code>).\nWakes up all blocked threads on this condvar.\nWakes up one blocked thread on this condvar.\nReturns an instant corresponding to “now”.\nReturns the system time corresponding to “now”.\nReturns the current instant using <code>performance.now()</code>.\nReturns a new <code>UnixTimeI64</code> anchored to the current second.\nReturns a new <code>UnixTimeU32</code> anchored to the current second.\nReturns the current timestamp in microseconds.\nReturns the current timestamp in microseconds.\nReturns the current timestamp in milliseconds.\nReturns the current timestamp as an <code>f64</code> value in …\nReturns the current timestamp as an <code>f64</code> value in …\nReturns the current timestamp in nanoseconds.\nReturns the current timestamp in nanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nReturns the <code>nth</code> element, or <code>None</code> if <code>nth &gt;= ARITY</code>.\nReturns the <code>n</code>th element of the iterator.\nReturns the <code>n</code>th element of the iterator.\nReturns the <code>n</code>th element of the iterator.\nReturns the <code>n</code>th element of the iterator.\nReturns the <code>n</code>th element of the iterator.\nReturns the <code>n</code>th element of the iterator.\nReturns the <code>n</code>th element of the iterator.\nReturns the <code>n</code>th element of the iterator.\nReturns the <code>n</code>th element from the end of the iterator.\nReturns the <code>n</code>th element from the end of the iterator.\nReturns the <code>n</code>th element from the end of the iterator.\nReturns the <code>n</code>th element from the end of the iterator.\nReturns the <code>n</code>th element from the end of the iterator.\nReturns the <code>n</code>th element from the end of the iterator.\nReturns the <code>n</code>th element from the end of the iterator.\nReturns the <code>n</code>th element from the end of the iterator.\nReturns the <code>nth</code> element cloned, or <code>None</code> if <code>nth &gt;= ARITY</code>.\nReturns an exclusive reference to the <code>nth</code> element, or <code>None</code> …\nReturns a shared reference to the <code>nth</code> element, or <code>None</code> if …\nCreates a null raw pointer.\nThis stream will be ignored. This is the equivalent of …\nCreates a null mutable raw pointer.\nReturns the number of columns, equivalent to <code>cap_row</code> == <code>C</code>.\nReturns the inner <code>self</code> representation.\nReturns the number of items in the major dimension based …\nReturns the number of items in the major dimension based …\nReturns the number of items in the minor dimension based …\nReturns the number of items in the minor dimension based …\nReturns the number of rows, equivalent to <code>cap_col</code> == <code>R</code>.\nFeatures\nFeatures\nReturns the Month number from <code>January=1</code> to <code>December=12</code>.\nReturns the weekday number from <code>Monday=1</code> to <code>Sunday=7</code>.\nReturns the weekday number from <code>Sunday=1</code> to <code>Monday=7</code>.\nCreates a <code>NonZero*</code> <code>niche</code> value with compile-time checking.\nReturns the four eight-bit integers that make up this …\nReturns the sixteen eight-bit integers the IPv6 address …\nAdds an offset to a pointer.\nCalculates the distance between two pointers within the …\nCalculates the distance between two pointers within the …\n<code>core</code> Expands to the offset in bytes of a field from the …\nConverts from <code>Result&lt;T, E&gt;</code> to <code>Option&lt;T&gt;</code>.\nTransforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping …\nProvides a default error if the <code>Option</code> is <code>None</code>.\nTransforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping …\nCreates an iterator that yields an element exactly once.\nCreates an iterator that lazily generates a value exactly …\nAttempts to open a file in read-only mode.\nOpens a file at <code>path</code> with the options specified by <code>self</code>.\nCreates an open interval $(l, u)$ <em><code>lower..&lt;upper</code></em>.\nAttempts to open a file in read-only mode with buffering.\nCreates a half-open interval $(l, u]$ <em><code>lower..&lt;=upper</code></em>.\nCreates an interval $(l, ∞)$ <em><code>lower..&lt;</code></em>.\n<code>core</code> Optionally inspects an environment variable at …\nReturns a new OpenOptions object.\nReturns the formatting options this formatter corresponds …\nLogical “or” with a boolean value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nApplies the <code>or</code> operation to <code>_other</code>, (returns <code>True</code>).\nApplies the <code>or</code> operation to <code>other</code>, (returns <code>other</code>).\nReturns the option if it contains a value, otherwise …\nReturns <code>res</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the default …\nReturns the option if it contains a value, otherwise calls …\nCalls <code>op</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting, if empty, …\nEnsures a value is in the entry by inserting, if empty, …\nApplies the <code>or</code> operation to <code>_other</code>, (returns <code>True</code>).\nApplies the <code>or</code> operation to <code>other</code>, (returns <code>other</code>).\nReturns the time origin using <code>performance.timeOrigin()</code>.\nPrints to the standard error.\nPrints to the standard error, with a newline.\nPrints to the standard output.\nPrints to the standard output, with a newline.\nThe name of the detected OS version.\nCreates a new I/O error from an arbitrary error payload.\n(outerWidth) (outerHeight) The extent in pixels of the …\nExecutes the command as a child process, waiting for it to …\nDuplicates the next of stack element to the top.\nDuplicates the next of stack pair of elements to the top.\nDuplicates the second back pair of elements, at the back.\nDuplicates the second front pair of elements, at the front.\nDuplicates the second back element, at the back.\nDuplicates the second front element, at the front.\nComputes the absolute value of self, with overflow …\nComputes the absolute value of self, with overflow …\nComputes the absolute value of self, with overflow …\nComputes the absolute value of self, with overflow …\nComputes the absolute value of self, with overflow …\nComputes the absolute value of self, with overflow …\nNegates self, overflowing if this is equal to the minimum …\nNegates self, overflowing if this is equal to the minimum …\nNegates self, overflowing if this is equal to the minimum …\nNegates self, overflowing if this is equal to the minimum …\nNegates self, overflowing if this is equal to the minimum …\nNegates self, overflowing if this is equal to the minimum …\nClears the stack in compile-time.\nDrops the top stack element in compile-time.\nDrops the top <code>n</code> stack elements.\nDrops the top <code>n</code> stack elements, unchecked version.\nSwaps the top two pair stack elements, unchecked version.\nDuplicates the top stack element.\nDuplicates the top stack pair of elements.\nDuplicates the top stack pair of elements, unchecked …\nDuplicates the top stack element, unchecked version.\nReturns an empty stack, allocated in the stack, copying …\nReturns both the next random state and the <code>u16</code> value.\nReturns both the next state and the <code>u16</code> value.\nReturns both the next random state and the <code>u32</code> value.\nReturns both the next random state and the <code>u32</code> value in a …\nReturns both the next random state and the <code>u64</code> value.\nReturns both the next random state and the <code>u64</code> value.\nReturns both the next random state and the <code>u64</code> value.\nReturns both the next random state and the <code>u8</code> value.\nReturns both the next random state and the <code>u8</code> value.\nReturns both the next random state and the <code>u8</code> value.\nReturns both the next random state and the <code>u8</code> value.\nDrops the next of stack element in compile-time.\nDrops the pair of next stack elements.\nDrops the pair of next stack elements, unchecked version.\nDrops the next of stack element in compile-time, unchecked …\nDuplicates the next of stack element to the top.\nDuplicates the next of stack pair of elements to the top.\nDuplicates the next of stack pair of elements to the top.\nDuplicates the next of stack element to the top.\nPeeks the top stack element in compile-time.\nPeeks the top stack element in compile-time, unchecked …\nPops the top stack element in compile-time.\nPops the top stack element in compile-time, unchecked …\nPushes a new <code>element</code> to the top of the stack in …\nPushes a new <code>element</code> to the top of the stack in …\nConverts the current stack to a different capacity while …\nConverts the current stack to a different capacity, …\nRotates the top three stack elements, clockwise.\nRotates the top six stack elements, clockwise, two times.\nRotates the top six stack elements, counter-clockwise, two …\nRotates the top six stack elements, counter-clockwise, two …\nRotates the top six stack elements, clockwise, two times, …\nRotates the top three stack elements, counter-clockwise.\nRotates the top three stack elements, counter-clockwise, …\nRotates the top three stack elements, clockwise, unchecked …\nSwaps the top two stack elements in compile-time.\nSwaps the top two pair stack elements in compile-time.\nSwaps the top two pair stack elements in compile-time, …\nSwaps the top two stack elements in compile-time, …\nConverts the current stack index size <code>IDX</code> to a <code>NEW_IDX</code>.\nDuplicates the top element before the next of stack …\nDuplicates the top pair of elements before the next of …\nDuplicates the top pair of elements before the next of …\nDuplicates the top element before the next of stack …\nConverts to the owned backing type if not already owned.\nConverts a <code>bitmap</code> of 1-bit bits into PBM ASCII P1 …\nConverts a <code>bitmap</code> of 1-bit bytes into PBM ASCII P1 …\nSaturating convert <code>i16</code> to <code>i8</code>, and pack the values.\nSaturating convert <code>i16</code> to <code>i8</code>, and pack the values.\nSaturating convert <code>i16</code> to <code>u8</code>, and pack the values.\nSaturating convert <code>i16</code> to <code>u8</code>, and pack the values.\nSaturating convert <code>i32</code> to <code>i16</code>, and pack the values.\nSaturating convert <code>i32</code> to <code>i16</code>, and pack the values.\nSaturating convert <code>i32</code> to <code>u16</code>, and pack the values.\nSaturating convert <code>i32</code> to <code>u16</code>, and pack the values.\nTakes a string slice and emits it to the internal buffer …\nPerforms the correct padding for an integer which has …\nCreates a layout by rounding the size of this layout up to …\nReturn an iterator adaptor that pads the sequence to a …\nReturn an iterator adaptor that pads the sequence to a …\nReturns the amount of padding we must insert after <code>self</code> to …\n<code>core</code> Panics the current thread.\nDetermines whether the current thread is unwinding because …\nDetermines whether the current thread is unwinding because …\nReturns the <code>Path</code> without its final component, if there is …\nReturns the path without its final component, if there is …\nBlocks unless or until the current thread’s token is …\nBlocks unless or until the current thread’s token is …\nBlocks unless or until the current thread’s token is …\nBlocks unless or until the current thread’s token is …\nParse an IP address from a slice of bytes.\nParse an IPv4 address from a slice of bytes.\nParse an IPv6 address from a slice of bytes.\nParse a socket address from a slice of bytes.\nParse an IPv4 socket address from a slice of bytes.\nParse an IPv6 socket address from a slice of bytes.\nThis method returns an ordering between <code>self</code> and <code>other</code> …\nPartial comparison for two <code>Arc</code>s.\nCompare need first. If they are equal, then compare have.\nState’s ordering takes precedence over value’s …\nCompare <code>value</code> first. If they are equal, then compare <code>quant</code>.\nPartial comparison for two <code>Rc</code>s.\nPanics\nLexicographically compares the <code>PartialOrd</code> elements of this …\nLexicographically compares the <code>PartialOrd</code> elements of this …\nLexicographically compares the <code>PartialOrd</code> elements of this …\nLexicographically compares the <code>PartialOrd</code> elements of this …\nLexicographically compares the <code>PartialOrd</code> elements of this …\nLexicographically compares the <code>PartialOrd</code> elements of this …\nLexicographically compares the <code>PartialOrd</code> elements of this …\nLexicographically compares the <code>PartialOrd</code> elements of this …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nApproximates the partial derivative of the 2D function <code>f</code> …\nApproximates the partial derivative of the 2D function <code>f</code> …\nConsumes an iterator, creating two collections from it.\nConsumes an iterator, creating two collections from it.\nConsumes an iterator, creating two collections from it.\nConsumes an iterator, creating two collections from it.\nConsumes an iterator, creating two collections from it.\nConsumes an iterator, creating two collections from it.\nConsumes an iterator, creating two collections from it.\nConsumes an iterator, creating two collections from it.\nReorders the elements of this iterator <em>in-place</em> according …\nReorders the elements of this iterator <em>in-place</em> according …\nReorders the elements of this iterator <em>in-place</em> according …\nReorders the elements of this iterator <em>in-place</em> according …\nReorders the elements of this iterator <em>in-place</em> according …\nReorders the elements of this iterator <em>in-place</em> according …\nReorders the elements of this iterator <em>in-place</em> according …\nReorders the elements of this iterator <em>in-place</em> according …\nCollect all iterator elements into one of two partitions. …\nCollect all iterator elements into one of two partitions. …\nReturns the index of the partition point according to the …\nPartition a sequence of <code>Result</code>s into one list of all the <code>Ok</code>…\nPartition a sequence of <code>Result</code>s into one list of all the <code>Ok</code>…\n<code>paste</code> Allows to paste identifiers together.\nReturns the full path to the file that this entry …\nThe inner <code>PathBuf</code>.\nPauses execution until receiving from <em>stdin</em> any <code>char</code> in …\nReturns the payload associated with the panic.\nReturns the payload associated with the panic.\nReturns the payload associated with the panic, if it is a …\nCompares and returns a <code>PartialOrd</code>ered <code>value</code> clamped …\nReturns the greatest item in the binary heap, or <code>None</code> if …\nPeeks the top stack element.\nAttempt to look ahead <code>n</code> bytes.\nReceives data on the socket from the remote address to …\nReceives single datagram on the socket from the remote …\nReturns a reference to the next() value without advancing …\nReturns a shared reference to the back element.\nReturns an exclusive reference to the back element.\nReceives a single datagram message on the socket, without …\nReturns a shared reference to the front element.\nReturns an exclusive reference to the front element.\nReturns a mutable reference to the greatest item in the …\nMutably peeks the top stack element.\nReturns a mutable reference to the last item in the …\nReturns a mutable reference to the next() value without …\nReturns a copy of the next new random state.\nReturns a copy of the next new random state.\nReturns a copy of the next new random state.\nReturns a copy of the next new random state.\nReturns a copy of the next new random state.\nReturns a copy of the next new random state.\nReturns a copy of the next state of the generator.\nReturns a copy of the next new random state.\nReturns a copy of the next new random state.\nReturns a copy of the next new random state.\nPeeks the <code>nth</code> element from the top of the stack.\nReturns a shared reference to the <code>nth</code> back element.\nReturns an exclusive reference to the <code>nth</code> back element.\nReturns a shared reference to the <code>nth</code> front element.\nReturns an exclusive reference to the <code>nth</code> front element.\nMutably peeks the <code>nth</code> element from the top of the stack.\nCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> …\nCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> …\nCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> …\nCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> …\nCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> …\nCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> …\nCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> …\nCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> …\nPass a reference to the next iterator element to the …\nReturn an iterator adaptor that borrows from this iterator …\nReturn an iterator adaptor that borrows from this iterator …\nReturns the socket address of the remote peer of this TCP …\nReturns the socket address of the remote peer this socket …\nCreates a future which never resolves.\nCreates a future which never resolves.\n(eventCounts) Retrieves the count of recorded events.\n(now) Retrieves a high-resolution timestamp in …\n(timeOrigin) Retrieves the time origin in milliseconds.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe fundamental period of the cycle.\nReturns the permissions of the file this metadata is for.\nReturns the permissions of the file.\nGet file permissions (lower 12 bits)\n(query) Queries the status of a given permission.\nReturns the permissions of the file.\nReturn an iterator adaptor that iterates over all …\nReturn an iterator adaptor that iterates over all …\nShuffle 128 bits of floating point data at a time from <code>$a</code> …\nShuffle 128 bits of floating point data at a time from <code>a</code> …\nSlowly swizzle 128 bits of integer data from <code>a</code> and <code>b</code> using …\nShuffle the <code>f32</code> lanes from <code>a</code> using an immediate control …\nShuffle the <code>f64</code> lanes in <code>a</code> using an immediate control …\nShuffle the <code>f32</code> lanes in <code>a</code> using an immediate control …\nShuffle the <code>f64</code> lanes from <code>a</code> together using an immediate …\n🛡️ The key representing the hardware scan code.\nThe key representing the hardware scan code.\nReturns the physical size of the window in hardware …\nReturns the sender’s PID.\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\n<code>core</code> Constructs a Pin&lt;&amp;mut T&gt;, by pinning a <code>value: T</code> …\nConstructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement …\nConstructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code> in the provided allocator. If <code>T</code>…\nA new pipe should be arranged to connect the parent and …\nWhether pixel-accurate bitmaps are supported.\nReturns the number of <code>(horizontal, vertical)</code> pixels.\nReturns the number of pixels per cell …\nReturns the char of the associated planet of Helenistic …\nReturns the name of the associated planet of Helenistic …\nPlatform-specific hints (e.g., context creation, driver …\nSound playback capabilities.\nCompares and returns the maximum of two <code>PartialOrd</code>ered …\nCompares and returns the minimum of two <code>PartialOrd</code>ered …\nCreates a single-point interval, equivalent to <code>closed</code>…\nAttempts to resolve the future to a final value, …\nPolls the result of this job and writes it into <code>buffer</code>.\nPolls the result of this job.\nCreates a future that wraps a <code>function</code> returning <code>TaskPoll</code>.\nCreates a future that wraps a <code>function</code> returning <code>TaskPoll</code>.\nRemoves the greatest item from the binary heap and returns …\nPops the top stack element.\nPops the top item off the stack.\nRemove the last item from the slice.\nTruncates <code>self</code> to <code>self.parent</code>.\nRemoves the last element from a vector and returns it, or …\nRemoves the last character from the string buffer and …\nRemoves the first item (if any) from this list, and …\nTruncates <code>self</code> to <code>self.parent</code>.\nRemoves the last character and returns it, or <code>None</code> if the …\nRemoves the last character and returns it, or <code>None</code> if the …\nPops the back element.\nRemoves the last element from a list and returns it, or …\nRemoves the last element from the deque and returns it, or …\nRemoves and returns the last element from the deque if the …\nRemoves and returns the first element in the map. The key …\nRemoves the first element from the set and returns it, if …\nPops the front element.\nRemoves an item from the front of the queue.\nRemoves the first element and returns it, or <code>None</code> if the …\nRemoves the first element and returns it, or <code>None</code> if the …\nRemoves and returns the first element from the deque if …\nRemoves and returns the last element from a vector if the …\nRemoves and returns the last element in the map. The key …\nRemoves the last element from the set and returns it, if …\nRemoves the last character and returns it.\nCount the number of bits set within an <code>i32</code>\nCount the number of bits set within an <code>i64</code>\nDeposit contiguous low bits from a <code>u32</code> according to a mask.\nDeposit contiguous low bits from a <code>u64</code> according to a mask.\nExtract bits from a <code>u32</code> according to a mask.\nExtract bits from a <code>u64</code> according to a mask.\nReturns the port number associated with this socket …\nReturns the port number associated with this socket …\nReturns the port number associated with this socket …\nReturns the current position of this cursor.\nReturns the number of bytes read so far.\nSearches for an element in an iterator, returning its …\nSearches for an element in an iterator, returning its …\nSearches for an element in an iterator, returning its …\nSearches for an element in an iterator, returning its …\nSearches for an element in an iterator, returning its …\nSearches for an element in an iterator, returning its …\nSearches for an element in an iterator, returning its …\nSearches for an element in an iterator, returning its …\nPosition index of the component within the resolution …\nReturn the position of the maximum element in the iterator.\nReturn the position of the maximum element in the iterator.\nReturn the position of the maximum element in the …\nReturn the position of the maximum element in the …\nReturn the position of the maximum element in the …\nReturn the position of the maximum element in the …\nReturn the position of the minimum element in the iterator.\nReturn the position of the minimum element in the iterator.\nReturn the position of the minimum element in the …\nReturn the position of the minimum element in the …\nReturn the position of the minimum element in the …\nReturn the position of the minimum element in the …\nReturn the positions of the minimum and maximum elements in\nReturn the positions of the minimum and maximum elements in\nReturn the postions of the minimum and maximum elements of …\nReturn the postions of the minimum and maximum elements of …\nReturn the postions of the minimum and maximum elements of …\nReturn the postions of the minimum and maximum elements of …\nReturn an iterator adaptor that yields the indices of all …\nReturn an iterator adaptor that yields the indices of all …\nReturns the positive version of the angle.\nReturns the positive version of the angle (no-op for …\nReturns the positive version of the angle.\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nReturn an iterator that iterates through the powerset of …\nReturn an iterator that iterates through the powerset of …\nRaises <code>self</code> to the <code>y</code> floating point power.\nRaises <code>self</code> to the <code>p</code> integer power.\nReturns the optionally specified precision for numeric …\nFetches the cache line containing <code>addr</code> into all levels of …\nFetches into L2 and higher, anticipating write.\nFetch data using the non-temporal access (NTA) hint.\nFetches the cache line containing <code>addr</code> into all levels of …\nFetches into L2 and higher.\nFetches into L3 and higher or an implementation-specific …\nPrepends the given <code>value</code> to this tuple.\nPrepend a new element to the beginning of the chunk.\nThe pressure applied to the pointer (0.0 to 1.0 for most …\nThe pressure applied (0.0 to 1.0), applicable for …\nReturns the previous month.\nReturns the previous weekday.\nReturns the previous <code>nth</code> month.\nReturns the previous <code>nth</code> weekday.\n𝟙 The prime number theorem formula.\nWrites string + newline to stdout. Optimized for small …\nCommon method to print an ANSI escape <code>sequence</code> of bytes to …\nWrites bytes to stdout. Returns error on syscall failure.\nLike <code>print_bytes</code>, but panics on failure instead of …\nThe most efficient print method, exclusive for <code>linux</code>.\nThe most efficient print method, exclusive for <code>std</code>.\nLike <code>print</code>, but panics on failure instead of returning …\nUltra-fast stdout write. Panics if not all bytes are …\nWrites string + newline to stdout. Optimized for small …\nLike <code>println</code>, but panics on failure instead of returning …\nUltra-fast stdout write with newline. Panics if write isn…\nProcesses the given data slice, updating the internal …\n“Lift” a function of the values of the current …\n“Lift” a function of the values of the current …\nTakes an iterator and generates <code>Self</code> from the elements by …\nIterates over the entire iterator, multiplying all the …\nIterates over the entire iterator, multiplying all the …\nIterates over the entire iterator, multiplying all the …\nIterates over the entire iterator, multiplying all the …\nIterates over the entire iterator, multiplying all the …\nIterates over the entire iterator, multiplying all the …\nIterates over the entire iterator, multiplying all the …\nIterates over the entire iterator, multiplying all the …\nTakes each element in the <code>Iterator</code>: if it is a <code>None</code>, no …\nTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no …\nIterate over the entire iterator and multiply all the …\nIterate over the entire iterator and multiply all the …\nPrompts the user for a string from <em>stdin</em>, backed by a …\nProvides type-based access to context intended for error …\nProvides type-based access to context intended for error …\nProvides type-based access to context intended for error …\nReturns the raw pointer part of the fat pointer.\nReturns <code>true</code> if the two <code>Arc</code>s point to the same allocation …\nReturns <code>true</code> if the two <code>Weak</code>s point to the same allocation …\nReturns <code>true</code> if the two <code>Rc</code>s point to the same allocation …\nReturns <code>true</code> if the two <code>Weak</code>s point to the same allocation …\nReturns the size ratio between <code>Ptr::BYTES</code> and <code>BYTE_SIZE</code>.\nReturns the size ratio between <code>Ptr::BYTES</code> and <code>BYTE_SIZE</code>.\nPushes an item onto the binary heap.\nPushes a new <code>element</code> to the top of the stack.\nExtends the string with the given &amp;OsStr slice.\nPushes a value at the top of the stack.\nExtends <code>self</code> with <code>path</code>.\nAppends an element to the back of a collection.\nAppends the given <code>char</code> to the end of this <code>String</code>.\nPushes a new item onto the beginning of this list, …\nExtends <code>self</code> with <code>path</code>.\nAppends to the end of the string the given <code>character</code>.\nAdds a closure to the manager.\nAppends to the end of the string the given <code>character</code>.\nPushes a new <code>element</code> to the back of the destaque.\nPushes a value to the end of the queue.\nAdds an element to the back of the list.\nAppends an element to the back of the deque.\nAdds an element to the back of the list, returning a …\nAppends an element to the back of the deque, returning a …\nPushes a new <code>element</code> to the back of the destaque, …\nPushes the contents of a <code>string</code> slice as an item onto the …\nUnchecked version of <code>push_back</code>.\nPushes a set of items (cloning out of the input <code>slice</code>).\nPushes a set of items (cloning out of the input <code>slice</code>).\nPushes a set of items (copying out of the input <code>slice</code>).\nPushes a set of items (copying out of the input <code>slice</code>).\nPushes an item, populated from an exact-sized iterator.\nPushes an item, populated from an exact-sized iterator.\nPushes a new <code>element</code> to the front of the destaque.\nAdds an element to the front of the list.\nPrepends an element to the deque.\nAdds an element to the front of the list, returning a …\nPrepends an element to the deque, returning a reference to …\nPushes a new <code>element</code> to the front of the destaque, …\nUnchecked version of <code>push_front</code>.\nAppends an element to the back of a collection, returning …\nAppends an element and returns a reference to it if there …\nPushes the contents of a <code>string</code> slice as an item onto the …\nAppends a given string slice onto the end of this <code>String</code>.\nAppends to the end the fitting characters from the given …\nAppends to the end the fitting characters from the given …\nAppends an element if there is sufficient spare capacity, …\nThe quantification of the value.\nSets the quality.\nSets the <code>quality</code> field to <code>SixelQuality::Auto</code>.\nSets the <code>quality</code> field to <code>SixelQuality::Full</code>.\nSets the <code>quality</code> field to <code>SixelQuality::High</code>.\nSets the <code>quality</code> field to <code>SixelQuality::HighColor</code>.\nSets the <code>quality</code> field to <code>SixelQuality::Low</code>.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nQueues the given command for further execution.\nRemove an element from the (front of the) queue.\nRemove an element from the back of the queue.\nRemove an element from the front of the queue (calls …\nRemove an element from the front of the queue (calls …\nAdd an element to the (back of the) queue.\nRemove an element from the back of the queue (calls …\nRemove an element from the back of the queue (calls …\nAdd an element to the front of the queue.\nThis function simply quits the application without giving …\nThis event is sent when the userclicks the window’s …\nThis event is sent when the userclicks the window’s …\nFills the given <code>buffer</code> with random bytes that may not be …\nGenerates a random <code>u128</code> value that may not be …\nGenerates a random <code>u16</code> value that may not be …\nGenerates a random <code>u32</code> value that may not be …\nGenerates a random <code>u64</code> value that may not be …\nGenerates a random <code>u8</code> value that may not be …\nConstructs a double-ended iterator over a sub-range of …\nConstructs a double-ended iterator over a sub-range of …\nCreates an iterator that covers the specified range in the …\nReturns a subslice from <code>start</code> (inclusive) to <code>end</code> …\nReturns a subslice from <code>start</code> (inclusive) to <code>end</code> …\nReturns a subslice starting from the given <code>start</code> index.\nReturns a subslice starting from the given <code>start</code> index.\nReturns an exclusive subslice starting from the given <code>start</code>…\nReturns a subslice starting from the given <code>start</code> index.\nConstructs a mutable double-ended iterator over a …\nCreates an iterator that covers the specified mutable …\nReturns an exclusive subslice from <code>start</code> (inclusive) to <code>end</code>…\nReturns a subslice from <code>start</code> (inclusive) to <code>end</code> …\nReturns a subslice up to the given <code>end</code> index.\nReturns a subslice up to the given <code>end</code> index.\nReturns an exclusive subslice up to the given <code>end</code> index.\nReturns a subslice up to the given <code>end</code> index.\nCreates a raw immutable entry builder for the <code>HashMap</code>.\nCreates a raw entry builder for the <code>HashMap</code>.\nGets a mutable pointer to the wrapped value. The …\nRepresents raw hardware mouse motion event Note that these …\nRepresents raw hardware mouse motion event Note that these …\nReturns the OS error that this error represents (if any).\nReturns the device ID of this file (if it is a special …\nReturns the device ID of this file (if it is a special …\nTry to obtain a random <code>u16</code> from the hardware RNG.\nTry to obtain a random <code>u32</code> from the hardware RNG.\nTry to obtain a random <code>u64</code> from the hardware RNG.\nTry to obtain a random <code>u16</code> from the hardware RNG.\nTry to obtain a random <code>u32</code> from the hardware RNG.\nTry to obtain a random <code>u64</code> from the hardware RNG.\nPull some bytes from this source into the specified …\nReads some bytes from the file.\nReads the value from <code>self</code> without moving it. This leaves …\nFill <code>buf</code> with the contents of the “front” slice as …\nReads the value from src without moving it.\nLocks this <code>RwLock</code> with shared read access, blocking the …\nSets the option for read access.\nReads the entire contents of a file into a bytes vector.\nReads all available bytes from stdin.\nPull some bytes from this source into the specified buffer.\nPull some bytes from this source into the specified buffer.\nReads the exact number of bytes required to fill <code>cursor</code>.\nReads the exact number of bytes required to fill <code>cursor</code>.\nReturns an iterator over the entries within a directory.\nReturns an iterator over the entries within a directory.\nReads the exact number of bytes required to fill <code>buf</code>.\nReads the exact number of bytes required to fill <code>buf</code>.\nLocks this handle and reads a line of input, appending it …\nReads all bytes until a newline (the <code>0xA</code> byte) is reached, …\nReads all bytes until a newline (the <code>0xA</code> byte) is reached, …\nReads a symbolic link, returning the file that the link …\nReads a symbolic link, returning the file that the link …\nReads a symbolic link, returning the file that the link …\nReads a JS string into a Rust <code>&amp;str</code> backed by the given …\nAllocates a <code>String</code> by calling a JS-backed FFI fn that …\nAllocates a <code>String</code> by calling a JS-backed FFI fn that …\nReturns the read timeout of this socket.\nReturns the read timeout of this socket.\nReads the CPU’s timestamp counter value.\nReads the CPU’s timestamp counter value and store the …\nThis function is not supported by <code>io::Repeat</code>, because there…\nReads all bytes until EOF in this source, placing them …\nReads all bytes until EOF in this source, placing them …\nThis function is not supported by <code>io::Repeat</code>, because there…\nReads all bytes until EOF in this source, appending them …\nReads all bytes until EOF in this source, appending them …\nReads all bytes from a reader into a new String.\nReads the entire contents of a file into a string.\nReads the value from <code>self</code> without moving it. This leaves …\nReads the value from src without moving it.\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nLike <code>read</code>, except that it reads into a slice of buffers.\nLike <code>read</code>, except that it reads into a slice of buffers.\nLike <code>read</code>, except that it reads into a slice of buffers.\nPerforms a volatile read of the value from <code>self</code> without …\nPerforms a volatile read of the value from src without …\nReturns <code>true</code> if these permissions describe a readonly …\nCreates a future that is immediately ready with a <code>value</code>.\nCreates a future that is immediately ready with a <code>value</code>.\nReallocates memory with the global allocator.\nShrinks or grows a block of memory to the given <code>new_size</code> …\nShrinks or grows a block of memory to the given <code>new_size</code> …\nShrinks or grows a block of memory to the given <code>new_size</code> …\nRebuilds the table by removing <code>TOMB</code> slots and optimizing …\nReturns a rebuilt version of the table with <code>TOMB</code> slots …\nLanewise <code>1.0 / a</code> approximation.\nLow lane <code>1.0 / a</code> approximation, other lanes unchanged.\nReciprocal of <code>f32</code> lanes.\nLanewise <code>1.0 / sqrt(a)</code> approximation.\nLow lane <code>1.0 / sqrt(a)</code> approximation, other lanes …\nReciprocal of <code>f32</code> lanes.\nIndicates that directories should be created recursively, …\nReceives a single datagram message on the socket from the …\nAttempts to wait for a value on this receiver, returning …\nAttempts to wait for a value on this receiver, returning …\nReceives a single datagram message on the socket. On …\nAttempts to wait for a value on this receiver, returning …\nThe red component.\nThe red component.\nThe red component.\nThe red component.\nThe red component.\nThe red component.\nThe red component.\nThe red component.\nThe red component.\nThe red component.\nThe red component.\nThe red component.\nMerges <code>self</code> with another <code>Option</code>.\nReduces the given <code>value</code> to the most appropriate prefix as …\nReduces the elements to a single one, by repeatedly …\nReduces the elements to a single one, by repeatedly …\nReduces the elements to a single one, by repeatedly …\nReduces the elements to a single one, by repeatedly …\nReduces the elements to a single one, by repeatedly …\nReduces the elements to a single one, by repeatedly …\nReduces the elements to a single one, by repeatedly …\nReduces the elements to a single one, by repeatedly …\nReduces the given value to a chain of appropriate prefixes …\nReduces the given value to a chain of appropriate prefixes …\nReduces the given value to a chain of appropriate prefixes …\nReduces the given value to the most appropriate prefix as …\nReduces the given value to the most appropriate prefix as …\nThe positioned extent.\nPerforms the <code>%</code> operation.\nPerforms the <code>%=</code> operation.\nThe least nonnegative remainder of <code>self % rhs</code>.\nReturns the remaining elements in the iterator.\nReturns the remaining elements in the iterator.\nReturns the remaining elements in the iterator.\nReturns the destaque’s remaining capacity.\nReturns the stack’s remaining capacity.\nReturns the remaining capacity.\nReturns the remaining capacity in bytes.\nReturns the remaining available memory.\nRemoves a key from the map, returning the value at the key …\nRemoves a value from the set. Returns whether the value was\nRemoves a key from the map, returning the value at the key …\nIf the set contains an element equal to the value, removes …\nRemoves the element at the given index and returns it.\nRemoves and returns the element at <code>index</code> from the deque. …\nRemoves and returns the element at position <code>index</code> within …\nRemoves a <code>char</code> from this <code>String</code> at byte position <code>idx</code> and …\nRemoves a key-value pair.\nRemoves an empty directory.\nRemoves a directory at this path, after removing all its …\nRemoves a key from the map, returning the stored key and …\nRemoves a key from the map, returning the stored key and …\nRemoves a file from the filesystem.\nRemove all matches of pattern <code>pat</code> in the <code>String</code>.\nRemoves a key-value pair and optionally rebuilds the table.\nRemoves the environment variable <code>key</code> from the environment …\nRenames a file or directory to a new name, replacing the …\nFor depth-only render pass returns empty slice.\npanics for depth-only or multiple color attachment render …\npanics for depth-only or multiple color attachment render …\nCreates an iterator that endlessly repeats a single …\nCreates an instance of a reader that infinitely repeats …\nCreates a layout describing the record for <code>n</code> instances of …\nRepeats a string a given number of times into the provided …\nRepeats a <code>string</code> a given number of times into the provided …\nCreates a new iterator that repeats a single element a …\nCreates a layout describing the record for <code>n</code> instances of …\nCreates an iterator that endlessly repeats calling …\nReplaces the contained value, returning the old value.\nReplaces the contained value, returning the old value.\nReplaces some element at <code>index</code> with <code>value</code>, returning the …\nAdds a value to the set, replacing the existing value, if …\nReplaces the value at <code>self</code> with <code>src</code>, returning the old …\nReplace the contents without dropping the backing …\nAdds a value to the set, replacing the existing element, …\nMoves <code>src</code> into <code>dest</code>, returning the previous <code>dest</code> value.\nMoves src into the pointed dst, returning the previous dst …\nReplaces the stored value with a <code>new</code> one, returning the …\nReplaces the contained value with <code>val</code>, and returns the old …\nReplaces the wrapped value with a new one, returning the …\nReplace the value in this <code>UnsafeCell</code> and return the old …\nReplaces the contained value with <code>value</code>, and returns the …\nReplaces the contained value with <code>value</code>, and returns the …\nRemoves and returns the value for a given key, replacing …\nReplaces the value at a given index with a new value and …\nReplaces the actual value in the option by the value given …\nRemoves and returns the value for a given key, replacing …\nReplaces the <code>old</code> leading byte with a <code>new</code> byte.\nRemoves the specified range in the string, and replaces it …\nReplaces the wrapped value with a new one computed from <code>f</code>, …\nRemoves and returns the value for a given key, replacing …\nIs called to get the representation of the value as status …\n(requestAnimationFrame) Requests an animation frame, …\nTriggers the “quit_requested_event” event.\nReturns the number of bytes required to store an image of …\nReseeds the generator with a new seed.\nReseeds the generator from the given 3 × 8-bit seeds.\nReserves capacity for at least <code>additional</code> more elements to …\nReserves capacity for at least <code>additional</code> elements more …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves capacity for at least <code>additional</code> more capacity to …\nReserves capacity for at least <code>additional</code> more elements to …\nInvokes <code>reserve</code> on the underlying instance of <code>OsString</code>.\nReserves capacity for at least <code>additional</code> more elements to …\nReserves capacity for at least <code>additional</code> bytes more than …\nReserves the minimum capacity for at least <code>additional</code> …\nReserves the minimum capacity for at least <code>additional</code> more …\nReserves the minimum capacity for at least <code>additional</code> more …\nInvokes <code>reserve_exact</code> on the underlying instance of …\nReserves the minimum capacity for at least <code>additional</code> more …\nReserves the minimum capacity for at least <code>additional</code> …\nResets the internal state to its initial default values …\nResets the inner state to the default basis value.\nResets the inner state to the default basis value.\nResets the inner state to the default basis value.\nResets the inner state to the default basis value.\nResets this instant to the current time.\nSets the length to 0, and resets all the bytes to 0.\nModifies the deque in-place so that <code>len()</code> is equal to …\nResizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.\nConverts the current stack to a different capacity while …\nConverts the current stack to a different capacity while …\nConverts the current stack to a different capacity, …\nConverts the current stack to a different capacity while …\nModifies the deque in-place so that <code>len()</code> is equal to …\nResizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.\nResumes the execution of this coroutine.\nTriggers a panic without invoking the panic hook.\nRetains only the elements specified by the predicate. …\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRemoves any items that don’t meet a predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the characters specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate, …\nReverses an iterator’s direction.\nReverses an iterator’s direction.\nReverses an iterator’s direction.\nReverses an iterator’s direction.\nReverses an iterator’s direction.\nReverses an iterator’s direction.\nReverses an iterator’s direction.\nReverses an iterator’s direction.\nReverses the <code>Ordering</code>.\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the order of the bits in <code>self</code> from the …\nReverses the order of the bits in <code>self</code> from the …\nRewind to the beginning of a stream.\nRewind to the beginning of a stream.\nSearches for an element of an iterator from the back that …\nSearches for an element of an iterator from the back that …\nSearches for an element of an iterator from the back that …\nSearches for an element of an iterator from the back that …\nSearches for an element of an iterator from the back that …\nSearches for an element of an iterator from the back that …\nSearches for an element of an iterator from the back that …\nSearches for an element of an iterator from the back that …\nAn iterator method that reduces the iterator’s elements …\nAn iterator method that reduces the iterator’s elements …\nAn iterator method that reduces the iterator’s elements …\nAn iterator method that reduces the iterator’s elements …\nAn iterator method that reduces the iterator’s elements …\nAn iterator method that reduces the iterator’s elements …\nAn iterator method that reduces the iterator’s elements …\nAn iterator method that reduces the iterator’s elements …\nWhether it’s possible to specify rgb values.\nDistance from the alignment point to the rightmost glyph …\nRotates the top three stack elements, clockwise.\nRotates the top six stack elements, clockwise, two times.\nRotates the top six stack elements, counter-clockwise, two …\nRotates the top three stack elements, counter-clockwise.\nRotates all the destaqued elements one place to the left.\nRotates all the destaqued elements <code>n</code> places to the left.\nRotates all the destaqued elements one place to the right.\nRotates all the destaqued elements <code>n</code> places to the right.\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nRotates the double-ended queue <code>n</code> places to the left.\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the left by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nRotates the double-ended queue <code>n</code> places to the right.\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nShifts the bits to the right by a specified amount, <code>n</code>, …\nThe nearest integer to <code>self</code>, default rounding, same as …\nRounds each lane in the style specified.\nRounds <code>$b</code> low as specified, other lanes use <code>$a</code>.\nRounds each lane in the style specified.\nRounds <code>$b</code> low as specified, keeps <code>$a</code> high.\nRounds each lane in the style specified.\nRounds each lane in the style specified.\nThe nearest integer to <code>self</code>, rounding ties away from <code>0.0</code>.\nThe nearest integer to <code>self</code>, rounding ties to the nearest …\nThe nearest integer to <code>self</code>, rounding ties to the nearest …\nConvert a byte count to a word count (rounding up).\nConvert a byte count to a word count (rounding up).\nRows of cells.\nSearches for an element in an iterator from the right, …\nSearches for an element in an iterator from the right, …\nSearches for an element in an iterator from the right, …\nSearches for an element in an iterator from the right, …\nSearches for an element in an iterator from the right, …\nSearches for an element in an iterator from the right, …\nSearches for an element in an iterator from the right, …\nSearches for an element in an iterator from the right, …\nReturns the rightmost sub-<code>slice</code> with the given maximum <code>len</code>.\nReturns the rightmost mutable sub-<code>slice</code> with the given …\nRuns all the coroutines to completion.\nThe <code>state</code> after the operation.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nReturns <code>None</code> if the state is <code>None</code>, otherwise returns <code>optb</code>.\nReturns <code>res</code> if the state is <code>Ok</code>, otherwise returns the <code>Err</code> …\nCalls <code>op</code> if the state is <code>Ok</code>, otherwise returns the <code>Err</code> …\nReturns <code>None</code> if the state is <code>None</code>, otherwise calls <code>op</code> with …\nAsserts the <code>state</code> matches the <code>predicate</code>, otherwise panics.\nAsserts the <code>state</code> equals <code>expected</code> and returns <code>self</code>, …\nAsserts the <code>state</code> equals <code>expected</code> and returns <code>self</code>, …\nAsserts the <code>state</code> is <code>Err</code> and returns <code>self</code>, otherwise …\nAsserts the <code>state</code> is <code>Err</code> and returns <code>self</code>, otherwise …\nAsserts the state is <code>None</code> and returns <code>self</code>, otherwise …\nAsserts the state is <code>None</code> and returns <code>self</code>, otherwise …\nAsserts the <code>state</code> is <code>Ok</code> and returns <code>self</code>, otherwise panics.\nAsserts the <code>state</code> is <code>Ok</code> and returns <code>self</code>, otherwise panics …\nAsserts the <code>state</code> matches the <code>predicate</code>, otherwise panics …\nAsserts the state is <code>Some</code> and returns <code>self</code>, otherwise …\nAsserts the state is <code>Some</code> and returns <code>self</code>, otherwise …\nUnwraps the contained <code>Ok(state)</code> or panics with the given …\nUnwraps the contained <code>Some(state)</code> or panics with the given …\nReplaces the <code>state</code> self with a <code>new_state</code>, in compile-time.\nUnwraps the contained <code>Some(state)</code> or panics.\nUnwraps the contained <code>Ok(state)</code> or panics.\nUnwraps the contained <code>Some(state)</code> or provides a <code>default</code>.\nUnwraps the contained <code>Ok(state)</code> or provides a <code>default</code>.\nWraps the <code>state</code> field into a <code>Result</code>, in compile-time.\nWraps the <code>state</code> field into an <code>Option</code>, in compile-time.\nReturns <code>true</code> if the current <code>state</code> equals the given <code>expected</code>…\nUnwraps the contained <code>Ok(state)</code> or panics with a <code>message</code>.\nUnwraps the contained <code>Some(state)</code> or panics with the given …\nApplies a mapping function to the state.\nMaps a <code>Result&lt;S, E&gt;</code> to a <code>Result&lt;S, F&gt;</code> by applying the <code>op</code> …\nMaps a <code>Result&lt;S&gt;</code> to a <code>Result&lt;T&gt;</code> by applying the <code>op</code> function\nMaps an <code>Option&lt;S&gt;</code> to an <code>Option&lt;T&gt;</code> by applying the <code>op</code> …\nReplaces the existing <code>state</code> with a <code>new_state</code>.\nUnwraps the contained <code>Ok(state)</code> or panics.\nUnwraps the contained <code>Some(state)</code> or panics.\nUnwraps the contained <code>Some(state)</code> or provides a <code>default</code>.\nUnwraps the contained <code>Ok(state)</code> or provides a <code>default</code>.\nWraps the <code>state</code> field into <code>Ok</code>.\nWraps the <code>state</code> field into <code>Some</code>.\nReturns the simple handler, if set.\nReturns the <code>SA_SIGINFO</code> handler, if set.\nMSAA sample count. Defaults to <code>1</code>.\nSaturating absolute value, see <code>i8::saturating_abs</code>.\nSaturating absolute value, see <code>i64::saturating_abs</code>.\nSaturating absolute value, see <code>isize::saturating_abs</code>.")