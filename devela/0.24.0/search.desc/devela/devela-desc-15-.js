searchState.loadedDescShard("devela", 15, "The bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>offset</code> must point to a pointer immediately followed by an …\n<code>offset</code> must point to two consecutive ints\n<code>offset</code> must point to AVRational\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAll channel receivers were dropped and so the message has …\nAll channel receivers were dropped and so the message has …\nAll senders were dropped and no messages are waiting in …\nAll senders were dropped and no messages are waiting in …\nAll senders were dropped and no messages are waiting in …\nAn fixed-sized iterator over the msgs drained from a …\nThe channel was empty when the receive was attempted.\nThe channel the message is sent on has a finite capacity …\nAn owned iterator over the msgs received from a channel.\nAn iterator over the msgs received from a channel.\nThe receiving end of a channel.\nAn error that may be emitted when attempting to wait for a …\nAn error that may be emitted when attempting to wait for a …\nAn error that may be emitted when attempting to send a …\nAn error that may be emitted when sending a value into a …\nA transmitting end of a channel.\nA timeout occurred when attempting to send the message.\nA timeout occurred when attempting to receive a message.\nAn non-blocking iterator over the msgs received from a …\nAn error that may be emitted when attempting to fetch a …\nAn error that may be emitted when attempting to send a …\nA sender that does not prevent the channel from being …\nCreate a channel with a maximum capacity.\nIf the channel is bounded, returns its capacity.\nIf the channel is bounded, returns its capacity.\nClone this sender. <code>Sender</code> acts as a handle to the ending a …\nClones this <code>WeakSender</code>.\nClone this receiver. <code>Receiver</code> acts as a handle to the …\nCreates a <code>WeakSender</code> that does not keep the channel open.\nTake all msgs currently sitting in the channel and produce …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, yielding the message that failed to …\nConsume the error, yielding the message that failed to …\nConsume the error, yielding the message that failed to …\nCreates a self-owned but semantically equivalent …\nReturns true if all receivers for this channel have been …\nReturns true if all senders for this channel have been …\nReturns true if the channel is empty. Note: Zero-capacity …\nReturns true if the channel is empty. Note: Zero-capacity …\nReturns true if the channel is full. Note: Zero-capacity …\nReturns true if the channel is full. Note: Zero-capacity …\nCreate a blocking iterator over the values received on the …\nReturns the number of messages in the channel\nReturns the number of messages in the channel.\nGet the number of receivers that currently exist.\nGet the number of receivers that currently exist, …\nWait for an incoming value from the channel associated …\nWait for an incoming value from the channel associated …\nWait for an incoming value from the channel associated …\nReturns whether the senders are belong to the same channel.\nReturns whether the receivers are belong to the same …\nSend a value into the channel, returning an error if all …\nSend a value into the channel, returning an error if all …\nSend a value into the channel, returning an error if all …\nGet the number of senders that currently exist, including …\nGet the number of senders that currently exist.\nA non-blocking iterator over the values received on the …\nAttempt to fetch an incoming value from the channel …\nAttempt to send a value into the channel. If the channel …\nCreate a channel with no maximum capacity.\nTries to upgrade the <code>WeakSender</code> to a <code>Sender</code>, in order to …\nContains the error value\nRepresents a font. Fonts are immutable after creation and …\nAlias for Result&lt;T, &amp;’static str&gt;.\nSettings for controlling specific font and layout behavior.\nMetrics associated with line positioning.\nEncapsulates all layout information associated with a …\nContains the success value\nDefines the bounds for a glyph’s outline in subpixels. A …\nAdvance height of the glyph in subpixels. Used in vertical …\nAdvance width of the glyph in subpixels. Used in …\nThe highest point that any glyph in the font extends to …\nThe bounding box that contains the glyph’s outline at …\nReturns all valid unicode codepoints that have mappings to …\nThe default is 0. The index of the font to use if parsing …\nThe lowest point that any glyph in the font extends to …\nReturns a precomputed hash for the font file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a font from an array of bytes.\nGets the total glyphs in the font.\nChecks if the font has a glyph for the given character.\nThe height of the outline in subpixels.\nThe height of the bitmap in whole pixels.\nRetrieves the horizontal scaled kerning value for two …\nRetrieves the horizontal scaled kerning value for two …\nNew line metrics for fonts that append characters to lines …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTools for laying out strings of text.\nThe gap to leave between the descent of one line and the …\nThe default is true. If enabled, will load glyphs for …\nFinds the internal glyph index for the given character. If …\nRetrieves the layout metrics for the given character. If …\nRetrieves the layout metrics at the given index. You …\nReturns the font’s face name if it has one. It is from …\nA precalculated value for the height or width of the line …\nRetrieves the layout metrics and rasterized bitmap for the …\nRetrieves the layout rasterized bitmap for the given …\nRetrieves the layout rasterized bitmap for the given …\nRetrieves the layout metrics and rasterized bitmap at the …\nRetrieves the layout metrics and rasterized bitmap at the …\nRetrieves the layout metrics and rasterized bitmap for the …\nScales the bounding box by the given factor.\nThe default is 40. The scale in px the font geometry is …\nCalculates the glyph’s outline scale factor for a given …\nGets the font’s units per em.\nNew line metrics for fonts that append characters to lines …\nThe width of the outline in subpixels.\nThe width of the bitmap in whole pixels.\nSubpixel offset of the left-most edge of the glyph’s …\nWhole pixel offset of the left-most edge of the bitmap. …\nSubpixel offset of the bottom-most edge of the glyph’s …\nWhole pixel offset of the bottom-most edge of the bitmap. …\nAligns text to the bottom of the region defined by the …\nAligns text to the center of the region defined by the …\nMiscellaneous metadata associated with a character to …\nThe direction that the Y coordinate increases in. Layout …\nA positioned scaled glyph.\nConfiguration for rasterizing a glyph. This struct is also …\nHorizontal alignment options for text when a max_width is …\nText layout requires a small amount of heap usage which is …\nSettings to configure how text layout is constrained. Text …\nAligns text to the left of the region defined by the …\nLetter will not preserve words, breaking into a new line …\nMetrics about a positioned line.\nAligns text to the middle of the region defined by the …\nThe Y coordinate increases down relative to the window or …\nThe Y coordinate increases up relative to the window or …\nAligns text to the right of the region defined by the …\nA style description for a segment of text.\nAligns text to the top of the region defined by the …\nVertical alignment options for text when a max_height is …\nWord will break lines by the Unicode line breaking …\nWrap style is a hint for how strings of text should be …\nPerforms layout for text horizontally, and wrapping …\nThe y coordinate of the baseline of this line, in pixels.\nThe byte offset into the original string used in the …\nAdditional metadata associated with the character used to …\nClassifies a character given its index in the font.\nKeeps current layout settings but clears all appended text.\nThe hash of the font used in layout to raster the glyph.\nThe font to layout the text in.\nThe index of the font used to generate this glyph position.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe GlyphPosition index of the last glyph in the line.\nThe glyph index represented by the glyph being positioned.\nThe GlyphPosition index of the first glyph in the line.\nGets the currently laid out glyphs.\nGets the current height of the appended text.\nThe height of the glyph. Dimensions are in pixels.\nThe default is Left. This option does nothing if the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarks if the character is an ASCII control character.\nMarks if the character is missing from its associated font.\nMarks if the character is an ASCII whitespace character.\nHashable key that can be used to uniquely identify a …\nThe height of each line as a multiplier of the default.\nGets the currently positioned lines. If there are no lines …\nThe highest point that any glyph in the font extends to …\nAn optional bottom boundary on the text region. This is …\nThe gap to leave between the descent of one line and the …\nA precalculated value for the of the line depending. It’…\nAn optional rightmost boundary on the text region. A line …\nThe lowest point that any glyph in the font extends to …\nCreates a layout instance. This requires the direction …\nHow much empty space is left at the end of the line before …\nThe associated character that generated this glyph. A …\nThe scale of the text in pixel units. The units of the …\nThe scale of the glyph being positioned in px.\nA heuristic for if the glpyh this was classified from …\nResets the current layout settings and clears all appended …\nGets the settings currently being used for layout.\nThe text to layout.\nAdditional user data to associate with glyphs produced by …\nCustom user data associated with the text styled used to …\nThe default is Top. This option does nothing if the …\nThe width of the glyph. Dimensions are in pixels.\nThe default is true. This option enables hard breaks, like …\nThe default is Word. Wrap style is a hint for how strings …\nThe leftmost boundary of the text region.\nThe xmin of the glyph bounding box. This represents the …\nThe topmost boundary of the text region.\nThe ymin of the glyph bounding box. If your coordinate …\nGamepad’s elements which state can be represented by …\nValue of axis has changed. Value can be in range [-1.0, 1.0…\nGamepad’s elements which state can be represented by …\nValue of button has changed. Value can be in range [0.0, …\nSome button on gamepad has been pressed.\nPreviously pressed button has been released.\nThis event can be generated by <code>ev::Repeat</code> event filter.\nBattery is charged.\nBattery is charging.\nGamepad has been connected. If gamepad’s UUID doesn’t …\nIterator over all connected gamepads.\nDevice is running on the battery.\nGamepad has been disconnected. Disconnected gamepad will …\nGamepad does not use any mappings but driver should …\nThere was an <code>Event</code>, but it was dropped by one of filters. …\nSame gamepad element is referenced by axis and button.\nError type which can be returned when creating <code>Gilrs</code>.\nHolds information about gamepad event.\nGamepad event.\nAllow filtering events.\nA force feedback effect has ran for its duration and …\nRepresents handle to game controller.\nGamepad ID.\nMain object responsible of managing gamepads.\nAllow to create <code>Gilrs </code> with customized behaviour.\nEither <code>pressed ≤ released</code> or one of values is outside […\nGamepad does not have element referenced by <code>EvCode</code>.\nName contains comma (‘,’).\nStores data used to map gamepad buttons and axes.\nThe error type for functions related to gamepad mapping.\nSource of gamepad mappings.\nGamepad does not use any mappings and most gamepad events …\nGamepad is not connected.\nGilrs does not support current platform, but you can use …\nThis function is not implemented for current platform.\n<code>Mapping</code> have button or axis that are not present in SDL2.\nPlatform specific error.\nState of device’s power supply.\nGamepad uses SDL mappings.\nFailed to determine power status.\n<code>Mapping</code> with <code>Button::Unknown</code> or <code>Axis::Unknown</code>.\nDevice doesn’t have battery.\nIf true, will add SDL mappings from …\nIf true, will add SDL mappings included from …\nAdds SDL mappings.\nReturns <code>EvCode</code> associated with axis index.\nReturns <code>Code</code> associated with <code>axis</code>.\nReturns axis state and when it changed.\nReturns <code>AxisOrBtn</code> mapped to <code>Code</code>.\nCreates <code>Gilrs</code>.\nReturns <code>EvCode</code> associated with button index.\nReturns <code>Code</code> associated with <code>btn</code>.\nReturns button state and when it changed.\nReturns a reference to connected gamepad or <code>None</code>.\nReturns counter. Counter data is stored with state and can …\nReturns area in which axis events should be ignored.\nReturns <code>Event</code> with <code>EventType::Dropped</code>.\nGamepad state and other event related functionality.\nEvent’s data.\nForce feedback module.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns handle to gamepad with given ID. Unlike …\nReturns iterator over all connected gamepads and their ids.\nReturns ID of gamepad.\nId of gamepad.\nIncreases internal counter by one. Counter data is stored …\nInserts new axis mapping.\nInserts new button mapping.\nAdds <code>ev</code> at the end of internal event queue. It can later …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if gamepad is connected.\nReturns true if event is <code>Dropped</code> and should be ignored.\nReturns true if force feedback is supported by device.\nExamines cached gamepad state to check if given button is …\nReturns true if axis is <code>LeftStickX</code>, <code>LeftStickY</code>, <code>RightStickX</code>…\nif <code>mapping_source()</code> is <code>SdlMappings</code> returns the name of the …\nReturns source of gamepad mapping. Can be used to filter …\nReturns the mapping name if it exists otherwise returns …\nCreate builder with default settings. Use <code>build()</code> to …\nCreates new <code>Gilrs</code> with default settings. See <code>GilrsBuilder</code> …\nCreates new <code>Mapping</code>.\nCreates new event with current time.\nReturns next pending event. If there is no pending event, …\nSame as Gilrs::next_event, but blocks the thread it is run …\nReturns the name of the gamepad supplied by the OS.\nReturns device’s power supply state. See <code>PowerInfo</code> for …\nReturns the product ID, as assigned by the vendor, when …\nRemoves axis and returns associated <code>NativEvCode</code>.\nRemoves button and returns associated <code>NativEvCode</code>.\nSets counter to 0.\nReturns the other axis from same element of gamepad, if …\nSets values on which <code>ButtonPressed</code> and <code>ButtonReleased</code> …\nChange gamepad position used by force feedback effects.\nSets gamepad’s mapping and returns SDL2 representation …\nSimilar to <code>set_mapping()</code> but returned string should be …\nDisable or enable automatic state updates. You should use …\nReturns cached gamepad state.\nTime when event was emitted.\nUpdates internal state according to <code>event</code>.\nReturns gamepad’s UUID.\nExamines cached gamepad state to check axis’s value. …\nReturns the vendor ID, as assigned by the USB-IF, when …\nIf <code>true</code>, use <code>axis_dpad_to_button</code>, <code>Jitter</code> and <code>deadzone</code> …\nGamepad’s elements which state can be represented by …\nValue of axis has changed. Value can be in range [-1.0, 1.0…\nRepresents <code>Axis</code> or <code>Button</code>.\nGamepad’s elements which state can be represented by …\nValue of button has changed. Value can be in range [0.0, …\nSome button on gamepad has been pressed.\nPreviously pressed button has been released.\nThis event can be generated by <code>ev::Repeat</code> event filter.\nPlatform specific event code.\nGamepad has been connected. If gamepad’s UUID doesn’t …\nGamepad has been disconnected. Disconnected gamepad will …\nThere was an <code>Event</code>, but it was dropped by one of filters. …\nHolds information about gamepad event.\nGamepad event.\nA force feedback effect has ran for its duration and …\nEvent’s data.\nAlter events in various ways.\nReturns the argument unchanged.\nReturns the argument unchanged.\nId of gamepad.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTime when event was emitted.\nAllow filtering events.\nActual filter implementation.\nDiscard axis events that changed less than <code>threshold</code>.\nRepeats pressed keys.\nMaps axis dpad events to button dpad events.\nDrops events in dead zone and remaps value to keep it in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates new <code>Repeat</code> filter with threshold set to 0.01.\nCreates new <code>Repeat</code> filter with <code>after</code> set to 500ms and <code>every</code>…\nInformation about axis stored in <code>State</code>.\nIterator over <code>AxisData</code>.\nInformation about button stored in <code>State</code>.\nIterator over <code>ButtonData</code>.\nCached gamepad state.\nIterate over axes data.\nReturns axis state and when it changed.\nReturns button state and when it changed.\nIterate over buttons data.\nReturns value of counter when button state last changed.\nReturns value of counter when axis value last changed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if given button is pressed. Returns <code>false</code> if …\nReturns <code>true</code> if button is pressed.\nReturns <code>true</code> if button is repeating.\nReturns when button state last changed.\nReturns when axis value last changed.\nReturns value of <code>el</code> or 0.0 when there is no information …\nReturns value of button.\nReturns value of axis.\nBasic building block used to create more complex force …\nKind of <code>BaseEffect</code>.\nDevice is not connected\nSpecifies how distance between effect source and listener …\nError that can be returned when passing <code>DistanceModel</code> with …\nHandle to force feedback effect.\nCreates new <code>Effect</code>.\nEnvelope shaped attenuation(time) function.\nBasic error type in force feedback module.\nExponential distance model.\nExponential distance clamped model.\nForce feedback is not supported by device with this ID\nPlay effect for specified time.\nPlay effect until stop() is called.\nDistance model is invalid.\nMax distance is &lt; 0.\nPossible divide by zero\nReference distance is &lt; 0.\nRolloff factor is &lt; 0.\nInverse distance model.\nInverse distance clamped model.\nLinear distance model.\nLinear distance clamped model.\nEffect is not attenuated by distance.\nUnexpected error has occurred\nDescribes how long effect should be played.\nDefines scheduling of the basic force feedback effect.\nThe other end of channel was dropped.\nRepresents duration.\nAdds new <code>BaseEffect</code>.\nAdds gamepad to the list of gamepads associated with …\nAdds gamepad to the list of gamepads associated with …\nStart playback <code>after</code> ticks after <code>Effect::play()</code> is called.\nChanges distance model associated with effect.\nReturns duration of effect calculated as …\nBasic attenuation function.\nValidates all parameters and creates new effect.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChanges gain of the effect. <code>gain</code> will be clamped to [0.0, …\nChanges gamepads that are associated with effect. Effect …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType of base effect.\nCreates new builder with following defaults: no gamepads, …\nPlays effect on all associated gamepads.\nPlayback duration.\nChanges position of the source of effect.\nChanges what should happen to effect when it ends.\nDefines playback duration and delays between each …\nChanges distance model associated with effect.\nChanges gain of the effect. <code>gain</code> will be clamped to [0.0, …\nChanges gamepads that are associated with effect. Effect …\nChanges position of the source of effect.\nChanges what should happen to effect when it ends.\nIf playback should be repeated delay it for <code>with_delay</code> …\nThe memory allocator returned an error\nError due to the computed capacity exceeding the collection…\nDefault hasher for <code>HashMap</code> and <code>HashSet</code>.\nKey equivalence trait.\nA hash map implemented with quadratic probing and SIMD …\nA hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.\nLow-level hash table with explicit hashing.\nThe error type for <code>try_reserve</code> methods.\nReturns the total amount of memory allocated internally by …\nReturns a reference to the underlying allocator.\nReturns the number of elements the table can hold without …\nClears the table, removing all values.\nClears the set, returning all elements in an iterator.\nReturns an <code>Entry</code> for an entry in the table with the given …\nCompare self to <code>key</code> and return <code>true</code> if they are equal.\nDrains elements which are true under the given predicate, …\nReturns a reference to an entry in the table with the …\nReturns an <code>OccupiedEntry</code> for an entry in the table with …\nReturns a mutable reference to an entry in the table with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempts to get mutable references to <code>N</code> values in the map …\nAttempts to get mutable references to <code>N</code> values in the map …\nA hash map implemented with quadratic probing and SIMD …\nA hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.\nA hash table implemented with quadratic probing and SIMD …\nInserts an element into the <code>HashTable</code> with the given hash …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the set contains no elements.\nAn iterator visiting all elements in arbitrary order. The …\nAn iterator visiting all elements which may match a hash. …\nA mutable iterator visiting all elements which may match a …\nAn iterator visiting all elements in arbitrary order, with …\nReturns the number of elements in the table.\nCreates an empty <code>HashTable</code>.\nCreates an empty <code>HashTable</code> using the given allocator.\nReserves capacity for at least <code>additional</code> more elements to …\nRetains only the elements specified by the predicate.\nShrinks the capacity of the table with a lower limit. It …\nShrinks the capacity of the table as much as possible. It …\nTries to reserve capacity for at least <code>additional</code> more …\nCreates an empty <code>HashTable</code> with the specified capacity.\nCreates an empty <code>HashTable</code> with the specified capacity …\nThe layout of the allocation request that failed.\nA draining iterator over the entries of a <code>HashMap</code> in …\nA view into a single entry in a map, which may either be …\nA view into a single entry in a map, which may either be …\nA draining iterator over entries of a <code>HashMap</code> which don’…\nA hash map implemented with quadratic probing and SIMD …\nAn owning iterator over the entries of a <code>HashMap</code> in …\nAn owning iterator over the keys of a <code>HashMap</code> in arbitrary …\nAn owning iterator over the values of a <code>HashMap</code> in …\nAn iterator over the entries of a <code>HashMap</code> in arbitrary …\nA mutable iterator over the entries of a <code>HashMap</code> in …\nAn iterator over the keys of a <code>HashMap</code> in arbitrary order. …\nAn occupied entry.\nAn occupied entry.\nAn occupied entry.\nA view into an occupied entry in a <code>HashMap</code>. It is part of …\nThe error returned by <code>try_insert</code> when the key already …\nA builder for computing where in a <code>HashMap</code> a key-value …\nA builder for computing where in a <code>HashMap</code> a key-value …\nA view into a single entry in a map, which may either be …\nA view into an occupied entry in a <code>HashMap</code>. It is part of …\nA view into a vacant entry in a <code>HashMap</code>. It is part of the …\nA vacant entry.\nA vacant entry.\nA vacant entry.\nA view into a vacant entry in a <code>HashMap</code>. It is part of the …\nA view into a vacant entry in a <code>HashMap</code>. It is part of the …\nAn iterator over the values of a <code>HashMap</code> in arbitrary …\nA mutable iterator over the values of a <code>HashMap</code> in …\nProvides in-place mutable access to an occupied entry …\nProvides in-place mutable access to an occupied entry …\nProvides shared access to the key and owned access to the …\nThe entry in the map that was already occupied.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>RawEntryMut</code> from the given hash and matching …\nAccess an immutable entry by hash and matching function.\nCreates a <code>RawEntryMut</code> from the given key.\nAccess an immutable entry by key.\nCreates a <code>RawEntryMut</code> from the given key and its hash.\nAccess an immutable entry by a key and its hash.\nGets a reference to the value in the entry.\nGets a reference to the value in the entry.\nGets a reference to the key and value in the entry.\nGets a mutable reference to the key and value in the entry.\nGets a mutable reference to the value in the entry.\nGets a mutable reference to the value in the entry.\nSets the value of the entry, and returns the entry’s old …\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nSets the value of the entry, and returns an <code>OccupiedEntry</code>.\nSets the value of the entry with the <code>VacantEntryRef</code>’s …\nSets the value of the entry, and returns a …\nSets the value of the entry, and returns the entry’s old …\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nSets the value of the entry with the <code>VacantEntryRef</code>’s …\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nSets the value of the entry, and returns the entry’s old …\nSet the value of an entry with a custom hasher function.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTake ownership of the key.\nConverts the entry into a mutable reference to the key in …\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nGets a reference to the key in the entry.\nGets a reference to the key that would be used when …\nReturns a reference to this entry’s key.\nGets a reference to the key that would be used when …\nGets a reference to the key in the entry.\nGets a mutable reference to the key in the entry.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting, if empty, …\nTakes the value out of the entry, and returns it. Keeps …\nTakes the value out of the entry, and returns it.\nTake the ownership of the key and value from the map. …\nTake the ownership of the key and value from the map.\nProvides shared access to the key and owned access to the …\nProvides shared access to the key and owned access to the …\nThe value which was not inserted, because the entry was …\nA lazy iterator producing elements in the difference of …\nA draining iterator over the items of a <code>HashSet</code>.\nA view into a single entry in a set, which may either be …\nA draining iterator over entries of a <code>HashSet</code> which don’…\nA hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.\nA lazy iterator producing elements in the intersection of …\nAn owning iterator over the items of a <code>HashSet</code>.\nAn iterator over the items of a <code>HashSet</code>.\nAn occupied entry.\nA view into an occupied entry in a <code>HashSet</code>. It is part of …\nA lazy iterator producing elements in the symmetric …\nA lazy iterator producing elements in the union of <code>HashSet</code>…\nA vacant entry.\nA view into a vacant entry in a <code>HashSet</code>. It is part of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to this entry’s value.\nGets a reference to the value in the entry.\nGets a reference to the value that would be used when …\nSets the value of the entry, and returns an <code>OccupiedEntry</code>.\nSets the value of the entry with the <code>VacantEntry</code>’s value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTake ownership of the value.\nEnsures a value is in the entry by inserting if it was …\nTakes the value out of the entry, and returns it. Keeps …\nType representing the absence of an entry, as returned by …\nA draining iterator over the items of a <code>HashTable</code>.\nA view into a single entry in a table, which may either be …\nA draining iterator over entries of a <code>HashTable</code> which don…\nLow-level hash table with explicit hashing.\nAn owning iterator over the entries of a <code>HashTable</code> in …\nAn iterator over the entries of a <code>HashTable</code> in arbitrary …\nAn iterator over the entries of a <code>HashTable</code> that could …\nA mutable iterator over the entries of a <code>HashTable</code> that …\nA mutable iterator over the entries of a <code>HashTable</code> in …\nAn occupied entry.\nA view into an occupied entry in a <code>HashTable</code>. It is part …\nA vacant entry.\nA view into a vacant entry in a <code>HashTable</code>. It is part of …\nProvides in-place mutable access to an occupied entry …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the value in the entry.\nGets a mutable reference to the value in the entry.\nSets the value of the entry, replacing any existing value …\nInserts a new element into the table with the hash that …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nConverts the <code>VacantEntry</code> into a mutable reference to the …\nConverts the <code>AbsentEntry</code> into a mutable reference to the …\nEnsures a value is in the entry by inserting if it was …\nEnsures a value is in the entry by inserting the result of …\nTakes the value out of the entry, and returns it along …\nPixel is 8-bit alpha\n<code>AnimationDecoder</code> trait\nAn Image in AVIF Format\nPixel contains 8-bit B, G and R channels\nPixel is 8-bit BGR with an alpha channel\nAn Image in BMP Format\nThe number of channels of this pixel type.\nA string that can help to interpret the meaning each …\nThis pixel has the format of one of the predefined …\nPixel is 8-bit CMYK\nAn enumeration over supported color types and bit depths\nThe maximum value for this type of primitive within the …\nThe minimum value for this type of primitive within the …\nAn Image in DDS Format\nAn error was encountered while decoding.\nThe delay of a frame relative to the previous one.\nA Dynamic Image\nTypes which are safe to treat as an immutable byte slice …\nAn error was encountered while encoding.\nContains the error value\nAn enumeration of color types encountered in image formats.\nAn Image in farbfeld Format\nA flat buffer over a (multi channel) image.\nA single animation frame\nAn implementation dependent iterator, reading the frames …\nA trait for manipulating images.\nTrait to inspect an image.\nAn Image in GIF Format\nSendable grayscale + alpha channel image buffer\nSendable grayscale image buffer\nAn Image in Radiance HDR Format\nAn Image in ICO Format\nGeneric image buffer\nThe trait that all decoders implement\nSpecialized image decoding not be supported by all formats\nThe trait all encoders implement\nThe generic error type for image operations.\nAn enumeration of supported image formats. Not all formats …\nEach pixel in this image is 16-bit Luma\nEach pixel in this image is 8-bit Luma\nEach pixel in this image is 16-bit Luma with alpha\nEach pixel in this image is 8-bit Luma with alpha\nA multi-format image reader.\nResult of an image decoding/encoding process\nEach pixel in this image is 16-bit Rgb\nEach pixel in this image is 32-bit float Rgb\nEach pixel in this image is 8-bit Rgb\nEach pixel in this image is 16-bit Rgb with alpha\nEach pixel in this image is 32-bit float Rgb with alpha\nEach pixel in this image is 8-bit Rgb with alpha\nAn error occurred while interacting with the environment.\nAn Image in JPEG Format\nPixel is 1-bit luminance\nPixel is 16-bit luminance\nPixel is 16-bit luminance\nPixel is 2-bit luminance\nPixel is 4-bit luminance\nPixel is 8-bit luminance\nPixel is 8-bit luminance\nPixel is 1-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 2-bit luminance with an alpha channel\nPixel is 4-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nSet of supported strict limits for a decoder.\nResource limits for decoding.\nCompleting the operation would have required more …\nGrayscale colors.\nGrayscale colors + alpha channel\nContains the success value\nAn Image in OpenEXR Format\nAn error was encountered in input arguments.\nAn Image in PCX Format\nA generalized pixel.\nThe type of pixel.\nThe pixel with an associated <code>ColorType</code>. Not all possible …\nImmutable pixel iterator\nAn Image in PNG Format\nAn Image in general PNM Format\nThe type of each channel in a pixel. For example, this can …\nAn Image in QOI Format\nRGB colors.\nPixel contains 1-bit R, G and B channels\nPixel is 16-bit RGB\nPixel contains 16-bit R, G and B channels\nPixel contains 2-bit R, G and B channels\nPixel is 32-bit float RGB\nPixel is 32-bit float RGB\nAn image buffer for 32-bit float RGB pixels, where the …\nPixel contains 4-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nSendable Rgb image buffer\nRGB colors + alpha channel\nPixel is 1-bit RGB with an alpha channel\nPixel is 16-bit RGBA\nPixel is 16-bit RGB with an alpha channel\nPixel is 2-bit RGB with an alpha channel\nPixel is 32-bit float RGBA\nPixel is 32-bit float RGBA\nAn image buffer for 32-bit float RGBA pixels, where the …\nPixel is 4-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nSendable Rgb + alpha channel image buffer\nA View into another image\nThe scalar type that is used to store each channel in this …\nAn Image in TGA Format\nAn Image in TIFF Format\nPixel is of unknown color type with the specified bits per …\nAn operation can not be completed by the chosen …\nAn Image in WEBP Format\nAdjust the contrast of this image. <code>contrast</code> is the amount …\nReturn all <code>ImageFormat</code>s\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nRotates and/or flips the image as indicated by Orientation.\nApply the function <code>f</code> to each channel except the alpha …\nApply the function <code>f</code> to each channel except the alpha …\nGet the bytes of this value.\nReturn this image’s pixels as a native endian byte slice.\nReturn a view on the raw sample buffer.\nReturn a view on the raw sample buffer for 32bit per …\nReturn a mutable view on the raw sample buffer.\nReturn a view on the raw sample buffer for 16 bit per …\nReturn a view on the raw sample buffer for 8 bit per …\nReturn a reference to an 16bit Grayscale image\nReturn a reference to an 8bit Grayscale image\nReturn a reference to an 16bit Grayscale image with an …\nReturn a reference to an 8bit Grayscale image with an …\nGet a mutable reference based version.\nReturn a mutable reference to an 16bit Grayscale image\nReturn a mutable reference to an 8bit Grayscale image\nReturn a mutable reference to an 16bit Grayscale image …\nReturn a mutable reference to an 8bit Grayscale image with …\nReturn a mutable reference to an 16bit RGB image\nReturn a mutable reference to an 32bit RGB image\nReturn a mutable reference to an 8bit RGB image\nReturn a mutable reference to an 16bit RGBA image\nReturn a mutable reference to an 32bit RGBA image\nReturn a mutable reference to an 8bit RGBA image\nView the samples as a slice.\nReturns the underlying raw buffer\nGet a reference based version.\nReturn a reference to an 16bit RGB image\nReturn a reference to an 32bit RGB image\nReturn a reference to an 8bit RGB image\nReturn a reference to an 16bit RGBA image\nReturn a reference to an 32bit RGBA image\nReturn a reference to an 8bit RGBA image\nView the samples as a slice.\nView this buffer as an image over some type of pixel.\nInterpret this buffer as a mutable image.\nView this buffer but keep mutability at a sample level.\nReturns the number of bits contained in a pixel of …\nReturns the number of bits per pixel for this color type.\nBlend the color of a given pixel into ourself, taking into …\nPut a pixel at location (x, y), taking into account alpha …\nPut a pixel at location (x, y), taking into account alpha …\nPerforms a Gaussian blur on this image. <code>sigma</code> is a measure …\nTuple of bounds in the order of coordinate inputs.\nBrighten the pixels of this image. <code>value</code> is the amount to …\nIterators and other auxiliary structure for the <code>ImageBuffer</code>…\nReturns the image buffer\nReturns a mutable image buffer\nReturns the number of bytes contained in a pixel of …\nReturn if the <code>ImageFormat</code> can be decoded by the lib.\nReturn if the <code>ImageFormat</code> can be encoded by the lib.\nChange the coordinates of this subimage.\nReturns the number of color channels that make up this …\nGet the number of channels for colors of this type.\nReturns the components as a slice.\nReturns the channels of this pixel as a 4 tuple. If the …\nReturns the components as a mutable slice\nThis function checks the <code>max_image_width</code> and …\nThis function checks that all currently set strict limits …\nRemove the current information on the image format.\nEncoding and decoding for various image file formats.\nSteps through the iterator from the current frame until …\nReturn this image’s color type.\nSupplementary color information.\nReturns the color type of the image data produced by this …\nExamples\nCopies all of the pixels from another image into this …\nCopies all of the pixels from one part of this image to …\nReturn a cut-out of this image delimited by the bounding …\nReturn a cut-out of this image delimited by the bounding …\nRead the image (replaces <code>load</code>).\nDelay of this frame\nReturns a tuple containing the width and height of the …\nThe width and height of this image.\nThe width and height of this image.\nEnumerates over the pixels of the image. The iterator …\nEnumerates over the pixels of the image. The iterator …\nEnumerates over the rows of the image. The iterator yields …\nEnumerates over the rows of the image. The iterator yields …\nContains detailed error representation.\nReturns the raw Exif chunk, if it is present. A …\nExpands a color palette by re-using the existing buffer. …\nReturn a list of applicable extensions for this format.\nGet the dimensions <code>(channels, width, height)</code>.\nPerforms a fast blur on this image. <code>sigma</code> is the standard …\nFilters this image with the specified 3x3 kernel.\nCheck if a buffer of length <code>len</code> is large enough.\nImage representations for ffi.\nFlip this image horizontally\nFlip this image vertically\nGet the currently determined format.\nThis function increases the <code>max_alloc</code> limit with amount. …\nThis function acts identically to <code>free</code>, but takes a <code>usize</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a pixel from the 4 channels a, b, c and d. If …\nDecodes an encoded image into a dynamic image.\nReturn the image format specified by a path’s file …\nConstructs a new <code>ImageBuffer</code> by repeated application of …\nReturn the image format specified by a MIME type.\nCreate a delay from a ratio of milliseconds.\nConstructs a new <code>ImageBuffer</code> by repeated application of …\nConstructs a new frame\nReturn the image format specified by the path’s file …\nConstructs a new <code>ImageBuffer</code> by copying a pixel\nConstructs a buffer from a generic container (for example …\nConvert from a duration, clamped between 0 and an …\nReturns a view into a slice.\nReturns mutable view into a mutable slice.\nCreates an image buffer out of an existing buffer. Returns …\nGet a mutable reference to a single sample.\nReturns the pixel located at (x, y). Indexed from top left.\nGets a reference to the pixel at location <code>(x, y)</code>\nGets a reference to the pixel at location <code>(x, y)</code> or …\nGets a reference to the mutable pixel at location <code>(x, y)</code>. …\nGets a reference to the mutable pixel at location <code>(x, y)</code>\nDo not use is function: It is unimplemented!\nGets a reference to the mutable pixel at location <code>(x, y)</code> …\nGet a reference to a single sample.\nReturn a grayscale version of this image. Returns <code>Luma</code> …\nGuess image format from memory block\nIf there are any samples aliasing each other.\nReturns if there is an alpha channel.\nReturns false if the color scheme is grayscale, true …\nThe height of this image.\nThe height of this image.\nReturns the height of the underlying image\nHue rotate the supplied image. <code>value</code> is the degrees to …\nReturns the ICC color profile embedded in the image, or …\nRead a tuple containing the (width, height) of the image …\nMutable portion of the buffer that holds sample values.\nReturn the portion of the buffer that holds sample values.\nImage Processing Functions\nReturns true if this x, y coordinate is contained inside …\nCheck that the pixel and the channel index are in bounds.\nGet an index provided it is inbouds.\nResolve the index of a particular sample.\nReturn a reference to a single sample at specified …\nGet the theoretical position of sample (x, y, channel).\nReturn a mutable reference to a single sample at specified …\nGet a reference to the underlying image.\nGet a mutable reference to the underlying image.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the image buffer\nReturn this image’s pixels as a byte vector. If the …\nConvert the reader into a decoder.\nRead the image dimensions.\nReturn the raw sample buffer with its stride an dimension …\nConsume the decoder producing a series of frames.\nUnwrap the reader.\nConsume the image and returns a Luma image.\nConsume the image and returns a Luma image.\nConsume the image and returns a <code>LumaA</code> image.\nConsume the image and returns a <code>LumaA</code> image.\nReturns the underlying raw buffer\nConsume the image and returns a RGB image.\nConsume the image and returns a RGB image.\nConsume the image and returns a RGB image.\nConsume the image and returns a RGBA image.\nConsume the image and returns a RGBA image.\nConsume the image and returns a RGBA image.\nConsumes the image buffer and returns the underlying data …\nInvert this pixel\nInvert the colors of this image. This method operates …\ndeprecated io module the original io module has been …\nCheck if a buffer fulfills the requirements of a normal …\nA <code>repr(C)</code> description of the layout of buffer samples.\nReturns the x offset\nSet a custom set of decoding limits.\nCreate a new image from a Reader.\nCreate a new image from a byte slice\nCreate a new image from a byte slice\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nApply the function <code>f</code> to each channel except the alpha …\nApply the function <code>f</code> to each channel except the alpha …\nMathematical helper functions and types.\nThe maximum allowed sum of allocations allocated by the …\nThe maximum allowed image height. This limit is strict. …\nThe maximum allowed image width. This limit is strict. The …\nTypes describing image metadata\nGet the minimum length of a buffer such that all in-bounds …\nCreates a new <code>Frames</code> from an implementation specific …\nConstructs a new frame without any delay.\nCreate a new image reader without a preset format.\nCreates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.\nCreates a dynamic image backed by a buffer depending on …\nConstruct a new subimage The coordinates set the position …\nCreates a dynamic image backed by a buffer of gray pixels.\nCreates a dynamic image backed by a buffer of gray pixels.\nCreates a dynamic image backed by a buffer of gray pixels …\nCreates a dynamic image backed by a buffer of gray pixels …\nCreates a dynamic image backed by a buffer of RGB pixels.\nCreates a dynamic image backed by a buffer of RGB pixels.\nCreates a dynamic image backed by a buffer of RGB pixels.\nCreates a dynamic image backed by a buffer of RGBA pixels.\nCreates a dynamic image backed by a buffer of RGBA pixels.\nCreates a dynamic image backed by a buffer of RGBA pixels.\nDisable all decoding limits.\nDisable all limits.\nThe numerator and denominator of the delay in milliseconds.\nThe offsets of this subimage relative to the underlying …\nOpen the image located at the path specified. The image’…\nOpen a file to read, format will be guessed from path.\nReturns the orientation of the image.\nReturns the color type of the image file before decoding\nReturns a parallel iterator over the pixels of this image …\nReturns a parallel iterator over the mutable pixels of …\nReturns a parallel iterator over the pixels of this image, …\nReturns a parallel iterator over the mutable pixels of …\nReturns an Iterator over the pixels of this image. The …\nReturns an iterator over the pixels of this image. The …\nReturns an iterator over the mutable pixels of this image.\nPut a pixel at location (x, y). Indexed from top left.\nPuts a pixel at location <code>(x, y)</code>\nReturns all the bytes in the image.\nUse <code>read_image</code> instead; this method is an implementation …\nDecode a rectangular section of the image.\nReturn the <code>ImageFormat</code>s which are enabled for reading.\nThis function checks that the current limit allows for …\nThis function acts identically to <code>reserve</code>, but accepts the …\nThis function acts identically to <code>reserve</code>, but takes a …\nResize this image using the specified filter algorithm. …\nResize this image using the specified filter algorithm. …\nResize this image using the specified filter algorithm. …\nRotate this image 180 degrees.\nRotate this image 270 degrees clockwise.\nRotate this image 90 degrees clockwise.\nReturns an iterator over the rows of this image.\nReturns an iterator over the mutable rows of this image.\nGet the format of the buffer when viewed as a matrix of …\nUnderlying linear container holding sample values.\nSaves the buffer to a file at the path specified.\nSaves the buffer to a file at the path specified.\nSaves the supplied buffer to a file at the path specified.\nSaves the supplied buffer to a file at the path specified …\nSaves the buffer to a file at the specified path in the …\nSaves the buffer to a file at the specified path in the …\nSupply the format as which to interpret the read image.\nSet the ICC profile to use for the image.\nSet the decoder to have the specified limits. See <code>Limits</code> …\nShrink the image to the minimum of current and given …\nGet the strides for indexing matrix-like <code>[(c, w, h)]</code>.\nReturns a mutable subimage that is a view into this image. …\nCreate a mutable sub-view of the image.\nScale this image down to fit within a specific size. …\nScale this image down to a specific size. Returns a new …\nConvert this subimage to an <code>ImageBuffer</code>\nConvert this pixel to luma\nReturns a copy of this image as a Luma image.\nReturns a copy of this image as a Luma image.\nReturns a copy of this image as a Luma image.\nConvert this pixel to luma with an alpha channel\nReturns a copy of this image as a <code>LumaA</code> image.\nReturns a copy of this image as a <code>LumaA</code> image.\nReturns a copy of this image as a <code>LumaA</code> image.\nReturn the MIME type for this image format or “…\nConvert this pixel to RGB\nReturns a copy of this image as an RGB image.\nReturns a copy of this image as an RGB image.\nReturns a copy of this image as an RGB image.\nConvert this pixel to RGB with an alpha channel\nReturns a copy of this image as an RGBA image.\nReturns a copy of this image as an RGBA image.\nReturns a copy of this image as an RGBA image.\nCopy the data into an owned vector.\nReturns the y offset\nReturns the total number of bytes in the decoded image.\nMove the data into an image buffer.\nReturns the pixel located at (x, y). Indexed from top left.\nReturns the pixel located at (x, y), ignoring bounds …\nPuts a pixel at location (x, y). Indexed from top left.\nPuts a pixel at location (x, y), ignoring bounds checking.\nPerforms an unsharpen mask on this image. <code>sigma</code> is the …\nReturns a subimage that is an immutable view into this …\nCreate a sub-view of the image.\nThe width of this image.\nThe width of this image.\nReturns the width of the underlying image\nConstruct a reader with specified format.\nMake a format guess based on the content, replacing it on …\nCreate a monocolor image from a single pixel.\nWrites the supplied buffer to a writer in the specified …\nWrites all the bytes in an image to the encoder.\nWrites the buffer to a writer in the specified format.\nEncode this image and write it to <code>w</code>.\nWrites the buffer with the given encoder.\nEncode this image with the provided encoder.\nReturn the <code>ImageFormat</code>s which are enabled for writing.\nProvides color conversions for whole image buffers.\nEnumerate the pixels of an image.\nEnumerate the pixels of an image.\nParallel iterator over mutable pixel refs and their …\nParallel iterator over pixel refs and their coordinates.\nEnumerate the rows of an image.\nEnumerate the rows of an image.\nIterate over pixel refs.\nIterate over mutable pixel refs.\nParallel iterator over mutable pixel refs.\nParallel iterator over pixel refs.\nIterate over rows of an image\nIterate over mutable rows of an image\nConverts <code>self</code> to a buffer of type T\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecoding and Encoding of JPEG Images\nDecoding and Encoding of PNG Images\nDecoding of netpbm image formats (pbm, pgm, ppm and pam).\nPixels per centimeter\nPixels per inch (2.54 cm)\nJPEG decoder\nThe representation of a JPEG encoder\nRepresents the absence of a unit, the values indicate only …\nRepresents the pixel density of an image\nRepresents a unit in which the density of an image is …\nReturns a pixel density with a pixel aspect ratio of 1\nA couple of values for (Xdensity, Ydensity)\nCreates the most common pixel density type: the horizontal …\nEncodes the image stored in the raw byte buffer <code>image</code> that …\nEncodes the given image.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new decoder that decodes from the stream <code>r</code>\nCreate a new encoder that writes its output to <code>w</code>\nCreate a new encoder that writes its output to <code>w</code>, and has …\nSet the pixel density of the images the encoder will …\nThe unit in which the density is measured\nUses a heuristic to select one of the preceding filters …\nAn <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.\nFilters based on the average of left and right neighbor …\nHigh compression level\nCompression level of a PNG encoder. The default setting is …\nDefault compression level\nFast, minimal compression\nFilter algorithms used to process image data to improve …\nNo processing done, best used for low bit depth grayscale …\nAlgorithm that takes into account the left, upper left, …\nPNG decoder\nPNG encoder\nFilters based on previous pixel in the same scanline\nFilters based on the scanline above\nTurn this into an iterator over the animation frames.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the gamma value of the image or None if no gamma …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if the image contains an animation.\nCreates a new decoder that decodes from the stream <code>r</code>\nCreate a new encoder that writes its output to <code>w</code>\nCreate a new encoder that writes its output to <code>w</code> with …\nCreates a new decoder that decodes from the stream <code>r</code> with …\nWrite a PNG image with the specified width, height, and …\nHeader produced by a <code>pam</code> file (“Portable Arbitrary Map”…\nMagic number P7\nStandardized tuple type specifiers in the header of a <code>pam</code>.\nSamples are encoded as decimal ascii strings separated by …\nSamples are unsigned binary integers in big endian\nMagic numbers P1 and P4\nHeader produced by a <code>pbm</code> file (“Portable Bit Map”)\nPixels are either black (0) or white (1)\nPixels are either black (0) or white (1) and a second …\nAn image format which is not standardized\nMagic numbers P2 and P5\nHeader produced by a <code>pgm</code> file (“Portable Gray Map”)\nPixels represent the amount of white\nGrayscale with an additional alpha channel\nMagic numbers P3 and P6\nHeader produced by a <code>ppm</code> file (“Portable Pixel Map”)\nPNM decoder\nEncodes images to any of the <code>pnm</code> image formats.\nStores the complete header data of a file.\nDenotes the category of the magic number\nThree channels: Red, Green, Blue\nFour channels: Red, Green, Blue, Alpha\nThe kind of encoding used to store sample values\nRetrieve the underlying arbitrary header if any\nRetrieve the underlying bitmap header if any\nRetrieve the underlying graymap header if any\nRetrieve the underlying pixmap header if any\nNumber of color channels\nEncode an image whose samples are represented as <code>u8</code>.\nBinary or Ascii encoded file\nBinary or Ascii encoded file\nBinary or Ascii encoded file\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe height of the image this header is for.\nHeight of the image file\nHeight of the image file\nHeight of the image file\nHeight of the image file\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtract the reader and header after an image has been read.\nGet the two magic constant bytes corresponding to this …\nThe biggest value a sample can have. In other words, the …\nMaximum sample value within the image\nMaximum sample value within the image\nMaximum sample value within the image\nCreate a new decoder that decodes from the stream <code>read</code>\nCreate new <code>PnmEncoder</code> from the <code>writer</code>.\nWhether samples are stored as binary or as decimal ascii\nGet the pnm subtype, depending on the magic constant …\nRetrieve the format subtype from which the header was …\nColor interpretation of image pixels\nThe width of the image this header is for.\nWidth of the image file\nWidth of the image file\nWidth of the image file\nWidth of the image file\nCreate the header dynamically for each image.\nEnforce the use of a chosen header.\nEncode a specific pnm subtype image.\nWrite the header back into a binary stream\nThe required color type can not be handled.\nAn error was encountered while decoding.\nAn error was encountered while decoding an image.\nThe resulting image exceed dimension limits in either …\nThe dimensions passed are wrong.\nAn error was encountered while encoding.\nAn error was encountered while encoding an image.\nContains the error value\nThe format is known exactly.\nRepeated an operation for which error that could not be …\nAn image format is not supported.\nA string describing the parameter. This is discouraged and …\nSome feature specified by string. This is discouraged and …\nThe generic error type for image operations.\nA best effort representation for image formats.\nResult of an image decoding/encoding process\nThe operation would have performed an allocation larger …\nAn error occurred while interacting with the environment.\nCompleting the operation would have required more …\nIndicates the limit that prevented an operation from …\nCompleting the operation would have required more …\nThe format can be identified by a name.\nThe end of the image has been reached.\nContains the success value\nAn error was encountered in input arguments.\nAn error was encountered in inputs arguments.\nDetails how a parameter is malformed.\nA common path extension for the format is known.\nThe format is not known or could not be determined.\nAn operation can not be completed by the chosen …\nThe specified strict limits are not supported for this …\nThe implementation for an operation was not provided.\nDetails what feature is not supported.\nReturns the image format associated with this error.\nReturn the image format associated with this error.\nReturns the image format associated with this error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an <code>UnsupportedError</code> for an image with details on …\nCreate an <code>EncodingError</code> for an image format.\nCreate a <code>DecodingError</code> for an image format.\nConstruct a <code>ParameterError</code> directly from a corresponding …\nConstruct a generic <code>LimitError</code> directly from a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the corresponding <code>UnsupportedErrorKind</code> of the …\nReturns the corresponding <code>ParameterErrorKind</code> of the error.\nReturns the corresponding <code>LimitErrorKind</code> of the error.\nCreate an <code>EncodingError</code> that stems from an arbitrary error …\nCreate a <code>DecodingError</code> that stems from an arbitrary error …\nThe given limits\nThe supported strict limits\nThe color format did not match the channel count.\nThe samples are in column-major form and all samples are …\nDenotes invalid flat sample buffers when trying to convert …\nA flat buffer over a (multi channel) image.\nAll samples are packed.\nDifferent normal forms of buffers.\nThe represented image can not use this representation.\nAt least pixels are packed.\nThe samples are in row-major form and all samples are …\nA ffi compatible description of a sample buffer.\nThe represented image was too large.\nNo pixel aliases another.\nA flat buffer that can be used as an image view.\nA mutable owning version of a flat buffer.\nDeprecated - <code>ChannelCountMismatch</code> is used instead\nTuple of bounds in the order of coordinate inputs.\nAdd this to an index to get to the sample in the next …\nThe number of channels in the color representation of the …\nSupplementary color information.\nDescribe a column-major image packed in all directions.\nGet the dimensions <code>(channels, width, height)</code>.\nCheck if a buffer of length <code>len</code> is large enough.\nGet a reference on the inner sample descriptor.\nGet a reference on the sample buffer descriptor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to a selected subpixel if it is …\nGet a mutable reference to a selected sample.\nGet a reference to a selected subpixel if it is in-bounds.\nGet a reference to a selected subpixel.\nIf there are any samples aliasing each other.\nThe height of the represented image.\nAdd this to an index to get to the next sample in …\nReturn the mutable portion of the buffer that holds sample …\nReturn the mutable buffer that holds sample values.\nReturn the portion of the buffer that holds sample values.\nReturn the portion of the buffer that holds sample values.\nCheck that the pixel and the channel index are in bounds.\nGet an index provided it is inbouds.\nResolve the index of a particular sample.\nGet the theoretical position of sample (channel, x, y).\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTake out the sample buffer.\nTake out the sample buffer.\nCheck if a buffer fulfills the requirements of a normal …\nA <code>repr(C)</code> description of the layout of buffer samples.\nGet the minimum length of a buffer such that all in-bounds …\nGet the minimum length of a buffer such that all in-bounds …\nGet the minimum length of a buffer such that all in-bounds …\nCompares the logical preconditions.\nDescribe a row-major image packed in all directions.\nGet a reference on the inner buffer.\nGet a reference on the inner buffer.\nUnderlying linear container holding sample values.\nShrink the image to the minimum of current and given …\nShrink the inner image.\nShrink the inner image.\nGet the strides for indexing matrix-like <code>[(c, w, h)]</code>.\nTry to convert this into an image with mutable pixels.\nThe width of the represented image.\nAdd this to an index to get to the next sample in …\nA bi-level color map\nCubic Filter\nThe color type on which the map operates on\nA color map\nAvailable Sampling Filters.\nGaussian Filter\nLanczos with window 3\nNearest Neighbor\nLinear Filter\nPerforms a Gaussian blur on the supplied image. <code>sigma</code> is a …\nBrighten the supplied image. <code>value</code> is the amount to …\nFunctions for altering and converting the color of …\nAdjust the contrast of the supplied image. <code>contrast</code> is the …\nReturn a mutable view into an image The coordinates set …\nReturn an immutable view into an image The coordinates set …\nReduces the colors of the image using the supplied …\nApproximation of Gaussian blur after Kovesi, P.:  Fast …\nPerform a 3x3 box filter on the supplied image. <code>kernel</code> is …\nFlip an image horizontally\nFlip an image horizontally and put the result into the …\nFlip an image horizontally in place.\nFlip an image vertically\nFlip an image vertically and put the result into the …\nFlip an image vertically in place.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to a grayscale image with the …\nConvert the supplied image to a grayscale image with the …\nDetermine if this implementation of <code>ColorMap</code> overrides the …\nIndicate <code>NeuQuant</code> implements <code>lookup</code>.\nFill the image with a linear horizontal gradient\nHue rotate the supplied image. <code>value</code> is the degrees to …\nReduces the colors using the supplied <code>color_map</code> and …\nReturns the index of the closest match of <code>color</code> in the …\nLinearly sample from an image using coordinates in [0, w-1]…\nSample from an image using coordinates in [0, w-1] and [0, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvert each pixel within the supplied image. This function …\nLooks up color by index in the color map.  If <code>idx</code> is out …\nMaps <code>color</code> to the closest color in the color map.\nOverlay an image at a given coordinate (x, y)\nCalculate the region that can be copied from top to bottom.\nReplace the contents of an image at a given coordinate (x, …\nResize the supplied image to the specified dimensions. …\nRotate an image 180 degrees clockwise.\nRotate an image 180 degrees clockwise and put the result …\nRotate an image 180 degrees clockwise in place.\nRotate an image 270 degrees clockwise.\nRotate an image 270 degrees clockwise and put the result …\nRotate an image 90 degrees clockwise.\nRotate an image 90 degrees clockwise and put the result …\nLinearly sample from an image using coordinates in [0, 1].\nSample from an image using coordinates in [0, 1], taking …\nResize the supplied image to the specific dimensions.\nTile an image by repeating it multiple times\nPerforms an unsharpen mask on the supplied image. <code>sigma</code> is …\nFill the image with a linear vertical gradient\nA bi-level color map\nThe color type on which the map operates on\nA color map\nBrighten the supplied image. <code>value</code> is the amount to …\nBrighten the supplied image in place. <code>value</code> is the amount …\nAdjust the contrast of the supplied image. <code>contrast</code> is the …\nAdjust the contrast of the supplied image in place. …\nReduces the colors of the image using the supplied …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to a grayscale image with the …\nConvert the supplied image to a grayscale image with the …\nDetermine if this implementation of <code>ColorMap</code> overrides the …\nHue rotate the supplied image. <code>value</code> is the degrees to …\nHue rotate the supplied image in place.\nReduces the colors using the supplied <code>color_map</code> and …\nReturns the index of the closest match of <code>color</code> in the …\nInvert each pixel within the supplied image. This function …\nLooks up color by index in the color map.  If <code>idx</code> is out …\nMaps <code>color</code> to the closest color in the color map.\nDeprecated re-export of <code>LimitSupport</code>\nDeprecated re-export of <code>Limits</code>\nDeprecated re-export of <code>ImageReader</code> as <code>Reader</code>\nThe maximum allowed sum of allocations allocated by the …\nThe maximum allowed image height. This limit is strict. …\nThe maximum allowed image width. This limit is strict. The …\nA Rectangle defined by its top left corner, width and …\nReturns the argument unchanged.\nThe rectangle’s height.\nCalls <code>U::from(self)</code>.\nThe rectangle’s width.\nThe x coordinate of the top left corner.\nThe y coordinate of the top left corner.\nFlip horizontally. Can be performed in-place.\nFlip vertically. Can be performed in-place.\nDo not perform any transformations.\nDescribes the transformations to be applied to the image. …\nRotate by 180 degrees. Can be performed in-place.\nRotate by 270 degrees clockwise. Equivalent to rotating by …\nRotate by 270 degrees clockwise and flip horizontally.\nRotate by 90 degrees clockwise.\nRotate by 90 degrees clockwise and flip horizontally.\nReturns the argument unchanged.\nConverts from Exif orientation\nCalls <code>U::from(self)</code>.\nConverts into Exif orientation\nIterator for const generic combinations returned by …\nA “meta iterator adaptor”. Its closure receives a …\nBoth values are present.\nAn iterator for the elements in a single chunk.\n<code>ChunkBy</code> is the storage for the lazy grouping operation.\nAn iterator that yields the Chunk iterators.\nAn iterator over all windows, wrapping back to the first …\nAn iterator adaptor that may join together adjacent …\nIterator for <code>Vec</code> valued combinations returned by …\nAn iterator to iterate through all the <code>n</code>-length …\nAn iterator that maps an iterator of tuples like …\nContinue folding with this value\nAn iterator adaptor that removes repeated duplicates.\nAn iterator adaptor that removes repeated duplicates, …\nAn iterator adaptor that removes repeated duplicates, …\nAn iterator adaptor that removes repeated duplicates, …\nA type returned by the <code>diff_with</code> function.\nFold is complete and will return this value\nAn iterator adapter to filter out duplicate elements.\nAn iterator adapter to filter for duplicate elements.\nThe enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …\nValue that either holds a single A or B, or both.\nIterator returned for the error case of …\nAn iterator adapter to filter and apply a transformation …\nAn iterator adapter to filter values within a nested …\nThis is the first element.\nThe index of the first non-matching element along with …\nAn iterator adaptor that flattens <code>Result::Ok</code> values and …\nAn enum used for controlling the execution of <code>fold_while</code>.\nFormat all iterator elements lazily, separated by <code>sep</code>.\nFormat all iterator elements lazily, separated by <code>sep</code>.\nAn iterator for the elements in a single group.\nSee <code>ChunkBy</code>.\n<code>GroupingMap</code> is an intermediate struct for efficient …\n<code>GroupingMapBy</code> is an intermediate struct for efficient …\nAn iterator that yields the Group iterators.\nAn iterator adaptor that alternates elements from two …\nAn iterator adaptor that alternates elements from the two …\nAn iterator adaptor to insert a particular value between …\nAn iterator adaptor to insert a particular value created …\n<code>ChunkLazy</code> is the storage for a lazy chunking operation.\nAn iterator that infinitely applies function to value and …\nAn <code>Iterator</code> blanket implementation that provides extra …\nAn iterator adaptor that merges an abitrary number of base …\nAn iterator adaptor that merges an abitrary number of base …\nThis is the last element.\nA value of type <code>L</code>.\nOnly the left value of type <code>A</code> is present.\nThe total number of elements that were in <code>I</code> along with the …\nAn iterator adapter to apply <code>Into</code> conversion to each …\nAn iterator adapter to apply a transformation within a …\nAn iterator adaptor that merges the two base iterators in …\nAn iterator adaptor that merges the two base iterators in …\nAn iterator adaptor that merge-joins items from the two …\nThis is neither the first nor the last element.\nMore than one element in the iterator, the first element …\n<code>MinMaxResult</code> is an enum returned by <code>minmax</code>.\nSee <code>multipeek()</code> for more information.\nAn iterator adaptor that iterates over the cartesian …\nAn iterator that can be unzipped into multiple collections.\nEmpty iterator\nIterator with one element, so the minimum and maximum are …\nThis is the only element.\nAn iterator adaptor that pads a sequence to a minimum …\nSee <code>peek_nth()</code> for more information.\nAn iterator that allows peeking at an element before …\nAn iterator adaptor that takes items while a closure …\nAn iterator adaptor that iterates through all the <code>k</code>…\nThe first component of the value yielded by <code>WithPosition</code>. …\nAn iterator adapter to get the positions of each element …\nAn iterator to iterate through the powerset of the …\nAn iterator that produces only the <code>T</code> values as long as the …\nAn iterator adaptor that iterates over the cartesian …\nAn iterator adaptor that allows putting back a single item …\nAn iterator adaptor that allows putting multiple items in …\nA wrapper for <code>Rc&lt;RefCell&lt;I&gt;&gt;</code>, that implements the <code>Iterator</code> …\nAn iterator that produces <em>n</em> repetitions of an element.\nA value of type <code>R</code>.\nOnly the right value of type <code>B</code> is present.\nThe total number of elements that were in <code>J</code> along with the …\nAn iterator adaptor that consumes elements while the given …\nAn iterator adaptor that borrows from a <code>Clone</code>-able iterator\nOne half of an iterator pair where both return the same …\nAn iterator over a incomplete tuple.\nAn iterator to iterate through all combinations in a <code>Clone</code>…\nAn iterator over all contiguous windows that produces …\nAn iterator that groups the items in tuples of a specific …\nSee <code>unfold</code> for more information.\nAn iterator adapter to filter out duplicate elements.\nAn iterator adapter to filter out duplicate elements.\nAn iterator adapter to apply a mutating function to each …\nAn iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator …\nAn iterator adaptor that wraps each element in an <code>Position</code>.\nSee <code>multizip</code> for more information.\nAn iterator which iterates two other iterators …\nAn iterator which iterates two other iterators …\nComposable external iteration.\nThis is the generic way to perform any operation on a …\nTest whether the predicate holds for all elements in the …\nTest whether the predicate holds for any elements in the …\nConverts from <code>&amp;EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;&amp;_, &amp;_&gt;</code> …\nConverts from <code>&amp;mut EitherOrBoth&lt;A, B&gt;</code> to …\nConvert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.\nConverts from <code>&amp;mut EitherOrBoth&lt;A, B&gt;</code> to …\nConvert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …\nConvert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …\nConvert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.\nConverts from <code>&amp;EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;&amp;A, &amp;B&gt;</code>.\nAssert that two iterables produce equal sequences, with …\nIf <code>Both</code>, return <code>Some</code> containing the left and right values. …\nTakes two iterables and creates a new iterator over both …\nChain zero or more iterators together into one sequence.\nCreate an iterator that clones each element from <code>&amp;T</code> to <code>T</code>.\nMaps an <code>Either&lt;&amp;L, &amp;R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by cloning the …\nMaps an <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by …\nGroups elements from the <code>GroupingMap</code> source by key and …\nCombine all an iterator’s elements into one element by …\nCreate an iterator that maps for example iterators of …\nMaps an <code>Either&lt;&amp;L, &amp;R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by copying the …\nMaps an <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by …\nCompares every element yielded by both <code>i</code> and <code>j</code> with the …\nApply one of two functions depending on contents, unifying …\nConvert the contained value into <code>T</code>\nLike <code>either</code>, but provide some context to whichever of the …\nIterate <code>iterable</code> with a running index.\nReturn <code>true</code> if both iterables produce equal sequences …\nExecutes the given command directly.\nReturns the left value\nReturns the right value\nFactors out a homogenous type from an <code>Either</code> of <code>Result</code>.\nFactor out a homogeneous type from an either of pairs.\nConverts an <code>Either</code> of <code>Iterator</code>s to be an <code>Iterator</code> of <code>Either</code>…\nBorrows an <code>Either</code> of <code>Iterator</code>s to be an <code>Iterator</code> of <code>Either</code>s\nMutably borrows an <code>Either</code> of <code>Iterator</code>s to be an <code>Iterator</code> …\nFactors out <code>None</code> from an <code>Either</code> of <code>Option</code>.\nFactors out a homogenous type from an <code>Either</code> of <code>Result</code>.\nFactor out a homogeneous type from an either of pairs.\nConvert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.\nConvert <code>EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;B, A&gt;</code>.\nPerform a fold operation over the iterable.\nGroups elements from the <code>GroupingMap</code> source by key and …\nSee <code>.reduce()</code>.\nGroups elements from the <code>GroupingMap</code> source by key and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf <code>Left</code>, or <code>Both</code>, return true. Otherwise, return false.\nIf <code>Right</code>, or <code>Both</code>, return true, otherwise, return false.\nSet <code>self</code> to <code>Both(..)</code>, containing the specified left and …\nSets the <code>left</code> value of this instance, and returns a …\nSets the <code>right</code> value of this instance, and returns a …\nCreate an iterator that interleaves elements in <code>i</code> and <code>j</code>.\nIterate <code>iterable</code> with a particular value inserted between …\nIterate <code>iterable</code> with a particular value created by a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn a buffer with the produced items that was not …\nExtract the value of an either over two equivalent types.\nReturn the value in the continue or done.\nConvert the inner value to an iterator.\nIf <code>Left</code> or <code>Both</code>, return the left value. Otherwise, convert …\n<code>into_option</code> creates an <code>Option</code> of type <code>(T, T)</code>. The returned …\nSplit the <code>PutBack</code> into its parts.\nIf <code>Right</code> or <code>Both</code>, return the right value. Otherwise, …\nCreate an iterator over the “cartesian product” of …\nIf <code>Both</code>, return true. Otherwise, return false.\nReturn true if <code>self</code> is <code>Done</code>, false if it is <code>Continue</code>.\nReturn true if the value is the <code>Left</code> variant.\nIf <code>Left</code>, return true. Otherwise, return false. Exclusive …\nReturn true if the value is the <code>Right</code> variant.\nIf <code>Right</code>, return true. Otherwise, return false. Exclusive …\nBorrow the inner value as an iterator.\nMutably borrow the inner value as an iterator.\nCreates a new iterator that infinitely applies function to …\nCreate an iterator running multiple iterators in lockstep.\nCombine all iterator elements into one <code>String</code>, separated …\nIf <code>Left</code>, return <code>Some</code> with the left value. If <code>Right</code> or <code>Both</code>…\nIf <code>Right</code>, return <code>Some</code> with the right value. If <code>Left</code> or <code>Both</code>…\nCreate an iterator that merges elements of the contained …\nCreate an iterator that merges elements of the contained …\nConvert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.\nIf <code>Left</code>, or <code>Both</code>, return <code>Some</code> with the left value. …\nReturn tuple of options corresponding to the left and …\nApply the function <code>f</code> on the value in the <code>Left</code> variant if …\nApply the function <code>f</code> on the value <code>a</code> in <code>Left(a)</code> or …\nReturn left value or given value\nReturn left or a default\nReturns left value or computes it from a closure\nReturns a mutable reference to the left value. If the left …\nIf the left value is not present, replace it the value …\nMap <code>f</code> over the contained value and return the result in the\nApply the functions <code>f</code> and <code>g</code> on the value <code>a</code> and <code>b</code> …\nApply the functions <code>f</code> and <code>g</code> to the <code>Left</code> and <code>Right</code> variants …\nSimilar to <code>map_either</code>, with an added context <code>ctx</code> …\nApply the function <code>f</code> on the value in the <code>Left</code> variant if …\nApply the function <code>f</code> on the value <code>a</code> in <code>Left(a)</code> or …\nApply the function <code>f</code> on the value in the <code>Right</code> variant if …\nApply the function <code>f</code> on the value <code>b</code> in <code>Right(b)</code> or …\nReturn the maximum value of the iterable.\nGroups elements from the <code>GroupingMap</code> source by key and …\nGroups elements from the <code>GroupingMap</code> source by key and …\nGroups elements from the <code>GroupingMap</code> source by key and …\nCreate an iterator that merges elements in <code>i</code> and <code>j</code>.\nReturn an iterator adaptor that merge-joins items from the …\nReturn the minimum value of the iterable.\nGroups elements from the <code>GroupingMap</code> source by key and …\nGroups elements from the <code>GroupingMap</code> source by key and …\nGroups elements from the <code>GroupingMap</code> source by key and …\nGroups elements from the <code>GroupingMap</code> source by key and …\nGroups elements from the <code>GroupingMap</code> source by key and …\nGroups elements from the <code>GroupingMap</code> source by key and …\nAn iterator adaptor that allows the user to peek at …\nConverts an iterator of tuples into a tuple of containers.\nUnzip this iterator into multiple collections.\nAn iterator that generalizes <code>.zip()</code> and allows running …\nWorks exactly like the <code>next_if</code> method in …\nWorks exactly like the <code>next_if_eq</code> method in …\nReturns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, …\nReturns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, …\nReturns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, …\nPartition a sequence using predicate <code>pred</code> so that elements …\nWorks exactly like <code>.next()</code> with the only difference that …\nWorks exactly like the <code>peek</code> method in <code>std::iter::Peekable</code>.\nWorks exactly like the <code>peek_mut</code> method in …\nA drop-in replacement for <code>std::iter::Peekable</code> which adds a …\nReturns a reference to the <code>nth</code> value without advancing the …\nReturns a mutable reference to the <code>nth</code> value without …\nPass a reference to the next iterator element to the …\n“Lift” a function of the values of an iterator so that …\nGroups elements from the <code>GroupingMap</code> source by key and …\nCreate an iterator where you can put back a single item\nPut back a single value to the front of the iterator.\nPuts <code>x</code> in front of the iterator.\nCreate an iterator where you can put back multiple values …\nQueues the given command for further execution.\nReturn an iterator inside a <code>Rc&lt;RefCell&lt;_&gt;&gt;</code> wrapper.\nThe boxed iterator.\nReturn either value of left, right, or apply a function <code>f</code> …\nGroups elements from the <code>GroupingMap</code> source by key and …\nCreate an iterator that produces <code>n</code> repetitions of <code>element</code>.\nReset the peeking “cursor”\nIterate <code>iterable</code> in reverse.\nConvert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.\nIf <code>Right</code>, or <code>Both</code>, return <code>Some</code> with the right value. …\nApply the function <code>f</code> on the value in the <code>Right</code> variant if …\nApply the function <code>f</code> on the value <code>b</code> in <code>Right(b)</code> or …\nReturn right value or given value\nReturn right or a default\nReturns right value or computes it from a closure\nReturns a mutable reference to the right value. If the …\nIf the right value is not present, replace it the value …\nSort all iterator elements into a new iterator in …\nSort all iterator elements into a new iterator in …\nInternal state that will be passed to the closure on the …\nThe concrete iterator types.\nGroups elements from the <code>GroupingMap</code> source by key and …\nPerforms a set of actions within a synchronous update.\nTraits helpful for using certain <code>Itertools</code> methods in …\nCreates a new unfold source with the specified closure as …\nReturns the left value\nReturns the right value\nput back value <code>value</code> (builder method)\nConverts the arguments to iterators and zips them.\nZips two iterators but <strong>panics</strong> if they are not of the same …\nAn iterator over <code>N</code> elements of the iterator at a time.\nLike <code>Iterator::by_ref</code>, but requiring <code>Sized</code> so it can …\nAn iterator that links two iterators together, in a chain.\nAn iterator that clones the elements of an underlying …\nAn iterator that copies the elements of an underlying …\nAn iterator that repeats endlessly.\nAn iterator able to yield elements from both ends.\nAn iterator that yields nothing.\nAn iterator that yields the current count and the element …\nAn iterator that knows its exact length.\nExtend a collection with the contents of an iterator.\nAn iterator that filters the elements of <code>iter</code> with …\nAn iterator that uses <code>f</code> to both filter and map elements …\nAn iterator that maps each element to an iterator, and …\nAn iterator that flattens one level of nesting in an …\nAn iterator over the values yielded by an underlying …\nAn iterator where each iteration calls the provided …\nConversion from an <code>Iterator</code>.\nAn iterator that yields <code>None</code> forever after the underlying …\nAn iterator that always continues to yield <code>None</code> when …\nAn iterator that calls a function with a reference to each …\nAn iterator adapter that places a separator between all …\nAn iterator adapter that places a separator between all …\nWhich kind of iterator are we turning this into?\nConversion into an <code>Iterator</code>.\nThe type of the elements being iterated over.\nThe type of the elements being iterated over.\nA trait for dealing with iterators.\nAn iterator that maps the values of <code>iter</code> with <code>f</code>.\nAn iterator that only accepts elements while <code>predicate</code> …\nAn iterator over the mapped windows of another iterator.\nAn iterator that yields an element exactly once.\nAn iterator that yields a single element of type <code>A</code> by …\nAn iterator with a <code>peek()</code> that returns an optional …\nTrait to represent types that can be created by …\nAn iterator that repeats an element endlessly.\nAn iterator that repeats an element an exact number of …\nAn iterator that repeats elements of type <code>A</code> endlessly by …\nA double-ended iterator with the direction inverted.\nAn iterator to maintain state while iterating another …\nAn iterator that skips over <code>n</code> elements of <code>iter</code>.\nAn iterator that rejects elements while <code>predicate</code> returns …\nObjects that have a notion of <em>successor</em> and <em>predecessor</em> …\nAn iterator for stepping iterators by a custom amount.\nAn iterator which, starting from an initial item, computes …\nTrait to represent types that can be created by summing up …\nAn iterator that only iterates over the first <code>n</code> iterations …\nAn iterator that only accepts elements while <code>predicate</code> …\nAn iterator that reports an accurate length using …\nA type that upholds all invariants of <code>Step</code>.\nAn iterator that iterates two other iterators …\nReturns the value that would be obtained by taking the …\nConverts the arguments to iterators and links them …\nCreates an iterator that yields nothing.\nExtends a collection with the contents of an iterator.\nReturns the value that would be obtained by taking the …\nCreates a new iterator where each iteration calls the …\nCreates an iterator with the provided closure …\nCreates a value from an iterator.\nCreates an iterator from a value.\nCreates a new closure that returns an iterator where each …\nAdvances the iterator and returns the next value.\nRemoves and returns an element from the end of the …\nCreates an iterator that yields an element exactly once.\nCreates an iterator that lazily generates a value exactly …\nTakes an iterator and generates <code>Self</code> from the elements by …\nCreates a new iterator that endlessly repeats a single …\nCreates a new iterator that repeats a single element a …\nCreates a new iterator that repeats elements of type <code>A</code> …\nReturns the bounds on the number of <em>successor</em> steps …\nCreates an iterator which, starting from an initial item, …\nTakes an iterator and generates <code>Self</code> from the elements by …\nConverts the arguments to iterators and zips them.\nIterator for const generic combinations returned by …\nA “meta iterator adaptor”. Its closure receives a …\nAn iterator for the elements in a single chunk.\n<code>ChunkBy</code> is the storage for the lazy grouping operation.\nAn iterator that yields the Chunk iterators.\nAn iterator over all windows, wrapping back to the first …\nAn iterator adaptor that may join together adjacent …\nIterator for <code>Vec</code> valued combinations returned by …\nAn iterator to iterate through all the <code>n</code>-length …\nAn iterator that maps an iterator of tuples like …\nAn iterator adaptor that removes repeated duplicates.\nAn iterator adaptor that removes repeated duplicates, …\nAn iterator adaptor that removes repeated duplicates, …\nAn iterator adaptor that removes repeated duplicates, …\nAn iterator adapter to filter out duplicate elements.\nAn iterator adapter to filter for duplicate elements.\nIterator returned for the error case of …\nAn iterator adapter to filter and apply a transformation …\nAn iterator adapter to filter values within a nested …\nAn iterator adaptor that flattens <code>Result::Ok</code> values and …\nFormat all iterator elements lazily, separated by <code>sep</code>.\nFormat all iterator elements lazily, separated by <code>sep</code>.\nAn iterator for the elements in a single group.\nSee <code>ChunkBy</code>.\n<code>GroupingMap</code> is an intermediate struct for efficient …\n<code>GroupingMapBy</code> is an intermediate struct for efficient …\nAn iterator that yields the Group iterators.\nAn iterator adaptor that alternates elements from two …\nAn iterator adaptor that alternates elements from the two …\nAn iterator adaptor to insert a particular value between …\nAn iterator adaptor to insert a particular value created …\n<code>ChunkLazy</code> is the storage for a lazy chunking operation.\nAn iterator that infinitely applies function to value and …\nAn iterator adaptor that merges an abitrary number of base …\nAn iterator adaptor that merges an abitrary number of base …\nAn iterator adapter to apply <code>Into</code> conversion to each …\nAn iterator adapter to apply a transformation within a …\nAn iterator adaptor that merges the two base iterators in …\nAn iterator adaptor that merges the two base iterators in …\nAn iterator adaptor that merge-joins items from the two …\nSee <code>multipeek()</code> for more information.\nAn iterator adaptor that iterates over the cartesian …\nAn iterator adaptor that pads a sequence to a minimum …\nSee <code>peek_nth()</code> for more information.\nAn iterator adaptor that takes items while a closure …\nAn iterator adaptor that iterates through all the <code>k</code>…\nAn iterator adapter to get the positions of each element …\nAn iterator to iterate through the powerset of the …\nAn iterator that produces only the <code>T</code> values as long as the …\nAn iterator adaptor that iterates over the cartesian …\nAn iterator adaptor that allows putting back a single item …\nAn iterator adaptor that allows putting multiple items in …\nA wrapper for <code>Rc&lt;RefCell&lt;I&gt;&gt;</code>, that implements the <code>Iterator</code> …\nAn iterator that produces <em>n</em> repetitions of an element.\nAn iterator adaptor that consumes elements while the given …\nAn iterator adaptor that borrows from a <code>Clone</code>-able iterator\nOne half of an iterator pair where both return the same …\nAn iterator over a incomplete tuple.\nAn iterator to iterate through all combinations in a <code>Clone</code>…\nAn iterator over all contiguous windows that produces …\nAn iterator that groups the items in tuples of a specific …\nSee <code>unfold</code> for more information.\nAn iterator adapter to filter out duplicate elements.\nAn iterator adapter to filter out duplicate elements.\nAn iterator adapter to apply a mutating function to each …\nAn iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator …\nAn iterator adaptor that wraps each element in an <code>Position</code>.\nSee <code>multizip</code> for more information.\nAn iterator which iterates two other iterators …\nAn iterator which iterates two other iterators …\nThe boxed iterator.\nInternal state that will be passed to the closure on the …\nImplemented for homogeneous tuples of size up to 12.\nUsed by [<code>Itertools::get</code>] to know which iterator to turn …\nThe type returned for this type of index.\nReturns an adapted iterator for the current index.\nRounds toward positive infinity.\nA day is usually 24 hours, but some days may have …\nAn error that can occur in this crate.\nRounds away from zero like <code>Ceil</code> for positive spans and …\nRounds toward negative infinity.\nRounds to the nearest allowed value like <code>HalfExpand</code>, but …\nRounds to the nearest allowed value like <code>HalfExpand</code>, but …\nRounds to the nearest value allowed by the rounding …\nRounds to the nearest allowed value like <code>HalfExpand</code>, but …\nRounds to the nearest allowed value like <code>HalfExpand</code>, but …\nAn hour is always 60 minutes.\nThe maximum possible duration.\nThe maximum representable timestamp.\nThe minimum possible duration. Or the “most negative” …\nThe minimum representable timestamp.\nA microsecond is always 1,000 nanoseconds.\nA millisecond is always 1,000 microseconds.\nA minute is always 60 seconds. (Jiff behaves as if leap …\nA Gregorian calendar month. It usually has one of 28, 29, …\nA nanosecond is the smallest granularity of time supported …\nThe mode for dealing with the remainder when rounding …\nA second is always 1,000 milliseconds.\nA signed duration of time represented as a 96-bit integer …\nOptions for <code>SignedDuration::round</code>.\nA span of time represented via a mixture of calendar and …\nOptions for <code>Span::checked_add</code> and <code>Span::checked_sub</code>.\nOptions for <code>Span::compare</code>.\nA wrapper for <code>Span</code> that implements the <code>Hash</code>, <code>Eq</code> and …\nA relative datetime for use with <code>Span</code> APIs.\nOptions for <code>Span::round</code>.\nOptions for <code>Span::total</code>.\nAn instant in time represented as the number of …\nOptions for <code>Timestamp::checked_add</code> and …\nOptions for <code>Timestamp::since</code> and <code>Timestamp::until</code>.\nA type for formatting a <code>Timestamp</code> with a specific offset.\nOptions for <code>Timestamp::round</code>.\nAn iterator over periodic timestamps, created by …\nA trait for enabling concise literals for creating <code>Span</code> …\nRounds toward zero, chopping off any fractional part of a …\nThe Unix epoch represented as a timestamp.\nA way to refer to a single calendar or clock unit.\nA week is 7 days that either begins on Sunday or Monday.\nA Gregorian calendar year. It usually has 365 days for …\nA duration of zero time.\nA time zone aware instant in time.\nOptions for <code>Timestamp::checked_add</code> and …\nOptions for <code>Zoned::since</code> and <code>Zoned::until</code>.\nOptions for <code>Zoned::round</code>.\nA builder for setting the fields on a <code>Zoned</code>.\nLonger form documentation for Jiff.\nReturns the absolute value of this signed duration.\nReturns a new span that is the absolute value of this span.\nReturns this timestamp as a <code>SignedDuration</code> since the Unix …\nReturns the number of whole hours in this duration.\nReturns the total duration in units of whole microseconds.\nReturns this timestamp as a number of microseconds since …\nReturns the total duration in units of whole milliseconds.\nReturns the number of milliseconds, with a possible …\nReturns the number of milliseconds, with a possible …\nReturns this timestamp as a number of milliseconds since …\nReturns the number of whole minutes in this duration.\nReturns the total duration in units of whole nanoseconds.\nReturns this timestamp as a number of nanoseconds since …\nReturns this timestamp as a number of seconds since the …\nReturns the number of whole seconds in this duration.\nReturns the number of seconds, with a possible fractional …\nReturns the number of seconds, with a possible fractional …\nCreate a new <code>Zoned</code> from the fields set on this …\nAdd two signed durations together. If overflow occurs, …\nAdds a span to this one and returns the sum as a new span.\nAdd the given span of time to this timestamp.\nAdd the given span of time to this zoned datetime. If the …\nDivide this duration by an integer. If the division …\nMultiply this signed duration by an integer. If the …\nMultiplies each field in this span by a given integer.\nReturns this duration with its sign flipped.\nSubtract one signed duration from another. If overflow …\nThis routine is identical to <code>Span::checked_add</code> with the …\nThis routine is identical to <code>Timestamp::checked_add</code> with …\nThis routine is identical to <code>Zoned::checked_add</code> with the …\nFacilities for dealing with inexact dates and times.\nCompares two spans in terms of how long they are. Negative …\nCreates a new <code>Timestamp</code> value in a <code>const</code> context.\nReturns the civil date component of this zoned datetime.\nSet the year, month and day fields via the <code>Date</code> given.\nReturns the civil datetime component of this zoned …\nEquivalent to <code>days()</code>, but reads better for singular units.\nReturns the day for this zoned datetime.\nSet the day field on a <code>Zoned</code>.\nReturns the ordinal day of the year that this zoned …\nSet the day field on a <code>Zoned</code> via the ordinal number of a …\nReturns the ordinal day of the year that this zoned …\nSet the day field on a <code>Zoned</code> via the ordinal number of a …\nCreate a new span from this integer in units of days.\nSet the number of days on this span. The value may be …\nThis is a convenience function for setting the relative …\nThis is a convenience function for setting the relative …\nThis is a convenience function for setting the relative …\nThis is a convenience function for setting the relative …\nCreates a special marker that indicates all days ought to …\nReturns the ordinal number of the last day in the month in …\nReturns the ordinal number of the last day in the year in …\nSet the disambiguation strategy for when a zoned datetime …\nFormat a <code>Timestamp</code> datetime into a string with the given …\nDivides this signed duration by another signed duration …\nDivides this signed duration by another signed duration …\nReturns the result of dividing this duration by the given …\nReturns the result of dividing this duration by the given …\nThis routine is identical to <code>Timestamp::duration_until</code>, …\nThis routine is identical to <code>Zoned::duration_until</code>, but the\nReturns an absolute duration representing the elapsed time …\nReturns an absolute duration representing the elapsed time …\nReturns the end of the day, corresponding to …\nReturns the year and its era.\nSet the year of a zoned datetime via its era and its …\nReturns this <code>Span</code> as a value with a type that implements …\nReturns the first date of the month that this zoned …\nReturns the first date of the year that this zoned …\nConfigurable support for printing and parsing datetimes …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new error value from <code>core::fmt::Arguments</code>.\nCreates a new timestamp from a <code>Duration</code> with the given …\nCreates a new <code>SignedDuration</code> from the given number of …\nCreates a new <code>SignedDuration</code> from the given number of whole\nCreates a new instant in time from the number of …\nCreates a new <code>SignedDuration</code> from the given number of whole\nCreates a new instant in time from the number of …\nCreates a new <code>SignedDuration</code> from the given number of …\nCreates a new <code>SignedDuration</code> from the given number of whole\nCreates a new instant in time from the number of …\nCreates a new instant in time from the number of seconds …\nCreates a new <code>SignedDuration</code> from the given number of …\nReturns a signed duration corresponding to the number of …\nReturns a signed duration corresponding to the number of …\nReturns the number of day units in this span.\nReturns the number of hour units in this span.\nReturns the number of microsecond units in this span.\nReturns the number of millisecond units in this span.\nReturns the number of minute units in this span.\nReturns the number of month units in this span.\nReturns the number of nanosecond units in this span.\nReturns the number of second units in this span.\nReturns the number of week units in this span.\nReturns the number of year units in this span.\nEquivalent to <code>hours()</code>, but reads better for singular units.\nReturns the “hour” component of this zoned datetime.\nSet the hour field on a <code>Zoned</code>.\nCreate a new span from this integer in units of hours.\nSet the number of hours on this span. The value may be …\nReturns true if and only if the year in which this zoned …\nCreates a <code>Zoned</code> value by attaching a time zone for the …\nReturn a new zoned datetime with precisely the same …\nSet the rounding increment for the smallest unit.\nSet the rounding increment for the smallest unit.\nSet the rounding increment for the smallest unit.\nSet the rounding increment for the smallest unit.\nSet the rounding increment for the smallest unit.\nSet the rounding increment for the smallest unit.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true when this duration is negative. That is, less …\nReturns true if and only if this span is negative.\nReturns true when this duration is positive. That is, …\nReturns true if and only if this span is positive.\nReturns true if this duration spans no time.\nReturns true if and only if every field in this span is …\nReturns true if and only if this timestamp corresponds to …\nConstruct a civil ISO 8601 week date from this zoned …\nSet the largest units allowed in the span returned.\nSet the largest units allowed in the span returned.\nSet the largest units allowed in the span returned.\nReturns the last date of the month that this zoned …\nReturns the last date of the year that this zoned datetime …\nEquivalent to <code>microseconds()</code>, but reads better for …\nReturns the “microsecond” component of this zoned …\nSet the microsecond field on a <code>Zoned</code>.\nCreate a new span from this integer in units of …\nSet the number of microseconds on this span. The value may …\nEquivalent to <code>milliseconds()</code>, but reads better for …\nReturns the “millisecond” component of this zoned …\nSet the millisecond field on a <code>Zoned</code>.\nCreate a new span from this integer in units of …\nSet the number of milliseconds on this span. The value may …\nEquivalent to <code>minutes()</code>, but reads better for singular …\nReturns the “minute” component of this zoned datetime.\nSet the minute field on a <code>Zoned</code>.\nCreate a new span from this integer in units of minutes.\nSet the number of minutes on this span. The value may be …\nSet the rounding mode.\nSet the rounding mode.\nSet the rounding mode.\nSet the rounding mode.\nSet the rounding mode.\nSet the rounding mode.\nEquivalent to <code>months()</code>, but reads better for singular …\nReturns the month for this zoned datetime.\nSet the month field on a <code>Zoned</code>.\nCreate a new span from this integer in units of months.\nSet the number of months on this span. The value may be …\nReturns the result of multiplying this duration by the …\nReturns the result of multiplying this duration by the …\nEquivalent to <code>nanoseconds()</code>, but reads better for singular …\nReturns the “nanosecond” component of this zoned …\nSet the nanosecond field on a <code>Zoned</code>.\nCreate a new span from this integer in units of …\nSet the number of nanoseconds on this span. The value may …\nReturns a new span that negates this span.\nCreates a new <code>SignedDuration</code> from the given number of …\nCreate a new default configuration for rounding a signed …\nCreates a new span representing a zero duration. That is, …\nCreate a new default configuration for rounding a span via …\nCreates a new instant in time represented as a timestamp.\nCreate a new default configuration for computing the span …\nCreate a new default configuration for rounding a <code>Timestamp</code>…\nCreates a new <code>Zoned</code> value from a specific instant in a …\nCreate a new default configuration for computing the span …\nCreate a new default configuration for rounding a <code>Zoned</code>.\nReturns the current system time as a timestamp.\nReturns the current system time in this system’s time …\nReturns the “nth” weekday from this zoned datetime, …\nReturns the “nth” weekday from the beginning or end of …\nReturns the time zone offset of this zoned datetime.\nSet the offset to use in the new zoned datetime.\nSet the conflict resolution strategy for when an offset is …\nSet the relative datetime to use when rounding a span.\nReturns a new signed duration that is rounded according to …\nReturns a new span that is balanced and rounded.\nRounds this timestamp according to the <code>TimestampRound</code> …\nRounds this zoned datetime according to the <code>ZonedRound</code> …\nAdd two signed durations together. If overflow occurs, …\nThis routine is identical to <code>Timestamp::checked_add</code>, …\nThis routine is identical to <code>Zoned::checked_add</code>, except the\nMultiply this signed duration by an integer. If the …\nAdd two signed durations together. If overflow occurs, …\nThis routine is identical to <code>Timestamp::saturating_add</code> …\nThis routine is identical to <code>Zoned::saturating_add</code> with …\nEquivalent to <code>seconds()</code>, but reads better for singular …\nReturns the “second” component of this zoned datetime.\nSet the second field on a <code>Zoned</code>.\nCreate a new span from this integer in units of seconds.\nSet the number of seconds on this span. The value may be …\nReturn an iterator of periodic timestamps determined by …\nReturns a number that represents the sign of this duration.\nReturns the “sign number” or “signum” of this span.\nReturns the sign of this timestamp.\nThis routine is identical to <code>Timestamp::until</code>, but the …\nThis routine is identical to <code>Zoned::until</code>, but the order …\nSet the smallest units allowed in the duration returned. …\nSet the smallest units allowed in the span returned. These …\nSet the smallest units allowed in the span returned.\nSet the smallest units allowed in the timestamp returned …\nSet the smallest units allowed in the span returned.\nSet the smallest units allowed in the zoned datetime …\nReturns the beginning of the day, corresponding to <code>00:00:00</code>…\nFormats this timestamp according to the given <code>format</code>.\nFormats this zoned datetime according to the given <code>format</code>.\nParses a timestamp (expressed as broken down time) in <code>input</code>…\nParses a zoned datetime in <code>input</code> matching the given <code>format</code>.\nReturns the fractional part of this duration in whole …\nReturns the fractional second component of this timestamp …\nReturns the fractional part of this duration in whole …\nReturns the fractional second component of this timestamp …\nReturns the fractional part of this duration in whole …\nReturns the fractional second component of this timestamp …\nReturns the fractional nanosecond for this <code>Zoned</code> value.\nSet the subsecond nanosecond field on a <code>Zoned</code>.\nReturns the duration from <code>time1</code> until <code>time2</code> where the …\nReturns the civil time component of this zoned datetime.\nSet the hour, minute, second, millisecond, microsecond and …\nReturns the time zone attached to this <code>Zoned</code> value.\nReturns the precise instant in time referred to by this …\nConverts a <code>Span</code> to a <code>SignedDuration</code> relative to the date …\nCreates a <code>Zoned</code> value by attaching the given time zone to …\nReturns the zoned datetime with a date immediately …\nReturns a floating point number representing the total …\nSet the number of days on this span. The value may be …\nReturns a signed duration corresponding to the number of …\nReturns a signed duration corresponding to the number of …\nSet the number of hours on this span. The value may be …\nSet the number of microseconds on this span. The value may …\nSet the number of milliseconds on this span. The value may …\nSet the number of minutes on this span. The value may be …\nSet the number of months on this span. The value may be …\nSet the number of nanoseconds on this span. The value may …\nSet the number of seconds on this span. The value may be …\nSet the number of weeks on this span. The value may be …\nSet the number of years on this span. The value may be …\nRoutines for interacting with time zones and the zoneinfo …\nReturns the absolute value of this signed duration as a …\nReturns a span representing the elapsed time from this …\nReturns a span representing the elapsed time from this …\nEquivalent to <code>weeks()</code>, but reads better for singular units.\nReturns the weekday corresponding to this zoned datetime.\nCreate a new span from this integer in units of weeks.\nSet the number of weeks on this span. The value may be …\nCreate a builder for constructing a new <code>DateTime</code> from the …\nReturn a new zoned datetime with precisely the same …\nEquivalent to <code>years()</code>, but reads better for singular units.\nReturns the year for this zoned datetime.\nSet the year field on a <code>Zoned</code>.\nCreate a new span from this integer in units of years.\nSet the number of years on this span. The value may be …\nReturns the zoned datetime with a date immediately …\nCHANGELOG\nComparison with other Rust datetime crates\nThe API design rationale for Jiff\nPlatform support\nThe “before common era” era.\nThe “common era” era.\nA representation of a civil date in the Gregorian calendar.\nOptions for <code>Date::checked_add</code> and <code>Date::checked_sub</code>.\nOptions for <code>Date::since</code> and <code>Date::until</code>.\nAn iterator over periodic dates, created by <code>Date::series</code>.\nA representation of a civil datetime in the Gregorian …\nOptions for <code>DateTime::checked_add</code> and <code>DateTime::checked_sub</code>…\nOptions for <code>DateTime::since</code> and <code>DateTime::until</code>.\nOptions for <code>DateTime::round</code>.\nAn iterator over periodic datetimes, created by …\nA builder for setting the fields on a <code>DateTime</code>.\nA builder for setting the fields on a <code>Date</code>.\nThe era corresponding to a particular year.\nA type representing an ISO 8601 week date.\nThe maximum representable Gregorian date.\nThe maximum representable Gregorian datetime.\nThe minimum representable ISO week date.\nThe maximum representable time value.\nThe minimum representable Gregorian date.\nThe minimum representable Gregorian datetime.\nThe maximum representable ISO week date.\nThe minimum representable time value.\nA representation of civil “wall clock” time.\nOptions for <code>Time::checked_add</code> and <code>Time::checked_sub</code>.\nOptions for <code>Time::since</code> and <code>Time::until</code>.\nOptions for <code>Time::round</code>.\nAn iterator over periodic times, created by <code>Time::series</code>.\nA builder for setting the fields on a <code>Time</code>.\nA representation for the day of the week.\nAn unending iterator of the days of the week.\nAn unending iterator of the days of the week in reverse.\nThe first day of the zeroth year.\nThe first day of the zeroth year.\nThe first day of the zeroth year.\nA convenience function for constructing a <code>DateTime</code> from …\nCreate a new <code>Date</code> from the fields set on this …\nCreate a new <code>DateTime</code> from the fields set on this …\nCreate a new <code>Time</code> from the fields set on this …\nAdd the given span of time to this date. If the sum would …\nAdd the given span of time to this datetime. If the sum …\nAdd the given span to this time and return an error if the …\nThis routine is identical to <code>Date::checked_add</code> with the …\nThis routine is identical to <code>DateTime::checked_add</code> with the\nThis routine is identical to <code>Time::checked_add</code> with the …\nCreates a new <code>Date</code> value in a <code>const</code> context.\nCreates a new <code>DateTime</code> value in a <code>const</code> context.\nCreates a new <code>Time</code> value in a <code>const</code> context.\nStarting with this weekday, this returns an unending …\nStarting with this weekday, this returns an unending …\nCreates a new <code>Date</code> value in a <code>const</code> context.\nReturns the date component of this datetime.\nSet the year, month and day fields via the <code>Date</code> given.\nConverts this ISO week date to a Gregorian <code>Date</code>.\nCreates a new <code>DateTime</code> value in a <code>const</code> context.\nReturns the day for this date.\nSet the day field on a <code>Date</code>.\nReturns the day for this datetime.\nSet the day field on a <code>DateTime</code>.\nReturns the ordinal day of the year that this date resides …\nSet the day field on a <code>Date</code> via the ordinal number of a …\nReturns the ordinal day of the year that this datetime …\nSet the day field on a <code>DateTime</code> via the ordinal number of …\nReturns the ordinal day of the year that this date resides …\nSet the day field on a <code>Date</code> via the ordinal number of a …\nReturns the ordinal day of the year that this datetime …\nSet the day field on a <code>DateTime</code> via the ordinal number of …\nReturns the total number of days in the the month in which …\nReturns the total number of days in the the month in which …\nReturns the total number of days in the the year in which …")