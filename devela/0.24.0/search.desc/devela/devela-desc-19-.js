searchState.loadedDescShard("devela", 19, "Store data from a register into memory according to a mask.\nStore data from a register into memory according to a mask.\nStores the value to the reference given in reverse order.\nStores the value to the reference given.\nStores the low lane value to all lanes of the reference …\nStores the low lane value to all lanes of the reference …\nStore data from a register into memory.\nStore data from a register into memory.\nStore data from a register into memory.\nStores the value to the reference given.\nStores the value to the reference given.\nStores the value to the reference given.\nStore data from a register into memory.\nStore data from a register into memory.\nStore data from a register into memory.\nSubtract horizontal pairs of <code>i16</code> values, pack the outputs …\nHorizontal <code>a - b</code> with lanes as <code>i16</code>.\nSubtract horizontal pairs of <code>i32</code> values, pack the outputs …\nHorizontal <code>a - b</code> with lanes as <code>i32</code>.\nSubtract each lane horizontally, pack the outputs as <code>a</code> …\nSubtract each lane horizontally, pack the outputs as <code>a</code> …\nSubtract adjacent <code>f32</code> lanes.\nSubtract adjacent <code>f64</code> lanes.\nSubtract horizontal pairs of <code>i16</code> values, saturating, pack …\nHorizontal saturating <code>a - b</code> with lanes as <code>i16</code>.\nLanewise <code>a - b</code> with lanes as <code>i16</code>.\nLanewise <code>a - b</code> with lanes as <code>i16</code>.\nLanewise <code>a - b</code> with lanes as <code>i32</code>.\nLanewise <code>a - b</code> with lanes as <code>i32</code>.\nLanewise <code>a - b</code> with lanes as <code>i64</code>.\nLanewise <code>a - b</code> with lanes as <code>i64</code>.\nLanewise <code>a - b</code> with lanes as <code>i8</code>.\nLanewise <code>a - b</code> with lanes as <code>i8</code>.\nLanewise <code>a - b</code>.\nLow lane <code>a - b</code>, other lanes unchanged.\nLanewise <code>a - b</code>.\nLowest lane <code>a - b</code>, high lane unchanged.\nLanewise <code>a - b</code> with <code>f32</code> lanes.\nLanewise <code>a - b</code> with <code>f64</code> lanes.\nLanewise saturating <code>a - b</code> with lanes as <code>i16</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>i16</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>i8</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>i8</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>u16</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>u16</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>u8</code>.\nLanewise saturating <code>a - b</code> with lanes as <code>u8</code>.\nCompute “sum of <code>u8</code> absolute differences”.\nCompute “sum of <code>u8</code> absolute differences”.\nTests if all bits are 1.\nReturns if all masked bits are 0, <code>(a &amp; mask) as u128 == 0</code>\nReturns if, among the masked bits, there’s both 0s and 1s\nCompute the bitwise of sign bit NOT of <code>a</code> and then AND with …\nCompute the bitwise of sign bit NOT of <code>a</code> and then AND with …\nCompute the bitwise NOT of <code>a</code> and then AND with <code>b</code>, returns …\nCompute the bitwise of sign bit NOT of <code>a</code> and then AND with …\nCompute the bitwise of sign bit NOT of <code>a</code> and then AND with …\nCompute the bitwise NOT of <code>a</code> and then AND with <code>b</code>, returns …\nComputes the bitwise AND of 256 bits in <code>a</code> and <code>b</code>, returns 1 …\nComputes the bitwise of sign bitAND of 256 bits in <code>a</code> and <code>b</code>…\nComputes the bitwise AND of 256 bits in <code>a</code> and <code>b</code>, returns 1 …\nComputes the bitwise AND of 256 bits in <code>a</code> and <code>b</code>, returns 1 …\nComputes the bitwise of sign bit AND of 256 bits in <code>a</code> and <code>b</code>…\nComputes the bitwise of sign bit AND of 256 bits in <code>a</code> and <code>b</code>…\nTransmutes the <code>m512</code> to an array.\nTransmutes the <code>m512d</code> to an array.\nTransmutes the <code>m512i</code> to an array.\nConverts into the bit patterns of these floats (<code>[u32;16]</code>).\nConverts into the bit patterns of these doubles (<code>[u64;8]</code>).\nConverts into the bit patterns of these doubles (<code>[u64;8]</code>).\nCounts the number of trailing zero bits in a <code>u32</code>.\nCounts the number of trailing zero bits in a <code>u64</code>.\nTranspose four <code>m128</code> as if they were a 4x4 matrix.\nTruncate the <code>f32</code> lanes to <code>i32</code> lanes.\nTruncate the <code>f64</code> lanes to the lower <code>i32</code> lanes (upper <code>i32</code> …\nTruncate the lower lane into an <code>i32</code>.\nTruncate the lower lane into an <code>i64</code>.\nUnpack and interleave the high lanes.\nUnpack and interleave the high lanes.\nUnpack and interleave high <code>i16</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i16</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i32</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i32</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i64</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i64</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i8</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high <code>i8</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave high lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave the high lanes.\nUnpack and interleave the high lanes.\nUnpack and interleave low <code>i16</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i16</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i32</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i32</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i64</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i64</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i8</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low <code>i8</code> lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low lanes of <code>a</code> and <code>b</code>.\nUnpack and interleave low lanes of <code>a</code> and <code>b</code>.\nZero extend an <code>m128</code> to <code>m256</code>\nZero extend an <code>m128d</code> to <code>m256d</code>\nZero extend an <code>m128i</code> to <code>m256i</code>\nAll lanes zero.\nBoth lanes zero.\nAll lanes zero.\nA zeroed <code>m256</code>\nA zeroed <code>m256d</code>\nA zeroed <code>m256i</code>\nA type that encapsulates SDL event-pumping functions.\nA given integer was so big that its representation as a C …\nThe SDL context type. Initialize with <code>sdl2::init()</code>.\nCreate an event watcher which is called every time an …\nAdd a new controller input mapping from a mapping string.\nConstructs a new timer using the boxed closure <code>callback</code>.\nAudio Functions\nInitializes the audio subsystem.\nGet the closest match to the requested display mode.\nGet information about the current display mode.\nGet the name of the currently initialized video driver.\nSleeps the current thread for the specified amount of …\nGet information about the desktop’s display mode.\nGet the GUID for the joystick at index <code>joystick_index</code>\nDisable an event type. Returns if the event type was …\nPrevent the screen from being blanked by a screen saver.\nGet the desktop area represented by a display.\nReturn a triplet <code>(ddpi, hdpi, vdpi)</code> containing the …\nGet information about a specific display mode.\nGet the name of the display at the index <code>display_name</code>.\nReturn orientation of a display or Unknown if orientation …\nGet the usable desktop area represented by a display.\nEnable an event type. Returns if the event type was …\nAllow the screen to be blanked by a screen saver.\nEvent Handling\nInitializes the event subsystem.\nObtains the SDL event pump.\nCreate an event sender that can be sent to other threads.\nReturn <code>true</code> if controller events are processed.\nReturn <code>true</code> if joystick events are processed.\nRemoves all events in the event queue that match the …\nRemoves all events in the event queue that match the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes the game controller subsystem.\nGet platform name\nA binding for the library <code>SDL2_gfx</code>\nObtains access to the OpenGL window attributes.\nCheck if an OpenGL extension is supported for the current …\nGet the currently active OpenGL window.\nGets the pointer to the named OpenGL function.\nLoads the OpenGL library using a platform-dependent OpenGL …\nLoads the default OpenGL library.\nReleases the thread’s current OpenGL context, i.e. sets …\nSet the swap interval for the current OpenGL context.\nUnloads the current OpenGL library.\nHaptic Functions\nInitializes the haptic subsystem.\nA binding for the library <code>SDL2_image</code>\nInitializes the SDL library. This must be called before …\nReturn the instance ID of the controller with player index …\nReturn the instance ID of the joystick with player index …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nQuery if an event type is enabled.\nReturn true if the joystick at index <code>joystick_index</code> is a …\nCheck whether the screensaver is currently enabled.\nInitializes the joystick subsystem.\nLoad controller input mappings from a file.\nLoad controller input mappings from a <code>Read</code> object.\nLoad controller input mappings from an SDL <code>RWops</code> object.\nSystem locale information.\nA binding for the library <code>SDL2_mixer</code>\nReturn the name of the controller at index <code>joystick_index</code>.\nReturn the name of the joystick at index <code>joystick_index</code>.\nGet the number of available display modes.\nRetrieve the total number of attached joysticks <em>and</em> …\nRetrieve the total number of attached joysticks <em>and</em> …\nGet the number of available video displays.\nAttempt to open the controller at index <code>joystick_index</code> and …\nAttempt to open the joystick at index <code>joystick_index</code> and …\nOpens a new audio device for capture (given the desired …\nAttempt to open the joystick at index <code>joystick_index</code> and …\nOpens a new audio device given the desired parameters and …\nOpens a new audio device which uses queueing rather than …\nReads the events at the front of the event queue, until …\nReturn the player index of the joystick with index …\nPolls for currently pending events.\nReturns a polling iterator that calls <code>poll_event()</code>. The …\nPumps the event loop, gathering events from the input …\nPush a custom event\nPushes an event to the event queue.\nRectangles and points.\nRegister a custom event\nRegister a custom SDL event.\nRegisters custom SDL events.\n2D accelerated rendering\nObtain an SDL context.\nObtain an SDL context.\nObtain an SDL context.\nObtain an SDL context.\nObtain an SDL context.\nObtain an SDL context.\nObtain an SDL context.\nObtain an SDL context.\nInitializes the sensor subsystem.\nIf state is <code>true</code> controller events are processed, otherwise\nIf state is <code>true</code> joystick events are processed, otherwise …\nGets the number of milliseconds elapsed since the timer …\nGets the number of milliseconds elapsed since the timer …\nInitializes the timer subsystem.\nA binding for the library <code>SDL2_ttf</code>\nForce controller update when not using the event loop\nForce joystick update when not using the event loop\nOpening URLs in default system handlers\nQuerying SDL Version\nInitializes the video subsystem.\nGets the pointer to the <code>vkGetInstanceProcAddr</code> Vulkan …\nLoads the Vulkan library using a platform-dependent Vulkan …\nLoads the default Vulkan library.\nUnloads the current Vulkan library.\nWaits indefinitely for the next available event.\nWaits until the specified timeout (in milliseconds) for …\nReturns a waiting iterator that calls <code>wait_event()</code>.\nReturns a waiting iterator that calls <code>wait_event_timeout()</code>.\nInitializes a new <code>WindowBuilder</code>; a convenience method that …\nWraps <code>SDL_AudioDeviceID</code> and owns the callback data used by …\nSimilar to <code>std::sync::MutexGuard</code>, but for use with …\nA phantom type for retrieving the <code>SDL_AudioFormat</code> of a …\nWraps <code>SDL_AudioDeviceID</code> and owns the callback data used by …\n32-bit floating point samples, little-endian\n32-bit floating point samples, big-endian\nSigned 16-bit samples, little-endian\nSigned 16-bit samples, big-endian\nSigned 32-bit samples, little-endian\nSigned 32-bit samples, big-endian\nSigned 8-bit samples\nThe appropriately typed silence value for the audio format …\nUnsigned 16-bit samples, little-endian\nUnsigned 16-bit samples, big-endian\nUnsigned 8-bit samples\nGets the buffer capacity that can contain both the …\nNumber of separate audio channels. Set to None for the …\nClears all data from the current audio queue.\nCloses the audio device and saves the callback data from …\nConvert audio data to a desired audio format.\nGets an iterator of all audio drivers compiled into the …\n32-bit floating point samples, native endian\nDSP frequency (samples per second). Set to None for the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if any conversion is needed. i.e. if the buffer …\nLoads a WAVE from the file path.\nLoads a WAVE from the data source.\nLocks the audio device using <code>SDL_LockAudioDevice</code>.\nOpens a new audio device for capture (given the desired …\nOpens a new audio device for playback (given the desired …\nOpens a new audio device given the desired parameters and …\nPauses playback of the audio device.\nPauses playback of the audio device.\nAdds data to the audio queue.\nAdds data to the audio queue.\nStarts playback of the audio device.\nStarts playback of the audio device.\nSigned 16-bit samples, native endian\nSigned 32-bit samples, native endian\nAudio buffer size in samples (power of 2). Set to None for …\nThe silence value calculated by SDL2. Note that it’s …\nUnsigned 16-bit samples, native endian\nClipboard utility functions. Access with …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWrapper around the <code>SDL_GameController</code> object\nPossible return values for <code>add_mapping</code>\nReturn true if the controller has been opened and currently\nGet the position of the given <code>axis</code>\nReturns <code>true</code> if <code>button</code> is pressed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the Axis from a string description in the same …\nReturn the Button from a string description in the same …\nGet player index for game controller or <code>None</code> if it’s not …\nQuery whether a game controller has an LED.\nQuery whether a game controller has rumble support.\nQuery whether a game controller has rumble support on …\nReturn the joystick instance id of this controller\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn a String describing the controller’s button and …\nReturn the name of the controller or an empty string if no …\nReturn the USB product ID of an opened controller, if …\nSend a controller specific effect packet.\nUpdate a game controller’s LED color.\nSet player index for game controller or <code>None</code> to clear the …\nSet the rumble motors to their specified intensities, if …\nStart a rumble effect in the game controller’s triggers.\nReturn a string for a given axis in the same format using …\nReturn a string for a given button in the same format …\nReturn the USB vendor ID of an opened controller, if …\nAn enum of display events.\nDifferent event types.\nAn iterator that calls <code>EventPump::poll_event()</code>.\nA sendible type that can push events to the event queue.\nTypes of events that can be delivered.\nAn iterator that calls <code>EventPump::wait_event()</code>.\nAn iterator that calls <code>EventPump::wait_event_timeout()</code>.\nAn handler for the event watch callback. One must bind …\nA callback trait for [<code>EventSubsystem::add_event_watch</code>].\nAn enum of window events.\nActivates the event watch. Does nothing if it is already …\nReturns if the event watch is activated.\nDeactivates the event watch. Does nothing if it is already …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the <code>timestamp</code> field of the event.\nReturns the <code>window_id</code> field of the event if it’s present …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this is an audio event.\nReturns <code>true</code> if this is a controller event.\nReturns <code>true</code> if this is a dollar event.\nReturns <code>true</code> if this is a drop event.\nReturns <code>true</code> if this is a finger event.\nReturns <code>true</code> if this is a joy event.\nReturns <code>true</code> if this is a keyboard event.\nReturns <code>true</code> if this is a locale event.\nReturns <code>true</code> if this is a mouse event.\nReturns <code>true</code> if this is a render event.\nReturns <code>true</code> if they are the same “kind” of events.\nReturns <code>true</code> if this is a text event.\nReturns <code>true</code> if this mouse event is coming from touch.\nReturns <code>true</code> if this is an unknown event.\nReturns <code>true</code> if this is a user event.\nReturns <code>true</code> if this is a window event.\nPush a custom event\nPushes an event to the event queue.\nSet the activation state of the event watch.\nThe index of the finger on the touchpad\nThe index of the finger on the touchpad\nThe index of the finger on the touchpad\nThe X position of the mouse from the window’s origin\nThe X position of the mouse from the window’s origin\nHow much did we scroll in X, with floating precision …\nHow much did we scroll in Y, with floating precision …\nNormalized in the range 0…1\nNormalized in the range 0…1\nNormalized in the range 0…1\nThe index of the touchpad\nThe index of the touchpad\nThe index of the touchpad\nThe joystick’s <code>id</code>\nThe joystick’s <code>id</code>\nThe joystick’s <code>id</code>\nThe joystick’s <code>id</code>\nThe joystick’s <code>id</code>\nThe newly added joystick’s <code>joystick_index</code>\nThe joystick’s <code>id</code>\nThe controller’s joystick <code>id</code>\nThe controller’s joystick <code>id</code>\nThe controller’s joystick <code>id</code>\nThe newly added controller’s <code>joystick_index</code>\nThe controller’s joystick <code>id</code>\nThe controller’s joystick <code>id</code>\nThe joystick instance id\nThe joystick instance id\nThe joystick instance id\nHow much did we scroll in X, with integer precision\nNormalized in the range 0…1 with 0 being on the left\nNormalized in the range 0…1 with 0 being on the left\nNormalized in the range 0…1 with 0 being on the left\nHow much did we scroll in Y, with integer precision\nNormalized in the range 0…1 with 0 being at the top\nNormalized in the range 0…1 with 0 being at the top\nNormalized in the range 0…1 with 0 being at the top\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn the preferred directory for the application to …\nFramerate control\nMMX image filters\nGraphic Primitives\nSurface Rotozoomer\nStructure holding the state and timing information of the …\nDelay execution to maintain a constant framerate and …\nReturns the argument unchanged.\nReturn the current framecount.\nReturn the current target framerate in Hz.\nCalls <code>U::from(self)</code>.\nCreate the framerate manager.\nSet the framerate in Hz.\nFilter using <code>AbsDiff</code>: D = | S1 - S2 |.\nFilter using Add: D = saturation255(S1 + S2).\nFilter using <code>AddByte</code>: D = saturation255(S + C).\nFilter using <code>AddByteToHalf</code>: D = saturation255(S/2 + C).\nFilter using <code>AddUint</code>: D = saturation255((S[i] + Cs[i % 4]…\nFilter using <code>BinarizeUsingThreshold</code>: D = (S &gt;= T) ? 255:0.\nFilter using <code>BitAnd</code>: D = S1 &amp; S2.\nFilter using <code>BitNegation</code>: D = !S.\nFilter using <code>BitOr</code>: D = S1 | S2.\nFilter using <code>ClipToRange</code>: D = (S &gt;= Tmin) &amp; (S &lt;= Tmax) …\nFilter using Div: D = S1 / S2.\nFilter using Mean: D = S1/2 + S2/2.\nMMX detection routine (with override flag).\nDisable MMX check for filter functions and and force to …\nEnable MMX check for filter functions and use MMX code if …\nFilter using Mult: D = saturation255(S1 * S2).\nFilter using <code>MultByByte</code>: D = saturation255(S * C).\nFilter using <code>MultDivby2</code>: D = saturation255(S1/2 * S2).\nFilter using <code>MultDivby4</code>: D = saturation255(S1/2 * S2/2).\nFilter using <code>MultNor</code>: D = S1 * S2.\nFilter using <code>NormalizeLinear</code>: D = saturation255((Nmax - …\nFilter <code>ShiftLeft</code>: D = saturation255(S &lt;&lt; N).\nFilter using <code>ShiftLeftByte</code>: D = (S &lt;&lt; N).\nFilter using <code>ShiftLeftUint</code>: D = ((uint)S &lt;&lt; N).\nFilter using <code>ShiftRight</code>: D = saturation0(S &gt;&gt; N).\nFilter using <code>ShiftRightAndMultByByte</code>: D = saturation255((S …\nFilter using <code>ShiftRightUint</code>: D = saturation0((uint)S[i] &gt;&gt; …\nFilter using Sub: D = saturation0(S1 - S2).\nFilter using <code>SubByte</code>: D = saturation0(S - C).\nFilter using <code>SubUint</code>: D = saturation0(S[i] - Cs[i % 4]), …\nFor drawing with rust-sdl2 Renderer\ngeneric Color type\nSets or resets the current global font data.\nSets current global font character rotation steps.\nArchimedes’ constant (π)\n<code>RotozoomSurface</code> for work with rust-sdl2 Surface type\nRotates a 8/16/24/32 bit surface in increments of 90 …\nRotates and zooms a surface and optional anti-aliasing.\nRotates and zooms a surface with different horizontal and …\nShrink a surface by an integer ratio using averaging.\nZoom a surface by independent horizontal and vertical …\nWrapper around the <code>SDL_Haptic</code> object\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRun a simple rumble effect on the haptic device.\nStop the simple rumble on the haptic device.\nReturns the argument unchanged.\nA hint that specifies whether a fullscreen Window will be …\nCalls <code>U::from(self)</code>.\nA hint that overrides the user’s locale settings.\nA hint that specifies whether a fullscreen Window will be …\nA hint that specifies whether a fullscreen Window will be …\nInitFlags are passed to init() to control which subsystem …\nStatic method extensions for creating Surfaces\nMethod extensions for creating Textures from a …\nMethod extensions to Surface for saving to disk\nContext manager for <code>sdl2_image</code> to manage quitting. Can’t …\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nReturns the version of the dynamically linked <code>SDL_image</code> …\nInitializes <code>SDL2_image</code> with <code>InitFlags</code>. Returns error if …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nload as a surface. except TGA\nload as a surface. This can load all supported image …\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nWrapper around a <code>SDL_JoystickGUID</code>, a globally unique …\nThis is represented in SDL2 as a bitfield but obviously …\nWrapper around the <code>SDL_Joystick</code> object\nReturn true if the joystick has been opened and currently …\nGets the position of the given <code>axis</code>.\nReturn a pair <code>(dx, dy)</code> containing the difference in axis …\nReturn <code>Ok(true)</code> if <code>button</code> is pressed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a GUID from a string representation.\nGet player index for joystick or <code>None</code> if it’s not …\nRetrieve the joystick’s GUID\nQuery whether a joystick has an LED.\nQuery whether a joystick has rumble support.\nQuery whether a joystick has rumble support on triggers.\nReturn the position of <code>hat</code> for this joystick\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if GUID is full 0s\nReturn the name of the joystick or an empty string if no …\nRetrieve the number of axes for this joystick\nRetrieve the number of balls for this joystick\nRetrieve the number of buttons for this joystick\nRetrieve the number of balls for this joystick\nRetrieve the battery level of this joystick\nReturn a copy of the internal SDL_JoystickGUID\nSend a joystick specific effect packet.\nUpdate a joystick’s LED color.\nSet player index for joystick or <code>None</code> to clear the player …\nSet the rumble motors to their specified intensities, if …\nStart a rumble effect in the joystick’s triggers.\nReturn a String representation of GUID\nKeyboard utility functions. Access with <code>Sdl::keyboard()</code>.\nText input utility functions. Access with …\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nGets the id of the window which currently has keyboard …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nGets the scancode from a virtual key. Returns None if …\nGets the virtual key from a scancode. Returns None if …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns true if the scancode is pressed.\nReturns the complement of this set of flags.\nReturns an iterator of pressed scancodes.\nRemoves the specified flags in-place.\nReturns an iterator all scancodes with a boolean …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nmaximum number of services provided on the same listening …\nIP6 Auth Header\nIP Payload Comp. Protocol\nDCCP\nIP6 destination option\nexterior gateway protocol\nencapsulation header\nIP6 Encap Sec. Payload\nEthernet-within-IPv6 encapsulation.\nIP6 fragmentation header\nGeneral Routing Encap.\nHop-by-hop option header\nxns idp\ngroup mgmt protocol\nfor compatibility\nMultipath TCP\nIP6 no next header\nProtocol indep. multicast\npup\nraw IP packet\nIP6 routing header\nresource reservation\nSCTP\ntp-4 w/ class negotiation\nPlug has ts that needs updating.\nDumped core.\nGetting shut down.\nForked but didn’t exec.\nI am an IDLE thread.\nTask is an IO worker.\nI am <code>kswapd</code>.\nI am a kernel thread.\nThrottle writes only against the bdi I write to, I am …\nEarly kill for mce process policy.\nProcess policy on mce errors.\nAllocating memory to free memory.\nAll allocations inherit <code>GFP_NOFS</code>.\nAll allocations inherit <code>GFP_NOIO</code>.\nAllocations constrained to zones which allow long term …\nThis thread should not be frozen.\nUserland is not allowed to meddle with <code>cpus_mask</code>.\n<code>set_user()</code> noticed that <code>RLIMIT_NPROC</code> was exceeded.\nCoredumps should ignore this task.\nRandomize virtual address space.\nKilled by a signal.\nUsed super-user privileges.\nThis thread called <code>freeze_processes()</code> and should not be …\nIf unset the fpu must be initialized before use.\nKernel thread cloned from userspace thread.\nI’m a virtual CPU.\nI’m a workqueue worker.\nBuild an ioctl number for an argumentless ioctl.\nBuild an ioctl number for an read-only ioctl.\nBuild an ioctl number for an write-only ioctl.\nBuild an ioctl number for a read-write ioctl.\nWARNING: The <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of this\nEquivalent to C’s <code>void</code> type when used as a pointer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGNU version of <code>basename(3)</code>, defined in <code>string.h</code>.\nSize of buffer\nStructure used in SIOCGIFCONF request.  Used to retrieve …\ninterface name, e.g. “en0”\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPOSIX version of <code>basename(3)</code>, defined in <code>libgen.h</code>.\nThe 64-bit libc on Solaris and illumos only has readdir_r. …\nThis contains the bitfields <code>tcpi_snd_wscale</code> and …\nA locale defines a user’s language and (optionally) …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the user’s preferred locales.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStandard log function which takes as priority INFO and as …\nLog function which takes as priority CRITICAL and category …\nLog function which takes as priority DEBUG and category …\nLog function which takes as priority ERROR and category …\nLog function which takes as priority INFO and category …\nLog function which takes as priority VERBOSE and category …\nLog function which takes as priority WARN and category …\nLog function where Category and Priority can be specified\n<code>button_id</code> is the integer that will be returned by …\nSecond argument of the tuple (i32) corresponds to the …\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nShow a customizable message box.\nShow a simple message box, meant to be informative only.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nWhich audio format changes are allowed when opening a …\nSound effect channel.\nThe internal format for an audio chunk.\nDefault channels: Stereo.\nThe suggested default is signed 16bit samples in host byte …\nGood default sample rate in Hz (samples per second) for PC …\nFader effect type enumerations\nSound effect channel grouping.\nLoader trait for <code>RWops</code>\nMaximum value for any volume setting.\nThis is an opaque data type used for Music data.\nMusic type enumerations\nContext manager for <code>sdl2_mixer</code> to manage init and quit\nAdd which channel to group tag, or reset it’s group to …\nAdd channels starting at from up through to to group tag, …\nReturns the set containing all flags.\nReturns the set containing all flags.\nRepresent for all channels (-1)\nSet the number of channels being mixed.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nShutdown and cleanup the mixer API.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nCount the number of channels in group\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nHalt channel playback, after ticks milliseconds.\nPlay chunk on channel, or if channel is -1, pick the first …\nFade in over ms milliseconds of time, the loaded music, …\nFade in over ms milliseconds of time, from position.\nGradually fade out which channel over ms milliseconds …\nGradually fade out channels in group over some …\nGradually fade out the music over ms milliseconds starting …\nFind the first available (not playing) channel in group\nFind the newest, most recently started, actively playing …\nFind the oldest actively playing channel in group\nShows the original regular expression.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nLoad file for use as a sample.\nLoad music file to use.\nLoad chunk from a buffer containing raw audio data in the …\nLoad music from a static byte buffer.\nGet the most recent sample chunk pointer played on channel.\nGet the name of the indexed sample chunk decoder.\nGet the number of sample chunk decoders available from the …\nif channel is fading in, out, or not\nIf music is fading, or not.\nReturns the version of the dynamically linked <code>SDL_mixer</code> …\nGet the name of the indexed music decoder.\nGet the number of music decoders available.\nReturns how many channels are currently paused.\nReturns how many channels are currently playing.\nThe file format encoding of the music.\ncurrent volume for the chunk.\nReturns the channels volume on scale of 0 to 128.\nReturns current volume\nHalt channel playback\nHalt playback on all channels in group.\nHalt playback of music.\nSets up a function to be called when music playback is …\nLoads dynamic libraries and prepares them for use.  Flags …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nif channel is paused, or not.\nIf music is paused, or not.\nif channel is playing, or not.\nIf music is actively playing, or not.\nLoad src for use as a sample.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nOpens the default audio device for playback. If you need …\nOpen a specific audio device for playback.\nPause channel, or all playing channels if -1 is passed in.\nPause the music playback.\nPlay chunk on channel, or if channel is -1, pick the first …\nPlay the loaded music loop times through from start to …\nThis is the MIX_CHANNEL_POST (-2)\nGet the actual audio format in use by the opened audio …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nReserve num channels from being used when playing samples …\nUnpause channel, or all playing and paused channels if -1 …\nUnpause the music.\nRewind the music to the start.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nWhen channel playback is halted, then the specified …\nSetup a command line music player to use to play music.\nThis effect simulates a simple attenuation of volume due …\nSets a panning effect, where left and right is the volume …\nSet the position of the currently playing music.\nThis effect emulates a simple 3D audio effect. angle …\nSimple reverse stereo, swaps left and right channel sound. …\nSet chunk-&gt;volume to volume.\nSet the volume for any allocated channel.\nSet the volume on a scale of 0 to 128. Values greater than …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nA previously set up function would no longer be called …\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nThis removes all effects registered to channel.\nUnhooks the specified function set before, so no function …\nUnregisters distance effect.\nUnregisters panning effect.\nUnregisters position effect.\nMouse utility functions. Access with <code>Sdl::mouse()</code>.\nGets the id of the window which currently has mouse focus.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the mouse button is pressed.\nReturns true if the mouse button is pressed.\nReturns true if the left mouse button is pressed.\nReturns true if the left mouse button is pressed.\nTests if the middle mouse button was pressed.\nTests if the middle mouse button was pressed.\nReturns an iterator all mouse buttons with a boolean …\nReturns an iterator all mouse buttons with a boolean …\nReturns an iterator of pressed mouse buttons.\nReturns an iterator of pressed mouse buttons.\nTests if the right mouse button was pressed.\nTests if the right mouse button was pressed.\nReturns the x coordinate of the state\nReturns the x coordinate of the state\nTests if the X1 mouse button was pressed.\nTests if the X1 mouse button was pressed.\nTests if the X2 mouse button was pressed.\nTests if the X2 mouse button was pressed.\nReturns the y coordinate of the state\nReturns the y coordinate of the state\nThe alpha mask\nThe blue mask\nBits per pixel; usually 15, 16, or 32\nCalculates the total byte size of an image buffer, given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe green mask\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a palette structure with the specified number of …\nThe red mask\nCreates a palette from the provided colors\nImmutable point type with float precision, consisting of x …\nA (non-empty) rectangle with float precision.\nImmutable point type, consisting of x and y.\nA (non-empty) rectangle.\nReturns the y-position of the bottom side of this …\nReturns the y-position of the bottom side of this …\nReturns the bottom-left corner of this rectangle.\nReturns the bottom-left corner of this rectangle.\nReturns the bottom-right corner of this rectangle.\nReturns the bottom-right corner of this rectangle.\nShifts this rectangle to the bottom by <code>offset</code>.\nShifts this rectangle to the bottom by <code>offset</code>.\nReturns the center position of this rectangle.\nReturns the center position of this rectangle.\nCenters the rectangle on the given point (in place).\nCenters the rectangle on the given point (in place).\nCenters the rectangle on the given point.\nCenters the rectangle on the given point.\nChecks whether this rectangle contains a given point.\nChecks whether this rectangle contains a given point.\nChecks whether this rectangle completely contains another …\nChecks whether this rectangle completely contains another …\nExample\nExample\nExample\nExample\nExample\nExample\nExample\nExample\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new rectangle centered on the given position.\nCreates a new rectangle with float precision centered on …\nCalculate a minimal rectangle enclosing a set of points. …\nCalculate a minimal rectangle enclosing a set of points. …\nDetermines whether two rectangles intersect.\nDetermines whether two rectangles intersect.\nThe height of this rectangle.\nThe height of this rectangle.\nCalculates the intersection of a rectangle and a line …\nCalculates the intersection of a rectangle and a line …\nCalculates the intersection of two rectangles.\nCalculates the intersection of two rectangles.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the x-position of the left side of this rectangle.\nReturns the x-position of the left side of this rectangle.\nShifts this rectangle to the left by <code>offset</code>.\nShifts this rectangle to the left by <code>offset</code>.\nThe maximal integer value that can be used for rectangles.\nThe minimal integer value that can be used for rectangle …\nCreates a new rectangle from the given values with an …\nCreates a new point from the given coordinates.\nCreates a new rectangle with float precision from the …\nCreates a new point from the given coordinates.\nMove this rect and clamp the positions to prevent …\nReturns a new point by shifting this point’s coordinates …\nMove this rect.\nReturns a new point by shifting this point’s coordinates …\nReturns the origin of the rectangle (Top Left)\nReturns the underlying C Rect.\nReturns the underlying C FRect.\nMoves this rect to the given position after clamping the …\nMoves this rect to the given position.\nResizes this rect to the given size after clamping the …\nResizes this rect to the given size after clamping the …\nReturns the x-position of the right side of this rectangle.\nReturns the x-position of the right side of this rectangle.\nShifts this rectangle to the right by <code>offset</code>.\nShifts this rectangle to the right by <code>offset</code>.\nReturns a new point by multiplying this point’s …\nReturns a new point by multiplying this point’s …\nSets the position of the bottom side of this rectangle to …\nSets the position of the bottom side of this rectangle to …\nSets the height of this rectangle to the given value, …\nSets the height of this rectangle to the given value, …\nSets the position of the right side of this rectangle to …\nSets the position of the right side of this rectangle to …\nSets the width of this rectangle to the given value, …\nSets the width of this rectangle to the given value, …\nSets the horizontal position of this rectangle to the …\nSets the horizontal position of this rectangle to the …\nSets the vertical position of this rectangle to the given …\nSets the vertical position of this rectangle to the given …\nReturns the width and height of this rectangle.\nReturns the width and height of this rectangle.\nReturns the y-position of the top side of this rectangle.\nReturns the y-position of the top side of this rectangle.\nReturns the top-left corner of this rectangle.\nReturns the top-left corner of this rectangle.\nReturns the top-right corner of this rectangle.\nReturns the top-right corner of this rectangle.\nShifts this rectangle to the top by <code>offset</code>.\nShifts this rectangle to the top by <code>offset</code>.\nCalculates the union of two rectangles (i.e. the smallest …\nCalculates the union of two rectangles (i.e. the smallest …\nThe width of this rectangle.\nThe width of this rectangle.\nThe horizontal position of this rectangle.\nReturns the x-coordinate of this point.\nThe horizontal position of this rectangle.\nReturns the x-coordinate of this point.\nThe vertical position of this rectangle.\nReturns the y-coordinate of this point.\nThe vertical position of this rectangle.\nReturns the y-coordinate of this point.\nAdditive blending\nanisotropic filtering\nAlpha blending\nBlend mode for <code>Canvas</code>, <code>Texture</code> or <code>Surface</code>.\nManages and owns a target (<code>Surface</code> or <code>Window</code>) and allows …\nThe type that allows you to build Window-based renderers.\nInvalid blending mode (indicates error)\nlinear filtering\nColor modulate\nColor multiply\nnearest pixel sampling. default\nno blending (replace destination with source).\nthe absence of a clipping rect\nRepresents structs which can be the target of a …\nManages what keeps a <code>SDL_Renderer</code> alive\nA structure that contains information on the capabilities …\nContains the description of an error returned by SDL\nVertices are rendered in sequential order.\na non-zero area clipping rect\nAlias for a <code>Canvas</code> that was created out of a <code>Surface</code>\nPossible errors returned by targeting a <code>Canvas</code> to render …\nA texture for a rendering context.\nCreates Textures that cannot outlive the creator\n<code>u16</code> vertex indices.\n<code>u32</code> vertex indices. If any index is larger than <code>i32::MAX</code>, …\n<code>u8</code> vertex indices.\na clipping rect with zero area\nSet the renderer to use hardware acceleration. This flag …\nGets the additional alpha value multiplied into render …\nGets the blend mode used for drawing operations.\nGets the blend mode used for texture copy operations.\nBuilds the renderer.\nClears the current rendering target with the drawing color.\nGets the clip rectangle for the current target.\nGets the additional color value multiplied into render …\nCopies a portion of the texture to the current rendering …\nCopies a portion of the texture to the current rendering …\nCopies a portion of the texture to the current rendering …\nCopies a portion of the texture to the current rendering …\nCreates a texture for a rendering context.\nCreates a texture from an existing surface.\nShorthand for …\nShorthand for …\nShorthand for …\nGets the color used for drawing operations (Rect, Line and …\nDraws a line on the current rendering target. Errors if …\nDraws a series of connected lines on the current rendering …\nDraws a point on the current rendering target. Errors if …\nDraws multiple points on the current rendering target. …\nDraws a rectangle on the current rendering target. Errors …\nDraws some number of rectangles on the current rendering …\nDraws a line on the current rendering target. Errors if …\nDraws a series of connected lines on the current rendering …\nDraws a point on the current rendering target. Errors if …\nDraws multiple points on the current rendering target. …\nDraws a rectangle on the current rendering target. Errors …\nDraws some number of rectangles on the current rendering …\nGets an iterator of all render drivers compiled into the …\nFills a rectangle on the current rendering target with the …\nFills some number of rectangles on the current rendering …\nFills a rectangle on the current rendering target with the …\nFills some number of rectangles on the current rendering …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a 2D software rendering context for a surface.\nA convenience function for …\nBinds an OpenGL/ES/ES2 texture to the current context for …\nUnbinds an OpenGL/ES/ES2 texture from the current context.\nBinds and unbinds an OpenGL/ES/ES2 texture from the …\nSets the index of the rendering driver to initialize. If …\nGets information about the rendering context.\nGets whether integer scales are forced for …\nshrink the clipping rect to the part which contains the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the associated surface of the Canvas and destroys the …\nGets the associated window of the Canvas and destroys the …\nLoads an SDL Texture from a file\nLoads an SDL Texture from a buffer that the format must be …\nGets device independent resolution for rendering.\nInitializes a new <code>CanvasBuilder</code>.\nGets the output size of a rendering context.\nUpdates the screen with any rendering performed since the …\nSynchronize renderer <code>present</code> method calls with the refresh …\nQueries the attributes of the texture.\nGets the raw pointer to the SDL_Renderer\nCreate a texture from its raw <code>SDL_Texture</code>.\nReads pixels from the current rendering target.\nRender triangles, optionally using a texture.\nRender triangles, optionally using a texture.\nDetermine whether a window supports the use of render …\nGets the drawing scale for the current target.\nGets the scale mode for use when rendered.\nSets an additional alpha value multiplied into render copy …\nSets the blend mode used for drawing operations (Fill and …\nSets the blend mode used for drawing operations (Fill and …\nSets the clip rectangle for rendering on the specified …\nSets an additional color value multiplied into render copy …\nSets the color used for drawing operations (Rect, Line and …\nSets whether to force integer scales for …\nSets a device independent resolution for rendering.\nSets the drawing scale for rendering on the current target.\nSets the scale mode for use when rendered.\nSets the drawing area for rendering on the current target.\nSet the renderer to a software fallback. This flag is …\nGets a reference to the associated surface of the Canvas\nGets a mutable reference to the associated surface of the …\nSet the renderer to support rendering to a texture. This …\nReturns a <code>TextureCreator</code> that can create Textures to be …\nReturns a <code>TextureCreator</code> that can create Textures to be …\nUpdates the given texture rectangle with new pixel data.\nUpdates a rectangle within a planar YV12 or IYUV texture …\nGets the drawing area for the current target.\nGets a reference to the associated window of the Canvas\nGets a mutable reference to the associated window of the …\nLocks the texture for <strong>write-only</strong> pixel access. The texture …\nSame as <code>with_texture_canvas</code>, but allows to change multiple …\nTemporarily sets the target of <code>Canvas</code> to a <code>Texture</code>. This …\nA structure that provides an abstract interface to stream …\nExecutes the given command directly.\nReturns the argument unchanged.\nPrepares a read-only memory buffer for use with <code>RWops</code>.\nPrepares a read-write memory buffer for use with <code>RWops</code>.\nCreates an SDL file stream.\nReads a <code>Read</code> object into a buffer and then passes it to …\nCalls <code>U::from(self)</code>.\nGets the stream’s total size in bytes.\nLoad src for use as music.\nLoad src for use as a sample.\nQueues the given command for further execution.\nPerforms a set of actions within a synchronous update.\nHolds a <code>Rc&lt;SurfaceContext&gt;</code>.\nHolds a <code>SDL_Surface</code>\nAn unsized Surface reference.\nA convenience function for …\nPerforms surface blitting (surface copying).\nPerforms scaled surface bliting (surface copying).\nGets the clip rectangle for the surface.\nThe function will fail if the surface doesn’t have color …\nCopies the surface into a new one that is optimized for …\nCopies the surface into a new one of a specified pixel …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new surface from an existing buffer, using a …\nCreates a new surface from an existing buffer, using pixel …\nLoads an SDL Surface from a file\nCreates a new surface using pixel masks.\nLoads an SDL Surface from XPM data\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a Software Canvas to allow rendering in the …\nPerforms low-level surface blitting.\nPerforms low-level scaled surface blitting.\nReturns true if the Surface needs to be locked before …\nCreates a new surface using a pixel format.\nGets the rect of the surface.\nSaves an SDL Surface to a file\nSaves an SDL Surface to an RWops\nThe function will fail if the blend mode is not supported …\nSets the clip rectangle for the surface.\nPerforms bilinear scaling between two surfaces of the same …\nLocks a surface so that the pixels can be directly …\nLocks a surface so that the pixels can be directly …\nReturns the Surface’s pixel buffer if the Surface doesn…\nReturns the Surface’s pixel buffer if the Surface doesn…\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\n&lt; Implements SDL_JoystickRumble()\n&lt; Implements SDL_JoystickRumbleTriggers()\n&lt; The application did enter the background and may not get …\n&lt; The application is now interactive Called on iOS in …\n&lt; The application is low on memory, free memory if …\n&lt; The application is being terminated by the OS Called on …\n&lt; The application is about to enter the background Called …\n&lt; The application is about to enter the foreground Called …\n&lt; Terminate the program.\n&lt; Ignore the assert from now on.\n&lt; Make the debugger trigger a breakpoint.\n&lt; Ignore the assert.\n&lt; Retry the assert immediately.\n&lt; A new audio device is available\n&lt; An audio device has been removed.\nAdd a callback to be triggered when an event is added to …\nAdd a function to watch a particular hint.\nCall a callback function at a future time.\nCreate an SDL_PixelFormat structure corresponding to a …\nCreate a palette structure with the specified number of …\nUse this function to allocate an empty, unpopulated …\nArray component order, low byte -&gt; high byte.\nA callback that fires when an SDL assertion fails.\nAdd to an atomic variable.\nSet an atomic variable to a new value if it is currently …\nSet a pointer to a new value if it is currently an old …\nGet the value of an atomic variable.\nGet the value of a pointer atomically.\nLock a spin lock by setting it to a non-zero value.\nSet an atomic variable to a value.\nSet a pointer to a value atomically.\nTry to lock a spin lock by setting it to a non-zero value.\nUnlock a spin lock by setting it to 0.\nThis function is called when the audio device needs more …\n\\brief Audio device event structure (event.adevice.*)\nSDL Audio Device IDs.\n\\brief Audio format flags.\nUse this function to initialize a particular audio driver.\nUse this function to shut down audio if you initialized it …\nThe calculated values in this structure are calculated by …\nGet the number of converted/resampled bytes available.\nClear any pending data in the stream without converting it\nTell the stream that you’re done sending data, and …\nGet converted/resampled data from the stream\nAdd data to be converted/resampled to the stream.\n&lt; dstA, dstA, dstA, dstA\n&lt; dstR, dstG, dstB, dstA\n&lt; 1, 1, 1, 1\n&lt; 1-dstA, 1-dstA, 1-dstA, 1-dstA\n&lt; 1-dstR, 1-dstG, 1-dstB, 1-dstA\n&lt; 1-srcA, 1-srcA, 1-srcA, 1-srcA\n&lt; 1-srcR, 1-srcG, 1-srcB, 1-srcA\n&lt; srcA, srcA, srcA, srcA\n&lt; srcR, srcG, srcB, srcA\n&lt; 0, 0, 0, 0\n&lt; additive blending dstRGB = (srcRGB * srcA) + dstRGB dstA …\n&lt; alpha blending dstRGB = (srcRGB * srcA) + (dstRGB * …\n&lt; color modulate dstRGB = srcRGB * dstRGB dstA = dstA\n&lt; color multiply dstRGB = (srcRGB * dstRGB) + (dstRGB * …\n&lt; no blending dstRGBA = srcRGBA\n&lt; dst + src: supported by all renderers\n&lt; max(dst, src) : supported by D3D9, D3D11\n&lt; min(dst, src) : supported by D3D9, D3D11\n&lt; src - dst : supported by D3D9, D3D11, OpenGL, OpenGLES\n&lt; dst - src : supported by D3D9, D3D11, OpenGL, OpenGLES\nBitmap pixel order, high bit -&gt; low bit.\n\\brief The normalized factor used to multiply pixel …\n\\brief The blend mode used in SDL_RenderCopy() and drawing …\n\\brief The blend operation used when combining source and …\nInitialize an SDL_AudioCVT structure for conversion.\n&lt; The clipboard or primary selection changed\n&lt; Game controller axis motion\n&lt; Game controller button pressed\n&lt; Game controller button released\n&lt; A new Game controller has been inserted into the system\n&lt; The controller mapping was updated\n&lt; An opened Game controller has been removed\n&lt; Game controller sensor was updated\n&lt; Game controller touchpad was touched\n&lt; Game controller touchpad finger was moved\n&lt; Game controller touchpad finger was lifted\nCalculate a 256 entry gamma ramp for a gamma value.\nCapture the mouse and to track input outside an SDL window.\nDismiss the composition window/IME without disabling the …\nClear any previous error message for this thread.\nClear all hints.\nDrop any queued audio data waiting to be sent to the …\nThis function is a legacy means of closing the audio …\nUse this function to shut down audio processing and close …\nThe bits of this structure can be directly reinterpreted …\n\\brief Fields shared by every event\nCompose a custom blend mode for renderers.\nRestart all threads that are waiting on the condition …\nRestart one of the threads that are waiting on the …\nWait until a condition variable is signaled.\nWait until a condition variable is signaled or a certain …\n\\brief Game controller axis motion event structure …\n\\brief Game controller button event structure …\n\\brief Controller device event structure (event.cdevice.*)\n\\brief Game controller sensor event structure …\n\\brief Game controller touchpad event structure …\nConvert audio data to a desired audio format.\nCopy a block of pixels of one format to another format.\nCopy an existing surface to a new surface of the specified …\nCopy an existing surface to a new surface of the specified …\nCreate a color cursor.\nCreate a condition variable.\nCreate a cursor using the specified bitmap data and mask …\nCreate a new mutex.\nAllocate a new RGB surface.\nAllocate a new RGB surface with existing pixel data.\nAllocate a new RGB surface with a specific pixel format.\nAllocate a new RGB surface with with a specific pixel …\nCreate a 2D rendering context for a window.\nCreate a semaphore.\nCreate a window that can be shaped with the specified …\nCreate a 2D software rendering context for a surface.\nCreate a system cursor.\nCreate a texture for a rendering context.\nCreate a texture from an existing surface.\nCreate a new thread with a default stack size.\nCreate a new thread with a specific stack size.\nCreate a window with the specified position, dimensions, …\nCreate a window and default renderer.\nCreate an SDL window from an existing native window.\n&lt; Display state change\n&lt; Display has been added to the system\n&lt; Display has been removed from the system\n&lt; Never used\n&lt; Display orientation has changed to data1\n&lt; A new set of drops is beginning (NULL filename)\n&lt; Current set of drops is now complete (NULL filename)\n&lt; The system requests a file open\n&lt; text/plain drag-and-drop event\nRemove an event watch callback added with …\nRemove a function watching a particular hint.\nWait a specified number of milliseconds before returning.\nDequeue more audio on non-callback devices.\nDestroy a condition variable.\nDestroy a mutex created with SDL_CreateMutex().\nDestroy the rendering context for a window and free …\nDestroy a semaphore.\nDestroy the specified texture.\nDestroy a window.\nLet a thread clean up on exit without intervention.\nPrevent the screen from being blanked by a screen saver.\n\\brief Display state change event data (event.display.*)\n\\brief Event subtype for display events\n\\brief  The structure that defines a display mode\n\\brief Display orientation\n\\brief Dollar Gesture Event (event.dgesture.*)\n\\brief An event used to request a file open by the system …\nAllow the screen to be blanked by a screen saver.\nCalculate a minimal rectangle enclosing a set of points …\nCalculate a minimal rectangle enclosing a set of points.\n\\brief General event structure\nA function pointer used for callbacks that watch the event …\nSet the state of processing events by type.\nThe types of events that can be delivered.\n&lt; Unused (do not remove)\n&lt; Flash the window briefly to get attention\n&lt; Cancel any window flash state\n&lt; Flash the window until it gets focus\n&lt; flip horizontally\n&lt; Do not flip\n&lt; flip vertically\nThe structure that defines a point (floating point)\nA rectangle, with the origin at the upper left (floating …\nPerform a fast fill of a rectangle with a specific color.\nPerform a fast fill of a set of rectangles with a specific …\nRun a specific filter function on the current event queue, …\n\\brief Window flash operation\nRequest a window to demand attention from the user.\nClear events of a specific type from the event queue.\nClear events of a range of types from the event queue.\nFree an audio stream\nFree a previously-created cursor.\nFree an SDL_PixelFormat structure allocated by …\nFree a palette created with SDL_AllocPalette().\nUse this function to free an SDL_RWops structure allocated …\nFree an RGB surface.\nFree data previously allocated with SDL_LoadWAV() or …\n\\brief An opaque handle to an OpenGL context.\nBind an OpenGL/ES/ES2 texture to the current context.\n&lt; GLX_CONTEXT_ES2_PROFILE_BIT_EXT\nCreate an OpenGL context for an OpenGL window, and make it …\nDelete an OpenGL context.\nCheck if an OpenGL extension is supported for the current …\nGet the actual value for an attribute from the current …\nGet the currently active OpenGL context.\nGet the currently active OpenGL window.\nGet the size of a window’s underlying drawable in pixels.\nGet an OpenGL function by name.\nGet the swap interval for the current OpenGL context.\nDynamically load an OpenGL library.\nSet up an OpenGL context for rendering into an OpenGL …\nReset all previously set OpenGL context attributes to …\nSet an OpenGL window attribute before window creation.\nSet the swap interval for the current OpenGL context.\nUpdate a window with OpenGL rendering.\nUnbind an OpenGL/ES/ES2 texture from the current context.\nUnload the OpenGL library previously loaded by …\n\\brief OpenGL configuration attributes\nAn SDL_GUID is a 128-bit identifier for an input device …\nConvert a GUID string into a ::SDL_GUID structure.\nGet an ASCII string representation for a given ::SDL_GUID.\nAdd support for controllers that SDL is unaware of or to …\nLoad a set of Game Controller mappings from a seekable SDL …\nThe list of axes available from a controller\nThe list of buttons available from a controller\nGet the SDL joystick layer binding for this controller …\nClose a game controller previously opened with …\nQuery or change current state of Game Controller events.\nGet the SDL_GameController associated with an instance id.\nGet the SDL_GameController associated with a player index.\nReturn the sfSymbolsName for a given axis on a game …\nReturn the sfSymbolsName for a given button on a game …\nCheck if a controller has been opened and is currently …\nGet the current state of an axis control on a game …\nConvert a string into SDL_GameControllerAxis enum.\nGet the SDL joystick layer binding for a controller axis …\nGet the SDL joystick layer binding for a controller button …\nGet the current state of a button on a game controller.\nConvert a string into an SDL_GameControllerButton enum.\nGet the firmware version of an opened controller, if …\nGet the Joystick ID from a Game Controller.\nGet the number of supported simultaneous fingers on a …\nGet the number of touchpads on a game controller.\nGet the player index of an opened game controller.\nGet the USB product ID of an opened controller, if …\nGet the product version of an opened controller, if …\nGet the current state of a game controller sensor.\nGet the data rate (number of events per second) of a game …\nGet the current state of a game controller sensor with the …\nGet the serial number of an opened controller, if …\nConvert from an SDL_GameControllerAxis enum to a string.\nConvert from an SDL_GameControllerButton enum to a string.\nGet the current state of a finger on a touchpad on a game …\nGet the type of this currently opened controller\nGet the USB vendor ID of an opened controller, if …\nQuery whether a game controller has a given axis.\nQuery whether a game controller has a given button.\nQuery whether a game controller has an LED.\nQuery whether a game controller has rumble support.\nQuery whether a game controller has rumble support on …\nReturn whether a game controller has a particular sensor.\nQuery whether sensor data reporting is enabled for a game …\nGet the current mapping of a Game Controller.\nGet the mapping of a game controller.\nGet the game controller mapping string for a given GUID.\nGet the mapping at a particular index.\nGet the implementation-dependent name for an opened game …\nGet the implementation dependent name for the game …\nGet the number of mappings installed.\nOpen a game controller for use.\nGet the implementation-dependent path for an opened game …\nGet the implementation dependent path for the game …\nStart a rumble effect on a game controller.\nStart a rumble effect in the game controller’s triggers.\nSend a controller specific effect packet\nUpdate a game controller’s LED color.\nSet the player index of an opened game controller.\nSet whether data reporting for a game controller sensor is …\nGet the type of a game controller.\nManually pump game controller updates if not using the …\nGet the current assertion handler.\nGet a list of all assertion failures.\nGet the human-readable name of a specific audio device.\nGet the preferred audio format of a specific audio device.\nUse this function to get the current audio state of an …\nUse this function to get the name of a built in audio …\nThis function is a legacy means of querying the audio …\nGet the directory where the application was run from.\nDetermine the L1 cache line size of the CPU.\nGet the number of CPU cores available.\nGet the clipping rectangle for a surface.\nGet UTF-8 text from the clipboard, which must be freed …\nGet the closest match to the requested display mode.\nGet the color key (transparent pixel) for a surface.\nGet the name of the current audio driver.\nGet information about the current display mode.\nGet the name of the currently initialized video driver.\nGet the active cursor.\nGet the default assertion handler.\nGet the name and preferred format of the default audio …\nGet the default cursor.\nGet information about the desktop’s display mode.\nGet the desktop area represented by a display.\nGet the dots/pixels-per-inch for a display.\nGet information about a specific display mode.\nGet the name of a display in UTF-8 encoding.\nGet the orientation of a display.\nGet the usable desktop area represented by a display.\nRetrieve a message about the last error that occurred on …\nGet the last error message that was set for the current …\nQuery the current event filter.\nGet the current state of the mouse in relation to the …\nGet the window that currently has an input grab enabled.\nGet the value of a hint.\nGet the boolean value of a hint variable.\nGet the device information encoded in a SDL_JoystickGUID …\nGet a key code from a human-readable name.\nGet the key code corresponding to the given scancode …\nGet a human-readable name for a key.\nQuery the window which currently has keyboard focus.\nGet a snapshot of the current state of the keyboard.\nGet the current set of SDL memory functions\nGet the current key modifier state for the keyboard.\nGet the window which currently has mouse focus.\nRetrieve the current state of the mouse.\nGet the number of outstanding (unfreed) allocations\nGet the number of built-in audio devices.\nUse this function to get the number of built-in audio …\nGet the number of available display modes.\nGet the number of 2D rendering drivers available for the …\nGet the number of registered touch devices.\nGet the number of active fingers for a given touch device.\nGet the number of available video displays.\nGet the number of video drivers compiled into SDL.\nGet the original set of SDL memory functions\nGet the current value of the high resolution counter.\nGet the count per second of the high resolution counter.\nGet the human readable name of a pixel format.\nGet the name of the platform.\nGet the index of the display containing a point\nGet the current power supply details.\nGet the user-and-app-specific path where files can be …\nReport the user’s preferred locale.\nGet UTF-8 text from the primary selection, which must be …\nGet the number of bytes of still-queued audio.\nGet RGB values from a pixel in the specified format.\nGet RGBA values from a pixel in the specified format.\nGet the index of the display primarily containing a rect\nQuery whether relative mouse mode is enabled.\nRetrieve the relative state of the mouse.\nGet the blend mode used for drawing operations.\nGet the color used for drawing operations (Rect, Line and …\nGet info about a specific 2D rendering driver for the …\nGet the current render target.\nGet the renderer associated with a window.\nGet information about a rendering context.\nGet the output size in pixels of a rendering context.\nGet the code revision of SDL that is linked against your …\nObsolete function, do not use.\nGet the scancode corresponding to the given key code …\nGet a scancode from a human-readable name.\nGet a human-readable name for a scancode.\nGet the shape parameters of a shaped window.\nGet the additional alpha value used in blit operations.\nGet the blend mode used for blit operations.\nGet the additional color value multiplied into blit …\nGet the amount of RAM configured in the system.\nGet the additional alpha value multiplied into render copy …\nGet the blend mode used for texture copy operations.\nGet the additional color value multiplied into render copy …\nGet the scale mode used for texture scale operations.\nGet the user-specified pointer associated with a texture\nGet the thread identifier for the specified thread.\nGet the thread name as it was specified in …\nGet the number of milliseconds since SDL library …\nGet the number of milliseconds since SDL library …\nGet the touch ID with the given index.\nGet the type of the given touch device.\nGet the finger object for specified touch device ID and …\nGet the touch device name as reported from the driver or …\nGet the version of SDL that is linked against your program.\nGet the name of a built in video driver.\nGet the size of a window’s borders (decorations) around …\nGet the brightness (gamma multiplier) for a given window’…\nRetrieve the data pointer associated with a window.\nGet the index of the display associated with a window.\nQuery the display mode to use when a window is visible at …\nGet the window flags.\nGet a window from a stored ID.\nGet the gamma ramp for a given window’s display.\nGet a window’s input grab mode.\nGet the raw ICC profile data for the screen the window is …\nGet the numeric ID of a window.\nGet a window’s keyboard grab mode.\nGet the maximum size of a window’s client area.\nGet the minimum size of a window’s client area.\nGet a window’s mouse grab mode.\nGet the mouse confinement rectangle of a window.\nGet the opacity of a window.\nGet the pixel format associated with the window.\nGet the position of a window.\nGet the size of a window’s client area.\nGet the size of a window in pixels.\nGet the SDL surface associated with the window.\nGet the title of a window.\nGet driver-specific information about a window.\nGet the YUV conversion mode\nGet the YUV conversion mode, returning the correct mode …\n&lt; Region can drag entire window.\n&lt; Region is normal. No special properties.\nClose a haptic device previously opened with …\n\\brief A structure containing a template for a Condition …\n\\brief A structure containing a template for a Constant …\n\\brief A structure containing a template for the …\nDestroy a haptic effect on the device.\n\\brief Structure that represents a haptic direction.\n\\brief The generic template for any haptic effect.\nCheck to see if an effect is supported by a haptic device.\nGet the status of the current effect on the specified …\nGet the index of a haptic device.\n\\brief A structure containing a template for a Left/Right …\nGet the implementation dependent name of a haptic device.\nCreate a new haptic effect on a specified device.\nGet the number of haptic axes the device has.\nGet the number of effects a haptic device can store.\nGet the number of effects a haptic device can play at the …\nOpen a haptic device for use.\nOpen a haptic device for use from a joystick device.\nTry to open a haptic device from the current mouse.\nCheck if the haptic device at the designated index has …\nPause a haptic device.\n\\brief A structure containing a template for a Periodic …\nGet the haptic device’s supported features in bitwise …\n\\brief A structure containing a template for a Ramp effect.\nInitialize a haptic device for simple rumble playback.\nRun a simple rumble effect on a haptic device.\nStop the simple rumble on a haptic device.\nCheck whether rumble is supported on a haptic device.\nRun the haptic effect on its associated haptic device.\nSet the global autocenter of the device.\nSet the global gain of the specified haptic device.\nStop all the currently playing effects on a haptic device.\nStop the haptic effect on its associated haptic device.\nUnpause a haptic device.\nUpdate the properties of an effect.\nDetermine whether the CPU has 3DNow! features.\nDetermine whether the CPU has ARM SIMD (ARMv6) features.\nDetermine whether the CPU has AVX features.\nDetermine whether the CPU has AVX2 features.\nDetermine whether the CPU has AVX-512F (foundation) …\nDetermine whether the CPU has AltiVec features.\nQuery whether the clipboard exists and contains a …\nReturns whether the surface has a color key\nCheck for the existence of a certain event type in the …\nCheck for the existence of certain event types in the …\nDetermine whether two rectangles intersect.\nDetermine whether two rectangles intersect with float …\nDetermine whether the CPU has LASX (LOONGARCH SIMD) …\nDetermine whether the CPU has LSX (LOONGARCH SIMD) …\nDetermine whether the CPU has MMX features.\nDetermine whether the CPU has NEON (ARM SIMD) features.\nQuery whether the primary selection exists and contains a …\nDetermine whether the CPU has the RDTSC instruction.\nDetermine whether the CPU has SSE features.\nDetermine whether the CPU has SSE2 features.\nDetermine whether the CPU has SSE3 features.\nDetermine whether the CPU has SSE4.1 features.\nDetermine whether the CPU has SSE4.2 features.\nCheck whether the platform has screen keyboard support.\nReturns whether the surface is RLE enabled\nHide a window.\nType definition of the hint callback function.\n\\brief  An enumeration of hint priorities\nCallback used for hit-testing.\nPossible return values from the SDL_HitTest callback.\nInitialize the SDL library.\nCompatibility function to initialize the SDL library.\nCalculate the intersection of two rectangles with float …\nCalculate the intersection of a rectangle and line segment …\nCalculate the intersection of two rectangles.\nCalculate the intersection of a rectangle and line segment.\nCheck if the given joystick is supported by the game …\nCheck whether the screen keyboard is shown for given …\nCheck whether the screensaver is currently enabled.\nReturn whether the given window is a shaped window.\nQuery if the current device is a tablet.\nCheck whether or not Unicode text input events are enabled.\nReturns if an IME Composite or Candidate window is …\n&lt; Joystick axis motion\n&lt; Joystick trackball motion\n&lt; Joystick battery level change\n&lt; Joystick button pressed\n&lt; Joystick button released\n&lt; A new joystick has been inserted into the system\n&lt; An opened joystick has been removed\n&lt; Joystick hat position change\n\\brief Joystick axis motion event structure (event.jaxis.*)\n\\brief Joystick trackball motion event structure …\n\\brief Joysick battery level change event structure …\n\\brief Joystick button event structure (event.jbutton.*)\n\\brief Joystick device event structure (event.jdevice.*)\n\\brief Joystick hat position change event structure …\nAttach a new virtual joystick.\nAttach a new virtual joystick with extended properties.\nClose a joystick previously opened with SDL_JoystickOpen().\nGet the battery level of a joystick as …\nDetach a virtual joystick.\nEnable/disable joystick event polling.\nGet the SDL_Joystick associated with an instance id.\nGet the SDL_Joystick associated with a player index.\nAn SDL_GUID is a 128-bit identifier for an input device …\nGet the status of a specified joystick.\nGet the current state of an axis control on a joystick.\nGet the initial state of an axis control on a joystick.\nGet the ball axis change since the last poll.\nGet the current state of a button on a joystick.\nGet the implementation-dependent GUID for the joystick at …\nGet the instance ID of a joystick.\nGet the player index of a joystick, or -1 if it’s not …\nGet the USB product ID of a joystick, if available.\nGet the product version of a joystick, if available.\nGet the type of a joystick, if available.\nGet the USB vendor ID of a joystick, if available.\nGet the firmware version of an opened joystick, if …\nGet the implementation-dependent GUID for the joystick.\nConvert a GUID string into a SDL_JoystickGUID structure.\nGet an ASCII string representation for a given …\nGet the current state of a POV hat on a joystick.\nGet the player index of an opened joystick.\nGet the USB product ID of an opened joystick, if available.\nGet the product version of an opened joystick, if …\nGet the serial number of an opened joystick, if available.\nGet the type of an opened joystick.\nGet the USB vendor ID of an opened joystick, if available.\nQuery whether a joystick has an LED.\nQuery whether a joystick has rumble support.\nQuery whether a joystick has rumble support on triggers.\nThis is a unique ID for a joystick for the time it is …\nGet the instance ID of an opened joystick.\nQuery if a joystick has haptic features.\nQuery whether or not the joystick at a given device index …\nGet the implementation dependent name of a joystick.\nGet the implementation dependent name of a joystick.\nGet the number of general axis controls on a joystick.\nGet the number of trackballs on a joystick.\nGet the number of buttons on a joystick.\nGet the number of POV hats on a joystick.\nOpen a joystick for use.\nGet the implementation dependent path of a joystick.\nGet the implementation dependent path of a joystick.\nStart a rumble effect.\nStart a rumble effect in the joystick’s triggers\nSend a joystick specific effect packet\nUpdate a joystick’s LED color.\nSet the player index of an opened joystick.\nSet values on an opened, virtual-joystick’s axis.\nSet values on an opened, virtual-joystick’s button.\nSet values on an opened, virtual-joystick’s hat.\nUpdate the current state of the open joysticks.\n&lt; Key pressed\n&lt; Keymap changed due to a system event such as an input …\n&lt; Key released\n\\brief Keyboard button event structure (event.key.*)\n\\brief The SDL virtual key representation.\n\\brief Enumeration of valid key mods (possibly OR’d …\n\\brief The SDL keysym structure, used in key events.\nThis last event is only for bounding internal arrays\n&lt; The user’s locale preferences have changed.\nSets the UNIX nice value for a thread.\nSets the priority (not nice level) and scheduling policy …\nLoad a BMP image from a seekable SDL data stream.\nLoad Dollar Gesture templates from a file.\nLoad all the data from a file path.\nLoad all the data from an SDL data stream.\nLook up the address of the named function in a shared …\nDynamically load a shared object.\nLoad the audio data of a WAVE file into memory.\nThis function is a legacy means of locking the audio …\nUse this function to lock out the audio callback function …\nLocking for multi-threaded access to the joystick API\nLock the mutex.\nLocking for multi-threaded access to the sensor API\nSet up a surface for directly accessing the pixels.\nLock a portion of the texture for <strong>write-only</strong> pixel access.\nLock a portion of the texture for <strong>write-only</strong> pixel access, …\nLog a message with SDL_LOG_CATEGORY_APPLICATION and …\n\\brief The predefined log categories\nLog a message with SDL_LOG_PRIORITY_CRITICAL.\nLog a message with SDL_LOG_PRIORITY_DEBUG.\nLog a message with SDL_LOG_PRIORITY_ERROR.\nGet the current log output function.\nGet the priority of a particular log category.\nLog a message with SDL_LOG_PRIORITY_INFO.\nLog a message with the specified category and priority.\nLog a message with the specified category and priority.\nThe prototype for the log output callback function.\n\\brief The predefined log priorities\nReset all priorities to default.\nSet the priority of all log categories.\nReplace the default log output function with one of your …\nSet the priority of a particular log category.\nLog a message with SDL_LOG_PRIORITY_VERBOSE.\nLog a message with SDL_LOG_PRIORITY_WARN.\nPerform low-level surface blitting only.\nPerform low-level surface scaled blitting only.\n&lt; buttons placed left to right\n&lt; buttons placed right to left\n&lt; Marks the default button when escape is hit\n&lt; Marks the default button when return is hit\n&lt; error dialog\n&lt; informational dialog\n&lt; warning dialog\n&lt; Mouse button pressed\n&lt; Mouse button released\n&lt; Mouse moved\n&lt; Mouse wheel motion\n&lt; The scroll direction is flipped / natural\n&lt; The scroll direction is normal\nMap an RGB triple to an opaque pixel value for a given …\nMap an RGBA quadruple to a pixel value for a given pixel …\nConvert a bpp value and RGBA masks to an enumerated pixel …\nMake a window as large as possible.\nMemory barriers are designed to prevent reads and writes …\nIndividual button data.\nFlags for SDL_MessageBoxButtonData.\nRGB value used in a message box color scheme\nA set of colors to use for message box dialogs\nMessageBox structure containing title, text, window, etc.\nSDL_MessageBox flags. If supported will display warning …\n\\brief A handle to a CAMetalLayer-backed NSView (macOS) or …\nCreate a CAMetalLayer-backed NSView/UIView and attach it …\nDestroy an existing SDL_MetalView object.\nGet the size of a window’s underlying drawable in pixels …\nGet a pointer to the backing CAMetalLayer for the given …\nMinimize a window to an iconic representation.\nThis function is a legacy means of mixing audio.\nMix audio data in a specified format.\n\\brief Mouse button event structure (event.button.*)\nQuery whether or not the current mouse has haptic …\n\\brief Mouse motion event structure (event.motion.*)\n\\brief Scroll direction types for the Scroll event\n\\brief Mouse wheel event structure (event.wheel.*)\n\\brief Multiple Finger Gesture Event (event.mgesture.*)\n&lt; not a key, just marks the number of scancodes for array …\nCreate a new audio stream.\nCount the number of haptic devices attached to the system.\nCount the number of joysticks attached to the system.\nCount the number of sensors attached to the system right …\n&lt; The display is in landscape mode, with the right side …\n&lt; The display is in landscape mode, with the left side up, …\n&lt; The display is in portrait mode\n&lt; The display is in portrait mode, upside down\n&lt; The display orientation can’t be determined\n\\brief OS Specific event\nThis function is a legacy means of opening the audio …\nOpen a specific audio device.\nOpen a URL/URI in the browser or other appropriate …\n&lt; Android video texture format\n&lt; Planar mode: Y + U + V  (3 planes)\n&lt; Planar mode: Y + U/V interleaved  (2 planes)\n&lt; Planar mode: Y + V/U interleaved  (2 planes)\n&lt; Packed mode: U0+Y0+V0+Y1 (1 plane)\n&lt; Packed mode: Y0+U0+Y1+V0 (1 plane)\n&lt; Planar mode: Y + V + U  (3 planes)\n&lt; Packed mode: Y0+V0+Y1+U0 (1 plane)\n&lt; Signals the end of an event poll cycle\n&lt; Plugged in, battery charged\n&lt; Plugged in, charging battery\n&lt; Plugged in, no battery available\n&lt; Not plugged in, running on the battery\n&lt; cannot determine power status\nPacked component layout.\nPacked component order, high bit -&gt; low bit.\nThis function is a legacy means of pausing the audio …\nUse this function to pause and unpause audio playback on a …\nCheck the event queue for messages and optionally return …\n\\note Everything in the pixel format structure is …\nConvert one of the enumerated pixel formats to a bpp value …\nPixel type.\nThe structure that defines a point (integer)\nPoll for currently pending events.\nThe basic state for the system’s power supply.\nPremultiply the alpha on a block of pixels.\nPump the event loop, gathering events from the input …\nAdd an event to the event queue.\n&lt; User-requested quit\nQuery the attributes of a texture.\nQueue more audio on non-callback devices.\nClean up all initialized subsystems.\n\\brief The “quit requested” event\nShut down specific SDL subsystems.\n&lt; The renderer uses hardware acceleration\n&lt; Present is synchronized with the refresh rate\n&lt; The renderer is a software fallback\n&lt; The renderer supports rendering to texture\n&lt; The device has been reset and all textures need to be …\n&lt; The render targets have been reset and their contents …\nUse this function to prepare a read-only memory buffer for …\nUse this function to create an SDL_RWops structure from a …\nUse this function to create a new SDL_RWops structure for …\nUse this function to prepare a read-write memory buffer …\nClose and free an allocated SDL_RWops structure.\nThis is the read/write operation structure – very basic.\nRead from a data source.\nSeek within an SDL_RWops data stream.\nUse this function to get the size of the data stream in an …\nDetermine the current read/write offset in an SDL_RWops …\nWrite to an SDL_RWops data stream.\nRaise a window above other windows and set the input focus.\nUse this function to read 16 bits of big-endian data from …\nUse this function to read 32 bits of big-endian data from …\nUse this function to read 64 bits of big-endian data from …\nUse this function to read 16 bits of little-endian data …\nUse this function to read 32 bits of little-endian data …\nUse this function to read 64 bits of little-endian data …\nUse this function to read a byte from an SDL_RWops.\nBegin recording a gesture on a specified touch device or …\nA rectangle, with the origin at the upper left (integer).\nAllocate a set of user-defined events, and return the …\nRemove a timer created with SDL_AddTimer().\nClear the current rendering target with the drawing color.\nCopy a portion of the texture to the current rendering …\nCopy a portion of the texture to the current rendering, …\nCopy a portion of the source texture to the current …\nCopy a portion of the texture to the current rendering …\nDraw a line on the current rendering target.\nDraw a line on the current rendering target at subpixel …\nDraw a series of connected lines on the current rendering …\nDraw a series of connected lines on the current rendering …\nDraw a point on the current rendering target.\nDraw a point on the current rendering target at subpixel …\nDraw multiple points on the current rendering target.\nDraw multiple points on the current rendering target at …\nDraw a rectangle on the current rendering target.\nDraw a rectangle on the current rendering target at …\nDraw some number of rectangles on the current rendering …\nDraw some number of rectangles on the current rendering …\nFill a rectangle on the current rendering target with the …\nFill a rectangle on the current rendering target with the …\nFill some number of rectangles on the current rendering …\nFill some number of rectangles on the current rendering …\nForce the rendering context to flush any pending commands …\nRender a list of triangles, optionally using a texture and …\nRender a list of triangles, optionally using a texture and …\nGet the clip rectangle for the current target.\nGet whether integer scales are forced for …\nGet device independent resolution for rendering.\nGet the Metal command encoder for the current frame\nGet the CAMetalLayer associated with the given Metal …\nGet the drawing scale for the current target.\nGet the drawing area for the current target.\nGet the window associated with a renderer.\nGet whether clipping is enabled on the given renderer.\nGet real coordinates of point in window when given logical …\nUpdate the screen with any rendering performed since the …\nRead pixels from the current rendering target to an array …\nSet the clip rectangle for rendering on the specified …\nSet whether to force integer scales for …\nSet a device independent resolution for rendering.\nSet the drawing scale for rendering on the current target.\nToggle VSync of the given renderer.\nSet the drawing area for rendering on the current target.\nDetermine whether a renderer supports the use of render …\nGet logical coordinates of point in renderer when given …\nA structure representing rendering state\nFlags used when creating a rendering context\nFlip constants for SDL_RenderCopyEx\nInformation on the capabilities of a render driver or …\nClear the list of all assertion failures.\nReset a hint to the default value.\nReset all hints to the default values.\nClear the state of the keyboard\nRestore the size and position of a minimized or maximized …\n&lt; AC Back\n&lt; AC Bookmarks\n&lt; AC Forward\n&lt; AC Home\n&lt; AC Refresh\n&lt; AC Search\n&lt; AC Stop\n&lt; AC Redo/Repeat\n&lt; Erase-Eaze\n&lt; windows contextual menu, compose\n&lt; Located at the lower left of the return key on ISO …\n&lt; AL Calculator\n&lt; Used for accepting phone calls.\n&lt; AC Cancel\n&lt; AC Copy\n&lt; AC Cut\n&lt; display mirroring/dual display switch, video mode switch\n&lt; Used for rejecting phone calls.\n&lt; AC Find\n&lt; Located in the top left corner (on both ANSI and ISO …\n&lt; AL Integrated Help Center\n&lt; insert on PC, help on some Mac keyboards (but does send …\n&lt; used on Asian keyboards, see footnotes in USB doc\n&lt; Yen\n&lt; alt, option\n&lt; Hangul/English toggle\n&lt; Hanja conversion\n&lt; Katakana\n&lt; Hiragana\n&lt; Zenkaku/Hankaku\n&lt; reserved\n&lt; reserved\n&lt; reserved\n&lt; reserved\n&lt; windows, command (apple), meta\n&lt; Menu (show menu)\n&lt; I’m not sure if this is really not covered by any of …\n&lt; This is the additional key that ISO keyboards have over …\n&lt; ISO USB keyboards actually use this code instead of 49 …\n&lt; num lock on PC, clear on Mac keyboards\n&lt; AC Paste\n&lt; The USB document says this is a status flag, not a …\n&lt; alt gr, option\n&lt; windows, command (apple), meta\n&lt; SC System Sleep\n&lt; Usually situated below the display on phones and used as …\n&lt; Usually situated below the display on phones and used as …\n&lt; AC Stop\n&lt; AC Undo\n&lt; AL Internet Browser\n&lt; A sensor was updated\n&lt; Accelerometer\n&lt; Accelerometer for left Joy-Con controller and Wii nunchuk\n&lt; Accelerometer for right Joy-Con controller\n&lt; Gyroscope\n&lt; Gyroscope for left Joy-Con controller\n&lt; Gyroscope for right Joy-Con controller\n&lt; Returned for an invalid sensor\n&lt; Unknown sensor type\nAllocate memory in a SIMD-friendly way.\nDeallocate memory obtained from SDL_SIMDAlloc\nReport the alignment this system needs for SIMD …\nReallocate memory obtained from SDL_SIMDAlloc\n&lt; Arrow\n&lt; Crosshair\n&lt; Hand\n&lt; I-beam\n&lt; Slashed circle or crossbones\n&lt; Four pointed arrow pointing north, south, east, and west\n&lt; Double arrow pointing northeast and southwest\n&lt; Double arrow pointing north and south\n&lt; Double arrow pointing northwest and southeast\n&lt; Double arrow pointing west and east\n&lt; Wait\n&lt; Small wait cursor (or Wait if not available)\n&lt; System specific event\nThese are the various supported windowing subsystems\nSave all currently loaded Dollar Gesture templates.\nSave a surface to a seekable SDL data stream in BMP format.\nSave a currently loaded Dollar Gesture template.\nThe scaling mode for a texture.\n&lt; anisotropic filtering\n&lt; linear filtering\n&lt; nearest pixel sampling\n\\brief The SDL keyboard scancode representation.\nAtomically increment a semaphore’s value and wake …\nSee if a semaphore has a positive value and decrement it …\nGet the current value of a semaphore.\nWait until a semaphore has a positive value and then …\nWait until a semaphore has a positive value and then …\nClose a sensor previously opened with SDL_SensorOpen().\n\\brief Sensor event structure (event.sensor.*)\nReturn the SDL_Sensor associated with an instance id.\nGet the current state of an opened sensor.\nGet the current state of an opened sensor with the …\nGet the instance ID of a sensor.\nGet the implementation dependent name of a sensor.\nGet the platform dependent type of a sensor.\nGet the type of a sensor.\nGet the instance ID of a sensor.\nGet the implementation dependent name of a sensor\nGet the platform dependent type of a sensor.\nGet the type of a sensor.\nThis is a unique ID for a sensor for the time it is …\nOpen a sensor for use.\nUpdate the current state of the open sensors.\nSet an application-defined assertion handler.\nSet the clipping rectangle for a surface.\nPut UTF-8 text into the clipboard.\nSet the color key (transparent pixel) in a surface.\nSet the active cursor.\nSet the SDL error message for the current thread.\nSet up a filter to process all events before they change …\nSet a hint with normal priority.\nSet a hint with a specific priority.\nCircumvent failure of SDL_Init() when not using SDL_main() …\nReplace SDL’s memory allocation functions with a custom …\nSet the current key modifier state for the keyboard.\nSet a range of colors in a palette.\nSet the palette for a pixel format structure.\nPut UTF-8 text into the primary selection.\nSet relative mouse mode.\nSet the blend mode used for drawing operations (Fill and …\nSet the color used for drawing operations (Rect, Line and …\nSet a texture as the current rendering target.\nSet an additional alpha value used in blit operations.\nSet the blend mode used for blit operations.\nSet an additional color value multiplied into blit …\nSet the palette used by a surface.\nSet the RLE acceleration hint for a surface.\nSet the rectangle used to type Unicode text inputs.\nSet an additional alpha value multiplied into render copy …\nSet the blend mode for a texture, used by SDL_RenderCopy().\nSet an additional color value multiplied into render copy …\nSet the scale mode used for texture scale operations.\nAssociate a user-specified pointer with a texture.\nSet the priority for the current thread.\nSet the window to always be above the others.\nSet the border state of a window.\nSet the brightness (gamma multiplier) for a given window’…\nAssociate an arbitrary named pointer with a window.\nSet the display mode to use when a window is visible at …\nSet a window’s fullscreen state.\nSet the gamma ramp for the display that owns a given …\nSet a window’s input grab mode.\nProvide a callback that decides if a window region has …\nSet the icon for a window.\nExplicitly set input focus to the window.\nSet a window’s keyboard grab mode.\nSet the maximum size of a window’s client area.\nSet the minimum size of a window’s client area.\nSet the window as a modal for another window.\nSet a window’s mouse grab mode.\nConfines the cursor to the specified area of a window.\nSet the opacity for a window.\nSet the position of a window.\nSet the user-resizable state of a window.\nSet the shape and parameters of a shaped window.\nSet the size of a window’s client area.\nSet the title of a window.\nSet the YUV conversion mode\nToggle whether or not the cursor is shown.\nCreate a modal message box.\nDisplay a simple modal message box.\nShow a window.\nPerform a fast, low quality, stretch blit between two …\nPerform bilinear scaling between two surfaces of the same …\nStart accepting Unicode text input events.\nStop receiving any text input events.\n\\brief A collection of pixels used in software blitting.\n\\brief A video driver dependent system event (event.syswm.*…\n\\brief SDL_syswm.h\nThe custom event structure.\n\\brief Cursor types for SDL_CreateSystemCursor().\n&lt; Keyboard text editing (composition)\n&lt; Extended keyboard text editing (composition)\n&lt; Keyboard text input\n&lt; Changes rarely, not lockable\n&lt; Changes frequently, lockable\n&lt; Texture can be used as a render target\n&lt; srcA = srcA * alpha\n&lt; srcC = srcC * color\n&lt; No modulation\nCleanup all TLS data for this thread.\nCreate a piece of thread-local storage.\nGet the current thread’s value associated with a thread …\nSet the current thread’s value associated with a thread …\n\\brief Keyboard text editing event structure (event.edit.*)\n\\brief Extended keyboard text editing event structure …\n\\brief Keyboard text input event structure (event.text.*)\nAn efficient driver-specific representation of pixel data\nThe access pattern allowed for a texture.\nThe texture channel modulation used in SDL_RenderCopy().\nThe function passed to SDL_CreateThread().\nGet the thread identifier for the current thread.\nThe SDL thread priority.\nFunction prototype for the timer callback function.\nDefinition of the timer ID type.\n\\brief Touch finger event structure (event.tfinger.*)\nTry to lock a mutex without blocking.\nEvents ::SDL_USEREVENT through ::SDL_LASTEVENT are for …\nCalculate the union of two rectangles with float precision.\nCalculate the union of two rectangles.\nUnload a shared object from memory.\nThis function is a legacy means of unlocking the audio …\nUse this function to unlock the audio callback function …\nUnlocking for multi-threaded access to the joystick API\nUnlock the mutex.\nRelease a surface after directly accessing the pixels.\nUnlock a texture, uploading the changes to video memory, …\nUpdate a rectangle within a planar NV12 or NV21 texture …\nUpdate the given texture rectangle with new pixel data.\nCopy the window surface to the screen.\nCopy areas of the window surface to the screen.\nUpdate a rectangle within a planar YV12 or IYUV texture …\nPerform a fast blit from the source surface to the …\nPerform a scaled surface copy to a destination surface.\n\\brief A user-defined event type (event.user.*)\nVertex structure\nInitialize the video subsystem, optionally specifying a …\nShut down the video subsystem, if initialized with …\nThe structure that defines an extended virtual joystick …\nCreate a Vulkan rendering surface for a window.\nGet the size of the window’s underlying drawable …\nGet the names of the Vulkan instance extensions needed to …\nGet the address of the <code>vkGetInstanceProcAddr</code> function.\nDynamically load the Vulkan loader library.\nUnload the Vulkan library previously loaded by …\n&lt; Window state change\n&lt; The window manager requests that the window be closed\n&lt; Window has been moved to display data1.\n&lt; Window has gained mouse focus\n&lt; Window has been exposed and should be redrawn\n&lt; Window has gained keyboard focus\n&lt; Window has lost keyboard focus\n&lt; Window has been hidden\n&lt; Window had a hit test that wasn’t SDL_HITTEST_NORMAL.\n&lt; The ICC profile of the window’s display has changed.\n&lt; Window has lost mouse focus\n&lt; Window has been maximized\n&lt; Window has been minimized\n&lt; Window has been moved to data1, data2\n&lt; Never used\n&lt; Window has been resized to data1xdata2\n&lt; Window has been restored to normal size and position\n&lt; Window has been shown\n&lt; The window size has changed, either as a result of an …\n&lt; Window is being offered a focus (should …\n&lt; window should be created in high-DPI mode if supported. …\n&lt; window should always be above others\n&lt; no window decoration\n&lt; window not created by SDL\n&lt; fullscreen window\n&lt; window is not visible\n&lt; window has input focus\n&lt; window has grabbed keyboard input\n&lt; window is maximized\n&lt; window usable for Metal view\n&lt; window is minimized\n&lt; window has mouse captured (unrelated to MOUSE_GRABBED)\n&lt; window has mouse focus\n&lt; window has grabbed mouse input\n&lt; window usable with OpenGL context\n&lt; window should be treated as a popup menu\n&lt; window can be resized\n&lt; window is visible\n&lt; window should not be added to the taskbar\n&lt; window should be treated as a tooltip\n&lt; window should be treated as a utility window\n&lt; window usable for Vulkan surface\nWait indefinitely for the next available event.\nWait until the specified timeout (in milliseconds) for the …\nWait for a thread to finish.\nMove the mouse to the given position in global screen …\nMove the mouse cursor to the given position within the …\nGet a mask of the specified subsystems which are currently …\n\\brief Window state change event data (event.window.*)\n\\brief Event subtype for window events\n\\brief The flags on a window\n\\brief A struct that tags the SDL_WindowShapeParams union …\n\\brief A union containing parameters for shaped windows.\nUse this function to write 16 bits in native format to a …")