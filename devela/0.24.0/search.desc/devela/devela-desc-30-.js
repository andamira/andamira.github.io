searchState.loadedDescShard("devela", 30, "Computes the modulo of <code>self - other</code> over <code>modulus</code>, and the …\nComputes the non-negative modulo of <code>self - other</code> over |…\nComputes the modulo of <code>self - other</code> over <code>modulus</code>, and the …\nComputes the non-negative modulo of <code>self - other</code> over |…\nComputes the modulo of <code>self - other</code> over <code>modulus</code>, …\nComputes the modulo of <code>self - other</code> over |<code>modulus</code>|, …\nComputes the non-negative modulo of <code>self</code> over <code>modulus</code>, …\nFused multiply-add. Computes <code>(self * mul) + add</code> with only …\nFused multiply-add. Computes (self * mul) + add with only …\nFused multiply-add. Computes (self * mul) + add with only …\nComputes <code>(x * mul + add)</code> normally.\nAlias of <code>Nano</code>.\nReturns the name of the prefix.\nReturns the name of the prefix.\nReturns the name of the prefix.\nThe negative absolute value of <code>self</code>.\nThe negative absolute value of <code>self</code> (sets its sign to be …\nConstructs a new <code>GcdReturn</code>.\nCreates a divisor which can be used for faster computation …\nCreates a divisor which can be used for faster computation …\nAlias of <code>new</code> with a unique name that helps type inference.\nAlias of <code>new</code> with a unique name that helps type inference.\nReturns the least number smaller than self.\nReturns the least number greater than self.\nSpecialized numeric types and behaviors.\nAlias of <code>numerator</code>.\nAlias of <code>numerator</code>.\nComputes <code>|self|</code> (absolute value).\nComputes <code>|self|</code> (absolute value).\nComputes <code>|self|</code> (absolute value).\nComputes <code>self + rhs</code> (addition).\nComputes <code>self + rhs</code> (addition).\nComputes <code>self + rhs</code> (addition).\nComputes <code>self / rhs</code> (division).\nComputes <code>self / rhs</code> (division).\nComputes <code>self / rhs</code> (division).\nReturns <code>Self</code> if given a valid <code>value</code>.\nReturns <code>Self</code> if given a valid <code>value</code>.\nReturns <code>Self</code> if given a valid <code>value</code>.\nReturns <code>Self</code> if given a valid <code>&amp;value</code>.\nReturns <code>Self</code> if given a valid <code>&amp;value</code>.\nReturns <code>Self</code> if given a valid <code>&amp;value</code>.\nReturns the number one.\nReturns the number one.\nReturns the number one.\nReturns the number one.\nReturns the number one.\nReturns the number one.\nReturns the number zero.\nReturns the number zero.\nReturns the number zero.\nReturns the number zero.\nReturns the number zero.\nReturns the number zero.\nReturns the inner <code>self</code> representation.\nReturns <code>true</code> if <code>self</code> is one.\nReturns <code>true</code> if <code>self</code> is one.\nReturns <code>true</code> if <code>self</code> is one.\nReturns <code>true</code> if <code>self</code> is one.\nReturns <code>true</code> if <code>self</code> is one.\nReturns <code>true</code> if <code>self</code> is one.\nReturns <code>true</code> if <code>self</code> is zero.\nReturns <code>true</code> if <code>self</code> is zero.\nReturns <code>true</code> if <code>self</code> is zero.\nReturns <code>true</code> if <code>self</code> is zero.\nReturns <code>true</code> if <code>self</code> is zero.\nReturns <code>true</code> if <code>self</code> is zero.\nComputes <code>self * rhs</code> (multiplication).\nComputes <code>self * rhs</code> (multiplication).\nComputes <code>self * rhs</code> (multiplication).\nComputes <code>-self</code> (additive inverse).\nComputes <code>-self</code> (additive inverse).\nComputes <code>-self</code> (additive inverse).\nComputes the absolute value of <code>&amp;self</code>.\nComputes the absolute value of <code>&amp;self</code>.\nComputes the absolute value of <code>&amp;self</code>.\n<em>Like <code>num_abs</code> but takes the arguments by reference.</em>\n<em>Like <code>num_abs</code> but takes the arguments by reference.</em>\n<em>Like <code>num_abs</code> but takes the arguments by reference.</em>\nComputes <code>&amp;self + &amp;rhs</code>.\nComputes <code>&amp;self + &amp;rhs</code>.\nComputes <code>&amp;self + &amp;rhs</code>.\n<em>Like <code>num_add</code> but takes the arguments by reference.</em>\n<em>Like <code>num_add</code> but takes the arguments by reference.</em>\n<em>Like <code>num_add</code> but takes the arguments by reference.</em>\nComputes <code>&amp;mut self += &amp;rhs</code>.\nComputes <code>&amp;mut self += &amp;rhs</code>.\nComputes <code>&amp;mut self += &amp;rhs</code>.\nComputes <code>&amp;mut self += rhs;</code> (addition).\nComputes <code>&amp;mut self += rhs;</code> (addition).\nComputes <code>&amp;mut self += rhs;</code> (addition).\nComputes <code>&amp;self / &amp;rhs</code>.\nComputes <code>&amp;self / &amp;rhs</code>.\nComputes <code>&amp;self / &amp;rhs</code>.\n<em>Like <code>num_div</code> but takes the arguments by reference.</em>\n<em>Like <code>num_div</code> but takes the arguments by reference.</em>\n<em>Like <code>num_div</code> but takes the arguments by reference.</em>\nComputes <code>&amp;mut self /= &amp;rhs</code>.\nComputes <code>&amp;mut self /= &amp;rhs</code>.\nComputes <code>&amp;mut self /= &amp;rhs</code>.\nComputes <code>&amp;mut self /= rhs;</code> (division).\nComputes <code>&amp;mut self /= rhs;</code> (division).\nComputes <code>&amp;mut self /= rhs;</code> (division).\nComputes <code>&amp;self * &amp;rhs</code>.\nComputes <code>&amp;self * &amp;rhs</code>.\nComputes <code>&amp;self * &amp;rhs</code>.\n<em>Like <code>num_mul</code> but takes the arguments by reference.</em>\n<em>Like <code>num_mul</code> but takes the arguments by reference.</em>\n<em>Like <code>num_mul</code> but takes the arguments by reference.</em>\nComputes <code>&amp;mut self *= &amp;rhs</code>.\nComputes <code>&amp;mut self *= &amp;rhs</code>.\nComputes <code>&amp;mut self *= &amp;rhs</code>.\nComputes <code>&amp;mut self *= rhs;</code> (multiplication).\nComputes <code>&amp;mut self *= rhs;</code> (multiplication).\nComputes <code>&amp;mut self *= rhs;</code> (multiplication).\nComputes <code>- &amp;self</code>.\nComputes <code>- &amp;self</code>.\nComputes <code>- &amp;self</code>.\n<em>Like <code>num_neg</code> but takes the arguments by reference.</em>\n<em>Like <code>num_neg</code> but takes the arguments by reference.</em>\n<em>Like <code>num_neg</code> but takes the arguments by reference.</em>\nComputes <code>&amp;self % &amp;rhs</code>.\nComputes <code>&amp;self % &amp;rhs</code>.\nComputes <code>&amp;self % &amp;rhs</code>.\n<em>Like <code>num_rem</code> but takes the arguments by reference.</em>\n<em>Like <code>num_rem</code> but takes the arguments by reference.</em>\n<em>Like <code>num_rem</code> but takes the arguments by reference.</em>\nComputes <code>&amp;mut self %= &amp;rhs</code>.\nComputes <code>&amp;mut self %= &amp;rhs</code>.\nComputes <code>&amp;mut self %= &amp;rhs</code>.\nComputes <code>&amp;mut self %= rhs;</code> (remainder).\nComputes <code>&amp;mut self %= rhs;</code> (remainder).\nComputes <code>&amp;mut self %= rhs;</code> (remainder).\nComputes <code>&amp;self - &amp;rhs</code>.\nComputes <code>&amp;self - &amp;rhs</code>.\nComputes <code>&amp;self - &amp;rhs</code>.\n<em>Like <code>num_sub</code> but takes the arguments by reference.</em>\n<em>Like <code>num_sub</code> but takes the arguments by reference.</em>\n<em>Like <code>num_sub</code> but takes the arguments by reference.</em>\nComputes <code>&amp;mut self -= &amp;rhs</code>.\nComputes <code>&amp;mut self -= &amp;rhs</code>.\nComputes <code>&amp;mut self -= &amp;rhs</code>.\nComputes <code>&amp;mut self -= rhs;</code> (subtraction).\nComputes <code>&amp;mut self -= rhs;</code> (subtraction).\nComputes <code>&amp;mut self -= rhs;</code> (subtraction).\nComputes <code>self % rhs</code> (remainder).\nComputes <code>self % rhs</code> (remainder).\nComputes <code>self % rhs</code> (remainder).\nSets <code>self</code> to a valid <code>value</code>.\nSets <code>self</code> to a valid <code>value</code>.\nSets <code>self</code> to a valid <code>value</code>.\nSets <code>self</code> to the given valid <code>value</code>.\nSets <code>self</code> to the given valid <code>value</code>.\nSets <code>self</code> to the given valid <code>value</code>.\nSets the number to one.\nSets the number to one.\nSets the number to one.\nSets the number to one.\nSets the number to one.\nSets the number to one.\nSets <code>self</code> to a valid <code>&amp;value</code>.\nSets <code>self</code> to a valid <code>&amp;value</code>.\nSets <code>self</code> to a valid <code>&amp;value</code>.\nSets <code>self</code> to the given valid <code>&amp;value</code>.\nSets <code>self</code> to the given valid <code>&amp;value</code>.\nSets <code>self</code> to the given valid <code>&amp;value</code>.\nSets <code>self</code> to zero.\nSets <code>self</code> to zero.\nSets <code>self</code> to zero.\nSets <code>self</code> to <code>0</code>.\nSets <code>self</code> to <code>0</code>.\nSets <code>self</code> to <code>0</code>.\nComputes <code>self - rhs</code> (subtraction).\nComputes <code>self - rhs</code> (subtraction).\nComputes <code>self - rhs</code> (subtraction).\nReturns the owned version of <code>self</code>, if it can be cloned.\nReturns the owned version of <code>self</code>, if it can be cloned.\nReturns the owned version of <code>self</code>, if it can be cloned.\nReturns the numerator (the first number of the sequence).\nReturns the numerator (the first number of the sequence).\nReturns the numerator (the first number of the sequence).\nReturns the numerator (the first number of the sequence).\nComparing and ordering values.\nAlias of <code>Pico</code>.\nApproximates the partial derivative of the 2D function <code>f</code> …\nApproximates the partial derivative of the 2D function <code>f</code> …\nApproximates the partial derivative of the 2D function <code>f</code> …\nApproximates the partial derivative of the 2D function <code>f</code> …\nPermutations of <code>n</code> items taken <code>r</code> at a time, ordered.\nPermutations of <code>n</code> items taken <code>r</code> at a time, ordered.\nPermutations of <code>n</code> items taken <code>r</code> at a time with …\nPermutations of <code>n</code> items taken <code>r</code> at a time with …\nRaises <code>self</code> to the <code>y</code> floating point power.\nRaises itself to the <code>p</code> floating point power.\nRaises itself to the <code>p</code> floating point power.\nRaises itself to the <code>y</code> floating point power using the …\nRaises <code>self</code> to the <code>p</code> integer power.\nRaises <code>x</code> to the <code>p</code> integer power.\nFinds the 0-indexed <code>nth</code> prime number.\nFinds the 0-indexed <code>nth</code> prime number.\n𝟙 The prime number theorem formula.\nCounts the number of primes upto and including <code>n</code>.\nCounts the number of primes upto and including <code>n</code>.\nAlias of <code>Quecto</code>.\nQuantification and periodicity.\nAlias of <code>Ronto</code>.\nRandom number generation.\nTakes the reciprocal (inverse), $1/x$.\nReduces the given <code>value</code> to the most appropriate prefix as …\nSimplify a fraction.\nSimplify a fraction.\nSimplify a fraction.\nSimplify a fraction.\nReduces the given <code>value</code> to the most appropriate binary …\nReduces the given value to the most appropriate SI prefix …\nReduces the given value to a chain of appropriate prefixes …\nReduces the given value to a chain of appropriate binary …\nReduces the given value to a chain of appropriate SI …\nReduces the given value to a chain of appropriate prefixes …\nReduces the given value to a chain of appropriate binary …\nReduces the given value to a chain of appropriate SI …\nReduces the given value to a chain of appropriate prefixes …\nReduces the given value to a chain of appropriate binary …\nReduces the given value to a chain of appropriate SI …\nReduces the given value to the most appropriate prefix as …\nReduces the given value to the most appropriate binary …\nReduces the given value to the most appropriate SI prefix …\nReduces the given value to the most appropriate prefix as …\nReduces the given value to the most appropriate binary …\nReduces the given value to the most appropriate SI prefix …\nThe least nonnegative remainder of <code>self % rhs</code>.\nThe least non-negative remainder of <code>self</code> % <code>other</code>.\nReturns the remainder of dividing <code>n</code> by <code>self</code>.\nReturns the remainder of dividing <code>n</code> by <code>self</code>.\nReturns the ceiled integer <code>nth</code> root.\nReturns the ceiled integer <code>nth</code> root.\nReturns the floored integer <code>nth</code> root.\nReturns the floored integer <code>nth</code> root.\nThe nearest integer to <code>self</code>, default rounding, same as …\nThe nearest integer to <code>self</code>, rounding ties away from <code>0.0</code>.\nThe nearest integer to itself, rounding ties away from <code>0.0</code>.\nThe nearest integer to itself, rounding ties away from <code>0.0</code>.\nThe nearest integer to <code>self</code>, rounding ties to the nearest …\nReturns the nearest integer to <code>x</code>, rounding ties to the …\nThe nearest integer to <code>self</code>, rounding ties to the nearest …\nReturns the nearest integer, rounding ties to the nearest …\nCasts <code>self</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>i128</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>i128</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>i16</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>i16</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>i32</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>i32</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>i64</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>i64</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>i8</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>i8</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>isize</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>isize</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>isize_down</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>isize_down</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>isize_down</code> clamping at the numeric …\nCasts from <code>i16</code> to <code>isize_down</code> clamping at the numeric …\nCasts from <code>i64</code> to <code>isize_down</code> clamping at the numeric …\nCasts from <code>u8</code> to <code>isize_down</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>isize_down</code> clamping at the numeric …\nCasts from <code>u64</code> to <code>isize_down</code> clamping at the numeric …\nCasts from <code>usize</code> to <code>isize_down</code> clamping at the numeric …\nCasts from <code>u32</code> to <code>isize_down</code> clamping at the numeric …\nCasts from <code>u128</code> to <code>isize_down</code> clamping at the numeric …\nCasts from <code>i32</code> to <code>isize_down</code> clamping at the numeric …\nCasts from <code>u16</code> to <code>isize_down</code> clamping at the numeric …\nCasts <code>self</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>isize_up</code> clamping at the numeric …\nCasts from <code>usize</code> to <code>isize_up</code> clamping at the numeric …\nCasts from <code>i128</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>isize_up</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>u128</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>u128</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>u16</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>u16</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>u32</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>u32</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>u64</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>u64</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>u8</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>u8</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>i128</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>usize</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>usize</code> clamping at the numeric bounds.\nCasts <code>self</code> to <code>usize_down</code> clamping at the numeric bounds.\nCasts from <code>u128</code> to <code>usize_down</code> clamping at the numeric …\nCasts from <code>u64</code> to <code>usize_down</code> clamping at the numeric …\nCasts from <code>i64</code> to <code>usize_down</code> clamping at the numeric …\nCasts from <code>i16</code> to <code>usize_down</code> clamping at the numeric …\nCasts from <code>i32</code> to <code>usize_down</code> clamping at the numeric …\nCasts from <code>i8</code> to <code>usize_down</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>usize_down</code> clamping at the numeric …\nCasts from <code>i128</code> to <code>usize_down</code> clamping at the numeric …\nCasts from <code>isize</code> to <code>usize_down</code> clamping at the numeric …\nCasts from <code>u8</code> to <code>usize_down</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>usize_down</code> clamping at the numeric …\nCasts from <code>usize</code> to <code>usize_down</code> clamping at the numeric …\nCasts <code>self</code> to <code>usize_up</code> clamping at the numeric bounds.\nCasts from <code>i8</code> to <code>usize_up</code> clamping at the numeric bounds.\nCasts from <code>u8</code> to <code>usize_up</code> clamping at the numeric bounds.\nCasts from <code>usize</code> to <code>usize_up</code> clamping at the numeric …\nCasts from <code>u128</code> to <code>usize_up</code> clamping at the numeric bounds.\nCasts from <code>u32</code> to <code>usize_up</code> clamping at the numeric bounds.\nCasts from <code>u64</code> to <code>usize_up</code> clamping at the numeric bounds.\nCasts from <code>isize</code> to <code>usize_up</code> clamping at the numeric …\nCasts from <code>i128</code> to <code>usize_up</code> clamping at the numeric bounds.\nCasts from <code>i32</code> to <code>usize_up</code> clamping at the numeric bounds.\nCasts from <code>i16</code> to <code>usize_up</code> clamping at the numeric bounds.\nCasts from <code>u16</code> to <code>usize_up</code> clamping at the numeric bounds.\nCasts from <code>i64</code> to <code>usize_up</code> clamping at the numeric bounds.\nReturns <code>self</code> between <code>[min..=max]</code> scaled to a new range …\nReturns <code>self</code> between <code>[min..=max]</code> scaled to a new range …\nReturns a scaled value between <code>[min..=max]</code> to a new range …\nReturns a scaled value between <code>[min..=max]</code> to a new range …\nReturns a scaled value between <code>[min..=max]</code> to a new range …\nReturns a scaled value between <code>[min..=max]</code> to a new range …\nReturns the <code>Sign</code> of <code>self</code>.\nReturns the <code>Sign</code>.\nReturns the <code>Sign</code> of <code>self</code>, except for zero.\nReturns the <code>Sign</code>, returning <code>None</code> for zero\nA number that represents the sign of <code>self</code>.\nA number that represents its sign, propagating <code>NaN</code>.\nThe sine.\nThe sine.\nThe sine.\nBoth the sine and cosine.\nThe sine and cosine.\nComputes the sine and the cosine using Taylor series …\nThe sine calculated using Taylor series expansion.\nThe hyperbolic sine.\nThe hyperbolic sine.\nThe hyperbolic sine.\nThe hyperbolic sine calculated using Taylor series …\nThe integral and fractional parts ox <code>self</code>.\nThe integral and fractional parts.\nThe square root.\nSquare root.\nSquare root.\nReturns the ceiled integer square root.\nReturns the ceiled integer square root.\nThe square root calculated using the fast inverse square …\n$ \\sqrt{x} $ the square root calculated using the fast …\nReturns the floored integer square root.\nReturns the floored integer square root.\n$ \\sqrt{x} $ The square root calculated calling both …\nThe square root calculated using the Newton-Raphson method.\n$ \\sqrt{x} $ The square root calculated using the …\nReturns the rounded integer square root.\nReturns the rounded integer square root.\nReturns the subfactorial, or the number of derangements.\nReturns the subfactorial, or the number of derangements.\nReturns the symbol of the prefix.\nReturns the symbol of the prefix.\nReturns the symbol of the prefix.\nReturns the ASCII symbol of the prefix.\nReturns the ASCII symbol of the prefix.\nReturns the ASCII symbol of the prefix.\nThe tangent.\nThe tangent.\nThe tangent.\nComputes the tangent using Taylor series expansion of sine …\nThe hyperbolic tangent.\nThe hyperbolic tangent.\nThe hyperbolic tangent.\nComputes the hyperbolic tangent using Taylor series …\nConverts radians to degrees.\nConverts degrees to radians.\nCounts the number of integers $&lt;n$ that are relatively …\nCounts the number of integers $&lt;|n|$ that are relatively …\nThe integral part of <code>self</code>.\nThe integral part.\nThe integral part.\nAlias of <code>Micro</code> (alternative to µ).\n⚙️ 𝟙 A downcasted pointer-sized unsigned integer …\n⚙️ 𝟙 An upcasted pointer-sized unsigned integer …\nCasts <code>self</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>i128</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>i16</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>i32</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>i64</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>i8</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>isize</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>isize_down</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>isize_down</code> wrapping at the numeric …\nCasts from <code>i128</code> to <code>isize_down</code> wrapping at the numeric …\nCasts from <code>u8</code> to <code>isize_down</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>isize_down</code> wrapping at the numeric …\nCasts from <code>i16</code> to <code>isize_down</code> wrapping at the numeric …\nCasts from <code>i64</code> to <code>isize_down</code> wrapping at the numeric …\nCasts from <code>u64</code> to <code>isize_down</code> wrapping at the numeric …\nCasts from <code>u128</code> to <code>isize_down</code> wrapping at the numeric …\nCasts from <code>i8</code> to <code>isize_down</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>isize_down</code> wrapping at the numeric …\nCasts from <code>u32</code> to <code>isize_down</code> wrapping at the numeric …\nCasts from <code>usize</code> to <code>isize_down</code> wrapping at the numeric …\nCasts <code>self</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>isize_up</code> wrapping at the numeric …\nCasts from <code>i32</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>isize_up</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>isize_up</code> wrapping at the numeric …\nCasts <code>self</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>u128</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>u16</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>u32</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>u64</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>u8</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>u128</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>i8</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>usize</code> wrapping at the numeric bounds.\nCasts <code>self</code> to <code>usize_down</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>usize_down</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>usize_down</code> wrapping at the numeric …\nCasts from <code>i16</code> to <code>usize_down</code> wrapping at the numeric …\nCasts from <code>u128</code> to <code>usize_down</code> wrapping at the numeric …\nCasts from <code>i128</code> to <code>usize_down</code> wrapping at the numeric …\nCasts from <code>isize</code> to <code>usize_down</code> wrapping at the numeric …\nCasts from <code>usize</code> to <code>usize_down</code> wrapping at the numeric …\nCasts from <code>i64</code> to <code>usize_down</code> wrapping at the numeric …\nCasts from <code>u16</code> to <code>usize_down</code> wrapping at the numeric …\nCasts from <code>i8</code> to <code>usize_down</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>usize_down</code> wrapping at the numeric …\nCasts from <code>u64</code> to <code>usize_down</code> wrapping at the numeric …\nCasts <code>self</code> to <code>usize_up</code> wrapping at the numeric bounds.\nCasts from <code>u64</code> to <code>usize_up</code> wrapping at the numeric bounds.\nCasts from <code>u16</code> to <code>usize_up</code> wrapping at the numeric bounds.\nCasts from <code>i64</code> to <code>usize_up</code> wrapping at the numeric bounds.\nCasts from <code>i32</code> to <code>usize_up</code> wrapping at the numeric bounds.\nCasts from <code>i16</code> to <code>usize_up</code> wrapping at the numeric bounds.\nCasts from <code>usize</code> to <code>usize_up</code> wrapping at the numeric …\nCasts from <code>i8</code> to <code>usize_up</code> wrapping at the numeric bounds.\nCasts from <code>u32</code> to <code>usize_up</code> wrapping at the numeric bounds.\nCasts from <code>u8</code> to <code>usize_up</code> wrapping at the numeric bounds.\nCasts from <code>i128</code> to <code>usize_up</code> wrapping at the numeric bounds.\nCasts from <code>isize</code> to <code>usize_up</code> wrapping at the numeric …\nCasts from <code>u128</code> to <code>usize_up</code> wrapping at the numeric bounds.\nThe first Bézout’s coefficient <code>x</code>.\nThe second Bézout’s coefficient <code>y</code>.\nAlias of <code>Yocto</code>.\nThe bessel function of the second kind, of order 0.\nThe bessel function of the second kind, of order 0.\nThe bessel function of the second kind, of order 1.\nThe bessel function of the second kind, of order 1.\nBessel function of the second kind, of order <code>n</code>.\nAlias of <code>Zepto</code>.\nLinear algebra.\nGeometric measurement and spatial relationships.\nGeometric shapes: points, angles, extents, polygons, …\n📐 A static <code>R×C</code> shaped matrix backed by an array.\n📐 A common trait for all vectors.\nThe associated scalar type.\n📐 A dynamic vector, backed by a primitive <code>Vec</code>.\n📐 A static <code>D</code>-dimensional vector, backed by a primitive …\n📐 A static 2-dimensional vector.\n📐 A static 3-dimensional vector.\nThe vector coordinates in some basis.\nThe vector coordinates in some basis.\nThe vector coordinates in some basis.\nThe vector coordinates in some basis.\nInternal storage of matrix elements in a fixed-size array.\n0° and &lt; 90°\n📐 An angle represents a fraction of a full rotation.\n📐 The direction of rotation of an angle.\n📐 The kind of <code>Angle</code>, based on its normalized turn.\n📐 A separation between two locations in <code>D</code>-dimensional …\n📐 An orthogonal extension in <code>D</code>-space without a …\n= 0º = 360º (1τ = 2π), a full turn, or no turn.\nBy convention, <strong>negative</strong> angles represent a <strong>clockwise</strong> …\n90° and &lt; 180°.\n📐 A unitless directional vector in <code>D</code>-dimensional space.\n📐 A location in <code>D</code>-dimensional space.\nBy convention, <strong>positive</strong> angles represent a <strong>counterclockwise</strong>…\n180° and &lt; 360°.\n📐 A <code>Position</code>ed <code>Extent</code>.\n📐 A <code>Stride</code>d <code>Region</code> defining structured traversal.\n= 90° (¼τ), a quarter turn.\n= 180° (½τ), a half turn.\n📐 A step size for traversing dimensions or repetitions.\nAn undefined direction can occur when a full-turn angle is …\nThe component-wise separation in <code>D</code>-dimensional space.\nThe size values in <code>D</code>-dimensional space.\nThe coordinate values in <code>D</code>-dimensional space.\nThe directional components in <code>D</code>-dimensional space.\nThe step sizes per dimension.\nThe positioned extent.\nThe step size per dimension.\nA unit-agnostic rotation.\n📐 A coordinate position in <code>D</code>-space without extent.\n📐 A specific position in 2d-space without a size.\n📐 A specific position in 3d-space without a size.\n📐 A static sequence of <code>N</code> <code>D</code>-dimensional <code>Point</code>s.\n📐 A static sequence of 2-dimensional <code>Point</code>s.\n📐 A dynamic sequence of <code>D</code>-dimensional <code>Point</code>s.\nThe array of points.\nThe array of points.\nThe D-dimensional coordinates.\nThe D-dimensional coordinates.\nThe D-dimensional coordinates.\nThe vec of points.\nAllows to convert compile-time constants into type-level …\nA type-level logical <em>false</em>.\nA type-level logical <em>true</em>.\nThe constant value of the type-level boolean.\nThe resulting type-level boolean (<code>True</code> or <code>False</code>).\nConverts a <em>const</em> <code>bool</code> expression to a type-level boolean.\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙⚗️ <code>core</code> A value that is known not to equal zero.\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n<code>core</code> Provides intentionally-saturating arithmetic on <code>T</code>.\n🚩 <code>core</code> The error type returned when a checked integral …\n<code>core</code> Provides intentionally-wrapped arithmetic on <code>T</code>.\nCreates a <code>NonExtreme*</code> <code>niche</code> value with compile-time …\nCreates a <code>NonZero*</code> <code>niche</code> value with compile-time checking.\n🌐 Provides comparing methods for <code>T</code>.\n<code>core</code> Trait for comparisons corresponding to equivalence …\n<code>core</code> Derive macro generating an impl of the trait <code>Eq</code>.\nAn ordering where a compared value is equal to another.\nAn ordering where a compared value is greater than another.\nAn ordering where a compared value is less than another.\n<code>core</code> Trait for types that form a total order.\n<code>core</code> Derive macro generating an impl of the trait <code>Ord</code>. The …\n⚖️ <code>core</code> The result of a comparison between two values.\n<code>core</code> Trait for comparisons using the equality operator.\n<code>core</code> Derive macro generating an impl of the trait <code>PartialEq</code>…\n<code>core</code> Trait for types that form a partial order.\n<code>core</code> Derive macro generating an impl of the trait …\n<code>core</code> A helper struct for reverse ordering.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nThis method returns an <code>Ordering</code> between <code>self</code> and <code>other</code>.\nTests for <code>self</code> and <code>other</code> values to be equal, and is used …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nTests for <code>!=</code>. The default implementation is almost always …\nThis method returns an ordering between <code>self</code> and <code>other</code> …\n📏 A repeating cycle defined by a fundamental period.\n📏 A cycle that repeats a fixed number of times.\n📏 A range of values with <code>lower</code> and <code>upper</code> <code>Bound</code>s.\n📏 A generic ratio representing a proportional …\nThe total number of repetitions.\nThe underlying repeating cycle.\nThe denominator.\n📏 Creates an <code>Interval</code> using extended range notation.\nThe lower bound (also known as the <em>start</em> bound, or the <em>left</em>…\nThe numerator.\nThe fundamental period of the cycle.\nThe upper bound (also known as the <em>end</em>, bound or the <em>right</em> …\n🎲 A 16-bit LCG PRNG.\n🎲 X ABC PRNG for 8-bit devices.\n🎲 The <code>XorShift128</code> PRNG.\n🎲 The <code>XorShift128+</code> PRNG.\n🎲 The <code>XorShift16</code> PRNG.\n🎲 The <code>XorShift32</code> PRNG.\n🎲 The <code>XorShift64</code> PRNG.\n🎲 The <code>XorShift8</code> PRNG.\n🎲 The <code>Xoroshiro128++</code> PRNG.\n🎲 A simple 8-bit PRNG with 32-bit of state, based on …\n🎲 A simple 8-bit PRNG with 32-bit of state, based on …\n🎲 Constructs a <em>XorShift</em> prng with custom bits, basis, …\nBilogy-related abstractions, bio-algorithms.\nChemistry-related abstractions.\nElectrical and electronic abstractions.\nMechanics-related abstractions.\nTime and calendar types and operations.\nPhysical units of measure.\nWavelets.\n🕘 <code>core</code> A span of time, with <code>u64</code> seconds and <code>u32</code> …\n🕘🚩 <code>core</code> Error returned from converting …\nEtymology\nThe first day of the week, according to the ISO-8601 …\n🕘 The months of the year.\n∅ 🕘 Represents the absence of time.\nEtymology\nDefault time granularity.\nEtymology\n🕘 <code>std</code> A measurement of a monotonically nondecreasing …\n🕘 <code>std</code> A measurement of the system clock.\nEtymology\n🕘 A signed duration of time, stored as an <code>(i64, i32)</code> …\nRepresents standard time granularities from years to …\n🕘 A source of timestamps with a known granularity and …\n🕘 A full time split from years to nanoseconds.\n🕘 A time split from hours to nanoseconds.\n🕘 A time split from hours to seconds, normalized <em>(128b </em>…\n🕘 A time split from hours to seconds.\n🕘 A time split from hours to seconds, normalized <em>(128b </em>…\n🕘 A time split from milliseconds to nanoseconds.\n🕘 A time split from milliseconds to nanoseconds, …\n🕘 A time split from years to nanoseconds, normalized …\n🕘 A time split from years to days.\n🕘 A time split from years to days, normalized <em>(128b </em>…\n🕘 A time split from years to seconds.\n🕘 A time split from years to seconds, normalized <em>(128b </em>…\n🕘 Timecode splitting and formatting.\nEtymology\n🕘 <code>std</code> A <code>SystemTime</code> anchored to “1970-01-01 00:00:00 …\n🕘 64-bit Unix time, supporting negative values.\n🕘 32-bit Unix time, supporting only non-negative values.\nEtymology\n🕘 The days of the week.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nReturns the epoch offset in microseconds.\nReturns the epoch offset in milliseconds.\nReturns the current timestamp as an <code>f64</code> value in …\nReturns the epoch offset in nanoseconds.\nReturns the granularity of this time source.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\n🕘 Returns <code>true</code> if the provided <code>year</code> is a leap year.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMinutes.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMonths.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nMilliseconds.\nReturns the current timestamp in microseconds.\nReturns the current timestamp in milliseconds.\nReturns the current timestamp as an <code>f64</code> value in …\nReturns the current timestamp in nanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nNanoseconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nSeconds.\nThe number of seconds relative the Unix Epoch.\nThe number of seconds since the Unix Epoch.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nMicroseconds.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nYears.\nRepresents the base approximation in the wavelet transform,\nRepresents the detail component in the wavelet transform, …\nTrait for lossy compression of wavelet coefficients.\nA Haar wavelet is a simple, piecewise-constant wavelet.\nTrait defining essential wavelet transform operations.\nDistinguishes the role of a component in wavelet analysis.\nA single unit of the wavelet decomposition at a specific …\nThe type of the wavelet component (scaling or wavelet).\nCompresses wavelet coefficients by thresholding small …\nComputes the forward wavelet transform on the given input.\nComputes the inverse wavelet transform on the given …\nResolution level of the component, indicating its level of …\nPosition index of the component within the resolution …\nCoefficient values defining the component’s shape.\nArchitecture-specific intrinsics.\nInspection and manipulation of the process’s environment.\nFilesystem abstractions.\nI/O functionality.\nLogging functionality.\nMemory management. mem::{cell} \nNetworking functionality.\nOS-specific. os::{linux} \n🌐 Arch-related functionality.\n🌐 A Wasm namespace.\n<code>safe_arch</code> Turns a comparison operator token to the correct …\n<code>safe_arch</code> Turns a round operator token to the correct …\n<code>core</code> Inline assembly.\n<code>std</code> Tests at <em>runtime</em> whether an <code>aarch64</code> feature is enabled.\n<code>std</code> Tests at <em>runtime</em> whether an <code>x86/x86-64</code> feature is …\n<code>core</code> Module-level inline assembly.\n<code>safe_arch</code> The data for a 128-bit SSE register of four <code>f32</code> …\n<code>safe_arch</code> The data for a 128-bit SSE register of two <code>f64</code> …\n<code>safe_arch</code> The data for a 128-bit SSE register of integer …\n<code>safe_arch</code> The data for a 256-bit AVX register of eight <code>f32</code> …\n<code>safe_arch</code> The data for a 256-bit AVX register of four <code>f64</code> …\n<code>safe_arch</code> The data for a 256-bit AVX register of integer …\nApple enviroment for directories.\nApplication specific metadata.\nManages directory paths in an environment-aware manner.\nUnix enviroment for directories.\nWindows enviroment for directories.\nXdg enviroment for directories.\n🌐 A namespaced wrapper for <code>std::env</code> functions and …\n🔄 <code>std</code> Iterates over the arguments of a process, …\n🔄 <code>std</code> Iterates over the arguments of a process, …\n🔄 <code>std</code> An iterator that splits an environment variable …\n🔄 <code>std</code> An iterator over a snapshot of the environment …\n🔄 <code>std</code> An iterator over a snapshot of the environment …\n🚩 <code>std</code> Returned from [Env::join_paths][…\nThe specified environment variable was not present in the …\nThe specified environment variable was found, but it did …\n🚩 <code>std</code> Returned from [<code>Env::var</code>][crate::Env#method.var].\nGets the cache directory.\nGets the configuration directory.\nGets the data directory.\nGets the home directory.\nConstructs a path inside your application’s cache …\nConstructs a path inside your application’s …\nConstructs a path inside your application’s data …\nConstructs a path inside your application’s runtime …\nConstructs a path inside your application’s state …\nConstructs a path inside the temporary directory.\nGets the runtime directory.\nGets the state directory.\nGets the temporary directory.\n<code>core</code> Inspects an environment variable at compile time.\n<code>core</code> Optionally inspects an environment variable at …\nA reference to the current directory, i.e., <code>.</code>.\nDevice namespace prefix, e.g., <code>\\\\.\\COM42</code>.\n<code>std</code> A builder used to create directories in various …\n<code>std</code> Entries returned by the ReadDir iterator.\nPrefix <code>C:</code> for the given disk drive.\n🌐 Extension trait providing additional methods for <code>Path</code> …\n<code>std</code> An object providing access to an open file on the …\n<code>std</code> Metadata information about a file.\n<code>std</code> Options and flags which can be used to configure how a …\n<code>std</code> Representation of the various permissions on a file.\n<code>std</code> Representation of the various timestamps on a file.\n<code>std</code> Represents a type of file with accessors for each file …\n🌐 Filesystem-related operations.\n🌐 A more featureful wrapper over <code>PathBuf</code>.\n🔄 <code>std</code> Iterator over the entries in a directory.\n🔄 <code>std</code> An iterator over the [<code>IterPathComponents</code>] of a …\n🔄 <code>std</code> An iterator over <code>Path</code> and its ancestors.\n🔄 <code>std</code> An iterator over the Components of a Path.\nA normal component, e.g., <code>a</code> and <code>b</code> in <code>a/b</code>.\nA reference to the parent directory, i.e., <code>..</code>.\n<code>std</code> A slice of a path (akin to <code>str</code>).\n<code>std</code> An owned, mutable path (akin to <code>String</code>).\n<code>std</code> A single component of a path.\n<code>std</code> Helper struct for safely printing paths with <code>format!</code> …\n<code>std</code> Windows path prefixes, e.g., <code>C:</code> or <code>\\\\server\\share.</code>\n<code>std</code> Wraps a Windows path prefix as well as its unparsed …\n🚩 <code>std</code> An error returned from <code>Path::strip_prefix</code> if the …\nA Windows path prefix, e.g., <code>C:</code> or <code>\\\\server\\share</code>.\nThe root directory component, appears after any prefix and …\nThe primary separator string of path components for the …\nThe primary separator char of path components for the …\nPrefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>, e.g. …\nVerbatim prefix, e.g., <code>\\\\?\\cat_pics</code>.\nVerbatim disk prefix, e.g., <code>\\\\?\\C:</code>.\nVerbatim prefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>,\nMakes the given path absolute without accessing the …\nDetermines whether the character is one of the permitted …\nThe inner <code>PathBuf</code>.\nMakes the current path absolute without accessing the …\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nAn entity already exists, often a file.\nProgram argument list too long.\nThe operation failed because a pipe was closed.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nCross-device or cross-filesystem (hard) link or rename.\nDeadlock (avoided).\nA non-empty directory was specified where an empty …\nContains the error value\nExecutable file is busy.\nFile larger than allowed or supported.\nLoop in the filesystem or IO subsystem; often, too many …\nThe remote host is not reachable.\nThe operation was partially successful and needs to be …\nThis operation was interrupted.\nData not valid for the operation were encountered.\nA filename was invalid.\nA parameter was incorrect.\n🌐 I/O-related operations.\n<code>?std</code> A type of <code>Read</code>er which has an internal buffer.\n<code>?std</code> Adds buffering to any reader.\n<code>?std</code> Wraps a writer and buffers its output.\n<code>?std</code> An iterator over <code>u8</code> values of a reader.\n<code>?std</code> Adapter to chain together two readers.\n<code>?std</code> Wraps an in-memory buffer and provides it with an […\n<code>std</code> Ignores any data written via [<code>IoWrite</code>], and read via […\n🚩+ <code>?std</code> Error type for [<code>IoRead</code>], [<code>IoWrite</code>], [<code>IoSeek</code>] …\n🚩+ <code>?std</code> A list specifying general categories of I/O …\n🚩 <code>std</code> An error returned by [<code>IoBufWriter::into_inner</code>]\n<code>?std</code> Like <code>BufWriter</code>, but flushing whenever a newline (<code>0x0a</code>…\n<code>std</code> An iterator over the lines of an instance of [<code>IoBufRead</code>…\n<code>?std</code> Allows for reading bytes from a source.\n<code>std</code> A reader which yields one byte over and over and over …\n⚖️ <code>?std</code> A specialized <code>Result</code> type for I/O operations.\n<code>?std</code> Provides a cursor which can be moved within a stream …\n<code>std</code> A writer which will move data into the void.\n<code>std</code> A buffer type used with <code>IoWrite::write_vectored</code>.\n<code>std</code> A buffer type used with <code>IoRead::read_vectored</code>.\n<code>std</code> An iterator over the contents of an instance of …\n<code>?std</code> Reader adapter which limits the bytes read from an …\n<code>?std</code> A trait for objects which are byte-oriented sinks.\nThe filesystem object is, unexpectedly, a directory.\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nA filesystem object is, unexpectedly, not a directory.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nSeek on unseekable file.\nContains the success value\nA custom error that does not fall under any other I/O …\nAn operation could not be completed, because it failed to …\nThe operation lacked the necessary privileges to complete.\nFilesystem quota or some other kind of quota was exceeded.\nThe filesystem or storage medium is read-only, but a write …\nResource is busy.\nStale network file handle.\n<code>std</code> A handle to the standard error stream of a process.\n<code>std</code> A locked reference to the <code>Stderr</code> handle.\n<code>std</code> A handle to the standard input stream of a process.\n<code>std</code> A locked reference to the <code>Stdin</code> handle.\n<code>std</code> A handle to the global standard output stream of the …\n<code>std</code> A locked reference to the <code>Stdout</code> handle.\nThe underlying storage (typically, a filesystem) is full.\nThe I/O operation’s timeout expired, causing it to be …\nToo many (hard) links to the same filesystem object.\nAn error returned when an operation could not be completed …\nThis operation is unsupported on this platform.\nThe operation needs to block to complete, but the blocking …\nAn error returned when an operation could not be completed …\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nCreates an adapter which will chain this stream with …\nCreates an adapter which will chain this stream with …\nCreates an adapter which will chain this stream with …\nMarks the given <code>amount</code> of additional bytes from the …\nReturns the contents of the internal buffer, filling it …\nFlushes this output stream, ensuring that all …\nChecks if there is any data left to be <code>read</code>.\nChecks if there is any data left to be <code>read</code>.\nChecks if there is any data left to be <code>read</code>.\nDetermines if this <code>Read</code>er has an efficient <code>read_vectored</code> …\nDetermines if this <code>Read</code>er has an efficient <code>read_vectored</code> …\nDetermines if this <code>Read</code>er has an efficient <code>read_vectored</code> …\nDetermines if this <code>Write</code>r has an efficient <code>write_vectored</code> …\nDetermines if this <code>Write</code>r has an efficient <code>write_vectored</code> …\nDetermines if this <code>Write</code>r has an efficient <code>write_vectored</code> …\nReturns an iterator over the lines of this reader.\nReturns an iterator over the lines of this reader.\nReturns an iterator over the lines of this reader.\nPull some bytes from this source into the specified …\nPull some bytes from this source into the specified buffer.\nPull some bytes from this source into the specified buffer.\nPull some bytes from this source into the specified buffer.\nReads the exact number of bytes required to fill <code>cursor</code>.\nReads the exact number of bytes required to fill <code>cursor</code>.\nReads the exact number of bytes required to fill <code>cursor</code>.\nReads the exact number of bytes required to fill <code>buf</code>.\nReads the exact number of bytes required to fill <code>buf</code>.\nReads the exact number of bytes required to fill <code>buf</code>.\nReads all bytes until a newline (the <code>0xA</code> byte) is reached, …\nReads all bytes until a newline (the <code>0xA</code> byte) is reached, …\nReads all bytes until a newline (the <code>0xA</code> byte) is reached, …\nReads all bytes until EOF in this source, placing them …\nReads all bytes until EOF in this source, placing them …\nReads all bytes until EOF in this source, placing them …\nReads all bytes until EOF in this source, appending them …\nReads all bytes until EOF in this source, appending them …\nReads all bytes until EOF in this source, appending them …\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nLike <code>read</code>, except that it reads into a slice of buffers.\nLike <code>read</code>, except that it reads into a slice of buffers.\nLike <code>read</code>, except that it reads into a slice of buffers.\nRewind to the beginning of a stream.\nRewind to the beginning of a stream.\nRewind to the beginning of a stream.\nSeek to an offset, in bytes, in a stream.\nSeeks relative to the current position.\nSeeks relative to the current position.\nSeeks relative to the current position.\nSkips all bytes until the delimiter <code>byte</code> or EOF is reached.\nSkips all bytes until the delimiter <code>byte</code> or EOF is reached.\nSkips all bytes until the delimiter <code>byte</code> or EOF is reached.\nReturns an iterator over the contents of this reader split …\nReturns an iterator over the contents of this reader split …\nReturns an iterator over the contents of this reader split …\nReturns the length of this stream (in bytes).\nReturns the length of this stream (in bytes).\nReturns the length of this stream (in bytes).\nReturns the current seek position from the start of the …\nReturns the current seek position from the start of the …\nReturns the current seek position from the start of the …\nCreates an adapter which will read at most <code>limit</code> bytes …\nCreates an adapter which will read at most <code>limit</code> bytes …\nCreates an adapter which will read at most <code>limit</code> bytes …\nWrites a buffer into this writer, returning how many bytes …\nAttempts to write an entire buffer into this writer.\nAttempts to write an entire buffer into this writer.\nAttempts to write an entire buffer into this writer.\nAttempts to write multiple buffers into this writer.\nAttempts to write multiple buffers into this writer.\nAttempts to write multiple buffers into this writer.\nWrites a formatted string into this writer, returning any …\nWrites a formatted string into this writer, returning any …\nWrites a formatted string into this writer, returning any …\nLike <code>write</code>, except that it writes from a slice of buffers.\nLike <code>write</code>, except that it writes from a slice of buffers.\nLike <code>write</code>, except that it writes from a slice of buffers.\nThe “debug” level.\nCorresponds to the <code>Debug</code> log level.\nThe “error” level.\nCorresponds to the <code>Error</code> log level.\n🌐 Extension trait providing additional methods for …\nThe “info” level.\nCorresponds to the <code>Info</code> log level.\n🌐 Log-related operations.\nConfiguration for a logger.\n<code>log</code> An enum representing the available verbosity levels of …\n<code>log</code> An enum representing the available verbosity level …\n<code>log</code> Metadata about a log message.\n<code>log</code> The “payload” of a log message.\n<code>log</code> A trait encapsulating the operations required of a …\n🚩 <code>log</code> Returned by [<code>set_logger</code>][crate::Log::set_logger] …\nA level lower than all log levels.\nThe “trace” level.\nCorresponds to the <code>Trace</code> log level.\nThe “warn” level.\nCorresponds to the <code>Warn</code> log level.\nReturns the logger as a <code>Logger</code> trait object.\nReturns a reference of the configuration.\n<code>log</code> Logs a message at the indicated level.\nDetermines if a log message with the specified metadata …\n<code>log</code> Logs a message at the indicated level.\nFlushes any buffered records.\n<code>log</code> Logs a message at the indicated level.\nReturns the level filter for this logger.\nLogs the <code>Record</code>.\n<code>log</code> Logs a message at the indicated level.\n<code>log</code> Logs a message at the indicated level.\n<code>log</code> Logs a message at the indicated level.\n🌐 Memory-allocation-related operations.\nAllocate new memory via the global allocator.\nThe bit size of this type (only the relevant data part, …\nThe alignment of this type in bytes.\nThe size of this type in bytes.\nControls how memory is provided for a value.\nThe owned counterpart.\n<code>core</code> A zero-sized marker for a <code>Storage</code> type that wraps its …\nA no-op pointer type, like a <code>Box</code> but without affecting how …\nType size information in bits.\n<code>core</code> A trait for borrowing data.\n<code>core</code> A trait for mutably borrowing data.\nBorrowed data.\nA borrowed value.\n<code>alloc</code> A pointer type that uniquely owns a heap allocation …\nA zero-sized marker for a <code>Storage</code> type that wraps its data …\nReuse an existing exclusive buffer.\n🧺 A simple, single-threaded bump allocator.\nType size information in bytes.\nAligns and pads a value to the length of a cache line.\n<code>alloc</code> A clone-on-write smart pointer.\nA marker object representing the current instance of a …\nA guard that temporarily sets a global current pointer for …\n<code>core</code> Opaque type representing the discriminant of an enum.\n🌐 Extension trait for type memory information and …\n🌐 Extension trait providing additional methods for <code>&amp;[T]</code>.\n🌐 Extension trait providing additional methods for …\nRepresents a fat pointer with separate data and metadata …\n<code>alloc</code> A memory allocator that can be registered as the …\nThe rounded up byte size for this type.\n<code>core</code> A wrapper to inhibit compiler from automatically …\nA container that may hold either a borrowed or owned value.\n<code>core</code> A wrapper type to construct uninitialized instances …\n🌐 Memory-related operations.\nMarker trait to verify memory alignment between two types.\n<code>alloc</code> Layout of a block of memory.\n🚩 <code>alloc</code> The [<code>MemLayout</code>] parameters violated constraints.\nIndicates a type is Plain Old Data, and meets specific …\nKnow whether dropping values of this type matters, in …\nOwned data.\nAn owned, heap-allocated value.\nThe resulting type after obtaining ownership.\nDefines the relationship between a borrowed type and its …\n<code>core</code> A pointer which pins its pointee in place.\nA wrapper for structurally pinned data.\n🌐 Pointer-related operations.\n<code>core</code> <code>*mut T</code> but non-zero and <em>covariant</em>.\n<code>alloc</code> A single-threaded reference-counting pointer.\n<code>alloc</code> A version of <code>Rc</code> that holds a non-owning reference to …\n<code>core</code> Types with a constant size known at compile time.\n🌐 Slice-related operations, most of them <em>const</em>.\nAllows to be generic in respect of the data storage.\nThe stored associated type.\n<code>std</code> The default memory allocator provided by the operating …\n<code>alloc</code> A generalization of Clone to borrowed data.\n🧺 A WebAssembly global memory allocator that uses a …\nAllocates memory as described by the given <code>layout</code>.\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nReturns the instance’s data as a slice of bytes.\nReturns the instance’s data as a mutable slice of bytes.\nAsserts that the memory alignment of the <code>Candidate</code> type …\nReturns the bit size of this type (only the relevant data …\nImmutably borrows from an owned value.\nMutably borrows from an owned value.\nReturns the alignment of this type in bytes.\nReturns the size of this type in bytes.\nShareable mutable containers.\nUses borrowed data to replace owned data, usually by …\nUses borrowed data to replace owned data, usually by …\nUses borrowed data to replace owned data, usually by …\nUses borrowed data to replace owned data, usually by …\nUses borrowed data to replace owned data, usually by …\nUses borrowed data to replace owned data, usually by …\nUses borrowed data to replace owned data, usually by …\nUses borrowed data to replace owned data, usually by …\nUses borrowed data to replace owned data, usually by …\nSwaps two mutable variables in a <em>compile-time</em> friendly …\nDeallocates the block of memory at the given <code>ptr</code> pointer …\n<code>core</code> Compares the addresses of the two function pointers …\nReturns a new instance constructed from the given bytes.\nChecks if the <code>Candidate</code>’s alignment is compatible with …\n𝐓 Joins multiple byte slices or string slices in …\nReturns the minimum alignment of the type in bytes.\nReturns the alignment of the pointed-to value in bytes.\nView a <code>Sync + Unpin</code> <code>self</code> as <code>&amp;[u8]</code>.\nView a <code>Sync + Unpin</code> <code>self</code> as <code>&amp;mut [u8]</code>.\nBitwise-copies a value.\nDrops <code>self</code> by running its destructor.\nForgets about <code>self</code> <em>without running its destructor</em>.\nReturns <code>true</code> if dropping values of this type matters.\nReplaces <code>self</code> with other, returning the previous value of …\nReturns the size of a type in bytes.\nReturns the size of the pointed-to value in bytes.\nSwaps the value of <code>self</code> and <code>other</code> without deinitializing …\nReplaces <code>self</code> with its default value, returning the …\nReturns the value of type <code>T</code> represented by the all-zero …\nReturns the value of type <code>T</code> represented by the all-zero …\nReturns the rounded up byte size for this type.\nReturns the static name of the storage implementation.\n<code>core</code> Expands to the offset in bytes of a field from the …\n<code>core</code> Constructs a Pin&lt;&amp;mut T&gt;, by pinning a <code>value: T</code> …\nReturns the size ratio between <code>Ptr::BYTES</code> and <code>BYTE_SIZE</code>.\nShrinks or grows a block of memory to the given <code>new_size</code> …\nShrinks or grows a block of memory to the given <code>new_size</code> …\nShrinks or grows a block of memory to the given <code>new_size</code> …\nShrinks or grows a block of memory to the given <code>new_size</code> …\nShrinks or grows a block of memory to the given <code>new_size</code> …\nShrinks or grows a block of memory to the given <code>new_size</code> …\nReturns the size of an expression in bytes.\nConverts <code>&amp;[T]</code> to <code>[U; N]</code> when <code>U</code> implements <code>From&lt;T&gt;</code>.\nConverts <code>&amp;[T]</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements <code>From&lt;T&gt;</code>.\nReturns a left subslice of <code>slice</code> with the given maximum <code>len</code>…\nReturns a mutable left subslice of <code>slice</code> with the given …\nReturns a middle subslice of <code>slice</code> with the given maximum …\nReturns a mutable middle subslice of <code>slice</code> with the given …\nReturns a middle subslice of <code>slice</code> with the given maximum …\nReturns a mutable middle subslice of <code>slice</code> with the given …\nReturns a right subslice of <code>slice</code> with the given maximum …\nReturns a mutable right subslice of <code>slice</code> with the given …\nTries to convert <code>&amp;[T]</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements …\nCreates owned data from borrowed data, usually by cloning.\n<code>core</code> Reinterprets the bits of a value of one type as …\nReturns a new instance contrcuted from zeroes.\n<code>core</code> A mutable memory location.\n🌐 Extension trait providing additional methods for …\n<code>core</code> A value which is initialized on the first access.\n<code>core</code> A cell which can nominally be written to only once.\n<code>core</code> A wrapper type for an inmutably borrowed value from a …\n<code>core</code> A mutable memory location with dynamically checked …\n🚩 <code>core</code> An error returned by <code>RefCell::try_borrow</code>.\n🚩 <code>core</code> An error returned by <code>RefCell::try_borrow_mut</code>.\n<code>core</code> A wrapper type for a mutably borrowed value from a …\n<code>core</code> The core primitive for interior mutability in Rust.\nModifies the value inside the <code>Cell&lt;Option&lt;T&gt;&gt;</code> by applying …\nModifies the value inside the <code>Cell&lt;Option&lt;T&gt;&gt;</code> by applying …\nModifies the value inside the <code>Cell&lt;Option&lt;T&gt;&gt;</code> by applying …\n🚩 <code>core</code> An error which can be returned when parsing an …\nBoth the reading and the writing portions of the <code>TcpStream</code> …\n<code>core</code> An IP address, either IPv4 or IPv6.\n<code>core</code> An IPv4 address.\n<code>core</code> An IPv6 address.\nReturned iterator over socket addresses which this type …\nThe reading portion of the <code>TcpStream</code> should be shut down.\n<code>core</code> An internet socket address, either IPv4 or IPv6.\n<code>core</code> An IPv4 socket address.\n<code>core</code> An IPv6 socket address.\n🔄 <code>std</code> An iterator that infinitely accepts connections …\n<code>std</code> A TCP socket server, listening for connections.\n<code>std</code> Possible values which can be passed to the …\n<code>std</code> A TCP stream between a local and a remote socket.\n<code>std</code> Objects which can be converted or resolved to one or …\n<code>std</code> A UDP socket.\nAn IPv4 address.\nAn IPv4 socket address.\nAn IPv6 address.\nAn IPv6 socket address.\nThe writing portion of the <code>TcpStream</code> should be shut down.\nConverts this object to an iterator of resolved <code>SocketAddr</code>…\nLinux-specific definitions\nPrints to the standard error.\nPrints to the standard error, with a newline.\nPrints to the standard output.\nPrints to the standard output, with a newline.\nContains the error value\nThe input was not a valid UTF-8 sequence.\nLinux <code>sys/syscall.h</code> constants for the current compilation …\n🌐 Linux-related operations.\n🚩+ Represents a Linux-related error.\n⚖️ The return type for Linux-related functions that …\nNo input was available (e.g., when reading from stdin).\nContains the success value\nAn error reported by the system, containing a <code>LINUX_ERRNO</code> …\nLinux-specific extensions to <code>std::io</code>.\nDefines the program entry point and main function …\nLinux-specific extensions to <code>std::process</code>.\nLinux-specific extensions to <code>std::thread</code>.\n<code>LinuxTermios</code> control flags.\n<code>LinuxTermios</code> input flags.\n<code>LinuxTermios</code> local flags.\n<code>LinuxTermios</code> output flags.\nFile status structure matching libc’s stat (man 2 stat)\nRepresents the <code>termios</code> structure from libc, used to …\n…\nControl flags.\nInput flags.\nLocal flags.\n…\nOutput flags.\nLast access time (nanoseconds).\nLast access time (nanoseconds).\nBlock size for filesystem I/O.\nNumber of 512B blocks allocated.\nLast status change time.\nLast status change time (nanoseconds).\nDevice ID containing file.\nGroup ID of owner.\nInode number.\nFile type and mode.\nLast modification time.\nLast modification time (nanoseconds).\nHard link count.\nDevice ID (if special file).\nTotal size, in bytes.\nUser ID of owner.\nLinux flag constants for <code>LinuxSigaction</code>.\nLinux standard signals constants.\nExamine and change a signal action.\nAdditional information about a signal.\nA set of linux signals.\nAn array of signals.\nRepresents the <code>timespec</code> structure from libc. Time in …\nNumber of nanoseconds.\nNumber of whole seconds.\nU+0006\nU+0026\nU+0027\n🌐 Provides ASCII operations on <code>T</code>, most of them <em>const</em>.\nOne of 128 Unicode characters (<code>U+0000</code> to <code>U+007F</code>), the …\nU+0009\nU+002A\nU+0008\nU+0007\nU+0018\nThe given capacity did not match the required constraints.\nU+0041\nU+0042\nU+0043\nU+0044\nU+0045\nU+0046\nU+0047\nU+0048\nU+0049\nU+004A\nU+004B\nU+004C\nU+004D\nU+004E\nU+004F\nU+0050\nU+0051\nU+0052\nU+0053\nU+0054\nU+0055\nU+0056\nU+0057\nU+0058\nU+0059\nU+005A\nU+000D\n🌐 Unicode scalars-related operations.\nAn invalid given character was found.\nU+005E\nU+003A\nU+002C\nU+0040\nU+0010\nU+007F\nU+0014\nU+0011\nU+0013\nU+0012\nU+0030\nU+0031\nU+0032\nU+0033\nU+0034\nU+0035\nU+0036\nU+0037\nU+0038\nU+0039\nU+0024\nThe requested element has not been found.\nU+0019\nU+0003\nU+0004\nU+0017\nU+0005\nU+003D\nContains the error value\nU+001B\nU+0021\nU+000C\nU+002E\n𝐓 Common trait for EGC types.\n𝐓 An EGC backed by a <code>StringNonul</code>.\n𝐓 An EGC backed by a <code>String</code>.\nAn EGC backed by an <code>StringU8</code>.\nU+0060\nU+003E\nU+002D\nU+001C\nU+001F\nU+001D\nU+001E\n🚩 An invalid given character was found.\nAn invalid given character was found.\n🚩+ 𝐓 An error composite of <code>InvalidChar</code> + <code>InvalidUtf8</code> …\n🚩 Invalid Utf-8 found while interpreting a byte …\nInvalid Utf-8 found while interpreting a byte sequence.\n🔄 <code>core</code> An iterator over the <code>char</code>s of a string slice.\nU+007B\nU+0028\nU+005B\nU+003C\nU+000A\nU+000B\nU+005F\nThe highest unicode scalar that can be represented.\nThe highest unicode scalar a <code>char7</code> can represent, <code>&#39;\\u{7F}&#39;</code>.\nThe highest unicode scalar a <code>char8</code> can represent, <code>&#39;\\u{FF}&#39;</code>.\nThe highest unicode scalar a <code>char16</code> can represent, …\nThe maximum number of decimal digits a <code>u32</code> can represent.\nThe maximum number of decimal digits a <code>u128</code> can represent.\nThe maximum number of decimal digits a <code>u64</code> can represent.\nThe maximum number of decimal digits a <code>usize</code> can represent …\nThe maximum number of decimal digits a <code>u8</code> can represent.\nThe maximum number of decimal digits a <code>u16</code> can represent.\nThe lowest unicode scalar that can be represented.\nThe lowest unicode scalar a <code>char7</code> can represent, <code>&#39;\\u{00}&#39;</code>.\nThe lowest unicode scalar a <code>char8</code> can represent, <code>&#39;\\u{00}&#39;</code>.\nThe lowest unicode scalar a <code>char16</code> can represent, <code>&#39;\\u{00}&#39;</code>.\nThe given capacity did not match the required constraints.\nU+0015\nU+0000 (Default variant)\nU+0023\nContains the success value\nU+0025\nU+002B\nU+003F\nU+0022\n<code>U+FFFD REPLACEMENT CHARACTER (�)</code> is used in Unicode to …\nU+005C\nU+007D\nU+0029\nU+005D\nU+003B\nU+000F\nU+000E\nU+0061\nU+0062\nU+0063\nU+0064\nU+0065\nU+0066\nU+0067\nU+0068\nU+0069\nU+006A\nU+006B\nU+006C\nU+006D\nU+006E\nU+006F\nU+0070\nU+0071\nU+0072\nU+0073\nU+0074\nU+0075\nU+0076\nU+0077\nU+0078\nU+0079\nU+007A\nU+002F\nU+0020\nU+0001\nU+0002\nU+001A\nU+0016\n🚩+ A text-related composite error.\n⚖️ A text-related result.\nU+007E\n𝐓 Common trait for unicode scalar types.\nInvalid Utf-8 found while interpreting a byte sequence.\nU+007C\nReturns a copy of the inner array with the full contents.\nReturns a copy of the inner array with the full contents.\nReturns a byte slice of the inner string slice.\nReturns a byte slice of the inner string slice.\nReturns a mutable byte slice of the inner string slice.\nReturns a mutable byte slice of the inner string slice.\nGets this ASCII character as a <code>char</code> Unicode Scalar Value.\nReturns the mutable inner string slice.\nReturns the mutable inner string slice.\nViews this ASCII character as a one-code-unit UTF-8 <code>str</code>.\nReturns the inner string slice.\nReturns the inner string slice.\nViews the underlying data as a subslice of the original …\nGets this ASCII character as a byte.\nReturns the number of bytes needed to represent the scalar …\nReturns the bytes required to store the given Unicode …\nReturns the number of bytes needed to represent the scalar …\nReturns the number of bytes needed to represent the scalar …\nReturns the number of bytes needed to represent the scalar …\nReturns the ASCII byte of a specific digit in a <code>u16</code> number.\nReturns the ASCII byte of a specific digit in a <code>u8</code> number.\nReturns the ASCII byte of a specific digit in a <code>u64</code> number.\nReturns the ASCII byte of a specific digit in a <code>u32</code> number.\nReturns the ASCII byte of a specific digit in a <code>usize</code> …\nReturns the ASCII byte of a specific digit in a <code>u128</code> …\nReturns the total capacity in bytes.\nReturns the total capacity in bytes.\n⚙️ 𝐓 <code>core</code> A 32-bit unicode scalar.\n𝐓 A 16-bit unicode scalar, limited to the Basic …\n𝐓 A 7-bit unicode scalar, limited to basic latin subset …\n𝐓 An 8-bit unicode scalar, limited to basic latin and …\nReturns an iterator over the <code>chars</code> of this grapheme …\nReturns an iterator over the <code>chars</code> of this grapheme …\nReturns an iterator over the <code>chars</code> of this grapheme …\nSets the length to 0, by resetting all bytes to 0.\nSets the length to 0, by resetting all bytes to 0.\nSets the length to 0, by resetting all bytes to 0.\nReturns the number of bytes required to encode <code>code</code> as …\nReturns the UTF-8 byte length of <code>code</code> <strong>without validation</strong>.\nReturns the ASCII representation as a <code>&amp;&#39;static str</code>, or <code>&quot;&quot;</code> …\nReturns the ASCII representation as a <code>&amp;&#39;static str</code>, or …\nConverts the Unicode scalar <code>code</code> to a UTF-8 encoded byte …\nConverts the Unicode scalar <code>code</code> to a UTF-8 encoded byte …\nCounts the number of decimal digits.\nCounts the number of decimal digits.\nCounts the number of decimal digits.\nCounts the number of decimal digits.\nCounts the number of decimal digits.\nCounts the number of decimal digits.\nReturns the default value of <code>\\x00</code> (nul character).\nReturns the default value of <code>\\x00</code> (nul character).\nReturns the default value of <code>\\x00</code> (nul character).\nReturns an empty extended grapheme character.\nReturns an empty extended grapheme character.\nReturns a new empty extended grapheme cluster.\nWhen passed the <em>number</em> <code>0</code>, <code>1</code>, …, <code>9</code>, returns the <em>character</em> …\nWhen passed the <em>number</em> <code>0</code>, <code>1</code>, …, <code>9</code>, returns the <em>character</em> …\nConverts a <code>u16</code> into a byte array of <code>5</code> ASCII digits with …\nConverts a <code>u64</code> into a byte array of <code>20</code> ascii digits with …\nConverts a <code>u32</code> into a byte array of <code>10</code> ASCII digits with …\nConverts a <code>u8</code> into a byte array of <code>3</code> ASCII digits with …\nConverts a <code>usize</code> into a byte array of <code>20</code> ascii digits with …\nConverts a <code>u128</code> into a byte array of <code>39</code> ascii digits with …\nConverts a one-digit number to the corresponding <code>1</code> ASCII …\nConverts a two-digit number to the corresponding <code>2</code> ASCII …\nConverts a three-digit number to the corresponding <code>3</code> ASCII …\nConverts a four-digit number to the corresponding <code>4</code> ASCII …\nEncodes this scalar as UTF-16 into the provided byte …\nEncodes this scalar as UTF-8 into the provided byte buffer,\nThe length of the error in bytes, if known.\nStrings formatting.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>AsciiChar</code> to <code>char7</code>.\nConverts an <code>AsciiChar</code> to <code>char8</code>.\nConverts an <code>AsciiChar</code> to <code>char16</code>.\nCreates a new <code>GraphemeNonul</code> from a <code>char</code>.\nCreates a new <code>GraphemeU8</code> from a <code>char</code>.\nCreates a new <code>GraphemeString</code> from a <code>char</code>.\nCreates a new <code>GraphemeNonul</code> from a <code>char16</code>.\nCreates a new <code>GraphemeU8</code> from a <code>char16</code>.\nCreates a new <code>GraphemeString</code> from a <code>char16</code>.\nConverts a <code>char7</code> to <code>char8</code>.\nConverts a <code>char7</code> to <code>char16</code>.\nCreates a new <code>GraphemeNonul</code> from a <code>char7</code>.\nCreates a new <code>GraphemeU8</code> from a <code>char7</code>.\nCreates a new <code>GraphemeString</code> from a <code>char7</code>.\nConverts a <code>char8</code> to <code>char16</code>.\nCreates a new <code>GraphemeNonul</code> from a <code>char8</code>.\nCreates a new <code>GraphemeU8</code> from a <code>char8</code>.\nCreates a new <code>GraphemeString</code> from a <code>char8</code>.\n<em>const</em> version of <code>From&lt;InvalidChar&gt; for InvalidText</code>.\n<em>const</em> version of <code>From&lt;InvalidUtf8&gt; for InvalidText</code>.\n<em>const</em> version of <code>From&lt;MismatchedCapacity&gt; for InvalidText</code>.\nCreates an ascii character from the byte <code>b</code>, or returns <code>None</code>…\nCreates an ASCII character from the byte <code>b</code>, without …\nConverts <code>core::str</code><code>Utf8Error</code> to <code>InvalidText::Utf8</code> in …\nConverts <code>core::str</code><code>Utf8Error</code> to <code>InvalidUtf8</code> in compile-time.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner array with the full contents.\nReturns the inner array with the full contents.\nChecks if <code>code</code> is a 7-bit ASCII character …\nReturns <code>true</code> if this unicode scalar has the <code>Alphabetic</code> …\nReturns <code>true</code> if this unicode scalar satisfies either …\nChecks if the value is within the ASCII range.\nChecks if the value is within the ASCII range.\nChecks if the value is within the ASCII range.\nChecks if the value is within the ASCII range.\nReturns <code>true</code> if this unicode scalar is an abstract …\nReturns <code>true</code> if this unicode scalar is an abstract …\nReturns <code>true</code> if this unicode scalar is an abstract …\nReturns <code>true</code> if this unicode scalar is an abstract …\nReturns <code>true</code> if this unicode scalar is an abstract …\nReturns <code>true</code> if this unicode scalar is an abstract …\nReturns <code>true</code> if this unicode scalar has the general …\nChecks if the unicode scalar is a digit in the given radix.\nChecks if the unicode scalar is a digit in the given radix.\nChecks if the unicode scalar is a digit in the given radix.\nChecks if the unicode scalar is a digit in the given radix.\nReturns <code>true</code> if the current length is 0.\nReturns <code>true</code> if the current length is 0.\nReturns <code>true</code> if the current length is 0.\nReturns <code>true</code> if the current remaining capacity is 0.\nReturns <code>true</code> if the current remaining capacity is 0.\nReturns <code>true</code> if this unicode scalar has the <code>Lowercase</code> …\nReturns <code>true</code> if this unicode scalar is a noncharacter.\nReturns <code>true</code> if the given unicode scalar <code>code</code> is a …\nReturns <code>true</code> if this unicode scalar is a noncharacter.\nReturns <code>true</code> if this unicode scalar is a noncharacter.\nReturns <code>true</code> if this unicode scalar is a noncharacter.\nReturns <code>true</code> if this unicode scalar is the nul character (…\nReturns <code>true</code> if this is the nul character (<code>0x00</code>).\nReturns <code>true</code> if this is the nul character (<code>0x00</code>).\nReturns <code>true</code> if this is the nul character (<code>0x00</code>).\nReturns <code>true</code> if this unicode scalar has one of the general …\nReturns <code>true</code> if this unicode scalar has the <code>Lowercase</code> …\nChecks if <code>code</code> is a valid Unicode scalar …\nReturns <code>true</code> if this unicode scalar has the <code>White_Space</code> …\nReturns the length in bytes.\nReturns the length in bytes.\nReturns the length in bytes.\nReturns the number of bytes needed to encode the given …\nReturns the number of bytes needed to encode in UTF-16.\nReturns the number of bytes needed to encode in UTF-16.\nReturns the number of bytes needed to encode in UTF-16.\nReturns the number of bytes needed to encode in UTF-16.\nReturns the number of bytes needed to encode in UTF-8.\nReturns the number of bytes needed to encode the given …\nReturns the number of bytes needed to encode in UTF-8.\nReturns the number of bytes needed to encode in UTF-8.\nReturns the number of bytes needed to encode in UTF-8.\nCreates a new empty <code>GraphemeNonul</code>.\nCreates a new empty <code>GraphemeU8</code>.\nCreates a new empty extended grapheme cluster.\nString parsing without structured semantics.\nReturns the remaining capacity.\nReturns the remaining capacity.\nViews a slice of ASCII characters as a slice of <code>u8</code> bytes.\nViews a slice of ASCII characters as a UTF-8 <code>str</code>.\nString types and related functionality.\nConverts a <code>char7</code> to <code>AsciiChar</code>.\nConverts a character to its closest ASCII equivalent, if …\nConverts a character to its closest ASCII equivalent, or …\nMakes a copy of the value in its ASCII lower case …\nMakes a copy of the value in its ASCII lower case …\nMakes a copy of the value in its ASCII lower case …\nMakes a copy of the value in its ASCII lower case …\nReturns the ASCII representation as a <code>&amp;&#39;static str</code>, or <code>&quot;&quot;</code> …\nReturns the ASCII representation as a <code>&amp;&#39;static str</code>, or …\nMakes a copy of the value in its ASCII upper case …\nMakes a copy of the value in its ASCII upper case …\nMakes a copy of the value in its ASCII upper case …\nMakes a copy of the value in its ASCII upper case …\nConverts this <code>char7</code> to <code>char</code>.\nConverts this <code>char8</code> to <code>char</code>.\nConverts this <code>char16</code> to <code>char</code>.\nConverts this <code>char7</code> to <code>char16</code>.\nConverts this <code>char8</code> to <code>char16</code>.\nConverts this <code>char7</code> to <code>char8</code>.\nReturns a new allocated C-compatible, nul-terminanted …\nReturns a new allocated C-compatible, nul-terminanted …\nConverts the scalar to a digit in the given radix.\nConverts the scalar to a digit in the given radix.\nConverts the scalar to a digit in the given radix.\nConverts the scalar to a digit in the given radix.\nConverts this <code>char7</code> to <code>u32</code>.\nConverts this <code>char8</code> to <code>u32</code>.\nConverts this <code>char16</code> to <code>u32</code>.\nConverts this <code>scalar</code> to an UTF-8 encoded sequence of bytes.\nConverts the given <code>char</code> to a UTF-8 encoded byte sequence.\nConverts this <code>char7</code> to an UTF-8 encoded sequence of bytes.\nConverts this <code>char8</code> to an UTF-8 encoded sequence of bytes.\nConverts this <code>char16</code> to an UTF-8 encoded sequence of bytes.\nTries to convert a <code>char</code> to <code>char7</code>.\nTries to convert a <code>char</code> to <code>char8</code>.\nTries to convert a <code>char</code> to <code>char16</code>.\nTries to convert a <code>char16</code> to <code>char7</code>.\nTries to convert a <code>char16</code> to <code>char8</code>.\nTries to convert a <code>char8</code> to <code>char7</code>.\nTries to convert this <code>char8</code> to <code>AsciiChar</code>.\nTries to convert this <code>char16</code> to <code>AsciiChar</code>.\nTries to convert this <code>char8</code> to <code>char7</code>.\nTries to convert this <code>char16</code> to <code>char7</code>.\nTries to convert this <code>char16</code> to <code>char8</code>.\nReturns the number of bytes needed to store the given …\nReturns the number of bytes needed to store the given …\nReturns the number of bytes needed to store the given …\nDecodes a UTF-8 code point from <code>bytes</code>, starting at <code>index</code>.\nDecodes a UTF-8 code point from <code>bytes</code>, starting at <code>index</code>.\nReturns the expected UTF-8 byte length based on the first …\nReturns the UTF-8 byte length or <code>None</code> if the first byte is …\nThe index in the given string up to which valid UTF-8 was …\nThe length of the error in bytes, if known.\nThe index in the given string up to which valid UTF-8 was …\n🖹 <code>core</code> <code>b</code> formatting.\nIndication that contents should be center-aligned.\n🖹 <code>core</code> <code>?</code> formatting.\n🖹 <code>core</code> <code>?</code> formatting.\n🖹 <code>core</code> A struct to help with [<code>Debug</code>] implementations.\n🖹 <code>core</code> A struct to help with [<code>Debug</code>] implementations.\n🖹 <code>core</code> A struct to help with [<code>Debug</code>] implementations.\n🖹 <code>core</code> A struct to help with [<code>Debug</code>] implementations.\n🖹 <code>core</code> A struct to help with [<code>Debug</code>] implementations.\n🖹 <code>core</code> Format trait for an empty format, <code>{}</code>.\nContains the error value\n𝐓 🌐 A string formatting namespace.\n🖹 <code>core</code> Possible alignments returned by <code>Formatter::align</code>.\n🖹 <code>core</code> Represents a safely precompiled version of a …\n🚩🖹 <code>core</code> The error type which is returned from …\n⚖️ 🖹 The type returned by formatter methods.\n🖹 <code>core</code> Writing or formatting into Unicode-accepting …\n🖹 <code>core</code> Configuration for formatting.\nIndication that contents should be left-aligned.\n🖹 <code>core</code> <code>e</code> formatting.\n🖹 <code>core</code> <code>x</code> formatting.\n𝐓 𝟙 Converts a number into a string representation, …\n🖹 <code>core</code> <code>o</code> formatting.\nContains the success value\n🖹 <code>core</code> <code>p</code> formatting.\nIndication that contents should be right-aligned.\n🖹 <code>core</code> <code>E</code> formatting.\n🖹 <code>core</code> <code>X</code> formatting.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\n🖹 <code>alloc</code> Creates a String using interpolation of runtime …\n🖹 <code>core</code> Constructs parameters for the other …\n🖹 Returns a formatted <code>str</code> slice backed by a buffer, …\nGiven a base for encoding and a mutable byte slice, write …\nConvenience method for quickly getting a string from the …\n🖹 <code>core</code> Writes formatted data into a buffer.\nWrites a <code>char</code> into this writer, returning whether the …\nWrites a <code>char</code> into this writer, returning whether the …\nWrites a <code>char</code> into this writer, returning whether the …\nWrites a <code>char</code> into this writer, returning whether the …\nWrites a <code>char</code> into this writer, returning whether the …\nGlue for usage of the <code>write!</code> macro with implementors of …\nGlue for usage of the <code>write!</code> macro with implementors of …\nGlue for usage of the <code>write!</code> macro with implementors of …\nGlue for usage of the <code>write!</code> macro with implementors of …\nGlue for usage of the <code>write!</code> macro with implementors of …\nWrites a string slice into this writer, returning whether …\n🖹 <code>core</code> Writes formatted data into a buffer, with a …\n🌐 A utility struct for searching bytes in slices.\nValue being parsed is empty.\nContains an invalid digit in its context.\nInteger is too small to store in target integer type.\n𝐓𝟙🚩 <code>core</code> An error which can be returned when …\n𝐓𝟙🚩 <code>core</code> An error which can be returned when …\n𝐓𝟙🚩 <code>core</code> Kinds of errors that can cause parsing …\nInteger is too large to store in target integer type.\nValue was Zero\n𝐓 <code>core</code> Representation of a borrowed C string (See […\n𝐓 <code>alloc</code> An owned, C-compatible, nul-terminated string …\nThe associated error which can be returned from parsing.\n𝐓 Extension trait providing additional methods for <code>&amp;str</code>.\n𝐓 Extension trait providing additional methods for …\n𝐓 <code>core</code> Parse a value from a string.\n𝐓 <code>std</code> Borrowed reference to an OS string (See <code>OsString</code>).\n𝐓 <code>std</code> A type for owned, mutable native strings, …\n𝐓 🌐 A string slice namespace.\n𝐓 <code>alloc</code> A UTF-8–encoded, growable string.\n𝐓 A UTF-8 string with up to <code>u8::MAX</code> bytes, excluding …\n𝐓 A UTF-8–encoded string, backed by an array with …\n𝐓 <code>alloc</code> A trait for converting a value to a [<code>String</code>].\nParses a string <code>s</code> to return a value of this type.\nReturns a <code>&amp;str</code> backed by a <code>buffer</code>, where you always know …\nReturns a <code>String</code> where you always know each character’s …\nRepeats a string a given number of times into the provided …\n𝐓 <code>&amp;str</code> compile-time operations, namespaced from the …\nConverts the string slice into an <code>Arc&lt;str&gt;</code>.\nConverts the string into an <code>Arc&lt;str&gt;</code>.\nConverts the string slice into a <code>Box&lt;str&gt;</code>.\nConverts the string into a <code>Box&lt;str&gt;</code>.\nConverts the string slice into an <code>Rc&lt;str&gt;</code>.\nConverts the string into an <code>Rc&lt;str&gt;</code>.\nConverts the given value to a <code>String</code>.\nContains the error value\nAn io error.\nThe requested numerical functionality is not implemented.\nThe requested functionality is not supported by this …\nContains the success value\nA user-interface error.\n⚖️ A user-interface result.\nUI backends. back::{miniquad, crossterm}\nUser interface events-related functionality.\nReturns the argument unchanged.\nUI frontends.\nCalls <code>U::from(self)</code>.\nLayout functionality.\nThe capabilities supported by a <code>UiService</code>.\nImage capabilities.\nInput capabilities.\nSound capabilities.\nSystem capabilities.\nWindow capabilities.\nCommon trait for all UI services.\nReturns the service capabilities.\n<code>crossterm</code> UI backends.\nGamepad input capabilities.\nThe name of the current host.\nImage capabilities.\nInput capabilities.\nKeyboard input capabilities.\nMaximum bitmap size, in native pixels.\nMidi input capabilities\n<code>miniquad</code> UI backends.\nMouse input capabilities.\nWhether multiple windows are supported.\nThe name of the detected OS version.\nWhether pixel-accurate bitmaps are supported.\nSound playback capabilities.\nWhether it’s possible to specify rgb values.\nSound capabilities.\nSystem capabilities.\nTouchscreen input capabilities.\nThe name of the current user.\nReturns the service inner version numbers (major, minor, …\nReturns the service version string.\nWindowing capabilities.\n<code>crossterm</code>’s UI backend service.\n<code>miniquad</code> Describes a hardware and platform-specific setup.\n<code>miniquad</code> Defines how an application responds to events in …\nAn extension trait for miniquad’s <code>MiniquadEventHandler</code>.\nDraws a single fullscreen quad textured by a pixel buffer.\n<code>miniquad</code> Platform-specific settings.\n<code>miniquad</code> Low-level interface for rendering operations in …\n<code>miniquad</code>’s UI Service.\nA wrapper namespace over <code>miniquad::window</code> functions.\nDefines which rendering API to use on Apple platforms …\nSet a new scissor rectangle. Should be applied after …\nSet a new viewport rectangle. Should be applied after …\nstart rendering to the default frame buffer\nstart rendering to an offscreen framebuffer\nIf <code>true</code>, the event loop will block until <code>schedule_update</code> …\nSize of buffer in bytes. For 1 element, u16 buffer this …\nDelete GPU buffer, leaving handle unmodified.\nDelete GPU program, leaving handle unmodified.\nDelete GPU texture, leaving handle unmodified.\nDraw elements using currently applied bindings and …\nA file has been dropped over the application. Applications …\nIf <code>true</code>, the framebuffer includes an alpha channel. …\nIf <code>true</code>, create the window in fullscreen mode (ignored on …\nIf <code>true</code>, the rendering canvas is scaled for HighDPI …\nOptional icon data used by the OS where applicable:\nReturns the event handler initialized.\nWhether it interpolates the scaled pixels.\nNote: you are not always guaranteed to receive a key_up …\nSpecifies which Linux window system (X11 or Wayland) is …\nSet the <code>WM_CLASS</code> window property on X11 and the <code>app_id</code> on …\nDetermines how to load an OpenGL context on X11 (via GLX …\nWhether the aspect ratio is maintained on window resize.\nA macro for namespaced <code>miniquad</code> operations.\nCreate a buffer resource object.\nSame as “new_render_pass”, but allows multiple color …\nFor metal context’s ShaderSource should contain MSL …\nPlatform-specific hints (e.g., context creation, driver …\nThis event is sent when the userclicks the window’s …\nRepresents raw hardware mouse motion event Note that these …\nFor depth-only render pass returns empty slice.\npanics for depth-only or multiple color attachment render …\npanics for depth-only or multiple color attachment render …\nMSAA sample count. Defaults to <code>1</code>.\nSet whether to <code>interpolate</code> the scaled pixels.\nSet whether to <code>maintain</code> the aspect ratio on window resize.\nOptional swap interval (vertical sync).\nMetal-specific note: if texture was created without …\nGet OpenGL’s GLuint texture ID or metals ObjcId\nUpdate whole texture content bytes should be width * …\nUpdate whole texture content bytes should be width * …\nDefault implementation emulates mouse clicks\nOn most platforms update() and draw() are called each …\nOn Wayland, specifies how to draw client-side decoration …\nSpecifies which WebGL version to use on the Web (1.0. or …\nPreferred window height (ignored on WASM/Android). …\nWindow has been minimized Right now is only implemented on …\nIf <code>true</code>, the user can resize the window.\nWindow has been restored Right now is only implemented on …\nWindow title. Defaults to an empty string.\nPreferred window width (ignored on WASM/Android). Defaults …\nAn alphanumeric key (A-Z, 0-9).\nAn alphanumeric key (A-Z, 0-9).\nBackspace key.\nToggles bass boost mode.\nDecreases bass levels.\nIncreases bass levels.\nDecreases the screen brightness.\nIncreases the screen brightness.\nCaps Lock key.\nA Unicode character (text input, international layouts, …\n🛡️ A unicode character (FFI-safe, stored as <code>u32</code>).\nDelete key.\nDown arrow key.\nEjects a removable media disk (found on some keyboards, …\nEnd key.\nEnter key.\nEscape key.\nRepresents mouse, touch, or pen buttons.\nRepresents the state of a button.\nRepresents a keyboard event.\n🛡️ An FFI-safe version of <code>EventKey</code>.\nRepresents a basic mouse event.\nRepresents a pointer event (mouse, touch, or pen).\nEnum representing the type of pointer.\nThe time at which the event actually occurs, stored as …\nRepresents a mouse wheel event.\nA function key.\nFunction keys (F1-F48).\nFast-forwards through media.\nHome key.\nInsert key.\n<strong>ISO Level 3 Shift</strong> key (commonly known as <strong>AltGr</strong>).\n<strong>ISO Level 5 Shift</strong> key (used in some advanced keyboard …\nKeyboard codes, used in <code>EventKey</code>.\nAlphanumeric (A-Z, 0-9) keys.\n🛡️ An FFI-safe version of <code>Key</code>, used in <code>EventKeyFfi</code>.\nMedia key codes.\nModifier key codes (when pressed by themselves)\nA bitfield of keys modifiers (Shift, Ctrl…) + extra …\nKeypad keys.\nRepresents the state of a <code>Key</code>.\nLaunches a media-related application.\nLeft arrow key.\nLeft mouse button.\nLeft <strong>Alt</strong> key.\nLeft <strong>Control</strong> (Ctrl) key.\nLeft <strong>Hyper</strong> key (historically used in some Unix systems).\nLeft <strong>Meta</strong> key (used in some Unix-based systems, overlaps …\nLeft <strong>Shift</strong> key.\nLeft <strong>Super</strong> key (Windows key on Windows, Command ⌘ on …\nDecreases the audio volume.\nA multimedia key.\nA multimedia key.\nOpens the default media player application.\nMenu key.\nMutes or unmutes the microphone.\nDecreases the microphone input volume.\nIncreases the microphone input volume.\nMiddle mouse button (usually the scroll wheel button).\nA modifer key.\nA modifier key.\nA mouse pointer.\nThe pointer moved without a button press/release.\nMutes or unmutes the audio.\nSkips to the next media track.\nNum Lock key.\nAdditional buttons (e.g., side buttons on advanced mice).\nA keypad key.\nA keypad key.\nPage down key.\nPage up key.\nPause key.\nPauses media playback.\nA pen pointer.\nStarts media playback.\nToggles between playing and pausing media.\nPowers the system off or performs a power-related action.\nThe key was pressed.\nThe button was pressed.\nReturns to the previous media track.\nPrint Screen key.\nIncreases the audio volume.\nStarts recording media.\nThe key was released.\nThe button was released.\nPlays media in reverse.\nRewinds through media.\nRight arrow key.\nRight mouse button.\nRight <strong>Alt</strong> key.\nRight <strong>Control</strong> (Ctrl) key.\nRight <strong>Hyper</strong> key (historically used in some Unix systems).\nRight <strong>Meta</strong> key (used in some Unix-based systems, overlaps …\nRight <strong>Shift</strong> key.\nRight <strong>Super</strong> key (Windows key on Windows, Command ⌘ on …\nScroll Lock key.\nPuts the system into sleep mode.\nStops media playback.\nTab key.\nA touch pointer.\nDecreases treble levels.\nIncreases treble levels.\nUnknown key code (default).\nUp arrow key.\nWakes the system from sleep mode.\nThe mouse button involved in the event.\nThe button involved.\nA bitmask of currently pressed buttons (<code>1</code>: left, <code>2</code>: right, …\nThe amount scrolled horizontally.\nThe amount scrolled vertically.\nThe delta movement since the last event.\nUnique ID for touch and pen inputs (e.g., multi-touch …\nThe type of pointer (mouse, touch, pen).\nThe active modifiers of the key (e.g., Shift, Ctrl).\nThe active modifiers of the key (e.g., Shift, Ctrl).\n🛡️ The key representing the hardware scan code.\nThe key representing the hardware scan code.\nThe pressure applied (0.0 to 1.0), applicable for …\n🛡️ The key representing the human-readable code.\nThe key representing the human-readable code.\nThe state of the key (pressed or released).\nThe state of the key (pressed or released).\nThe state of the mouse button (pressed, released, moved).\nThe state of the pointer (pressed, released, moved).\nThe tilt angle of a stylus (if applicable).\nThe tilt of the stylus along the Y-axis (-90° to 90°).\n🛡️ The time stamp of when the event occurred.\nThe time stamp of when the event occurred.\nThe time stamp of when the event occurred.\nThe time stamp of the event.\nThe timestamp of when the event occurred.\nThe rotation of the stylus around its own axis (0° to …\nThe x-coordinate of the mouse cursor.\nThe x-coordinate of the pointer.\nThe x-coordinate of the mouse cursor during the event.\nThe y-coordinate of the mouse cursor.\nThe y-coordinate of the pointer.\nThe y-coordinate of the mouse cursor during the event.")