searchState.loadedDescShard("devela", 24, "Compare <code>f32</code> lanes according to the operation specified, …\nCompare <code>f64</code> lanes according to the operation specified, …\nLanewise <code>(!a.is_nan()) &amp;amp; (!b.is_nan())</code>.\nLow lane <code>(!a.is_nan()) &amp;amp; (!b.is_nan())</code>, other lanes …\nLanewise <code>(!a.is_nan()) &amp;amp; (!b.is_nan())</code>.\nLow lane <code>(!a.is_nan()) &amp;amp; (!b.is_nan())</code>, other lane …\nLanewise <code>a.is_nan() | b.is_nan()</code>.\nLow lane <code>a.is_nan() | b.is_nan()</code>, other lanes unchanged.\nLanewise <code>a.is_nan() | b.is_nan()</code>.\nLow lane <code>a.is_nan() | b.is_nan()</code>, other lane unchanged.\nReturn an iterator adaptor that uses the passed-in closure …\nReturn an iterator adaptor that uses the passed-in closure …\n<code>devela_macros</code> Returns the first non-empty argument.\nReturns the signal code.\nReturns the exit code of the process, if any.\n<code>core</code> Expands to the column number at which it was invoked.\n<code>core</code> Expands to the file name at which it was invoked.\n<code>core</code> Expands to the line number at which it was invoked.\n<code>core</code> Expands to a string representing the current module …\nTransforms an iterator into a collection.\nTransforms an iterator into a collection.\nTransforms an iterator into a collection.\nTransforms an iterator into a collection.\nTransforms an iterator into a collection.\nTransforms an iterator into a collection.\nTransforms an iterator into a collection.\nTransforms an iterator into a collection.\nCollects all items from the iterator into an array of a …\nCollects all items from the iterator into an array of a …\nCollects all the items from an iterator into a collection.\nCollects all the items from an iterator into a collection.\nCollects all the items from an iterator into a collection.\nCollects all the items from an iterator into a collection.\nCollects all the items from an iterator into a collection.\nCollects all the items from an iterator into a collection.\nCollects all the items from an iterator into a collection.\nCollects all the items from an iterator into a collection.\nCollects all items from the iterator into a tuple of a …\nCollects all items from the iterator into a tuple of a …\n<code>.collect_vec()</code> is simply a type specialization of …\n<code>.collect_vec()</code> is simply a type specialization of …\nReturns <code>NotSupported</code>.\nThe capacity of a fixed-size array is always equal to its …\nReturns <code>NotSupported</code>.\nReturns <code>NotSupported</code>.\nReturns <code>NotSupported</code>.\nThis is less efficent than <code>HashSet::contains</code> for not …\nThis is less efficent than <code>BTreeSet::contains</code> for not …\nReturns <code>NotSupported</code>.\nThis is less efficent than <code>HashSet::contains</code> for not …\nThis is less efficent than <code>BTreeSet::contains</code> for not …\nReturns <code>NotSupported</code> since a fixed-size array is never …\nReturns <code>NotSupported</code>.\nReturns <code>NotSupported</code> since a fixed-size array is never …\nReturns <code>NotSupported</code>.\nReturns <code>NotSupported</code>.\nGet the alpha component.\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nSince the color has no alpha, the maximum normalized value …\nReturns the bit depth of each color component (e.g., 8 for …\nReturns the bit depth of each color component (e.g., 8 for …\nGet the blue component.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nReturns a vector containing the color components.\nReturns a vector containing the color components.\nWrites the color components to a pre-allocated <code>buffer</code>.\nReturns the number of color components (channels).\nReturns the number of color components (channels).\nGet the green component.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nReturns <code>true</code> if the color has an alpha component.\nReturns <code>true</code> if the color has an alpha component.\nReturns <code>true</code> if the color uses integer components (e.g., <code>u8</code>…\nReturns <code>true</code> if the color uses integer components (e.g., <code>u8</code>…\nReturns <code>true</code> if the color is in a linear space (not …\nReturns <code>true</code> if the color is in a linear space (not …\nReturns <code>true</code> if the color uses premultiplied alpha.\nReturns <code>true</code> if the color uses premultiplied alpha.\nGet the red component.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nSince the color has no red, the luminosity is returned.\nColumns of cells.\nReturns the column from which the panic originated.\nReturn an iterator adaptor that iterates over the <code>k</code>-length …\nReturn an iterator adaptor that iterates over the <code>k</code>-length …\nReturn an iterator that iterates over the <code>k</code>-length …\nReturn an iterator that iterates over the <code>k</code>-length …\nCounts <code>$a</code> as the high bytes and <code>$b</code> as the low bytes then …\nWorks like <code>combined_byte_shr_imm_m128i</code>, but twice as wide.\nConstructs a new <code>ProcessCommand</code> for launching the <code>program</code>.\nConstructs a new <code>ProcessCommand</code> for launching the <code>program</code>.\nCompacts the queue (moving the read position to zero).\nStores a value into the <code>Atomic</code> if the current value is the …\nStores a value into the <code>bool</code> if the current value is the …\nStores a value into the pointer if the current value is …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic float if the current value …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic float if the current value …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the <code>Atomic</code> if the current value is the …\nStores a value into the <code>bool</code> if the current value is the …\nStores a value into the pointer if the current value is …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic float if the current value …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\nStores a value into the atomic float if the current value …\nStores a value into the atomic integer if the current …\nStores a value into the atomic integer if the current …\n<code>devela_macros</code> Conditionally compiles the thing it is …\n<code>devela_macros</code> Conditionally compiles the given attributes …\n<code>core</code> Causes compilation to fail with the given error …\nThe type of the wavelet component (scaling or wavelet).\nProduces an iterator over the <code>Component</code>s of the path.\nCompresses wavelet coefficients by thresholding small …\nComputes luma from R′G′B′ using the given …\nComputes luma from R′G′B′ using the given …\nCombine all an iterator’s elements into one element by …\nCombine all an iterator’s elements into one element by …\nConcatenates this chunk with another chunk.\n<code>core</code> Concatenates literals into a static string slice.\nSets the given miniquad configuration.\nReturns a reference of the configuration.\nOpens a TCP connection to a remote host.\nConnects this UDP socket to a remote address, allowing the …\nOpens a TCP connection to a remote host with a timeout.\nReturns the <code>JsConsole</code> namespace struct.\nAsserts various comparisons on constants.\nConverts a <em>const</em> <code>bool</code> expression to a type-level boolean.\nCompile-time <code>decode</code>.\nCompile-time <code>decode_srgb</code>.\nReturns the duration between this and an earlier instant …\nCompile-time <code>encode</code>.\nCompile-time <code>encode_srgb</code>.\nConverts a <code>JsInstant</code> into a <code>TimeDelta</code> relative to the time …\nCompile-time friendly version of <code>try_from_millis_f64</code>.\nCompile-time <code>lightness_to_luminance</code>.\nCompile-time <code>luminance_to_lightness</code>.\nCompile-time friendly version of <code>try_from_millis_f64</code>.\nMarks the given <code>amount</code> of additional bytes from the …\nReturns <code>true</code> if the option is a <code>Some</code> value containing the …\nReturns <code>true</code> if the result is an <code>Ok</code> value containing the …\nReturns <code>true</code> if the array contains <code>element</code>.\nReturns <code>true</code> if the set contains a value.\nReturns true if the array contains <code>element</code>.\nReturns true if the destaque contains <code>element</code>.\nReturns true if the stack contains <code>element</code>.\nReturns <code>true</code> if the given item is present in this iterator.\nReturns <code>true</code> if the given item is present in this iterator.\nReturns <code>true</code> if the set contains an element equal to the …\nReturns <code>true</code> if <code>item</code> is contained in the range.\nReturns <code>true</code> if <code>item</code> is contained in the range.\nReturns <code>true</code> if <code>item</code> is contained in the range.\nReturns <code>true</code> if <code>item</code> is contained in the range.\nReturns <code>true</code> if the <code>LinkedList</code> contains an element equal …\nReturns <code>true</code> if the deque contains an element equal to the …\nChecks if the interval contains the given value.\nReturns <code>true</code> if <code>item</code> is contained in the range.\nReturns <code>true</code> if <code>item</code> is contained in the range.\nReturns <code>true</code> if <code>item</code> is contained in the range.\nReturns <code>true</code> if <code>item</code> is contained in the range.\nReturns <code>true</code> if <code>item</code> is contained in the range.\nReturns <code>true</code> if the array contains <code>element</code>, between the …\nReturns <code>true</code> if the result is an <code>Err</code> value containing the …\nReturns <code>true</code> if the array contains <code>element</code>, from the <code>start</code> …\nReturns <code>true</code> if the map contains a value for the specified …\nReturns <code>true</code> if the map contains a value for the specified …\nReturns <code>true</code> if the array contains <code>element</code>, from the <code>start</code> …\n(contentType) Returns the document’s content type.\n(contentType) Returns the document’s content type.\nConverts the <code>ControlFlow</code> into an <code>Result</code> which is <code>Ok</code> if the …\nConverts the <code>ControlFlow</code> into an <code>Option</code> which is <code>Some</code> if …\nConverts a value from one unit prefix variant to another, …\nConverts a value from one prefix to another, returning the …\nConvert <code>i32</code> to <code>f32</code> and replace the low lane of the input.\nConvert <code>i32</code> to <code>f64</code> and replace the low lane of the input.\nConverts a value from one prefix to another, returning the …\nConvert <code>i64</code> to <code>f64</code> and replace the low lane of the input.\nConverts the lower <code>f32</code> to <code>f64</code> and replace the low lane of …\nConverts the low <code>f64</code> to <code>f32</code> and replaces the low lane of …\nConvert the lowest <code>f32</code> lane to a single <code>f32</code>.\nConvert the lowest <code>f64</code> lane to a single <code>f64</code>.\nConvert the lower two <code>i64</code> lanes to two <code>i32</code> lanes.\nConvert the lower eight <code>i8</code> lanes to eight <code>i16</code> lanes.\nConvert <code>i8</code> values to <code>i16</code> values.\nConvert lower 4 <code>u8</code> values to <code>i16</code> values.\nConvert lower 8 <code>u8</code> values to <code>i16</code> values.\nConvert <code>u8</code> values to <code>i16</code> values.\nConvert the lowest <code>i32</code> lane to a single <code>i32</code>.\nConvert the lower four <code>i16</code> lanes to four <code>i32</code> lanes.\nConvert the lower four <code>i8</code> lanes to four <code>i32</code> lanes.\nRounds the <code>f32</code> lanes to <code>i32</code> lanes.\nRounds the two <code>f64</code> lanes to the low two <code>i32</code> lanes.\nConvert <code>f64</code> lanes to be <code>i32</code> lanes.\nConvert <code>i16</code> values to <code>i32</code> values.\nConvert the lower 8 <code>i8</code> values to <code>i32</code> values.\nConvert <code>f32</code> lanes to be <code>i32</code> lanes.\nConvert <code>u16</code> values to <code>i32</code> values.\nConvert the lower two <code>i32</code> lanes to two <code>i64</code> lanes.\nConvert the lower two <code>i8</code> lanes to two <code>i64</code> lanes.\nConvert <code>i32</code> values to <code>i64</code> values.\nConvert <code>i16</code> values to <code>i64</code> values.\nConvert the lower 4 <code>i8</code> values to <code>i64</code> values.\nConvert <code>u16</code> values to <code>i64</code> values.\nConvert <code>u32</code> values to <code>i64</code> values.\nRounds the four <code>i32</code> lanes to four <code>f32</code> lanes.\nRounds the two <code>f64</code> lanes to the low two <code>f32</code> lanes.\nConvert <code>f64</code> lanes to be <code>f32</code> lanes.\nRounds the lower two <code>i32</code> lanes to two <code>f64</code> lanes.\nRounds the two <code>f64</code> lanes to the low two <code>f32</code> lanes.\nConvert <code>i32</code> lanes to be <code>f32</code> lanes.\nConvert <code>i32</code> lanes to be <code>f64</code> lanes.\nConvert <code>f32</code> lanes to be <code>f64</code> lanes.\nConvert the lower eight <code>u8</code> lanes to eight <code>u16</code> lanes.\nConvert the lower four <code>u16</code> lanes to four <code>u32</code> lanes.\nConvert the lower four <code>u8</code> lanes to four <code>u32</code> lanes.\nConvert the lower two <code>u16</code> lanes to two <code>u64</code> lanes.\nConvert the lower two <code>u32</code> lanes to two <code>u64</code> lanes.\nConvert the lower two <code>u8</code> lanes to two <code>u64</code> lanes.\nConvert <code>f64</code> lanes to <code>i32</code> lanes with truncation.\nConvert <code>f32</code> lanes to <code>i32</code> lanes with truncation.\nThe vector coordinates in some basis.\nThe vector coordinates in some basis.\nThe vector coordinates in some basis.\nThe vector coordinates in some basis.\nThe D-dimensional coordinates.\nThe D-dimensional coordinates.\nThe D-dimensional coordinates.\nCreates an iterator which copies all of its elements.\nCreates an iterator which copies all of its elements.\nCreates an iterator which copies all of its elements.\nCreates an iterator which copies all of its elements.\nCreates an iterator which copies all of its elements.\nCreates an iterator which copies all of its elements.\nCreates an iterator which copies all of its elements.\nCreates an iterator which copies all of its elements.\nMaps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the …\nMaps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the contents …\nMaps a <code>Result&lt;&amp;T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by copying the …\nMaps a <code>Result&lt;&amp;mut T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by copying the …\nA convenience wrapper over <code>Slice::copy_array_at</code>.\nCopies the entire contents of a reader into a writer.\nBitwise-copies a value.\nCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>dst</code>. Can …\nCopies the contents of one file to another. This function …\nCopies the <code>src</code> byte array into <code>dst</code> in compile-time.\nCopies all elements from <code>src</code> into a fixed-size array …\nCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>self</code>. The …\nCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>self</code>. The …\nCopies all elements from <code>src</code> into <code>dst</code>.\nCopy the low <code>i64</code> lane to a new register, upper bits 0.\nReturns a copy of the state jumped ahead by 2^64 steps.\nReturns a copy of the state long-jumped ahead by 2^96 …\nCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>dst</code>. Must …\nReturns a copy of the next new random state.\nCopies the <code>a</code> value and replaces the low lane with the low <code>b</code>…\nCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>self</code> to <code>dest</code>. The …\nCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>self</code> to <code>dest</code>. The …\nA number composed of a magnitude of <code>self</code> and the sign of …\nThe cosine.\nThe hyperbolic cosine.\n(count) Logs the number of times that this particular call …\nConsumes the iterator, counting the number of iterations …\nConsumes the iterator, counting the number of iterations …\nConsumes the iterator, counting the number of iterations …\nConsumes the iterator, counting the number of iterations …\nConsumes the iterator, counting the number of iterations …\nConsumes the iterator, counting the number of iterations …\nConsumes the iterator, counting the number of iterations …\nConsumes the iterator, counting the number of iterations …\nThe total number of repetitions.\nReturns the length of <code>self</code>. Like C’s <code>strlen</code>, this does …\nReturns the number of <code>None</code> elements in the array.\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nCounts the number of 1s in <code>self</code> from the <code>[start..=end]</code> …\nCounts the number of 1s in <code>self</code> from the <code>[start..=end]</code> …\n(countReset) Resets the counter used with <code>count</code>.\nReturns the number of <code>Some</code> elements in the array.\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nCounts the number of 0s in <code>self</code> from the <code>[start..=end]</code> …\nCounts the number of 0s in <code>self</code> from the <code>[start..=end]</code> …\nCollect the items in this iterator and return a <code>HashMap</code> …\nCollect the items in this iterator and return a <code>HashMap</code> …\nCollect the items in this iterator and return a <code>HashMap</code> …\nCollect the items in this iterator and return a <code>HashMap</code> …\nAccumulates the <code>u16</code> into a running CRC32 value.\nAccumulates the <code>u32</code> into a running CRC32 value.\nAccumulates the <code>u64</code> into a running CRC32 value.\nAccumulates the <code>u8</code> into a running CRC32 value.\nOpens a file in write-only mode.\nSets the option to create a new file, or open it if it …\nCreates the specified directory with the options …\nOpens a file in write-only mode with buffering.\nCreates a new, empty directory at the provided path\nRecursively create a directory and all of its parent …\nCreates a new file in read-write mode; error if the file …\nSets the option to create a new file, failing if it …\nReturns the creation time listed in this metadata.\nReturns the time of creation.\nReturns the time of creation.\nReturns the value of the ftCreationTime field of this …\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nSwaps two mutable variables in a <em>compile-time</em> friendly …\nReturns the last status change time of the file, in …\nReturns the last status change time of the file, in …\nReturns the last status change time of the file, in …\nReturns the last status change time of the file, in …\nCreates a new <code>AnsiColor8b</code> from a 216-color 6x6x6 RGB cube. …\nCreates a new <code>AnsiColor8b</code> from a 216-color 6x6x6 RGB cube …\nCreates a new <code>AnsiColor8b</code> from a 216-color 6x6x6 RGB cube …\nRetrieves an exclusive reference to the current instance …\nGets a handle to the thread that invokes it.\nGets a handle to the thread that invokes it.\nReturns the current working directory.\nSets the working directory for the child process.\nReturns the full filesystem path of the current running …\nReturns the current random <code>u16</code>.\nReturns the current seed value.\nReturns the current random <code>u32</code>.\nReturns the current random <code>u32</code>, without updating the state.\nReturns the current random <code>u64</code>.\nReturns the current random <code>u64</code>.\nReturns the current random <code>u64</code>.\nReturns the current random <code>u8</code>.\nReturns the current random <code>u8</code>.\nReturns the current random <code>u8</code>.\nReturns the current random <code>u8</code>.\nRetrieves an exclusive reference to the current instance …\nProvides a cursor at the back element.\nProvides a cursor with editing operations at the back …\nProvides a cursor at the front element.\nProvides a cursor with editing operations at the front …\nRepeats an iterator endlessly.\nRepeats an iterator endlessly.\nRepeats an iterator endlessly.\nRepeats an iterator endlessly.\nRepeats an iterator endlessly.\nRepeats an iterator endlessly.\nRepeats an iterator endlessly.\nRepeats an iterator endlessly.\nThe underlying repeating cycle.\nGet a <code>Pin&lt;&amp;mut D&gt;</code>\nThe denominator.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nDays.\nCreates a new <code>NonNull</code> that is dangling, but well-aligned.\nCreates a new pointer that is dangling, but non-null and …\nCreates a <code>NonNull</code> that is dangling, but well-aligned for …\nCreates a new pointer that is dangling, but non-null and …\nGets the <code>data</code> pointer used to create this <code>Waker</code>.\nInternal storage of matrix elements in a fixed-size array.\nReturns a raw pointer to the underlying data.\nReturns a raw pointer to the underlying data.\nReturns the data type of this value.\nReturns the data type associated with this <code>Copy</code> value.\nReturns the data type associated with this <code>Copy</code> value.\nReturns the alignment of the value represented by this …\nReturns the default value for this <code>Copy</code> type, or <code>None</code> if …\nReturns the default value for this <code>Copy</code> type, or <code>None</code> if …\nReturns the default value for this type, or <code>None</code> if not …\nReturns whether the specific value for this type is <code>Copy</code>.\nReturns whether the specific value is <code>Copy</code>.\nReturns the size of the value represented by this type.\nReturns whether all values represented by this type are …\nReturns whether all values are <code>Copy</code>.\nDeallocates the block of memory at the given <code>ptr</code> pointer …\nDeallocates memory with the global allocator.\nNo-op. Memory is only reclaimed when the entire WASM …\n(debug) Outputs a message to the console with the debug …\n<code>log</code> Logs a message at the indicated level.\n<code>core</code> Asserts that a boolean expression is true at runtime.\n<code>core</code> Asserts that two expressions are equal to each other.\n<code>core</code> Asserts that two expressions are not equal to each …\nForces the lock to be released without dropping the guard.\nCreates a <code>DebugList</code> builder designed to assist with …\nCreates a <code>DebugMap</code> builder designed to assist with …\nCreates a <code>DebugSet</code> builder designed to assist with …\nCreates a <code>DebugStruct</code> builder designed to assist with …\nCreates a <code>DebugTuple</code> builder designed to assist with …\nDecodes <code>Self</code> from the given <code>reader</code>, returning the decoded …\nDecodes <code>input</code> into a <code>Vec&lt;u8&gt;</code>, returns <code>None</code> if invalid …\nDecodes <code>input</code> into a <code>Vec&lt;u8&gt;</code>, returns <code>None</code> if invalid …\nDecodes <code>input</code> into a <code>Vec&lt;u8&gt;</code>, returns <code>None</code> if invalid …\nDecodes <code>input</code> into a <code>Vec&lt;u8&gt;</code>, returns <code>None</code> if invalid …\nDecodes <code>input</code> into a <code>Vec&lt;u8&gt;</code>, returns <code>None</code> if invalid …\nDecodes <code>input</code> into a <code>Vec&lt;u8&gt;</code>, returns <code>None</code> if invalid …\nDecodes the given gamma-encoded <code>v</code>alue using this gamma: …\nDecodes the given gamma-encoded <code>v</code>alue using this gamma: …\nDecodes <code>input</code> into <code>output</code>, returning the number of bytes …\nDecodes <code>input</code> into <code>output</code>, returning the number of bytes …\nDecodes <code>input</code> into <code>output</code>, returning the number of bytes …\nDecodes <code>input</code> into <code>output</code>, returning the number of bytes …\nDecodes <code>input</code> into <code>output</code>, returning the number of bytes …\nDecodes <code>input</code> into <code>output</code>, returning the number of bytes …\nDecodes <code>input</code> into <code>output</code>, returning the number of bytes …\nDecodes <code>input</code> into <code>output</code>, returning the number of bytes …\nDecodes <code>input</code> into <code>output</code>, returning the number of bytes …\nDecodes <code>input</code> into <code>output</code>, returning the number of bytes …\nDecodes the given <code>v</code>alue using the sRGB inverse transfer …\nDecodes the given <code>v</code>alue using the sRGB inverse transfer …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nReturns the required output buffer size for decoding …\nDecrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nDecrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nDecrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nRemove duplicates from sections of consecutive identical …\nRemove duplicates from sections of consecutive identical …\nRemoves consecutive repeated elements in the vector …\nRemove duplicates from sections of consecutive identical …\nRemove duplicates from sections of consecutive identical …\nRemoves all but the first of consecutive elements in the …\nRemoves all but the first of consecutive elements in the …\nRemove duplicates from sections of consecutive identical …\nRemove duplicates from sections of consecutive identical …\nRemove duplicates from sections of consecutive identical …\nRemove duplicates from sections of consecutive identical …\nReturns the “default value” for a type.\nCreates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.\nCreates an empty str inside an Arc.\nCreates an empty <code>[T]</code> inside an Arc.\nConstructs a new <code>Weak&lt;T&gt;</code>, without allocating memory. …\nCreates an owned Cow&lt;’a, B&gt; with the default value for …\nReturns a default <code>Mismatch</code>.\nCreates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …\nReturns an empty ValueQuant with <code>None</code> for both fields.\nCreates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates an <code>AtomicBool</code> initialized to <code>false</code>.\nCreates a null <code>AtomicPtr&lt;T&gt;</code>.\nCreates an empty <code>BinaryHeap&lt;T&gt;</code>.\nReturns an array, allocated in the heap, using the default …\nReturns an array, allocated in the stack, using the …\nCreates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …\nCreates an empty <code>BTreeMap</code>.\nReturns an array, allocated in the heap, using the default …\nReturns an array, allocated in the stack, using the …\nReturns an empty queue, allocated in the heap, using the …\nReturns an empty queue, allocated in the stack, using the …\nReturns an empty stack, allocated in the stack, using the …\nReturns an empty stack, allocated in the heap, using the …\nConstructs an empty <code>OsString</code>.\nCreates an empty <code>OsStr</code>.\nCreates an empty <code>BTreeSet</code>.\nCreates an empty <code>LinkedList&lt;T&gt;</code>.\nReturns a <code>Vector</code>, allocated in the stack, using the …\nReturns a <code>VecVector</code>, using the default value to fill the …\nCreates an empty deque.\nCreates a new lazy value using <code>Default</code> as the initializing …\nCreates a <code>Cell&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates an empty str inside an Rc\nCreates an empty CStr inside an Rc\nCreates an empty <code>[T]</code> inside an Rc\nCreates a new <code>Rc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.\nCreates a <code>RefCell&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates an <code>UnsafeCell</code>, with the <code>Default</code> value for T.\nConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. …\nCreates a <code>Condvar</code> which is ready to be waited on and …\nCreates a <code>Mutex&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates a <code>Flatten</code> iterator from the default value of <code>I</code>.\nCreates a new <code>RwLock&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates a new lazy value using <code>Default</code> as the initializing …\nCreates a new uninitialized cell.\nCreates an empty <code>Vec&lt;T&gt;</code>.\nCreates an empty <code>CString</code>.\nCreates an empty <code>String</code>.\nConstructs a new <code>RandomState</code>.\nCreates an empty hashmap.\nCreates a new empty chunk.\nReturns a <code>Angle</code>, allocated in the stack, using the default …\nReturns an empty string.\nReturns a default <code>MiniquadService</code> without a handler.\nReturns an empty string.\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nFeatures\nCreates a <code>Chain</code> from the default values for <code>A</code> and <code>B</code>.\nCreates a <code>Cloned</code> iterator from the default value of <code>I</code>\nCreates a <code>Copied</code> iterator from the default value of <code>I</code>\nCreates an <code>Enumerate</code> iterator from the default value of <code>I</code>\nCreates a <code>Fuse</code> iterator from the default value of <code>I</code>.\nCreates a <code>Rev</code> iterator from the default value of <code>I</code>\nReturns <code>None</code>.\nBuild a custom static hashmap.\nDelete GPU buffer, leaving handle unmodified.\nDelete GPU program, leaving handle unmodified.\nDelete GPU texture, leaving handle unmodified.\nReturns the number of deleted (TOMB) slots.\nReturns the elapsed time since this instant as a <code>TimeDelta</code>.\nReturns the duration between this and an earlier instant …\nThe amount scrolled horizontally.\nThe amount scrolled vertically.\nConfigures a feature as deprecated, warning if it is …\nAlias of <code>pop_front</code>.\nDereferences the value.\nPanics\nAllows access to the locked value.\nDereferences the value.\nMutably dereferences the value.\nPanics\nAllows exclusive access to the locked value.\nPanics\nApproximates the derivative of the 1D function <code>f</code> at <code>x</code> …\nReturns an iterator in descending order of magnitude.\nThe distance from the baseline to the lowest point.\nDistance from the baseline to the lowest glyph edge.\n<code>std</code> Tests at <em>runtime</em> whether an <code>aarch64</code> feature is enabled.\n<code>std</code> Tests at <em>runtime</em> whether an <code>x86/x86-64</code> feature is …\nReturns the determinant if the matrix is square, or <code>None</code> …\nReturns the determinant if the matrix is square, or <code>None</code> …\nReturns the determinant if the matrix is square, or <code>None</code> …\nReturns the determinant if the matrix is square, or <code>None</code> …\nReturns the determinant if the matrix is square, or <code>None</code> …\nReturns the determinant if the matrix is square, or <code>None</code> …\nReturns the determinant if the matrix is square, or <code>None</code> …\nReturns the determinant if the matrix is square, or <code>None</code> …\nReturns the determinant without checking matrix squareness.\nReturns the determinant without checking matrix squareness.\nReturns the determinant without checking matrix squareness.\nReturns the determinant without checking matrix squareness.\nReturns the determinant without checking matrix squareness.\nReturns the determinant without checking matrix squareness.\nReturns the determinant without checking matrix squareness.\nReturns the determinant without checking matrix squareness.\nReturns the ID of the device containing the file.\nReturns the ID of the device containing the file.\nVisits the values representing the difference, i.e., the …\nVisits the elements representing the difference, i.e., the …\nProduces the final hash value based on the internal state.\nThe component-wise separation in <code>D</code>-dimensional space.\nThe size values in <code>D</code>-dimensional space.\nThe coordinate values in <code>D</code>-dimensional space.\nThe directional components in <code>D</code>-dimensional space.\nThe step sizes per dimension.\nReturns the angle direction.\nReturns the angle direction.\nReturns the angle direction.\nDisables focus change mode.\nDisables receiving mouse events.\nDisables raw mode.\nDisables raw mode.\nDisables the raw mode.\nForcibly captures a disabled backtrace, regardless of …\nReturns a value uniquely identifying the enum variant in v.\nReturns an object that implements <code>Display</code> for safely …\nReturns an object that implements <code>Display</code> for safely …\nReturns an object that implements <code>Display</code>.\nReturns an object that implements <code>Display</code> for safely …\nSets the method for dither diffusion.\nSets the <code>dither</code> field to <code>Dither::ADither</code>.\nSets the <code>dither</code> field to <code>Dither::Atkinson</code>.\nSets the <code>dither</code> field to <code>Dither::Auto</code>.\nSets the <code>dither</code> field to <code>Dither::Burkes</code>.\nSets the <code>dither</code> field to <code>Dither::FS</code>.\nSets the <code>dither</code> field to <code>Dither::JaJuNi</code>.\nSets the <code>dither</code> field to <code>Dither::None</code>.\nSets the <code>dither</code> field to <code>Dither::Stucki</code>.\nSets the <code>dither</code> field to <code>Dither::XDither</code>.\nPerforms the <code>/</code> operation.\nPerforms the <code>/=</code> operation.\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nDivides this time delta by another time delta.\nDivides this time delta by another time delta.\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f32</code>.\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f64</code>.\nThe euclidean division.\nReturns the result of dividing this duration by the given …\nDivides <code>Duration</code> by <code>f32</code>.\nReturns the result of dividing this duration by the given …\nDivides <code>Duration</code> by <code>f64</code>.\nLanewise <code>a / b</code>.\nLow lane <code>a / b</code>, other lanes unchanged.\nLanewise <code>a / b</code>.\nLowest lane <code>a / b</code>, high lane unchanged.\nLanewise <code>a / b</code> with <code>f32</code>.\nLanewise <code>a / b</code> with <code>f64</code>.\n(Document) Handle to the brower’s global Document …\n(document) Returns the <code>document</code> object.\nComputes the dot product of two vectors.\nPerforms a dot product of two <code>m128</code> registers.\nPerforms a dot product of two <code>m128d</code> registers.\nThis works like <code>dot_product_m128</code>, but twice as wide.\nAttempts to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a …\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the custom boxed error to <code>E</code>.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some mutable reference to the inner value if it is …\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some reference to the inner value if it is of type …\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nDowncasts the box to a concrete type.\nDowncasts the box to a concrete type.\nDowncasts the box to a concrete type.\nDowncasts the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.\nCreates a new <code>Weak</code> pointer to this allocation.\nCreates a new <code>Weak</code> pointer to this allocation.\nDowngrades a write-locked <code>RwLockWriteGuard</code> into a …\nThe dpi scaling factor (window pixels to framebuffer …\n(devicePixelRatio) The device pixel ratio of the …\nClears the map, returning all key-value pairs as an …\nClears the binary heap, returning an iterator over the …\nClears the set, returning all elements in an iterator.\nRemoves the specified range from the deque in bulk, …\nRemoves the subslice indicated by the given range from the …\nRemoves the specified range from the string in bulk, …\nClears the binary heap, returning an iterator over the …\nDraw elements using currently applied bindings and …\nDraws a circle.\nDraws a line.\nDraws grayscale text into a one-byte-per-pixel buffer.\nDraws RGBA text into a 4-bytes-per-pixel buffer.\nDraws RGBA text with a custom color function.\nExecutes the destructor for this type.\nDrops the <code>Arc</code>.\nDrops the <code>Weak</code> pointer.\nDrops the top stack element.\nDisposes of a value.\nDrops the <code>Rc</code>.\nDrops the <code>Weak</code> pointer.\nReleases the lock when the guard is dropped.\nManually drops the contained value.\nDrops the back element.\nDrops the front element.\nExecutes the destructor (if any) of the pointed-to value.\nExecutes the destructor (if any) of the pointed-to value.\nDrops the top <code>n</code> stack elements.\nDrops <code>n</code> elements from the back.\nDrops <code>n</code> elements from the front.\nDrops the top of stack element, replacing the underlying …\nReturns the contents of a dropped file as a byte vector, …\nReturns the number of files that have been dropped.\nReturns the file path of a dropped file, if available.\nConsume the first <code>n</code> elements from the iterator eagerly, …\nConsume the first <code>n</code> elements from the iterator eagerly, …\nConsume the last <code>n</code> elements from the iterator eagerly, and …\nConsume the last <code>n</code> elements from the iterator eagerly, and …\nDuplicates the top stack element.\nDuplicates the top stack pair of elements.\nDuplicates the back pair of elements, at the back.\nDuplicates the front pair of elements, at the front.\nDuplicates the back element at the back\nDuplicates the front element at the front.\nDuplicate the odd lanes to the even lanes.\nDuplicate the even-indexed lanes to the odd lanes.\nCopy the low lane of the input to both lanes of the output.\nDuplicate the odd lanes to the even lanes.\nDuplicate the odd-indexed lanes to the even lanes.\nDuplicate the odd-indexed lanes to the even lanes.\nReturn an iterator adaptor that produces elements that …\nReturn an iterator adaptor that produces elements that …\nReturn an iterator adaptor that produces elements that …\nReturn an iterator adaptor that produces elements that …\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed from an earlier point …\nThe delta movement since the last event.\nGet a <code>Pin&lt;&amp;mut E&gt;</code>\nReturns the amount of time elapsed since this instant.\nReturns the difference from this system time to the …\nReturns the elapsed time since this instant.\nHeight from the baseline to the top of the <code>em</code> square.\nHeight from the baseline to the bottom of the <code>em</code> square.\nReturns an emoji associated to each month.\nReturns the emoji associated to the weekday.\nA constructor with the given <code>state</code> and an empty value.\nCreates an iterator that yields nothing.\nReturns <code>true</code> if the queue is empty.\nCreates a value that is always at EOF for reads, and …\nReturns the key value used to mark empty slots.\nCreates a canonical empty interval, equivalent to <code>open</code>…\nReturns an empty set of signals.\nCreates an iterator over <code>T</code> which returns no elements.\nCreates a canonical empty interval, equivalent to <code>open</code>…\nCreate a new zero-sized slice.\nCreate a new zero-sized slice in the provided buffer.\nCreate a new empty string with a default buffer\nCreate a new empty string with a provided buffer\nCreates a canonical empty interval, equivalent to <code>open</code>…\nEnables focus change mode.\nEnables receiving mouse events.\nEnables raw mode.\nEnables raw mode.\nEnables the raw mode.\nDetermines if a log message with the specified metadata …\nEncodes <code>self</code> into the given <code>writer</code>, returning the bytes …\nEncodes <code>input</code> into a <code>String</code>.\nEncodes <code>input</code> into a <code>String</code>.\nEncodes <code>input</code> into a <code>String</code>.\nEncodes <code>input</code> into a <code>String</code>.\nEncodes <code>input</code> into a <code>String</code>.\nEncodes <code>input</code> into a <code>String</code>.\nEncodes the given linear <code>v</code>alue using this gamma: …\nEncodes the given linear <code>v</code>alue using this gamma: …\nEncodes the value into a byte buffer for WASM FFI.\nEncodes the given <code>v</code>alue using the sRGB transfer function.\nEncodes the given <code>v</code>alue using the sRGB transfer function.\nEncodes <code>input</code> into <code>output</code>, returning the number of bytes …\nEncodes <code>input</code> into <code>output</code>, returning the number of bytes …\nEncodes <code>input</code> into <code>output</code>, returning the number of bytes …\nEncodes <code>input</code> into <code>output</code>, returning the number of bytes …\nEncodes <code>input</code> into <code>output</code>, returning the number of bytes …\nEncodes <code>input</code> into <code>output</code>, returning the number of bytes …\nEncodes <code>input</code> into <code>output</code>, returning the number of bytes …\nEncodes <code>input</code> into <code>output</code>, returning the number of bytes …\nEncodes <code>input</code> into <code>output</code>, returning the number of bytes …\nEncodes <code>input</code> into <code>output</code>, returning the number of bytes …\nEncodes this scalar as UTF-16 into the provided byte …\nEncodes this scalar as UTF-8 into the provided byte buffer,\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nReturns the required output buffer size for encoding …\nComputes the size of <code>self</code> when encoded.\nComputes the size of <code>self</code> when encoded.\nReturns the upper bound of the range (inclusive).\nThe upper bound of the range (exclusive).\nThe upper bound of the range (exclusive).\nThe upper bound of the range (inclusive)\nEnd index bound.\nDetermines whether <code>child</code> is a suffix of <code>self</code>.\nAlias of <code>push_back</code>.\nSwitches to the alternate screen.\nAdds the contents of an iterator of entries to the set …\nAdds the contents of an iterator of entries to the list …\nAdds the contents of an iterator of entries to the map …\nGets the given key’s corresponding entry in the map for …\nGets the given value’s corresponding entry in the set …\nGets the given key’s corresponding entry in the map for …\nGets the given value’s corresponding entry in the set …\nRetrieves an entry for a given key.\nAdds a new entry to the set output.\nAdds a new entry to the list output.\nAdds a new entry to the map output.\nGets the given key’s corresponding entry by reference in …\nAdds a new entry to the set output.\nAdds a new entry to the list output.\nCreates an iterator which gives the current iteration …\nCreates an iterator which gives the current iteration …\nCreates an iterator which gives the current iteration …\nCreates an iterator which gives the current iteration …\nCreates an iterator which gives the current iteration …\nCreates an iterator which gives the current iteration …\nCreates an iterator which gives the current iteration …\nCreates an iterator which gives the current iteration …\n<code>devela_macros</code> Generates a unit-only enum with variants …\nDefines an enum and an associated type set of its variants.\nInserts or updates an explicit environment variable …\n<code>core</code> Inspects an environment variable at compile time.\nClears all explicitly set environment variables and …\nRemoves an explicitly set environment variable and …\nInserts or updates multiple explicit environment variable …\nReturns the epoch offset in microseconds.\nReturns the epoch offset in microseconds.\nReturns the epoch offset in milliseconds.\nReturns the epoch offset in milliseconds.\nReturns the current timestamp as an <code>f64</code> value in …\nReturns the current timestamp as an <code>f64</code> value in …\nReturns the epoch offset in nanoseconds.\nReturns the epoch offset in nanoseconds.\nWrites all bytes to stderr. Returns error on syscall …\nWrites bytes to stderr. Returns error on syscall failure.\nWrites string + newline to stderr. Optimized for small …\nTests for <code>self</code> and <code>other</code> values to be equal, and is used …\nNot a direct intrinsic, this is a <code>cmp_eq_mask</code> and then a …\nEquality for two <code>Arc</code>s.\nNot a direct intrinsic, this is a <code>cmp_eq_mask</code> and then a …\nNot a direct intrinsic, this is a <code>cmp_eq_mask_i8_m128i</code> and …\nPerforms a comparison to get a mask, then moves the mask …\nPerforms a comparison to get a mask, then moves the mask …\nReturns <code>true</code> if <code>self == other</code>.\nReturns <code>true</code> if <code>self == other</code>.\nReturns <code>true</code> if <code>self == other</code>.\nReturns <code>true</code> if <code>self == other</code> using total order.\nCompares raw pointers for equality.\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of string slices in …\nChecks the equality of two string slices in compile-time.\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nChecks the equality of two slices of primitives in …\nEquality for two <code>Rc</code>s.\nPanics\nEquality for two <code>OnceLock</code>s.\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nChecks that two strings are an ASCII case-insensitive …\nConverts from <code>Result&lt;T, E&gt;</code> to <code>Option&lt;E&gt;</code>.\nReturns the error number (if applicable).\n(error) Outputs a message to the console with the error …\nReturns the error which caused the call to …\n<code>log</code> Logs a message at the indicated level.\nChecks if two errors are equivalent based on their kind or …\nReturns the kind of the error, if applicable.\nThe length of the error in bytes, if known.\nThe type of mouse event (Click, MouseDown, MouseMove, …\nThe type of pointer event (PointerDown, PointerMove, etc.).\nExecutes JavaScript code immediately.\nExecutes JavaScript inside this worker, returning a …\nExecutes JavaScript code immediately.\n(setInterval) Executes JavaScript code repeatedly at a …\n(setInterval) Executes JavaScript code repeatedly at a …\nEvaluates a polynomial at the <code>self</code> point value, using …\n(setTimeout) Executes JavaScript code after a delay in …\n(setTimeout) Executes JavaScript code after a delay in …\n(addEventListener) Attaches a Rust function <code>event</code> listener …\n(addEventListener) Attaches a JavaScript function <code>event</code> …\n(addEventListener) Attaches a Rust function as a …\n(addEventListener) Attaches a Rust function as a …\n(removeEventListener) Removes a a Rust function <code>event</code> …\n(removeEventListener) Removes a JavaScript function <code>event</code> …\nIf the iterator yields exactly one element, that element …\nIf the iterator yields exactly one element, that element …\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nExecutes the given command directly.\nReturns <code>true</code> if the path points at an existing entity.\nReturns Ok(true) if the path points at an existing entity.\nDoes this path exist?\nDoes this path exist?\nTerminates the current process with the specified exit …\nTerminates the current process with the specified exit …\nReturns an error if a nonzero exit status was received.\nWas termination successful?  Returns a <code>Result</code>.\nExit the current process with the given <code>ExitCode</code>.\n$e^x$ (the exponential function).\nThe gamma exponent (<code>γ</code>) used in the encoding/decoding …\n$2^x$.\nThe exponential minus 1, more accurately.\nReturns the contained <code>Some</code> value, consuming the <code>self</code> value.\nReturns the contained <code>Ok</code> value, consuming the <code>self</code> value.\nReturns the contained <code>Err</code> value, consuming the <code>self</code> value.\nExposes the “provenance” part of the pointer for …\nReturns a reference to the extension data for the current …\nExtend the buffer (fallible).\nExtends a collection with the contents of an iterator.\nInserts all new key-values from the iterator to existing …\nInserts all new key-values from the iterator to existing …\nInserts all new key-values from the iterator to existing …\nExtends the stack from an iterator.\nExtend a slice with an iterator.\nExtends <code>self</code> with <code>Path</code> elements from <code>iter</code>.\nCreates a layout describing the record for <code>self</code> followed by\nExtends the back of the destaque from an iterator.\nExtends the back of the destaque from an iterator, …\nClones and appends all elements in a slice to the <code>Vec</code>.\nGiven a range <code>src</code>, clones a slice of elements in that …\nCopies elements from <code>src</code> range to the end of the string.\nExtends the front of the destaque from an iterator.\nExtends the front of the destaque from an iterator, …\nExtends a collection with exactly one element.\nExtends a collection with exactly one element.\nExtends a collection with exactly one element.\nExtends a collection with exactly one element.\nExtends a collection with exactly one element.\nExtends a collection with exactly one element.\nExtends a collection with exactly one element.\nExtends a collection with exactly one element.\nCreates a layout describing the record for <code>self</code> followed by\nReserves capacity in a collection for the given number of …\nReserves capacity in a collection for the given number of …\nReserves capacity in a collection for the given number of …\nReserves capacity in a collection for the given number of …\nReserves capacity in a collection for the given number of …\nReserves capacity in a collection for the given number of …\nReserves capacity in a collection for the given number of …\nReserves capacity in a collection for the given number of …\nHelper to extend during construction (See <code>Self::extend</code>).\nExtracts the extension (without the leading dot) of …\nA slice of extra paired glyphs.\nGets the <code>f32</code> lane requested. Returns as an <code>i32</code> bit pattern.\nGets an <code>i16</code> value out of an <code>m128i</code>, returns as <code>i32</code>.\nGets an <code>i16</code> value out of an <code>m256i</code>, returns as <code>i32</code>.\nExtracts an <code>i32</code> lane from <code>m256i</code>\nGets the <code>i32</code> lane requested. Only the lowest 2 bits are …\nExtracts an <code>i64</code> lane from <code>m256i</code>\nGets the <code>i64</code> lane requested. Only the lowest bit is …\nGets the <code>i8</code> lane requested. Only the lowest 4 bits are …\nGets an <code>i8</code> value out of an <code>m256i</code>, returns as <code>i32</code>.\nDrains elements which are true under the given predicate, …\nDrains elements which are true under the given predicate, …\nCreates an iterator that visits elements (key-value pairs) …\nCreates an iterator that visits elements in the specified …\nCreates an iterator which uses a closure to determine if …\nCreates an iterator which uses a closure to determine if …\nExtracts an <code>m128</code> from <code>m256</code>\nExtracts an <code>m128d</code> from <code>m256d</code>\nExtracts an <code>m128i</code> from <code>m256i</code>\nGets an <code>m128i</code> value out of an <code>m256i</code>.\nGet a <code>Pin&lt;&amp;mut F&gt;</code>\nReturns the multiplication factor for the prefix as an f64.\nReturns the multiplication factor for the prefix as an …\nReturns the multiplication factor for the prefix as an i64.\nThe factorial.\nComputes the absolute value of the current value, and sets …\nComputes the absolute value of the current value, and sets …\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdd to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nAdds to the current value, returning the previous value.\nBitwise and with the current value, returning the previous …\nBitwise and with the current value, returning the previous …\nLogical “and” with a boolean value.\nBitwise and with the current value, returning the previous …\nBitwise and with the current value, returning the previous …\nBitwise and with the current value, returning the previous …\nBitwise and with the current value, returning the previous …\nBitwise and with the current value, returning the previous …\nBitwise and with the current value, returning the previous …\nBitwise and with the current value, returning the previous …\nBitwise and with the current value, returning the previous …\nBitwise and with the current value, returning the previous …\nBitwise and with the current value, returning the previous …\nLogical “and” with a boolean value.\nPerforms a bitwise “and” operation on the address of …\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nOffsets the pointer’s address by adding <code>val</code> <em>bytes</em>, …\nOffsets the pointer’s address by subtracting <code>val</code> <em>bytes</em>, …\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMaximum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nMinimum with the current value.\nLogical “nand” with a boolean value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nBitwise “nand” with the current value.\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nNegates the current value, and sets the new value to the …\nLogical “not” with a boolean value.\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nLogical negates the current value, and sets the new value …\nBitwise or with the current value, returning the previous …\nBitwise or with the current value, returning the previous …\nBitwise or with the current value, returning the previous …\nBitwise or with the current value, returning the previous …\nBitwise or with the current value, returning the previous …\nBitwise or with the current value, returning the previous …\nBitwise or with the current value, returning the previous …\nBitwise or with the current value, returning the previous …\nBitwise or with the current value, returning the previous …\nLogical “or” with a boolean value.\nBitwise or with the current value, returning the previous …\nBitwise or with the current value, returning the previous …\nBitwise or with the current value, returning the previous …\nLogical “or” with a boolean value.\nPerforms a bitwise “or” operation on the address of …\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nBitwise “or” with the current value.\nOffsets the pointer’s address by adding <code>val</code> (in units of …\nOffsets the pointer’s address by subtracting <code>val</code> (in …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtract from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nSubtracts from the current value, returning the previous …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nFetches the value, and applies a function to it that …\nBitwise xor with the current value, returning the previous …\nBitwise xor with the current value, returning the previous …\nBitwise xor with the current value, returning the previous …\nBitwise xor with the current value, returning the previous …\nBitwise xor with the current value, returning the previous …\nBitwise xor with the current value, returning the previous …\nBitwise xor with the current value, returning the previous …\nBitwise xor with the current value, returning the previous …\nLogical “xor” with a boolean value.\nBitwise xor with the current value, returning the previous …\nBitwise xor with the current value, returning the previous …\nBitwise xor with the current value, returning the previous …\nBitwise xor with the current value, returning the previous …\nLogical “xor” with a boolean value.\nPerforms a bitwise “xor” operation on the address of …\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nBitwise “xor” with the current value.\nAdds a new field to the generated struct output.\nAdds a new field to the generated tuple struct output.\n<code>devela_macros</code> Generates an expression for accessing a …\nAdds a new field to the generated struct output.\nAdds a new field to the generated tuple struct output.\nThe source file containing the message.\nReturns the name of the source file from which the panic …\nReturns the value of the dwFileAttributes field of this …\nReturns the file name of this directory entry without any …\nReturns the final component of the <code>Path</code>, if there is one.\nExtracts the prefix of <code>self.file_name</code>.\nReturns the value of the nFileSize{High,Low} fields of …\nThe source file containing the message, if it is a <code>&#39;static</code> …\nExtracts the stem (non-extension) portion of <code>self.file_name</code>…\nReturns the file type for the file that this entry points …\nReturns the file type for this metadata.\nReturns the <code>FileType</code>.\nReturns the <code>FileType</code>.\nReturns the name of the source file as a nul-terminated …\nA file has been dropped over the application. Applications …\nA file has been dropped over the application. Applications …\nFills all elements of the array with the given <code>element</code>.\nFills all elements of the grid with the given <code>element</code>.\nReturns the character used as ‘fill’ whenever there is …\nReturns the contents of the internal buffer, filling it …\nReturns the contents of the “front” slice as returned …\nFills all elements of the array with the default value.\nFills all <code>None</code> elements of the array with the given cloned …\n(fillRect) Draws a filled rectangle.\n(fillStyle) Sets the color or style for filling shapes.\n(fillText) Draws filled text at the specified position.\nCreates an iterator which uses a closure to determine if …\nCreates an iterator which uses a closure to determine if …\nCreates an iterator which uses a closure to determine if …\nCreates an iterator which uses a closure to determine if …\nCreates an iterator which uses a closure to determine if …\nCreates an iterator which uses a closure to determine if …\nCreates an iterator which uses a closure to determine if …\nCreates an iterator which uses a closure to determine if …\nReturns <code>None</code> if the option is <code>None</code>, otherwise calls …\nMakes a new <code>Ref</code> for an optional component of the borrowed …\nMakes a new <code>RefMut</code> for an optional component of the …\nCreates an iterator that both filters and maps.\nCreates an iterator that both filters and maps.\nCreates an iterator that both filters and maps.\nCreates an iterator that both filters and maps.\nCreates an iterator that both filters and maps.\nCreates an iterator that both filters and maps.\nCreates an iterator that both filters and maps.\nCreates an iterator that both filters and maps.\nMakes a <code>MappedMutexGuard</code> for a component of the borrowed …\nMakes a <code>MappedRwLockReadGuard</code> for a component of the …\nMakes a <code>MappedRwLockWriteGuard</code> for a component of the …\nReturn an iterator adaptor that filters and transforms …\nReturn an iterator adaptor that filters and transforms …\nReturn an iterator adaptor that filters every <code>Result::Ok</code> …\nReturn an iterator adaptor that filters every <code>Result::Ok</code> …\nSearches for an element of an iterator that satisfies a …\nSearches for an element of an iterator that satisfies a …\nSearches for an element of an iterator that satisfies a …\nSearches for an element of an iterator that satisfies a …\nSearches for an element of an iterator that satisfies a …\nSearches for an element of an iterator that satisfies a …\nSearches for an element of an iterator that satisfies a …\nSearches for an element of an iterator that satisfies a …\nFinds the index of the first 1 in <code>self</code> from the …\nFinds the index of the first 1 in <code>self</code> from the …\nFinds the index of the first 0 in <code>self</code> from the …\nFinds the index of the first 0 in <code>self</code> from the …\nFinds the index of the first occurrence of <code>element</code> in the …\nFinds the index of the last 1 in <code>self</code> from the …\nFinds the index of the last 1 in <code>self</code> from the …\nFinds the index of the last 0 in <code>self</code> from the …\nFinds the index of the last 0 in <code>self</code> from the …\nApplies function to the elements of iterator and returns …\nApplies function to the elements of iterator and returns …\nApplies function to the elements of iterator and returns …\nApplies function to the elements of iterator and returns …\nApplies function to the elements of iterator and returns …\nApplies function to the elements of iterator and returns …\nApplies function to the elements of iterator and returns …\nApplies function to the elements of iterator and returns …\nFind the value of the first element satisfying a predicate …\nFind the value of the first element satisfying a predicate …\nFind the value of the first element satisfying a predicate …\nFind the value of the first element satisfying a predicate …\nFind the position and value of the first element …\nFind the position and value of the first element …\nReturns the hash value for the values written so far.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nFinishes output and returns any error encountered.\nMarks the struct as non-exhaustive, indicating to the …\nMarks the tuple struct as non-exhaustive, indicating to …\nMarks the set as non-exhaustive, indicating to the reader …\nMarks the list as non-exhaustive, indicating to the reader …\nMarks the map as non-exhaustive, indicating to the reader …\nReturns a reference to the first element in the set, if …\nSearch for the first occurrence of a byte in a slice.\nSearch for the first occurrence of two possible bytes in a …\nSearch for the first occurrence of three possible bytes in …\nReturns the first entry in the map for in-place …\nThe first char in <code>glyphs</code>.\nReturns the first key-value pair in the map. The key in …\nReturns the first non-unit variant name, if any.\nReturns the index of the first <code>None</code> element.\nReturns some exclusive reference to the first <code>None</code> element.\nReturns some reference to the first <code>None</code> element.\nReturns the index of the first <code>Some</code> element.\nReturns some exclusive reference to the first <code>Some</code> element.\nReturns some reference to the first <code>Some</code> element\n$ 1 / \\sqrt{x} $ the fast inverse square root algorithm.\nReturns flags for formatting.\nCreates an iterator that works like map, but flattens …\nCreates an iterator that works like map, but flattens …\nCreates an iterator that works like map, but flattens …\nCreates an iterator that works like map, but flattens …\nCreates an iterator that works like map, but flattens …\nCreates an iterator that works like map, but flattens …\nCreates an iterator that works like map, but flattens …\nCreates an iterator that works like map, but flattens …\nCreates an iterator that flattens nested structure.\nCreates an iterator that flattens nested structure.\nCreates an iterator that flattens nested structure.\nCreates an iterator that flattens nested structure.\nCreates an iterator that flattens nested structure.\nCreates an iterator that flattens nested structure.\nCreates an iterator that flattens nested structure.\nCreates an iterator that flattens nested structure.\nConverts from <code>Option&lt;Option&lt;T&gt;&gt;</code> to <code>Option&lt;T&gt;</code>.\nConverts from <code>Result&lt;Result&lt;T, E&gt;, E&gt;</code> to <code>Result&lt;T, E&gt;</code>\nReturn an iterator adaptor that flattens every <code>Result::Ok</code> …\nReturn an iterator adaptor that flattens every <code>Result::Ok</code> …\nFlips the bits in <code>self</code> from the <code>[start..=end]</code> checked …\nFlips the bits in <code>self</code> from the <code>[start..=end]</code> range.\nFlips the sign of <code>self</code>.\nThe largest integer less than or equal to <code>self</code>.\nRound each lane to a whole number, towards negative …\nRound the low lane of <code>b</code> toward negative infinity, other …\nRound each lane to a whole number, towards negative …\nRound the low lane of <code>b</code> toward negative infinity, high …\nRound <code>f32</code> lanes towards negative infinity.\nRound <code>f64</code> lanes towards negative infinity.\nReturns the flow information associated with this address.\nFlushes any buffered records.\nFlushes this output stream, ensuring that all …\nFlushes the file, ensuring that all intermediately …\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nFormats the value using the given formatter.\nOctal formats each float’s bit pattern (via <code>f32::to_bits</code>…\nBinary formats each float’s bit pattern (via <code>f32::to_bits</code>…\nUpperExp formats each float.\nDebug formats each float.\nLowerExp formats each float.\nLowerHex formats each float’s bit pattern (via …\nDisplay formats each float, and leaves the type name off …\nUpperHex formats each float’s bit pattern (via …\nLowerHex formats each double’s bit pattern (via …\nDisplay formats each double, and leaves the type name off …\nBinary formats each double’s bit pattern (via …\nDebug formats each double.\nUpperExp formats each double.\nUpperHex formats each double’s bit pattern (via …\nOctal formats each double’s bit pattern (via <code>f64::to_bits</code>…\nLowerExp formats each double.\nUpperHex formats each <code>i32</code>.\nBinary formats each <code>i32</code>.\nUpperExp formats each <code>i32</code>.\nLowerHex formats each <code>i32</code>.\nOctal formats each <code>i32</code>.\nLowerExp formats each <code>i32</code>.\nDebug formats each <code>i32</code>.\nDisplay formats each <code>i32</code>, and leaves the type name off of …\nDisplay formats each float, and leaves the type name off …\nBinary formats each float’s bit pattern (via <code>f32::to_bits</code>…\nUpperHex formats each float’s bit pattern (via …\nLowerExp formats each float.\nDebug formats each float.\nUpperExp formats each float.\nOctal formats each float’s bit pattern (via <code>f32::to_bits</code>…\nLowerHex formats each float’s bit pattern (via …\nUpperExp formats each double.\nLowerHex formats each double’s bit pattern (via …\nBinary formats each double’s bit pattern (via …\nLowerExp formats each double.\nDisplay formats each double, and leaves the type name off …\nDebug formats each double.\nUpperHex formats each double’s bit pattern (via …\nOctal formats each double’s bit pattern (via <code>f64::to_bits</code>…\nUpperHex formats each <code>i32</code>.\nUpperExp formats each <code>i32</code>.\nBinary formats each <code>i32</code>.\nDisplay formats each <code>i32</code>, and leaves the type name off of …\nLowerHex formats each <code>i32</code>.\nDebug formats each <code>i32</code>.\nLowerExp formats each <code>i32</code>.\nOctal formats each <code>i32</code>.\nWraps the array in an <code>ArrayFmt</code> for formatting purposes.\nWraps the array in an <code>ArrayFmt</code> for formatting purposes.\nFormat the program and arguments of a Command for display. …\nShows a human-readable description of the <code>ErrorKind</code>.\nWraps the tuple in a <code>TupleFmt</code> for formatting purposes.\nWraps the tuple in a <code>TupleFmt</code> for formatting purposes.\nFormats the interval as a human-readable string.\nFormat some value, or an alternative if it’s <code>None</code>.\nFormat some value, or run an alternative closure if it’s …\nFormat some value, or display an empty string if it’s …\n<code>core</code> Compares the addresses of the two function pointers …\nFolds every element into an accumulator by applying an …\nFolds every element into an accumulator by applying an …\nFolds every element into an accumulator by applying an …\nFolds every element into an accumulator by applying an …\nFolds every element into an accumulator by applying an …\nFolds every element into an accumulator by applying an …\nFolds every element into an accumulator by applying an …\nFolds every element into an accumulator by applying an …\nAccumulator of the elements in the iterator.\nAccumulator of the elements in the iterator.\nReduces a hash to <code>n</code> bits using xor folding.\nReduces a hash to <code>n</code> bits using xor folding.\nReduces a hash to <code>n</code> bits using xor folding.\nReduces a hash to <code>n</code> bits using xor folding.\nFold <code>Result</code> values from an iterator.\nFold <code>Result</code> values from an iterator.\nFold <code>Option</code> values from an iterator.\nFold <code>Option</code> values from an iterator.\nAn iterator method that applies a function, producing a …\nAn iterator method that applies a function, producing a …\nThe topmost possible bounding box for text.\nThe lowest possible bounding box for text.\nCalls a closure on each element of an iterator.\nCalls a closure on each element of an iterator.\nCalls a closure on each element of an iterator.\nCalls a closure on each element of an iterator.\nCalls a closure on each element of an iterator.\nCalls a closure on each element of an iterator.\nCalls a closure on each element of an iterator.\nCalls a closure on each element of an iterator.\nProduces layout describing a record that could be used to …\nProduces layout describing a record that could be used to …\nForces the evaluation of this lazy value and returns a …\nForces the evaluation of this lazy value and returns a …\nForcibly captures a full backtrace, regardless of …\nForces the evaluation of this lazy value and returns a …\nForces the evaluation of this lazy value and returns a …\nTakes ownership and “forgets” about <code>t</code> <em>without running </em>…\nFormat all iterator elements, separated by <code>sep</code>.\nFormat all iterator elements, separated by <code>sep</code>.\nTakes an <code>FmtArguments</code> struct and returns the resulting …\nSets the pixel format.\n🖹 <code>alloc</code> Creates a String using interpolation of runtime …\nSets the <code>format</code> field to <code>PixelFormat::ABGR8888</code>.\nSets the <code>format</code> field to <code>PixelFormat::AG88</code>.\nSets the <code>format</code> field to <code>PixelFormat::ARGB8888</code>.\n🖹 <code>core</code> Constructs parameters for the other …\nSets the <code>format</code> field to <code>PixelFormat::BGR555</code>.\nSets the <code>format</code> field to <code>PixelFormat::BGR565</code>.\nSets the <code>format</code> field to <code>PixelFormat::BGR888</code>.\nSets the <code>format</code> field to <code>PixelFormat::BGRA8888</code>.\nWrites formatted output into the given byte buffer.\n🖹 Returns a formatted <code>str</code> slice backed by a buffer, …\nSets the <code>format</code> field to <code>PixelFormat::G1</code>.\nSets the <code>format</code> field to <code>PixelFormat::G2</code>.\nSets the <code>format</code> field to <code>PixelFormat::G4</code>.\nSets the <code>format</code> field to <code>PixelFormat::G8</code>.\nSets the <code>format</code> field to <code>PixelFormat::GA88</code>.\nSets the <code>format</code> field to <code>PixelFormat::PAL1</code>.\nSets the <code>format</code> field to <code>PixelFormat::PAL2</code>.\nSets the <code>format</code> field to <code>PixelFormat::PAL4</code>.\nSets the <code>format</code> field to <code>PixelFormat::PAL8</code>.\nSets the <code>format</code> field to <code>PixelFormat::RGB555</code>.\nSets the <code>format</code> field to <code>PixelFormat::RGB565</code>.\nSets the <code>format</code> field to <code>PixelFormat::RGB888</code>.\nSets the <code>format</code> field to <code>PixelFormat::RGBA8888</code>.\nFormat all iterator elements, separated by <code>sep</code>.\nFormat all iterator elements, separated by <code>sep</code>.\nComputes the forward wavelet transform on the given input.\nThe fractional part of <code>self</code>.\nIf <code>true</code>, the framebuffer includes an alpha channel. …\nReturns an iterator over the backtrace frames.\nConverts to this type from the input type.\nReturns the argument unchanged.\nAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.\nAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.\nAllocates a reference-counted slice and fills it by …\nMove a boxed object to a new, reference-counted allocation.\nConverts a <code>T</code> into an <code>Arc&lt;T&gt;</code>\nConverts a <code>[T; N]</code> into an <code>Arc&lt;[T]&gt;</code>.\nAllocates a reference-counted slice and moves <code>v</code>’s items …\nCreates an atomically reference-counted pointer from a …\nConverts an atomically reference-counted string slice into …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>&amp;</code><code>CString</code> into a borrowed <code>Cow</code> without copying or …\nConverts a <code>String</code> into an <code>Owned</code> variant. No heap …\nCreates an <code>Owned</code> variant of <code>Cow</code> from an owned instance of …\nConverts a <code>CString</code> into an owned <code>Cow</code> without copying or …\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to an …\nConverts a <code>CStr</code> into a borrowed <code>Cow</code> without copying or …\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a slice.\nCreates a clone-on-write pointer from a reference to …\nMoves the string into a <code>Cow::Owned</code>.\nConverts the string reference into a <code>Cow::Borrowed</code>.\nConverts the string reference into a <code>Cow::Borrowed</code>.\nReturns the argument unchanged.\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to <code>Vec</code>.\nConverts a string slice into a <code>Borrowed</code> variant. No heap …\nCreates a clone-on-write pointer from an owned instance of …\nConverts a <code>String</code> reference into a <code>Borrowed</code> variant. No …\nCreates a clone-on-write pointer from a reference to <code>Path</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExamples\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>String</code> into a box of dyn <code>Error</code>.\nConverts a <code>&amp;mut str</code> into a <code>Box&lt;str&gt;</code>\nConverts a vector into a boxed slice.\nConverts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>\nConverts a <code>PathBuf</code> into a Box&lt;Path&gt;.\nConverts a <code>Cow</code> into a box of dyn <code>Error</code>.\nCreates a boxed <code>Path</code> from a clone-on-write pointer.\nConverts the given <code>String</code> to a boxed <code>str</code> slice that is …\nCopies the string into a newly allocated Box&lt;OsStr&gt;.\nConverts a <code>Cow</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.\nConverts a <code>T</code> into a <code>Box&lt;T&gt;</code>\nCopies the string into a newly allocated Box&lt;OsStr&gt;.\nConverts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>\nConverts a <code>Cow&lt;&#39;_, str&gt;</code> into a <code>Box&lt;str&gt;</code>\nCreates a boxed <code>Path</code> from a reference.\nConverts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>\nConverts a <code>&amp;CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the contents …\nReturns the argument unchanged.\nConverts a <code>str</code> into a box of dyn <code>Error</code>.\nConverts a <code>&amp;mut [T]</code> into a <code>Box&lt;[T]&gt;</code>\nConverts a <code>&amp;mut CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the …\nConverts a type of <code>Error</code> into a box of dyn <code>Error</code>.\nConverts a type of <code>Error</code> + <code>Send</code> + <code>Sync</code> into a box of dyn …\nCreates a boxed <code>Path</code> from a reference.\nConverts an <code>OsString</code> into a Box&lt;OsStr&gt; without copying or …\nConverts a <code>Cow&lt;&#39;a, OsStr&gt;</code> into a Box&lt;OsStr&gt;, by copying …\nConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>Box&lt;CStr&gt;</code>, by copying the …\nConverts a <code>String</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.\nConverts a <code>Cow&lt;&#39;_, [T]&gt;</code> into a <code>Box&lt;[T]&gt;</code>\nConverts a <code>str</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.\nConverts a <code>CString</code> into a Box&lt;CStr&gt; without copying or …\nConverts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>bool</code> into an <code>AtomicBool</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts NonZero&lt;i8&gt; to NonZero&lt;i32&gt; losslessly.\nConverts NonZero&lt;i64&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;i32&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;i32&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;i16&gt; to NonZero&lt;isize&gt; losslessly.\nConverts NonZero&lt;i16&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;i16&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;i16&gt; losslessly.\nConverts NonZero&lt;i16&gt; to NonZero&lt;i32&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;i32&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;u16&gt; losslessly.\nConverts NonZero&lt;i8&gt; to NonZero&lt;isize&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;u32&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;u64&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;u128&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;usize&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;u32&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;u64&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;u128&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;usize&gt; losslessly.\nConverts NonZero&lt;u64&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;i8&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;u32&gt; to NonZero&lt;u64&gt; losslessly.\nConverts NonZero&lt;i8&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;u32&gt; to NonZero&lt;u128&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;u32&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;u32&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;i128&gt; losslessly.\nReturns the argument unchanged.\nConverts NonZero&lt;u16&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;i32&gt; losslessly.\nConverts NonZero&lt;u64&gt; to NonZero&lt;u128&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;isize&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;i8&gt; to NonZero&lt;i16&gt; losslessly.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>Vec&lt;T&gt;</code> into a <code>BinaryHeap&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a array filled with an iterator, in the heap.\nReturns a array filled with an iterator, in the stack.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExamples\nReturns the argument unchanged.\nConverts a <code>[(K, V); N]</code> into a <code>BTreeMap&lt;K, V&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a queue filled with an iterator, in the heap.\nReturns the argument unchanged.\nReturns a queue filled with an iterator, in the stack.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a stack filled with an iterator, in the stack.\nReturns a stack filled with an iterator, in the heap.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>Cow&lt;&#39;a, OsStr&gt;</code> into an <code>OsString</code>, by copying the …\nConverts a Box&lt;OsStr&gt; into an <code>OsString</code> without copying or …\nConverts a <code>PathBuf</code> into an <code>OsString</code>\nConverts a <code>String</code> into an <code>OsString</code>.\nCopies any value implementing AsRef&lt;OsStr&gt; into a newly …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>File</code> that takes ownership of the given file …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>&amp;T</code> to a <code>NonNull&lt;T&gt;</code>.\nConverts a <code>&amp;mut T</code> to a <code>NonNull&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>ErrorKind</code> into an <code>Error</code>.\nConverts <code>TryReserveError</code> to an error with …\nReturns the argument unchanged.\nConverts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.\nConverts a <code>[T; N]</code> into a <code>BTreeSet&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>[T; N]</code> into a <code>LinkedList&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>[T; N]</code> into a <code>VecDeque&lt;T&gt;</code>.\nTurn a <code>Vec&lt;T&gt;</code> into a <code>VecDeque&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>OnceCell&lt;T&gt;</code> which already contains the given …\nReturns the argument unchanged.\nCreates a new <code>Cell&lt;T&gt;</code> containing the given value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCopies the string into a newly allocated Rc&lt;OsStr&gt;.\nConverts a <code>Path</code> into an <code>Rc</code> by copying the <code>Path</code> data into a …\nConverts a <code>CString</code> into an Rc&lt;CStr&gt; by moving the <code>CString</code> …\nConverts a <code>&amp;CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the contents …\nConverts a <code>&amp;mut CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the …\nConverts a generic type <code>T</code> into an <code>Rc&lt;T&gt;</code>\nConverts a <code>[T; N]</code> into an <code>Rc&lt;[T]&gt;</code>.\nAllocates a reference-counted slice and fills it by …\nAllocates a reference-counted slice and fills it by …\nAllocates a reference-counted string slice and copies <code>v</code> …\nAllocates a reference-counted string slice and copies <code>v</code> …\nAllocates a reference-counted string slice and copies <code>v</code> …\nMove a boxed object to a new, reference counted, …\nAllocates a reference-counted slice and moves <code>v</code>’s items …\nCreates a reference-counted pointer from a clone-on-write …\nConverts a reference-counted string slice into a byte …\nConverts a <code>PathBuf</code> into an Rc&lt;Path&gt; by moving the <code>PathBuf</code> …\nReturns the argument unchanged.\nCopies the string into a newly allocated Rc&lt;OsStr&gt;.\nConverts a <code>Path</code> into an <code>Rc</code> by copying the <code>Path</code> data into a …\nConverts an <code>OsString</code> into an Rc&lt;OsStr&gt; by moving the …\nCreates a new <code>RefCell&lt;T&gt;</code> containing the given value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>UnsafeCell&lt;T&gt;</code> containing the given value.\nReturns the argument unchanged.\nConverts an <code>OsString</code> into a <code>PathBuf</code>.\nConverts a clone-on-write pointer to an owned path.\nConverts a <code>String</code> into a <code>PathBuf</code>\nConverts a borrowed <code>OsStr</code> to a <code>PathBuf</code>.\nConverts a Box&lt;Path&gt; into a <code>PathBuf</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTakes ownership of a file descriptor and returns a <code>Stdio</code> …\nConverts a <code>ChildStderr</code> into a <code>Stdio</code>.\nRedirect command stdout/stderr to our stderr\nConverts a <code>File</code> into a <code>Stdio</code>.\nReturns the argument unchanged.\nConverts a <code>ChildStdout</code> into a <code>Stdio</code>.\nRedirect command stdout/stderr to our stdout\nConverts a <code>ChildStdin</code> into a <code>Stdio</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new mutex in an unlocked state ready for use. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new cell with its contents set to <code>value</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts the given <code>String</code> to a vector <code>Vec</code> that holds …\nConverts a clone-on-write slice into a vector.\nAllocates a <code>Vec&lt;T&gt;</code> and fills it by cloning <code>s</code>’s items.\nAllocates a <code>Vec&lt;T&gt;</code> and fills it by cloning <code>s</code>’s items.\nAllocates a <code>Vec&lt;T&gt;</code> and fills it by cloning <code>s</code>’s items.\nAllocates a <code>Vec&lt;T&gt;</code> and fills it by cloning <code>s</code>’s items.\nAllocates a <code>Vec&lt;T&gt;</code> and moves <code>s</code>’s items into it.\nReturns the argument unchanged.\nTurn a <code>VecDeque&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.\nConverts a <code>BinaryHeap&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.\nAllocates a <code>Vec&lt;u8&gt;</code> and fills it with a UTF-8 string.\nConverts a boxed slice into a vector by transferring …\nConverts a <code>CString</code> into a Vec&lt;u8&gt;.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …\nReturns the argument unchanged.\nConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …\nConverts a Vec&lt;NonZero&lt;u8&gt;&gt; into a <code>CString</code> without copying …\nConverts a &amp;CStr into a <code>CString</code> by copying the contents …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>&amp;String</code> into a <code>String</code>.\nReturns the argument unchanged.\nConverts a <code>&amp;str</code> into a <code>String</code>.\nAllocates an owned <code>String</code> from a single character.\nConverts a <code>&amp;mut str</code> into a <code>String</code>.\nConverts a clone-on-write string to an owned instance of …\nConverts the given boxed <code>str</code> slice to a <code>String</code>. It is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs an <code>ExitCode</code> from an arbitrary u8 value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>RecvError</code> into a <code>TryRecvError</code>.\nConverts a <code>RecvError</code> into a <code>RecvTimeoutError</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>SendError&lt;T&gt;</code> into a <code>TrySendError&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUse a <code>Wake</code>-able type as a <code>Waker</code>.\nUse a <code>Wake</code>-able type as a <code>Waker</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert <code>..</code> into allocation mode.\nConvert an exclusive reference to an array into borrowing …\nConvert an exclusive slice into borrowing mode.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCopies this address to a new <code>IpAddr::V6</code>.\nCopies this address to a new <code>IpAddr::V4</code>.\nCreates an <code>IpAddr::V4</code> from a four element byte array.\nCreates an <code>IpAddr::V6</code> from a sixteen element byte array.\nCreates an <code>IpAddr::V6</code> from an eight element 16-bit array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUses <code>Ipv4Addr::from_bits</code> to convert a host byte order <code>u32</code> …\nCreates an <code>Ipv4Addr</code> from a four element byte array.\nReturns the argument unchanged.\nUses <code>Ipv6Addr::from_bits</code> to convert a host byte order <code>u128</code> …\nCreates an <code>Ipv6Addr</code> from a sixteen element byte array.\nCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.\nReturns the argument unchanged.\nConverts a tuple struct (Into&lt;<code>IpAddr</code>&gt;, <code>u16</code>) into a …\nReturns the argument unchanged.\nConverts a <code>SocketAddrV4</code> into a <code>SocketAddr::V4</code>.\nConverts a <code>SocketAddrV6</code> into a <code>SocketAddr::V6</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>\nConvert the <code>CtOption&lt;T&gt;</code> wrapper into an <code>Option&lt;T&gt;</code>, …\nReturns the argument unchanged.\nMoves <code>val</code> into a new <code>Some</code>.\nConverts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …\nConverts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>.\nConverts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …\nReturns the argument unchanged.\nConverts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMoves the value into a <code>Poll::Ready</code> to make a <code>Poll&lt;T&gt;</code>.\nUse a <code>Wake</code>-able type as a <code>RawWaker</code>.\nUse a <code>Wake</code>-able type as a <code>RawWaker</code>.\nUse a <code>Wake</code>-able type as a <code>RawWaker</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>Pinned</code> with a single field\nTransmutes an array into <code>m128</code>.\nTransmutes an array into <code>m128d</code>.\nTransmutes an array into <code>m256</code>.\nTransmutes an array into <code>m256d</code>.\nConverts an array into a <code>full</code> destaque.\nConverts an array into a <code>full</code> stack.\nCreate from an array.\nCreate from an array.\nCreate from an array.\nCreate from an array.\nCreate from an array.\nCreate from an array.\nCreate from an array.\nCreate from an array.\nConstructs a primitive <code>T</code> from an array of <code>U</code> in big-endian …\nConverts an array into a <code>full</code> destaque.\nConverts an array into a <code>full</code> stack.\nConstructs a primitive <code>T</code> from an array of <code>U</code> in …\nConstructs a primitive <code>T</code> from an array of <code>U</code> in …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts from the bit patterns of these floats (<code>[u32;4]</code>).\nConverts from the bit patterns of these doubles (<code>[u64;2]</code>).\nConverts from the bit patterns of these floats (<code>[u32;8]</code>).\nConverts from the bit patterns of these doubles (<code>[u64;4]</code>).\nConstructs a <code>KeyMods</code> from a bitfield representation.\nConverts a native byte order <code>u32</code> into an IPv4 address.\nConverts a native byte order <code>u128</code> into an IPv6 address.\nConverts a boxed slice of bytes to a boxed string slice …\nReturns a new instance constructed from the given bytes.\nReturns a new instance constructed from the given bytes.\nReturns a string from an array of <code>bytes</code>.\nReturns a string from a slice of <code>bytes</code>.\nReturns a string from an array of <code>bytes</code> that must be valid …\nReturns a string from an array of <code>bytes</code> that must be valid …\nCreates a C string wrapper from a byte slice with any …\nCreates a C string wrapper from a byte slice with exactly …\nUnsafely creates a C string wrapper from a byte slice.\nCreates a new <code>StringNonul</code> from a <code>char</code>.\nCreates a new <code>StringU8</code> from a <code>char</code>.\nCreates a new <code>StringNonul</code> from a <code>char16</code>.\nCreates a new <code>StringU8</code> from a <code>char16</code>.")