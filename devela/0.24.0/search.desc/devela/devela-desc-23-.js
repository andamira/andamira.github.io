searchState.loadedDescShard("devela", 23, "📐 A static <code>R×C</code> shaped matrix backed by an array.\nA container that may hold either a borrowed or owned value.\n<code>core</code> A wrapper type to construct uninitialized instances …\n2^20.\nA multimedia key.\nA multimedia key.\nOpens the default media player application.\n10^6\n🌐 Memory-related operations.\nMarker trait to verify memory alignment between two types.\n<code>alloc</code> Layout of a block of memory.\n🚩 <code>alloc</code> The [<code>MemLayout</code>] parameters violated constraints.\nIndicates a type is Plain Old Data, and meets specific …\nMenu key.\n10^-6\nAccess to the device microphone.\nMutes or unmutes the microphone.\nDecreases the microphone input volume.\nIncreases the microphone input volume.\nAlias for <code>Microseconds</code>.\nMiddle mouse button (usually the scroll wheel button).\nMIDI device access (without system exclusive messages).\n10^-3\nAlias for <code>Milliseconds</code>.\n<code>miniquad</code> Describes a hardware and platform-specific setup.\n<code>miniquad</code> Defines how an application responds to events in …\nAn extension trait for miniquad’s <code>MiniquadEventHandler</code>.\nDraws a single fullscreen quad textured by a pixel buffer.\n<code>miniquad</code> Platform-specific settings.\n<code>miniquad</code> Low-level interface for rendering operations in …\n<code>miniquad</code>’s UI Service.\nA wrapper namespace over <code>miniquad::window</code> functions.\n⚖️ Represents a mismatch between an expected <code>need</code> and …\n🚩+ An error composite of <code>DataOverflow</code> + <code>IndexOutOfBounds</code>…\n🚩 The given capacity did not match the required …\nThe given capacity did not match the required constraints.\nThe given capacity did not match the required constraints.\nThe given capacity did not match the required constraints.\n🚩 The dimensions given did not match the elements …\nThe dimensions given did not match the elements provided.\n🚩 The given indices does not match the expected order.\nThe given indices does not match the expected order.\nThe given indices does not match the expected order.\nThe provided values are not compatible in size.\nA modifer key.\nA modifier key.\nThe first day of the week, according to the ISO-8601 …\n🕘 The months of the year.\nA mouse pointer.\nFires when the mouse button is pressed down.\nFires when the mouse moves over an element.\nFires when the mouse button is released.\nThe pointer moved without a button press/release.\n🌐 Multi-producer, single-consumer channel operations.\n🔄 <code>std</code> An owning iterator over messages on an […\n🔄 <code>std</code> An iterator over messages on an [<code>MpscReceiver</code>]\n🚩 <code>std</code> An error returned from [<code>MpscReceiver::recv</code>].\n<code>std</code> The receiving half of an [<code>Mpsc</code>][crate::Mpsc] [<code>channel</code>][…\n🚩+ <code>std</code> Possible errors that made [<code>recv_timeout</code>][…\n🚩 <code>std</code> An error returned from [<code>MpscSender::send</code>] or […\n<code>std</code> The sending half of an <em>async</em> <code>Mpsc</code> channel.\n<code>std</code> The sending half of a <em>sync</em> <code>Mpsc</code> channel.\n🔄 <code>std</code> Attempts to yield all pending values for an […\n🚩+ <code>std</code> Possible reasons that [<code>try_recv</code>][…\n🚩+ <code>std</code> Possible error outcomes for the [<code>try_send</code>][…\n<code>core</code> The multiplication operator <code>*</code>.\n<code>core</code> The multiplication assignment operator <code>*=</code>.\nMutes or unmutes the audio.\n<code>std</code> A mutual exclusion primitive useful for protecting …\n<code>std</code> An RAII implementation of a “scoped lock” of a …\nNot a Number (NaN).\nThe duration of one nanosecond.\nKnow whether dropping values of this type matters, in …\nKnow whether dropping values of this type matters, in …\n$ -1/φ = 1-φ $ <code>≈ -0.61803398…</code> <em>The negative </em>…\nNegative infinity (-∞).\nA <code>Vector</code> with all negative ones.\nA <code>Vector</code> with all negative ones.\nThe negative of the multiplicative identity -1.\nThe negative of the additive identity -0.\n<code>NLDLY</code>: Newline type 0_.\n<code>NLDLY</code>: Newline type 1.\nNewline delay mask. Values are <code>NL0</code> and <code>NL1</code>.\nDon’t update file access time on reads.\nDon’t make this fd the controlling terminal (for …\nDisable flushing the input and output queues when …\nDon’t follow symbolic links.\nThe host specified did not exist.\nAn input file (not a system file) did not exist or was not …\nNon-blocking mode.\nYou did not have sufficient permission to perform the …\nCommand not found.\nThe user specified did not exist.\nIndicates whether the <code>ns</code> field is enabled.\nWhether the number can represent big quantities.\nWhether the number uses a fixed-point representation.\nWhether the number uses a floating-point representation.\nWhether the number uses an integer representation.\nWhether the number has a memory niche optimization.\nWhether the number includes the sign.\nThe greatest representable value.\nThe greatest representable negative value, if applicable.\nThe greatest normalized value (e.g. 1.0 for float, <code>MAX</code> for …\nThe maximum representable power of two within the type’s …\nThe smallest representable value.\nThe smallest normalized value (e.g. 0.0 for float, <code>MIN</code> for …\nThe smallest representable positive value.\nThe additive inverse of <code>ONE</code> (<code>-1</code>), if applicable.\nThe multiplicative identity (<code>1</code>).\nThe smallest odd prime and the first nontrivial divisor (<code>3</code>…\nThe only even prime and the fundamental doubling factor (<code>2</code>…\nThe additive identity (<code>0</code>), if applicable.\nNaN (not a number): this value results from calculations …\n10^-9\nAlias for <code>Nanoseconds</code>.\n<code>core</code> The unary negation operator <code>-</code>.\nInteger is too small to store in target integer type.\nA negative sign (-).\nBy convention, <strong>negative</strong> angles represent a <strong>clockwise</strong> …\nU+0015\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nSkips to the next media track.\n∅ Represents the absence of some data.\nThis tuple without its head.\nNo input was available (e.g., when reading from stdin).\nAn inverse doesn’t exist.\n∅ 𝟙 Represents the absence of a number.\nThis tuple without its tail.\n∅ 🕘 Represents the absence of time.\n🚩 The node is empty.\nThe node is empty.\n🚩 The link is not set.\nThe link is not set.\n🚩 The link is not unique.\nThe link is not unique.\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\nA non-negative value is required.\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ A signed integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙 ⚗️ An unsigned integer that is known not to equal …\n𝟙⚗️ <code>core</code> A value that is known not to equal zero.\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\n𝟙⚗️ <code>core</code> A signed integer that is known not to …\nA non-zero value is required.\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\n𝟙⚗️ <code>core</code> An unsigned integer that is known not to …\nRepresents the absence of <em>data</em>.\nNo value.\nNo dithering is applied. Pixels are directly quantized …\nAn absence of sign, associated with Zero. (The default)\n2^0 (no prefix).\n10^0 (no prefix)\nRepresents the absence of <em>data</em>.\nRepresents the absence of <em>data</em>.\nRepresents the absence of <em>data</em>.\nRepresents the absence of <em>data</em>.\nRepresents the absence of <em>data</em>.\nRepresents the absence of <em>data</em>.\nRepresents the absence of <em>data</em>.\nRepresents the absence of <em>data</em>.\nNo value.\nSimply comparing the range in RGB space.\nA normal component, e.g., <code>a</code> and <code>b</code> in <code>a/b</code>.\nA regular floating point number, not any of the …\n<code>core</code> The unary logical negation operator <code>!</code>.\nA filesystem object is, unexpectedly, not a directory.\n🚩+ An error composite of <code>NotImplemented</code> + <code>NotSupported</code>.\nThe network operation failed because it was not connected …\n🚩 There are not enough elements for the operation.\nThere are not enough elements for the operation.\n🚩 There is not enough free space for the operation.\nThere is not enough free space for the operation.\nThere is not enough free space for the operation.\nAn entity was not found, often a file.\n🚩 The requested functionality is not implemented.\nThe requested numerical functionality is not implemented.\nThe requested numerical functionality is not implemented.\nThe requested functionality is not implemented.\nThe requested functionality is not implemented.\nThe specified environment variable was not present in the …\nSeek on unseekable file.\n🚩 The requested functionality is not supported by this …\nThe requested numerical functionality is not supported.\nThe requested functionality is not supported by this …\nThe requested functionality is not supported by this type.\nThe requested functionality is not supported by this type.\nThe specified environment variable was found, but it did …\nPermission to display system notifications.\nU+0000 (Default variant)\n𝟙 Common trait for numeric types.\nA numeric-related error.\nA numeric-related error.\nThe underlying numeric type implementing this trait.\n𝟙 Fundamental numeric constants for both integer and …\n𝟙 🚩+ A numeric-related error.\n𝟙 Common trait for integer types.\nNum Lock key.\nOn the numeric keypad.\n𝟙 Common auto-trait for referenced numeric types.\n𝟙 Common auto-trait for referenced integer types.\n𝟙 ⚖️ A numeric-related result.\n𝐓 𝟙 Converts a number into a string representation, …\n📐 A common trait for all vectors.\nU+0023\nMap CR to NL on output.\nFill character is ASCII <code>DEL</code> (0177).\nSend fill characters for a delay, rather than using a …\nAlias of <code>SUCCESS</code>.\nMap lowercase characters to uppercase on output. (not in …\nA <code>Vector</code> with all ones.\nA <code>Vector</code> with all ones.\nA <code>Vector</code> with all ones.\nThe multiplicative identity 1.\n(XSI) Map NL to CR-NL on output.\nThe <code>NL</code> character is assumed to do the carriage-return …\nDon’t output CR at column 0.\nEnable implementation-defined output processing.\n<code>?std</code> A string describing the specific operating system in …\nAn operating system error has been detected.\nSome system file (e.g., /etc/passwd, /etc/utmp, etc.) does …\nOthers have execute permission (<code>S_IXOTH</code> in POSIX).\nOthers have read permission (<code>S_IROTH</code> in POSIX).\nOthers have write permission (<code>S_IWOTH</code> in POSIX).\n90° and &lt; 180°.\nAn occupied entry.\nAn occupied entry.\nAn entry that contains a value.\n🖹 <code>core</code> <code>o</code> formatting.\nA level lower than all log levels.\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\n<code>std</code> A synchronization primitive for one-time global …\n<code>core</code> A cell which can nominally be written to only once.\n<code>std</code> A synchronization primitive which can be written to …\n<code>std</code> State yielded to <code>Once::call_once_force()</code>’s closure …\nA generic, parameterized <em>enum</em> for expressing structured …\n⚖️ An optional result type that combines success, …\n⚗️ <code>core</code> A type that represents an optional value.\n🖹 The type returned from <code>ExtOption::fmt_or_empty</code>.\n🖹 The type returned from <code>ExtOption::fmt_or</code>.\n🖹 The type returned from <code>ExtOption::fmt_or_else</code>.\n🔄 <code>core</code> An iterator over the value in <code>Some</code> variant of an …\n🔄 <code>core</code> An iterator over a reference to the <code>Some</code> variant …\n🔄 <code>core</code> An iterator over a mutable reference to the <code>Some</code> …\n<code>core</code> Trait for types that form a total order.\n<code>core</code> Derive macro generating an impl of the trait <code>Ord</code>. The …\n⚖️ <code>core</code> The result of a comparison between two values.\n📐 A unitless directional vector in <code>D</code>-dimensional space.\n𝐓 <code>std</code> Borrowed reference to an OS string (See <code>OsString</code>).\n𝐓 <code>std</code> A type for owned, mutable native strings, …\nOther static error.\nOther static error.\nA custom error that does not fall under any other I/O …\nAdditional buttons (e.g., side buttons on advanced mice).\nThe output type for operations.\nSpecifically signed output type for some operations (▶ …\nAn operation could not be completed, because it failed to …\nThe type produced when decoding.\nThe resulting type after applying the <code>+</code> operator.\nThe resulting type after applying the <code>-</code> operator.\nThe resulting type after applying the <code>-</code> operator.\nThe resulting type after applying the <code>!</code> operator.\nThe returned type after the call operator is used.\nThe resulting type after applying the <code>*</code> operator.\nThe resulting type after applying the <code>/</code> operator.\nThe resulting type after applying the <code>%</code> operator.\nThe resulting type after applying the <code>&amp;</code> operator.\nThe resulting type after applying the <code>|</code> operator.\nThe resulting type after applying the <code>^</code> operator.\nThe returned type after indexing.\nThe type of value produced on completion.\nThe output that the future will produce on completion.\nAn arithmetic overflow error, with an optional associated …\n⚖️ A return type encapsulating an owned <strong>state</strong> <code>S</code> and a …\nThe owned version of this numeric type.\nOwned data.\nAn owned, heap-allocated value.\nThe resulting type after obtaining ownership.\nDefines the relationship between a borrowed type and its …\nNumber of bytes per memory page.\nPalette 1bpp.\nPalette 2bpp.\nPalette 4bpp.\nPalette 8bpp.\nEnable parity generation on output and parity checking for …\nMark parity and framing errors.\nIf set, then parity for input and output is odd; otherwise …\nObtain fd for path resolution only (no file access).\nAll characters in the input queue are reprinted when the …\n$ φ  = (1+\\sqrt{5})/2 $ (A001622) <code>≈ 1.61803398…</code> <em>The </em>…\n$ π = \\frac{1}{2} τ = 180\\degree $ (A000796) …\nThe remote system returned something that was “not …\nA keypad key.\nA keypad key.\nPage down key.\nPage up key.\n🌐 Panic-related operations.\n<code>core</code> A simple wrapper around a type to assert that it is …\n<code>std</code> Passed to <code>std::panic::set_hook</code> in <code>std</code>, where panics …\n<code>core</code> Passed to <code>#[panic_handler]</code> in <code>no_std</code>, always carrying …\n<code>core</code> A struct containing information about the location of …\n<code>core</code> A marker trait which represents a shared reference …\n<code>core</code> A marker trait which represents “panic safe” …\nA reference to the parent directory, i.e., <code>..</code>.\n𝐓𝟙🚩 <code>core</code> An error which can be returned when …\n𝐓𝟙🚩 <code>core</code> An error which can be returned when …\n𝐓𝟙🚩 <code>core</code> Kinds of errors that can cause parsing …\n<code>core</code> Trait for comparisons using the equality operator.\n<code>core</code> Derive macro generating an impl of the trait <code>PartialEq</code>…\n<code>core</code> Trait for types that form a partial order.\n<code>core</code> Derive macro generating an impl of the trait …\n🚩+ An error composite of <code>NotEnoughSpace</code> + <code>PartiallyAdded</code>…\n🚩 The operation could only add a subset of the elements.\nThe operation could only add a subset of the elements.\nThe operation could only add a subset of the elements.\n<code>std</code> A slice of a path (akin to <code>str</code>).\n<code>std</code> An owned, mutable path (akin to <code>String</code>).\n<code>std</code> A single component of a path.\n<code>std</code> Helper struct for safely printing paths with <code>format!</code> …\n<code>std</code> Windows path prefixes, e.g., <code>C:</code> or <code>\\\\server\\share.</code>\n<code>std</code> Wraps a Windows path prefix as well as its unparsed …\n🚩 <code>std</code> An error returned from <code>Path::strip_prefix</code> if the …\nPause key.\nPauses media playback.\n🧪 Permission to use a payment handler.\n2^50.\nA pen pointer.\nRepresents that a value is not ready yet.\nU+0025\nThe operation lacked the necessary privileges to complete.\nPersistent storage access to prevent data loss.\n10^15\n<code>core</code> Zero-sized type used to mark things that “act like…\n<code>core</code> A marker type which does not implement <code>Unpin</code>.\n10^-12\n<code>core</code> A pointer which pins its pointee in place.\nA wrapper for structurally pinned data.\nPixel format type of input image.\nComputes the mean weighted by pixel count.\nStarts media playback.\nToggles between playing and pausing media.\nU+002B\n🌐 A collection of methods for encoding and decoding PNM …\n📐 A coordinate position in <code>D</code>-space without extent.\n📐 A specific position in 2d-space without a size.\n📐 A specific position in 3d-space without a size.\n🖹 <code>core</code> <code>p</code> formatting.\nFires when the pointer is pressed down.\nFires when the pointer is moved.\nFires when the pointer is released.\n📐 A static sequence of <code>N</code> <code>D</code>-dimensional <code>Point</code>s.\n📐 A static sequence of 2-dimensional <code>Point</code>s.\n🚩 <code>std</code> A type of error which can be returned whenever a …\nThe lock could not be acquired because another thread …\nInteger is too large to store in target integer type.\n📐 A location in <code>D</code>-dimensional space.\nA positive sign (+).\nBy convention, <strong>positive</strong> angles represent a <strong>counterclockwise</strong>…\nA positive value is required.\nPowers the system off or performs a power-related action.\nA Windows path prefix, e.g., <code>C:</code> or <code>\\\\server\\share</code>.\nThis tuple with an extra element <code>T</code> prepended to it.\nThe key was pressed.\nThe button was pressed.\nReturns to the previous media track.\nOffers methods for casting between primitives.\nOffers methods to construct a primitive from an array or …\nOffers methods to split a primitive into an array of …\nPrint Screen key.\n<code>std</code> Representation of a running or exited child process.\n<code>std</code> A builder for configuring and spawning new processes.\n<code>std</code> An iterator over the command arguments.\n<code>std</code> An iterator over the command environment variables.\n⚖️ <code>std</code> The status code the process returns to its …\n⚖️ <code>std</code> Describes the result of a process after it has …\n<code>std</code> The output of a finished process.\n<code>std</code> A handle to a child process’s stderr.\n<code>std</code> A handle to a child process’s standard input (stdin).\n<code>std</code> Specifies how to handle standard I/O streams in […\n<code>std</code> A handle to a child process’s standard output …\n<code>std</code> A trait for implementing arbitrary return types in the …\nThe user has not yet granted or denied the permission.\n🌐 Pointer-related operations.\n<code>core</code> <code>*mut T</code> but non-zero and <em>covariant</em>.\nPermission to receive push notifications.\n10^-30\nU+003F\n10^30\nFilesystem quota or some other kind of quota was exceeded.\nU+0022\nThe radix or base of the internal representation.\nOpen for reading only.\nOpen for reading and writing.\nTypical gamma value for Rec.1886 (≈2.4)\nTypical gamma value for Rec.1886 (≈2.4)\nR′G′B′ coefficients for computing luma using Rec. …\nR′G′B′ coefficients for computing luma using Rec. …\nR′G′B′ coefficients for computing luma using Rec. 601…\nR′G′B′ coefficients for computing luma using Rec. 601…\nR′G′B′ coefficients for computing luma using Rec. 709…\nR′G′B′ coefficients for computing luma using Rec. 709…\nCode to set the foreground color to red.\nCode to set the background color to red.\nCode to turn off all effects and colors.\nResolve path without escaping starting dir (openat2()).\nTreat starting dir as root during resolution.\nBlock magic-link traversal (procfs-style links).\nBlock all symlink traversal.\nDon’t cross mount points during resolution.\nCode to set the foreground color to <code>fg: [r, g, b]</code> values, …\nRGB color 15bpp.\nRGB color 16bpp.\nRGB color 24bpp. (Default)\nRGBA color 32bpp.\nCode to set the background color to <code>bg: [r, g, b]</code> values.\nCode to set the foreground color to <code>fg: [r, g, b]</code> values.\nIncreases the audio volume.\n<code>std</code> The default state for [<code>HashMapStd</code>][crate::HashMapStd].\n📏 <code>core</code> A range bounded inclusively below and …\n<code>core</code> Implemented by Rust’s built-in range types\n📏 <code>core</code> A range only bounded inclusively below (<code>start..</code>).\n📏 <code>core</code> An unbounded range (<code>..</code>).\n📏 <code>core</code> A range bounded inclusively below and above (…\n📏 <code>core</code> A range only bounded exclusively above (<code>..end</code>).\n📏 <code>core</code> A range only bounded inclusively above (<code>..=end</code>).\n📏 A generic ratio representing a proportional …\n<code>alloc</code> A single-threaded reference-counting pointer.\n<code>alloc</code> A version of <code>Rc</code> that holds a non-owning reference to …\nThe reading portion of the <code>TcpStream</code> should be shut down.\nThe filesystem or storage medium is read-only, but a write …\nRepresents that a value is immediately ready.\nStarts recording media.\n1 Red\n<code>core</code> A wrapper type for an inmutably borrowed value from a …\n<code>core</code> A mutable memory location with dynamically checked …\n🚩 <code>core</code> An error returned by <code>RefCell::try_borrow</code>.\n🚩 <code>core</code> An error returned by <code>RefCell::try_borrow_mut</code>.\n<code>core</code> A wrapper type for a mutably borrowed value from a …\n180° and &lt; 360°.\n📐 A <code>Position</code>ed <code>Extent</code>.\n📐 A <code>Stride</code>d <code>Region</code> defining structured traversal.\nNo ordering constraints, only atomic operations.\nThe key was released.\nWhen coupled with a store, all previous operations become …\nThe button was released.\n<code>core</code> The remainder operator <code>%</code>.\n<code>core</code> The remainder assignment operator <code>%=</code>.\nFires when the window is resized.\nResource is busy.\n⚖️ <code>core</code> A type that represents either success (<code>Ok</code>) or …\n🔄 <code>core</code> An iterator over the value in <code>Ok</code> variant of a …\n🔄 <code>core</code> An iterator over a reference to the <code>Ok</code> variant …\n🔄 <code>core</code> An iterator over a mutable reference to the <code>Ok</code> …\nThe type of value this coroutine returns.\n<code>core</code> A helper struct for reverse ordering.\nPlays media in reverse.\nU+005C\nRewinds through media.\nThe <code>RFC 4648</code> standard encoding, used in <code>Base16</code>, <code>Base32</code>, …\nThe <code>RFC 4648</code> hexadecimal-variant encoding, used in <code>Base32</code>.\nRGB color with 3 components.\nRGB color with 16-bit integer components (sRGB gamma …\nRGB color with 8-bit integer components (sRGB gamma space).\nRGB color with 64-bit float components (sRGB gamma space).\nRGB color with 64-bit float components (linear space).\nRGB+A color with 4 components.\nRGB+A color with 16-bit integer components (sRGB gamma …\nRGB+A color with 8-bit integer components (sRGB gamma …\nRGB+A color with 64-bit float components (sRGB gamma …\nRGB+A color with 64-bit float components (linear space, …\nRGB+A color with 64-bit float components (linear space, …\nRGB+A color with 16-bit integer components (sRGB gamma …\nRGB+A color with 8-bit integer components (sRGB gamma …\nRGB+A color with 64-bit float components (sRGB gamma …\nThe right hand side type for operations.\nOnt he right side of the keyboard.\n= 90° (¼τ), a quarter turn.\nRight arrow key.\nRight mouse button.\nIndication that contents should be right-aligned.\nRight <strong>Alt</strong> key.\nRight <strong>Control</strong> (Ctrl) key.\nU+007D\nRight <strong>Hyper</strong> key (historically used in some Unix systems).\nRight <strong>Meta</strong> key (used in some Unix-based systems, overlaps …\nU+0029\nRight <strong>Shift</strong> key.\nU+005D\nRight <strong>Super</strong> key (Windows key on Windows, Command ⌘ on …\n10^27\n10^-27\nThe root directory component, appears after any prefix and …\n<code>std</code> A reader-writer lock\n<code>std</code> RAII structure used to release the shared read access …\n<code>std</code> RAII structure used to release the exclusive write …\nIndicates whether the <code>s</code> field is enabled.\nIf signum is <code>SIGCHLD</code>, do not receive notification when …\nIf signum is <code>SIGCHLD</code>, do not transform children into …\nIf the <code>SA_NOCLDWAIT</code> flag is set when establishing a …\nCall the signal handler on an alternate signal stack …\nRestore the signal action to the default upon entry to the …\nProvide behavior compatible with BSD signal semantics by …\nNot intended for application use.\nThe signal handler takes three arguments, not one.\nThe duration of one second.\nThe primary separator string of path components for the …\nThe primary separator string of path components for the …\nThe primary separator char of path components for the …\nThe primary separator char of path components for the …\nSeek from start of file.\nSet file descriptor flags.\nSet file status flags.\nSet record locking info.\nSet record locking wait.\nSet owner’s process ID.\nSet pipe buffer size.\nSet SIGIO/SIGURG signals.\nSet group ID on execution (<code>S_ISGID</code> in POSIX).\nSet user ID on execution (<code>S_ISUID</code> in POSIX).\nAbort signal from <code>abort(3)</code>.\nTimer signal from <code>alarm(2)</code>.\nBus error (bad memory access)\nChild stopped or terminated.\nA synonym for <code>SIGCHLD</code>.\nContinue if stopped.\nFloating-point exception.\nHangup detected on controlling terminal or death of …\nIllegal Instruction\nA synonym for <code>SIGPWR</code>.\nInterrupt from keyboard.\nI/O now possible (4.2BSD).\nIOT trap. A synonym for <code>SIGABRT</code>.\nKill signal.\nNumber of explicit bits used to represent the significand …\nBroken pipe: write to pipe with no readers; see <code>pipe(7)</code>.\nPollable event (Sys V); synonym for <code>SIGIO</code>.\nProfiling timer expired.\nPower failure (System V).\nQuit from keyboard.\nInvalid memory reference.\nStack fault on coprocessor (unused).\nStop process.\nBad system call (SVr4); see also <code>seccomp(2)</code>.\nTermination signal.\nTrace/breakpoint trap.\nStop typed at terminal.\nTerminal input for background process.\nTerminal output for background process.\nSynonymous with <code>SIGSYS</code>.\nUrgent condition on socket (4.2BSD).\nUser-defined signal 1.\nUser-defined signal 2.\nVirtual alarm clock (4.2BSD).\nWindow resize signal (4.3BSD, Sun).\nCPU time limit exceeded (4.2BSD); see <code>setrlimit(2)</code>.\nFile size limit exceeded (4.2BSD); see <code>setrlimit(2)</code>.\nThe default signal handling.\nIgnore this signal.\nSocket (S_IFSOCK in POSIX).\nAn internal software error has been detected.\n$ \\sqrt{10} $ (A010467) <code>≈ 3.16227766…</code>\n$ \\sqrt{11} $ (A010468) <code>≈ 3.31662479…</code>\n$ \\sqrt{12} $ (A010469) <code>≈ 3.46410161…</code>\n$ \\sqrt{2} $ (A002193, wikipedia) <code>≈ 1.41421356…</code>\n$ \\sqrt{3} $ (A002194, wikipedia) <code>≈ 1.73205080…</code>\n$ \\sqrt{5} $ (A002163, wikipedia) <code>≈ 2.23606797…</code>\n$ \\sqrt{6} $ (A010464) <code>≈ 2.44948974…</code>\n$ \\sqrt{7} $ (A010465) <code>≈ 2.64575131…</code>\n$ \\sqrt{8} $ (A010466) <code>≈ 2.82842712…</code>\n$ \\sqrt{φ} $ (A139339) <code>≈ 1.27201964…</code>\n$ \\sqrt{π} = \\sqrt{\\frac{1}{2} τ} $ (A002161) …\n$ \\sqrt{τ} = \\sqrt{2π} $ (A019727) <code>≈ 2.50662827…</code>\n$ φ^2 = φ+1 = (3+\\sqrt{5})/2 $ (A104457) …\nR′G′B′ coefficients for computing sRGB luma (same as …\nR′G′B′ coefficients for computing sRGB luma (same as …\nTypical gamma value for sRGB/Rec.709 (≈2.2)\nTypical gamma value for sRGB/Rec.709 (≈2.2)\nThreshold for sRGB linear segment (0.0031308)\nThreshold for sRGB linear segment (0.0031308)\nStandard error.\nStandard input.\nStandard output.\nSticky bit - restricted deletion (<code>S_ISVTX</code> in POSIX).\nSuccessful termination.\nThe canonical <code>ExitCode</code> for successful termination on this …\nSymbolic link (S_IFLNK in POSIX).\nSynchronous I/O.\n<code>core</code> Provides intentionally-saturating arithmetic on <code>T</code>.\nEtymology\nThe associated scalar type.\nRepresents the base approximation in the wavelet transform,\nA general-purpose RAII guard that executes a callback on …\nAllows preventing the screen from sleeping.\nScroll Lock key.\nDefault time granularity.\nU+003B\n<code>core</code> Types that can be transferred across thread …\nLike <code>Acquire</code>/<code>Release</code>/<code>AcqRel</code> (for load, store, and …\nU+000F\nU+000E\nRepresents the sign of a number.\nRepresents a chunk containing exactly one element\nA configurable sixel string builder from a slice of pixel …\nA sixel-related error.\nMethod for selecting a representative color from a color …\nQuality modes.\nMethod for finding the largest dimension for splitting, …\n<code>core</code> Types with a constant size known at compile time.\nPuts the system into sleep mode.\n🌐 Slice-related operations, most of them <em>const</em>.\nU+0061\nU+0062\nU+0063\nU+0064\nU+0065\nU+0066\nU+0067\nU+0068\nU+0069\nU+006A\nU+006B\nU+006C\nU+006D\nU+006E\nU+006F\nU+0070\nU+0071\nU+0072\nU+0073\nU+0074\nU+0075\nU+0076\nU+0077\nU+0078\nU+0079\nU+007A\n<code>core</code> An internet socket address, either IPv4 or IPv6.\n<code>core</code> An IPv4 socket address.\n<code>core</code> An IPv6 socket address.\nU+002F\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\n🌐 Provides sorting methods for arrays and slices of <code>T</code>, …\nU+0020\nThere is not enough free space for the operation.\nA spinlock providing mutual exclusion without blocking.\nA guard that grants exclusive access to a <code>SpinLock</code> value.\n📦 A static stack backed by an <code>Array</code>.\n🔄 An iterator over <code>Stack</code> elements.\n📦 A <code>Stack</code> with an 8-bit index size.\nStale network file handle.\nThe key is not identified as being located in a particular …\nU+0001\nU+0002\nRepresents an entry in a static map allowing for in-place …\n<code>std</code> A handle to the standard error stream of a process.\n<code>std</code> A locked reference to the <code>Stderr</code> handle.\n<code>std</code> A handle to the standard input stream of a process.\n<code>std</code> A locked reference to the <code>Stdin</code> handle.\n<code>std</code> A handle to the global standard output stream of the …\n<code>std</code> A locked reference to the <code>Stdout</code> handle.\nStops media playback.\nAllows to be generic in respect of the data storage.\nAccess to storage that requires explicit user permission.\nThe underlying storage (typically, a filesystem) is full.\nThe stored associated type.\n𝐓 🌐 A string slice namespace.\n= 180° (½τ), a half turn.\n📐 A step size for traversing dimensions or repetitions.\n𝐓 <code>alloc</code> A UTF-8–encoded, growable string.\n𝐓 A UTF-8 string with up to <code>u8::MAX</code> bytes, excluding …\n𝐓 A UTF-8–encoded string, backed by an array with …\nStucki error diffusion dithering.\n<code>core</code> The subtraction operator <code>-</code>.\n<code>core</code> The subtraction assignment operator <code>-=</code>.\n“Subnormal” or “denormal” floating point …\nU+001A\nEtymology\n<code>core</code> Types for which it is safe to share references …\nU+0016\nAn error reported by the system, containing a <code>LINUX_ERRNO</code> …\n<code>std</code> The default memory allocator provided by the operating …\n🕘 <code>std</code> A measurement of a monotonically nondecreasing …\n🕘 <code>std</code> A measurement of the system clock.\nReturned from the <code>duration_since</code> and <code>elapsed</code> methods on …\n🕘 🚩 Returned from the <code>duration_since</code> and <code>elapsed</code> …\n<code>TABDLY</code>: Horizontal-tab delay type 0.\n<code>TABDLY</code>: Horizontal-tab delay type 1.\n<code>TABDLY</code>: Horizontal-tab delay type 2.\n<code>TABDLY</code>: Horizontal-tab delay type 3.\nHorizontal tab delay mask.\n$ τ = 2π = 360\\degree $ (A019692) <code>≈ 6.28318530…</code> <em>The </em>…\nSee tcflush(3) for the argument values <code>TCIFLUSH</code>, <code>TCOFLUSH</code>, …\nGet the current serial port settings. (<em>termio</em>)\nGet the current serial port settings.\nGet the current serial port settings. (<em>termios2</em>)\nSends a STOP character to the terminal, to stop the …\nSends a START character to the terminal, to tell the …\nSuspends output.\nResumes suspended output.\nEquivalent to tcsendbreak(fd, arg).\nSo-called “POSIX version” of <code>TCSBRK</code>.\nSet the current serial port settings. (<em>termio</em>)\nAllow the output buffer to drain, discard pending input, …\nAllow the output buffer to drain, and set the current …\nSet the current serial port settings.\nSet the current serial port settings. (<em>termios2</em>)\nAllow the output buffer to drain, discard pending input, …\nAllow the output buffer to drain, discard pending input, …\nAllow the output buffer to drain, and set the current …\nAllow the output buffer to drain, and set the current …\nEquivalent to tcflow(fd, arg).\nTemporary failure, indicating something that is not really …\nTurn break off, that is, stop sending zero bits.\nRedirect output that would have gone to <code>/dev/console</code> or …\nPut the terminal into exclusive mode.\nSet the line discipline of the terminal.\n(since Linux 3.8) If the terminal is currently in …\nGet the process group ID of the foreground process group …\nReturn the current packet mode setting in the integer …\nPlace the current lock state of the pseudoterminal slave …\nOpen and return a new file descriptor that refers to the …\nGet the session ID of the given terminal.\n(“Get software carrier flag”)\nGet window size.\nSame as <code>FIONREAD</code>.\nLinux-specific ioctls.\nClear the indicated modem bits.\nSet the indicated modem bits.\nGet the status of modem bits.\nSet the status of modem bits.\nDCD (data carrier detect)\nsee <code>TIOCM_CAR</code>\nCTS (clear to send)\nDSR (data set ready)\nDTR (data terminal ready)\nDSR (data set ready/line enable)\nsee <code>TIOCM_RNG</code>\nRNG (ring)\nRTS (request to send)\nSecondary RXD (receive)\nSecondary TXD (transmit)\nGive up this controlling terminal.\nDisable exclusive mode.\nGet the number of bytes in the output buffer.\nEnable (when *argp is nonzero) or disable packet mode.\nTurn break on, that is, start sending zero bits.\nMake the given terminal the controlling terminal of the …\nGet line status register.\nGet the line discipline of the terminal.\nSet the foreground process group ID of this terminal.\nSet (if *argp is nonzero) or remove (if *argp is zero) the …\n(“Set software carrier flag”)\nInsert the given byte in the input queue.\nSet window size.\nCreate an unnamed temporary file (automatically deleted on …\nSend the <code>SIGTTOU</code> signal to the process group of a …\n(A058265) <code>≈ 1.83928675…</code> <em>The tribonacci constant</em>.\nTruncate file upon open.\nFile type mask (S_IFMT in POSIX).\nTab key.\nThe last element of the tuple, at index <code>ARITY-1</code>.\nThe resulting type after dereferencing.\n<code>core</code> The context of an asynchronous task.\n<code>core</code> Indicates whether a value is ready or if the current …\n<code>core</code> Allows the implementor of a task executor to create a …\n<code>core</code> A virtual function pointer table that specifies the …\n⚛️ <code>?alloc</code> The implementation of waking a task on an …\n<code>core</code> A handle for waking up a task by notifying its …\n🔄 <code>std</code> An iterator that infinitely accepts connections …\n<code>std</code> A TCP socket server, listening for connections.\n<code>std</code> Possible values which can be passed to the …\n<code>std</code> A TCP stream between a local and a remote socket.\n2^40.\n10^12\nThe size of the terminal.\nA text-related error.\nA text-related error.\n🚩+ A text-related composite error.\n⚖️ A text-related result.\nText-based and intended to be human-readable.\n<code>std</code> A handle to a thread.\n🚩 <code>std</code> An error returned by [<code>ThreadLocalKey::try_with</code>].\n<code>std</code> Thread factory, which can be used to configure the …\n<code>std</code> A unique identifier for a running thread.\n<code>std</code> An owned permission to join on a thread (block on its …\n<code>std</code> A thread local storage key which owns its contents.\n⚖️ <code>std</code> A specialized <code>Result</code> type for threads.\n<code>std</code> A scope to spawn scoped threads in.\n<code>std</code> An owned permission to join on a scoped thread (block …\nEtymology\nU+007E\nA time-related error.\nA time error.\n🕘 A signed duration of time, stored as an <code>(i64, i32)</code> …\n🚩+ 🕘 A time-related composite error.\nRepresents standard time granularities from years to …\n🕘 ⚖️ A time-related result.\n🕘 A source of timestamps with a known granularity and …\n🕘 A full time split from years to nanoseconds.\n🕘 A time split from hours to nanoseconds.\n🕘 A time split from hours to seconds, normalized <em>(128b </em>…\n🕘 A time split from hours to seconds.\n🕘 A time split from hours to seconds, normalized <em>(128b </em>…\n🕘 A time split from milliseconds to nanoseconds.\n🕘 A time split from milliseconds to nanoseconds, …\n🕘 A time split from years to nanoseconds, normalized …\n🕘 A time split from years to days.\n🕘 A time split from years to days, normalized <em>(128b </em>…\n🕘 A time split from years to seconds.\n🕘 A time split from years to seconds, normalized <em>(128b </em>…\n🕘 Timecode splitting and formatting.\nThe I/O operation’s timeout expired, causing it to be …\n🚩 The operation has exceeded the allowed execution time.\nThis <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …\n<code>alloc</code> A generalization of Clone to borrowed data.\n<code>std</code> Objects which can be converted or resolved to one or …\n𝐓 <code>alloc</code> A trait for converting a value to a [<code>String</code>].\nToo many (hard) links to the same filesystem object.\n🧪 Allows a site to access storage without top-level …\nA touch pointer.\nThe “trace” level.\nCorresponds to the <code>Trace</code> log level.\nRepresents a lazy transformation that flattens elements\nDecreases treble levels.\nIncreases treble levels.\nA type-level logical <em>true</em>.\n<code>core</code> Simple and safe type conversions that may fail in a …\n🚩 <code>core</code> The error type returned when a checked integral …\n<code>core</code> An attempted conversion that consumes self, which may …\n🚩+ <code>std</code> An enumeration of possible errors associated …\n⚖️ <code>std</code> A type alias for the result of a nonblocking …\nEtymology\n📦 Extension trait providing convenience methods for …\nAn element of a <code>Tuple</code>.\nAn exclusive reference to an element of a <code>Tuple</code>.\nA shared reference to an element of a <code>Tuple</code>.\nA formatting wrapper for <code>Tuple</code>s, implementing <code>Display</code> and …\n🔄 An iterator over elements of a <code>Tuple</code>.\n🔄 An iterator over exclusive references to elements of …\n🔄 An iterator over shared references to elements of a …\nThe <code>DataType</code> type that pairs with this <code>DataValue</code>.\nThe inner type that serves as the unique identifier for …\n<code>core</code> Represents a globally unique identifier for a type.\nA newtype-based ID that associates a resource with its …\nRepresents an association between a resource and its inner …\n16-bit unsigned integer\n16-bit unsigned integer\n16-bit unsigned integer\n16-bit unsigned integer\n16-bit unsigned integer\n16-bit unsigned integer\n16-bit unsigned integer\n16-bit unsigned integer\n16-bit unsigned integer\n32-bit unsigned integer\n32-bit unsigned integer\n32-bit unsigned integer\n32-bit unsigned integer\n32-bit unsigned integer\n32-bit unsigned integer\n32-bit unsigned integer\n32-bit unsigned integer\n32-bit unsigned integer\n64-bit unsigned integer\n64-bit unsigned integer\n64-bit unsigned integer\n64-bit unsigned integer\n64-bit unsigned integer\n64-bit unsigned integer\n64-bit unsigned integer\n64-bit unsigned integer\n64-bit unsigned integer\n8-bit unsigned integer\n8-bit unsigned integer\n8-bit unsigned integer\n8-bit unsigned integer\n8-bit unsigned integer\n8-bit unsigned integer\n8-bit unsigned integer\n8-bit unsigned integer\n8-bit unsigned integer\nA service is unavailable.\nPrefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>, e.g. …\nCode to set underline effect.\nCode to unset underline effect.\n🕘 <code>std</code> A <code>SystemTime</code> anchored to “1970-01-01 00:00:00 …\nAn anchor in time which can be used to create new …\nAn IPv4 address representing an unspecified address: …\nAn IPv6 address representing the unspecified address: <code>::</code>.\nIndicates whether the <code>us</code> field is enabled.\nThe command was used incorrectly\nUser has execute permission (<code>S_IXUSR</code> in POSIX).\nUser has read permission (<code>S_IRUSR</code> in POSIX).\nUser has write permission (<code>S_IWUSR</code> in POSIX).\n<code>std</code> A UDP socket.\nThe capabilities supported by a <code>UiService</code>.\nImage capabilities.\nInput capabilities.\nSound capabilities.\nSystem capabilities.\nWindow capabilities.\nA user-interface error.\n⚖️ A user-interface result.\nCommon trait for all UI services.\nAn infinite endpoint. Indicates that there is no bound in …\nAn undefined direction can occur when a full-turn angle is …\nAn error returned when an operation could not be completed …\n𝐓 Common trait for unicode scalar types.\nCommon trait for unit prefixes.\nBinary unit prefixes.\nSI (metric) unit prefixes.\n🕘 64-bit Unix time, supporting negative values.\n🕘 32-bit Unix time, supporting only non-negative values.\nUnknown event. Default case.\nThe queried permission is unsupported or unrecognized.\nUnknown key code (default).\n<code>core</code> Types that do not require any pinning guarantees.\n<code>core</code> The core primitive for interior mutability in Rust.\nUnspecified error.\nCapturing a backtrace is not supported, likely because it…\nThis operation is unsupported on this platform.\nUp arrow key.\n🖹 <code>core</code> <code>E</code> formatting.\n🖹 <code>core</code> <code>X</code> formatting.\n64-bit usize\n64-bit usize\n64-bit usize\n64-bit usize\n64-bit usize\n64-bit usize\n64-bit usize\n64-bit usize\nInvalid Utf-8 found while interpreting a byte sequence.\nAn IPv4 address.\nAn IPv4 socket address.\nAn IPv6 address.\nAn IPv6 socket address.\nReturns the number of valid values.\nReturns the number of valid values.\nReturns the number of valid values.\nReturns the number of valid values.\nReturns the number of valid values.\nReturns the number of valid values.\nReturns the number of valid values.\nReturns the number of valid values.\nReturns the number of valid values.\nReturns the number of valid values.\nReturns the number of valid values.\nReturns the number of valid values.\nThe constant value of the type-level boolean.\nA string describing the vendor of the CPU that is …\n<code>VTDLY</code>: Vertical-tab delay type 0.\n<code>VTDLY</code>: Vertical-tab delay type 1.\nVertical tab delay mask. Values are <code>VT0</code> or <code>VT1</code>.\nA vacant entry.\nA vacant entry.\nAn entry that is vacant and can be used for insertion.\nThe <code>DataValue</code> type that pairs with this <code>DataType</code>.\nThe resulting type-level boolean (<code>True</code> or <code>False</code>).\n⚖️ A value with associated quantification.\n🚩 <code>std</code> Returned from [<code>Env::var</code>][crate::Env#method.var].\n📦 <code>alloc</code> A contiguous growable array.\n📦 A persistent data structure with efficient append and …\n📦 <code>alloc</code> A double-ended growable queue.\n📐 A dynamic sequence of <code>D</code>-dimensional <code>Point</code>s.\n📐 A dynamic vector, backed by a primitive <code>Vec</code>.\n📐 A static <code>D</code>-dimensional vector, backed by a primitive …\n📐 A static 2-dimensional vector.\n📐 A static 3-dimensional vector.\nVerbatim prefix, e.g., <code>\\\\?\\cat_pics</code>.\nVerbatim disk prefix, e.g., <code>\\\\?\\C:</code>.\nVerbatim prefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>,\nU+007C\nCode to set the foreground color to white.\nCode to set the background color to white.\nOpen for writing only.\n⚖️ <code>std</code> Whether a timed wait on a condition variable …\nWakes the system from sleep mode.\nThe “warn” level.\nCorresponds to the <code>Warn</code> log level.\n🌐 A Wasm namespace.\n🧺 A WebAssembly global memory allocator that uses a …\nRepresents the detail component in the wavelet transform, …\nTrait for lossy compression of wavelet coefficients.\nA Haar wavelet is a simple, piecewise-constant wavelet.\nTrait defining essential wavelet transform operations.\nDistinguishes the role of a component in wavelet analysis.\nA single unit of the wavelet decomposition at a specific …\n🌐 A Web API namespace.\nHandle to the brower’s global Document associated APIs.\nHandle to a DOM Element.\nA web API Event kind.\nA web API Mouse Event.\nA web API Pointer Event.\nWhich part of the keyboard the key event originates from\nWeb API permissions\nPermission query result state.\nHandle to the browser’s global Window and Screen …\nAggregates the live state of a <code>WebWindow</code>, including its …\nA handle to a JavaScript Web Worker.\nErrors that can occur when working with JavaScript Web …\nRepresents a job running inside a <code>WebWorker</code>.\nEtymology\n🕘 The days of the week.\n7 White\nThe worker was not found.\nThe lock could not be acquired at this time because the …\nThe operation needs to block to complete, but the blocking …\n<code>core</code> Provides intentionally-wrapped arithmetic on <code>T</code>.\nThe writing portion of the <code>TcpStream</code> should be shut down.\nAn error returned when an operation could not be completed …\nIf ICANON is also set, terminal is uppercase only. (not in …\nPositionally stable XOR-based dithering.\nSee: <code>TAB3</code>\n🎲 X ABC PRNG for 8-bit devices.\n🎲 The <code>XorShift128</code> PRNG.\n🎲 The <code>XorShift128+</code> PRNG.\n🎲 The <code>XorShift16</code> PRNG.\n🎲 The <code>XorShift32</code> PRNG.\n🎲 The <code>XorShift64</code> PRNG.\n🎲 The <code>XorShift8</code> PRNG.\n🎲 The <code>Xoroshiro128++</code> PRNG.\n🎲 A simple 8-bit PRNG with 32-bit of state, based on …\n🎲 A simple 8-bit PRNG with 32-bit of state, based on …\nIndicates whether the <code>y</code> field is enabled.\nCode to set the foreground color to yellow.\nCode to set the background color to yellow.\nIndicates whether the 3 fields from <code>y</code> to <code>d</code> are enabled.\nIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are …\nIndicates whether the 6 fields from <code>y</code> to <code>s</code> are enabled.\n3 Yellow\nThe type of value this coroutine yields.\nThe coroutine suspended with a value.\n2^80.\n10^-24\n10^24\nA <code>Vector</code> with all zeros.\nA <code>Vector</code> with all zeros.\nA <code>Vector</code> with all zeros.\nThe additive identity 0.\nA duration of zero time.\nA duration of zero time.\n2^70.\n10^-21\nValue was Zero\nPositive or negative zero.\n10^21\nThe 1st variant.\nThe tuple element at index 0.\nA shared reference to the tuple element at index 0.\nAn exclusive reference to the tuple element at index 0.\nThe type of the element at index 0.\nThe 2nd variant.\nThe tuple element at index 1.\nA shared reference to the tuple element at index 1.\nAn exclusive reference to the tuple element at index 1.\nThe type of the element at index 1.\nThe 11th variant.\nThe tuple element at index 10.\nA shared reference to the tuple element at index 10.\nAn exclusive reference to the tuple element at index 10.\nThe type of the element at index 10.\nThe 12th variant.\nThe tuple element at index 11.\nA shared reference to the tuple element at index 11.\nAn exclusive reference to the tuple element at index 11.\nThe type of the element at index 11.\nThe 3rd variant.\nThe tuple element at index 2.\nA shared reference to the tuple element at index 2.\nAn exclusive reference to the tuple element at index 2.\nThe type of the element at index 2.\nThe 4th variant.\nThe tuple element at index 3.\nA shared reference to the tuple element at index 3.\nAn exclusive reference to the tuple element at index 3.\nThe type of the element at index 3.\nThe 5th variant.\nThe tuple element at index 4.\nA shared reference to the tuple element at index 4.\nAn exclusive reference to the tuple element at index 4.\nThe type of the element at index 4.\nThe 6th variant.\nThe tuple element at index 5.\nA shared reference to the tuple element at index 5.\nAn exclusive reference to the tuple element at index 5.\nThe type of the element at index 5.\nThe 7th variant.\nThe tuple element at index 6.\nA shared reference to the tuple element at index 6.\nAn exclusive reference to the tuple element at index 6.\nThe type of the element at index 6.\nThe 8th variant.\nThe tuple element at index 7.\nA shared reference to the tuple element at index 7.\nAn exclusive reference to the tuple element at index 7.\nThe type of the element at index 7.\nThe 9th variant.\nThe tuple element at index 8.\nA shared reference to the tuple element at index 8.\nAn exclusive reference to the tuple element at index 8.\nThe type of the element at index 8.\nThe 10th variant.\nThe tuple element at index 9.\nA shared reference to the tuple element at index 9.\nAn exclusive reference to the tuple element at index 9.\nThe type of the element at index 9.\nGet a <code>Pin&lt;&amp;mut A&gt;</code>\nReturns the 1-letter abbreviated month name, in ASCII, …\nReturns the 1-letter abbreviated weekday name, in ASCII, …\nReturns the 2-letter abbreviated month name, in ASCII, …\nReturns the 2-letter abbreviated weekday name, in ASCII, …\nReturns the 3-letter abbreviated month name, in ASCII, …\nReturns the 3-letter abbreviated weekday name, in ASCII, …\nTerminates the current process in an abnormal fashion.\nTerminates the current process in an abnormal fashion.\nThe absolute value of <code>self</code>.\nComputes the absolute value of self. See <code>i128::abs</code> for …\nComputes the absolute value of self. See <code>i32::abs</code> for …\nComputes the absolute value of self. See <code>i8::abs</code> for …\nComputes the absolute value of self. See <code>i64::abs</code> for …\nComputes the absolute value of self. See <code>isize::abs</code> for …\nComputes the absolute value of self. See <code>i16::abs</code> for …\nReturns the absolute value of this time delta.\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nReturns the absolute value of this time delta as a <code>Duration</code>…\nLanewise absolute value with lanes as <code>i16</code>.\nAbsolute value of <code>i16</code> lanes.\nLanewise absolute value with lanes as <code>i32</code>.\nAbsolute value of <code>i32</code> lanes.\nLanewise absolute value with lanes as <code>i8</code>.\nAbsolute value of <code>i8</code> lanes.\nMakes the given path absolute without accessing the …\nMakes the given path absolute without accessing the …\nAccept a new incoming connection from this listener.\nReturns the last access time of this metadata.\nReturns the time of access.\nReturns the time of access.\nThe arc cosine.\nThe inverse hyperbolic cosine of <code>self</code>.\nPerforms the <code>+</code> operation.\nAdds to the current value.\nAdds to the current value.\nAdds to the current value.\nAdds to the current value.\nAdds to the current value.\nAdds to the current value.\nAdds to the current value.\nAdds to the current value.\nAdds to the current value.\nAdds to the current value.\nAdds to the current value.\nAdds to the current value.\nAdds an offset to a pointer (convenience for …\nAdds two vectors together.\nReturns the element-wise sum of two matrices.\nReturns the element-wise sum of two matrices.\nReturns the element-wise sum of two matrices.\nReturns the element-wise sum of two matrices.\nReturns the element-wise sum of two matrices.\nReturns the element-wise sum of two matrices.\nReturns the element-wise sum of two matrices.\nReturns the element-wise sum of two matrices.\nPanics\nPanics\nPerforms the <code>+=</code> operation.\nPanics\nAdd two <code>u32</code> with a carry value.\nAdd two <code>u64</code> with a carry value.\nAppend <code>self.extension</code> with <code>extension</code>.\nAdd horizontal pairs of <code>i16</code> values, pack the outputs as <code>a</code> …\nHorizontal <code>a + b</code> with lanes as <code>i16</code>.\nAdd horizontal pairs of <code>i32</code> values, pack the outputs as <code>a</code> …\nHorizontal <code>a + b</code> with lanes as <code>i32</code>.\nAdd each lane horizontally, pack the outputs as <code>a</code> then <code>b</code>.\nAdd each lane horizontally, pack the outputs as <code>a</code> then <code>b</code>.\nAdd adjacent <code>f32</code> lanes.\nAdd adjacent <code>f64</code> lanes.\nAdd horizontal pairs of <code>i16</code> values, saturating, pack the …\nHorizontal saturating <code>a + b</code> with lanes as <code>i16</code>.\nLanewise <code>a + b</code> with lanes as <code>i16</code>.\nLanewise <code>a + b</code> with lanes as <code>i16</code>.\nLanewise <code>a + b</code> with lanes as <code>i32</code>.\nLanewise <code>a + b</code> with lanes as <code>i32</code>.\nLanewise <code>a + b</code> with lanes as <code>i64</code>.\nLanewise <code>a + b</code> with lanes as <code>i64</code>.\nLanewise <code>a + b</code> with lanes as <code>i8</code>.\nLanewise <code>a + b</code> with lanes as <code>i8</code>.\nLanewise <code>a + b</code>.\nLow lane <code>a + b</code>, other lanes unchanged.\nLanewise <code>a + b</code>.\nLowest lane <code>a + b</code>, high lane unchanged.\nLanewise <code>a + b</code> with <code>f32</code> lanes.\nLanewise <code>a + b</code> with <code>f64</code> lanes.\nLanewise saturating <code>a + b</code> with lanes as <code>i16</code>.\nLanewise saturating <code>a + b</code> with lanes as <code>i16</code>.\nLanewise saturating <code>a + b</code> with lanes as <code>i8</code>.\nLanewise saturating <code>a + b</code> with lanes as <code>i8</code>.\nLanewise saturating <code>a + b</code> with lanes as <code>u16</code>.\nLanewise saturating <code>a + b</code> with lanes as <code>u16</code>.\nLanewise saturating <code>a + b</code> with lanes as <code>u8</code>.\nLanewise saturating <code>a + b</code> with lanes as <code>u8</code>.\nGets the “address” portion of the pointer.\nReturns the faulting address (e.g., for SIGSEGV).\nCompares raw pointer addresses for equality, ignoring any …\nAlternately, from the top, add a lane and then subtract a …\nAdd the high lane and subtract the low lane.\nAlternately, from the top, add <code>f32</code> then sub <code>f32</code>.\nAlternately, from the top, add <code>f64</code> then sub <code>f64</code>.\nAdvance the internal cursor of the slice.\nAdvance the internal cursor of the slice.\nAdvances the iterator from the back by <code>n</code> elements.\nAdvances the iterator from the back by <code>n</code> elements.\nAdvances the iterator from the back by <code>n</code> elements.\nAdvances the iterator from the back by <code>n</code> elements.\nAdvances the iterator from the back by <code>n</code> elements.\nAdvances the iterator from the back by <code>n</code> elements.\nAdvances the iterator from the back by <code>n</code> elements.\nAdvances the iterator from the back by <code>n</code> elements.\nAdvances the iterator by <code>n</code> elements.\nAdvances the iterator by <code>n</code> elements.\nAdvances the iterator by <code>n</code> elements.\nAdvances the iterator by <code>n</code> elements.\nAdvances the iterator by <code>n</code> elements.\nAdvances the iterator by <code>n</code> elements.\nAdvances the iterator by <code>n</code> elements.\nAdvances the iterator by <code>n</code> elements.\nAdvance a slice of slices.\nAdvance a slice of slices.\nHorizontal space to advance after each glyph.\nVertical space to advance after each new line.\nPerform the last round of an AES decryption flow on <code>a</code> …\nPerform one round of an AES decryption flow on <code>a</code> using the …\nPerform the last round of an AES encryption flow on <code>a</code> …\nPerform one round of an AES encryption flow on <code>a</code> using the …\nPerform the InvMixColumns transform on <code>a</code>.\nAssist in expanding an AES cipher key.\nAdds a <code>TimeDelta</code> to an instant, moving forward or backward …\nReturns a flag indicating what form of alignment was …\nThe minimum byte alignment for a memory block of this …\nAligns <code>value</code> downward to the nearest multiple of <code>align</code>.\nReturns the minimum alignment of the type in bytes.\nReturns the alignment of the pointed-to value in bytes.\nComputes the offset that needs to be applied to the …\nCreates a layout describing the record that can hold a …\nAligns <code>value</code> upward to the nearest multiple of <code>align</code>.\nTests if every element of the iterator matches a predicate.\nTests if every element of the iterator matches a predicate.\nTests if every element of the iterator matches a predicate.\nTests if every element of the iterator matches a predicate.\nTests if every element of the iterator matches a predicate.\nTests if every element of the iterator matches a predicate.\nTests if every element of the iterator matches a predicate.\nTests if every element of the iterator matches a predicate.\nCheck whether all elements compare equal.\nCheck whether all elements compare equal.\nIf there are elements and they are all equal, return a …\nIf there are elements and they are all equal, return a …\nCheck whether all elements are unique (non equal).\nCheck whether all elements are unique (non equal).\nAllocates memory as described by the given <code>layout</code>.\nAllocates memory with the global allocator.\nAllocates memory with the given layout.\nAllocates zero-initialized memory with the global …\nAllocates zeroed memory with the given layout. This is the …\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nReturns the total amount of memory allocated internally by …\nReturns the total amount of memory allocated internally by …\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nThe alpha component.\nThe alpha component.\nThe alpha component.\nThe alpha component.\nThe alpha component.\nThe alpha component.\nAlphabetic baseline position.\nDetermines if the <code>#</code> flag was specified.\nProduces an iterator over <code>Path</code> and its ancestors.\nLogical “and” with a boolean value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nBitwise “and” with the current value.\nApplies the <code>and</code> operation to <code>other</code>, (returns <code>other</code>).\nApplies the <code>and</code> operation to <code>_other</code>, (returns <code>False</code>).\nReturns <code>None</code> if the option is <code>None</code>, otherwise returns <code>optb</code>.\nReturns <code>res</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> …\nProvides in-place mutable access to an occupied entry …\nProvides in-place mutable access to an occupied entry …\nApplies the <code>and</code> operation to <code>other</code>, (returns <code>other</code>).\nApplies the <code>and</code> operation to <code>_other</code>, (returns <code>False</code>).\nProvides shared access to the key and owned access to the …\nReturns <code>None</code> if the option is <code>None</code>, otherwise calls <code>f</code> with …\nCalls <code>op</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> …\nConcatenates or prints <code>Ansi</code> escape codes.\nPanic the current thread with the given message as the …\nTests if any element of the iterator matches a predicate.\nTests if any element of the iterator matches a predicate.\nTests if any element of the iterator matches a predicate.\nTests if any element of the iterator matches a predicate.\nTests if any element of the iterator matches a predicate.\nTests if any element of the iterator matches a predicate.\nTests if any element of the iterator matches a predicate.\nTests if any element of the iterator matches a predicate.\n<code>core</code> Returns the name of a type as a string slice.\nGets the cache directory.\nGets the configuration directory.\nGets the data directory.\nGets the home directory.\nConstructs a path inside your application’s cache …\nConstructs a path inside your application’s cache …\nConstructs a path inside your application’s …\nConstructs a path inside your application’s …\nConstructs a path inside your application’s data …\nConstructs a path inside your application’s data …\nConstructs a path inside your application’s runtime …\nConstructs a path inside your application’s runtime …\nConstructs a path inside your application’s state …\nConstructs a path inside your application’s state …\nConstructs a path inside the temporary directory.\nConstructs a path inside the temporary directory.\nGets the name of the application.\nGets the runtime directory.\nGets the state directory.\nGets the temporary directory.\nGets the temporary directory.\nAppends the given <code>value</code> to this tuple.\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMoves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …\nAppend an item to the end of the slice (similar to …\nMoves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMoves all elements from <code>other</code> to the end of the list.\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nSets the option for the append mode.\nAppend a new element to the chunk.\nAdd a string to the end of a string\nInline append an item (See <code>Self::append</code>).\nDefines which rendering API to use on Apple platforms …\nApplies dithering to a pixel array in <strong>15-bit color mode </strong>…\nSet a new scissor rectangle. Should be applied after …\nSet a new viewport rectangle. Should be applied after …\n<code>safe_arch</code> Turns a comparison operator token to the correct …\n<code>safe_arch</code> Turns a round operator token to the correct …\nThe area of the 2d extent.\nThe area of the 2d extent.\nAdds an argument to pass to the program.\nThe message body.\nReturns the arguments that this program was started with.\nAdds multiple arguments to pass to the program.\nSee args_os.\nReturns the arity (number of elements) of this tuple.\nReturns the arity (number of elements) of this tuple.\nCreates a layout describing the record for a <code>[T; n]</code>.\nThe array of points.\nThe array of points.\nExtracts the values from an array of <code>MaybeUninit</code> …\nReturns an iterator over <code>N</code> elements of the iterator at a …\nReturns an iterator over <code>N</code> elements of the iterator at a …\nReturns an iterator over <code>N</code> elements of the iterator at a …\nReturns an iterator over <code>N</code> elements of the iterator at a …\nReturns an iterator over <code>N</code> elements of the iterator at a …\nReturns an iterator over <code>N</code> elements of the iterator at a …\nReturns an iterator over <code>N</code> elements of the iterator at a …\nReturns an iterator over <code>N</code> elements of the iterator at a …\nReturn an iterator adaptor that iterates over the …\nReturn an iterator adaptor that iterates over the …\n📦 <code>core</code> Creates an array <code>[T; N]</code>, where each <code>T</code> is …\n📦 <code>core</code> Converts a mutable reference to <code>T</code> into …\n📦 <code>core</code> Converts a reference to <code>T</code> into <code>&amp;[T; 1]</code> (without …\n📦 Initializes a <code>[$T; $LEN]</code> array in multiple ways.\nReturns a mutable reference to the element at the given …\nReturns an immutable reference to the element at the …\nSets the element at the specified <code>index</code> to the given <code>value</code>.\nSets the element at the specified <code>index</code> to the given …\nConvert to an array.\nConvert to an array.\nConvert to an array.\nConvert to an array.\nConvert to an array.\nConvert to an array.\nConvert to an array.\nConvert to an array.\nReturns a copy of the inner array with the full contents.\nReturns a copy of the inner array with the full contents.\nReturns a <code>&amp;[Cell&lt;T&gt;; N]</code> from a <code>&amp;Cell&lt;[T; N]&gt;</code>\nReturns a slice containing the entire array in compile …\nReturns a slice containing the entire array in compile …\nRaw transmutation to <code>&amp;AtomicU32</code>.\nRaw transmutation to <code>&amp;AtomicU64</code>.\nView any <code>T: Sync + Unpin + ?Sized</code> as <code>&amp;[u8]</code>.\nReturns the instance’s data as a slice of bytes.\nReturns the instance’s data as a slice of bytes.\nReturns the contents of this <code>CString</code> as a slice of bytes.\nReturns a byte slice of this <code>String</code>’s contents.\nReturns a byte slice of the inner string slice.\nReturns a byte slice of the inner string slice.\nReturns the contents of this <code>MaybeUninit</code> as a slice of …\nView any <code>T: Sync + Unpin + ?Sized</code> as <code>&amp;mut [u8]</code>.\nReturns the instance’s data as a mutable slice of bytes.\nReturns the instance’s data as a mutable slice of bytes.\nReturns a mutable byte slice of the inner string slice.\nReturns an exclusive byte slice of the inner string slice.\nReturns the contents of this <code>MaybeUninit</code> as a mutable …\nReturns a raw byte pointer to self.\nView any <code>T: Sync + Unpin + Sized</code> as <code>&amp;[u8]</code> <em>compile-time</em> …\nEquivalent to <code>CString::as_bytes()</code> except that the returned …\nExtracts a <code>CStr</code> slice containing the entire string.\nConverts from <code>Option&lt;T&gt;</code> (or <code>&amp;Option&lt;T&gt;</code>) to …\nConverts from <code>Result&lt;T, E&gt;</code> (or <code>&amp;Result&lt;T, E&gt;</code>) to …\nConverts from <code>Option&lt;T&gt;</code> (or <code>&amp;mut Option&lt;T&gt;</code>) to …\nGets <code>Pin&lt;&amp;mut T&gt;</code> to the underlying pinned value from this …\nConverts from <code>Result&lt;T, E&gt;</code> (or <code>&amp;mut Result&lt;T, E&gt;</code>) to …\nConverts an OS string slice to a byte slice.  To convert …\nReturns the ratio as a floating-point approximation.\nReturns the ratio as a floating-point approximation.\nReturns the number of whole hours in this duration.\nReturns the logger as a <code>Logger</code> trait object.\nReturns the total duration in units of whole microseconds.\nReturns the total number of whole microseconds contained …\nReturns the total duration in units of whole milliseconds.\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds, with a possible …\nConverts to seconds as <code>f32</code> for calculations.\nReturns the number of milliseconds contained by this …\nReturns the time in milliseconds.\nReturns the number of milliseconds, with a possible …\nReturns the number of milliseconds contained by this …\nReturns the number of whole minutes in this duration.\nGet the buffer slice as an exclusive reference.\nConverts this type into a mutable reference of the …\nReturns a unique reference to the value. If the value may …\nReturns an exclusive reference to the inner stored type, …\nConverts from <code>&amp;mut Bound&lt;T&gt;</code> to <code>Bound&lt;&amp;mut T&gt;</code>.\nConverts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>.\nGets a mutable reference to the pinned value this <code>Pin&lt;Ptr&gt;</code> …\nConverts from <code>&amp;mut Result&lt;T, E&gt;</code> to <code>Result&lt;&amp;mut T, &amp;mut E&gt;</code>.\nReturns a reference to the inner value in variant<code>_0</code>, if …\nReturns a reference to the inner value in variant<code>_1</code>, if …\nReturns a reference to the inner value in variant<code>_10</code>, if …\nReturns a reference to the inner value in variant<code>_11</code>, if …\nReturns a reference to the inner value in variant<code>_2</code>, if …\nReturns a reference to the inner value in variant<code>_3</code>, if …\nReturns a reference to the inner value in variant<code>_4</code>, if …\nReturns a reference to the inner value in variant<code>_5</code>, if …\nReturns a reference to the inner value in variant<code>_6</code>, if …\nReturns a reference to the inner value in variant<code>_7</code>, if …\nReturns a reference to the inner value in variant<code>_8</code>, if …\nReturns a reference to the inner value in variant<code>_9</code>, if …\nReturns a raw mutable byte pointer to self.\nYields a mutable reference to the underlying <code>OsStr</code> slice.\nYields a mutable reference to the underlying <code>OsString</code> …\nReturns a raw mutable pointer to the <code>Box</code>’s contents.\nReturns a raw pointer to the slice’s buffer.\nReturns a raw mutable pointer to the vector’s buffer, or …\nReturns a raw mutable pointer to self.\nGets a mutable pointer to the contained value. Reading …\nReturns an exclusive slice containing the entire array.\nReturns the stack as an exclusive slice.\nReturns the stack as an exclusive slice.\nExtracts a mutable slice of the entire vector.\nReturns a mutable slice of all elements that have not been …\nReturns a mutable slice of the contained value, if any. If …\nReturns a pair of slices which contain, in order, the …\nConverts a <code>String</code> into a mutable string slice.\nReturns the mutable inner string slice.\nReturns the exclusive inner string slice. Makes use of the …\nGet an exclusive reference to the value within the …\nReturns a mutable reference to the contents of this <code>String</code>.\nReturns the total duration in units of whole nanoseconds.\nReturns the total number of nanoseconds contained by this …\nReturns a <code>NonNull</code> pointer to the vector’s buffer, or a …\nReturns a non-null pointer to the slice’s buffer.\nReturns the eight-bit integers this address consists of as …\nReturns the four eight-bit integers that make up this …\nReturns the sixteen eight-bit integers the IPv6 address …\nConverts to an <code>OsStr</code> slice.\nYields the underlying <code>OsStr</code> slice.\nReturns the raw <code>OsStr</code> slice for this prefix.\nExtracts the underlying <code>OsStr</code> slice.\nCoerces to a <code>Path</code> slice.\nExtracts a slice corresponding to the portion of the path …\nExtracts a slice corresponding to the portion of the path …\nCoerces the inner <code>PathBuf</code> to a <code>Path</code> slice.\nConverts from Pin&lt;&amp;mut Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;mut T&gt;&gt;.\nConverts from Pin&lt;&amp;Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;T&gt;&gt;.\nProvides a raw pointer to the data.\nReturns a raw pointer to the object <code>T</code> pointed to by this …\nReturns a raw pointer to the <code>Box</code>’s contents.\nReturns a mutable pointer to the underlying <code>bool</code>.\nReturns a mutable pointer to the underlying pointer.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying float.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying float.\nReturns a mutable pointer to the underlying integer.\nReturns a mutable pointer to the underlying integer.\nAcquires the underlying <code>*mut</code> pointer.\nReturns a raw pointer to the underlying data in this cell.\nProvides a raw pointer to the data.\nReturns a raw pointer to the underlying data in this cell.\nReturns a raw pointer to the object <code>T</code> pointed to by this …\nReturns a raw pointer to the vector’s buffer, or a …\nReturns a raw pointer to self.\nGets a pointer to the contained value. Reading from this …\nReturns the inner pointer to this C string.\nGet the buffer slice as shared reference.\nConverts this type into a shared reference of the (usually …\nReturns a shared reference to the value. If the value may …\nReturns a shared reference to the inner stored type, in …\nConverts from <code>&amp;Bound&lt;T&gt;</code> to <code>Bound&lt;&amp;T&gt;</code>.\nConverts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.\nGets a shared reference to the pinned value this <code>Pin</code> …\nConverts from <code>&amp;Result&lt;T, E&gt;</code> to <code>Result&lt;&amp;T, &amp;E&gt;</code>.\nReturns a reference to the inner value in variant <code>_0</code>, if …\nReturns a reference to the inner value in variant <code>_1</code>, if …\nReturns a reference to the inner value in variant <code>_10</code>, if …\nReturns a reference to the inner value in variant <code>_11</code>, if …\nReturns a reference to the inner value in variant <code>_2</code>, if …\nReturns a reference to the inner value in variant <code>_3</code>, if …\nReturns a reference to the inner value in variant <code>_4</code>, if …\nReturns a reference to the inner value in variant <code>_5</code>, if …\nReturns a reference to the inner value in variant <code>_6</code>, if …\nReturns a reference to the inner value in variant <code>_7</code>, if …\nReturns a reference to the inner value in variant <code>_8</code>, if …\nReturns a reference to the inner value in variant <code>_9</code>, if …\nGet a shared reference to the value within the <code>UnsafeCell</code>.\nReturns the number of whole seconds in this duration.\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds, with a possible fractional …\nConverts to seconds as <code>f32</code> for calculations.\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the time in <code>f64</code> seconds.\nReturns the number of seconds, with a possible fractional …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns a slice of all values in the underlying vector, in …\nReturns a shared slice containing the entire array.\nReturns a slice containing the full grid.\nReturns the stack as a shared slice.\nReturns a shared reference to the distance as a slice.\nReturns a shared reference to the extent as a slice.\nReturns a shared reference to the position as a slice.\nExtracts a slice containing the entire vector.\nGet the underlying bytes as a slice with the original …\nReturns a shared reference to the orientation as a slice.\nReturns a shared reference to the stride as a slice.\nReturns an immutable slice of all elements that have not …\nReturns a slice of the contained value, if any. If this is …\nReturns an exclusive reference to the distance as a slice.\nReturns an exclusive reference to the extent as a slice.\nReturns an exclusive reference to the position as a slice.\nReturns an exclusive reference to the orientation as a …\nReturns an exclusive reference to the stride as a slice.\nReturns a <code>&amp;[Cell&lt;T&gt;]</code> from a <code>&amp;Cell&lt;[T]&gt;</code>\nReturns the destaque as pair of shared slices, which …\nReturns a pair of slices which contain, in order, the …\nReturns the string representation of the <code>Level</code>.\nReturns the string representation of the <code>LevelFilter</code>.\nExtracts a string slice containing the entire <code>String</code>.\nReturns the event name as a string.\nReturns the permission name as a string.\nReturns the inner string slice.\nReturns the inner string slice.\nGets the formatted string, if it has no arguments to be …\nReturns a (9) tuple with all the elements.\nReturns a (6) tuple if the 6 fields from <code>h</code> to <code>ns</code> are …\nReturns a (3) tuple if the 3 fields from <code>h</code> to <code>s</code> are …\nReturns a (3) tuple if the 3 fields from <code>ms</code> to <code>ns</code> are …\nReturns a tuple with <code>Some(&amp;value)</code> for the active variant …\nReturns a (3) tuple if the 3 fields from <code>y</code> to <code>d</code> are …\nReturns a (9) tuple if the 9 fields from <code>y</code> to <code>ns</code> are …\nReturns a (6) tuple if the 6 fields from <code>y</code> to <code>s</code> are …\nThis returns a numeric identifier for the thread …\nReturns a unique references to the value. In contrast to …\nReturns a shared references to the value. In contrast to …\nReturns a shared reference to a slice of possibly …\nReturns a unique reference to a slice of possibly …\nReturns the unique ID as a <code>usize</code>, derived from the stack …\nReturns the unique ID as a <code>usize</code>, derived from the memory …\nConverts the chunk into a vector of references to its …\nHelper method that populates a vector with references to …\nReturns an iterator in ascending order of magnitude.\nThe distance from the baseline to the highest point.\nDistance from the baseline to the highest glyph edge.\nThe arc sine.\nThe inverse hyperbolic sine of <code>self</code>.\n<code>core</code> Inline assembly.\n<code>core</code> Asserts that a boolean expression is true at runtime.\nAsserts the approximate equality of a series of …\nAsserts that the memory alignment of the <code>Candidate</code> type …\n<code>core</code> Asserts that two expressions are equal to each other.\nAsserts the equality of a series of expressions.\n<code>core</code> Asserts that two expressions are not equal to each …\n<code>core</code> Makes a <em>soundness</em> promise to the compiler that the …\nConverts to <code>Arc&lt;[T]&gt;</code>.\nConverts to <code>Arc&lt;T&gt;</code>.\nConverts to <code>Box&lt;T, A&gt;</code>.\nConverts to <code>Box&lt;[T], A&gt;</code>.\nConverts to <code>Rc&lt;[T]&gt;</code>.\nConverts to <code>Rc&lt;T&gt;</code>.\nExtracts the value from the <code>MaybeUninit&lt;T&gt;</code> container. This …\nDrops the contained value in place.\nGets a mutable (unique) reference to the contained value.\nReads the value from the <code>MaybeUninit&lt;T&gt;</code> container. The …\nGets a shared reference to the contained value.\nReturns an immutable reference to the element at (<code>row</code>, <code>col</code>…\nReturns an immutable reference to the element at (<code>row</code>, <code>col</code>…\nReturns an immutable reference to the element at (<code>row</code>, <code>col</code>…\nReturns an immutable reference to the element at (<code>row</code>, <code>col</code>…\nReturns an immutable reference to the element at (<code>row</code>, <code>col</code>…\nReturns an immutable reference to the element at (<code>row</code>, <code>col</code>…\nReturns an immutable reference to the element at (<code>row</code>, <code>col</code>…\nReturns an immutable reference to the element at (<code>row</code>, <code>col</code>…\nIf the iterator yields no elements, <code>Ok(None)</code> will be …\nIf the iterator yields no elements, <code>Ok(None)</code> will be …\nReturns an exclusive reference to the element at (<code>row</code>, <code>col</code>…\nReturns an exclusive reference to the element at (<code>row</code>, <code>col</code>…\nReturns an exclusive reference to the element at (<code>row</code>, <code>col</code>…\nReturns an exclusive reference to the element at (<code>row</code>, <code>col</code>…\nReturns an exclusive reference to the element at (<code>row</code>, <code>col</code>…\nReturns an exclusive reference to the element at (<code>row</code>, <code>col</code>…\nReturns an exclusive reference to the element at (<code>row</code>, <code>col</code>…\nReturns an exclusive reference to the element at (<code>row</code>, <code>col</code>…\nReturns a shared reference to the element at (<code>row</code>, <code>col</code>).\nReturns a shared reference to the element at (<code>row</code>, <code>col</code>).\nReturns a shared reference to the element at (<code>row</code>, <code>col</code>).\nReturns a shared reference to the element at (<code>row</code>, <code>col</code>).\nReturns a shared reference to the element at (<code>row</code>, <code>col</code>).\nReturns a shared reference to the element at (<code>row</code>, <code>col</code>).\nReturns a shared reference to the element at (<code>row</code>, <code>col</code>).\nReturns a shared reference to the element at (<code>row</code>, <code>col</code>).\nThe arc tangent.\nThe arc tangent of two variables.\nThe inverse hyperbolic tangent of <code>self</code>.\nReturns the last access time of the file, in seconds since …\nReturns the last access time of the file, in nanoseconds …\nReturns the last access time of the file, in nanoseconds …\nReturns the last access time of the file, in seconds since …\n⚛️ <code>core</code> A compiler memory fence.\n⚛️ <code>core</code> An atomic fence.\nGets the name of the author of the application.\nReturns the number of bytes available to be read from <em>stdin</em>…\nReturns an estimate of the default amount of parallelism a …\nReturns an estimate of the default amount of parallelism a …\nLanewise average of the <code>u16</code> values.\nAverage <code>u16</code> lanes.\nLanewise average of the <code>u8</code> values.\nAverage <code>u8</code> lanes.\nGet a <code>Pin&lt;&amp;mut B&gt;</code>\nProvides a reference to the back element, or <code>None</code> if the …\nProvides a reference to the back element, or <code>None</code> if the …\nProvides a mutable reference to the back element, or <code>None</code> …\nProvides a mutable reference to the back element, or <code>None</code> …\nReturns the band event (for SIGPOLL).\nWhere the base line sits in the height.\nA “meta iterator adaptor”. Its closure receives a …\nA “meta iterator adaptor”. Its closure receives a …\nstart rendering to the default frame buffer\nstart rendering to an offscreen framebuffer\nBinary searches this <code>VecDeque</code> for a given element. If the …\nBinary searches this <code>VecDeque</code> with a comparator function.\nBinary searches this <code>VecDeque</code> with a key extraction …\nCreates a new <code>TcpListener</code> which will be bound to the …\nCreates a UDP socket from the given address.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nClears the bit at the specified bit-position to 1.\nCounts the number of 1s in <code>bits</code> from the <code>[start..=end]</code> …\nCounts the number of 1s in <code>bits</code> from the <code>[start..=end]</code> …\nCounts the number of 0s in <code>bits</code> from the <code>[start..=end]</code> …\nCounts the number of 0s in <code>bits</code> from the <code>[start..=end]</code> …\nExtract a span of bits from the <code>u32</code>, control value style.\nExtract a span of bits from the <code>u64</code>, control value style.\nExtract a span of bits from the <code>u32</code>, start and len style.\nExtract a span of bits from the <code>u64</code>, start and len style.\nFinds the index of the first 1 in <code>bits</code> from the …\nFinds the index of the first 1 in <code>bits</code> from the …\nFinds the index of the first 0 in <code>bits</code> from the …\nFinds the index of the first 0 in <code>bits</code> from the …\nFinds the index of the last 1 in <code>bits</code> from the …\nFinds the index of the last 1 in <code>bits</code> from the …\nFinds the index of the last 0 in <code>bits</code> from the …\nFinds the index of the last 0 in <code>bits</code> from the …\nFlips the bits in <code>self</code> from the <code>[start..=end]</code> checked …\nFlips the bits in <code>self</code> from the <code>[start..=end]</code> range.\nGets the bits in <code>self</code> from the <code>[start..=end]</code> checked range.\nGets the bits in <code>self</code> from the <code>[start..=end]</code> range.\nGets the rightwards shifted bits in <code>self</code> from the …\nGets the rightwards shifted bits in <code>self</code> from the …\nGets the mask of all bits up to and including the lowest …\nGets the mask of all bits up to and including the lowest …\nResets (clears) the lowest set bit.\nResets (clears) the lowest set bit.\nGets the value of the lowest set bit in a <code>u32</code>.\nGets the value of the lowest set bit in a <code>u64</code>.\nReturns a bitmask of ones from the <code>[start..=end]</code> checked …\nReturns a bitmask of ones from the <code>[start..=end]</code> range.\nReverses the order of the bits in <code>self</code> from the …\nReverses the order of the bits in <code>self</code> from the …\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bit at the specified bit-position to 1.\nSets the bits in <code>self</code> to 1 from the <code>[start..=end]</code> checked …\nSets the given checked <code>value</code> into the bits from the …\nSets the bits in <code>self</code> to 1 from the <code>[start..=end]</code> range.\nSets the given <code>value</code> into the bits from the <code>[start..=end]</code> …\nSets the given <code>value</code> into the bits from the <code>[start..=end]</code> …\nReturns the bit size of this type (only the relevant data …\nReturns the bit size of this type (only the relevant data …\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nToggles the bit at the specified bit-position.\nUnsets the bits in <code>self</code> to 0 from the <code>[start..=end]</code> …\nUnsets the bits in <code>self</code> to 0 from the <code>[start..=end]</code> range.\nZero out all high bits in a <code>u32</code> starting at the index …\nZero out all high bits in a <code>u64</code> starting at the index …\nPerforms the <code>&amp;</code> operation.\nReturns the intersection of <code>self</code> and <code>rhs</code> as a new …\nReturns the intersection of <code>self</code> and <code>rhs</code> as a new …\nPerforms the <code>&amp;=</code> operation.\nModifies this set to contain the intersection of <code>self</code> and …\nBitwise <code>a &amp;amp; b</code>.\nBitwise <code>a &amp;amp; b</code>.\nBitwise <code>a &amp;amp; b</code>.\nBitwise <code>a &amp;amp; b</code>.\nBitwise <code>a &amp;amp; b</code>.\nBitwise <code>a &amp;amp; b</code>.\nBitwise <code>(!a) &amp;amp; b</code>.\nBitwise <code>(!a) &amp;amp; b</code>.\nBitwise <code>(!a) &amp;amp; b</code>.\nBitwise <code>(!a) &amp;amp; b</code>.\nBitwise <code>(!a) &amp;amp; b</code>.\nBitwise <code>(!a) &amp;amp; b</code>.\nBitwise <code>(!a) &amp;amp; b</code> for <code>u32</code>\nBitwise <code>(!a) &amp;amp; b</code> for <code>u64</code>\nCreates a custom bit field struct.\nPerforms the <code>|</code> operation.\nReturns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.\nReturns the union of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>.\nPerforms the <code>|=</code> operation.\nModifies this set to contain the union of <code>self</code> and <code>rhs</code>.\nBitwise <code>a | b</code>.\nBitwise <code>a | b</code>.\nBitwise <code>a | b</code>.\nBitwise <code>a | b</code>.\nBitwise <code>a | b</code>.\nBitwise <code>a | b</code>\nReturns the bits per pixel of the current format.\nPerforms the <code>^</code> operation.\nReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …\nReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …\nPerforms the <code>^=</code> operation.\nModifies this set to contain the symmetric difference of …\nBitwise <code>a ^ b</code>.\nBitwise <code>a ^ b</code>.\nBitwise <code>a ^ b</code>.\nBitwise <code>a ^ b</code>.\nBitwise <code>a ^ b</code>.\nBitwise <code>a ^ b</code>.\n<code>core</code> Hints the compiler to be maximally pessimistic about …\nBlends the <code>i16</code> lanes according to the immediate mask.\nBlends the <code>i16</code> lanes according to the immediate value.\nBlends the <code>i32</code> lanes in <code>a</code> and <code>b</code> into a single value.\nBlends the <code>i32</code> lanes according to the immediate value.\nBlends the lanes according to the immediate mask.\nBlends the <code>i16</code> lanes according to the immediate mask.\nBlends the <code>f32</code> lanes according to the immediate mask.\nBlends the <code>f64</code> lanes according to the immediate mask.\nBlend the <code>i8</code> lanes according to a runtime varying mask.\nBlend <code>i8</code> lanes according to a runtime varying mask.\nBlend the lanes according to a runtime varying mask.\nBlend the lanes according to a runtime varying mask.\nBlend the lanes according to a runtime varying mask.\nBlend the lanes according to a runtime varying mask.\nReturns the block size for filesystem I/O.\nReturns the block size for filesystem I/O.\nBlocks the thread until the future is ready.\nBlocks the thread until the future is ready.\nWhether the event loop should block until <code>schedule_update</code> …\nReturns <code>true</code> if the event loop blocks until <code>schedule_update</code>…\nIf <code>true</code>, the event loop will block until <code>schedule_update</code> …\nReturns the number of blocks allocated to the file, in …\nReturns the number of blocks allocated to the file, in …\nThe blue component.\nThe blue component.\nThe blue component.\nThe blue component.\nThe blue component.\nThe blue component.\nThe blue component.\nThe blue component.\nThe blue component.\nThe blue component.\nThe blue component.\nThe blue component.\nImmutably borrows from an owned value.\nImmutably borrows the wrapped value.\nMutably borrows from an owned value.\nMutably borrows the wrapped value.\nReturns a reference to the contained value, whether …\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\n(colorDepth) The screen color depth, in bits per single …\nConverts the <code>ControlFlow</code> into an <code>Result</code> which is <code>Ok</code> if the …\nConverts the <code>ControlFlow</code> into an <code>Option</code> which is <code>Some</code> if …\nCreates a new <code>AnsiColor8b</code> from an <code>AnsiColor3b</code> treated as …\nConverts an <code>Rgb</code> into unweighted brightness by averaging …\nConverts an <code>Rgb</code> into unweighted brightness by averaging …\nConverts an <code>Rgb</code> into unweighted brightness by averaging …\nGets the value of the <code>SO_BROADCAST</code> option for this socket.\nReturns a reference to the internally buffered data.\nReturns a reference to the internally buffered data.\nSize of buffer in bytes. For 1 element, u16 buffer this …\nSets the size of the pixel buffer.\nBuilds a sixel formatted string with the configured …\nCreates a new hasher.\nReturns a new builder.\nReturns a new builder.\nReturns an Apple bundle identifier.\nThe mouse button that triggered the event (<code>0</code>: left, <code>1</code>: …\nThe mouse button involved in the event.\nThe button involved.\nA bitmask of buttons currently being held down (<code>1</code>: left, <code>2</code>…\nA bitmask of currently pressed buttons (<code>1</code>: left, <code>2</code>: right, …\nCreates a new <code>AnsiColor8b</code> from a 26-color grayscale <code>value</code> …\nCreates a new <code>AnsiColor8b</code> from a 26-color grayscale <code>value</code> …\nCreates a grayscale color by wrapping <code>value</code> via <code>% 26</code>, with …\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nCreates a “by reference” adapter for this instance of …\nCalculates the offset from a pointer in bytes (convenience …\nReturns the alignment of this type in bytes.\nReturns the alignment of this type in bytes.\nReturns the number of bytes needed to represent the scalar …\nReturns the length in bytes of the <code>std::io::File</code> backing …\nReturns the length in bytes of the <code>io::Cursor&lt;u8&gt;</code> backing …\nCalculates the offset from a pointer in bytes.\nCalculates the distance between two pointers within the …\nCalculates the distance between two pointers within the …\nShifts all bits in the entire register left by a number of …\nShifts each <code>u128</code> lane left by a number of bytes.\nShifts all bits in the entire register right by a number …\nShifts each <code>u128</code> lane right by a number of bytes.\nReturns the size of this type in bytes.\nReturns the size of this type in bytes.\nCalculates the offset from a pointer in bytes (convenience …\nSwap the bytes of the given 32-bit value.\nSwap the bytes of the given 64-bit value.\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nTransforms this <code>Read</code> instance to an <code>Iterator</code> over its …\nSets the byte slice of image data.\nIterates over the bytes in this C string.\nReturns the rounded up size in bytes from a size in bits.\nReturns the bytes per pixel of the current format.\nGet a <code>Pin&lt;&amp;mut C&gt;</code>\nThe luminance-like channel value.\nThe luminance-like channel value.\nThe luminance-like channel value.\nThe luminance-like channel value.\nColor channels in order: [red, green, blue].\nColor channels in order: [red, green, blue, alpha].\nColor channels in order: [red, green, blue, alpha].\nColor channels in order: [red, green, blue].\nColor channels in order: [red, green, blue, alpha].\nColor channels in order: [red, green, blue, alpha].\nThe luminance-like channel value.\nColor channels in order: [red, green, blue].\nColor channels in order: [red, green, blue, alpha].\nColor channels in order: [red, green, blue].\nColor channels in order: [red, green, blue, alpha].\nColor channels in order: [red, green, blue, alpha].\nColor channels in order: [red, green, blue].\nColor channels in order: [red, green, blue, alpha].\nColor channels in order: [red, green, blue, alpha].\nAdds two vectors together, in compile-time.\nAdds two vectors together, in compile-time.\nAdds the given vector.\nAdds the given vector.\nThe area of the 2d extent.\nThe area of the 2d extent.\nThe area of the 2d extent.\nThe area of the 2d extent.\nThe area of the 2d extent.\nThe area of the 2d extent.\nThe area of the 2d extent.\nThe area of the 2d extent.\nThe area of the 2d extent.\nThe area of the 2d extent.\nThe area of the 2d extent.\nThe area of the 2d extent.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\nReturns the external boundary, the sum of the extents.\n…\nControl flags.\n⚙️𝐓 <code>core</code> Equivalent to the corresponding C type.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the cross product of two vectors.\nComputes the dot product of two vectors, in compile-time.\nComputes the dot product of two vectors, in compile-time.\n⚙️𝟙 <code>core</code> Equivalent to the corresponding C type.\n⚙️𝟙 <code>core</code> Equivalent to the corresponding C type.\nInput flags.\n⚙️𝟙 <code>core</code> Equivalent to the corresponding C type.\nThe length of the 1d extent.\nThe length of the 1d extent.\nThe length of the 1d extent.\nThe length of the 1d extent.\nThe length of the 1d extent.\nThe length of the 1d extent.\nThe length of the 1d extent.\nThe length of the 1d extent.\nThe length of the 1d extent.\nThe length of the 1d extent.\nThe length of the 1d extent.\nThe length of the 1d extent.\nLocal flags.\n…\n⚙️𝟙 <code>core</code> Equivalent to the corresponding C type.\n⚙️𝟙 <code>core</code> Equivalent to the corresponding C type.\nCalculates the ceiled magnitude of the vector.\nCalculates the ceiled magnitude of the vector.\nCalculates the floored magnitude of the vector.\nCalculates the floored magnitude of the vector.\nCalculates the rounded magnitude of the vector.\nCalculates the rounded magnitude of the vector.\nCalculates the magnitude of the vector (squared).\nCalculates the magnitude of the vector (squared).\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the internal measure, the product of the extents.\nReturns the normalized vector, using the given vector …\nReturns the normalized vector, using the given vector …\nOutput flags.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nThe perimeter of the 2d extent.\nDivides each element of the vector by a scalar, in …\nDivides each element of the vector by a scalar, in …\nMultiplies each element of the vector by a scalar, in …\nMultiplies each element of the vector by a scalar, in …\n⚙️𝐓 <code>core</code> Equivalent to the corresponding C type.\n⚙️𝟙 <code>core</code> Equivalent to the corresponding C type.\nSubtracts another vector from this vector, in compile-time.\nSubtracts another vector from this vector, in compile-time.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\nThe surface area of the 3d extent.\n⚙️𝐓 <code>core</code> Equivalent to the corresponding C type.\n⚙️𝟙 <code>core</code> Equivalent to the corresponding C type.\n⚙️𝟙 <code>core</code> Equivalent to the corresponding C type.\n⚙️𝟙 <code>core</code> Equivalent to the corresponding C type.\n⚙️𝟙 <code>core</code> Equivalent to the corresponding C type.\n⚙️ <code>core</code> Equivalent to C’s void type when used as a …\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nThe volume of the 3d extent.\nPerforms the call operation.\nPerforms the call operation.\nPerforms the call operation.\nPerforms an initialization routine once and only once. The …\nPerforms the same function as <code>call_once()</code> except ignores …\nReturns the source location of the caller of this …\nReturns whether the panic handler is allowed to unwind the …\nReturns whether the panic handler is allowed to unwind the …\nCancels this job.\nCancels a request for an animation frame.\nCancels a pending quit request, no matter who it was …\nReturns the canonical, absolute form of the path with all …\nReturns the canonical, absolute form of a path with all …\nReturns the canonical, absolute form of the path with all …\nReturns the capacity of a column, equivalent to <code>num_rows</code> …\nReturns the capacity per item in the major dimension based …\nReturns the capacity per item in the major dimension based …\nReturns the capacity per item in the minor dimension based …\nReturns the capacity per item in the minor dimension based …\nReturns the capacity of a row, equivalent to <code>num_cols</code> == <code>C</code>.\nReturns the service capabilities.\nReturns the number of elements the map can hold without …\nReturns the number of elements the binary heap can hold …\nReturns the total capacity of the array, equals <code>CAP</code>.\nReturns the number of elements the set can hold without …\nReturns the total capacity of the array, equals <code>CR == C * R</code>…\nReturns the destaque’s total capacity.\nReturns the stack’s total capacity.\nReturns the capacity this <code>OsString</code> can hold without …\nReturns the number of bytes the internal buffer can hold …\nReturns the number of bytes the internal buffer can hold …\nReturns the number of elements the deque can hold without …\nInvokes <code>capacity</code> on the underlying instance of <code>OsString</code>.\nReturns the total number of elements the vector can hold …\nReturns this <code>String</code>’s capacity, in bytes.\nReturns the total capacity of the hashmap (fixed at <code>N</code>).\nReturns the total capacity in bytes.\nReturns the total capacity in bytes.\nCaptures a stack backtrace of the current thread.\nCaptures the first token from a list of inputs.\nCaptures the last token from a list of inputs.\nCaptures all the tokens except the first one, as a tuple.\nReturn an iterator adaptor that iterates over the …\nReturn an iterator adaptor that iterates over the …\nCasts to a pointer of another type.\nCasts from a maybe-uninitialized type to its initialized …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nBit-preserving cast to <code>m128</code> from <code>m128d</code>\nBit-preserving cast to <code>m128</code> from <code>m128i</code>\nBit-preserving cast to <code>m128</code> from <code>m256</code>.\nBit-preserving cast to <code>m128d</code> from <code>m128</code>\nBit-preserving cast to <code>m128d</code> from <code>m128i</code>\nBit-preserving cast to <code>m128d</code> from <code>m256d</code>.\nBit-preserving cast to <code>m128i</code> from <code>m128</code>\nBit-preserving cast to <code>m128i</code> from <code>m128d</code>\nBit-preserving cast to <code>m128i</code> from <code>m256i</code>.\nBit-preserving cast to <code>m256</code> from <code>m256d</code>.\nBit-preserving cast to <code>m256</code> from <code>m256i</code>.\nBit-preserving cast to <code>m256i</code> from <code>m256</code>.\nBit-preserving cast to <code>m256d</code> from <code>m256i</code>.\nBit-preserving cast to <code>m256i</code> from <code>m256</code>.\nBit-preserving cast to <code>m256i</code> from <code>m256d</code>.\nCasts from a type to its maybe-uninitialized version.\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nInvokes a closure, capturing the cause of an unwinding …\nThe cubic root.\n<em><code>c</code>ustomizable <code>dbg!</code></em> macro.\nThe smallest integer greater than or equal to <code>self</code>.\nRound each lane to a whole number, towards positive …\nRound the low lane of <code>b</code> toward positive infinity, other …\nRound each lane to a whole number, towards positive …\nRound the low lane of <code>b</code> toward positive infinity, high …\nRound <code>f32</code> lanes towards positive infinity.\nRound <code>f64</code> lanes towards positive infinity.\nReturns the number of <code>(columns, rows)</code> of cells.\n<code>core</code> Evaluates boolean combinations of configuration flags …\nA macro for defining <code>#[cfg]</code> if-else statements.\nA for loop that is usable in <em>compile-time</em> contexts.\nChain a function which takes the parameter by value.\nChain a function which takes the parameter by value.\nCreates an adapter which will chain this stream with …\nCreates an adapter which will chain this stream with …\nTakes two iterators and creates a new iterator over both …\nTakes two iterators and creates a new iterator over both …\nTakes two iterators and creates a new iterator over both …\nTakes two iterators and creates a new iterator over both …\nTakes two iterators and creates a new iterator over both …\nTakes two iterators and creates a new iterator over both …\nTakes two iterators and creates a new iterator over both …\nTakes two iterators and creates a new iterator over both …\nChain a function which takes the parameter by exclusive …\nChain a function which takes the parameter by exclusive …\nChain a function which takes the parameter by shared …\nChain a function which takes the parameter by shared …\nCreates a new asynchronous channel, returning the …\n⚙️ 𝐓 <code>core</code> A 32-bit unicode scalar.\n𝐓 A 16-bit unicode scalar, limited to the Basic …\n𝐓 A 7-bit unicode scalar, limited to basic latin subset …\n𝐓 An 8-bit unicode scalar, limited to basic latin and …\nReturns an iterator over the <code>chars</code> of this grapheme …\nReturns an iterator over the <code>chars</code> of this grapheme …\nChecks if a type <code>T</code> is a valid dynamically sized type (DST).\nChecked absolute value. Checks for overflow and returns …\nChecked absolute value. Checks for overflow and returns …\nChecked absolute value. Checks for overflow and returns …\nChecked absolute value. Checks for overflow and returns …\nChecked absolute value. Checks for overflow and returns …\nChecked absolute value. Checks for overflow and returns …\nAdds an unsigned integer to a non-zero value. Checks for …\nAdds an unsigned integer to a non-zero value. Checks for …\nAdds an unsigned integer to a non-zero value. Checks for …\nAdds an unsigned integer to a non-zero value. Checks for …\nAdds an unsigned integer to a non-zero value. Checks for …\nAdds an unsigned integer to a non-zero value. Checks for …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nAdd two time deltas together. If overflow occurs, then <code>None</code>…\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked integer addition. Computes <code>self + rhs</code>.\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nAdds a <code>Duration</code> to this <code>TimeDelta</code>. Returns <code>None</code> if the …\nAdds a <code>TimeDelta</code> to an instant\nCasts <code>self</code> to <code>i128</code> with range check.\nCasts <code>self</code> to <code>i16</code> with range check.\nCasts <code>self</code> to <code>i32</code> with range check.\nCasts <code>self</code> to <code>i64</code> with range check.\nCasts <code>self</code> to <code>i8</code> with range check.\nCasts <code>self</code> to <code>isize</code> with range check.\nCasts <code>self</code> to <code>isize_down</code> with range check.\nCasts <code>self</code> to <code>isize_up</code> with range check.\nCasts <code>self</code> to <code>u128</code> with range check.\nCasts <code>self</code> to <code>u16</code> with range check.\nCasts <code>self</code> to <code>u32</code> with range check.\nCasts <code>self</code> to <code>u64</code> with range check.\nCasts <code>self</code> to <code>u8</code> with range check.\nCasts <code>self</code> to <code>usize</code> with range check.\nCasts <code>self</code> to <code>usize_down</code> with range check.\nCasts <code>self</code> to <code>usize_up</code> with range check.\nDivide this duration by an integer. If the division …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nReturns the amount of time elapsed from another instant to …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiply this time delta by an integer. If the …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nReturns this duration with its sign flipped.\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nSubtract one time delta from another. If overflow occurs, …\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked integer substration. Computes <code>self - rhs</code>.\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nSubtracts a <code>Duration</code> from this <code>TimeDelta</code>. Returns <code>None</code> if …\nReturns the thickness of the window chrome (frame, …\nReturn an <em>iterable</em> that can group iterator elements. …\nReturn an <em>iterable</em> that can group iterator elements. …\nReturn an <em>iterable</em> that can chunk the iterator.\nReturn an <em>iterable</em> that can chunk the iterator.\n<code>devela_macros</code> Evaluates to either a <code>true</code> of <code>false</code> literal …\nReturn an iterator over all windows, wrapping back to the …\nReturn an iterator over all windows, wrapping back to the …\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nRestrict a value to a certain interval.\nCompares and returns <code>self</code> clamped between <code>min</code> and <code>max</code>.\nCompares and returns <code>self</code> clamped between <code>min</code> and <code>max</code>.\nCompares and returns a clamped <em>total ordered</em> <code>self</code> between …\nCompares and returns <code>self</code> clamped between <code>min</code> and <code>max</code>.\nThe clamped value, propagating <code>NaN</code>.\nThe clamped value, using total order.\nClears the map, removing all key-value pairs. Keeps the …\nDrops all items from the binary heap.\nClears the array by setting all elements to <code>None</code>.\nClears the set, removing all values.\nClears the map, removing all elements.\nClears the destaque.\nClears the stack.\nTruncates the <code>OsString</code> to zero length.\n(clear) Clears the console if possible.\nClears the set, removing all elements.\nRemoves all elements from the <code>LinkedList</code>.\nClears the deque, removing all values.\nInvokes <code>clear</code> on the underlying instance of <code>OsString</code>.\nClears the vector, removing all values.\nTruncates this <code>String</code>, removing all contents.\nResets both the state and seed for full reinitialization.\n(clearTimeout) (clearInterval) Cancels a timeout or …\nSets the length to 0, by resetting all bytes to 0.\nSets the length to 0.\nClear the poisoned state from a mutex.\nClear the poisoned state from a lock.\n(clearRect) Clears the specified rectangular area, making …\n(clearTimeout) (clearInterval) Cancels a timeout or …\nGet current OS clipboard value.\nSave value to OS clipboard\nReturns a duplicate of the value.\nMakes a clone of the <code>Arc</code> pointer.\nMakes a clone of the <code>Weak</code> pointer that points to the same …\nReturns a new box with a <code>clone()</code> of this box’s contents.\nMakes a clone of the <code>Rc</code> pointer.\nPanics\nCopies a <code>Ref</code>.\nMakes a clone of the <code>Weak</code> pointer that points to the same …\nClone a sender to send to other threads.\nAdds two vectors together\nAdds two vectors together\nDivides a vector by a scalar.\nDivides a vector by a scalar.\nCopies <code>source</code>’s contents into <code>self</code> without creating a …\nCopies <code>source</code>’s contents into <code>self</code> without creating a …\nOverwrites the contents of <code>self</code> with a clone of the …\nClones the contents of <code>source</code> into <code>self</code>.\nOverwrites the contents of <code>self</code> with a clone of the …\nOverwrites the contents of <code>self</code> with a clone of the …\nPanics\nClones the contents of <code>source</code> into <code>self</code>.\nOverwrites the contents of <code>self</code> with a clone of the …\nClones the contents of <code>source</code> into <code>self</code>.\nAssigns a clone of <code>source</code> to <code>self</code>, unless …\nUses borrowed data to replace owned data, usually by …\nUses borrowed data to replace owned data, usually by …\nMultiplies a vector by a scalar.\nMultiplies a vector by a scalar.\nSubtracts two vectors together.\nSubtracts two vectors together.\nCreates an iterator which <code>clone</code>s all of its elements.\nCreates an iterator which <code>clone</code>s all of its elements.\nCreates an iterator which <code>clone</code>s all of its elements.\nCreates an iterator which <code>clone</code>s all of its elements.\nCreates an iterator which <code>clone</code>s all of its elements.\nCreates an iterator which <code>clone</code>s all of its elements.\nCreates an iterator which <code>clone</code>s all of its elements.\nCreates an iterator which <code>clone</code>s all of its elements.\nMap a <code>Bound&lt;&amp;T&gt;</code> to a <code>Bound&lt;T&gt;</code> by cloning the contents of …\nMaps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the …\nMaps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the contents …\nMaps a <code>Result&lt;&amp;mut T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by cloning the …\nMaps a <code>Result&lt;&amp;T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by cloning the …\nCreates a closed interval $[l, u]$ <code>lower..=upper</code> …\nCreates a mismatch where <code>need</code> is an <code>Interval::closed</code>, and …\nCreates a half-open interval $[l, u)$ <code>lower..upper</code> <code>Range</code>.\nCreates a mismatch where <code>need</code> is an <code>Interval::closed_open</code>, …\nCreates an interval $[l, ∞)$ <code>lower..</code> <code>RangeFrom</code>.\nThis method returns an <code>Ordering</code> between <code>self</code> and <code>other</code>.\nComparison for two <code>Arc</code>s.\nCompare need first. If they are equal, then compare have.\nState’s ordering takes precedence over value’s …\nCompare <code>value</code> first. If they are equal, then compare <code>quant</code>.\nComparison for two <code>Rc</code>s.\nPanics\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nLow lane equality.\nLow lane <code>f64</code> equal to.\nLanewise <code>a == b</code> with lanes as <code>i16</code>.\nCompare <code>i16</code> lanes for equality, mask output.\nLanewise <code>a == b</code> with lanes as <code>i32</code>.\nCompare <code>i32</code> lanes for equality, mask output.\nLanewise <code>a == b</code> with lanes as <code>i64</code>.\nCompare <code>i64</code> lanes for equality, mask output.\nLanewise <code>a == b</code> with lanes as <code>i8</code>.\nCompare <code>i8</code> lanes for equality, mask output.\nLanewise <code>a == b</code>.\nLow lane <code>a == b</code>, other lanes unchanged.\nLanewise <code>a == b</code>, mask output.\nLow lane <code>a == b</code>, other lanes unchanged.\nLow lane greater than or equal to.\nLow lane <code>f64</code> greater than or equal to.\nLanewise <code>a &amp;gt;= b</code>.\nLow lane <code>a &amp;gt;= b</code>, other lanes unchanged.\nLanewise <code>a &amp;gt;= b</code>.\nLow lane <code>a &amp;gt;= b</code>, other lanes unchanged.\nLow lane greater than.\nLow lane <code>f64</code> greater than.\nLanewise <code>a &amp;gt; b</code> with lanes as <code>i16</code>.\nCompare <code>i16</code> lanes for <code>a &amp;gt; b</code>, mask output.\nLanewise <code>a &amp;gt; b</code> with lanes as <code>i32</code>.\nCompare <code>i32</code> lanes for <code>a &amp;gt; b</code>, mask output.\nLanewise <code>a &amp;gt; b</code> with lanes as <code>i64</code>.\nCompare <code>i64</code> lanes for <code>a &amp;gt; b</code>, mask output.\nLanewise <code>a &amp;gt; b</code> with lanes as <code>i8</code>.\nCompare <code>i8</code> lanes for <code>a &amp;gt; b</code>, mask output.\nLanewise <code>a &amp;gt; b</code>.\nLow lane <code>a &amp;gt; b</code>, other lanes unchanged.\nLanewise <code>a &amp;gt; b</code>.\nLow lane <code>a &amp;gt; b</code>, other lanes unchanged.\nLow lane less than or equal to.\nLow lane <code>f64</code> less than or equal to.\nLanewise <code>a &amp;lt;= b</code>.\nLow lane <code>a &amp;lt;= b</code>, other lanes unchanged.\nLanewise <code>a &amp;lt;= b</code>.\nLow lane <code>a &amp;lt;= b</code>, other lanes unchanged.\nLow lane less than.\nLow lane <code>f64</code> less than.\nLanewise <code>a &amp;lt; b</code> with lanes as <code>i16</code>.\nLanewise <code>a &amp;lt; b</code> with lanes as <code>i32</code>.\nLanewise <code>a &amp;lt; b</code> with lanes as <code>i8</code>.\nLanewise <code>a &amp;lt; b</code>.\nLow lane <code>a &amp;lt; b</code>, other lanes unchanged.\nLanewise <code>a &amp;lt; b</code>.\nLow lane <code>a &amp;lt; b</code>, other lane unchanged.\nLow lane not equal to.\nLow lane <code>f64</code> less than.\nLanewise <code>a != b</code>.\nLow lane <code>a != b</code>, other lanes unchanged.\nLanewise <code>a != b</code>.\nLow lane <code>a != b</code>, other lane unchanged.\nLanewise <code>!(a &amp;gt;= b)</code>.\nLow lane <code>!(a &amp;gt;= b)</code>, other lanes unchanged.\nLanewise <code>!(a &amp;gt;= b)</code>.\nLow lane <code>!(a &amp;gt;= b)</code>, other lane unchanged.\nLanewise <code>!(a &amp;gt; b)</code>.\nLow lane <code>!(a &amp;gt; b)</code>, other lanes unchanged.\nLanewise <code>!(a &amp;gt; b)</code>.\nLow lane <code>!(a &amp;gt; b)</code>, other lane unchanged.\nLanewise <code>!(a &amp;lt;= b)</code>.\nLow lane <code>!(a &amp;lt;= b)</code>, other lanes unchanged.\nLanewise <code>!(a &amp;lt;= b)</code>.\nLow lane <code>!(a &amp;lt;= b)</code>, other lane unchanged.\nLanewise <code>!(a &amp;lt; b)</code>.\nLow lane <code>!(a &amp;lt; b)</code>, other lanes unchanged.\nLanewise <code>!(a &amp;lt; b)</code>.\nLow lane <code>!(a &amp;lt; b)</code>, other lane unchanged.\nCompare <code>f32</code> lanes according to the operation specified, …\nCompare <code>f32</code> lanes according to the operation specified, …\nCompare <code>f64</code> lanes according to the operation specified, …\nCompare <code>f64</code> lanes according to the operation specified, …")