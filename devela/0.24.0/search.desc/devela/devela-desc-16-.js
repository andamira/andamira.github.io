searchState.loadedDescShard("devela", 16, "Returns the total number of days in the the year in which …\nReturns the total number of days in the year of this ISO …\nThis routine is identical to <code>Date::duration_until</code>, but the …\nThis routine is identical to <code>DateTime::duration_until</code>, but …\nThis routine is identical to <code>Time::duration_until</code>, but the …\nReturns an absolute duration representing the elapsed time …\nReturns an absolute duration representing the elapsed time …\nReturns an absolute duration representing the elapsed time …\nReturns the end of the day that this datetime resides in.\nReturns the year and its era.\nSet year of a date via its era and its non-negative …\nReturns the year and its era.\nSet year of a datetime via its era and its non-negative …\nReturns the first date of the month that this date resides …\nReturns the first date of the month that this datetime …\nReturns the ISO 8601 week date corresponding to the first …\nReturns the first date of the year that this date resides …\nReturns the first date of the year that this datetime …\nReturns the ISO 8601 week date corresponding to the first …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a Gregorian date to an ISO week date.\nConstruct a Gregorian date from an ISO 8601 week date.\nConvert an offset to a structured <code>Weekday</code>.\nConvert an offset to a structured <code>Weekday</code>.\nCreates a <code>DateTime</code> from its constituent parts.\nConvert an offset to a structured <code>Weekday</code>.\nConvert an offset to a structured <code>Weekday</code>.\nReturns the “hour” component of this datetime.\nSet the hour field on a <code>DateTime</code>.\nReturns the “hour” component of this time.\nSet the hour field on a <code>Time</code>.\nReturns true if and only if the year in which this date …\nReturns true if and only if the year in which this …\nReturns true if and only if the year of this week date is …\nConverts a civil date to a <code>Zoned</code> datetime by adding the …\nConverts a civil datetime to a <code>Zoned</code> datetime by adding …\nSet the rounding increment for the smallest unit.\nSet the rounding increment for the smallest unit.\nSet the rounding increment for the smallest unit.\nSet the rounding increment for the smallest unit.\nSet the rounding increment for the smallest unit.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct an ISO 8601 week date from this Gregorian date.\nConstruct an ISO 8601 week date from this datetime.\nSet the largest units allowed in the span returned.\nSet the largest units allowed in the span returned.\nSet the largest units allowed in the span returned.\nReturns the last date of the month that this date resides …\nReturns the last date of the month that this datetime …\nReturns the ISO 8601 week date corresponding to the last …\nReturns the last date of the year that this date resides …\nReturns the last date of the year that this datetime …\nReturns the ISO 8601 week date corresponding to the last …\nReturns the “microsecond” component of this datetime.\nSet the microsecond field on a <code>DateTime</code>.\nReturns the “microsecond” component of this time.\nSet the microsecond field on a <code>Time</code>.\nReturns the first moment of time in a day.\nReturns the “millisecond” component of this datetime.\nSet the millisecond field on a <code>DateTime</code>.\nReturns the “millisecond” component of this time.\nSet the millisecond field on a <code>Time</code>.\nReturns the “minute” component of this datetime.\nSet the minute field on a <code>DateTime</code>.\nReturns the “minute” component of this time.\nSet the minute field on a <code>Time</code>.\nSet the rounding mode.\nSet the rounding mode.\nSet the rounding mode.\nSet the rounding mode.\nSet the rounding mode.\nReturns the month for this date.\nSet the month field on a <code>Date</code>.\nReturns the month for this datetime.\nSet the month field on a <code>DateTime</code>.\nReturns the “nanosecond” component of this datetime.\nSet the nanosecond field on a <code>DateTime</code>.\nReturns the “nanosecond” component of this time.\nSet the nanosecond field on a <code>Time</code>.\nCreates a new <code>Date</code> value from its component year, month …\nCreate a new default configuration for computing the span …\nCreates a new <code>DateTime</code> value from its component year, …\nCreate a new default configuration for computing the span …\nCreate a new default configuration for rounding a <code>DateTime</code>.\nCreate a new ISO week date from it constituent parts.\nCreates a new <code>Time</code> value from its component hour, minute, …\nCreate a new default configuration for computing the span …\nCreate a new default configuration for rounding a <code>Time</code>.\nReturns the next weekday, wrapping around at the end of …\nReturns the “nth” weekday from this date, not …\nReturns the “nth” weekday from this datetime, not …\nReturns the “nth” weekday from the beginning or end of …\nReturns the “nth” weekday from the beginning or end of …\nA convenience function for constructing a <code>DateTime</code> from …\nReturns the previous weekday, wrapping around at the …\nRounds this datetime according to the <code>DateTimeRound</code> …\nRounds this time according to the <code>TimeRound</code> configuration …\nThis routine is identical to <code>Date::checked_add</code>, except the …\nThis routine is identical to <code>DateTime::checked_add</code>, except …\nThis routine is identical to <code>Time::checked_add</code>, except the …\nThis routine is identical to <code>Date::saturating_add</code> with the …\nThis routine is identical to <code>DateTime::saturating_add</code> with …\nThis routine is identical to <code>Time::saturating_add</code> with the …\nReturns the “second” component of this datetime.\nSet the second field on a <code>DateTime</code>.\nReturns the “second” component of this time.\nSet the second field on a <code>Time</code>.\nReturn an iterator of periodic dates determined by the …\nReturn an iterator of periodic datetimes determined by the …\nReturn an iterator of periodic times determined by the …\nThis routine is identical to <code>Date::until</code>, but the order of …\nThis routine is identical to <code>DateTime::until</code>, but the …\nThis routine is identical to <code>Time::until</code>, but the order of …\nReturns the number of days from <code>other</code> to this weekday.\nSet the smallest units allowed in the span returned.\nSet the smallest units allowed in the span returned.\nSet the smallest units allowed in the datetime returned …\nSet the smallest units allowed in the span returned.\nSet the smallest units allowed in the time returned after …\nReturns the beginning of the day that this datetime …\nFormats this civil date according to the given <code>format</code>.\nFormats this civil datetime according to the given <code>format</code>.\nFormats this civil time according to the given <code>format</code>.\nParses a civil date in <code>input</code> matching the given <code>format</code>.\nParses a civil datetime in <code>input</code> matching the given <code>format</code>.\nParses a civil time in <code>input</code> matching the given <code>format</code>.\nReturns the fractional nanosecond for this <code>DateTime</code> value.\nSet the subsecond nanosecond field on a <code>DateTime</code>.\nReturns the fractional nanosecond for this <code>Time</code> value.\nSet the subsecond nanosecond field on a <code>Time</code>.\nCreates a new <code>Time</code> value in a <code>const</code> context.\nReturns the time component of this datetime.\nSet the hour, minute, second, millisecond, microsecond and …\nGiven a <code>Time</code>, this constructs a <code>DateTime</code> value with its …\nGiven a <code>Date</code>, this constructs a <code>DateTime</code> value with its …\nReturns this weekday as an offset.\nReturns this weekday as an offset.\nReturns this weekday as an offset.\nReturns this weekday as an offset.\nConverts a civil datetime to a <code>Zoned</code> datetime by adding …\nConverts a civil datetime to a <code>Zoned</code> datetime by adding …\nReturns the date immediately following this one.\nReturns the datetime with a date immediately following …\nReturns the ISO 8601 date immediately following this one.\nReturns a span representing the elapsed time from this …\nReturns a span representing the elapsed time from this …\nReturns a span representing the elapsed time from this …\nReturns the number of days until <code>other</code> from this weekday.\nReturns the week component of this ISO 8601 week date.\nReturns the weekday corresponding to this date.\nReturns the weekday corresponding to this datetime.\nReturns the day component of this ISO 8601 week date.\nReturns the total number of weeks in the year of this ISO …\nCreate a builder for constructing a <code>Date</code> from the fields …\nCreate a builder for constructing a new <code>DateTime</code> from the …\nCreate a builder for constructing a <code>Time</code> from the fields …\nAdd the given span to this time and wrap around on …\nAdd the given number of days to this weekday, using …\nThis routine is identical to <code>Time::wrapping_add</code> with the …\nSubtract the given number of days from this weekday, using …\nReturns the year for this date.\nSet the year field on a <code>Date</code>.\nReturns the year for this datetime.\nSet the year field on a <code>DateTime</code>.\nReturns the year component of this ISO 8601 week date.\nReturns the date immediately preceding this one.\nReturns the datetime with a date immediately preceding …\nReturns the ISO 8601 week date immediately preceding this …\nAn adapter for using <code>std::fmt::Write</code> implementations with …\nAn adapter for using <code>std::io::Write</code> implementations with …\nA trait for printing datetimes or spans into …\nA bespoke but easy to read format for <code>Span</code> and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSupport for printing and parsing instants using the RFC …\nSupport for “printf”-style parsing and formatting.\nA hybrid format derived from RFC 3339, RFC 9557 and ISO …\nWrite the given character to this writer, returning …\nWrite the given string to this writer, returning whether …\nSets the sign format based on other configuration options.\nInserts one ASCII whitespace between the unit designator …\nInserts one ASCII whitespace between the unit value and …\nThis writes out the shortest possible label for each unit …\nConfiguration for <code>SpanPrinter::designator</code>.\nConfiguration for <code>SpanPrinter::direction</code>.\nA sign is always written, with <code>-</code> for negative spans and <code>+</code> …\nConfiguration for <code>SpanPrinter::fractional</code>.\nThe smallest whole integer unit allowed is hours.\nA special mode that uses designator labels that are known …\nThe smallest whole integer unit allowed is microseconds.\nThe smallest whole integer unit allowed is milliseconds.\nThe smallest whole integer unit allowed is minutes.\nDoes not insert any ASCII whitespace.\nThe smallest whole integer unit allowed is seconds.\nThis writes out a short but not minimal label for each …\nWhen set, a sign is only written when the span or duration …\nConfiguration for <code>SpanPrinter::spacing</code>.\nA parser for Jiff’s “friendly” duration format.\nA printer for Jiff’s “friendly” duration format.\nWhen set, a sign is only written when the span or duration …\nThis writes out the full word of each unit designation. …\nWhen enabled, commas are written after unit designators.\nConfigures the kind of unit designators to use.\nConfigures how and when the sign for the duration is …\nFormat a <code>SignedDuration</code> into a string using the “friendly…\nEnable fractional formatting for the given unit.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFormats the span or duration into a <code>HH:MM:SS[.fffffffff]</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new parser for the “friendly” duration …\nCreates a new printer for the “friendly” duration …\nThe padding to use when writing unit values.\nRun the parser on the given string (which may be plain …\nRun the parser on the given string (which may be plain …\nThe precision to use when writing fractional unit values.\nPrint a <code>SignedDuration</code> to the given writer using the “…\nPrint a <code>Span</code> to the given writer using the “friendly” …\nConfigures the spacing between the units and the …\nFormat a <code>Span</code> into a string using the “friendly” …\nSets the unit to use when printing a duration that is zero.\nA parser for RFC 2822 datetimes.\nA printer for RFC 2822 datetimes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new RFC 2822 datetime parser with the default …\nCreate a new RFC 2822 datetime printer with the default …\nParse an RFC 2822 datetime string into a <code>Zoned</code>.\nParse an RFC 2822 datetime string into a <code>Timestamp</code>.\nParse a datetime string into a <code>Zoned</code> value.\nPrint a <code>Timestamp</code> datetime to the given writer.\nPrint a <code>Timestamp</code> datetime to the given writer in a way …\nPrint a <code>Zoned</code> datetime to the given writer.\nWhen enabled, parsing will permit the weekday to be …\nFormat a <code>Timestamp</code> datetime into a string in a way that is …\nFormat a <code>Timestamp</code> datetime into a string.\nConvert a <code>Zoned</code> to an RFC 2822 datetime string.\nFormat a <code>Zoned</code> datetime into a string.\n“ante meridiem” or “before midday.”\nThe “broken down time” used by parsing and formatting.\nConfiguration for customizing the behavior of formatting …\nAn interface for customizing <code>strtime</code>-style parsing and …\nThe default trait implementation of <code>Custom</code>.\nA “lazy” implementation of <code>std::fmt::Display</code> for …\nThese are “extensions” to the standard <code>strftime</code> …\nA label to disambiguate hours on a 12-hour clock.\n“post meridiem” or “after midday.”\nA POSIX locale implementation of <code>Custom</code>.\nSet the implementation of <code>Custom</code> to use in <code>strtime</code>-style …\nReturns the parsed day, if available.\nReturns the parsed day of the year (1-366), if available.\nFormat the given broken down time using the format string …\nFormat this broken down time using the format string given.\nCalled when formatting a datetime with the <code>%r</code> flag.\nCalled when formatting a datetime with the <code>%x</code> flag.\nCalled when formatting a datetime with the <code>%c</code> flag.\nCalled when formatting a datetime with the <code>%X</code> flag.\nFormat this broken down time with a specific configuration …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the parsed hour, if available.\nReturns the time zone IANA identifier, if available.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the parsed ISO 8601 week-based number, if …\nReturns the parsed ISO 8601 week-based year, if available.\nEnable lenient formatting.\nReturns the parsed meridiem, if available.\nReturns the parsed minute, if available.\nReturns the Monday based week number.\nReturns the parsed month, if available.\nCreate a new default <code>Config</code> that uses <code>DefaultCustom</code>.\nCreate a new instance of this default customization.\nCreate a new instance of this POSIX customization.\nReturns the parsed offset, if available.\nParse the given <code>input</code> according to the given <code>format</code> string.\nParse the given <code>input</code> according to the given <code>format</code> string.\nParse a prefix of the given <code>input</code> according to the given …\nReturns the parsed second, if available.\nSet the day on this broken down time.\nSet the day of year on this broken down time.\nSet the hour on this broken down time.\nSet the IANA time zone identifier on this broken down time.\nSet the ISO 8601 week-based number on this broken down …\nSet the ISO 8601 week-based year on this broken down time.\nSet the minute on this broken down time.\nSet the Monday based week number.\nSet the month on this broken down time.\nSet the time zone offset on this broken down time.\nSet the second on this broken down time.\nSet the subsecond nanosecond on this broken down time.\nSet the Sunday based week number.\nSet the weekday on this broken down time.\nSet the year on this broken down time.\nReturns the parsed subsecond nanosecond, if available.\nReturns the Sunday based week number.\nExtracts a civil date from this broken down time.\nExtracts a civil datetime from this broken down time.\nFormat this broken down time using the format string given …\nFormat this broken down time with a specific configuration …\nExtracts a civil time from this broken down time.\nExtracts a timestamp from this broken down time.\nExtracts a zoned datetime from this broken down time.\nExtracts a zoned datetime from this broken down time and …\nReturns the parsed weekday, if available.\nReturns the parsed year, if available.\nA parser for Temporal datetimes.\nA printer for Temporal datetimes.\nThe time zone annotation is a name, usually an IANA time …\nA specific numeric offset, including whether the parsed …\nThe time zone annotation is an offset. For example, <code>-05:00</code>.\nA low level representation of a parsed Temporal ISO 8601 …\nA specific numeric offset, including the sign of the …\nAn offset parsed from a Temporal ISO 8601 datetime string, …\nA parser for Temporal durations.\nA printer for Temporal durations.\nAn RFC 9557 time zone annotation, for use with <code>Pieces</code>.\nThe kind of time zone found in an RFC 9557 timestamp, for …\nA time zone annotation parsed from a datetime string.\nThe “Zulu” offset, corresponding to UTC in a context …\nReturns the name of this time zone annotation as a string …\nReturns the civil date in this <code>Pieces</code>.\nFormat a <code>civil::Date</code> into a string.\nFormat a <code>civil::DateTime</code> into a string.\nSet the disambiguation strategy for when a datetime falls …\nFormat a <code>SignedDuration</code> into a string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>Pieces</code> into an “owned” value whose …\nConverts this time zone annotation into an “owned” …\nConverts this time zone annotation kind into an “owned”…\nConverts this time zone annotation name into an “owned”…\nReturns true when this time zone is marked as “critical.…\nReturns whether the sign of the offset is negative or not.\nReturns the “kind” of this annotation. The kind is …\nUse lowercase for the datetime separator and the <code>Z</code> (Zulu) …\nUse lowercase for unit designator labels.\nCreate a new Temporal datetime parser with the default …\nCreate a new Temporal datetime printer with the default …\nCreate a new Temporal datetime printer with the default …\nCreate a new Temporal span printer with the default …\nReturns the offset in this <code>Pieces</code>.\nReturns the numeric offset.\nSet the conflict resolution strategy for when an offset in …\nParses a Temporal ISO 8601 datetime string into a <code>Pieces</code>.\nParse a civil date string into a <code>civil::Date</code>.\nParse a civil datetime string into a <code>civil::DateTime</code>.\nParse an ISO 8601 duration string into a <code>SignedDuration</code> …\nParse a Temporal datetime string into <code>Pieces</code>.\nParse a span string into a <code>Span</code> value.\nParse a civil time string into a <code>civil::Time</code>.\nParses a string representing a time zone into a <code>TimeZone</code>.\nParses a string representing a time zone into a <code>TimeZone</code> …\nParse a datetime string into a <code>Timestamp</code>.\nParse a datetime string with a time zone annotation into a …\nParse a datetime string with a time zone annotation into a …\nFormat <code>Pieces</code> of a Temporal datetime.\nSet the precision to use for formatting the fractional …\nPrint a <code>civil::Date</code> to the given writer.\nPrint a <code>civil::DateTime</code> to the given writer.\nPrint a <code>SignedDuration</code> to the given writer.\nPrint the <code>Pieces</code> of a Temporal datetime.\nPrint a <code>Span</code> to the given writer.\nPrint a <code>civil::Time</code> to the given writer.\nPrint a <code>TimeZone</code>.\nPrint a <code>Timestamp</code> datetime to the given writer.\nPrint a <code>Timestamp</code> datetime to the given writer with the …\nPrint a <code>Zoned</code> datetime to the given writer.\nUse the given ASCII character to separate the date and …\nFormat a <code>Span</code> into a string.\nReturns the civil time in this <code>Pieces</code>.\nFormat a <code>civil::Time</code> into a string.\nReturns the time zone annotation in this <code>Pieces</code>.\nFormat a <code>TimeZone</code> into a string.\nFormat a <code>Timestamp</code> datetime into a string.\nFormat a <code>Timestamp</code> datetime into a string with the given …\nA convenience routine for converting an offset on this …\nConverts this offset to a concrete numeric offset in all …\nA convenience routine for converting a time zone …\nA convenience routine for converting this annotation into …\nA convenience routine for converting a time zone …\nThis is like <code>TimeZoneAnnotation::to_time_zone</code>, but permits …\nSet the date on this <code>Pieces</code> to the one given.\nSets this numeric offset to use <code>-00:00</code> if and only if the …\nSet the offset on this <code>Pieces</code> to the one given.\nSet the time on this <code>Pieces</code> to the one given.\nReturns a new <code>Pieces</code> with the given time zone annotation.\nSets the time zone annotation on this <code>Pieces</code> to the given …\nSets the time zone annotation on this <code>Pieces</code> to the given …\nFormat a <code>Zoned</code> datetime into a string.\nWhen the offset and time zone are in conflict, this will …\nWhen the offset and time zone are in conflict, this will …\nA possibly ambiguous <code>Offset</code>.\nA possibly ambiguous <code>Timestamp</code>, created by …\nA possibly ambiguous <code>Zoned</code>, created by …\nIn a backward transition, the earlier time is selected. In …\nConfiguration for resolving ambiguous datetimes in a …\nAn enum indicating whether a particular datetime  is in …\nThe earlier time is always selected.\nThe offset for a particular civil datetime and time zone …\nThe offset for a particular civil datetime and time zone …\nThe later time is always selected.\nThe maximum possible time zone offset.\nThe minimum possible time zone offset.\nDST is not in effect. In other words, standard time is in …\nRepresents a fixed time zone offset.\nOptions for <code>Offset::checked_add</code> and <code>Offset::checked_sub</code>.\nConfiguration for resolving disparities between an offset …\nOptions for <code>Offset::round</code>.\nAlways attempt to use the offset to resolve a datetime to …\nWhen an ambiguous datetime is encountered, this strategy …\nWhen the offset and time zone are in conflict, this …\nA representation of a time zone.\nA handle to a IANA Time Zone Database.\nAn iterator over time zone transitions going forward in …\nA name for a time zone yield by the <code>TimeZoneNameIter</code> …\nAn iterator over the time zone identifiers in a …\nAn offset along with DST status and a time zone …\nAn iterator over time zone transitions going backward in …\nA representation a single time zone transition.\nThe offset corresponding to UTC. That is, no offset at all.\nThe UTC time zone.\nThe offset for a particular civil datetime and time zone is\nDST is in effect.\nThe offset corresponding to no offset at all.\nReturns the time zone abbreviation corresponding to this …\nReturns the time zone abbreviation corresponding to this …\nReturns this time zone name as a borrowed string.\nReturns a list of all available time zone identifiers from …\nReturns a time zone database initialized from the bundled …\nAdds the given span of time to this offset.\nThis routine is identical to <code>Offset::checked_add</code> with the …\nDisambiguates this timestamp according to the …\nDisambiguates this zoned datetime according to the …\nCreates a new time zone offset in a <code>const</code> context from a …\nReturns the civil datetime that was used to create this …\nReturns the civil datetime that was used to create this …\nReturns a copy of the global <code>TimeZoneDatabase</code>.\nDisambiguates this (possibly ambiguous) timestamp into a …\nDisambiguates this (possibly ambiguous) timestamp into a …\nReturns whether daylight saving time is enabled for this …\nReturns whether daylight saving time is enabled for this …\nThis routine is identical to <code>Offset::duration_until</code>, but …\nReturns an absolute duration representing the difference …\nDisambiguates this timestamp according to the …\nDisambiguates this zoned datetime according to the …\nReturns a time zone with a fixed offset.\nReturns an iterator of time zone transitions following the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a time zone database initialized from a path …\nReturns a time zone database initialized from the given …\nReturns a time zone database initialized from the current …\nCreates a new time zone offset from a given number of …\nCreates a new time zone offset in a <code>const</code> context from a …\nReturns a <code>TimeZone</code> corresponding to the IANA time zone …\nA convenience function for performing a time zone database …\nWhen this time zone was loaded from an IANA time zone …\nSet the rounding increment for the smallest unit.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a civil datetime to a possibly ambiguous zoned …\nConsumes this ambiguous zoned datetime and returns the …\nReturns true if and only if this possibly ambiguous …\nReturns true if and only if this possibly ambiguous zoned …\nReturns true if it is known that this time zone database …\nReturns true when this value is equal to <code>Dst::Yes</code>.\nReturns true if and only if this offset is less than zero.\nReturns true if and only if this offset is positive.\nReturns true when this value is equal to <code>Dst::No</code>.\nReturns true if and only if this time zone is unknown.\nReturns true if and only if this offset is zero.\nDisambiguates this timestamp according to the …\nDisambiguates this zoned datetime according to the …\nSet the rounding mode.\nReturns the negation of this offset.\nCreate a new default configuration for rounding a time …\nReturns a database for which all time zone lookups fail.\nCreates a new time zone offset in a <code>const</code> context from a …\nReturns the possibly ambiguous offset that is the ultimate …\nReturns the possibly ambiguous offset that is the ultimate …\nReturns the offset corresponding to this time zone …\nReturns the offset.\nCreates a time zone from a POSIX TZ rule string.\nReturns an iterator of time zone transitions preceding the …\nResets the internal cache of this database.\nResolve a potential conflict between an <code>Offset</code> and a …\nResolve a potential conflict between an <code>Offset</code> and a …\nReturns a new offset that is rounded according to the given\nThis routine is identical to <code>Offset::checked_add</code>, except …\nThis routine is identical to <code>Offset::saturating_add</code> with …\nReturns the total number of seconds in this offset.\nReturns the “sign number” or “signum” of this …\nReturns the span of time since the other offset given from …\nSet the smallest units allowed in the offset returned. …\nReturns the system configured time zone, if available.\nReturns a reference to the time zone that was used to …\nReturns the timestamp at which this transition began.\nConverts a civil datetime to a possibly ambiguous …\nConverts a civil datetime to a possibly ambiguous zoned …\nConverts the given timestamp to a civil datetime using …\nReturns the civil datetime corresponding to the given …\nIf this time zone is a fixed offset, then this returns the …\nReturns the offset corresponding to the given timestamp in …\nReturns the offset information corresponding to the given …\nConverts this offset into a <code>TimeZone</code>.\nConverts the given civil datetime to a timestamp using …\nConverts a civil datetime to a <code>Timestamp</code> in this time zone.\nConverts a civil datetime to a <code>Zoned</code> in this time zone.\nReturns the system configured time zone, if available.\nCreates a time zone from TZif binary data, whose format is …\nDisambiguates this timestamp according to the …\nDisambiguates this zoned datetime according to the …\nReturns a <code>TimeZone</code> that is specifially marked as “…\nReturns the span of time from this offset until the other …\nThe offset corresponding to the later time in a gap.\nThe offset corresponding to the earlier time in a fold.\nThe offset corresponding to the time before a gap.\nThe offset corresponding to the earlier time in a fold.\nThe offset from UTC for the corresponding civil datetime …\nControls audio from gameplay code.\nSettings for an <code>AudioManager</code>.\nPlay the sound from both speakers at the same volume.\nSpecifies how many of each resource type an audio context …\nThe action should occur when a clock reaches a specific …\nOnly output the dry signal.\nRepresents a change in volume.\nThe default backend used by <code>AudioManager</code>s.\nThe action should occur a certain amount of time from now.\nCurves the motion of a <code>Tween</code>.\nA fixed value.\nA stereo audio sample.\nThe distance of the current spatial track to a listener.\nThe value of a <code>modulator</code>.\nThe decibel value that produces no change in volume.\nThe action should occur immediately.\nCauses the <code>Tween</code> to start slow, speed up, and then slow …\nCauses the <code>Tween</code> to start slow, speed up, and then slow …\nCauses the <code>Tween</code> to start slow and speed up. A higher …\nCauses the <code>Tween</code> to start slow and speed up. A higher …\nAn error occurred when initializing the sound.\nPlay the sound from the left speaker only.\nMaintains a constant speed for the duration of the <code>Tween</code>.\nA transformation from a modulator’s value to a parameter …\nAn amount to blend the “dry” and “wet” outputs …\nCauses the <code>Tween</code> to start fast and slow down. A higher …\nCauses the <code>Tween</code> to start fast and slow down. A higher …\nThe stereo positioning of a sound.\nManages and updates a value that can be smoothly …\nErrors that can occur when playing a sound.\nHow quickly a sound should be played, where <code>1.0</code> is the …\nPlay the sound from the right speaker only.\nAn error that is returned when a resource cannot be added …\nThe minimum decibel value at which a sound is considered …\nA change in pitch in semitones.\nCould not play a sound because the maximum number of …\nDescribes when an action should occur.\nDescribes a smooth transition between values.\nA trait for types that can be smoothly interpolated.\nA value that a parameter can be linked to.\nOnly output the wet signal.\nA <code>Frame</code> with both the left and right samples set to <code>0.0</code>.\nCreates a clock.\nCreates a listener.\nCreates a modulator.\nAdds <code>rhs</code> to the minimum and maximum values of the output …\nCreates a mixer send track.\nAdds a spatial mixer sub-track.\nCreates a mixer sub-track.\nConverts decibels to amplitude, a linear volume …\nReturns the frame mixed down to mono.\nCommunication between Kira and a low-level audio API.\nReturns a mutable reference to this manager’s backend.\nConfigures the backend.\nSpecifies how many of each resource type an audio context …\nPrecise timing for audio events.\nReturns the number of clocks that can exist at a time.\nThe maximum number of clocks that can exist at a time.\nHelpers for sending commands from the gameplay thread to …\nCreates a set of command writers and readers and a …\nDivides the minimum and maximum values of the output range …\nThe duration of the motion.\nThe curve of the motion.\nThe curve to apply to the output.\nModifies audio signals.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Value::FromModulator</code> from a modulator ID or …\nCreates a frame with both the left and right channels set …\nTypes for providing info about resources to trait …\nA range of values from a modulator.\nDetermines how often modulators and clocks will be updated …\nReturns an linearly interpolated value between <code>a</code> and <code>b</code>.\nGiven a previous frame, a current frame, the two next …\nReturns the interpolated value between the previous and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe sample for the left channel.\nTypes related to spatial listeners.\nThe maximum number of listeners that can exist at a time.\nReturns a handle to the main mixer track.\nConfigures the main mixer track.\nTransforms an input value to an output value using this …\nGlobal values that parameters (like volume and playback …\nReturns the number of modulators that can exist at a time.\nThe maximum number of modulators that can exist at a time.\nMultiplies the minimum and maximum values of the output …\nNegates the minimum and maximum values of the output range.\nCreates a new <code>AudioManager</code>.\nCreates a frame with the given left and right values.\nCreates a new <code>Parameter</code> with an initial <code>Value</code>.\nReturns the number of clocks that currently exist.\nReturns the number of modulators that currently exist.\nReturns the number of mixer send tracks that currently …\nReturns the number of mixer sub-tracks that currently …\nThe corresponding range of values of the parameter.\nPans a frame to the left or right.\nPlays a sound.\nReturns the previous actual value of the parameter.\nReads a <code>ValueChangeCommand</code> from a <code>CommandReader</code>, and if …\nSets the minimum and maximum values of the output range to …\nThe sample for the right channel.\nReturns the number of mixer send tracks that can exist at …\nThe maximum number of mixer send tracks that can exist at …\nStarts a transition from the current value to the target …\nSources of audio.\nWhen the motion starts.\nSubtracts <code>rhs</code> from the minimum and maximum values of the …\nReturns the number of mixer sub-tracks that can exist at a …\nThe maximum number of mixer sub-tracks that can exist at a …\nConverts a <code>Value&lt;T&gt;</code> to a <code>Value&lt;T2&gt;</code>.\nConverts a <code>Mapping&lt;T&gt;</code> to a <code>Mapping&lt;T2&gt;</code>.\nOrganizes and applies effects to audio.\nUpdates any in-progress transitions and keeps the value …\nReturns the current actual value of the parameter.\nThe modulator to link to.\nHow the modulator’s value should be converted to the …\nConnects a <code>Renderer</code> to a lower level audio API.\nThe default backend used by <code>AudioManager</code>s.\nErrors that can occur when using this backend.\nProduces <code>Frame</code>s of audio data to be consumed by a …\nSettings for this backend.\nPlays audio using cpal.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUseful for testing and benchmarking.\nCalled by the backend when the sample rate of the audio …\nCalled by the backend when it’s time to process a new …\nProduces the next <code>Frame</code>s of audio.\nStarts the backend and returns itself and the initial …\nSends the renderer to the backend to start audio playback.\nAn error occurred when building the audio stream.\nA backend that uses cpal to connect a <code>Renderer</code> to the …\nSettings for the cpal backend.\nAn error occurred when getting the default output …\nErrors that can occur when using the cpal backend.\nA default audio output device could not be determined.\nAn error occurred when starting the audio stream.\nThe buffer size used by the device. If it is set to …\nThe output audio device to use. If <code>None</code>, the default output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the number of unhandled stream errors discarded …\nReturns the oldest reported CPU usage in the queue.\nReturns the oldest available stream error in the queue.\nA backend that does not connect to any lower-level audio …\nSettings for the mock backend.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls the <code>on_start_processing</code> callback of the <code>Renderer</code>.\nCalls the <code>process</code> callback of the <code>Renderer</code>.\nThe sample rate that the <code>Renderer</code> should run at.\nChanges the sample rate of the <code>Renderer</code>.\nControls a clock.\nA unique identifier for a clock.\nThe rate that a clock ticks at.\nAn instant in time associated with a clock.\nThe clock ticks every x seconds.\nThe clock ticks x times per minute.\nThe clock ticks x times per second.\nReturns the <code>ClockSpeed</code> as a number of seconds between each …\nReturns the <code>ClockSpeed</code> as a number of ticks per minute.\nReturns the <code>ClockSpeed</code> as a number of ticks per second.\nThe clock this time is associated with.\nThe amount of time since the last tick as a fraction of a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>ClockTime</code> for a clock with the specified number …\nCreates a <code>ClockTime</code> for a clock with the specified number …\nReturns the unique identifier for the clock.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPauses the clock.\nSets the speed of the clock.\nStarts or resumes the clock.\nStops and resets the clock.\nReturns <code>true</code> if the clock is currently ticking and <code>false</code> …\nThe elapsed time in whole ticks.\nReturns the current time of the clock.\nReads values that were written to a <code>CommandWriter</code>.\nWrites values that can be sent to a <code>CommandReader</code>.\nA command that holds a target <code>Value</code> and a <code>Tween</code>.\nCreates a command writer/reader pair.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the latest value that was written to the …\nThe new value to set something to.\nThe tween to use to smoothly transition the value.\nWrites a new value, overwriting any previous values.\nReceives input audio from a mixer track and outputs …\nConfigures an effect.\nAllows the user to control the effect from gameplay code.\nCreates the effect and a handle to the effect.\nReduces (or increases) the dynamic range of audio.\nAdds echoes to a sound.\nMakes a sound harsher and noisier.\nAdjusts the volume of a frequency range of a sound.\nRemoves frequencies from a sound.\nCalled when the effect is first sent to the renderer.\nCalled when the sample rate of the renderer is changed.\nCalled whenever a new batch of audio samples is requested …\nAdjusts the panning of audio.\nTransforms a slice of input <code>Frame</code>s.\nAdds reverberations to a sound. Useful for simulating room …\nAdjusts the volume of audio.\nConfigures a compressor.\nControls a compressor.\nSets how much time it takes for the volume attenuation to …\nHow much time it takes for the volume attenuation to ramp …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the amount to change the volume after processing (in …\nThe amount to change the volume after processing (in dB).\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nCreates a new <code>CompressorBuilder</code> with the default settings.\nSets how much the signal will be compressed.\nHow much the signal will be compressed.\nSets how much time it takes for the volume attenuation to …\nHow much time it takes for the volume attenuation to relax …\nSets how much time it takes for the volume attenuation to …\nSets the amount to change the volume after processing (in …\nSets how much dry (unprocessed) signal should be blended …\nSets how much the signal will be compressed.\nSets how much time it takes for the volume attenuation to …\nSets the volume above which volume will start to be …\nSets the volume above which volume will start to be …\nThe volume above which volume will start to be decreased …\nConfigures a delay effect.\nControls a delay effect.\nAdds an effect to the feedback loop.\nSets the amount of time the input audio is delayed by.\nSets the amount of feedback.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets how much dry (unprocessed) signal should be blended …\nCreates a new <code>DelayBuilder</code> with the default settings.\nSets the amount of feedback.\nSets how much dry (unprocessed) signal should be blended …\nAdds an effect to the feedback loop and returns the …\nConfigures a distortion effect.\nControls a distortion effect.\nDifferent types of distortion.\nThe signal will be clamped to the -1.0 to 1.0 range.\nThe signal will be kept in the -1.0 to 1.0 range, and the …\nSets the factor to multiply the signal by before applying …\nThe factor to multiply the signal by before applying the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the kind of distortion to use.\nThe kind of distortion to use.\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nCreates a new <code>DistortionBuilder</code> with the default settings.\nSets how much distortion should be applied.\nSets the kind of distortion to use.\nSets how much dry (unprocessed) signal should be blended …\nFrequencies around the user-defined frequency are adjusted.\nConfigures an EQ filter.\nControls an EQ filter.\nThe shape of the frequency adjustment curve.\nFrequencies around and higher than the user-defined …\nFrequencies around and lower than the user-defined …\nThe “center” or “corner” of the frequency range to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe volume adjustment for frequencies in the specified …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe shape of the frequency adjustment curve.\nCreates a new <code>EqFilterBuilder</code>.\nThe width of the frequency range to adjust.\nSets the “center” or “corner” of the frequency …\nSets the volume adjustment for frequencies in the …\nSets the shape of the frequency adjustment curve.\nSets the width of the frequency range to adjust.\nRemoves frequencies above and below the cutoff frequency.\nConfigures a filter effect.\nControls a filter effect.\nThe frequencies that the filter will remove.\nRemoves frequencies below the cutoff frequency.\nRemoves frequencies above the cutoff frequency.\nRemoves frequencies around the cutoff frequency.\nSets the cutoff frequency of the filter (in hertz).\nThe cutoff frequency of the filter (in hertz).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nSets the frequencies that the filter will remove.\nThe frequencies that the filter will remove.\nCreates a new <code>FilterBuilder</code> with the default settings.\nSets the resonance of the filter.\nThe resonance of the filter.\nSets the cutoff frequency of the filter (in hertz).\nSets how much dry (unprocessed) signal should be blended …\nSets the frequencies that the filter will remove.\nSets the resonance of the filter.\nConfigures a panning control effect.\nControls a panning control effect.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the panning adjustment to apply to input audio.\nConfigures a reverb effect.\nControls a reverb effect.\nSets how quickly high frequencies disappear from the …\nHow quickly high frequencies disappear from the …\nSets how much the room reverberates. A higher value will …\nHow much the room reverberates. A higher value will result …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nCreates a new <code>ReverbBuilder</code> with the default settings.\nSets how quickly high frequencies disappear from the …\nSets how much the room reverberates. A higher value will …\nSets how much dry (unprocessed) signal should be blended …\nSets the stereo width of the reverb effect (0.0 being …\nSets the stereo width of the reverb effect (0.0 being …\nThe stereo width of the reverb effect (0.0 being fully …\nConfigures a volume control effect.\nControls a volume control effect.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>VolumeControlBuilder</code>.\nSets the volume adjustment to apply to input audio.\nInformation about the current state of a clock.\nProvides info about resources on the audio thread.\nThe thing should start later because the appropriate clock …\nInformation about a listener.\nGenerates a fake <code>Info</code> with arbitrary data. Useful for …\nThe thing will never start because the clock it depends on …\nThe thing should start now.\nWhen something should start given the current state of the …\nAdds a fake clock with the given ticking state and time. …\nAdds a fake listener at the given position and …\nAdds a fake modulator outputting the given value. Returns …\nConsumes the <code>MockInfoProvider</code> and returns a fake <code>Info</code>.\nGets information about the clock with the given ID if it …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the interpolated orientation between the previous …\nReturns the interpolated position between the previous and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf this is called from an effect on a spatial track, …\nGets information about the listener linked to the current …\nGets the value of the modulator with the given ID if it …\nCreates a new <code>MockInfoBuilder</code>.\nThe rotation of the listener.\nThe position of the listener.\nThe rotation of the listener prior to the last update.\nThe position of the listener prior to the last update.\nWhether the clock is currently running.\nThe current time of the clock.\nReturns whether something with the given start time should …\nControls a listener.\nA unique identifier for a listener.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the unique identifier for this listener.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the rotation of the listener.\nSets the location of the listener in the spatial scene.\nAllows the user to control the modulator from gameplay …\nProduces a stream of values that a parameter can be linked …\nConfigures a modulator.\nA unique identifier for a modulator.\nCreates the modulator and a handle to the modulator.\nWhether the modulator can be removed from the audio …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOscillates back and forth.\nCalled whenever a new batch of audio samples is requested …\nSmoothly transitions values to other values.\nUpdates the modulator.\nReturns the current output of the modulator.\nConfigures an LFO modulator.\nControls an LFO modulator.\nThe value jumps back and forth between two values.\nThe value moves gradually in one direction, then abruptly …\nThe value moves back and forth smoothly.\nThe value moves back and forth at a constant speed.\nDescribes an oscillation pattern.\nSets how much the value oscillates.\nHow much the value oscillates.\nSets how quickly the value oscillates.\nHow quickly the value oscillates.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the unique identifier for the modulator.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>LfoBuilder</code> with the default settings.\nSets a constant value that the modulator is offset by.\nThe constant value the modulator is offset by.\nSets how much the value oscillates.\nSets how quickly the value oscillates.\nSets a constant value that the modulator is offset by.\nSets the phase of the LFO (in radians).\nSets the oscillation pattern.\nSets the phase the LFO should start at (in radians).\nThe phase the LFO should start at (in radians).\nSets the oscillation pattern.\nThe oscillation pattern.\nThe ratio between how much time the oscillator spends on …\nConfigures a tweener.\nControls a tweener.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the unique identifier for the modulator.\nThe initial value of the tweener.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStarts a transition from the current value to a target …\nA user-defined time in seconds.\nThe end of the audio data.\nThe ending time of a region of audio.\nErrors that can occur when starting the sound.\nErrors that can occur when loading or streaming an audio …\nThe type that can be used to control the sound once it has …\nA trait for types that can be converted into an …\nAn error occurred while reading the file from the …\nCould not determine the default audio track in the file.\nPlayback is paused.\nThe sound is fading out, and when the fade-out is …\nA point in time in a piece of audio.\nThe playback state of a sound.\nThe sound is playing normally.\nA portion of audio.\nThe sound is fading back in after being previously paused.\nThe time in samples (individual audio data points).\nThe time in seconds.\nAn actively playing sound.\nA source of audio that is loaded, but not yet playing.\nThe sound has stopped and can no longer be resumed.\nThe sound is fading out, and when the fade-out is …\nAn error occurred when parsing the file.\nCould not determine the duration of the audio.\nCould not determine the sample rate of the audio.\nThe audio uses an unsupported channel configuration. Only …\nThe sound is paused, but is schedule to resume in the …\nThe (exclusive) ending time of the region.\nReturns <code>true</code> if the sound is finished and can be unloaded.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the type into an <code>Option&lt;Region&gt;</code>.\nConverts the loaded sound into a live, playing sound and a …\nWhether the sound is advancing and outputting audio given …\nCalled whenever a new batch of audio samples is requested …\nProduces the next <code>Frame</code>s of audio. This should overwrite …\nProcesses a single <code>Frame</code>. Mostly useful for testing.\nThe starting time of the region (in seconds).\nPlayable chunks of audio that are loaded into memory all …\nDecodes data gradually from an audio file.\nA piece of audio loaded into memory all at once.\nControls a static sound.\nSettings for a static sound.\nReturns the duration of the audio.\nSets the tween used to fade in the sound from silence.\nSets the tween used to fade in the sound from silence.\nAn optional fade-in from silence.\nReturns the nth <code>Frame</code> of audio in the <code>StaticSoundData</code>.\nThe raw samples that make up the audio.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoads a cursor wrapping audio file data into a …\nLoads an audio file into a <code>StaticSoundData</code>.\nLoads an audio file from a type that implements Symphonia…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the portion of the sound that should be looped.\nSets the portion of the sound that should be looped.\nThe portion of the sound that should be looped.\nCreates a new <code>StaticSoundSettings</code> with the default …\nReturns the number of frames in the <code>StaticSoundData</code>.\nSets the panning of the sound, where 0 is hard left and 1 …\nSets the panning of the sound, where 0 is hard left and 1 …\nThe panning of the sound, where 0 is hard left and 1 is …\nFades out the sound to silence with the given tween and …\nSets the playback rate of the sound.\nSets the playback rate of the sound.\nThe playback rate of the sound.\nReturns the current playback position of the sound (in …\nResumes playback and fades in the sound from silence with …\nResumes playback at the given start time and fades in the …\nSets whether the sound should be played in reverse.\nSets whether the sound should be played in reverse.\nWhether the sound should be played in reverse.\nThe sample rate of the audio (in Hz).\nMoves the playback position by the specified amount of …\nSets the playback position to the specified time in …\nSets the portion of the sound that will play in a loop.\nSets the panning of the sound, where <code>-1.0</code> is hard left, <code>0.0</code>…\nSets the playback rate of the sound.\nSets the volume of the sound.\nSettings for the sound.\nSets the portion of the audio this <code>StaticSoundData</code> …\nThe portion of the sound this <code>StaticSoundData</code> represents.\nSets where in the sound playback should start.\nSets where in the sound playback should start.\nWhere in the sound playback should start.\nSets when the sound should start playing.\nSets when the sound should start playing.\nWhen the sound should start playing.\nReturns the current playback state of the sound.\nFades out the sound to silence with the given tween and …\nReturns the total duration of the audio, regardless of its …\nSets the volume of the sound.\nSets the volume of the sound.\nThe volume of the sound.\nReturns a cheap clone of the <code>StaticSoundData</code> with the …\nDecodes chunks of audio.\nErrors that can occur when decoding audio.\nA streaming sound that is not playing yet.\nControls a streaming sound.\nSettings for a streaming sound.\nDecodes the next chunk of audio.\nReturns the duration of the audio.\nSets the tween used to fade in the instance from silence.\nSets the tween used to fade in the instance from silence.\nAn optional fade-in from silence.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>StreamingSoundData</code> for a cursor wrapping audio …\nCreates a <code>StreamingSoundData</code> for a <code>Decoder</code>.\nCreates a <code>StreamingSoundData</code> for an audio file.\nCreates a <code>StreamingSoundData</code> for a type that implements …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the portion of the sound that should be looped.\nSets the portion of the sound that should be looped.\nThe portion of the sound that should be looped.\nCreates a new <code>StreamingSoundSettings</code> with the default …\nReturns the total number of samples of audio.\nReturns the number of frames in the <code>StreamingSoundData</code>.\nSets the panning of the sound, where 0 is hard left and 1 …\nSets the panning of the sound, where -1.0 is hard left and …\nThe panning of the sound, where 0 is hard left and 1 is …\nFades out the sound to silence with the given tween and …\nSets the playback rate of the sound.\nSets the playback rate of the sound.\nThe playback rate of the sound.\nReturns an error that occurred while decoding audio, if …\nReturns the current playback position of the sound (in …\nResumes playback and fades in the sound from silence with …\nResumes playback at the given start time and fades in the …\nReturns the sample rate of the audio (in Hz).\nSeeks to an audio sample.\nMoves the playback position by the specified amount of …\nSets the playback position to the specified time in …\nSets the portion of the sound that will play in a loop.\nSets the panning of the sound, where <code>-1.0</code> is hard left, <code>0.0</code>…\nSets the playback rate of the sound.\nSets the volume of the sound.\nSettings for the streaming sound.\nSets the portion of the audio this <code>StreamingSoundData</code> …\nThe portion of the sound this <code>StreamingSoundData</code> …\nSets where in the sound playback should start.\nSets where in the sound playback should start.\nWhere in the sound playback should start.\nSets when the sound should start playing.\nSets when the sound should start playing.\nWhen the sound should start playing.\nReturns the current playback state of the sound.\nFades out the sound to silence with the given tween and …\nReturns the total duration of the audio, regardless of its …\nSets the volume of the sound.\nSets the volume of the sound.\nThe volume of the sound.\nReturns the <code>StreamingSoundData</code> with the specified settings.\nConfigures the main mixer track.\nControls the main mixer track.\nAn error that’s returned when trying to change the …\nPlayback is paused.\nThe track is fading out, and when the fade-out is …\nThe track is playing normally.\nThe track is fading back in after being previously paused.\nConfigures a mixer track.\nControls a mixer track.\nA unique identifier for a mixer send track.\nConfigures a spatial mixer track.\nThe distances from a listener at which an emitter is …\nControls a mixer track.\nConfigures a mixer track.\nControls a mixer track.\nThe playback state of a mixer sub-track.\nThe track is paused, but is schedule to resume in the …\nAdds an already built effect into this track.\nAdds an already built effect into this track.\nAdds an already built effect into this track.\nAdds an already built effect into this track.\nAdds an effect to the track.\nAdds an effect to the send track.\nAdds an effect to the track.\nAdds an effect to the track.\nAdds a spatial child track to this track.\nAdds a spatial child track to this track.\nAdds a child track to this track.\nAdds a child track to this track.\nSets how the emitter’s volume will change with distance.\nSets the distances from a listener at which the emitter is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a unique identifier for this send track.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the track is outputting audio given its current …\nThe distance from a listener at which an emitter becomes …\nThe distance from a listener at which an emitter outputs …\nCreates a new <code>MainTrackBuilder</code> with the default settings.\nCreates a new <code>SendTrackBuilder</code> with the default settings.\nCreates a new <code>TrackBuilder</code> with the default settings.\nCreates a new <code>SpatialTrackBuilder</code> with the default …\nReturns the number of sounds currently playing on this …\nReturns the number of sounds currently playing on this …\nReturns the number of sounds currently playing on this …\nReturns the number of child tracks this track has.\nReturns the number of child tracks this track has.\nFades out the track to silence with the given tween and …\nFades out the track to silence with the given tween and …\nSets whether the track should stay alive while sounds are …\nSets whether the track should stay alive while sounds are …\nPlays a sound.\nPlays a sound.\nPlays a sound.\nResumes playback and fades in the sound from silence with …\nResumes playback and fades in the sound from silence with …\nResumes playback at the given start time and fades in the …\nResumes playback at the given start time and fades in the …\nSets the position that audio is produced from.\nSets the volume of this track’s route to a send track.\nSets the volume of this track’s route to a send track.\nSets how much the track’s output should be panned left …\nSets the (post-effects) volume of the mixer track.\nSets the (post-effects) volume of the send track.\nSets the (post-effects) volume of the mixer track.\nSets the (post-effects) volume of the mixer track.\nSets the maximum number of sounds that can be played …\nSets the maximum number of sounds that can be played …\nSets the maximum number of sounds that can be played …\nReturns the maximum number of sounds that can play …\nReturns the maximum number of sounds that can play …\nReturns the maximum number of sounds that can play …\nSets how much the track’s output should be panned left …\nReturns the current playback state of the track.\nReturns the current playback state of the track.\nSets the maximum number of sub-tracks this track can have.\nSets the maximum number of sub-tracks this track can have.\nReturns the maximum number of child tracks this track can …\nReturns the maximum number of child tracks this track can …\nSets the volume of the main mixer track.\nSets the volume of the send track.\nSets the volume of the track.\nSets the volume of the track.\nAdd an already-built effect and return the <code>MainTrackBuilder</code>…\nAdd an already-built effect and return the <code>SendTrackBuilder</code>…\nAdd an already-built effect and return the <code>TrackBuilder</code>.\nAdd an already-built effect and return the …\nAdds an effect to the track and returns the …\nAdds an effect to the send track and returns the …\nAdds an effect to the track and returns the <code>TrackBuilder</code>.\nAdds an effect to the track and returns the …\nRoutes this track to the given send track with the given …\nRoutes this track to the given send track with the given …\nGeneric helper for libm functions, abstracting over f32 …\nArccosine (f64)\nArccosine (f32)\nInverse hyperbolic cosine (f64)\nInverse hyperbolic cosine (f32)\nArcsine (f64)\nArcsine (f32)\nInverse hyperbolic sine (f64)\nInverse hyperbolic sine (f32)\nArctangent (f64)\nArctangent of y/x (f64)\nArctangent of y/x (f32)\nArctangent (f32)\nInverse hyperbolic tangent (f64)\nInverse hyperbolic tangent (f32)\nCompute the cube root of the argument.\nCube root (f32)\nCeil (f64)\nCeil (f32)\nSign of Y, magnitude of X (f64)\nSign of Y, magnitude of X (f32)\nThe cosine of <code>x</code> (f64).\nThe cosine of <code>x</code> (f32).\nHyperbolic cosine (f64)\nHyperbolic cosine (f64)\nError function (f64)\nComplementary error function (f64)\nComplementary error function (f32)\nError function (f32)\nExponential, base <em>e</em> (f64)\nCalculates 10 raised to the power of <code>x</code> (f64).\nCalculates 10 raised to the power of <code>x</code> (f32).\nExponential, base 2 (f64)\nExponential, base 2 (f32)\nExponential, base <em>e</em> (f32)\nExponential, base <em>e</em>, of x-1 (f64)\nExponential, base <em>e</em>, of x-1 (f32)\nAbsolute value (magnitude) (f64)\nAbsolute value (magnitude) (f32)\nPositive difference (f64)\nPositive difference (f32)\nFloor (f64)\nFloor (f32)\nFused multiply add (f64)\nFloating multiply add (f32)\nReturn the greater of two arguments or, if either argument …\nReturn the greater of two arguments or, if either argument …\nReturn the greater of two arguments or, if either argument …\nReturn the greater of two arguments or, if either argument …\nReturn the greater of two arguments or, if either argument …\nReturn the greater of two arguments or, if either argument …\nReturn the lesser of two arguments or, if either argument …\nReturn the lesser of two arguments or, if either argument …\nReturn the lesser of two arguments or, if either argument …\nReturn the lesser of two arguments or, if either argument …\nReturn the lesser of two arguments or, if either argument …\nReturn the lesser of two arguments or, if either argument …\nCalculate the remainder of <code>x / y</code>, the precise result of …\nCalculate the remainder of <code>x / y</code>, the precise result of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nZeroth order of the Bessel function of the first kind …\nZeroth order of the Bessel function of the first kind …\nFirst order of the Bessel function of the first kind (f64).\nFirst order of the Bessel function of the first kind (f32).\nInteger order of the Bessel function of the first kind …\nInteger order of the Bessel function of the first kind …\nThe natural logarithm of the Gamma function (f64).\nThe natural logarithm of the Gamma function (f32).\nThe natural logarithm of <code>x</code> (f64).\nThe base 10 logarithm of <code>x</code> (f64).\nThe base 10 logarithm of <code>x</code> (f32).\nThe natural logarithm of 1+<code>x</code> (f64).\nThe natural logarithm of 1+<code>x</code> (f32).\nThe base 2 logarithm of <code>x</code> (f64).\nThe base 2 logarithm of <code>x</code> (f32).\nThe natural logarithm of <code>x</code> (f32).\nReturns <code>x</code> to the power of <code>y</code> (f64).\nReturns <code>x</code> to the power of <code>y</code> (f32).\nRound <code>x</code> to the nearest integer, breaking ties toward even.\nRound <code>x</code> to the nearest integer, breaking ties toward even.\nRound <code>x</code> to the nearest integer, breaking ties away from …\nRound <code>x</code> to the nearest integer, breaking ties toward even. …\nRound <code>x</code> to the nearest integer, breaking ties toward even. …\nRound <code>x</code> to the nearest integer, breaking ties away from …\nThe sine of <code>x</code> (f64).\nBoth the sine and cosine of <code>x</code> (f64).\nBoth the sine and cosine of <code>x</code> (f32).\nThe sine of <code>x</code> (f32).\nThe hyperbolic sine of <code>x</code> (f64).\nThe hyperbolic sine of <code>x</code> (f32).\nThe square root of <code>x</code> (f64).\nThe square root of <code>x</code> (f32).\nThe tangent of <code>x</code> (f64).\nThe tangent of <code>x</code> (f32).\nThe hyperbolic tangent of <code>x</code> (f64).\nThe hyperbolic tangent of <code>x</code> (f32).\nThe Gamma function (f64).\nThe Gamma function (f32).\nRounds the number toward 0 to the closest integral value …\nRounds the number toward 0 to the closest integral value …\nZeroth order of the Bessel function of the second kind …\nZeroth order of the Bessel function of the second kind …\nFirst order of the Bessel function of the second kind …\nFirst order of the Bessel function of the second kind …\nInteger order of the Bessel function of the second kind …\nInteger order of the Bessel function of the second kind …\nThe “debug” level.\nCorresponds to the <code>Debug</code> log level.\nThe “error” level.\nCorresponds to the <code>Error</code> log level.\nThe “info” level.\nCorresponds to the <code>Info</code> log level.\nAn enum representing the available verbosity levels of the …\nAn enum representing the available verbosity level filters …\nA trait encapsulating the operations required of a logger.\nMetadata about a log message.\nBuilder for <code>Metadata</code>.\nA level lower than all log levels.\nThe type returned by <code>from_str</code> when the string doesn’t …\nThe “payload” of a log message.\nBuilder for <code>Record</code>.\nThe statically resolved maximum log level.\nThe type returned by <code>set_logger</code> if <code>set_logger</code> has already …\nThe “trace” level.\nCorresponds to the <code>Trace</code> log level.\nThe “warn” level.\nCorresponds to the <code>Warn</code> log level.\nSet <code>args</code>.\nInvoke the builder and return a <code>Record</code>\nReturns a <code>Metadata</code> object.\nLogs a message at the debug level.\nDetermines if a log message with the specified metadata …\nLogs a message at the error level.\nSet <code>file</code>\nSet <code>file</code> to a <code>&#39;static</code> string.\nFlushes any buffered records.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLogs a message at the info level.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet <code>Metadata::level</code>.\nSetter for <code>level</code>.\nSet <code>line</code>\nLogs the <code>Record</code>.\nThe standard logging macro.\nDetermines if a message logged at the specified level in …\nReturns a reference to the logger.\nReturns the current maximum log level.\nSet <code>metadata</code>. Construct a <code>Metadata</code> object with …\nSet <code>module_path</code>\nSet <code>module_path</code> to a <code>&#39;static</code> string\nConstruct new <code>RecordBuilder</code>.\nConstruct a new <code>MetadataBuilder</code>.\nSets the global logger to a <code>Box&lt;Log&gt;</code>.\nSets the global logger to a <code>&amp;&#39;static Log</code>.\nA thread-unsafe version of <code>set_logger</code>.\nSets the global maximum log level.\nA thread-unsafe version of <code>set_max_level</code>.\nSet <code>Metadata::target</code>\nSetter for <code>target</code>.\nLogs a message at the trace level.\nLogs a message at the warn level.\nAn iterator over all occurrences of a single byte in a …\nAn iterator over all occurrences of two possible bytes in …\nAn iterator over all occurrences of three possible bytes …\nA module with low-level architecture dependent routines.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSearch for the first occurrence of a byte in a slice.\nSearch for the first occurrence of two possible bytes in a …\nReturns an iterator over all occurrences of the needles in …\nSearch for the first occurrence of three possible bytes in …\nReturns an iterator over all occurrences of the needles in …\nReturns an iterator over all occurrences of the needle in …\nThis module provides forward and reverse substring search …\nSearch for the last occurrence of a byte in a slice.\nSearch for the last occurrence of two possible bytes in a …\nReturns an iterator over all occurrences of the needles in …\nSearch for the last occurrence of three possible bytes in …\nReturns an iterator over all occurrences of the needles in …\nReturns an iterator over all occurrences of the needle in …\nReturns an iterator over all occurrences of the needle …\nReturns an iterator over all occurrences of the needle …\nReturns an iterator over all occurrences of the needle …\nContains architecture independent routines.\nVector algorithms for the <code>x86_64</code> target.\nCompare corresponding bytes in <code>x</code> and <code>y</code> for equality.\nCompare <code>n</code> bytes at the given pointers for equality.\nReturns true if and only if <code>needle</code> is a prefix of <code>haystack</code>.\nReturns true if and only if <code>needle</code> is a suffix of <code>haystack</code>.\nProvides architecture independent implementations of <code>memchr</code>…\nProvides an architecture independent implementation of the …\nAn implementation of the Rabin-Karp substring search …\nAn implementation of the Shift-Or substring search …\nAn implementation of the Two-Way substring search algorithm…\nFinds all occurrences of a single byte in a haystack.\nAn iterator over all occurrences of a single byte in a …\nFinds all occurrences of three bytes in a haystack.\nAn iterator over all occurrences of three possible bytes …\nFinds all occurrences of two bytes in a haystack.\nAn iterator over all occurrences of two possible bytes in …\nCounts all occurrences of this byte in the given haystack.\nCounts all occurrences of this byte in the given haystack …\nReturn the first occurrence of the needle in the given …\nReturn the first occurrence of one of the needle bytes in …\nReturn the first occurrence of one of the needle bytes in …\nLike <code>find</code>, but accepts and returns raw pointers.\nLike <code>find</code>, but accepts and returns raw pointers.\nLike <code>find</code>, but accepts and returns raw pointers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all occurrences of the needle …\nReturns an iterator over all occurrences of one of the …\nReturns an iterator over all occurrences of one of the …\nCreate a new searcher that finds occurrences of the byte …\nCreate a new searcher that finds occurrences of the two …\nCreate a new searcher that finds occurrences of the three …\nReturn the last occurrence of the needle in the given …\nReturn the last occurrence of one of the needle bytes in …\nReturn the last occurrence of one of the needle bytes in …\nLike <code>rfind</code>, but accepts and returns raw pointers.\nLike <code>rfind</code>, but accepts and returns raw pointers.\nLike <code>rfind</code>, but accepts and returns raw pointers.\nAn architecture independent “packed pair” finder.\nThis trait allows the user to customize the heuristic used …\nA pair of byte offsets into a needle to use as a predicate.\nRun this finder on the given haystack as a prefilter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the first offset of the pair.\nReturns the second offset of the pair.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new prefilter that reports possible locations …\nCreate a new pair of offsets from the given needle.\nReturns the pair of offsets (into the needle) used to …\nReturn the heuristic frequency rank of the given byte. A …\nCreate a new pair using the offsets given for the needle …\nCreate a new prefilter using the pair given.\nCreate a new pair of offsets from the given needle and …\nA forward substring searcher using the Rabin-Karp …\nA reverse substring searcher using the Rabin-Karp …\nReturn the first occurrence of the <code>needle</code> in the <code>haystack</code> …\nLike <code>find</code>, but accepts and returns raw pointers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new Rabin-Karp forward searcher for the given …\nCreate a new Rabin-Karp reverse searcher for the given …\nReturn the last occurrence of the <code>needle</code> in the <code>haystack</code> …\nLike <code>rfind</code>, but accepts and returns raw pointers.\nA forward substring searcher using the Shift-Or algorithm.\nReturn the first occurrence of the needle given to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new Shift-Or forward searcher for the given <code>needle</code>…\nA forward substring searcher that uses the Two-Way …\nA reverse substring searcher that uses the Two-Way …\nReturns the first occurrence of <code>needle</code> in the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a searcher that finds occurrences of the given …\nCreate a searcher that finds occurrences of the given …\nReturns the last occurrence of <code>needle</code> in the given <code>haystack</code>…\nAlgorithms for the <code>x86_64</code> target using 256-bit vectors via …\nAlgorithms for the <code>x86_64</code> target using 128-bit vectors via …\nThis module defines 256-bit vector implementations of …\nA 256-bit vector implementation of the “packed pair” …\nFinds all occurrences of a single byte in a haystack.\nAn iterator over all occurrences of a single byte in a …\nFinds all occurrences of three bytes in a haystack.\nAn iterator over all occurrences of three possible bytes …\nFinds all occurrences of two bytes in a haystack.\nAn iterator over all occurrences of two possible bytes in …\nCounts all occurrences of this byte in the given haystack.\nCounts all occurrences of this byte in the given haystack …\nReturn the first occurrence of one of the needle bytes in …\nReturn the first occurrence of one of the needle bytes in …\nReturn the first occurrence of one of the needle bytes in …\nLike <code>find</code>, but accepts and returns raw pointers.\nLike <code>find</code>, but accepts and returns raw pointers.\nLike <code>find</code>, but accepts and returns raw pointers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true when this implementation is available in the …\nReturns true when this implementation is available in the …\nReturns true when this implementation is available in the …\nReturns an iterator over all occurrences of the needle …\nReturns an iterator over all occurrences of the needle …\nReturns an iterator over all occurrences of the needle …\nCreate a new searcher that finds occurrences of the needle …\nCreate a new searcher that finds occurrences of the needle …\nCreate a new searcher that finds occurrences of the needle …\nCreate a new finder specific to AVX2 vectors and routines …\nCreate a new finder specific to AVX2 vectors and routines …\nCreate a new finder specific to AVX2 vectors and routines …\nReturn the last occurrence of one of the needle bytes in …\nReturn the last occurrence of one of the needle bytes in …\nReturn the last occurrence of one of the needle bytes in …\nLike <code>rfind</code>, but accepts and returns raw pointers.\nLike <code>rfind</code>, but accepts and returns raw pointers.\nLike <code>rfind</code>, but accepts and returns raw pointers.\nA “packed pair” finder that uses 256-bit vector …\nExecute a search using AVX2 vectors and routines.\nRun this finder on the given haystack as a prefilter.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns true when this implementation is available in the …\nReturns the minimum haystack length that this <code>Finder</code> can …\nCreate a new pair searcher. The searcher returned can …\nReturns the pair of offsets (into the needle) used to …\nCreate a new “packed pair” finder using the pair of …\nThis module defines 128-bit vector implementations of …\nA 128-bit vector implementation of the “packed pair” …\nFinds all occurrences of a single byte in a haystack.\nAn iterator over all occurrences of a single byte in a …\nFinds all occurrences of three bytes in a haystack.\nAn iterator over all occurrences of three possible bytes …\nFinds all occurrences of two bytes in a haystack.\nAn iterator over all occurrences of two possible bytes in …\nCounts all occurrences of this byte in the given haystack.\nCounts all occurrences of this byte in the given haystack …\nReturn the first occurrence of one of the needle bytes in …\nReturn the first occurrence of one of the needle bytes in …\nReturn the first occurrence of one of the needle bytes in …\nLike <code>find</code>, but accepts and returns raw pointers.\nLike <code>find</code>, but accepts and returns raw pointers.\nLike <code>find</code>, but accepts and returns raw pointers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true when this implementation is available in the …\nReturns true when this implementation is available in the …\nReturns true when this implementation is available in the …\nReturns an iterator over all occurrences of the needle …\nReturns an iterator over all occurrences of the needle …\nReturns an iterator over all occurrences of the needle …\nCreate a new searcher that finds occurrences of the needle …\nCreate a new searcher that finds occurrences of the needle …\nCreate a new searcher that finds occurrences of the needle …\nCreate a new finder specific to SSE2 vectors and routines …\nCreate a new finder specific to SSE2 vectors and routines …\nCreate a new finder specific to SSE2 vectors and routines …\nReturn the last occurrence of one of the needle bytes in …\nReturn the last occurrence of one of the needle bytes in …\nReturn the last occurrence of one of the needle bytes in …\nLike <code>rfind</code>, but accepts and returns raw pointers.\nLike <code>rfind</code>, but accepts and returns raw pointers.\nLike <code>rfind</code>, but accepts and returns raw pointers.\nA “packed pair” finder that uses 128-bit vector …\nExecute a search using SSE2 vectors and routines.\nRun this finder on the given haystack as a prefilter.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns true when this implementation is available in the …\nReturns the minimum haystack length that this <code>Finder</code> can …\nCreate a new pair searcher. The searcher returned can …\nReturns the pair of offsets (into the needle) used to …\nCreate a new “packed pair” finder using the pair of …\nAutomatically detect whether a heuristic prefilter should …\nAn iterator over non-overlapping substring matches.\nAn iterator over non-overlapping substring matches in …\nA single substring searcher fixed to a particular needle.\nA builder for constructing non-default forward or reverse …\nA single substring reverse searcher fixed to a particular …\nNever used a prefilter in substring search.\nPrefilter controls whether heuristics are used to …\nConvert this finder into its borrowed variant.\nConvert this finder into its borrowed variant.\nBuild a forward finder using the given needle from the …\nBuild a forward finder using the given needle and a custom …\nBuild a reverse finder using the given needle from the …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of this needle …\nReturns an iterator over all non-overlapping occurrences …\nReturns an iterator over all occurrences of a substring in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this iterator into its owned variant, such that it …\nConvert this iterator into its owned variant, such that it …\nConvert this finder into its owned variant, such that it …\nConvert this finder into its owned variant, such that it …\nReturns the needle that this finder searches for.\nReturns the needle that this finder searches for.\nCreate a new finder for the given needle.\nCreate a new reverse finder for the given needle.\nCreate a new finder builder with default settings.\nConfigure the prefilter setting for the finder.\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of this needle in …\nReturns a reverse iterator over all non-overlapping …\nReturns a reverse iterator over all occurrences of a …\nAn error that can occur when trying to connect to a port.\nThe kind of error for a <code>ConnectError</code>.\nAn enum that is used to specify what kind of MIDI messages …\nAn error that can occur during initialization (i.e., while …\nTrait that abstracts over input and output ports.\nAn instance of <code>MidiInput</code> is required for anything related …\nRepresents an open connection to a MIDI input port.\nAn object representing a single input port. How the port …\nA collection of input ports.\nAn instance of <code>MidiOutput</code> is required for anything related …\nRepresents an open connection to a MIDI output port.\nAn object representing a single output port. How the port …\nA collection of output ports.\nType of an input or output port structure.\nAn error that can occur when retrieving information about …\nAn error that can occur when sending MIDI messages.\nCloses the connection. The returned values allow you to …\nCloses the connection. The returned value allows you to …\nConnect to a specified MIDI input port in order to receive …\nConnect to a specified MIDI output port in order to send …\nGet a MIDI input port by its unique identifier.\nGet a MIDI output port by its unique identifier.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a unique stable identifier for this port. This …\nGet a unique stable identifier for this port. This …\nSet flags to decide what kind of messages should be …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>MidiInput</code> object that is required for any …\nCreates a new <code>MidiOutput</code> object that is required for any …\nHelper method to create ConnectErrorKind::Other.\nGet the number of available MIDI input or output ports.\nGet the number of available MIDI input ports that <em>midir</em> …\nGet the number of available MIDI output ports that <em>midir</em> …\nGet the name of a specified MIDI input or output port.\nGet the name of a specified MIDI input port.\nGet the name of a specified MIDI output port.\nGet a collection of all MIDI input or output ports. The …\nGet a collection of all MIDI input ports that <em>midir</em> can …\nGet a collection of all MIDI output ports that <em>midir</em> can …\nSend a message to the port that this output connection is …\nTrait that is implemented by <code>MidiInput</code> on platforms that …\nTrait that is implemented by <code>MidiOutput</code> on platforms that …\nCreates a virtual input port. Once it has been created, …\nCreates a virtual output port. Once it has been created, …\nAdds source and destination. Source and destination are …\nDefault value\nA vtable-erased generic argument. Basically, the same …\nArray of <code>[cubemap_face][mipmap_level][bytes]</code>\nGeometry bindings\nBlend factors.\nPixel arithmetic description for blending operations. Will …\nBlend values.\nOne unsigned 8-bit integer (equivalent to <code>u8</code>)\nTwo unsigned 8-bit integers (equivalent to <code>[u8; 2]</code>)\nThree unsigned 8-bit integers (equivalent to <code>[u8; 3]</code>)\nFour unsigned 8-bit integers (equivalent to <code>[u8; 4]</code>)\nSamples at coord x + 1 map to coord 1.\nDepth and stencil compare function\nA pixel-wise comparison function.\nSpecify whether front- or back-facing polygons can be …\n<code>ElapsedQuery</code> is used to measure duration of GPU operations.\nSpecifies how incoming RGBA values (source) and the RGBA …\nA trait defining event callbacks.\nShader strings should never contains \\00 in the middle\nOne 32-bit wide float (equivalent to <code>f32</code>)\nOne 32-bit wide float (equivalent to <code>f32</code>)\nTwo 32-bit wide floats (equivalent to <code>[f32; 2]</code>)\nTwo 32-bit wide floats (equivalent to <code>[f32; 2]</code>)\nThree 32-bit wide floats (equivalent to <code>[f32; 3]</code>)\nThree 32-bit wide floats (equivalent to <code>[f32; 3]</code>)\nFour 32-bit wide floats (equivalent to <code>[f32; 4]</code>)\nFour 32-bit wide floats (equivalent to <code>[f32; 4]</code>)\nDefine front- and back-facing polygons.\nOne unsigned 32-bit integers (equivalent to <code>[u32; 1]</code>)\nOne unsigned 32-bit integers (equivalent to <code>[u32; 1]</code>)\nTwo unsigned 32-bit integers (equivalent to <code>[u32; 2]</code>)\nTwo unsigned 32-bit integers (equivalent to <code>[u32; 2]</code>)\nThree unsigned 32-bit integers (equivalent to <code>[u32; 3]</code>)\nThree unsigned 32-bit integers (equivalent to <code>[u32; 3]</code>)\nFour unsigned 32-bit integers (equivalent to <code>[u32; 4]</code>)\nFour unsigned 32-bit integers (equivalent to <code>[u32; 4]</code>)\nDefault value\nThese keycode values are based off of X11’s <code>keysymdef.h</code>. …\nFour by four matrix of 32-bit floats\nFour by four matrix of 32-bit floats\nSamples at coord x + 1 map to coord 1 - x.\nCan be written to from GPU\nSamples at coord x + 1 map to coord x.\nSubtracts source from destination. Source and destination …\nOne unsigned 16-bit integer (equivalent to <code>u16</code>)\nTwo unsigned 16-bit integers (equivalent to <code>[u16; 2]</code>)\nTree unsigned 16-bit integers (equivalent to <code>[u16; 3]</code>)\nFour unsigned 16-bit integers (equivalent to <code>[u16; 4]</code>)\nUsed as read-only from GPU\nOperations performed on current stencil value when …\nSubtracts destination from source. Source and destination …\nList of all the possible formats of input data when …\nSets the wrap parameter for texture.\nAlpha blend function. If None - alpha will be blended with …\nSet a new scissor rectangle. Should be applied after …\nSet a new scissor rectangle. Should be applied after …\nSet a new viewport rectangle. Should be applied after …\nSet a new viewport rectangle. Should be applied after …\nstart rendering to the default frame buffer\nstart rendering to an offscreen framebuffer\nSubmit a beginning of elapsed-time query.\nSize of buffer in bytes. For 1 element, u16 buffer this …\nSize of buffer in bytes\nColor (RGB) blend function. If None - blending will be …\nNumber of components in this VertexFormat it is called …\nContext creation configuration\nDelete query.\nDelete GPU buffer, leaving handle unmodified.\nDelete GPU buffer, leaving handle unmodified.\nDelete GPU program, leaving handle unmodified.\nDelete GPU texture, leaving handle unmodified.\nOperation to use when stencil test passes, but depth test …\nDraw elements using currently applied bindings and …\nEmpty buffer of <code>size * size_of::&lt;T&gt;</code> bytes\nSubmit an end of elapsed-time query that can be read later …\nOperation to use when stencil test fails\nList of platform-dependent features that miniquad failed …\nA file has been dropped over the application. Applications …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWrap raw platform texture into a TextureId acceptable for …\nRetreieve measured duration in nanonseconds.\nThis flag affects integer VertexFormats, Byte*, Short*, Int…\nGL_VERSION_STRING from OpenGL. Would be empty on metal.\nOpenGL provides an enumeration over …\nTextures to be used with when drawing the geometry in the …\nIndex buffer which instructs the GPU in which order to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReports whenever result of submitted query is available …\nReports whenever elapsed timer is supported and other …\nNote: you are not always guaranteed to receive a key_up …\nCreate a buffer resource object.\nSame as “new_render_pass”, but allows multiple color …\nFor metal context’s ShaderSource should contain MSL …\nOperation to use when both stencil and depth test pass, or …\nThis event is sent when the userclicks the window’s …\nRepresents raw hardware mouse motion event Note that these …\nFor depth-only render pass returns empty slice.\npanics for depth-only or multiple color attachment render …\nDoes current rendering backend support automatic resolve of\nOnly used for render textures. <code>sample_count &gt; 1</code> allows …\nByte size for a given UniformType\nReturns the size in bytes of texture with <code>dimensions</code>.\nSize in bytes\nStart miniquad.\nUsed for stencil testing with test_ref and test_mask: if …\nDefault value: all 1s\nDefault value: 0\nMetal-specific note: if texture was created without …\nGet OpenGL’s GLuint texture ID or metals ObjcId\nUpdate whole texture content bytes should be width * …\nDefault implementation emulates mouse clicks\nOn most platforms update() and draw() are called each …\nVertex buffers. Data contained in the buffer must match …\nWindow and associated to window rendering context related …\nWindow has been minimized Right now is only implemented on …\nWindow has been restored Right now is only implemented on …\nSpecifies a bit mask to enable or disable writing of …\nOn Apple platforms, choose the rendering API for creating …\nDescribes a hardware and platform-specific setup.\nUse <code>libEGL.so</code> (or <code>libEGL.so.0</code>) exclusively. Panics if …\nPrefer <code>libEGL</code>; fall back to <code>libGLX</code> if <code>libEGL</code> is …\nUse <code>libGLX.so</code> (or <code>libGLX.so.0</code>) exclusively. Panics if …\nPrefer <code>libGLX</code>; fall back to <code>libEGL</code> if <code>libGLX</code> is …\nIcon image in three levels of detail.\nOn Linux, the backend used for windowing and event …\nSpecifies how to load an OpenGL context on X11 in Linux.\nUse Metal for Apple platforms.\nUse OpenGL for Apple platforms. This is the default choice.\nPlatform-specific settings.\nIf SSD is not supported, no CSD will be drawn.\nIf SSD is not supported, will try to load <code>libdecor</code> to draw …\nIf SSD is not supported, draw a light gray border.\nOn Wayland, specify how to draw client-side decoration …\nUse only the Wayland backend. Panics if unavailable.\nPrefer Wayland, fall back to X11 if Wayland is unavailable.\nUse WebGL 1.0. This is the default choice.\nUse WebGL 2.0.\nOn the Web, specify which WebGL version to use.\nUse only the X11 backend. Panics if unavailable. This is …\nPrefer X11, fall back to Wayland if X11 is unavailable.\nDefines which rendering API to use on Apple platforms …\n64 x 64 image of RGBA pixels (each 4 * u8) in row-major …\nIf <code>true</code>, the event loop will block until <code>schedule_update</code> …\nIf <code>true</code>, the framebuffer includes an alpha channel. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf <code>true</code>, create the window in fullscreen mode (ignored on …\nIf <code>true</code>, the rendering canvas is scaled for HighDPI …\nOptional icon data used by the OS where applicable:\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpecifies which Linux window system (X11 or Wayland) is …\nSet the <code>WM_CLASS</code> window property on X11 and the <code>app_id</code> on …\nDetermines how to load an OpenGL context on X11 (via GLX …\n32 x 32 image of RGBA pixels (each 4 * u8) in row-major …\nPlatform-specific hints (e.g., context creation, driver …\nMSAA sample count. Defaults to <code>1</code>.\n16 * 16 image of RGBA pixels (each 4 * u8) in row-major …\nOptional swap interval (vertical sync).\nOn Wayland, specifies how to draw client-side decoration …\nSpecifies which WebGL version to use on the Web (1.0. or …\nPreferred window height (ignored on WASM/Android). …\nIf <code>true</code>, the user can resize the window.\nWindow title. Defaults to an empty string.\nPreferred window width (ignored on WASM/Android). Defaults …\nContains the error value\nNSData dataWithContentsOfFile or data.bytes are null\nMainBundle pathForResource returned null\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFilesystem path on desktops or HTTP URL in WASM\nAdds source and destination. Source and destination are …\nDefault value\nA vtable-erased generic argument. Basically, the same …\nArray of <code>[cubemap_face][mipmap_level][bytes]</code>\nGeometry bindings\nBlend factors.\nPixel arithmetic description for blending operations. Will …\nBlend values.\nOne unsigned 8-bit integer (equivalent to <code>u8</code>)\nTwo unsigned 8-bit integers (equivalent to <code>[u8; 2]</code>)\nThree unsigned 8-bit integers (equivalent to <code>[u8; 3]</code>)\nFour unsigned 8-bit integers (equivalent to <code>[u8; 4]</code>)\nSamples at coord x + 1 map to coord 1.\nDepth and stencil compare function\nA pixel-wise comparison function.\nSpecify whether front- or back-facing polygons can be …\n<code>ElapsedQuery</code> is used to measure duration of GPU operations.\nSpecifies how incoming RGBA values (source) and the RGBA …\nShader strings should never contains \\00 in the middle\nOne 32-bit wide float (equivalent to <code>f32</code>)\nOne 32-bit wide float (equivalent to <code>f32</code>)\nTwo 32-bit wide floats (equivalent to <code>[f32; 2]</code>)\nTwo 32-bit wide floats (equivalent to <code>[f32; 2]</code>)\nThree 32-bit wide floats (equivalent to <code>[f32; 3]</code>)\nThree 32-bit wide floats (equivalent to <code>[f32; 3]</code>)\nFour 32-bit wide floats (equivalent to <code>[f32; 4]</code>)\nFour 32-bit wide floats (equivalent to <code>[f32; 4]</code>)\nDefine front- and back-facing polygons.\nOne unsigned 32-bit integers (equivalent to <code>[u32; 1]</code>)\nOne unsigned 32-bit integers (equivalent to <code>[u32; 1]</code>)\nTwo unsigned 32-bit integers (equivalent to <code>[u32; 2]</code>)\nTwo unsigned 32-bit integers (equivalent to <code>[u32; 2]</code>)\nThree unsigned 32-bit integers (equivalent to <code>[u32; 3]</code>)\nThree unsigned 32-bit integers (equivalent to <code>[u32; 3]</code>)\nFour unsigned 32-bit integers (equivalent to <code>[u32; 4]</code>)\nFour unsigned 32-bit integers (equivalent to <code>[u32; 4]</code>)\nDefault value\nFour by four matrix of 32-bit floats\nFour by four matrix of 32-bit floats\nSamples at coord x + 1 map to coord 1 - x.\nCan be written to from GPU\nSamples at coord x + 1 map to coord x.\nSubtracts source from destination. Source and destination …\nOne unsigned 16-bit integer (equivalent to <code>u16</code>)\nTwo unsigned 16-bit integers (equivalent to <code>[u16; 2]</code>)\nTree unsigned 16-bit integers (equivalent to <code>[u16; 3]</code>)\nFour unsigned 16-bit integers (equivalent to <code>[u16; 4]</code>)\nUsed as read-only from GPU\nOperations performed on current stencil value when …\nSubtracts destination from source. Source and destination …\nList of all the possible formats of input data when …\nSets the wrap parameter for texture.\nAlpha blend function. If None - alpha will be blended with …\nSet a new scissor rectangle. Should be applied after …\nSet a new viewport rectangle. Should be applied after …\nstart rendering to the default frame buffer\nstart rendering to an offscreen framebuffer\nSize of buffer in bytes. For 1 element, u16 buffer this …\nColor (RGB) blend function. If None - blending will be …\nDelete GPU buffer, leaving handle unmodified.\nDelete GPU program, leaving handle unmodified.\nDelete GPU texture, leaving handle unmodified.\nOperation to use when stencil test passes, but depth test …\nDraw elements using currently applied bindings and …\nOperation to use when stencil test fails\nList of platform-dependent features that miniquad failed …\nThis flag affects integer VertexFormats, Byte*, Short*, Int…\nGL_VERSION_STRING from OpenGL. Would be empty on metal.\nOpenGL provides an enumeration over …\nTextures to be used with when drawing the geometry in the …\nIndex buffer which instructs the GPU in which order to …\nCreate a buffer resource object.\nSame as “new_render_pass”, but allows multiple color …\nFor metal context’s ShaderSource should contain MSL …\nOperation to use when both stencil and depth test pass, or …\nRaw OpenGL bindings Highly unsafe, some of the functions …\nFor depth-only render pass returns empty slice.\nDoes current rendering backend support automatic resolve of\nOnly used for render textures. <code>sample_count &gt; 1</code> allows …\nUsed for stencil testing with test_ref and test_mask: if …\nDefault value: all 1s\nDefault value: 0\nMetal-specific note: if texture was created without …\nGet OpenGL’s GLuint texture ID or metals ObjcId\nVertex buffers. Data contained in the buffer must match …\nSpecifies a bit mask to enable or disable writing of …\nThe “debug” level.\nThe “error” level.\nThe “info” level.\nThe “trace” level.\nThe “warn” level.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNo value.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a null mutable raw pointer.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo value.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo value.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCancels a pending quit request, either initiated by the …\nGet current OS clipboard value\nSave value to OS clipboard\nThe dpi scaling factor (window pixels to framebuffer …\nGet the position of the window. TODO: implement for other …\nTrue when high_dpi was requested and actually running in a …\nThe same as\nThis function simply quits the application without giving …\nShortcut for <code>order_quit</code>. Will add a legacy attribute at …\nCalling request_quit() will trigger “quit_requested_event…\nWith <code>conf.platform.blocking_event_loop</code>, <code>schedule_update</code> …\nThe current framebuffer size in pixels NOTE: High DPI …\nCapture mouse cursor to the current window On WASM this …\nSet the mouse cursor icon.\nSet the application’s window size.\nShow/hide onscreen keyboard. Only works on Android right …\nShow or hide the mouse cursor\nAuthenticated secret-key encryption.\nMessage authentication.\nErrors for Orion’s cryptographic operations.\nHashing.\n[<strong><strong>Caution</strong></strong>] Low-level API.\nKey derivation.\nEphemeral key exchange.\nPassword hashing and verification.\nUtilities such as constant-time comparison.\nA type to represent a secret key.\nRandomly generate using a CSPRNG with recommended size. …\nReturns the argument unchanged.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nAuthenticated decryption using XChaCha20Poly1305.\nAuthenticated encryption using XChaCha20Poly1305.\nStreaming AEAD based on XChaCha20Poly1305.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nSize of additional data appended to each message.\nIndicates the end of a stream. Also does a rekey.\nA message with no special meaning.\nA type that represents a <code>Nonce</code> that XChaCha20, …\nMarks that the message is the end of a set of messages. …\nDerives a new secret key and forgets the one used for …\nStreaming authenticated decryption.\nStreaming authenticated encryption.\nTag that indicates the type of message.\nReturn the tag as a byte.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nInitialize a <code>StreamSealer</code> struct with a given key.\nInitialize a <code>StreamOpener</code> struct with a given key and …\nDecrypts <code>ciphertext</code>. Returns the decrypted data and the …\nEncrypts <code>plaintext</code>. The <code>StreamTag</code> indicates the type of …\nA type to represent a secret key.\nA type to represent the <code>Tag</code> that BLAKE2b returns.\nAuthenticate a message using BLAKE2b-256 in keyed mode.\nAuthenticate and verify a message using BLAKE2b-256 in …\nReturns the argument unchanged.\nConstruct from a given byte slice.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nOpaque error.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA type to represent the <code>Digest</code> that BLAKE2b returns.\nHashing using BLAKE2b-256.\nHash data from a <code>Read</code>` type using BLAKE2b-256.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nAEADs (Authenticated Encryption with Associated Data).\nElliptic-Curve Cryptography.\nCryptographic hash functions.\nHybrid Public Key Encryption (HPKE).\nKDFs (Key Derivation Function) and PBKDFs (Password-Based …\nKey Encapsulation Mechanisms (KEMs).\nMACs (Message Authentication Code).\nStream ciphers.\nAEAD ChaCha20Poly1305 as specified in the RFC 8439.\nStreaming AEAD based on XChaCha20Poly1305.\nAEAD XChaCha20Poly1305 as specified in the draft RFC.\nThe maximum size of the associated data (see RFC 8439).\nThe maximum size of the ciphertext (see RFC 8439).\nA type that represents a <code>Nonce</code> that ChaCha20 and …\nThe maximum size of the plaintext (see RFC 8439).\nA type to represent the <code>SecretKey</code> that Chacha20, …\nMake an object from a byte array.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the length of the object.\nAEAD ChaCha20Poly1305 decryption and authentication as …\nAEAD ChaCha20Poly1305 encryption and authentication as …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nSize of additional data appended to each message.\nIndicates the end of a stream. Also does a rekey.\nA message with no special meaning.\nA type that represents a <code>Nonce</code> that XChaCha20, …\nMarks that the message is the end of a set of messages. …\nDerives a new secret key and forgets the one used for …\nA type to represent the <code>SecretKey</code> that Chacha20, …\nTag that indicates the type of message.\nStreaming XChaCha20Poly1305 state.\nThe size of a StreamTag.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInitialize a <code>StreamXChaCha20Poly1305</code> struct with a given …\nAuthenticate and decrypt a single message and tag.\nDerives a new secret key used for encryption and …\nEncrypt and authenticate a single message and tag.\nA type that represents a <code>Nonce</code> that XChaCha20, …\nA type to represent the <code>SecretKey</code> that Chacha20, …\nAEAD XChaCha20Poly1305 decryption as specified in the …\nAEAD XChaCha20Poly1305 encryption as specified in the …\nDiffie-Hellman key exchange over Curve25519 as specified …\nThe size of a private key used in X25519.\nThe size of a public key used in X25519.\nA type to represent the <code>PrivateKey</code> that X25519 uses.\nA type that represents a <code>PublicKey</code> that X25519 uses.\nThe size of a shared key used in X25519.\nA type to represent the <code>SharedKey</code> that X25519 produces.\nMake an object from a byte array.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nX25519 (Diffie-Hellman with Montgomery form of Curve25519).\nReturn the length of the object.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nBLAKE2 hash functions.\nSHA2 as specified in the FIPS PUB 180-4.\nSHA3 &amp; SHAKE as specified in the FIPS PUB 202.\nBLAKE2b as specified in the RFC 7693.\nBLAKE2b streaming state.\nBlake2b with <code>32</code> as <code>size</code>.\nBlake2b with <code>48</code> as <code>size</code>.\nBlake2b with <code>64</code> as <code>size</code>.\nA type to represent the <code>Digest</code> that BLAKE2b returns.\nConvenience functions for common BLAKE2b operations.\nReturn a digest selected by the given Blake2b variant.\nExecutes the given command directly.\nReturn a BLAKE2b digest.\nThis type doesn’t buffer writes, so flushing is a no-op.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn a <code>Blake2b</code> state selected by the given Blake2b …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitialize a <code>Blake2b</code> struct with a given size (in bytes).\nQueues the given command for further execution.\nReset to <code>new()</code> state.\nPerforms a set of actions within a synchronous update.\nUpdate state with <code>data</code>. This can be called multiple times.\nUpdate the hasher’s internal state with <em>all</em> of the bytes …\nSHA256 as specified in the FIPS PUB 180-4.\nSHA384 as specified in the FIPS PUB 180-4.\nSHA512 as specified in the FIPS PUB 180-4.\nA type to represent the <code>Digest</code> that SHA256 returns.\nThe blocksize for the hash function SHA256.\nThe output size for the hash function SHA256.\nSHA256 streaming state.\nCalculate a SHA256 digest of some <code>data</code>.\nExecutes the given command directly.\nReturn a SHA256 digest.\nThis type doesn’t buffer writes, so flushing is a no-op.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nInitialize a <code>Sha256</code> struct.\nQueues the given command for further execution.\nReset to <code>new()</code> state.\nPerforms a set of actions within a synchronous update.\nUpdate state with <code>data</code>. This can be called multiple times.\nUpdate the hasher’s internal state with <em>all</em> of the bytes …\nA type to represent the <code>Digest</code> that SHA384 returns.\nThe blocksize for the hash function SHA384.\nThe output size for the hash function SHA384.\nSHA384 streaming state.\nCalculate a SHA384 digest of some <code>data</code>.\nExecutes the given command directly.\nReturn a SHA384 digest.\nThis type doesn’t buffer writes, so flushing is a no-op.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nInitialize a <code>Sha384</code> struct.\nQueues the given command for further execution.\nReset to <code>new()</code> state.\nPerforms a set of actions within a synchronous update.\nUpdate state with <code>data</code>. This can be called multiple times.\nUpdate the hasher’s internal state with <em>all</em> of the bytes …\nA type to represent the <code>Digest</code> that SHA512 returns.\nThe blocksize for the hash function SHA512.\nThe output size for the hash function SHA512.\nSHA512 streaming state.\nCalculate a SHA512 digest of some <code>data</code>.\nExecutes the given command directly.\nReturn a SHA512 digest.\nThis type doesn’t buffer writes, so flushing is a no-op.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nInitialize a <code>Sha512</code> struct.\nQueues the given command for further execution.\nReset to <code>new()</code> state.\nPerforms a set of actions within a synchronous update.\nUpdate state with <code>data</code>. This can be called multiple times.\nUpdate the hasher’s internal state with <em>all</em> of the bytes …\nSHA3-224 as specified in the FIPS PUB 202.\nSHA3-256 as specified in the FIPS PUB 202.\nSHA3-384 as specified in the FIPS PUB 202.\nSHA3-512 as specified in the FIPS PUB 202.\nSHAKE-128 XOF as specified in the FIPS PUB 202.\nSHAKE-256 XOF as specified in the FIPS PUB 202.\nA type to represent the <code>Digest</code> that SHA3-224 returns.\nOutput size of SHA3-224 in bytes.\nRate of SHA3-224 (equivalent to blocksize in SHA2).\nSHA3-224 streaming state.\nCalculate a SHA3-224 digest of some <code>data</code>.\nExecutes the given command directly.\nReturn a SHA3-224 digest.\nThis type doesn’t buffer writes, so flushing is a no-op.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nInitialize a <code>Sha3_224</code> struct.\nQueues the given command for further execution.\nReset to <code>new()</code> state.\nPerforms a set of actions within a synchronous update.\nUpdate state with <code>data</code>. This can be called multiple times.\nUpdate the hasher’s internal state with <em>all</em> of the bytes …\nA type to represent the <code>Digest</code> that SHA3-256 returns.\nOutput size of SHA3-256 in bytes.\nRate of SHA3-256 (equivalent to blocksize in SHA2).\nSHA3-256 streaming state.\nCalculate a SHA3-256 digest of some <code>data</code>.\nExecutes the given command directly.\nReturn a SHA3-256 digest.\nThis type doesn’t buffer writes, so flushing is a no-op.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nInitialize a <code>Sha3_256</code> struct.\nQueues the given command for further execution.\nReset to <code>new()</code> state.\nPerforms a set of actions within a synchronous update.\nUpdate state with <code>data</code>. This can be called multiple times.\nUpdate the hasher’s internal state with <em>all</em> of the bytes …\nA type to represent the <code>Digest</code> that SHA3-384 returns.\nOutput size of SHA3-384 in bytes.\nRate of SHA3-384 (equivalent to blocksize in SHA2).\nSHA3-384 streaming state.\nCalculate a SHA3-384 digest of some <code>data</code>.\nExecutes the given command directly.\nReturn a SHA3-384 digest.\nThis type doesn’t buffer writes, so flushing is a no-op.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nInitialize a <code>Sha3_384</code> struct.\nQueues the given command for further execution.\nReset to <code>new()</code> state.\nPerforms a set of actions within a synchronous update.\nUpdate state with <code>data</code>. This can be called multiple times.\nUpdate the hasher’s internal state with <em>all</em> of the bytes …\nA type to represent the <code>Digest</code> that SHA3-512 returns.\nOutput size of SHA3-512 in bytes.\nRate of SHA3-512 (equivalent to blocksize in SHA2).\nSHA3-512 streaming state.\nCalculate a SHA3-512 digest of some <code>data</code>.\nExecutes the given command directly.\nReturn a SHA3-512 digest.\nThis type doesn’t buffer writes, so flushing is a no-op.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nInitialize a <code>Sha3_512</code> struct.\nQueues the given command for further execution.")