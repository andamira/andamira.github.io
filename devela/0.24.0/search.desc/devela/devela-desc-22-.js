searchState.loadedDescShard("devela", 22, "Returns the argument unchanged.\nSplats the single value given across all lanes.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nconverts <code>i16</code> to <code>i8</code>, saturating values that are too large\nconverts <code>i16</code> to <code>i8</code>, truncating the upper bits if they are …\nwidens and sign extends to <code>i32x8</code>\nConverts the lower two <code>i32</code> lanes to two <code>f64</code> lanes (and …\nreturns low <code>i16</code> of <code>i32</code>, saturating values that are too …\nreturns low <code>i16</code> of <code>i32</code>, truncating the upper bits if they …\nwidens and sign extends to i16x16\nwidens and zero extends to <code>i32x8</code>\nUnpack the upper half of the input and expand it to <code>i16</code> …\nUnpack the upper half of the input and zero expand it to …\nUnpack the lower half of the input and expand it to <code>i16</code> …\nUnpack the lower half of the input and zero expand it to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNatural log (ln(x))\nNatural log (ln(x))\nNatural log (ln(x))\nCalculates the lanewise maximum of both vectors. This doesn…\nCalculates the lanewise maximum of both vectors. If either …\nCalculates the lanewise maximum of both vectors. If either …\nCalculates the lanewise maximum of both vectors. If either …\nCalculates the lanewise minimum of both vectors. If either …\nCalculates the lanewise minimum of both vectors. If either …\nCalculates the lanewise minimum of both vectors. If either …\nCalculates the lanewise minimum of both vectors. If either …\nreturns the bit mask for each high bit set in the vector …\nreturns the bit mask for each high bit set in the vector …\nMultiples two <code>i16x8</code> and return the high part of …\nMultiples two <code>u16x8</code> and return the high part of …\nMultiplies 32x32 bit to 64 bit and then only keeps the …\nMultiplies 32x32 bit to 64 bit and then only keeps the …\nMultiply and scale equivalent to …\nMultiply and scale equivalent to …\nMultiply and scale equivalent to …\nMultiply and scale, equivalent to …\nmultiplies two <code>i16x8</code> and returns the result as a widened …\nMultiplies corresponding 32 bit lanes and returns the 64 …\nmultiplies two u16x8 and returns the result as a widened …\nMultiplies corresponding 32 bit lanes and returns the 64 …\nPack and saturate two <code>i16x8</code> to <code>u8x16</code>\ntrue if no high bits are set for any values of the vector\ntrue if no high bits are set for any values of the vector\nhorizontal add of all the elements of the vector\nhorizontal add of all the elements of the vector\nhorizontal add of all the elements of the vector\nhorizontal add of all the elements of the vector\nhorizontal add of all the elements of the vector\nhorizontal add of all the elements of the vector\nhorizontal add of all the elements of the vector\nhorizontal add of all the elements of the vector\nhorizontal max of all the elements of the vector\nhorizontal max of all the elements of the vector\nhorizontal max of all the elements of the vector\nhorizontal max of all the elements of the vector\nhorizontal min of all the elements of the vector\nhorizontal min of all the elements of the vector\nhorizontal min of all the elements of the vector\nhorizontal min of all the elements of the vector\nRounds each lane into an integer. This saturates out of …\nRounds each lane into an integer. This saturates out of …\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nShifts all lanes by the value given.\nReturns a new vector where each element is based on the …\nReturns a new vector where each element is based on the …\nReturns a new vector with lanes selected from the lanes of …\nReturns a new vector with lanes selected from the lanes of …\nIndices in the range <code>[0, 15]</code> will select the i-th element …\nIndices in the range <code>[0, 15]</code> will select the i-th element …\nWorks like <code>swizzle</code> with the following additional details\nWorks like <code>swizzle</code> with the following additional details\nTranspose matrix of 8x8 <code>f32</code> matrix. Currently only …\nTranspose matrix of 4x4 <code>f32</code> matrix. Currently only …\ntranspose matrix of 8x8 i16 matrix\nTranspose matrix of 4x4 <code>i32</code> matrix. Currently only …\nTranspose matrix of 8x8 <code>i32</code> matrix. Currently only …\nTranspose matrix of 4x4 <code>u32</code> matrix. Currently only …\nTruncates each lane into an integer. This saturates out of …\nTruncates each lane into an integer. This saturates out of …\nUnpack and interleave high lanes of two <code>u8x16</code>\nUnpack and interleave low lanes of two <code>u8x16</code>\nImproved <code>Debug</code> experience for <code>&amp;[u8]</code> UTF-8-ish streams\nImproved <code>Debug</code> experience for <code>&amp;[u8]</code> byte streams\nContains the error value\nContains the error value\nAllow collecting the span of a parsed token within a slice\nTrait alias for <code>Parser</code> to be used with <code>ModalResult</code>\nModal error reporting for <code>Parser::parse_next</code>\nContains the success value\nContains the success value\nCore trait for parsing\nMark the input as a partial buffer for streaming input.\nBy default, the error type (<code>E</code>) is <code>ContextError</code>.\nThread global state through your parsers\nUTF-8 Stream\nApplies a second parser over the output of the first one\nCharacter specific parsers and combinators\nParsers recognizing numbers\nTreat <code>&amp;mut Self</code> as a parser\nList of parsers and combinators\nTransforms <code>Incomplete</code> into <code>Backtrack</code>\nIf parsing fails, add context to the error\nIf parsing fails, dynamically add context to the error\nProduce a type’s default value\nConvert the parser’s error to another type using …\nError management\nCreates a parser from the output of this one\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInner input being wrapped in state\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtract the original <code>Stream</code>\nMaps a function over the output of a parser\nMaps a function over the error of a parser\nMake a stream out of a byte slice-like.\nMake a stream out of a byte slice-like.\nWrap another Stream with span tracking\nCreate a partial input\nConvert the parser’s output to another type using …\nParse all of <code>input</code>, generating <code>O</code> from it\nTake tokens from the <code>Stream</code>, turning it into the output\nTake tokens from the <code>Stream</code>, turning it into the output\nApply <code>std::str::FromStr</code> to the output of the parser\nCore concepts available for glob import\nReset the stream to the start\nProduce the location of the consumed input as produced …\nUser-provided state\nStream capability for combinators to parse\nProduce the consumed input as produced value.\nParsers extracting tokens from the stream\nApplies a function returning a <code>Result</code> over the output of a …\nProduce the provided value\nReturns the output of the child parser if it satisfies a …\nApply both <code>Parser::verify</code> and <code>Parser::map</code>.\nDiscards the output of the <code>Parser</code>\nProduce the location of consumed input with the output\nProduce the consumed input with the output\nMark a value as case-insensitive for ASCII characters\nMetadata for parsing hex numbers, see <code>hex_uint</code>\nMetadata for parsing signed integers, see <code>dec_int</code>\nMetadata for parsing unsigned integers, see <code>dec_uint</code>\nRecognizes zero or more lowercase and uppercase ASCII …\nRecognizes one or more lowercase and uppercase ASCII …\nRecognizes zero or more ASCII numerical and alphabetic …\nRecognizes one or more ASCII numerical and alphabetic …\nGet the byte-representation of this case-insensitive value\nRecognizes the string <code>&quot;\\r\\n&quot;</code>.\nDecode a decimal signed integer (e.g. <code>i32</code>)\nDecode a decimal unsigned integer (e.g. <code>u32</code>)\nRecognizes zero or more ASCII numerical characters: …\nRecognizes one or more ASCII numerical characters: …\nParse escaped characters, unescaping them\nDeprecated, replaed with <code>escaped</code>\nRecognizes floating point number in text format and …\nReturns the argument unchanged.\nRecognizes zero or more ASCII hexadecimal numerical …\nRecognizes one or more ASCII hexadecimal numerical …\nDecode a variable-width hexadecimal integer (e.g. <code>u32</code>)\nCalls <code>U::from(self)</code>.\nRecognizes an end of line (both <code>&quot;\\n&quot;</code> and <code>&quot;\\r\\n&quot;</code>).\nRecognizes zero or more spaces, tabs, carriage returns and …\nRecognizes one or more spaces, tabs, carriage returns and …\nMatches a newline character <code>&#39;\\n&#39;</code>.\nRecognizes zero or more octal characters: <code>&#39;0&#39;..=&#39;7&#39;</code>\nRecognizes one or more octal characters: <code>&#39;0&#39;..=&#39;7&#39;</code>\nRecognizes zero or more spaces and tabs.\nRecognizes one or more spaces and tabs.\nMatches a tab character <code>&#39;\\t&#39;</code>.\nRecognize the input slice with escaped characters.\nRecognizes a string of 0+ characters until <code>&quot;\\r\\n&quot;</code>, <code>&quot;\\n&quot;</code>, …\nBig endian\nConfigurable endianness\nLittle endian\nWill match the host’s endianness\nRecognizes a big endian 4 bytes floating point number.\nRecognizes a big endian 8 bytes floating point number.\nRecognizes a big endian signed 16 bytes integer.\nRecognizes a big endian signed 2 bytes integer.\nRecognizes a big endian signed 3 bytes integer.\nRecognizes a big endian signed 4 bytes integer.\nRecognizes a big endian signed 8 bytes integer.\nRecognizes a signed 1 byte integer.\nRecognizes a big endian unsigned 16 bytes integer.\nRecognizes a big endian unsigned 2 bytes integer.\nRecognizes a big endian unsigned 3 byte integer.\nRecognizes a big endian unsigned 4 bytes integer.\nRecognizes a big endian unsigned 8 bytes integer.\nRecognizes an unsigned 1 byte integer.\nBit level parsers\nRecognizes a 4 byte floating point number\nRecognizes an 8 byte floating point number\nReturns the argument unchanged.\nRecognizes a signed 16 byte integer\nRecognizes a signed 2 byte integer\nRecognizes a signed 3 byte integer\nRecognizes a signed 4 byte integer\nRecognizes a signed 8 byte integer\nRecognizes a signed 1 byte integer\nCalls <code>U::from(self)</code>.\nRecognizes a little endian 4 bytes floating point number.\nRecognizes a little endian 8 bytes floating point number.\nRecognizes a little endian signed 16 bytes integer.\nRecognizes a little endian signed 2 bytes integer.\nRecognizes a little endian signed 3 bytes integer.\nRecognizes a little endian signed 4 bytes integer.\nRecognizes a little endian signed 8 bytes integer.\nRecognizes a signed 1 byte integer.\nRecognizes a little endian unsigned 16 bytes integer.\nRecognizes a little endian unsigned 2 bytes integer.\nRecognizes a little endian unsigned 3 byte integer.\nRecognizes a little endian unsigned 4 bytes integer.\nRecognizes a little endian unsigned 8 bytes integer.\nRecognizes an unsigned 1 byte integer.\nParse a length-prefixed slice (TLV)\n<code>Accumulate</code> a length-prefixed sequence of values (TLV)\nGet a length-prefixed slice (TLV)\nRecognizes an unsigned 16 byte integer\nRecognizes an unsigned 2 bytes integer\nRecognizes an unsigned 3 byte integer\nRecognizes an unsigned 4 byte integer\nRecognizes an unsigned 8 byte integer\nRecognizes an unsigned 1 byte integer\nConverts a byte-level input to a bit-level input\nParses one specific bit as a bool.\nConvert a <code>bits</code> stream back into a byte stream\nParse taking <code>count</code> bits and comparing them to <code>pattern</code>\nParse taking <code>count</code> bits\nHelper trait for the <code>alt()</code> combinator.\nMain structure associated to <code>iterator</code>.\nHelper trait for the <code>permutation()</code> combinator.\nCustomizable <code>Parser</code> implementation for <code>repeat</code>\nPick the first successful parser\nTransforms an <code>ErrMode::Cut</code> (unrecoverable) to …\nTests each parser in the tuple and returns the result of …\nCalls the parser if the condition is met.\nTransforms an <code>ErrMode::Backtrack</code> (recoverable) to …\nSequence three parsers, only returning the output of the …\nSucceed, consuming no input\nMatch the end of the <code>Stream</code>\nA parser which always fails.\nRepeats the embedded parser, filling the given slice with …\nReturns the remaining input if parsing was successful, or …\nRepeats the embedded parser, calling <code>op</code> to gather the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nOpaque implementations of <code>Parser</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepeats the embedded parser, lazily returning the results\nSucceeds if the child parser returns an error.\nApply a <code>Parser</code>, producing <code>None</code> on <code>ErrMode::Backtrack</code>.\nApply the parser without advancing the input.\nApplies a list of parsers in any order.\nTries to apply all parsers in the tuple in various orders …\nSequence two parsers, only returning the output from the …\n<code>Accumulate</code> the output of a parser into a container, like …\n<code>Accumulate</code> the output of parser <code>f</code> into a container, like …\n<code>Accumulate</code> the output of a parser, interleaved with <code>sep</code>\nAlternates between two parsers, merging the results (left …\nAlternates between two parsers, merging the results (right …\nSequence three parsers, only returning the values of the …\nSequence two parsers, only returning the output of the …\nA placeholder for a not-yet-implemented <code>Parser</code>\nTrace the execution of the parser\nAkin to <code>Repeat::fold</code>, but for containers that can error …\nAkin to <code>Repeat::fold</code>, but for containers that can reject …\n<code>Parser</code> implementation for <code>Parser::and_then</code>\n<code>Parser</code> implementation for <code>Parser::by_ref</code>\n<code>Parser</code> implementation for <code>Parser::complete_err</code>\n<code>Parser</code> implementation for <code>Parser::context</code>\n<code>Parser</code> implementation for <code>Parser::context</code>\n<code>Parser</code> implementation for <code>Parser::default_value</code>\n<code>Parser</code> implementation for <code>Parser::err_into</code>\n<code>Parser</code> implementation for <code>Parser::flat_map</code>\n<code>Parser</code> implementation for <code>Parser::map</code>\n<code>Parser</code> implementation for <code>Parser::map_err</code>\n<code>Parser</code> implementation for <code>Parser::output_into</code>\n<code>Parser</code> implementation for <code>Parser::parse_to</code>\n<code>Parser</code> implementation for <code>Parser::span</code>\n<code>Parser</code> implementation for <code>Parser::take</code>\n<code>Parser</code> implementation for <code>Parser::try_map</code>\n<code>Parser</code> implementation for <code>Parser::value</code>\n<code>Parser</code> implementation for <code>Parser::verify</code>\n<code>Parser</code> implementation for <code>Parser::verify_map</code>\n<code>Parser</code> implementation for <code>Parser::void</code>\n<code>Parser</code> implementation for <code>Parser::with_span</code>\n<code>Parser</code> implementation for <code>Parser::with_taken</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUsed by <code>Parser::context</code> to add custom data to error while …\nAll failed branches of an <code>alt</code>\nThe parser failed with a recoverable error (the default).\nInitial error that kicked things off\nA <code>char</code> token\nSee <code>AddContext::add_context</code>\nAccumulate context while backtracking errors\nThe parser had an unrecoverable error.\nA description of what was being parsed\nTrack an error occurred without any other <code>StrContext</code>\nContains the error value\nContains the error value\nAdd parse error state to <code>ParserError</code>s\nEquivalent of <code>From</code> implementation to avoid orphan rules in …\nGrammar item that was expected\nCreate a new error with an external error, from …\nThere was not enough data to determine the appropriate …\nGenerally, <code>Self</code>\nCapture input on error\nSee <code>ParserError::append</code>\nDescription of what is currently being parsed\nManipulate the how parsers respond to this error\nModal error reporting for <code>Parser::parse_next</code>\nContains information on needed data if a parser returned …\nContains the success value\nContains the success value\nSee <code>Parser::parse</code>\nThe basic <code>Parser</code> trait for errors\nBy default, the error type (<code>E</code>) is <code>ContextError</code>.\nContains a lower bound on the buffer offset needed to …\nTraces added to the error while walking back up the stack\nAdditional parse context for <code>ContextError</code> added via …\nSee <code>StrContext</code>\nA <code>&amp;str</code> token\nTrace all error paths, particularly for tests\nSee <code>TreeErrorFrame::Kind</code>, <code>ParserError::append</code>\nSee <code>TreeErrorFrame::Context</code>, <code>AddContext::add_context</code>\nSee <code>TreeError::Stack</code>\nNeeds more data, but we do not know how much\nAppend to an existing error custom data\nLike <code>ParserError::from_input</code> but merges it with the …\nLike <code>ParserError::from_input</code> but merges it with the …\nProcess a parser assertion\nProcess a parser assertion\nCreates a new basic error\nEnable backtracking support\nEnable backtracking support\nOriginating <code>std::error::Error</code>\nSee <code>FromExternalError::from_external_error</code>\nThe byte indices for the <code>char</code> at <code>ParseError::offset</code>\nAccess context from <code>Parser::context</code>\nSee <code>AddContext::add_context</code>\nTransform to another error type\nAutomatically converts between errors if the underlying …\nPrevent backtracking, bubbling the error up to the top\nPrevent backtracking, bubbling the error up to the top\nAdd more context\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLike <code>ParserError::from_input</code> but also include an external …\nCreate a new error from an input position and an external …\nCreates an error from the input position\nThere was not enough data to determine the appropriate …\nThere was not enough data to determine the appropriate …\nThe original <code>ParserError</code>\nThe <code>Stream</code> at the initial location when parsing started\nThe input stream, pointing to the location where the error …\nParsed input, at the location where the error occurred\nParsed input, at the location where the error occurred\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwrap the mode, returning the underlying error, if present\nUnwrap the mode, returning the underlying error\nThe original <code>ParserError</code>\nObtaining ownership\nObtaining ownership\nIs backtracking and trying new parse branches allowed?\nIs backtracking and trying new parse branches allowed?\nIs more data <code>Needed</code>\nIs more data <code>Needed</code>\nTests if the result is Incomplete\nIndicates if we know how many bytes we need\nMaps a <code>Needed</code> to <code>Needed</code> by applying a function to a …\nApplies the given function to the inner error\nMaps <code>ErrMode&lt;InputError&lt;T&gt;&gt;</code> to <code>ErrMode&lt;InputError&lt;U&gt;&gt;</code> with …\nTranslate the input type\nTranslate the input type\nExtract the <code>Needed</code> data, if present\nExtract the <code>Needed</code> data, if present\nCreates <code>Needed</code> instance, returns <code>Needed::Unknown</code> if the …\nCreate an empty error\nThe location in <code>ParseError::input</code> where parsing failed\nCombines errors from two different parse branches.\nCombines errors from two different parse branches.\nAdd more context\nInitial error that kicked things off\nTraces added to the error while walking back up the stack\nA parse location within the stream\nContains the error value\nGenerally, <code>Self</code>\nIterate with the offset from the current location\nTrait alias for <code>Parser</code> to be used with <code>ModalResult</code>\nModal error reporting for <code>Parser::parse_next</code>\nContains the success value\nCore trait for parsing\nWhether the stream is currently partial or complete\nSequence of <code>Token</code>s\nThe smallest unit being parsed\nManipulate the how parsers respond to this error\nThe basic <code>Parser</code> trait for errors\nMarks the input as being the complete buffer or a partial …\nTransforms a token into a char for basic string parsing\nCheck if a token is in a set of possible tokens\nCore definition for parser input state\nApplies a second parser over the output of the first one\nMakes a char from self\nEnable backtracking support\nTreat <code>&amp;mut Self</code> as a parser\nSave the current parse location within the stream\nMark the stream is complete\nTransforms <code>Incomplete</code> into <code>Backtrack</code>\nReturns true if self contains the token\nIf parsing fails, add context to the error\nIf parsing fails, dynamically add context to the error\nPrevent backtracking, bubbling the error up to the top\nProduce a type’s default value\nReturns the offset to the end of the input\nConvert the parser’s error to another type using …\nCreates a parser from the output of this one\nCreates an error from the input position\nUnwrap the mode, returning the underlying error, if present\nTests that self is an alphabetic character\nTests that self is an alphabetic character or a decimal …\nTests that self is a decimal digit\nTests that self is an hex digit\nTests if byte is ASCII newline: \\n\nTests that self is an octal digit\nReport whether the <code>Stream</code> is can ever be incomplete\nTests that self is ASCII space or tab\nIterate with the offset from the current location\nGets the len in bytes for self\nMaps a function over the output of a parser\nMaps a function over the error of a parser\nSplit off a slice of tokens from the input\nSplit off the next token from the input\nGet the offset for the number of <code>tokens</code> into the stream\nFinds the offset of the next matching token\nConvert the parser’s output to another type using …\nParse all of <code>input</code>, generating <code>O</code> from it\nTake tokens from the <code>Stream</code>, turning it into the output\nTake tokens from the <code>Stream</code>, turning it into the output\nApply <code>std::str::FromStr</code> to the output of the parser\nSplit off a slice of tokens from the input\nSplit off the next token from the input\nDeprecated for callers as of 0.7.10, instead call …\nRevert the stream to a prior <code>Self::Checkpoint</code>\nRestore the stream back to its previous state\nProduce the location of the consumed input as produced …\nProduce the consumed input as produced value.\nApplies a function returning a <code>Result</code> over the output of a …\nProduce the provided value\nReturns the output of the child parser if it satisfies a …\nApply both <code>Parser::verify</code> and <code>Parser::map</code>.\nDiscards the output of the <code>Parser</code>\nProduce the location of consumed input with the output\nProduce the consumed input with the output\nAbstracts something which can extend an <code>Extend</code>. Used to …\nHelper trait for types that can be viewed as a byte slice\nHelper trait for types that can be viewed as a byte slice\nTransforms a token into a char for basic string parsing\nImproved <code>Debug</code> experience for <code>&amp;[u8]</code> UTF-8-ish streams\nIterator for bit stream (<code>(I, usize)</code>)\nImproved <code>Debug</code> experience for <code>&amp;[u8]</code> byte streams\nEnsure checkpoint details are kept private\nA parse location within the stream\nAbstracts comparison operations\nResult of <code>Compare::compare</code>\nCheck if a token is in a set of possible tokens\nComparison failed\nLook for a slice in self\nWe need more data to be sure\nIterate with the offset from the current location\nAllow collecting the span of a parsed token within a slice\nCurrent parse locations offset\nUseful functions to calculate the offset between slices …\nComparison was successful\nUsed to integrate <code>str</code>’s <code>parse()</code> method\nMark the input as a partial buffer for streaming input.\nWhether the stream is currently partial or complete\nA range bounded inclusively for counting parses performed\nSequence of <code>Token</code>s\nAbstract method to calculate the input length\nThread global state through your parsers\nUTF-8 Stream\nCore definition for parser input state\nMarks the input as being the complete buffer or a partial …\nHelper trait to convert numbers to usize.\nThe smallest unit being parsed\nSpecialized input for parsing lexed tokens\nConvert a <code>Stream</code> into an appropriate <code>Output</code> type\nAccumulate the input into an accumulator\nCasts the input type to a byte slice\nCasts the input type to a byte slice\nMakes a char from self\nSave the current parse location within the stream\nCompares self to another value for equality\nMark the stream is complete\nReturns true if self contains the token\nCurrent token’s start offset\nReturns the offset to the end of the input\nReturns the offset of the slice if it is found\nAdvance to the end of the stream\nAdvance to the end of the stream\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>Extend</code> of the correct type\nInner input being wrapped in state\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTests that self is an alphabetic character\nTests that self is an alphabetic character or a decimal …\nTests that self is a decimal digit\nTests that self is an hex digit\nTests if byte is ASCII newline: \\n\nTests that self is an octal digit\nReport whether the <code>Stream</code> is currently incomplete\nReport whether the <code>Stream</code> is currently incomplete\nReport whether the <code>Stream</code> is can ever be incomplete\nTests that self is ASCII space or tab\nIterate with the offset from the current location\nGets the len in bytes for self\nMake a stream to parse tokens\nSplit off a slice of tokens from the input\nSplit off a slice of tokens from the input\nSplit off a slice of tokens from the input\nSplit off the next token from the input\nGet the offset for the number of <code>tokens</code> into the stream\nFinds the offset of the next matching token\nOffset between the first byte of <code>start</code> and the first byte …\nSucceeds if <code>parse()</code> succeeded\nAdvance to the end of the stream\nAdvance to the end of the stream\nSplit off a slice of tokens from the input\nSplit off a slice of tokens from the input\nSplit off a slice of tokens from the input\nSplit off the next token from the input\nPrevious token’s end offset\nIterate over consumed tokens starting with the last emitted\nDeprecated for callers as of 0.7.10, instead call …\nRevert the stream to a prior <code>Self::Checkpoint</code>\nReset the stream to the start\nRestore the stream back to its previous state\nCalculates the input length, as indicated by its name, and …\nUser-provided state\nconverts self to usize\nWrite out a single-line summary of the current parse …\nWrite out a single-line summary of the current parse …\nConvert an <code>Output</code> type to be used as <code>Stream</code>\nMatches one token\nRecognizes a literal\nRecognize a token that does not match a set of tokens\nRecognize a token that matches a set of tokens\nReturn the remaining input.\nReturn the length of the remaining input.\nRecognize an input slice containing the first N input …\nRecognize the longest input slice (if any) till a member …\nRecognize the input slice up to the first occurrence of a …\nRecognize the longest (m &lt;= len &lt;= n) input slice that …\nDocumented examples.\nLibrary features.\nNightly features.\nVendored work.\nShows how to use the <code>bitfield!</code> declarative macro.\nShows how to use the <code>enumint!</code> declarative macro.\nShows how to use the <code>enumset!</code> declarative macro.\nShows a sequential ID generator made with the <code>id_seq!</code> …\nAn example created with <code>bitfield!</code>, everything public.\nAn example created with <code>bitfield!</code>, with public custom …\nAn example created with <code>bitfield!</code>, with public extra …\nDocumentation for the first field.\nDocumentation for the first field.\nDocumentation for the second field.\nDocumentation for the second field.\nthe maximum valid bit index.\nthe maximum valid bit index.\nReturns <code>true</code> if it all the fields are set.\nReturns <code>true</code> if it all the fields are set.\nReturns the inner bits.\nReturns the inner bits.\nThe size in bits of the <code>FLAG1</code> field.\nThe size in bits of the <code>FLAG1</code> field.\nThe size in bits of the <code>FLAG2</code> field.\nThe size in bits of the <code>FLAG2</code> field.\nThe size in bits of the <code>MASK0</code> field.\nThe size in bits of the <code>MASK0</code> field.\nWhether <code>self</code> contains all the same set bits that are set …\nWhether <code>self</code> contains all the same set bits that are set …\nWhether <code>self</code> contains all the same set bits that are set …\nWhether <code>self</code> contains all the same set bits that are set …\nThe number of bits set (number of ones).\nThe number of bits set (number of ones).\nThe number of bits unset (number of zeros).\nThe number of bits unset (number of zeros).\nReturns a copy of <code>self</code> with all its bits flipped.\nReturns a copy of <code>self</code> with all its bits flipped.\nReturns a copy of <code>self</code> flipping the bit at <code>index</code>.\nReturns a copy of <code>self</code> flipping the bit at <code>index</code>.\nReturns a copy of <code>self</code> flipping the bit at <code>index</code>, checked.\nReturns a copy of <code>self</code> flipping the bit at <code>index</code>, checked.\nReturns a copy of <code>self</code> with flipped bits from the …\nReturns a copy of <code>self</code> with flipped bits from the …\nReturns a copy of <code>self</code> with the <code>FLAG1</code> field flipped.\nReturns a copy of <code>self</code> with the <code>FLAG1</code> field flipped.\nReturns a copy of <code>self</code> with the <code>FLAG2</code> field flipped.\nReturns a copy of <code>self</code> with the <code>FLAG2</code> field flipped.\nReturns a copy of <code>self</code> with the <code>MASK0</code> field flipped.\nReturns a copy of <code>self</code> with the <code>MASK0</code> field flipped.\nA copy of <code>self</code> flipping the bits that are set in <code>mask</code>.\nA copy of <code>self</code> flipping the bits that are set in <code>mask</code>.\nReturns a copy of <code>self</code> flipping the bits that are set in …\nReturns a copy of <code>self</code> flipping the bits that are set in …\nReturns a copy of <code>self</code> with flipped bits from the …\nReturns a copy of <code>self</code> with flipped bits from the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a copy of <code>self</code> with only the value of the bit at …\nReturns a copy of <code>self</code> with only the value of the bit at …\nReturns a copy of <code>self</code> with only the value of the bit at …\nReturns a copy of <code>self</code> with only the value of the bit at …\nGets a copy of <code>self</code> with only the bits from the …\nGets a copy of <code>self</code> with only the bits from the …\nA copy of <code>self</code> with only the bits of <code>FLAG1</code> field.\nA copy of <code>self</code> with only the bits of <code>FLAG1</code> field.\nA copy of <code>self</code> with only the bits of <code>FLAG2</code> field.\nA copy of <code>self</code> with only the bits of <code>FLAG2</code> field.\nA copy of <code>self</code> with only the bits of <code>MASK0</code> field.\nA copy of <code>self</code> with only the bits of <code>MASK0</code> field.\nThe value at the bit range of <code>FLAG1</code> field.\nThe value at the bit range of <code>FLAG1</code> field.\nThe value at the bit range of <code>FLAG2</code> field.\nThe value at the bit range of <code>FLAG2</code> field.\nThe value at the bit range of <code>MASK0</code> field.\nThe value at the bit range of <code>MASK0</code> field.\nGets a copy of <code>self</code> with only the bits from the …\nGets a copy of <code>self</code> with only the bits from the …\nReturns a copy of <code>self</code> with only the value of the bit at …\nReturns a copy of <code>self</code> with only the value of the bit at …\nReturns a copy of <code>self</code> with only the value of the bit at …\nReturns a copy of <code>self</code> with only the value of the bit at …\nGets the value of the bits from the <code>[start..=end]</code> checked …\nGets the value of the bits from the <code>[start..=end]</code> checked …\nGets the value of the bits in from the <code>[start..=end]</code> range.\nGets the value of the bits in from the <code>[start..=end]</code> range.\nA copy of <code>self</code> with only the bits both in <code>self</code> and <code>mask</code>.\nA copy of <code>self</code> with only the bits both in <code>self</code> and <code>mask</code>.\nA copy of <code>self</code> with only the bits both in <code>self</code> and <code>other</code>.\nA copy of <code>self</code> with only the bits both in <code>self</code> and <code>other</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the bit at <code>index</code> is set.\nWhether the bit at <code>index</code> is set.\nWhether the bit at <code>index</code> is set, checked version.\nWhether the bit at <code>index</code> is set, checked version.\nWether all bits are set to 0.\nWether all bits are set to 0.\nWhether the <code>FLAG1</code> field is set.\nWhether the <code>FLAG1</code> field is set.\nWhether the <code>FLAG2</code> field is set.\nWhether the <code>FLAG2</code> field is set.\nWhether the <code>MASK0</code> field is set.\nWhether the <code>MASK0</code> field is set.\nWhether all bits are set to 1.\nWhether all bits are set to 1.\nReturns a new bitmask of ones from the <code>[start..=end]</code> …\nReturns a new bitmask of ones from the <code>[start..=end]</code> …\nReturns a new bitmask of 1s from the <code>[start..=end]</code> range.\nReturns a new bitmask of 1s from the <code>[start..=end]</code> range.\nFlips all the bits of <code>self</code>.\nFlips all the bits of <code>self</code>.\nFlips the bit at <code>index</code>, unchecked version.\nFlips the bit at <code>index</code>, unchecked version.\nFlips the bit at <code>index</code>, checked.\nFlips the bit at <code>index</code>, checked.\nFlips the bits from the <code>[start..=end]</code> checked range.\nFlips the bits from the <code>[start..=end]</code> checked range.\nFlips the <code>FLAG1</code> field.\nFlips the <code>FLAG1</code> field.\nFlips the <code>FLAG2</code> field.\nFlips the <code>FLAG2</code> field.\nFlips the <code>MASK0</code> field.\nFlips the <code>MASK0</code> field.\nFlips the bits that are set in <code>mask</code>.\nFlips the bits that are set in <code>mask</code>.\nFlips the bits that are set in <code>other</code>.\nFlips the bits that are set in <code>other</code>.\nFlips the bits from the <code>[start..=end]</code> range.\nFlips the bits from the <code>[start..=end]</code> range.\nOnly leaves the bits both in <code>self</code> and <code>mask</code>.\nOnly leaves the bits both in <code>self</code> and <code>mask</code>.\nOnly leaves the bits both in <code>self</code> and <code>other</code>.\nOnly leaves the bits both in <code>self</code> and <code>other</code>.\nSets the bit at <code>index</code>.\nSets the bit at <code>index</code>.\nSets the bit at <code>index</code>, checked.\nSets the bit at <code>index</code>, checked.\nSets the bits from the <code>[start..=end]</code> checked range.\nSets the bits from the <code>[start..=end]</code> checked range.\nSets the given checked <code>value</code> into the <code>[start..=end]</code> …\nSets the given checked <code>value</code> into the <code>[start..=end]</code> …\nSets the <code>FLAG1</code> field.\nSets the <code>FLAG1</code> field.\nSets the <code>FLAG2</code> field.\nSets the <code>FLAG2</code> field.\nSets the <code>MASK0</code> field.\nSets the <code>MASK0</code> field.\nSets the bits that are set in <code>mask</code>.\nSets the bits that are set in <code>mask</code>.\nSets the bits that are set in <code>other</code>.\nSets the bits that are set in <code>other</code>.\nSets the bits from the <code>[start..=end]</code> range.\nSets the bits from the <code>[start..=end]</code> range.\nSets the given <code>value</code> into the <code>[start..=end]</code> checked range.\nSets the given <code>value</code> into the <code>[start..=end]</code> checked range.\nSets the given <code>value</code> into the <code>[start..=end]</code> range. Sets …\nSets the given <code>value</code> into the <code>[start..=end]</code> range. Sets …\nUnsets the bit at <code>index</code>.\nUnsets the bit at <code>index</code>.\nUnsets the bit at <code>index</code>, checked.\nUnsets the bit at <code>index</code>, checked.\nUnsets the bits from the <code>[start..=end]</code> checked range.\nUnsets the bits from the <code>[start..=end]</code> checked range.\nUnsets the <code>FLAG1</code> field.\nUnsets the <code>FLAG1</code> field.\nUnsets the <code>FLAG2</code> field.\nUnsets the <code>FLAG2</code> field.\nUnsets the <code>MASK0</code> field.\nUnsets the <code>MASK0</code> field.\nUnsets the bits that are set in <code>mask</code>.\nUnsets the bits that are set in <code>mask</code>.\nUnsets the bits that are set in <code>other</code>.\nUnsets the bits that are set in <code>other</code>.\nUnsets the bits from the <code>[start..=end]</code> range.\nUnsets the bits from the <code>[start..=end]</code> range.\nReturns self with all bits set to 1.\nReturns self with all bits set to 1.\nReturns self with all bits set to 0.\nReturns self with all bits set to 0.\nWhether there’s at least one set bit in common between …\nWhether there’s at least one set bit in common between …\nWhether there’s at least one set bit in common between …\nWhether there’s at least one set bit in common between …\nReturns a copy of <code>self</code> setting the bit at <code>index</code>.\nReturns a copy of <code>self</code> setting the bit at <code>index</code>.\nReturns a copy of <code>self</code> setting the bit at <code>index</code>, checked.\nReturns a copy of <code>self</code> setting the bit at <code>index</code>, checked.\nGet a copy of <code>self</code> with bits set to 1 from the …\nGet a copy of <code>self</code> with bits set to 1 from the …\nGets a copy of <code>self</code> with the given checked <code>value</code> set into …\nGets a copy of <code>self</code> with the given checked <code>value</code> set into …\nA copy of <code>self</code> with the <code>FLAG1</code> field set.\nA copy of <code>self</code> with the <code>FLAG1</code> field set.\nA copy of <code>self</code> with the <code>FLAG2</code> field set.\nA copy of <code>self</code> with the <code>FLAG2</code> field set.\nA copy of <code>self</code> with the <code>MASK0</code> field set.\nA copy of <code>self</code> with the <code>MASK0</code> field set.\nSets the <code>value</code> into the bitrange of <code>FLAG1</code> field.\nSets the <code>value</code> into the bitrange of <code>FLAG1</code> field.\nSets the <code>value</code> into the bitrange of <code>FLAG2</code> field.\nSets the <code>value</code> into the bitrange of <code>FLAG2</code> field.\nSets the <code>value</code> into the bitrange of <code>MASK0</code> field.\nSets the <code>value</code> into the bitrange of <code>MASK0</code> field.\nA copy of <code>self</code> setting the bits that are set in <code>mask</code>.\nA copy of <code>self</code> setting the bits that are set in <code>mask</code>.\nA copy of <code>self</code> setting the bits that are set in <code>other</code>.\nA copy of <code>self</code> setting the bits that are set in <code>other</code>.\nGet a copy of <code>self</code> with bits set to 1 from the …\nGet a copy of <code>self</code> with bits set to 1 from the …\nGets a copy of <code>self</code> with the given <code>value</code> set into the …\nGets a copy of <code>self</code> with the given <code>value</code> set into the …\nGets a copy of <code>self</code> with the given <code>value</code> set into the …\nGets a copy of <code>self</code> with the given <code>value</code> set into the …\nReturns a copy of <code>self</code> setting the bit at <code>index</code>.\nReturns a copy of <code>self</code> setting the bit at <code>index</code>.\nReturns a copy of <code>self</code> unsetting the bit at <code>index</code>, checked.\nReturns a copy of <code>self</code> unsetting the bit at <code>index</code>, checked.\nReturns a copy of <code>self</code> with unset bits to 0 from the …\nReturns a copy of <code>self</code> with unset bits to 0 from the …\nA copy of <code>self</code> with the <code>FLAG1</code> field set.\nA copy of <code>self</code> with the <code>FLAG1</code> field set.\nA copy of <code>self</code> with the <code>FLAG2</code> field set.\nA copy of <code>self</code> with the <code>FLAG2</code> field set.\nA copy of <code>self</code> with the <code>MASK0</code> field set.\nA copy of <code>self</code> with the <code>MASK0</code> field set.\nA copy of <code>self</code> unsetting the bits that are set in <code>mask</code>.\nA copy of <code>self</code> unsetting the bits that are set in <code>mask</code>.\nA copy of <code>self</code> unsetting the bits that are set in <code>other</code>.\nA copy of <code>self</code> unsetting the bits that are set in <code>other</code>.\nReturns a copy of <code>self</code> with unset bits to 0 from the …\nReturns a copy of <code>self</code> with unset bits to 0 from the …\nReturns a new <code>ExampleBitfield</code> with all the fields set.\nReturns a new <code>ExampleBitfieldCustom</code> with all the fields …\nReturns self with the given inner <code>bits</code>.\nReturns self with the given inner <code>bits</code>.\nReturns a new <code>ExampleBitfield</code> with <code>FLAG1</code> field set.\nReturns a new <code>ExampleBitfieldCustom</code> with <code>FLAG1</code> field set.\nReturns a new <code>ExampleBitfield</code> with <code>FLAG2</code> field set.\nReturns a new <code>ExampleBitfieldCustom</code> with <code>FLAG2</code> field set.\nReturns a new <code>ExampleBitfield</code> with <code>MASK0</code> field set.\nReturns a new <code>ExampleBitfieldCustom</code> with <code>MASK0</code> field set.\nReturns a new <code>ExampleBitfield</code> with none of the fields set.\nReturns a new <code>ExampleBitfieldCustom</code> with none of the …\nAn auto-generated enum for values between #start and #end.\nReturns the maximum possible value.\nReturns the minimum possible value.\nReturns the number of invalid values, as an unsigned …\nReturns the number of valid values, as an unsigned …\nReturns the argument unchanged.\nCast the enum to its underlying representation.\nCalls <code>U::from(self)</code>.\nReturns the appropriate variant from the given <code>value</code>.\nReturns the appropriate variant from the given <code>value</code>, …\nReturns the appropriate variant if the given <code>value</code> is …\nReturns the appropriate variant from the given <code>value</code>, …\nReturns the total number of variants.\nAn example created with <code>enumset!</code>.\nRepresents a set of <code>ExampleEnum</code> variants.\nthe maximum valid bit index.\nA default unit variant.\nThe bit index that corresponds to <code>ExampleEnum::</code><code>Variant0</code>.\nA tuple variant.\nThe bit index that corresponds to <code>ExampleEnum::</code><code>Variant1</code>.\nA self-referential tuple variant.\nThe bit index that corresponds to <code>ExampleEnum::</code><code>Variant2</code>.\nA struct variant with discriminant.\nThe bit index that corresponds to <code>ExampleEnum::</code><code>Variant3</code>.\nSupports generics and lifetimes.\nThe bit index that corresponds to <code>ExampleEnum::</code><code>Variant4</code>.\nReturns <code>true</code> if it all the fields are set.\nReturns the inner bits.\nThe size in bits of the <code>Variant0</code> field.\nThe size in bits of the <code>Variant1</code> field.\nThe size in bits of the <code>Variant2</code> field.\nThe size in bits of the <code>Variant3</code> field.\nThe size in bits of the <code>Variant4</code> field.\nWhether <code>self</code> contains all the same set bits that are set …\nWhether <code>self</code> contains all the same set bits that are set …\nThe number of bits set (number of ones).\nThe number of bits unset (number of zeros).\nReturns the total number of variants.\nReturns a copy of <code>self</code> with all its bits flipped.\nReturns a copy of <code>self</code> flipping the bit at <code>index</code>.\nReturns a copy of <code>self</code> flipping the bit at <code>index</code>, checked.\nReturns a copy of <code>self</code> with flipped bits from the …\nReturns a copy of <code>self</code> with the <code>Variant0</code> field flipped.\nReturns a copy of <code>self</code> with the <code>Variant1</code> field flipped.\nReturns a copy of <code>self</code> with the <code>Variant2</code> field flipped.\nReturns a copy of <code>self</code> with the <code>Variant3</code> field flipped.\nReturns a copy of <code>self</code> with the <code>Variant4</code> field flipped.\nA copy of <code>self</code> flipping the bits that are set in <code>mask</code>.\nReturns a copy of <code>self</code> flipping the bits that are set in …\nReturns a copy of <code>self</code> with flipped bits from the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a copy of <code>self</code> with only the value of the bit at …\nReturns a copy of <code>self</code> with only the value of the bit at …\nGets a copy of <code>self</code> with only the bits from the …\nThe value at the bit range of <code>Variant0</code> field.\nThe value at the bit range of <code>Variant1</code> field.\nThe value at the bit range of <code>Variant2</code> field.\nThe value at the bit range of <code>Variant3</code> field.\nThe value at the bit range of <code>Variant4</code> field.\nA copy of <code>self</code> with only the bits of <code>Variant0</code> field.\nA copy of <code>self</code> with only the bits of <code>Variant1</code> field.\nA copy of <code>self</code> with only the bits of <code>Variant2</code> field.\nA copy of <code>self</code> with only the bits of <code>Variant3</code> field.\nA copy of <code>self</code> with only the bits of <code>Variant4</code> field.\nGets a copy of <code>self</code> with only the bits from the …\nReturns a copy of <code>self</code> with only the value of the bit at …\nReturns a copy of <code>self</code> with only the value of the bit at …\nGets the value of the bits from the <code>[start..=end]</code> checked …\nGets the value of the bits in from the <code>[start..=end]</code> range.\nA copy of <code>self</code> with only the bits both in <code>self</code> and <code>mask</code>.\nA copy of <code>self</code> with only the bits both in <code>self</code> and <code>other</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the bit at <code>index</code> is set.\nWhether the bit at <code>index</code> is set, checked version.\nWether all bits are set to 0.\nWhether the <code>Variant0</code> field is set.\nWhether the <code>Variant1</code> field is set.\nWhether the <code>Variant2</code> field is set.\nWhether the <code>Variant3</code> field is set.\nWhether the <code>Variant4</code> field is set.\nWhether all bits are set to 1.\nReturns a new bitmask of ones from the <code>[start..=end]</code> …\nReturns a new bitmask of 1s from the <code>[start..=end]</code> range.\nFlips all the bits of <code>self</code>.\nFlips the bit at <code>index</code>, unchecked version.\nFlips the bit at <code>index</code>, checked.\nFlips the bits from the <code>[start..=end]</code> checked range.\nFlips the <code>Variant0</code> field.\nFlips the <code>Variant1</code> field.\nFlips the <code>Variant2</code> field.\nFlips the <code>Variant3</code> field.\nFlips the <code>Variant4</code> field.\nFlips the bits that are set in <code>mask</code>.\nFlips the bits that are set in <code>other</code>.\nFlips the bits from the <code>[start..=end]</code> range.\nOnly leaves the bits both in <code>self</code> and <code>mask</code>.\nOnly leaves the bits both in <code>self</code> and <code>other</code>.\nSets the bit at <code>index</code>.\nSets the bit at <code>index</code>, checked.\nSets the bits from the <code>[start..=end]</code> checked range.\nSets the given checked <code>value</code> into the <code>[start..=end]</code> …\nSets the <code>Variant0</code> field.\nSets the <code>Variant1</code> field.\nSets the <code>Variant2</code> field.\nSets the <code>Variant3</code> field.\nSets the <code>Variant4</code> field.\nSets the bits that are set in <code>mask</code>.\nSets the bits that are set in <code>other</code>.\nSets the bits from the <code>[start..=end]</code> range.\nSets the given <code>value</code> into the <code>[start..=end]</code> checked range.\nSets the given <code>value</code> into the <code>[start..=end]</code> range. Sets …\nUnsets the bit at <code>index</code>.\nUnsets the bit at <code>index</code>, checked.\nUnsets the bits from the <code>[start..=end]</code> checked range.\nUnsets the <code>Variant0</code> field.\nUnsets the <code>Variant1</code> field.\nUnsets the <code>Variant2</code> field.\nUnsets the <code>Variant3</code> field.\nUnsets the <code>Variant4</code> field.\nUnsets the bits that are set in <code>mask</code>.\nUnsets the bits that are set in <code>other</code>.\nUnsets the bits from the <code>[start..=end]</code> range.\nReturns the associated empty set.\nReturns the associated full set.\nReturns self with all bits set to 1.\nReturns self with all bits set to 0.\nWhether there’s at least one set bit in common between …\nWhether there’s at least one set bit in common between …\nReturns a copy of <code>self</code> setting the bit at <code>index</code>.\nReturns a copy of <code>self</code> setting the bit at <code>index</code>, checked.\nGet a copy of <code>self</code> with bits set to 1 from the …\nGets a copy of <code>self</code> with the given checked <code>value</code> set into …\nSets the <code>value</code> into the bitrange of <code>Variant0</code> field.\nSets the <code>value</code> into the bitrange of <code>Variant1</code> field.\nSets the <code>value</code> into the bitrange of <code>Variant2</code> field.\nSets the <code>value</code> into the bitrange of <code>Variant3</code> field.\nSets the <code>value</code> into the bitrange of <code>Variant4</code> field.\nA copy of <code>self</code> with the <code>Variant0</code> field set.\nA copy of <code>self</code> with the <code>Variant1</code> field set.\nA copy of <code>self</code> with the <code>Variant2</code> field set.\nA copy of <code>self</code> with the <code>Variant3</code> field set.\nA copy of <code>self</code> with the <code>Variant4</code> field set.\nA copy of <code>self</code> setting the bits that are set in <code>mask</code>.\nA copy of <code>self</code> setting the bits that are set in <code>other</code>.\nGet a copy of <code>self</code> with bits set to 1 from the …\nGets a copy of <code>self</code> with the given <code>value</code> set into the …\nGets a copy of <code>self</code> with the given <code>value</code> set into the …\nReturns a copy of <code>self</code> setting the bit at <code>index</code>.\nReturns a copy of <code>self</code> unsetting the bit at <code>index</code>, checked.\nReturns a copy of <code>self</code> with unset bits to 0 from the …\nA copy of <code>self</code> with the <code>Variant0</code> field set.\nA copy of <code>self</code> with the <code>Variant1</code> field set.\nA copy of <code>self</code> with the <code>Variant2</code> field set.\nA copy of <code>self</code> with the <code>Variant3</code> field set.\nA copy of <code>self</code> with the <code>Variant4</code> field set.\nA copy of <code>self</code> unsetting the bits that are set in <code>mask</code>.\nA copy of <code>self</code> unsetting the bits that are set in <code>other</code>.\nReturns a copy of <code>self</code> with unset bits to 0 from the …\nReturns a new <code>ExampleEnumSet</code> with all the fields set.\nReturns self with the given inner <code>bits</code>.\nReturns a new <code>ExampleEnumSet</code> with <code>Variant0</code> field set.\nReturns a new <code>ExampleEnumSet</code> with <code>Variant1</code> field set.\nReturns a new <code>ExampleEnumSet</code> with <code>Variant2</code> field set.\nReturns a new <code>ExampleEnumSet</code> with <code>Variant3</code> field set.\nReturns a new <code>ExampleEnumSet</code> with <code>Variant4</code> field set.\nReturns a new <code>ExampleEnumSet</code> with none of the fields set.\nfield2 docs.\nfield1 docs.\nA unique sequential identifier <code>usize</code> generator.\nReturns the argument unchanged.\nReturns the number of IDs generated so far.\nReturns the number of IDs generated so far with <code>Acquire</code> …\nReturns the number of IDs generated so far with <code>Relaxed</code> …\nReturns the number of IDs generated so far with <code>SeqCst</code> …\nCalls <code>U::from(self)</code>.\nIterator over generated IDs with <code>AcqRel</code> ordering.\nIterator over generated IDs with <code>AcqRel</code> ordering.\nIterator over generated IDs with <code>Relaxed</code> ordering.\nIterator over generated IDs with <code>Relaxed</code> ordering.\nIterator over generated IDs with <code>SeqCst</code> ordering.\nIterator over generated IDs with <code>SeqCst</code> ordering.\nGenerates some unique <code>ExampleIdSeqUsize</code> ID.\nGenerates some unique <code>ExampleIdSeqUsize</code> ID with <code>AcqRel</code> …\nGenerates a unique <code>ExampleIdSeqUsize</code> ID with <code>AcqRel</code> …\nGenerates some unique <code>ExampleIdSeqUsize</code> ID with <code>Relaxed</code> …\nGenerates a unique <code>ExampleIdSeqUsize</code> ID with <code>Relaxed</code> …\nGenerates some unique <code>ExampleIdSeqUsize</code> ID with <code>SeqCst</code> …\nGenerates a unique <code>ExampleIdSeqUsize</code> ID with <code>SeqCst</code> …\nGenerates some unique <code>ExampleIdSeqUsize</code> ID.\nReturns the number of remaining IDs.\nReturns the number of remaining IDs with <code>Acquire</code> ordering.\nReturns the number of remaining IDs with <code>Relaxed</code> ordering.\nReturns the number of remaining IDs with <code>SeqCst</code> ordering.\nReturns the underlying unique ID value as a <code>usize</code>.\n<code>bytehound-preload</code> modifications\n<code>crossbeam-utils</code> modifications\n<code>crunchy</code> modifications\n<code>current</code> modifications\n<code>encode</code> modifications\n<code>etcetera</code> modifications\n<code>fxhash</code> modifications\n<code>icy_sixel</code> modifications\n<code>jiff</code> modifications\n<code>mini-alloc</code> modifications\n<code>no_std_io</code> modifications\n<code>numtoa</code> modifications\n<code>object-id</code> modifications\n<code>pengyhash</code> modifications\n<code>pollster</code> modifications\n<code>quickdiv</code> modifications\n<code>stack_dst</code> modifications\n<code>stated-scope-guard</code> modifications\n<code>static_assertions</code> modifications\n<code>tailcall-chunk</code> modifications\n<code>tupl</code> modifications\nABGR color 32bpp.\nMask for access mode.\nAdd seals to file.\nPositionally stable arithmetic dithering.\nAG grayscale 16bpp.\nThe alignment of a cache line in the current platform.\nAppend to file on each write.\n<code>?std</code> A string describing the architecture of the CPU that …\n$ τ/360 = π/180 = 1\\degree $ <em>arc degree</em> (A019685, …\n$ τ/(360*60) = 1^{\\prime} $ <em>arc minute</em> (wikipedia) …\n$ τ/(360 * 60 * 60) = 1^{\\prime\\prime} $ <em>arc second</em> (…\nARGB color 32bpp.\nThe arity of this tuple (the number of contained elements)\nEnable signal-driven I/O (SIGIO on file activity).\n🧪 Access to accelerometer sensor data.\nU+0006\nHas the effects of both <code>Acquire</code> and <code>Release</code> together: For …\nWhen coupled with a load, if the loaded value was written …\n0° and &lt; 90°\n<code>core</code> The addition operator <code>+</code>.\n<code>core</code> The addition assignment operator <code>+=</code>.\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\n🚩 <code>core</code> An error which can be returned when parsing an …\n🚩+ The root error type, aggregating all module-specific …\n🚩+ The kind of root error type, aggregating all …\n⚖️ The root result type, aggregating all …\n🌐 Memory-allocation-related operations.\nAllocate new memory via the global allocator.\nAn alphanumeric key (A-Z, 0-9).\nAn alphanumeric key (A-Z, 0-9).\nAn entity already exists, often a file.\nAltGr key.\nU+0026\n📐 An angle represents a fraction of a full rotation.\n📐 The direction of rotation of an angle.\n📐 The kind of <code>Angle</code>, based on its normalized turn.\nANSI escape codes.\nANSI 3-bit color codes, 8 colors.\nANSI 8-bit color codes, 256 colors.\n<code>core</code> A trait to emulate dynamic typing.\nU+0027\nApple enviroment for directories.\nApplication specific metadata.\nManages directory paths in an environment-aware manner.\nUnix enviroment for directories.\nWindows enviroment for directories.\nXdg enviroment for directories.\nThis tuple with an extra element <code>T</code> appended to it.\n⚛️ <code>?alloc</code> A thread-safe reference-counting pointer.\n⚛️ <code>?alloc</code> A version of <code>Arc</code> that holds a non-owning …\n🌐 Arch-related functionality.\nProgram argument list too long.\n📦 A static 1-dimensional array backed by the core array …\n📦 A static 2-dimensional <code>Array</code>.\n🖹 A formatting wrapper for core arrays, implementing …\nCompile-time conversion from slice-like types to arrays.\n🔄 <code>core</code> A by-value array iterator.\n📦 A static array allowing uninitialized elements.\n<code>core</code> Used to do a cheap mutable-to-mutable reference …\n<code>core</code> Used to do a cheap reference-to-reference conversion.\n🌐 Provides ASCII operations on <code>T</code>, most of them <em>const</em>.\nOne of 128 Unicode characters (<code>U+0000</code> to <code>U+007F</code>), the …\nU+0009\nU+002A\nError diffusion dithering using Bill Atkinson’s method.\n⚛️ <code>atomic</code> A generic atomic wrapper type.\n⚛️ <code>?core</code> A boolean type which can be safely shared …\n⚛️ <code>portable-atomic</code> A thread-safe floating-point type.\n⚛️ <code>portable-atomic</code> A thread-safe floating-point type.\n⚛️ <code>portable-atomic</code> A thread-safe signed integer type.\n⚛️ <code>?core</code> A thread-safe signed integer type.\n⚛️ <code>?core</code> A thread-safe signed integer type.\n⚛️ <code>?core</code> A thread-safe signed integer type.\n⚛️ <code>?core</code> A thread-safe signed integer type.\n⚛️ <code>?core</code> A thread-safe signed integer type.\n⚛️ <code>core</code> Atomic memory ordering.\n⚛️ <code>?core</code> A raw pointer type which can be safely shared …\n⚛️ <code>portable-atomic</code> A thread-safe unsigned integer type.\n⚛️ <code>?core</code> A thread-safe unsigned integer type.\n⚛️ <code>?core</code> A thread-safe unsigned integer type.\n⚛️ <code>?core</code> A thread-safe unsigned integer type.\n⚛️ <code>?core</code> A thread-safe unsigned integer type.\n⚛️ <code>?core</code> A thread-safe unsigned integer type.\n10^-18\nChoose diffusion type automatically. (Default)\nChoose automatically the method for finding the largest …\nChoose automatically the method for selecting …\nChoose quality mode automatically.\nBGR color 15bpp.\nBGR color 16bpp.\nBGR color 24bpp.\nBGRA color 32bpp.\nTrue if the system’s architecture is big-endian.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of a pointer in bits, for the current platform.\nThe size in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nThe size of an IPv4 address in bits.\nThe size of an IPv6 address in bits.\nThe bit size of this type (only the relevant data part, …\nThe bit size of this type (only the relevant data part, …\nCode to set the foreground color to black.\nCode to set the background color to black.\nCode to set blink effect.\nCode to unset blink effect.\nBlock device (S_IFBLK in POSIX).\nCode to set the foreground color to blue.\nCode to set the background color to blue.\nCode to set bold effect.\nCode to unset bold and dim effects.\nCode to set the foreground color to bright black.\nCode to set the background color to bright black.\nCode to set the foreground color to bright blue.\nCode to set the background color to bright blue.\nCode to set the foreground color to bright cyan.\nCode to set the background color to bright cyan.\nCode to set the foreground color to bright green.\nCode to set the background color to bright green.\nCode to set the foreground color to bright magenta.\nCode to set the background color to bright magenta.\nCode to set the foreground color to bright red.\nCode to set the background color to bright red.\nCode to set the foreground color to bright white.\nCode to set the background color to bright white.\nCode to set the foreground color to bright yellow.\nCode to set the background color to bright yellow.\nSignal interrupt on BREAK. If <code>IGNBRK</code> is set, a BREAK is …\nAn IPv4 address representing the broadcast address: …\nBackspace-delay type 0.\nBackspace-delay type 1.\nBackspace delay mask. Values are <code>BS0</code> or <code>BS1</code>.\n📦 <code>alloc</code> An ordered map based on a B-Tree.\n<code>alloc</code> An ordered map based on a B-Tree.\n📦 <code>alloc</code> An ordered set based on a B-Tree.\nThe size of a pointer in bytes, for the current platform.\nThe alignment of this type in bytes.\nThe alignment of this type in bytes.\nThe size of this type in bytes.\nThe size of this type in bytes.\n🧪 Background sync capability for web applications.\nControls how memory is provided for a value.\nThe owned counterpart.\nU+0008\nBackspace key.\n<code>std</code> A captured OS thread stack backtrace.\n<code>std</code> The current status of a backtrace.\nBad argument detected.\nBad input detected.\nInteger overflow.\n<code>core</code> A zero-sized marker for a <code>Storage</code> type that wraps its …\nA no-op pointer type, like a <code>Box</code> but without affecting how …\n<code>std</code> Enables multiple threads to synchronize the beginning …\n⚖️ <code>std</code> Returned by <code>Barrier::wait()</code> when all threads in …\nA compile-time configurable radix-based encoding scheme.\n<code>Base16</code> standard encoding (hex), with linear search. …\n<code>Base32</code> standard encoding, using LUT decoding. …\n<code>Base32</code> <code>Crockford</code> encoding. Case-insensitive, remaps <code>O → 0</code>…\n<code>Base32Hex</code> uses RFC 4648 hex-encoding (<code>0-9 A-V</code> instead of …\n<code>Base32</code> encoding with padding (<code>=</code>) enabled, using LUT …\n<code>Base64</code> standard encoding, using LUT decoding. …\n<code>Base64</code> encoding with padding (<code>=</code>) enabled, using LUT …\nToggles bass boost mode.\nDecreases bass levels.\nIncreases bass levels.\nU+0007\n🖹 <code>core</code> <code>b</code> formatting.\nBinary-based, optimized for machine processing.\n📦 <code>alloc</code> A priority queue implemented with a binary heap.\n<code>core</code> The bitwise AND operator <code>&amp;</code>.\n<code>core</code> The bitwise AND assignment operator <code>&amp;=</code>.\nProvides bitwise operations on <code>T</code>.\n<code>core</code> The bitwise OR operator <code>|</code>.\n<code>core</code> The bitwise OR assignment operator <code>|=</code>.\nType size information in bits.\n<code>core</code> The bitwise XOR operator <code>^</code>.\n<code>core</code> The bitwise XOR assignment operator <code>^=</code>.\n🅵 A simple bitmap font for rendering fixed-size glyphs.\n🌐 Provides constant bitwise operations on <code>T</code>.\n0 Black\n4 Blue\nBoolean value\nBoolean value\nBoolean value\nBoolean value\nBoolean value\nBoolean value\nBoolean value\nBoolean value\nBoolean value\n<code>core</code> A trait for borrowing data.\n<code>core</code> A trait for mutably borrowing data.\nBorrowed data.\nA borrowed value.\nBoth the reading and the writing portions of the <code>TcpStream</code> …\n📏 <code>core</code> An endpoint of a range of keys.\n<code>alloc</code> A pointer type that uniquely owns a heap allocation …\nA zero-sized marker for a <code>Storage</code> type that wraps its data …\nExit the operation without running subsequent phases.\nDecreases the screen brightness.\nIncreases the screen brightness.\nThe operation failed because a pipe was closed.\nReuse an existing exclusive buffer.\n🧺 A simple, single-threaded bump allocator.\nBurkes error diffusion dithering.\n1-Byte byte array\n1-Byte byte array\n1-Byte byte array\n1-Byte byte array\n1-Byte byte array\n1-Byte byte array\n1-Byte byte array\n1-Byte byte array\n1-Byte byte array\n2-Byte byte array\n2-Byte byte array\n2-Byte byte array\n2-Byte byte array\n2-Byte byte array\n2-Byte byte array\n2-Byte byte array\n2-Byte byte array\n2-Byte byte array\n4-Byte byte array\n4-Byte byte array\n4-Byte byte array\n4-Byte byte array\n4-Byte byte array\n4-Byte byte array\n4-Byte byte array\n4-Byte byte array\n4-Byte byte array\n8-Byte byte array\n8-Byte byte array\n8-Byte byte array\n8-Byte byte array\n8-Byte byte array\n8-Byte byte array\n8-Byte byte array\n8-Byte byte array\n8-Byte byte array\n🌐 A utility struct for searching bytes in slices.\nType size information in bytes.\nCommand invoked cannot execute.\nA (user specified) output file cannot be created.\n$ \\sqrt[\\small 3]{2} $ (A002580, wikipedia) …\n$ \\sqrt[\\small 3]{3} $ (A002581) <code>≈ 1.44224957…</code>\nCharacter device (S_IFCHR in POSIX).\nCIE lightness transition point (216/24389 ≈ 0.008856)\nCIE lightness transition point (216/24389 ≈ 0.008856)\nCIE lightness linear coefficient (24389/27 ≈ 903.3)\nCIE lightness linear coefficient (24389/27 ≈ 903.3)\nIgnore modem control lines.\nClose on exec.\nCode to set the background color to <code>bg</code>.\nCode to set the foreground color to <code>fg</code>.\nCode to set the foreground color to <code>fg</code> and the background …\nCode to set the foreground color to <code>fg</code> and the background …\nCode to set the foreground color to bright <code>fg</code> and the …\nCode to set the foreground color to <code>fg</code> and the background …\nCode to set the foreground color to bright <code>fg</code> and the …\nCode to set the the background <code>color</code>.\nThe bit depth of each color component (e.g., <code>8</code> for <code>u8</code>, <code>32</code> …\nThe number of color components (channels) in the …\nCode to set the the foreground <code>color</code>.\nWhether the color has an alpha component are integer types …\nWhether the color components are integer types (e.g., <code>u8</code>, …\nWhether the color space is linear (as opposed to …\nWhether the color uses premultiplied alpha (vs. …\nConfiguration error.\nA helper for constructing macro constants.\nThe number of months in a year.\nThe number of weekdays in a week.\n<code>CRDLY</code>: Carriage-return delay type 0.\n<code>CRDLY</code>: Carriage-return delay type 1.\n<code>CRDLY</code>: Carriage-return delay type 2.\n<code>CRDLY</code>: Carriage-return delay type 3.\nCarriage return delay mask. Values are <code>CR0</code>, <code>CR1</code>, <code>CR2</code>, or …\nEnable receiver.\nCreate file if it doesn’t exist.\nCode to set crossed effect.\nCode to unset crossed effect.\n<code>CSIZE</code>: Character size mask type 5.\n<code>CSIZE</code>: Character size mask type 6.\n<code>CSIZE</code>: Character size mask type 7.\n<code>CSIZE</code>: Character size mask type 8.\nControl Sequence Introducer (CSI).\nCharacter size mask. Values are <code>CS5</code>, <code>CS6</code>, <code>CS7</code>, or <code>CS8</code>.\nSet two stop bits, rather than one.\n𝐓 <code>core</code> Representation of a borrowed C string (See […\n𝐓 <code>alloc</code> An owned, C-compatible, nul-terminated string …\nSeek from current position.\nCode to move the cursor down by one line.\nCode to move the cursor down by 1-digit <code>n</code> lines.\nCode to move the cursor down by 2-digit <code>n</code> lines.\nCode to move the cursor down by 3-digit <code>n</code> lines.\nCode to move the cursor down by 4-digit <code>n</code> lines.\nReturns a slice with the code to move the cursor down by <code>n</code> …\nCode to move the cursor to the home position (1, 1).\nCode to make the cursor invisible.\nCode to move the cursor left by one column.\nCode to move the cursor left by 1-digit <code>n</code> lines.\nCode to move the cursor left by 3-digit <code>n</code> lines.\nCode to move the cursor left by 3-digit <code>n</code> lines.\nCode to move the cursor left by 4-digit <code>n</code> lines.\nReturns a slice with the code to move the cursor left by <code>n</code> …\nCode to move the cursor to the specified 1-digit position …\nCode to move the cursor to the specified 2-digit position …\nCode to move the cursor to the specified 3-digit position …\nCode to move the cursor to the specified 4-digit position …\nReturns a slice with the code to move the cursor to the …\nCode to move the cursor to the beginning of the next line.\nCode to move the cursor to the beginning of the next …\nCode to move the cursor to the beginning of the next …\nCode to move the cursor to the beginning of the next …\nCode to move the cursor to the beginning of the next …\nReturns a slice with the code to move the cursor to the …\nCode to move the cursor to the beginning of the previous …\nCode to move the cursor to the beginning of the previous …\nCode to move the cursor to the beginning of the previous …\nCode to move the cursor to the beginning of the previous …\nCode to move the cursor to the beginning of the previous …\nReturns a slice with the code to move the cursor to the …\nCode to restore the cursor position.\nCode to move the cursor right by one column.\nCode to move the cursor right by 1-digit <code>n</code> lines.\nCode to move the cursor right by 2-digit <code>n</code> lines.\nCode to move the cursor right by 3-digit <code>n</code> lines.\nCode to move the cursor right by 4-digit <code>n</code> lines.\nReturns a slice with the code to move the cursor right by <code>n</code>…\nCode to save the cursor position.\nCode to move the cursor up by one line.\nCode to move the cursor up by 1-digit <code>n</code> lines.\nCode to move the cursor up by 2-digit <code>n</code> lines.\nCode to move the cursor up by 3-digit <code>n</code> lines.\nCode to move the cursor up by 4-digit <code>n</code> lines.\nReturns a slice with the code to move the cursor up by <code>n</code> …\nCode to make the cursor visible.\nCode to set the foreground color to cyan.\nCode to set the background color to cyan.\nAligns and pads a value to the length of a cache line.\nAccess to the device camera.\nU+0018\nThe given capacity did not match the required constraints.\nU+0041\nU+0042\nU+0043\nU+0044\nU+0045\nU+0046\nU+0047\nU+0048\nU+0049\nU+004A\nU+004B\nU+004C\nU+004D\nU+004E\nU+004F\nU+0050\nU+0051\nU+0052\nU+0053\nU+0054\nU+0055\nU+0056\nU+0057\nU+0058\nU+0059\nU+005A\nCaps Lock key.\nA backtrace has been captured and the <code>Backtrace</code> should …\nU+000D\n🌐 Provides <em>const</em> casting, joining and splitting …\n<code>core</code> A mutable memory location.\nChoose the geometric center of the box.\nIndication that contents should be center-aligned.\n10^-2\nAllows chaining transformations by passing values through …\n🌐 Unicode scalars-related operations.\n32-bit char\nA Unicode character (text input, international layouts, …\n🛡️ A unicode character (FFI-safe, stored as <code>u32</code>).\nAn invalid given character was found.\n32-bit char\n32-bit char\n32-bit char\n32-bit char\n32-bit char\n32-bit char\n32-bit char\n32-bit char\nU+005E\nFires when an element is clicked.\n🧪 ⚠️ Read access to the system clipboard.\n🧪 Write access to the system clipboard.\nAlias of <strong>negative</strong> angle direction.\n<code>core</code> A common trait that allows explicit creation of a …\n<code>core</code> Derive macro generating an impl of the trait <code>Clone</code>.\nEncodes and decodes a number in big-endian order.\nEncodes and decodes a sequence of flags as a single byte.\nEncodes and decodes conditionally.\nEncodes and decodes an iterator as a sequence with an …\nEncodes and decodes a number in little-endian order.\nA dummy writer that counts bytes instead of actually …\nEncodes and decodes a length prefixed value (TLV).\nRepresents a collection of elements\nU+003A\nBase trait for general color data representation.\nChoose the mean of all unique colors in the box (specified …\nU+002C\nU+0040\n🌐 Provides comparing methods for <code>T</code>.\nThe coroutine completed with a return value.\nThe type of a single color component (e.g., <code>u8</code>, <code>f32</code>).\nThe type of compression applied to data.\nRepresents the concatenation of two chunks, enabling O(1) …\n<code>std</code> A Condition Variable\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nAllows to convert compile-time constants into type-level …\nA trait for giving a type a useful default value in …\n📦 An immutable, append-only, linear, functional, …\n🔄 Iterates over the contents of a <code>ConstList</code>.\nMove on to the next phase of the operation as normal.\n<code>core</code> Used to tell an operation whether it should exit …\n<code>core</code> Types whose values can be duplicated simply by …\n<code>core</code> Derive macro generating an impl of the trait <code>Copy</code>.\nA managed dynamic collection of single-thread <code>CoroWorker</code> …\nA future that alternates between <code>Ready</code> and <code>Pending</code> status …\nRepresents a single-thread stackless coroutine worker.\n<code>core</code> The trait implemented by builtin coroutine types.\n<code>core</code> The result of a coroutine resumption.\nAlias of <strong>positive</strong> angle direction.\n<code>alloc</code> A clone-on-write smart pointer.\nThe <code>Crockford</code> <code>Base32</code> encoding, case-insensitive, remaps …\nCross-device or cross-filesystem (hard) link or rename.\n<code>crossterm</code>’s UI backend service.\nA reference to the current directory, i.e., <code>.</code>.\nA marker object representing the current instance of a …\nA guard that temporarily sets a global current pointer for …\n6 Cyan\n📏 A repeating cycle defined by a fundamental period.\n📏 A cycle that repeats a fixed number of times.\nIndicates whether the <code>d</code> field is enabled.\nSeek to next data (for sparse files).\nThe input data was incorrect in some way.\nReturns the compile-time “default value” for a type.\nApproximate number of significant digits in base 10.\nCode to set dim effect.\nCode to unset bold and dim effects.\nDirect I/O (no buffering).\nCreate a directory if one doesn’t exist.\nDirectory (S_IFDIR in POSIX).\nCode to disable the alternative screen.\nSpecifies the file extension used for shared libraries on …\nSpecifies the filename prefix used for shared libraries on …\nSpecifies the filename suffix used for shared libraries on …\nSynchronized I/O data integrity (wait for data writes …\nDuplicate file descriptor.\nDuplicate FD with CLOSE_ON_EXEC.\nA data-related error.\nA data-related error.\n📦 An abstract <em>array</em> data type.\n📦 An abstract <em>collection</em> data type.\n📦 An abstract <em>double-ended queue</em> data type.\n📦 An abstract <em>double-ended stack</em> data type.\n🚩+ A data-related composite error.\nU+0010\n🚩+ An error composite of <code>NotEnoughElements</code> + …\n🚩 The value has surpassed the bounds of the …\nThe value has surpassed the bounds of the representable …\nThe value has surpassed the bounds of the representable …\nThe value has surpassed the bounds of the representable …\n📦 An abstract <em>queue</em> data type.\nCommon unsafe trait for enumerating untagged <em>raw data </em>…\n64-bit <em>raw</em> data, restricted to <code>Copy</code> variants.\nCommon unsafe trait for enumerating <code>Copy</code>-constrained …\n⚖️ A data-related result.\n📦 An abstract <em>stack</em> data type.\nCommon trait for enumerating <em>data types</em>.\n64-bit data <em>type</em>\n64-bit data <em>type</em>, restricted to <code>Copy</code> variants.\n64-bit data <em>type</em>, restricted to <code>Copy</code> variants, with extra <code>T</code>…\n64-bit data <em>type</em>, with extra <code>T</code>.\nCommon trait for enumerating <code>Copy</code>-constrained <em>data types</em>.\nCommon trait for enumerating <em>data values</em>.\n64-bit data <em>value</em>.\n64-bit data <em>value</em>, restricted to <code>Copy</code> variants.\n64-bit data <em>value</em>, restricted to <code>Copy</code> variants, with extra …\n64-bit data <em>value</em>, with extra <code>V</code>.\nCommon trait for enumerating <code>Copy</code>-constrained <em>data values</em>.\nDeadlock (avoided).\n🖹 <code>core</code> <code>?</code> formatting.\nThe “debug” level.\nCorresponds to the <code>Debug</code> log level.\n🖹 <code>core</code> <code>?</code> formatting.\n🖹 <code>core</code> A struct to help with [<code>Debug</code>] implementations.\n🖹 <code>core</code> A struct to help with [<code>Debug</code>] implementations.\n🖹 <code>core</code> A struct to help with [<code>Debug</code>] implementations.\n🖹 <code>core</code> A struct to help with [<code>Debug</code>] implementations.\n🖹 <code>core</code> A struct to help with [<code>Debug</code>] implementations.\n10^1\n10^-1\nA type that can be decoded from an I/O reader.\n<code>core</code> A trait for giving a type a useful default value.\n<code>core</code> Derive macro generating an impl of the trait <code>Default</code>.\nAlias of <code>Delete</code>.\nU+007F\nDelete key.\nThe user has not yet granted or denied the permission.\n<code>core</code> Used for immutable dereferencing operations, like <code>*v</code>.\n<code>core</code> Used for mutable dereferencing operations, like in …\n📦 A static double-ended queue and stack backed by an …\n🔄 An iterator over <code>Destaque</code> elements.\n📦 A <code>Destaque</code> with an 8-bit index size.\nU+0014\nU+0011\nU+0013\nU+0012\nDevice namespace prefix, e.g., <code>\\\\.\\COM42</code>.\nU+0030\nU+0031\nU+0032\nU+0033\nU+0034\nU+0035\nU+0036\nU+0037\nU+0038\nU+0039\n<code>std</code> A builder used to create directories in various …\n<code>std</code> Entries returned by the ReadDir iterator.\nA non-empty directory was specified where an empty …\nCapturing a backtrace has been disabled through either the …\nThe <strong>channel</strong>’s sending half has become disconnected, and …\nThe <strong>channel</strong>’s sending half has become disconnected, and …\nThis <code>sync_channel</code>’s receiving half has disconnected, so …\n<code>core</code> Opaque type representing the discriminant of an enum.\nPrefix <code>C:</code> for the given disk drive.\n🖹 <code>core</code> Format trait for an empty format, <code>{}</code>.\n📐 A separation between two locations in <code>D</code>-dimensional …\nDithering methods of error diffusion.\n<code>core</code> The division operator <code>/</code>.\n<code>core</code> The division assignment operator <code>/=</code>.\n𝟙 Faster divisor for division and modulo operations.\nU+0024\nDown arrow key.\n<code>core</code> Custom code within the destructor.\n📦 A static array for storing DSTs.\n📦 A statically allocated buffer for storing DSTs with …\n📦 Represents the backing buffer for storing dynamically …\n📦 A statically allocated FIFO queue of DSTs.\n🔄 An iterator over the elements of a <code>DstQueue</code>.\n🔄 A mutable iterator over the elements of a <code>DstQueue</code>.\nHandle returned by <code>DstQueue::pop</code> (does the actual pop on …\n📦 A statically allocated FIFO queue of DSTs with …\n📦 A statically allocated LIFO stack of DSTs.\n🔄 An iterator over the elements of a <code>DstStack</code>.\n🔄 A mutable iterator over the elements of a <code>DstStack</code>.\n📦 A statically allocated LIFO stack of DSTs with …\n📦 A statically allocated DST value.\n📦 A statically allocated DST value with pointer …\n📦 A dynamically allocated buffer for storing DSTs with …\n🕘 <code>core</code> A span of time, with <code>u64</code> seconds and <code>u32</code> …\n🕘🚩 <code>core</code> Error returned from converting …\n$ e $ (A001113) <code>≈ 2.71828182…</code> <em>The Euler number or </em>…\n“Argument list too long.”\n“Permission denied.”\n“Resource temporarily unavailable.”\n“Bad file descriptor.”\n“Device or resource busy.”\n“No child processes.”\nEcho input characters.\nIf <code>ECHO</code> is also set, terminal special characters other …\nIf <code>ICANON</code> is also set, the <code>ERASE</code> character erases the …\nIf <code>ICANON</code> is also set, the <code>KILL</code> character erases the …\nIf <code>ICANON</code> is also set, <code>KILL</code> is echoed by erasing each …\nIf <code>ICANON</code> is also set, echo the <code>NL</code> character even if <code>ECHO</code> …\nIf <code>ICANON</code> and <code>ECHO</code> are also set, characters are printed as …\n“Numerical argument out of domain.”\n“File exists.”\n“Bad address.”\n“File too large.”\n$ γ $ (A001620) <code>≈ 0.57721566…</code> <em>Gamma, or the </em>…\n“Interrupted system call.”\n“Invalid argument.”\n“Input/output error.”\n“Is a directory.”\n“Too many open files.”\n“Too many links.”\nCode to enable the alternative screen.\nSeek from end of file.\n“Too many open files in system.”\n“No such device.”\n“No such file or directory.”\n“Exec format error.”\n“Cannot allocate memory.”\n“No space left on device.”\n“Block device required.”\n“Not a directory.”\n“Inappropriate ioctl for device.”\n“No such device or address.”\n“Operation not permitted.”\n“Broken pipe.”\nMachine epsilon value. This is the smallest difference …\n“Numerical result out of range.”\nCode to erase the entire line.\nCode to erase from the cursor to the end of the line.\nCode to erase from the cursor to the start of the line.\nCode to erase the entire screen.\nCode to erase from the cursor to the end of the screen.\nCode to erase from the cursor to the start of the screen.\n“Read-only file system.”\nAlias of <code>FAILURE</code>.\n“Illegal seek.”\n“No such process.”\n“Text file busy.”\n“Operation would block.”\nFail if file exists (when used with CREAT).\n“Invalid cross-device link.”\nSpecifies the file extension, if any, used for executable …\nSpecifies the filename suffix used for executable binaries …\nExponent bias for representing both positive and negative …\nNumber of bits used to represent the exponent.\nenable “LINEMODE”; useful with high latency links\nEjects a removable media disk (found on some keyboards, …\nThe element type of the collection.\n🚩 The requested element has not been found.\nThe requested element has not been found.\nThe requested element has not been found.\nThere are not enough elements for the operation.\nThis <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …\nRepresents an empty chunk with no elements\nValue being parsed is empty.\nA type that can be encoded into an I/O writer.\nA type that can compute the size of its encoded form …\nThe primary mode for data encoding.\nEnd key.\nU+0019\nU+0003\nU+0004\nU+0017\nU+0005\nEnter key.\n🌐 A namespaced wrapper for <code>std::env</code> functions and …\n<code>core</code> Trait for comparisons corresponding to equivalence …\n<code>core</code> Derive macro generating an impl of the trait <code>Eq</code>.\nAn ordering where a compared value is equal to another.\nU+003D\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nThe associated error which can be returned from parsing.\n<code>core</code> A trait representing the basic expectations for error …\nThe “error” level.\nCorresponds to the <code>Error</code> log level.\nAn error occurred while querying the permission state.\nThe type returned in the event of a conversion error.\nThe type returned in the event of a conversion error.\nAlias of <code>Escape</code>.\nU+001B\nEscape key.\nRepresents mouse, touch, or pen buttons.\nRepresents the state of a button.\nRepresents a keyboard event.\n🛡️ An FFI-safe version of <code>EventKey</code>.\nRepresents a basic mouse event.\nRepresents a pointer event (mouse, touch, or pen).\nEnum representing the type of pointer.\nThe time at which the event actually occurs, stored as …\nRepresents a mouse wheel event.\n10^18\n2^60.\nU+0021\nAn exclusive bound.\nExecutable file is busy.\n🌐 Extension trait providing convenience methods for <code>T:</code>…\n📦 Extension trait providing convenience methods for …\n🌐 Extension trait providing additional methods for …\nExtension trait providing additional methods for <code>T:</code><code>Error</code>.\n𝟙 🌐 Extension trait for floating-point types. …\nExtension trait providing additional methods for <code>Future</code>s.\n🌐 Extension trait providing additional methods for …\n🌐 Extension trait for type memory information and …\n⚖️ Extension trait providing additional methods for …\n⚖️ Extension trait providing additional methods for …\n🌐 Extension trait providing additional methods for <code>Path</code> …\n🌐 Extension trait providing additional methods for …\n⚖️ Extension trait providing additional methods for …\n🌐 Extension trait providing additional methods for <code>&amp;[T]</code>.\n🌐 Extension trait providing additional methods for …\n𝐓 Extension trait providing additional methods for <code>&amp;str</code>.\n𝐓 Extension trait providing additional methods for …\n🌐 Extension trait providing additional methods for …\n📦 Extension trait providing additional methods for <code>Vec</code>.\n📐 An orthogonal extension in <code>D</code>-space without a …\nExtra <em>data values</em>.\nExtra <em>data values</em>.\nExtra <em>data values</em>.\nExtra <em>data values</em>.\nA custom <em>data type</em> extension.\nA custom <em>data type</em> extension.\nA custom <em>data type</em> extension.\nA custom <em>data type</em> extension.\nA function key.\nFunction keys (F1-F48).\n32-bit floating-point number\n32-bit floating-point number\n32-bit floating-point number\n32-bit floating-point number\n32-bit floating-point number\n32-bit floating-point number\n32-bit floating-point number\n32-bit floating-point number\n32-bit floating-point number\n64-bit floating-point number\n64-bit floating-point number\n64-bit floating-point number\n64-bit floating-point number\n64-bit floating-point number\n64-bit floating-point number\n64-bit floating-point number\n64-bit floating-point number\n64-bit floating-point number\nGeneral error.\nThe canonical <code>ExitCode</code> for unsuccessful termination on …\n<code>?std</code> The family of the operating system.\n<code>FFDLY</code>: Form-feed delay type 0.\n<code>FFDLY</code>: Form-feed delay type 1.\nForm feed delay mask. Values are <code>FF0</code> or <code>FF1</code>.\nFIFO/pipe (S_IFIFO in POSIX).\nRegular file (S_IFREG in POSIX).\nSet non-blocking I/O mode if the argument is non-zero.\nGet the number of bytes in the input buffer.\nOutput is being flushed.\n🅵 A simple 3x3 bitmap font.\n🅵 A simple 3x5 bitmap font.\n🅵 A simple 5x6 bitmap font.\n$ 1/\\sqrt[\\small 3]{3} = …\n$ 1/φ = φ-1 $ (A094214) <code>≈ 0.61803398…</code> <em>The reciprocal </em>…\n$ 1/π = 2/τ $ (A049541) <code>≈ 0.31830988…</code>\n$ 1/\\sqrt{2} = \\sqrt{1/2} $ (A010503, wikipedia) …\n$ 1/\\sqrt{2π} = 1/\\sqrt{τ} $ (A231863) <code>≈ 0.39894228…</code>\n$ 1/\\sqrt{3} = \\sqrt{1/3} $ (A020760, <code>≈ 0.57735026…</code>\n$ 1/\\sqrt{φ} = \\sqrt{φ/φ^2} = \\sqrt{φ^2-2} $ (A197762) …\n$ 1/\\sqrt{π} = 1/\\sqrt{τ/2} $ (A087197) <code>≈ 0.56418958…</code>\n$ 1/\\sqrt{τ} = 1/\\sqrt{2π} $ (A231863) <code>≈ 0.39894228…</code>\n$ 1/τ = 1/2π $ (A086201) <code>≈ 0.15915494…</code>\n$ 2/π $ (A060294) <code>≈ 0.63661977…</code> <em>Buffon’s constant</em>.\n$ 2/\\sqrt{π} $ (A190732) <code>≈ 1.12837916…</code>\n$ 2/\\sqrt{τ} = \\sqrt{2/π} $ (A076668) <code>≈ 0.79788456…</code>\n$ 2/τ = 1/π $ (A049541) <code>≈ 0.31830988…</code>\n$ 360/τ = 180/π $ (A072097) <code>≈ 57.2957795…</code>\n$ π/2 = τ/4 = 90\\degree $ (A019669) <code>≈ 1.57079632…</code>\n$ π/3 = τ/6 = 60\\degree $ (A019670) <code>≈ 1.04719755…</code>\n$ π/4 = τ/8 = 45\\degree $ (A003881) <code>≈ 0.78539816…</code>\n$ π/6 = τ/12 = 30\\degree $ (A019673) <code>≈ 0.52359877…</code>\n$ π/8 = τ/16 = 22.5\\degree $ (A019675) <code>≈ 0.39269908…</code>\n$ τ/12 = π/6 = 30\\degree $ (A019673) <code>≈ 0.52359877…</code>\n$ τ/16 = π/8 = 22.5\\degree $ (A019675) <code>≈ 0.39269908…</code>\n$ τ/2 = π = 180\\degree $ (A000796) <code>≈ 3.14159265…</code>\n$ τ/24 = π/12 = 15\\degree $ (A019679) <code>≈ 0.26179938…</code>\n$ τ/3  = 2π/3 = 120\\degree $ (A019693) <code>≈ 2.09439510…</code>\n$ τ/360 = π/180 = 1\\degree $ <em>arc degree</em> (A019685, …\n$ τ/4 = π/2 = 90\\degree $ (A019693) <code>≈ 1.57079632…</code>\n$ τ/5 = 2π/5 = 72\\degree $ (A019694) <code>≈ 1.25663706…</code>\n$ τ/6 = π/3 = 60\\degree $ (A019670) <code>≈ 1.04719755…</code>\n$ τ/72 = π/36 = 5\\degree $ <code>≈ 0.08726646…</code>\n$ τ/8 = π/4 = 45\\degree $ (A003881) <code>≈ 0.78539816…</code>\n$ τ/9 = 2π/9 = 40\\degree $ (A019696) <code>≈ 0.69813170…</code>\nFloyd-Steinberg error diffusion dithering.\n🚩 A failed conversion between two error types.\nA type-level logical <em>false</em>.\nFast-forwards through media.\nRepresents a fat pointer with separate data and metadata …\n10^-15\n<code>std</code> An object providing access to an open file on the …\n<code>std</code> Metadata information about a file.\n<code>std</code> Options and flags which can be used to configure how a …\n<code>std</code> Representation of the various permissions on a file.\n<code>std</code> Representation of the various timestamps on a file.\nFile larger than allowed or supported.\n<code>std</code> Represents a type of file with accessors for each file …\nLoop in the filesystem or IO subsystem; often, too many …\n𝟙 🌐 Provides comprehensive floating-point operations …\n<code>core</code> A classification of floating point numbers.\n𝟙 🌐 Extension trait for floating-point types. …\n𝐓 🌐 A string formatting namespace.\n🖹 <code>core</code> Possible alignments returned by <code>Formatter::align</code>.\n🖹 <code>core</code> Represents a safely precompiled version of a …\n🚩🖹 <code>core</code> The error type which is returned from …\nA <code>core::fmt::Error</code>.\n⚖️ 🖹 The type returned by formatter methods.\n🖹 <code>core</code> Writing or formatting into Unicode-accepting …\n<code>core</code> The version of the call operator that takes an …\n<code>core</code> The version of the call operator that takes a mutable …\n<code>core</code> The version of the call operator that takes a …\nU+000C\n🖹 <code>core</code> Configuration for formatting.\n𝟙 🌐 Provides comprehensive fractional operations on <code>T</code>…\nEtymology\n<code>core</code> Used to do value-to-value conversions while consuming …\n𝐓 <code>core</code> Parse a value from a string.\n🌐 Filesystem-related operations.\n🌐 A more featureful wrapper over <code>PathBuf</code>.\nThe data could not be sent on the <code>sync_channel</code> because it …\nFull quality palette construction.\n= 0º = 360º (1τ = 2π), a full turn, or no turn.\nU+002E\n<code>core</code> An asynchronous computation obtained by use of <code>async</code>.\n<code>core</code> A future which never resolves, representing a …\n<code>core</code> A Future that wraps a function returning [<code>TaskPoll</code>].\n<code>core</code> A future that is immediately ready with a value.\nGrayscale 1bpp.\nGrayscale 2bpp.\nGrayscale 4bpp.\nGrayscale 8bpp.\nGA grayscale 16bpp.\nGet file descriptor flags.\nGet file status flags.\nGet record locking info.\nGet owner’s process ID.\nGet pipe buffer size.\nGet SIGIO/SIGURG signals.\nGet seals from file.\nCode to set the foreground color to green.\nCode to set the background color to green.\nGroup has execute permission (<code>S_IXGRP</code> in POSIX).\nGroup has read permission (<code>S_IRGRP</code> in POSIX).\nGroup has write permission (<code>S_IWGRP</code> in POSIX).\nGamma correction curves.\n𝟙 ⚖️ A return type for the calculated GCD and the …\nAccess to device geolocation data.\n2^30.\n10^9\n<code>alloc</code> A memory allocator that can be registered as the …\nThe permission has been granted by the user.\n𝐓 Common trait for EGC types.\n𝐓 An EGC backed by a <code>StringNonul</code>.\n𝐓 An EGC backed by a <code>String</code>.\nAn EGC backed by an <code>StringU8</code>.\nU+0060\nAn ordering where a compared value is greater than another.\nU+003E\n2 Green\n🧪 Access to gyroscope sensor data.\nIndicates whether the <code>h</code> field is enabled.\nPermits generous deviation; suitable for less precise …\nSeek to next hole (for sparse files).\nLower modem control lines after last process closes the …\nIndicates whether the 6 fields from <code>h</code> to <code>ns</code> are enabled.\nIndicates whether the 3 fields from <code>h</code> to <code>s</code> are enabled.\n<code>core</code> A hashable type.\n<code>core</code> Derive macro generating an impl of the trait <code>Hash</code>.\n📦 <code>std?</code> An unordered hash map implemented with quadratic …\n📦 <code>std?</code> A view into a single entry in a map, which may …\nA <code>HashMap</code> using a default Fx hasher.\nThe <code>HashMap</code> in the standard library.\n<code>std?</code> An unordered hash set implemented as a <code>HashMap</code> where …\nA <code>HashSet</code> using a default Fx hasher.\nThe <code>HashSet</code> in the standard library.\n<code>core</code> A trait for hashing an arbitrary stream of bytes.\nType of the hasher that will be created.\n<code>core</code> A trait for creating instances of <code>Hasher</code>.\n<code>core</code> Create a default [<code>HasherBuild</code>] instance for <code>T:</code><code>Hasher</code><code>+</code>…\nA builder for default Fnv hashers.\nA builder for default Fx hashers.\nA Fowler–Noll–Vo hasher, implemented for u32, u64, u128…\nA hashing algorithm used in the Rustc compiler, …\nA fast 64-bit non-cryptographic hash algorithm.\nThe first element of the tuple, at index 0.\n10^2\nHigh quality palette construction.\nHigh color.\nHome key.\nAllows attaching operations or side effects to a value …\nThe remote host is not reachable.\nU+002D\n16-bit signed integer\n16-bit signed integer\n16-bit signed integer\n16-bit signed integer\n16-bit signed integer\n16-bit signed integer\n16-bit signed integer\n16-bit signed integer\n16-bit signed integer\n32-bit signed integer\n32-bit signed integer\n32-bit signed integer\n32-bit signed integer\n32-bit signed integer\n32-bit signed integer\n32-bit signed integer\n32-bit signed integer\n32-bit signed integer\n64-bit signed integer\n64-bit signed integer\n64-bit signed integer\n64-bit signed integer\n64-bit signed integer\n64-bit signed integer\n64-bit signed integer\n64-bit signed integer\n64-bit signed integer\n8-bit signed integer\n8-bit signed integer\n8-bit signed integer\n8-bit signed integer\n8-bit signed integer\n8-bit signed integer\n8-bit signed integer\n8-bit signed integer\n8-bit signed integer\nEnable canonical mode (erase and kill processing).\nTranslate CR to NL (carriage return to newline) on input …\nEnable implementation-defined input processing.\nIgnore BREAK condition on input.\nIgnore <code>CR</code> (carriage return) on input.\nIgnore framing errors and parity errors.\nRing bell when input queue is full (not in POSIX).\nInfinity (∞).\nInitial value for <code>WasmAlloc</code>.\nTranslate <code>NL</code> to <code>CR</code> on input.\nEnable input parity checking.\nUsed when an invalid exit code would have been generated.\nInvalid argument to exit.\nReturns the number of invalid values.\nReturns the number of invalid values.\nReturns the number of invalid values.\nReturns the number of invalid values.\nReturns the number of invalid values.\nReturns the number of invalid values.\nReturns the number of invalid values.\nReturns the number of invalid values.\nReturns the number of invalid values.\nReturns the number of invalid values.\nReturns the number of invalid values.\nReturns the number of invalid values.\nCode to set inverse effect.\nCode to unset inverse effect.\nAn error occurred while doing I/O on some file.\nEnable signals.\nStrip off eighth bit.\nIndicates whether <em>only</em> the 6 fields from <code>h</code> to <code>ns</code> are …\nIndicates whether <em>only</em> the 3 fields from <code>h</code> to <code>s</code> are …\nIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.\nIndicates whether <em>only</em> the 3 fields from <code>y</code> to <code>d</code> are …\nIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are …\nIndicates whether <em>only</em> the 6 fields from <code>y</code> to <code>s</code> are …\nCode to set italic effect.\nCode to unset italic and fraktur effects.\nMap uppercase characters to lowercase on input (not in …\nInput is UTF8. (not in POSIX)\n(XSI) Typing any character will restart stopped output.\nEnable XON/XOFF flow control on input.\nEnable XON/XOFF flow control on output.\nA unique identifier based on a pinned stack-allocated …\nA unique identifier based on a pinned heap-allocated …\n🚩+ An image-related error.\n⚖️ An image-related result.\nThe operation was partially successful and needs to be …\nAn inclusive bound.\nThe given bounds are not compatible.\n<code>core</code> Used for indexing operations (<code>container[index]</code>) in …\n<code>core</code> Used for indexing operations (<code>container[index]</code>) in …\n🚩 The given index is out of bounds.\nThe given index is out of bounds.\nThe given index is out of bounds.\n🚩 <code>core</code> The error type for errors that can never happen.\nPositive or negative infinity, which often results from …\nThe “info” level.\nCorresponds to the <code>Info</code> log level.\nU+001C\nU+001F\nU+001D\nU+001E\nThe inner type for the bit representation.\nInner type of the buffer\nThe internal representation of this numeric type.\nAlias of <code>Insert</code>.\nInsert key.\n𝟙 🌐 Provides comprehensive integer operations on <code>T</code>, …\nThis operation was interrupted.\n📏 A range of values with <code>lower</code> and <code>upper</code> <code>Bound</code>s.\n<code>core</code> A value-to-value conversion that consumes the input …\n<code>core</code> Conversion into a <code>Future</code>.\nWhich kind of future are we turning this into?\nWhich kind of iterator are we turning this into?\nIntrospection core trait\nAn invalid value was received for the given type or …\n🚩 The given axis has an invalid length.\nThe given axis has an invalid length.\n🚩 An invalid given character was found.\nAn invalid given character was found.\nData not valid for the operation were encountered.\nContains an invalid digit in its context.\nA filename was invalid.\nInvalid image size, with an optional width and height.\nA parameter was incorrect.\nInvalid magic number\nInvalid pixel value.\nThe worker script provided was invalid.\n🚩+ 𝐓 An error composite of <code>InvalidChar</code> + <code>InvalidUtf8</code> …\n🚩 Invalid Utf-8 found while interpreting a byte …\nThe input was not a valid UTF-8 sequence.\nInvalid Utf-8 found while interpreting a byte sequence.\n🌐 I/O-related operations.\nAn I/O-related error.\nAn I/O error.\nAn io error.\n<code>?std</code> A type of <code>Read</code>er which has an internal buffer.\n<code>?std</code> Adds buffering to any reader.\n<code>?std</code> Wraps a writer and buffers its output.\n<code>?std</code> An iterator over <code>u8</code> values of a reader.\n<code>?std</code> Adapter to chain together two readers.\n<code>?std</code> Wraps an in-memory buffer and provides it with an […\n<code>std</code> Ignores any data written via [<code>IoWrite</code>], and read via […\n🚩+ <code>?std</code> Error type for [<code>IoRead</code>], [<code>IoWrite</code>], [<code>IoSeek</code>] …\nAn <code>I/O</code> error.\n🚩+ <code>?std</code> A list specifying general categories of I/O …\n🚩 <code>std</code> An error returned by [<code>IoBufWriter::into_inner</code>]\n<code>?std</code> Like <code>BufWriter</code>, but flushing whenever a newline (<code>0x0a</code>…\n<code>std</code> An iterator over the lines of an instance of [<code>IoBufRead</code>…\n<code>?std</code> Allows for reading bytes from a source.\n<code>std</code> A reader which yields one byte over and over and over …\n⚖️ <code>?std</code> A specialized <code>Result</code> type for I/O operations.\n<code>?std</code> Provides a cursor which can be moved within a stream …\n<code>std</code> A writer which will move data into the void.\n<code>std</code> A buffer type used with <code>IoWrite::write_vectored</code>.\n<code>std</code> A buffer type used with <code>IoRead::read_vectored</code>.\n<code>std</code> An iterator over the contents of an instance of …\n<code>?std</code> Reader adapter which limits the bytes read from an …\n<code>?std</code> A trait for objects which are byte-oriented sinks.\n<code>core</code> An IP address, either IPv4 or IPv6.\n<code>core</code> An IPv4 address.\n<code>core</code> An IPv6 address.\nThe filesystem object is, unexpectedly, a directory.\n64-bit isize\n64-bit isize\n64-bit isize\n64-bit isize\n64-bit isize\n64-bit isize\n64-bit isize\n64-bit isize\n<strong>ISO Level 3 Shift</strong> key (commonly known as <strong>AltGr</strong>).\n<strong>ISO Level 5 Shift</strong> key (used in some advanced keyboard …\nThe type of the elements being iterated over.\nThe type of the elements being iterated over.\n🌐 🔄 Iterator-related namespaced operations.\nReturned iterator over socket addresses which this type …\n🔄 <code>std</code> Iterates over the arguments of a process, …\n🔄 <code>std</code> Iterates over the arguments of a process, …\n🔄 <code>core</code> An iterator that links two iterators together, …\n🔄 <code>core</code> An iterator over the <code>char</code>s of a string slice.\n🔄 <code>core</code> An iterator that clones the elements of an …\n🔄 <code>core</code> An iterator that copies the elements of an …\n🔄 <code>core</code> An iterator that repeats endlessly.\n🔄 <code>std</code> Iterator over the entries in a directory.\n🔄 <code>core</code> An iterator that yields nothing.\n🔄 <code>core</code> An iterator that yields the current count and …\n🔄 <code>core</code> An iterator that filters the elements of <code>iter</code> …\n🔄 <code>core</code> An iterator that uses <code>f</code> to both filter and map …\n🔄 <code>core</code> An iterator that maps each element to an …\n🔄 <code>core</code> An iterator that flattens one level of nesting …\n🔄 <code>core</code> Creates an iterator where each iteration calls …\n🔄 <code>core</code> An iterator where each iteration calls a closure …\n🔄 <code>core</code> An iterator that yields <code>None</code> forever after the …\n🔄 <code>core</code> An iterator that calls a fn with a reference to …\n🔄 <code>core</code> An iterator that maps the values of iter with <code>f</code>.\n🔄 <code>core</code> An iterator that only accepts elements while …\n🔄 <code>core</code> An iterator that yields an element exactly once.\n🔄 <code>core</code> An iterator that yields a single element <code>A</code> by …\n🔄 <code>std</code> An iterator over the [<code>IterPathComponents</code>] of a …\n🔄 <code>std</code> An iterator over <code>Path</code> and its ancestors.\n🔄 <code>std</code> An iterator over the Components of a Path.\n🔄 <code>core</code> An iterator with a <code>peek()</code> that returns an …\n🔄 <code>core</code> An iterator that repeats an element endlessly.\n🔄 <code>core</code> An iterator that repeats an element an exact …\n🔄 <code>core</code> An iterator that endlessly repeats <code>A</code> by calling …\n🔄 <code>core</code> A double-ended iterator with the direction …\n🔄 <code>core</code> An iterator to maintain state while iterating …\n🔄 <code>core</code> An iterator that skips over <code>n</code> elements of <code>iter</code>.\n🔄 <code>core</code> An iterator that rejects elements while <code>predicate</code>…\n🔄 <code>std</code> An iterator that splits an environment variable …\n🔄 <code>core</code> An iterator for stepping iterators by a custom …\n🔄 <code>core</code> An iterator where each successive item is …\n🔄 <code>core</code> An iterator that only iterates over the first <code>n</code> …\n🔄 <code>core</code> An iterator that only accepts elements while …\n🔄 <code>std</code> An iterator over a snapshot of the environment …\n🔄 <code>std</code> An iterator over a snapshot of the environment …\n🔄 <code>core</code> An iterator that iterates two other iterators …\n🔄 <code>core</code> A trait for dealing with iterators.\n🔄 <code>core</code> An iterator able to yield elements from both …\n🔄 <code>core</code> An iterator that knows its exact length.\n🔄 <code>core</code> Extend a collection with the contents of an …\n🔄 <code>core</code> Conversion from an <code>Iterator</code>.\n🔄 <code>core</code> An iterator that always continues to yield <code>None</code> …\n🔄 <code>core</code> Conversion into an <code>Iterator</code>.\n🔄 <code>itertools</code> An iterator that can be unzipped into …\n🔄 <code>itertools</code> An iterator that allows peeking at an …\n🔄 <code>core</code> Represents types that can be created by …\n🔄 <code>core</code> Represents types that can be created by summing …\n🔄 <code>itertools</code> An <code>Iterator</code> blanket impl providing extra …\nJarvis, Judice &amp; Ninke (JaJuNi) error diffusion dithering.\nThe job was not found.\n🚩 <code>std</code> Returned from [Env::join_paths][…\n🌐 Javascript-related operations.\n🌐 Javascript Console.\nA high-resolution timestamp based on JavaScript’s …\nText Metrics.\nFull Text Metrics.\nA handle to a JavaScript timeout.\nA JavaScript value for FFI communication.\nKeyboard codes, used in <code>EventKey</code>.\nAlphanumeric (A-Z, 0-9) keys.\n🚩 The key already exists.\nThe key already exists.\nFires when a key is pressed down.\n🛡️ An FFI-safe version of <code>Key</code>, used in <code>EventKeyFfi</code>.\nMedia key codes.\nModifier key codes (when pressed by themselves)\nA bitfield of keys modifiers (Shift, Ctrl…) + extra …\nKeypad keys.\nRepresents the state of a <code>Key</code>.\nFires when a key is released.\n2^10.\n10^3\nRepresents the specific kind of error, if applicable.\nA type representing the kind of <code>Self</code>.\nLarge file support.\nThe length of this array.\nThe number of active (non-<code>()</code> type) variants.\n🚩+ <code>Linux</code> <code>sys/errno.h</code> constants.\n⚖️ Standard exit codes for Linux processes\n<code>Linux</code> Standard file descriptor numbers.\n<code>Linux</code> File descriptor commands (for <code>fcntl</code>).\nLinux <code>ioctl</code> constants.\n<code>Linux</code> file creation and status flags.\n<code>Linux</code> Seek commands (for <code>lseek</code>).\nLinux flag constants for <code>LinuxSigaction</code>.\nLinux standard signals constants.\nLinux <code>sys/syscall.h</code> constants for the current compilation …\n<code>Linux</code> File mode and permission bits.\n<code>LinuxTermios</code> control flags.\n<code>LinuxTermios</code> input flags.\n<code>LinuxTermios</code> local flags.\n<code>LinuxTermios</code> output flags.\nTrue if the system’s architecture is little-endian.\nln(10) (A002392) <code>≈ 2.30258509…</code>\nln(2) (A002162) <code>≈ 0.69314718…</code>\nAn IPv4 address with the address pointing to localhost: …\nAn IPv6 address representing localhost: <code>::1</code>.\nlog10(2) (A007524) <code>≈ 0.30102999…</code>\nlog10(e) (A002285) <code>≈ 0.43429448…</code>\nlog2(10) (A020862) <code>≈ 3.32192809…</code>\n$ \\log_2{e} $ (A007525) <code>≈ 1.44269504…</code>\nAllows for minimal deviation; use for high precision …\nLaunches a media-related application.\n<code>core</code> A value which is initialized on the first access.\n<code>std</code> A value which is initialized on the first access.\nOn the left side of the keyboard.\nLeft arrow key.\nLeft mouse button.\nIndication that contents should be left-aligned.\nLeft <strong>Alt</strong> key.\nLeft <strong>Control</strong> (Ctrl) key.\nU+007B\nLeft <strong>Hyper</strong> key (historically used in some Unix systems).\nLeft <strong>Meta</strong> key (used in some Unix-based systems, overlaps …\nU+0028\nLeft <strong>Shift</strong> key.\nU+005B\nLeft <strong>Super</strong> key (Windows key on Windows, Command ⌘ on …\nAn ordering where a compared value is less than another.\nU+003C\n🎲 A 16-bit LCG PRNG.\nPerceptual lightness (L*).\nU+000A\nU+000B\nLinearized perceptual lightness (L* in linear space).\n📦 <code>alloc</code> A doubly-linked list with owned nodes.\n🌐 Linux-related operations.\n🚩+ Represents a Linux-related error.\n⚖️ The return type for Linux-related functions that …\nExamine and change a signal action.\nAdditional information about a signal.\nA set of linux signals.\nFile status structure matching libc’s stat (man 2 stat)\nRepresents the <code>termios</code> structure from libc, used to …\nRepresents the <code>timespec</code> structure from libc. Time in …\n⚖️ <code>std</code> A type alias for the result of a lock method …\n🌐 Log-related operations.\nConfiguration for a logger.\n<code>log</code> An enum representing the available verbosity levels of …\n<code>log</code> An enum representing the available verbosity level …\n<code>log</code> Metadata about a log message.\n<code>log</code> The “payload” of a log message.\n<code>log</code> A trait encapsulating the operations required of a …\n🚩 <code>log</code> Returned by [<code>set_logger</code>][crate::Log::set_logger] …\nCompression that retains all original data.\nCompression that sacrifices some data accuracy for reduced …\nLow quality palette construction.\nU+005F\n🖹 <code>core</code> <code>e</code> formatting.\n🖹 <code>core</code> <code>x</code> formatting.\nDecreases the audio volume.\nA generic luminance-like component.\nTransforming into luminosities before the comparison.\nGamma-encoded luma (Y′).\nPhysical luminance.\nIndicates whether the <code>m</code> field is enabled.\nCode to set the foreground color to magenta.\nCode to set the background color to magenta.\nNumber of significant digits in base 2.\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nMaximum valid exit code.\nMax supported seek type.\nThe highest unicode scalar that can be represented.\nLargest finite value.\nThe maximum possible duration.\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the maximum possible value.\nReturns the maximum possible value.\nReturns the maximum possible value.\nReturns the maximum possible value.\nReturns the maximum possible value.\nReturns the maximum possible value.\nReturns the maximum possible value.\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the maximum possible value.\nReturns the maximum possible value.\nReturns the maximum possible value.\nReturns the maximum possible value.\nReturns the maximum possible value.\nThe maximum duration.\nMaximum <em>x</em> for which 10<em>x</em> is normal.\nThe maximum arity supported by the current compilation …\nThe maximum arity supported by the current compilation …\nThe maximum number of generic type parameters in this enum.\nMaximum possible power of 2 exponent.\nThe statically resolved maximum log level.\nMaximum addressable memory in bytes.\nMaximum possible memory pages.\nAccommodates moderate deviation; balances precision and …\nThe duration of one microsecond.\nThe duration of one millisecond.\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe lowest unicode scalar that can be represented.\nSmallest finite value.\nThe minimum possible duration. Or the “most negative” …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the minimum possible value.\nReturns the minimum possible value.\nReturns the minimum possible value.\nReturns the minimum possible value.\nReturns the minimum possible value.\nReturns the minimum possible value.\nReturns the minimum possible value.\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the minimum possible value.\nReturns the minimum possible value.\nReturns the minimum possible value.\nReturns the minimum possible value.\nReturns the minimum possible value.\nMinimum <em>x</em> for which 10<em>x</em> is normal.\nThe rounded up byte size for this type.\nThe rounded up byte size for this type.\nOne greater than the minimum possible normal power of 2 …\nSmallest positive normal value.\nMisuse of shell builtins.\nIndicates whether the <code>mo</code> field is enabled.\nIndicates whether the <code>ms</code> field is enabled.\nIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.\n5 Magenta\n<code>core</code> A wrapper to inhibit compiler from automatically …")