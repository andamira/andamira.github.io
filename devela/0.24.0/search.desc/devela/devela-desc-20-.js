searchState.loadedDescShard("devela", 20, "Use this function to write 32 bits in native format to a …\nUse this function to write 64 bits in native format to a …\nUse this function to write 16 bits in native format to a …\nUse this function to write 32 bits in native format to a …\nUse this function to write 64 bits in native format to a …\nUse this function to write a byte to an SDL_RWops.\n&lt; BT.601 for SD content, BT.709 for HD content\n&lt; BT.601 (the default)\n&lt; BT.709\n&lt; Full range JPEG\n\\brief The formula used for converting between YUV and RGB\nUse this function to compute arc cosine of <code>x</code>.\n\\brief A type representing an atomic integer value.  It is …\n\\brief The type of function used for surface blitting …\nStart or stop a BLE scan on iOS and tvOS to pair Steam …\nClose a HID device.\n\\brief  A handle representing an open HID device\nCheck to see if devices may have been added or removed.\nhidapi info structure <em>/ /</em>* \\brief  Information about a …\nEnumerate the HID Devices.\nFinalize the HIDAPI library.\nFree an enumeration Linked List\nGet a feature report from a HID device.\nGet a string from a HID device, based on its string index.\nGet The Manufacturer String from a HID device.\nGet The Product String from a HID device.\nGet The Serial Number String from a HID device.\nInitialize the HIDAPI library.\nOpen a HID device using a Vendor ID (VID), Product ID …\nOpen a HID device by its path name.\nRead an Input report from a HID device.\nRead an Input report from a HID device with timeout.\nSend a Feature report to the device.\nSet the device handle to be non-blocking.\nWrite an Output report to a HID device.\nThis function converts a string between encodings in one …\nThe prototype for the application’s main() function\nInformation about the version of SDL in use.\n&lt; Implements SDL_JoystickSendEffect()\n&lt; Implements SDL_JoystickSetLED()\n&lt; Called when the player index is set\n\\brief A binarized alpha cutoff with a given integer value.\n\\brief A color key is applied.\n\\brief The default mode, a binarized alpha cutoff of 1.\n\\brief A binarized alpha cutoff with a given integer …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\n&lt; Called when the joystick state should be updated\n\\brief An enum denoting the specific type of contents …\nThe gamecontroller structure used to identify an SDL game …\n\\typedef SDL_Haptic\nThe joystick structure used to identify an SDL joystick\n\\brief SDL_sensor.h\n&lt; Audio device event data\n&lt; Duration of the attack.\n&lt; Duration of the attack.\n&lt; Duration of the attack.\n&lt; Duration of the attack.\n&lt; Level at the start of the attack.\n&lt; Level at the start of the attack.\n&lt; Level at the start of the attack.\n&lt; Level at the start of the attack.\n&lt; The joystick axis index\n&lt; The controller axis (SDL_GameControllerAxis)\n&lt; A mask of which axes are valid for this controller e.g. …\n&lt; The joystick trackball index\n\\brief A cutoff alpha value for binarization of the window …\n&lt; Buffer to hold entire audio data\n&lt; The mouse button index\n&lt; The joystick button index\n&lt; The controller button (SDL_GameControllerButton)\n&lt; Mouse button event data\n&lt; Button that triggers the effect.\n&lt; Button that triggers the effect.\n&lt; Button that triggers the effect.\n&lt; Button that triggers the effect.\n&lt; Button that triggers the effect.\n&lt; A mask of which buttons are valid for this controller …\n&lt; User defined button id (value returned via …\n&lt; Callback that feeds the audio device (NULL to use …\n&lt; Game Controller axis event data\n&lt; Game Controller button event data\n&lt; Game Controller device event data\n&lt; Position of the dead zone.\n&lt; Number of channels: 1 mono, 2 stereo\n&lt; Axes to use, minimum of one.\n&lt; 1 for single-click, 2 for double-click, etc.\n&lt; Read-only\nClose and free an allocated SDL_RWops structure.\n&lt; User defined event code\n&lt; Vertex color\n&lt; ::SDL_MessageBoxColorScheme, can be NULL to use system …\n&lt; Common event data\n&lt; Condition effect.\n&lt; Constant effect.\n&lt; A country, like “US” for America. Can be NULL.\n&lt; Game Controller sensor event data\n&lt; Game Controller touchpad event data\n&lt; Custom effect.\n&lt; Up to 3 values from the sensor, as defined in …\n&lt; Up to 6 values from the sensor - additional values can …\n&lt; Should contain channels*samples items.\n&lt; event dependent data\n&lt; event dependent data\n&lt; User defined data pointer\n&lt; event dependent data\n&lt; User defined data pointer\n&lt; Size of the dead zone; max 0xFFFF: whole axis-range when …\n&lt; Delay before starting the effect.\n&lt; Delay before starting the effect.\n&lt; Delay before starting the effect.\n&lt; Delay before starting the effect.\n&lt; Delay before starting the effect.\n&lt; Gesture event data\n&lt; The encoded direction.\n&lt; Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED …\n&lt; Direction of the effect.\n&lt; Direction of the effect.\n&lt; Direction of the effect - Not used ATM.\n&lt; Direction of the effect.\n&lt; Direction of the effect.\n&lt; The associated display index\n&lt; Display event data\n&lt; The X11 display\n&lt; Wayland display\n&lt; driver-specific data, initialize to 0\n&lt; Drag and drop event data\n&lt; Target audio format\n&lt; Normalized in the range -1…1\n&lt; Normalized in the range -1…1\n&lt; Text editing event data\n&lt; Extended text editing event data\n&lt; Wayland EGL window (native window)\n&lt; Ending strength level.\n&lt; ::SDL_DisplayEventID\n&lt; ::SDL_WindowEventID\n&lt; Duration of the fade.\n&lt; Duration of the fade.\n&lt; Duration of the fade.\n&lt; Duration of the fade.\n&lt; Level at the end of the fade.\n&lt; Level at the end of the fade.\n&lt; Level at the end of the fade.\n&lt; Level at the end of the fade.\n&lt; The file name, which should be freed with SDL_free(), is …\n&lt; Current audio conversion function\n&lt; NULL-terminated list of filter functions\n&lt; The index of the finger on the touchpad\n&lt; Read-only\n&lt; ::SDL_MessageBoxButtonFlags\n&lt; ::SDL_MessageBoxFlags\n&lt; Supported ::SDL_RendererFlags\n&lt; Audio data format\n&lt; Read-only\n&lt; pixel format\n&lt; DSP frequency – samples per second\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n&lt; Read-only\n&lt; height, in screen coordinates\n&lt; The joystick hat index\nAdditional information about the USB interface. Valid on …\nThe USB interface which this logical device represents.\n&lt; How soon it can be triggered again after button.\n&lt; How soon it can be triggered again after button.\n&lt; How soon it can be triggered again after button.\n&lt; How soon it can be triggered again after button.\n&lt; How soon it can be triggered again after button.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n&lt; zero if an output device, non-zero if a capture device.\n&lt; Joystick axis event data\n&lt; Joystick ball event data\n&lt; Joystick battery event data\n&lt; Joystick button event data\n&lt; Joystick device change event data\n&lt; Joystick hat event data\n&lt; Keyboard event data\n&lt; The key that was pressed or released\n&lt; A language name, like “en” for English.\n&lt; Control of the large controller motor.\n&lt; How fast to increase the force towards the negative side.\n&lt; Level when joystick is to the negative side; max 0xFFFF.\n&lt; Left/Right effect.\n&lt; Length of original audio buffer\n&lt; Length of converted audio buffer\n&lt; buffer must be len*len_mult big\n&lt; Given len, final size is len*len_ratio\n&lt; The length of selected editing text\n&lt; The length of selected editing text\n&lt; Duration of the effect.\n&lt; Duration of the effect.\n&lt; Duration of the effect.\n&lt; Duration of the effect.\n&lt; Duration of the effect in milliseconds.\n&lt; Duration of the effect.\n&lt; The joystick battery level\n&lt; Strength of the constant effect.\n&lt; Private\n&lt; Read-only\n&lt; Peak value; if negative, equivalent to 180 degrees extra …\n&lt; major version\nManufacturer String\n&lt; Private\n&lt; The maximum texture height\n&lt; The maximum texture width\n&lt; UTF-8 message text\n&lt; Gesture event data\n&lt; minor version\n&lt; current key modifiers\n\\brief The mode of these window-shape parameters.\n&lt; Mouse motion event data\n&lt; X coordinate, relative to window (added in 2.26.0)\n&lt; Y coordinate, relative to window (added in 2.26.0)\n&lt; driver dependent data, defined in SDL_syswm.h\n&lt; the name of the joystick\n&lt; The name of the renderer\n&lt; the number of axes on this joystick\n&lt; the number of buttons on this joystick\n&lt; Set to 1 if conversion possible\nPointer to the next device\n&lt; the number of hats on this joystick\n&lt; The number of available texture formats\n&lt; Mean value of the wave.\n&lt; Necessary for some compile environments\n&lt; unused\n\\brief Window-shape parameters.\n&lt; update version\nPlatform-specific device path\n&lt; Period of the wave.\n&lt; Sample periods.\n&lt; Periodic effect.\n&lt; Positive phase shift given by hundredth of a degree.\n&lt; Read-only\n&lt; Read-write\n&lt; Vertex position, in SDL_Renderer coordinates\n&lt; The amount scrolled horizontally, positive to the right …\n&lt; The amount scrolled vertically, positive away from the …\n&lt; Normalized in the range 0…1\n&lt; Normalized in the range 0…1\n&lt; the USB product ID of this joystick\nDevice Product ID\nProduct string\n&lt; Quit request event data\n&lt; Ramp effect.\n&lt; Rate conversion increment\nRead up to \\c maxnum objects each of size \\c size from the …\n&lt; Read-mostly\n&lt; refresh rate (or zero for unspecified)\nDevice Release Number in binary-coded decimal, also known …\n&lt; Non-zero if this is a key repeat\n&lt; How fast to increase the force towards the positive side.\n&lt; Level when joystick is to the positive side; max 0xFFFF.\n&lt; Audio buffer size in sample FRAMES (total samples …\n&lt; Amount of samples.\n&lt; SDL physical key code - see ::SDL_Scancode for details\nSeek to \\c offset relative to \\c whence, one of stdio’s …\n&lt; The type of the sensor, one of the values of …\n&lt; Sensor event data\nSerial Number\n&lt; DEPRECATED Wayland shell_surface (window manager handle)\n&lt; Audio buffer silence value (calculated)\nReturn the size of the file in this rwops, or -1 if unknown\n&lt; Audio buffer size in bytes (calculated)\n&lt; Control of the small controller motor.\n&lt; Source audio format\n&lt; The start cursor of selected editing text\n&lt; The start cursor of selected editing text\n&lt; Beginning strength level.\n&lt; ::SDL_PRESSED or ::SDL_RELEASED\n&lt; The current button state\n&lt; ::SDL_PRESSED or ::SDL_RELEASED\n&lt; ::SDL_PRESSED or ::SDL_RELEASED\n&lt; ::SDL_PRESSED or ::SDL_RELEASED\n&lt; Wayland surface\n&lt; SDL virtual key code - see ::SDL_Keycode for details\n&lt; System dependent window event data\n&lt; Normalized texture coordinates, if needed\n&lt; The editing text\n&lt; The editing text, which should be freed with SDL_free(), …\n&lt; The input text\n&lt; Text input event data\n&lt; The UTF-8 button text\n&lt; The available texture formats\n&lt; Touch finger event data\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; In milliseconds, populated using SDL_GetTicks()\n&lt; The timestamp of the sensor reading in microseconds, if …\n&lt; The timestamp of the sensor reading in microseconds, if …\n&lt; UTF-8 title\n&lt; The touch device id\n&lt; The touch device id\n&lt; The touch device id\n&lt; The index of the touchpad\n&lt; <code>SDL_JoystickType</code>\n&lt; ::SDL_DISPLAYEVENT\n&lt; ::SDL_WINDOWEVENT\n&lt; ::SDL_KEYDOWN or ::SDL_KEYUP\n&lt; ::SDL_TEXTEDITING\n&lt; ::SDL_TEXTEDITING_EXT\n&lt; ::SDL_TEXTINPUT\n&lt; ::SDL_MOUSEMOTION\n&lt; ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP\n&lt; ::SDL_MOUSEWHEEL\n&lt; ::SDL_JOYAXISMOTION\n&lt; ::SDL_JOYBALLMOTION\n&lt; ::SDL_JOYHATMOTION\n&lt; ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP\n&lt; ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED\n&lt; ::SDL_JOYBATTERYUPDATED\n&lt; ::SDL_CONTROLLERAXISMOTION\n&lt; ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP\n&lt; ::SDL_CONTROLLERDEVICEADDED, …\n&lt; ::SDL_CONTROLLERTOUCHPADDOWN or …\n&lt; ::SDL_CONTROLLERSENSORUPDATE\n&lt; ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED\n&lt; ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP\n&lt; ::SDL_MULTIGESTURE\n&lt; ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD\n&lt; ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or …\n&lt; ::SDL_SENSORUPDATE\n&lt; ::SDL_QUIT\n&lt; ::SDL_QUIT\n&lt; ::SDL_USEREVENT through ::SDL_LASTEVENT-1\n&lt; ::SDL_SYSWMEVENT\n&lt; Event type, shared with all events\n&lt; The type of encoding.\n&lt; ::SDL_HAPTIC_CONSTANT\n&lt; ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT, …\n&lt; ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER, …\n&lt; ::SDL_HAPTIC_RAMP\n&lt; ::SDL_HAPTIC_LEFTRIGHT\n&lt; ::SDL_HAPTIC_CUSTOM\n&lt; Effect type.\nUsage for this Device/Interface (Windows/Mac only).\nUsage Page for this Device/Interface (Windows/Mac only).\n&lt; Custom event data\n&lt; Userdata passed to callback (ignored for NULL callbacks).\n&lt; Read-write\n&lt; User data pointer passed to callbacks\n&lt; The axis value (range: -32768 to 32767)\n&lt; The hat position value. \\sa ::SDL_HAT_LEFTUP …\n&lt; The axis value (range: -32768 to 32767)\n&lt; the USB vendor ID of this joystick\nDevice Vendor ID\n&lt; <code>SDL_VIRTUAL_JOYSTICK_DESC_VERSION</code>\n&lt; Read-only\n&lt; width, in screen coordinates\n&lt; Mouse wheel event data\n&lt; The mouse instance id, or SDL_TOUCH_MOUSEID\n&lt; The mouse instance id, or SDL_TOUCH_MOUSEID\n&lt; The mouse instance id, or SDL_TOUCH_MOUSEID\n&lt; The joystick instance id\n&lt; The joystick instance id\n&lt; The joystick instance id\n&lt; The joystick instance id\n&lt; The joystick device index for the ADDED event, instance …\n&lt; The joystick instance id\n&lt; The joystick instance id\n&lt; The joystick instance id\n&lt; The joystick device index for the ADDED event, instance …\n&lt; The joystick instance id\n&lt; The joystick instance id\n&lt; The audio device index for the ADDED event (valid until …\n&lt; The instance ID of the sensor\n&lt; Window event data\n&lt; Parent window, can be NULL\n&lt; The X11 window\n&lt; The associated window\n&lt; The window with keyboard focus, if any\n&lt; The window with keyboard focus, if any\n&lt; The window with keyboard focus, if any\n&lt; The window with keyboard focus, if any\n&lt; The window with mouse focus, if any\n&lt; The window with mouse focus, if any\n&lt; The window with mouse focus, if any\n&lt; The window underneath the finger, if any\n&lt; The window that was dropped on, if any\n&lt; The associated window if any\n&lt; Wayland display\n&lt; Wayland EGL window (native window)\n&lt; Wayland surface\nWrite exactly \\c num objects each of size \\c size from the …\n&lt; X coordinate, relative to window\n&lt; X coordinate, relative to window\n&lt; The amount scrolled horizontally, positive to the right …\n&lt; Normalized in the range 0…1 with 0 being on the left\n&lt; Normalized in the range 0…1\n&lt; Normalized center of gesture\n&lt; Wayland xdg popup role\n&lt; Wayland xdg popup role\n&lt; Wayland xdg positioner, for popup\n&lt; Wayland xdg positioner, for popup\n&lt; Wayland xdg surface (window manager handle)\n&lt; Wayland xdg surface (window manager handle)\n&lt; Wayland xdg toplevel role\n&lt; Wayland xdg toplevel role\n&lt; The relative motion in the X direction\n&lt; The relative motion in the X direction\n&lt; Y coordinate, relative to window\n&lt; Y coordinate, relative to window\n&lt; The amount scrolled vertically, positive away from the …\n&lt; Normalized in the range 0…1 with 0 being at the top\n&lt; Normalized in the range 0…1\n&lt; Normalized center of gesture\n&lt; The relative motion in the Y direction\n&lt; The relative motion in the Y direction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNo value.\nNo value.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the closure as a trait-object and cancels the timer\nContains the error value\nA loaded TTF font.\nA font-related error.\nThe result of an <code>SDL2_TTF</code> font operation.\nThe styling of a font.\nInformation about a specific glyph (character) in a font …\nInformation about the hinting of a font. See wikipedia\nA Latin-1 encoded byte string is invalid.\nContains the success value\nA builder for a font rendering.\nA context manager for <code>SDL2_TTF</code> to manage C code …\nA SDL2-related error occured.\nReturns the set containing all flags.\nReturns the font’s highest ascent (height above base).\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nRenders the text in <em>blended</em> mode. See the SDL2_TTF docs …\nRenders the text in <em>blended</em> mode but wrapping the words if …\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the font’s lowest descent (height below base). …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the number of faces in this font.\nReturns the family name of the current font face.\nReturns the family name of the current font face without …\nReturns whether the font is monospaced.\nReturns the name of the current font face.\nReturns the name of the current font face without doing …\nReturns the index of the given character in this font face.\nReturns the glyph metrics of the given character in this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nReturns the font’s freetype hints.\nReturns whether the font is kerning.\nReturns the version of the dynamically linked <code>SDL_TTF</code> …\nReturns the width of the font’s outline.\nReturns the font’s style flags.\nReturns whether library has been initialized already.\nGet font maximum total height.\nInitializes the truetype font API and returns a context …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nLoads a font from the given file with the given size in …\nLoads the font at the given index of the file, with the …\nLoads the font at the given index of the SDL2 rwops object …\nLoads a font from the given SDL2 rwops object with the …\nReturns the complement of this set of flags.\nReturns the underlying C font object.\nReturns the recommended line spacing for text rendered …\nRemoves the specified flags in-place.\nStarts specifying a rendering of the given UTF-8-encoded …\nStarts specifying a rendering of the given UTF-8-encoded …\nStarts specifying a rendering of the given Latin-1-encoded …\nInserts or removes the specified flags depending on the …\nSets the font’s freetype hints.\nSets whether the font should use kerning.\nSets the width of the font’s outline.\nSets the font’s style flags.\nRenders the text in <em>shaded</em> mode. See the SDL2_TTF docs for …\nReturns the width and height of the given text when …\nReturns the width and height of the given text when …\nReturns the width and height of the given text when …\nRenders the text in <em>solid</em> mode. See the SDL2_TTF docs for …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOpens a URL/URI in the default system-provided application.\nThe version of SDL that was used to generate the bindings. …\nA structure that contains a version of SDL.\nReturns the argument unchanged.\nConvert a raw SDL_version to Version.\nCalls <code>U::from(self)</code>.\nmajor version\nminor version\nupdate version (patchlevel)\nGet the code revision of SDL that is linked against your …\nGet the revision number of SDL that is linked against your …\nGet the version of SDL that is linked against your program.\nFlash the window briefly to get attention\nCancel any window flash state\nOpenGL compatibility profile - deprecated functions are …\nOpenGL core profile - deprecated functions are disabled\nRepresents a setting for a window flash operation.\nOpenGL ES profile - only a subset of the base OpenGL …\nThe display is in landscape mode, with the right side up, …\nThe display is in landscape mode, with the left side up, …\nRepresents orientation of a display.\nThe display is in portrait mode\nThe display is in portrait mode, upside down\nRepresents a setting for vsync/swap interval.\nUnknown profile - SDL will tend to return 0 if you ask …\nThe display orientation can’t be determined\nFlash the window until it gets focus\nRepresents the “shell” of a <code>Window</code>.\nThe type that allows you to build windows.\nHolds a <code>SDL_Window</code>\nCreates the window in high-DPI mode if supported (&gt;= SDL …\nWindow should always above others (&gt;= SDL 2.0.5)\nUse this function to get the size of a window’s borders …\nRemoves the window decoration.\nBuilds the window.\nReturns the window context.\nGet the index of the display associated with a window.\nQuery the display mode to use when a window is visible at …\nGet the size of the window’s underlying drawable …\nGets an iterator of all video drivers compiled into the …\nGives up this WindowSurfaceRef, allowing to use the window …\nRequests a window to demand attention from the user.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSafety\nCreate a new <code>Window</code> without taking ownership of the …\nSets the window to fullscreen.\nSets the window to fullscreen at the current desktop …\nReturns the type of fullscreen that the window is …\nGet the gamma ramp in form of 3 vectors for a given window…\nGet the gamma ramp in form of 3 arrays for a given window…\nOpenGL context getters and setters\nCreate an OpenGL context for an OpenGL window, and make it …\nGet the currently active OpenGL context.\nSet up an OpenGL context for rendering into an OpenGL …\nSet the window’s OpenGL context to the current context …\nUpdate a window with OpenGL rendering.\nReturns whether the window was grabbed by <code>set_grab</code> or not.\nDoes the window have input focus?\nHas the window grabbed input focus?\nDoes the window have mouse focus?\nHides the window.\nHides the window, so it won’t even show in the taskbar.\nGet the raw ICC profile data for the screen the window is …\nGet the numeric ID of a window.\nSets the window to have grabbed input focus.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitializes a new <code>CanvasBuilder</code>; a convenience method that …\nIs the window always on top?\nReturns true if the OpenGL context is the current one in …\nIs the window maximized?\nIs the window minimized?\nReturns whether the keyboard was grabbed by …\nSets window size to be as large as possible.\nMaximizes the window.\nGet the maximum size of a window’s client area.\nCreate a SDL_MetalView when constructing the window. This …\nMinimize a window to an iconic representation (will show …\nMinimizes the window (minimizes the window to its iconic …\nGet the minimum size of a window’s client area.\nReturns whether the mouse was grabbed by <code>set_mouse_grab</code> or …\nReturns <code>Rect</code> to which the mouse is currently confined by …\nInitializes a new <code>WindowBuilder</code>.\nReturns the transparency of the window, as a value between …\nSets the window to be usable with an OpenGL context\nGet the position of a window.\nSets the window position.\nCenters the window.\nRaise a window above other windows and set the input focus.\nSets the window to be resizable.\nRestores the size and position of a minimized or maximized …\nMakes window appear on top of others.\nSet the border state of a window - <code>true</code> adds border and …\nSet the brightness (gamma multiplier) for a given window’…\nSet the display mode to use when a window is visible at …\nSets new fullscreen type for the window.\nSet the gamma ramp for the display that owns a given …\nWhen input is grabbed, the mouse is confined to the window.\nUse this function to set the icon for a window.\nKeyboard grab enables capture of system keyboard shortcuts …\nSet the maximum size of a window’s client area.\nSet the minimum size of a window’s client area.\nMouse grab confines the mouse cursor to the window.\nConfines the cursor to the specified area of a window. …\nSet the transparency of the window. The given value will …\nSet the user-resizable state of a window - <code>true</code> to allow …\nSets shaped state, to create via SDL_CreateShapedWindow …\nSet the size of a window’s client area.\nSet the title of a window.\nSets the underlying window flags. This will effectively …\nSet the shape of the window To be effective:\nShows the window that was hidden by <code>hide</code>.\nGet the size of a window’s client area.\nReturns this context’s video system.\nReturns a WindowSurfaceRef, which can be used like a …\nGet the title of a window.\nUpdates the change made to the inner Surface to the Window …\nSame as <code>update_window</code>, but only update the parts included …\nSets the window to be usable with a Vulkan instance\nCreate a Vulkan rendering surface for a window.\nGet the size of the window’s underlying drawable …\nGet the names of the Vulkan instance extensions needed to …\nGets the underlying window flags.\nGet the pixel format associated with the window.\nThe type that allows you to build a OpenGL context …\nOpenGL context getters and setters. Obtain with …\n<strong>Gets</strong> the attribute: whether to require hardware …\n<strong>Gets</strong> the attribute: the minimum number of bits for the …\n<strong>Gets</strong> the attribute: the minimum number of bits for the …\n<strong>Gets</strong> the attribute: the minimum number of bits for the …\n<strong>Gets</strong> the attribute: the minimum number of bits for the red …\n<strong>Gets</strong> the attribute: the minimum number of bits for the …\n<strong>Gets</strong> the attribute: the minimum number of bits for the …\n<strong>Gets</strong> the attribute: the minimum number of bits for frame …\n<strong>Gets</strong> the applied OpenGL context configuration flags.\n<strong>Gets</strong> the attribute: OpenGL context major version\n<strong>Gets</strong> the attribute: OpenGL context minor version\n<strong>Gets</strong> the attribute: disables OpenGL error checking; …\n<strong>Gets</strong> the attribute: type of GL context (Core, …\n<strong>Gets</strong> the OpenGL context major and minor versions as a …\nSets the context into “debug” mode.\n<strong>Gets</strong> the attribute: the minimum number of bits in the …\n<strong>Gets</strong> the attribute: whether the output is single or double …\nSets the context into “forward compatible” mode.\n<strong>Gets</strong> the attribute: requests sRGB capable visual; defaults …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<strong>Gets</strong> the attribute: the minimum number of bits for the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<strong>Gets</strong> the attribute: the number of buffers used for …\n<strong>Gets</strong> the attribute: the number of samples used around the …\n<strong>Gets</strong> the attribute: the minimum number of bits for the red …\nFinishes the builder and applies the GL context flags to …\n<strong>Sets</strong> the attribute: whether to require hardware …\n<strong>Sets</strong> the attribute: the minimum number of bits for the …\n<strong>Sets</strong> the attribute: the minimum number of bits for the …\n<strong>Sets</strong> the attribute: the minimum number of bits for the …\n<strong>Sets</strong> the attribute: the minimum number of bits for the red …\n<strong>Sets</strong> the attribute: the minimum number of bits for the …\n<strong>Sets</strong> the attribute: the minimum number of bits for the …\n<strong>Sets</strong> the attribute: the minimum number of bits for frame …\n<strong>Sets</strong> any combination of OpenGL context configuration flags.\n<strong>Sets</strong> the attribute: OpenGL context major version\n<strong>Sets</strong> the attribute: OpenGL context minor version\n<strong>Sets</strong> the attribute: disables OpenGL error checking; …\n<strong>Sets</strong> the attribute: type of GL context (Core, …\n<strong>Sets</strong> the OpenGL context major and minor versions.\n<strong>Sets</strong> the attribute: the minimum number of bits in the …\n<strong>Sets</strong> the attribute: whether the output is single or double …\n<strong>Sets</strong> the attribute: requests sRGB capable visual; defaults …\n<strong>Sets</strong> the attribute: the minimum number of bits for the …\n<strong>Sets</strong> the attribute: the number of buffers used for …\n<strong>Sets</strong> the attribute: the number of samples used around the …\n<strong>Sets</strong> the attribute: the minimum number of bits for the red …\n<strong>Sets</strong> the attribute: OpenGL context sharing; defaults to …\n<strong>Sets</strong> the attribute: the minimum number of bits in the …\n<strong>Sets</strong> the attribute: whether the output is stereo 3D; …\n<strong>Gets</strong> the attribute: OpenGL context sharing; defaults to …\n<strong>Gets</strong> the attribute: the minimum number of bits in the …\n<strong>Gets</strong> the attribute: whether the output is stereo 3D; …\nA <strong>data structure</strong> that can be deserialized from any data …\nA <strong>data format</strong> that can deserialize any data structure …\nThe error type that can be returned if some error occurs …\nThe error type when some error occurs during serialization.\nThe output type produced by this <code>Serializer</code> during …\nA <strong>data structure</strong> that can be serialized into any data …\nType returned from <code>serialize_map</code> for serializing the …\nType returned from <code>serialize_seq</code> for serializing the …\nType returned from <code>serialize_struct</code> for serializing the …\nType returned from <code>serialize_struct_variant</code> for …\nType returned from <code>serialize_tuple</code> for serializing the …\nType returned from <code>serialize_tuple_struct</code> for serializing …\nType returned from <code>serialize_tuple_variant</code> for serializing …\nA <strong>data format</strong> that can serialize any data structure …\nCollect an iterator as a map.\nCollect an iterator as a sequence.\nSerialize a string produced by an implementation of <code>Display</code>…\nGeneric data structure deserialization framework.\nDeserialize this value from the given Serde deserializer.\nRequire the <code>Deserializer</code> to figure out how to drive the …\nHint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a <code>char</code> value.\nHint that the <code>Deserialize</code> type is expecting an enum value …\nHint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.\nHint that the <code>Deserialize</code> type is expecting the name of a …\nHint that the <code>Deserialize</code> type needs to deserialize a …\nHint that the <code>Deserialize</code> type is expecting a map of …\nHint that the <code>Deserialize</code> type is expecting a newtype …\nHint that the <code>Deserialize</code> type is expecting an optional …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a struct with …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a tuple struct …\nHint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.\nHint that the <code>Deserialize</code> type is expecting a unit value.\nHint that the <code>Deserialize</code> type is expecting a unit struct …\nHelper macro when implementing the <code>Deserializer</code> part of a …\nDetermine whether <code>Deserialize</code> implementations should …\nDetermine whether <code>Serialize</code> implementations should …\nGeneric data structure serialization framework.\nSerialize this value into the given Serde serializer.\nSerialize a <code>bool</code> value.\nSerialize a chunk of raw byte data.\nSerialize a character.\nSerialize an <code>f32</code> value.\nSerialize an <code>f64</code> value.\nSerialize an <code>i128</code> value.\nSerialize an <code>i16</code> value.\nSerialize an <code>i32</code> value.\nSerialize an <code>i64</code> value.\nSerialize an <code>i8</code> value.\nBegin to serialize a map. This call must be followed by …\nSerialize a newtype struct like <code>struct Millimeters(u8)</code>.\nSerialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.\nSerialize a <code>None</code> value.\nBegin to serialize a variably sized sequence. This call …\nSerialize a <code>Some(T)</code> value.\nSerialize a <code>&amp;str</code>.\nBegin to serialize a struct like …\nBegin to serialize a struct variant like <code>E::S</code> in …\nBegin to serialize a statically sized sequence whose …\nBegin to serialize a tuple struct like …\nBegin to serialize a tuple variant like <code>E::T</code> in …\nSerialize a <code>u128</code> value.\nSerialize a <code>u16</code> value.\nSerialize a <code>u32</code> value.\nSerialize a <code>u64</code> value.\nSerialize a <code>u8</code> value.\nSerialize a <code>()</code> value.\nSerialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.\nSerialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.\nThe input contained a boolean value that was not expected.\nThe input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …\nThe input contained a <code>char</code> that was not expected.\nA <strong>data structure</strong> that can be deserialized from any data …\nA data structure that can be deserialized without …\n<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …\nA <strong>data format</strong> that can deserialize any data structure …\nThe type of the deserializer being converted into.\nThe input contained an enum that was not expected.\nProvides a <code>Visitor</code> access to the data of an enum in the …\nThe <code>Error</code> trait allows <code>Deserialize</code> implementations to …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\n<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …\nThe input contained a floating point <code>f32</code> or <code>f64</code> that was …\nAn efficient way of discarding data from a deserializer.\nConverts an existing value into a <code>Deserializer</code> from which …\nThe input contained a map that was not expected.\nProvides a <code>Visitor</code> access to each entry of a map in the …\nThe input contained a newtype struct that was not expected.\nThe input contained a newtype variant that was not …\nThe input contained an <code>Option&lt;T&gt;</code> that was not expected.\nA message stating what uncategorized thing the input …\nThe input contained a sequence that was not expected.\nProvides a <code>Visitor</code> access to each element of a sequence in …\nThe input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …\n<code>Error</code> is a trait representing the basic expectations for …\nThe input contained a <code>&amp;str</code> or <code>String</code> that was not expected.\nThe input contained a struct variant that was not expected.\nThe input contained a tuple variant that was not expected.\n<code>Unexpected</code> represents an unexpected invocation of any one …\nThe input contained a unit <code>()</code> that was not expected.\nThe input contained a unit variant that was not expected.\nThe input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…\nThe type produced by using this seed.\nThe value produced by this visitor.\nThe <code>Visitor</code> that will be used to deserialize the content …\n<code>VariantAccess</code> is a visitor that is created by the …\nThis trait represents a visitor that walks through a …\nRaised when there is general error when deserializing a …\nEquivalent to the more common <code>Deserialize::deserialize</code> …\nDeserialize this value from the given Serde deserializer.\nRequire the <code>Deserializer</code> to figure out how to drive the …\nHint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a <code>char</code> value.\nHint that the <code>Deserialize</code> type is expecting an enum value …\nHint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.\nHint that the <code>Deserialize</code> type is expecting the name of a …\nHint that the <code>Deserialize</code> type needs to deserialize a …\nHint that the <code>Deserialize</code> type is expecting a map of …\nHint that the <code>Deserialize</code> type is expecting a newtype …\nHint that the <code>Deserialize</code> type is expecting an optional …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a struct with …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a tuple struct …\nHint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.\nHint that the <code>Deserialize</code> type is expecting a unit value.\nHint that the <code>Deserialize</code> type is expecting a unit struct …\nRaised when a <code>Deserialize</code> struct type received more than …\nFormat a message stating what data this Visitor expects to …\nFormat an explanation of what data was being expected. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this value into a deserializer.\nRaised when deserializing a sequence or map and the input …\nRaised when a <code>Deserialize</code> receives a type different from …\nRaised when a <code>Deserialize</code> receives a value of the right …\nDetermine whether <code>Deserialize</code> implementations should …\nRaised when a <code>Deserialize</code> struct type expected to receive …\nCalled when deserializing a variant with a single value.\nCalled when deserializing a variant with a single value.\nThis returns <code>Ok(Some(value))</code> for the next value in the …\nThis returns <code>Ok(Some(value))</code> for the next value in the …\nThis returns <code>Ok(Some((key, value)))</code> for the next …\nThis returns <code>Ok(Some((key, value)))</code> for the next …\nThis returns <code>Ok(Some(key))</code> for the next key in the map, or …\nThis returns <code>Ok(Some(key))</code> for the next key in the map, or …\nThis returns a <code>Ok(value)</code> for the next value in the map.\nThis returns a <code>Ok(value)</code> for the next value in the map.\nReturns the number of elements remaining in the sequence, …\nReturns the number of entries remaining in the map, if …\nCalled when deserializing a struct-like variant.\nCalled when deserializing a tuple-like variant.\nCalled when deserializing a variant with no values.\nRaised when a <code>Deserialize</code> struct type received a field …\nRaised when a <code>Deserialize</code> enum type received a variant …\nBuilding blocks for deserializing basic values using the …\n<code>variant</code> is called to identify which variant to deserialize.\n<code>variant</code> is called to identify which variant to deserialize.\nThe input contains a boolean.\nThe input contains a byte array that lives at least as …\nThe input contains a string that lives at least as long as …\nThe input contains a byte array and ownership of the byte …\nThe input contains a byte array. The lifetime of the byte …\nThe input contains a <code>char</code>.\nThe input contains an enum.\nThe input contains an <code>f32</code>.\nThe input contains an <code>f64</code>.\nThe input contains a <code>i128</code>.\nThe input contains an <code>i16</code>.\nThe input contains an <code>i32</code>.\nThe input contains an <code>i64</code>.\nThe input contains an <code>i8</code>.\nThe input contains a key-value map.\nThe input contains a newtype struct.\nThe input contains an optional that is absent.\nThe input contains a sequence of elements.\nThe input contains an optional that is present.\nThe input contains a string. The lifetime of the string is …\nThe input contains a string and ownership of the string is …\nThe input contains a <code>u128</code>.\nThe input contains a <code>u16</code>.\nThe input contains a <code>u32</code>.\nThe input contains a <code>u64</code>.\nThe input contains a <code>u8</code>.\nThe input contains a unit <code>()</code>.\nA deserializer holding a <code>bool</code>.\nA deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …\nA deserializer holding a <code>&amp;str</code> with a lifetime tied to …\nA deserializer holding a <code>&amp;[u8]</code>. Always calls …\nA deserializer holding a <code>char</code>.\nA deserializer holding a <code>Cow&lt;str&gt;</code>.\nA deserializer holding an <code>EnumAccess</code>.\nA minimal representation of all possible errors that can …\nA deserializer holding an <code>f32</code>.\nA deserializer holding an <code>f64</code>.\nA deserializer holding an <code>i128</code>.\nA deserializer holding an <code>i16</code>.\nA deserializer holding an <code>i32</code>.\nA deserializer holding an <code>i64</code>.\nA deserializer holding an <code>i8</code>.\nA deserializer holding an <code>isize</code>.\nA deserializer holding a <code>MapAccess</code>.\nA deserializer that iterates over a map.\nA deserializer holding a <code>SeqAccess</code>.\nA deserializer that iterates over a sequence.\nA deserializer holding a <code>&amp;str</code>.\nA deserializer holding a <code>String</code>.\nA deserializer holding a <code>u128</code>.\nA deserializer holding a <code>u16</code>.\nA deserializer holding a <code>u32</code>.\nA deserializer holding a <code>u64</code>.\nA deserializer holding a <code>u8</code>.\nA deserializer holding a <code>()</code>.\nA deserializer holding a <code>usize</code>.\nCheck for remaining elements after passing a …\nCheck for remaining elements after passing a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new borrowed deserializer from the given string.\nCreate a new deserializer from the given bytes.\nCreate a new borrowed deserializer from the given borrowed …\nConstruct a new <code>MapDeserializer&lt;I, E&gt;</code>.\nConstruct a new <code>SeqDeserializer&lt;I, E&gt;</code>.\nConstruct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.\nConstruct a new <code>MapAccessDeserializer&lt;A&gt;</code>.\nConstruct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.\nTrait used by <code>Serialize</code> implementations to generically …\nThe error type when some error occurs during serialization.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nHelper type for implementing a <code>Serializer</code> that does not …\nThe output type produced by this <code>Serializer</code> during …\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nA <strong>data structure</strong> that can be serialized into any data …\nReturned from <code>Serializer::serialize_map</code>.\nType returned from <code>serialize_map</code> for serializing the …\nReturned from <code>Serializer::serialize_seq</code>.\nType returned from <code>serialize_seq</code> for serializing the …\nReturned from <code>Serializer::serialize_struct</code>.\nType returned from <code>serialize_struct</code> for serializing the …\nReturned from <code>Serializer::serialize_struct_variant</code>.\nType returned from <code>serialize_struct_variant</code> for …\nReturned from <code>Serializer::serialize_tuple</code>.\nType returned from <code>serialize_tuple</code> for serializing the …\nReturned from <code>Serializer::serialize_tuple_struct</code>.\nType returned from <code>serialize_tuple_struct</code> for serializing …\nReturned from <code>Serializer::serialize_tuple_variant</code>.\nType returned from <code>serialize_tuple_variant</code> for serializing …\nA <strong>data format</strong> that can serialize any data structure …\n<code>Error</code> is a trait representing the basic expectations for …\nCollect an iterator as a map.\nCollect an iterator as a sequence.\nSerialize a string produced by an implementation of <code>Display</code>…\nUsed when a <code>Serialize</code> implementation encounters any error …\nFinish serializing a sequence.\nFinish serializing a tuple.\nFinish serializing a tuple struct.\nFinish serializing a tuple variant.\nFinish serializing a map.\nFinish serializing a struct.\nFinish serializing a struct variant.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDetermine whether <code>Serialize</code> implementations should …\nSerialize this value into the given Serde serializer.\nSerialize a <code>bool</code> value.\nSerialize a chunk of raw byte data.\nSerialize a character.\nSerialize a sequence element.\nSerialize a tuple element.\nSerialize a map entry consisting of a key and a value.\nSerialize an <code>f32</code> value.\nSerialize an <code>f64</code> value.\nSerialize a tuple struct field.\nSerialize a tuple variant field.\nSerialize a struct field.\nSerialize a struct variant field.\nSerialize an <code>i128</code> value.\nSerialize an <code>i16</code> value.\nSerialize an <code>i32</code> value.\nSerialize an <code>i64</code> value.\nSerialize an <code>i8</code> value.\nSerialize a map key.\nBegin to serialize a map. This call must be followed by …\nSerialize a newtype struct like <code>struct Millimeters(u8)</code>.\nSerialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.\nSerialize a <code>None</code> value.\nBegin to serialize a variably sized sequence. This call …\nSerialize a <code>Some(T)</code> value.\nSerialize a <code>&amp;str</code>.\nBegin to serialize a struct like …\nBegin to serialize a struct variant like <code>E::S</code> in …\nBegin to serialize a statically sized sequence whose …\nBegin to serialize a tuple struct like …\nBegin to serialize a tuple variant like <code>E::T</code> in …\nSerialize a <code>u128</code> value.\nSerialize a <code>u16</code> value.\nSerialize a <code>u32</code> value.\nSerialize a <code>u64</code> value.\nSerialize a <code>u8</code> value.\nSerialize a <code>()</code> value.\nSerialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.\nSerialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.\nSerialize a map value.\nIndicate that a struct field has been skipped.\nIndicate that a struct variant field has been skipped.\nThe <code>basic</code> API flavor provides barebones UTF-8 checking at …\nThe <code>compat</code> API flavor provides full compatibility with …\nSimple zero-sized UTF-8 error.\nReturns the argument unchanged.\nAnalogue to <code>std::str::from_utf8()</code>.\nAnalogue to <code>std::str::from_utf8_mut()</code>.\nCalls <code>U::from(self)</code>.\nUTF-8 error information compatible with <code>std::str::Utf8Error</code>…\nAnalogue to <code>std::str::Utf8Error::error_len()</code>.\nReturns the argument unchanged.\nAnalogue to <code>std::str::from_utf8()</code>.\nAnalogue to <code>std::str::from_utf8_mut()</code>.\nCalls <code>U::from(self)</code>.\nAnalogue to <code>std::str::Utf8Error::valid_up_to()</code>.\nProvides a tool for mutating a byte slice by filling it …\nAn iterator over non-overlapping matches of a pattern in a …\nAn iterator over non-overlapping matches of a pattern in a …\nAn iterator over non-overlapping splits of a string slice …\nAn iterator over non-overlapping splits of a string slice …\nProvides extensions for string searching and manipulation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>sz</code> module provides a collection of string searching …\nComputes the alignment score between <code>self</code> and <code>other</code> using …\nComputes the Levenshtein edit distance between <code>self</code> and …\nSearches for the first occurrence of <code>needle</code> in <code>self</code>.\nFinds the index of the first character in <code>self</code> that is …\nFinds the index of the first character in <code>self</code> that is not …\nReturns an iterator over all non-overlapping matches of …\nReturns an iterator over all non-overlapping matches of …\nReturns an iterator over all non-overlapping matches of …\nReturns an iterator over all non-overlapping matches of …\nReturns an iterator over all non-overlapping matches of …\nFills the implementing byte slice with random bytes from …\nSearches for the last occurrence of <code>needle</code> in <code>self</code>.\nFinds the index of the last character in <code>self</code> that is also …\nFinds the index of the last character in <code>self</code> that is not …\nReturns an iterator over all non-overlapping matches of …\nReturns an iterator over the substrings of <code>self</code> that are …\nReturns an iterator over the substrings of <code>self</code> that are …\nComputes the Needleman-Wunsch alignment score for two …\nComputes the Levenshtein edit distance between two …\nComputes the Levenshtein edit distance between two …\nComputes the Levenshtein edit distance between two UTF8 …\nComputes the Levenshtein edit distance between two UTF8 …\nLocates the first matching substring within <code>haystack</code> that …\nFinds the index of the first character in <code>haystack</code> that is …\nFinds the index of the first character in <code>haystack</code> that is …\nComputes the Hamming edit distance between two strings, …\nComputes the Hamming edit distance between two strings, …\nComputes the Hamming edit distance between two UTF8 …\nComputes the Hamming edit distance between two UTF8 …\nRandomizes the contents of a given byte slice <code>text</code> using …\nLocates the last matching substring within <code>haystack</code> that …\nFinds the index of the last character in <code>haystack</code> that is …\nFinds the index of the last character in <code>haystack</code> that is …\nGenerates a default substitution matrix for use with the …\nThe <code>default</code> module provides convenience functions and …\nThe <code>audio</code> module provides primitives for working with …\nThe <code>checksum</code> module provides implementations of common …\nThe <code>codec</code> module provides the traits and support …\nThe <code>conv</code> module provides methods to convert samples …\nThe <code>dsp</code> module provides efficient implementations of …\nThe <code>errors</code> module defines the common error type.\nThe <code>format</code> module provides the traits and support …\nThe <code>io</code> module implements composable bit- and byte-level …\nThe <code>meta</code> module defines basic metadata elements, and …\nThe <code>probe</code> module provides methods and traits to support …\nThe <code>sample</code> module defines the core audio sample trait and …\nConvenience macro for declaring a <code>CodecDescriptor</code>.\nConvenience macro for declaring a probe <code>Descriptor</code> for a …\nConvenience macro for declaring a probe <code>Descriptor</code> for a …\nThe <code>units</code> module provides definitions for common units.\nThe <code>util</code> module provides a repository of commonly used …\n<code>AsAudioBufferRef</code> is a trait implemented for <code>AudioBuffer</code>s …\n<code>AudioBuffer</code> is a container for multi-channel planar audio …\n<code>AudioBufferRef</code> is a copy-on-write reference to an …\n<code>AudioPlanes</code> provides immutable slices to each audio …\n<code>AudioPlanesMut</code> provides mutable slices to each audio …\nA bitmask representing the audio channels in an audio …\nAn iterator over individual channels within a <code>Channels</code> …\nFront-centre (centre) channel.\nFront centre-high channel.\nFront-left (left) or the Mono channel.\nFront left-of-centre (left center) channel.\nFront left-high channel.\nFront left-wide channel.\nFront-right (right) channel.\nFront right-of-centre (right center) channel.\nFront right-high channel.\nFront right-wide channel.\nFront Left and Right, Rear Left and Right, and a single …\nLow frequency channel 1.\nLow frequency channel 2.\n<code>Layout</code> describes common audio channel configurations.\nSingle centre channel.\nRear-centre (surround rear centre) channel.\nRear-left (surround rear left) channel.\nRear left-of-centre channel.\nRear-right (surround rear right) channel.\nRear right-of-centre channel.\n<code>RawSample</code> provides a typed interface for converting a …\nA <code>RawSampleBuffer</code>, is a byte-oriented sample buffer. All …\nThe <code>RawType</code> is a primitive data type, or fixed-size byte …\nSide left (surround left) channel.\nSide right (surround right) channel.\nA <code>SampleBuffer</code>, is a sample oriented buffer. It is …\nThe <code>Signal</code> trait provides methods for rendering and …\n<code>SignalSpec</code> describes the characteristics of a Signal.\nLeft and Right channels.\nTop centre channel.\nTop centre channel.\nTop front-left channel.\nTop front-right channel.\nTop rear-centre channel.\nTop rear-left channel.\nTop rear-right channel.\nLeft and Right channels with a single low-frequency …\nReturns the set containing all flags.\nGet an <code>AudioBufferRef</code> reference.\nGets an immutable slice to the bytes of the sample’s …\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nGets the maximum number of samples the <code>SampleBuffer</code> may …\nGets the maximum number of samples the <code>RawSampleBuffer</code> may …\nGets the total capacity of the buffer. The capacity is the …\nGets the total capacity of the buffer. The capacity is the …\nGets an immutable reference to all the written samples in …\nGets a mutable reference to all the written samples in the …\nGets two mutable references to two different channels.\nThe channel assignments of the signal. The order of the …\nClears all written frames from the buffer. This is a cheap …\nClears all written samples.\nClears all written samples.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nConverts the contents of an AudioBuffer into an equivalent …\nCopies all audio data from the source <code>AudioBuffer</code> to the …\nCopies all audio data from the source <code>AudioBufferRef</code> in …\nCopies all audio data from the source <code>AudioBufferRef</code> in …\nCopies all audio samples from a source <code>AudioBuffer</code> into …\nCopies all audio data from a source <code>AudioBuffer</code> that is of …\nCopies all audio data from the source <code>AudioBuffer</code> to the …\nCopies all audio data from the source <code>AudioBufferRef</code> in …\nCopies all audio data from the source <code>AudioBufferRef</code> in …\nCopies all audio data from a source <code>AudioBuffer</code> into the …\nCopies all audio data from a source <code>AudioBuffer</code> that is of …\nGets the number of channels.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nClears, and then renders the entire buffer using the fill …\nGets the number of actual frames written to the buffer. …\nGets the number of frames in the buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a channel <code>Layout</code> into a <code>Channels</code> bit mask.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if the buffer contains no written samples.\nReturns <code>true</code> if the buffer contains no written samples.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if the <code>AudioBuffer</code> is unused.\nGets an iterator over individual channels.\nGets the number of written samples.\nGets the number of written samples.\nMakes an equivalent AudioBuffer of a different type.\nInstantiate a new <code>SampleBuffer</code> using the specified signal …\nInstantiate a new <code>RawSampleBuffer</code> using the specified …\nInstantiate a new <code>AudioBuffer</code> using the specified signal …\nReturns the complement of this set of flags.\nGets immutable slices of all the audio planes.\nGets mutable slices of all the audio planes.\nGets immutable references to all audio planes (channels) …\nGets mutable references to all audio planes (channels) …\nThe signal sampling rate in hertz (Hz).\nRemoves the specified flags in-place.\nRenders a number of frames using the provided render …\nRenders a reserved number of frames. This is a cheap …\nRenders a number of silent frames.\nGets an immutable slice of all written samples.\nGets a mutable slice of all written samples.\nInserts or removes the specified flags depending on the …\nShifts the contents of the buffer back by the number of …\nGets the signal specification for the buffer.\nGets the signal specification for the buffer.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nTransforms every written sample in the signal using the …\nTrims samples from the start and end of the buffer.\nTruncates the buffer to the number of frames specified. If …\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nInstantiates an unused <code>AudioBuffer</code>. An unused <code>AudioBuffer</code> …\n<code>Crc16Ansi</code> implements the CRC-16 algorithm using the ANSI …\n<code>Crc16AnsiLe</code> implements the CRC-16 algorithm using the ANSI …\n<code>Crc32</code> implements the CRC-32 checksum algorithm using the …\n<code>Crc8Ccitt</code> implements the CRC-8 algorithm using the CCITT …\n<code>Md5</code> implements the MD5 hashing algorithm.\nReturns the computed CRC.\nReturns the computed CRC.\nReturns the computed CRC.\nReturns the computed CRC.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFinalizes and returns the computed MD5 hash.\nInstantiate a <code>Crc16Ansi</code> instance with an initial state.\nInstantiate a <code>Crc16AnsiLe</code> instance with an initial state.\nInstantiates a <code>Crc32</code> instance with an initial state.\nInstantiate a <code>Crc8Ccitt</code> instance with an initial state.\nAdvanced Audio Coding (AAC)\nDolby AC-4 (ETSI TS 103 190)\nG.722 ADPCM\nG.726 ADPCM\nG.726 ADPCM little-endian\nADPCM IMA QuickTime\nADPCM IMA WAV\nMicrosoft ADPCM\nApple Lossless Audio Codec (ALAC)\nAdaptive Transform Acoustic Coding (ATRAC1)\nAdaptive Transform Acoustic Coding 3 (ATRAC3)\nAdaptive Transform Acoustic Coding 3+ (ATRAC3+)\nAdaptive Transform Acoustic Coding 9 (ATRAC9)\nDTS Coherent Acoustics (DCA/DTS)\nAC-3, E-AC-3, Dolby Digital (ATSC A/52)\nFree Lossless Audio Codec (FLAC)\nMonkey’s Audio (APE)\nMPEG Layer 1 (MP1)\nMPEG Layer 2 (MP2)\nMPEG Layer 3 (MP3)\nMusepack\nNull codec\nOpus\nPCM A-law (G.711)\nPCM 32-bit big-endian floating point interleaved\nPCM 32-bit big-endian floating point planar\nPCM 32-bit little-endian floating point interleaved\nPCM 32-bit little-endian floating point planar\nPCM 64-bit big-endian floating point interleaved\nPCM 64-bit big-endian floating point planar\nPCM 64-bit little-endian floating point interleaved\nPCM 64-bit little-endian floating point planar\nPCM Mu-law (G.711)\nPCM signed 16-bit big-endian interleaved\nPCM signed 16-bit big-endian planar\nPCM signed 16-bit little-endian interleaved\nPCM signed 16-bit little-endian planar\nPCM signed 24-bit big-endian interleaved\nPCM signed 24-bit big-endian planar\nPCM signed 24-bit little-endian interleaved\nPCM signed 24-bit little-endian planar\nPCM signed 32-bit big-endian interleaved\nPCM signed 32-bit big-endian planar\nPCM signed 32-bit little-endian interleaved\nPCM signed 32-bit little-endian planar\nPCM signed 8-bit interleaved\nPCM signed 8-bit planar\nPCM unsigned 16-bit big-endian interleaved\nPCM unsigned 16-bit big-endian planar\nPCM unsigned 16-bit little-endian interleaved\nPCM unsigned 16-bit little-endian planar\nPCM unsigned 24-bit big-endian interleaved\nPCM unsigned 24-bit big-endian planar\nPCM unsigned 24-bit little-endian interleaved\nPCM unsigned 24-bit little-endian planar\nPCM unsigned 32-bit big-endian interleaved\nPCM unsigned 32-bit big-endian planar\nPCM unsigned 32-bit little-endian interleaved\nPCM unsigned 32-bit little-endian planar\nPCM unsigned 8-bit interleaved\nPCM unsigned 8-bit planar\nSpeex\nTrue Audio (TTA)\nVorbis\nWavPack\nWindows Media Audio\nA <code>CodecDescriptor</code> stores a description of a single logical …\nCodec parameters stored in a container format’s headers …\nA <code>CodecRegistry</code> allows the registration of codecs, and …\nA <code>CodecType</code> is a unique identifier used to identify a …\nCRC16 of interleaved PCM audio samples.\nCRC32 of interleaved PCM audio samples.\nCRC8 of interleaved PCM audio samples.\nA <code>Decoder</code> implements a codec’s decode algorithm. It …\n<code>DecoderOptions</code> is a common set of options that all …\n<code>FinalizeResult</code> contains optional information that can only …\nMD5 of interleaved PCM audio samples.\nCodec defined, up-to 16-byte code.\nA method and expected value to perform verification on the …\nThe number of bits per one encoded audio sample.\nThe number of bits per one decoded audio sample.\nThe channel layout.\nA bitmask of all channels in the stream.\nThe codec type.\nThe <code>CodecType</code> identifier.\nGets a reference to an updated set of <code>CodecParameters</code> …\nDeclares a new <code>CodecType</code> given a character code. A …\nDecodes a <code>Packet</code> of audio data and returns a copy-on-write …\nThe number of leading frames inserted by the encoder that …\nExtra data (defined by the codec).\nOptionally, obtain post-decode information such as the …\nProvide the <code>CodecType</code>.\nThe number of frames per block, in case packets are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the <code>CodecDescriptor</code> for a registered codec.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAllows read access to the internal audio buffer.\nA longer, more descriptive, string identifying the codec.\nSearches the registry for a <code>Decoder</code> that supports the …\nThe maximum number of frames a packet will contain.\nThe length of the stream in number of frames.\nInstantiate a new <code>CodecRegistry</code>.\nThe demuxer guarantees packet data integrity.\nThe number of trailing frames inserted by the encoder for …\nRegister a single codec. If the codec was previously …\nRegisters all codecs supported by <code>Decoder</code>. If a supported …\nReset the <code>Decoder</code>.\nThe sample format of an audio sample.\nThe sample rate of the audio in Hz.\nA short ASCII-only string identifying the codec.\nThe timestamp of the first frame.\nGets a list of codec descriptors for the codecs supported …\nThe timebase of the stream.\nAttempts to instantiates a <code>Decoder</code> using the provided …\nA method and expected value that may be used to perform …\nThe decoded audio should be verified if possible during …\nIf verification is enabled and supported by the decoder, …\nProvide the bits per sample of an encoded audio sample.\nProvide the bit per sample of a decoded audio sample.\nProvide the channel layout.\nProvide the channel map.\nProvide the number of delay frames.\nProvide codec extra data.\nProvide the maximum number of frames per packet.\nProvide the maximum number of frames per packet.\nProvide the total number of frames.\nSpecify if the packet’s data integrity was guaranteed.\nProvide the number of padding frames.\nProvide the codec’s decoded audio sample format.\nProvide the sample rate in Hz.\nProvide the timestamp of the first frame.\nProvide the <code>TimeBase</code>.\nProvide a verification code of the final decoded audio.\n<code>FromSample</code> implements a conversion from <code>Sample</code> type <code>F</code> to …\n<code>IntoSample</code> implements a conversion from <code>Self</code> to <code>Sample</code> …\n<code>ReversibleSample</code> is a trait that when implemented for <code>Self</code>…\nThe <code>dither</code> module provides methods to apply a dither to a …\n<code>AddNoise</code> is a trait for converting random noise into a …\n<code>Dither</code> is a trait for implementing dithering algorithms.\nEnumeration of dither algorithms.\nThe <code>Identity</code> dithering algorithm performs no dithering and …\nNo dithering.\n<code>MaybeDither</code> conditionally applies a dither to a sample …\n<code>RandomNoise</code> represents a sample of noise of a specified …\n<code>Rectangular</code> implements a dither using uniformly …\nApply rectangular dithering. See <code>Rectangular</code> for more …\n<code>Triangular</code> implements a dither using a triangular …\nApply triangular dithering. See <code>Triangular</code> for more …\nDithers a <code>Sample</code> of source sample format <code>F</code> for an eventual …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstantiate a noise sample from a random 32-bit source.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>complex</code> module implements a 32-bit floating point …\nThe <code>fft</code> module implements the Fast Fourier Transform (FFT).\nThe <code>mdct</code> module implements the Modified Discrete Cosine …\nA complex number.\nTake the complex conjugate of <code>self</code>.\nReturns the argument unchanged.\nThe imaginary component.\nCalls <code>U::from(self)</code>.\nCreate a complex number with a value of <code>0 + j1</code>.\nCreate a new complex number.\nThe real component.\nScale the complex number.\nThe complex Fast Fourier Transform (FFT).\nThe maximum FFT size.\nCalculate the FFT.\nCalculate the FFT in-place.\nReturns the argument unchanged.\nCalculate the inverse FFT.\nCalculate the inverse FFT in-place.\nCalls <code>U::from(self)</code>.\nGet the size of the FFT.\nThe Inverse Modified Discrete Transform (IMDCT).\nReturns the argument unchanged.\nPerforms the the N-point Inverse Modified Discrete Cosine …\nCalls <code>U::from(self)</code>.\nInstantiate a N-point IMDCT with no scaling.\nInstantiate a N-point IMDCT with scaling.\nThe stream contained malformed data and could not be …\nContains the error value\n<code>Error</code> provides an enumeration of all possible errors …\nThe stream can only be seeked forward.\nThe track ID provided is invalid.\nAn IO error occured while reading, writing, or seeking the …\nA default or user-defined limit was reached while decoding …\nContains the success value\nThe timestamp to seek to is out of range.\nThe demuxer or decoder needs to be reset before continuing.\nThe stream could not be seeked.\n<code>SeekErrorKind</code> is a list of generic reasons why a seek may …\nThe stream is not seekable at all.\nAn unsupported container or codec feature was encounted.\nConvenience function to create a decode error.\nConvenience function to create an end-of-stream error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvenience function to create a limit error.\nConvenience function to create a reset required error.\nConvenience function to create a seek error.\nConvenience function to create an unsupport feature error.\nAccurate (aka sample-accurate) seek mode will be always …\nCoarse seek mode is a best-effort attempt to seek to the …\nA <code>Cue</code> is a designated point of time within a media stream.\nA <code>CuePoint</code> is a point, represented as a frame offset, …\n<code>FormatOptions</code> is a common set of options that all demuxers …\nA <code>FormatReader</code> is a container demuxer. It provides methods …\nA <code>Packet</code> contains a discrete amount of encoded data for a …\n<code>SeekMode</code> selects the precision of a seek.\n<code>SeekTo</code> specifies a position to seek to.\n<code>SeekedTo</code> is the result of a seek.\nSeek to a <code>Time</code> in regular time units.\nSeek to a track’s <code>TimeStamp</code> in that track’s timebase …\nA <code>Track</code> is an independently coded media bitstream. A media …\nThe <code>TimeStamp</code> that was seeked to.\nGet a <code>BufStream</code> to read the packet data buffer …\nGet the duration of the packet in <code>TimeBase</code> units if no …\nGet an immutable slice to the packet buffer.\nThe codec parameters for the track.\nGets a list of all <code>Cue</code>s.\nThe packet buffer.\nGets the default track. If the <code>FormatReader</code> has a method …\nGet the duration of the packet in <code>TimeBase</code> units.\nThe duration of the packet. When gapless support is …\nEnable support for gapless playback. Default: <code>false</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA unique identifier for the track.\nA unique index for the <code>Cue</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDestroys the <code>FormatReader</code> and returns the underlying media …\nThe language of the track. May be unknown.\nGets the metadata revision log.\nCreate a new <code>Packet</code> from a boxed slice.\nCreate a new <code>Packet</code> from a slice.\nCreate a new <code>Packet</code> with trimming information from a boxed …\nCreate a new <code>Packet</code> with trimming information from a slice.\nGet the next packet from the container.\nA list of <code>CuePoints</code>s that are contained within this <code>Cue</code>. …\nIf a <code>FormatReader</code> requires a seek index, but the container …\nThe <code>formats</code> module prelude.\nThe <code>TimeStamp</code> required for the requested seek.\nSeek, as precisely as possible depending on the mode, to …\nIf a seek index needs to be built, this value determines …\nThe offset of the first frame in the <code>CuePoint</code> relative to …\nThe starting timestamp in number of frames from the start …\nA list of <code>Tag</code>s associated with the <code>Cue</code>.\nA list of <code>Tag</code>s associated with the <code>CuePoint</code>.\nThe track identifier of the track this packet belongs to.\nThe track the seek was relative to.\nGets a list of tracks in the container.\nGet the number of frames to trim from the end of the …\nWhen gapless support is enabled, this is the number of …\nGet the number of frames to trim from the start of the …\nWhen gapless support is enabled, this is the number of …\nAttempt to instantiate a <code>FormatReader</code> using the provided …\nGet the timestamp of the packet in <code>TimeBase</code> units.\nThe timestamp of the packet. When gapless support is …\nHelper utilities for implementing <code>FormatReader</code>s.\nThe <code>Time</code> to seek to.\nIf <code>Some</code>, specifies which track’s timestamp should be …\nSpecifies which track <code>ts</code> is relative to.\nThe <code>TimeStamp</code> to seek to.\nAccurate (aka sample-accurate) seek mode will be always …\nCoarse seek mode is a best-effort attempt to seek to the …\nA <code>Cue</code> is a designated point of time within a media stream.\nA <code>Duration</code> indicates a positive span of time.\n<code>FormatOptions</code> is a common set of options that all demuxers …\nA <code>FormatReader</code> is a container demuxer. It provides methods …\nA <code>Packet</code> contains a discrete amount of encoded data for a …\n<code>SeekMode</code> selects the precision of a seek.\n<code>SeekTo</code> specifies a position to seek to.\n<code>SeekedTo</code> is the result of a seek.\nSeek to a <code>Time</code> in regular time units.\nA <code>TimeBase</code> is the conversion factor between time, …\nA <code>TimeStamp</code> represents an instantenous instant in time …\nSeek to a track’s <code>TimeStamp</code> in that track’s timebase …\nA <code>Track</code> is an independently coded media bitstream. A media …\nThe <code>TimeStamp</code> that was seeked to.\nThe codec parameters for the track.\nGets a list of all <code>Cue</code>s.\nThe packet buffer.\nGets the default track. If the <code>FormatReader</code> has a method …\nThe denominator.\nThe duration of the packet. When gapless support is …\nEnable support for gapless playback. Default: <code>false</code>.\nA unique identifier for the track.\nA unique index for the <code>Cue</code>.\nDestroys the <code>FormatReader</code> and returns the underlying media …\nThe language of the track. May be unknown.\nGets the metadata revision log.\nGet the next packet from the container.\nThe numerator.\nA list of <code>CuePoints</code>s that are contained within this <code>Cue</code>. …\nIf a <code>FormatReader</code> requires a seek index, but the container …\nThe <code>TimeStamp</code> required for the requested seek.\nSeek, as precisely as possible depending on the mode, to …\nIf a seek index needs to be built, this value determines …\nThe starting timestamp in number of frames from the start …\nA list of <code>Tag</code>s associated with the <code>Cue</code>.\nThe track the seek was relative to.\nGets a list of tracks in the container.\nWhen gapless support is enabled, this is the number of …\nWhen gapless support is enabled, this is the number of …\nAttempt to instantiate a <code>FormatReader</code> using the provided …\nThe timestamp of the packet. When gapless support is …\nThe <code>Time</code> to seek to.\nIf <code>Some</code>, specifies which track’s timestamp should be …\nSpecifies which track <code>ts</code> is relative to.\nThe <code>TimeStamp</code> to seek to.\nThe desired timestamp can be found at, or after, the …\nThe desired timestamp can be found within the range. The …\nA <code>SeekIndex</code> stores <code>SeekPoint</code>s (generally a sample or frame …\nA <code>SeekPoint</code> is a mapping between a sample or frame number …\n<code>SeekSearchResult</code> is the return value for a search on a …\nThe <code>SeekIndex</code> is empty so the desired timestamp could not …\nThe desired timestamp can be found before, the <code>SeekPoint</code>. …\nThe byte offset of the <code>SeekPoint</code>s timestamp relative to a …\nThe frame or sample timestamp of the <code>SeekPoint</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInsert a <code>SeekPoint</code> into the index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe number of frames the <code>SeekPoint</code> covers.\nCreate an empty <code>SeekIndex</code>\nSearch the index to find a bounded range of bytes wherein …\nGiven a <code>Packet</code>, the encoder delay in frames, and the …\n<code>BitReaderLtr</code> reads bits from most-significant to …\n<code>BitReaderRtl</code> reads bits from least-significant to …\n<code>BitStreamLtr</code> reads bits from most-significant to …\n<code>BitStreamRtl</code> reads bits from least-significant to …\nA <code>BufReader</code> reads bytes from a byte buffer.\nA <code>FiniteBitStream</code> is a bit stream that has a known length …\nA <code>FiniteStream</code> is a stream that has a known length in …\n<code>MediaSource</code> is a composite trait of <code>std::io::Read</code> and …\n<code>MediaSourceStream</code> is the main reader type for Symphonia.\n<code>MediaSourceStreamOptions</code> specifies the buffering behaviour …\nA <code>Monitor</code> provides a common interface to examine the …\nA <code>MonitorStream</code> is a passive stream that observes all …\n<code>ReadBitsLtr</code> reads bits from most-significant to …\n<code>ReadBitsRtl</code> reads bits from least-significant to …\n<code>ReadBytes</code> provides methods to read bytes and interpret …\n<code>ReadOnlySource</code> wraps any source implementing <code>std::io::Read</code> …\nA <code>ScopedStream</code> restricts the number of bytes that may be …\n<code>SeekBuffered</code> provides methods to seek within the buffered …\nGets the number of bits left unread.\nThe maximum buffer size. Must be a power of 2. Must be &gt; …\nReturns the length in bytes, if available. This may be an …\nReturns the length of the the stream in bytes.\nReturns the length of the the <code>ScopedStream</code>.\nReturns the number of bytes available for reading.\nReturns the number of bytes available to read.\nReturns the number of bytes that have been read.\nReturns the number of bytes read.\nEnsures that <code>len</code> bytes will be available for backwards …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a mutable reference to the underlying reader.\nGets a reference to the underlying reader.\nIgnores the remainder of the <code>ScopedStream</code>.\nIgnores one bit from the stream or returns an error.\nIgnores one bit from the stream or returns an error.\nIgnores the specified number of bits from the stream or …\nIgnores the specified number of bits from the stream or …\nIgnores the specified number of bytes from the stream or …\nReturns an immutable reference to the inner stream.\nReturns a mutable reference to the inner stream.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the <code>ScopedStream</code> to the inner stream.\nUnwraps this <code>ReadOnlySource&lt;R&gt;</code>, returning the underlying …\nReturns if the source is seekable. This may be an …\nInstantiate a new <code>BitStreamLtr</code> with the given source.\nInstantiate a new <code>BitReaderLtr</code> with the given buffer.\nInstantiate a new <code>BitStreamRtl</code> with the given buffer.\nInstantiate a new <code>BitReaderRtl</code> with the given buffer.\nInstantiate a new <code>BufReader</code> with a given byte buffer.\nInstantiates a new <code>ScopedStream</code> with an upper limit on the …\nInstantiates a new <code>ReadOnlySource&lt;R&gt;</code> by taking ownership …\nGets the position of the stream.\nReads four bytes from the stream and interprets them as a …\nReads four bytes from the stream and interprets them as a …\nReads two bytes from the stream and interprets them as an …\nReads three bytes from the stream and interprets them as …\nReads four bytes from the stream and interprets them as a …\nReads eight bytes from the stream and interprets them as …\nReads two bytes from the stream and interprets them as an …\nReads three bytes from the stream and interprets them as …\nReads four bytes from the stream and interprets them as an …\nReads eight bytes from the stream and interprets them as …\nReads and returns a single bit or returns an error.\nReads and returns a single bit or returns an error.\nReads and returns up to 32-bits or returns an error.\nReads and returns up to 32-bits or returns an error.\nReads up to 32-bits and interprets them as a signed two’…\nReads up to 32-bits and interprets them as a signed two’…\nReads and returns up to 64-bits or returns an error.\nReads and returns up to 64-bits or returns an error.\nReads up to 64-bits and interprets them as a signed two’…\nReads up to 64-bits and interprets them as a signed two’…\nRead a single bit as a boolean value or returns an error.\nRead a single bit as a boolean value or returns an error.\nReads up-to the number of bytes requested, and returns a …\nReads exactly the number of bytes requested, and returns a …\nReads up-to the number of bytes required to fill buf or …\nReturns a reference to the remaining bytes in the buffer …\nReturns a reference to the next <code>len</code> bytes in the buffer …\nReads exactly the number of bytes required to fill be …\nGets the number of bytes buffered and read.\nReads a single byte from the stream and returns it or an …\nReads a codebook value from the <code>BitStream</code> using the …\nReads two bytes from the stream and returns them in …\nReads four bytes from the stream and interprets them as a …\nReads four bytes from the stream and interprets them as a …\nReads two bytes from the stream and interprets them as an …\nReads three bytes from the stream and interprets them as …\nReads four bytes from the stream and interprets them as an …\nReads eight bytes from the stream and interprets them as …\nReads a single signed byte from the stream and returns it …\nReads four bytes from the stream and returns them in …\nReads three bytes from the stream and returns them in …\nReads two bytes from the stream and interprets them as an …\nReads three bytes from the stream and interprets them as …\nReads four bytes from the stream and interprets them as an …\nReads eight bytes from the stream and interprets them as …\nReads a single unsigned byte from the stream and returns …\nReads and returns a unary ones encoded integer or an error.\nReads and returns a unary ones encoded integer or an error.\nReads and returns a unary ones encoded integer that is …\nReads and returns a unary ones encoded integer or an error.\nReads and returns a unary zeros encoded integer or an …\nReads and returns a unary zeros encoded integer or an …\nReads and returns a unary zeros encoded integer that is …\nReads and returns a unary zeros encoded integer that is …\nDiscards any saved bits and resets the <code>BitStream</code> to …\nDiscards any saved bits and resets the <code>BitStream</code> to …\nReads bytes from the stream into a supplied buffer until a …\nReads bytes from a stream into a supplied buffer until a …\nScans up-to <code>scan_len</code> bytes from the stream until a byte …\nScans up-to <code>scan_len</code> bytes from the stream until a byte …\nSeek within the buffered data to an absolute position in …\nSeek within the buffered data relative to the current …\nSeek backwards within the buffered data.\nGet the number of bytes buffered but not yet read.\nThe <code>vlc</code> module provides support for decoding …\n<code>BitOrder</code> describes the relationship between the order of …\n<code>Codebook</code> is a variable-length code decoding table that may …\n<code>CodebookBuilder</code> generates a <code>Codebook</code> using a provided …\n<code>CodebookEntry</code> provides the functions required for an entry …\n<code>Entry16x16</code> is a codebook entry for 16-bit values with …\n<code>Entry16x32</code> is a codebook entry for 16-bit values with …\n<code>Entry16x8</code> is a codebook entry for 16-bit values with codes …\n<code>Entry32x16</code> is a codebook entry for 32-bit values with …\n<code>Entry32x32</code> is a codebook entry for 32-bit values with …\n<code>Entry32x8</code> is a codebook entry for 32-bit values with codes …\n<code>Entry8x16</code> is a codebook entry for 8-bit values with codes …\n<code>Entry8x32</code> is a codebook entry for 8-bit values with codes …\n<code>Entry8x8</code> is a codebook entry for 8-bit values with codes …\nThe maximum jump offset.\nThe type of a jump offset in this entry.\nThe provided codeword have bits in the reverse order as …\nThe type of a value in this entry.\nThe provided codewords have bits in the same order as the …\nSpecify the maximum number of bits that should be consumed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the <code>Codebook</code> is empty.\nReturns <code>true</code> if this entry is a jump entry.\nReturns <code>true</code> if this entry is a value entry.\nGet the number of bits to read after jumping in the table.\nGet the position in the table to jump to.\nConstruct a <code>Codebook</code> using the given codewords, their …\nInstantiates a new <code>CodebookBuilder</code>.\nCreate a new jump entry.\nInstantiates a new <code>CodebookBuilder</code> for sparse codebooks.\nCreates a new value entry.\nGets the value.\nGet the length of the value in bits.\nA binary buffer.\nA boolean value.\n<code>ColorMode</code> indicates how the color of a pixel is encoded in …\nUse the a reasonable default specified by the <code>FormatReader</code> …\nEach pixel in the <code>Visual</code> stores its own color information.\nA flag or indicator. A flag carries no data, but the …\nA floating point number.\nEach pixel in the <code>Visual</code> stores an index into a color …\n<code>Limit</code> defines an upper-bound on how much of a resource …\nSpecify the upper limit of the resource. Units are case …\nA reference to the metadata inside of a MetadataLog.\n<code>MetadataBuilder</code> is the builder for <code>Metadata</code> revisions.\n<code>MetadataLog</code> is a container for time-ordered <code>Metadata</code> …\n<code>MetadataOptions</code> is a common set of options that all …\n<code>Metadata</code> is a container for a single discrete revision of …\nDo not impose any limit.\nA signed integer.\nA 2 dimensional (width and height) size type.\n<code>StandardTagKey</code> is an enumeration providing standardized …\n<code>StandardVisualKey</code> is an enumeration providing standardized …\nA string. This is also the catch-all type for tags with …\nA <code>Tag</code> encapsulates a key-value pair of metadata.\nAn unsigned integer.\nA <code>Tag</code> value.\n<code>VendorData</code> is any binary metadata that is proprietary to a …\nA <code>Visual</code> is any 2 dimensional graphic.\nAdd a <code>Tag</code> to the metadata.\nAdd <code>VendorData</code> to the metadata.\nAdd a <code>Visual</code> to the metadata.\nThe number of bits-per-pixel (aka bit-depth) of the …\nThe color mode of the <code>Visual</code>.\nGets an immutable reference to the current, and therefore …\nThe data of the <code>Visual</code>, encoded as per <code>media_type</code>.\nThe vendor data.\nThe dimensions of the <code>Visual</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe height in pixels.\nA text representation of the vendor’s application …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the <code>Tag</code>’s key string was recognized and …\nReturns <code>true</code> if the current metadata revision is the …\nA key string indicating the type, meaning, or purpose of …\nThe maximum size limit in bytes that a tag may occupy in …\nGets the numeric limit of the limit, or default value. If …\nThe maximum size limit in bytes that a visual (picture) …\nThe Media Type (MIME Type) used to encode the <code>Visual</code>.\nYield the constructed <code>Metadata</code> revision.\nReturns a reducable reference to the metadata inside the …\nInstantiates the <code>MetadataReader</code> with the provided …\nCreate a new <code>Tag</code>.\nInstantiate a new <code>MetadataBuilder</code>.\nIf there are newer <code>Metadata</code> revisions, advances the …\nPushes a new <code>Metadata</code> revision onto the log.\nRead all metadata and return it if successful.\nSkips to, and gets an immutable reference to the latest, …\nIf the <code>Tag</code>’s key string is commonly associated with a …\nGets an immutable slice to the <code>Tag</code>s in this revision.\nAny tags associated with the <code>Visual</code>.\nThe usage and/or content of the <code>Visual</code>.\nThe value of the <code>Tag</code>.\nGets an immutable slice to the <code>VendorData</code> in this revision.\nGets an immutable slice to the <code>Visual</code>s in this revision.\nThe width in pixels.\n<code>Descriptor</code> provides declarative information about …\nInstantiation function for a <code>FormatReader</code>.\nA <code>Hint</code> provides additional information and context when …\n<code>Instantiate</code> is an enumeration of instantiation functions …\nInstantiation function for a <code>MetadataReader</code>.\n<code>Probe</code> scans a <code>MediaSourceStream</code> for metadata and container …\n<code>ProbeResult</code> contains the result of a format probe …\nMetadata that came from the <code>metadata</code> field of <code>ProbeResult</code>.\nThe <code>QueryDescriptor</code> trait indicates that the implementer …\nA list of case-insensitive file extensions that are …\nSearches the provided <code>MediaSourceStream</code> for a container …\nAn instance of a <code>FormatReader</code> for the probed format\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the metadata that was found during probing.\nAn instantiation function.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner metadata log, if it was present.\nA longer, more descriptive, string identifying the codec.\nA byte-string start-of-stream marker that will be searched …\nA log of <code>Metadata</code> revisions read during the probe …\nAdd a MIME/Media-type <code>Hint</code>.\nA list of case-insensitive MIME types that are generally …\nInstantiate an empty <code>Hint</code>.\nSearches the provided <code>MediaSourceStream</code> for metadata or a …\nReturns a list of descriptors.\nRegister a single <code>Descriptor</code>.\nRegister all <code>Descriptor</code>s supported by the parameterized …\nUsing the provided context buffer, score calculate and …\nA function to score a context buffer.\nA short ASCII-only string identifying the codec.\nAdd a file extension <code>Hint</code>.\nThe effective number of bits of the valid (clamped) sample …\nSingle precision (32-bit) floating point.\nDouble precision (64-bit) floating point.\nA unique enum value representing the sample format. This …\nThe largest value that can be represented by this integer …\nThe largest value that can be represented by this integer …\nThe mid-point value between the maximum and minimum sample …\nThe smallest value that can be represented by this integer …\nThe smallest value that can be represented by this integer …\nSigned 16-bit integer.\nSigned 24-bit integer.\nSigned 32-bit integer.\nSigned 8-bit integer.\n<code>Sample</code> provides a common interface for manipulating sample…\nSampleFormat describes the data encoding for an audio …\nUnsigned 16-bit integer.\nUnsigned 24-bit integer.\nUnsigned 32-bit integer.\nUnsigned 8-bit integer.\nIf the sample format does not use the full range of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA signed 24-bit integer sample with an internal signed …\nGet the underlying <code>u32</code> backing this <code>u24</code>.\nGet the underlying <code>i32</code> backing this <code>i24</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the underlying <code>i32</code> backing this <code>i24</code>.\nGet the underlying <code>u32</code> backing this <code>u24</code>.\nReturn the memory representation of this <code>u24</code> as a byte …\nReturn the memory representation of this <code>i24</code> as a byte …\nAn unsigned 24-bit integer sample with an internal …\nA <code>Duration</code> indicates a positive span of time.\n<code>Time</code> represents a duration of time in seconds, or the …\nA <code>TimeBase</code> is the conversion factor between time, …\nA <code>TimeStamp</code> represents an instantenous instant in time …\nAccurately calculates a <code>Time</code> using the <code>TimeBase</code> and the …\nAccurately calculates a <code>TimeStamp</code> from the given <code>Time</code> …\nThe denominator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>TimeBase</code>. Panics if either the numerator or …\nThe numerator.\nUtilities for bit manipulation.\nUtilities for clamping numeric values to a defined range.\nReturns true if the unsigned 16-bit integer contains one …\nReturns true if the unsigned 32-bit integer contains one …\nReturns true if the unsigned 64-bit integer contains one …\nMasks the bit at the specified bit index.\nMasks all bits with an index less than idx.\nMasks all bits with an index less than or equal to idx.\nMasks out all bits in positions less than upper, but …\nMasks all bits with an index greater than idx.\nMasks all bits with an index greater than or equal to idx.\nSign extends an arbitrary, 16-bit or less, signed two’s …\nSign extends an arbitrary, 32-bit or less, signed two’s …\nSign extends an arbitrary, 64-bit or less, signed two’s …\nSign extends an arbitrary, 8-bit or less, signed two’s …\nReturns the number of trailing ones in an unsigned 16-bit …\nReturns the number of trailing ones in an unsigned 32-bit …\nReturns the number of trailing ones in an unsigned 64-bit …\nReturns the number of trailing ones in an unsigned 8-bit …\nClamps the given value to the [-1.0, 1.0] range.\nClamps the given value to the [-1.0, 1.0] range.\nClamps the given value to the [-32_767, 32_768] range.\nClamps the given value to the [-8_388_608, 8_388_607] …\nClamps the given value to the [-2_147_483_648, …\nClamps the given value to the [-128, 127] range.\nClamps the given value to the [0, 65_535] range.\nClamps the given value to the [0, 16_777_215] range.\nClamps the given value to the [0, 4_294_967_295] range.\nClamps the given value to the [0, 255] range.\nThe <code>codecs</code> module re-exports all enabled Symphonia …\nThe <code>formats</code> module re-exports all enabled Symphonia format …\nGets the default <code>CodecRegistry</code>. This registry …\nGets the default <code>Probe</code>. This registry pre-registers all …\nRegisters all the codecs selected by the <code>feature</code> flags in …\nRegisters all the formats selected by the <code>feature</code> flags in …\nAbort signal from C abort function.\nFailed to parse IP address.\nTimer signal from C alarm function.\nTo refresh all processes.\nAlways update the related information.\nBus error (bad memory access).\nContains memory limits for the current process.\nChild stopped or terminated.\nGetting a component temperature information.\nInteracting with components.\nContinue if stopped.\nContains all the methods of the <code>Cpu</code> struct.\nUsed to determine what you want to refresh specifically on …\nLinux\nStruct containing a disk information.\nEnum containing the different supported kinds of disks.\nUsed to determine what you want to refresh specifically on …\nType containing read and written bytes.\nDisks interface.\nThe signal failed to be sent to the target process.\nFloating point exception.\nA group id wrapping a platform specific type.\nType containing group information.\nInteracting with groups.\nHDD type.\nHangup detected on controlling terminal or death of …\nI/O now possible.\nIOT trap. A synonym for SIGABRT.\nReturns <code>true</code> if this OS is supported. Please refer to the …\nLinux\nIllegal instruction.\nA number is not in hexadecimal format.\nInterrupt from keyboard.\nInput is not of format <code>{02X}:{02X}:{02X}:{02X}:{02X}:{02X}</code>.\nInput is not of format <code>[IP address]/[number]</code>.\nIP networks address for network interface.\nError type returned from <code>MacAddr::from_str</code> implementation.\nKernel thread.\nKill signal.\nEnum describing possible <code>Process::kill_and_wait</code> errors.\nA struct representing system load average value.\nFreeBSD\nThis is the minimum interval time used internally by …\nMAC address for network interface.\nError type returned from <code>MacAddr::from_str</code> implementation.\nUsed to determine which memory you want to refresh …\nThis type allows to retrieve motherboard-related …\nGetting volume of received and transmitted data.\nInteracting with network interfaces.\nNever update the related information.\nOnly update the related information if it was not already …\nLinux\nProcess ID.\nBroken pipe: write to pipe with no readers.\nPollable event (Sys V). Synonym for IO\nPower failure (System V).\nPrefix is not an integer.\nStruct containing information of a process.\nUsed to determine what you want to refresh specifically on …\nEnum describing the different status of a process.\nThis enum allows you to specify if you want all processes …\nThis type allows to retrieve product-related information.\nProfiling time expired.\nQuit from keyboard.\nUsed to determine what you want to refresh specifically on …\nRunning.\nSSD type.\nReturns the list of the supported signals on this system …\nInvalid memory reference.\nAn enum representing signals on UNIX-like systems.\nThis signal doesn’t exist on this platform.\nLinux\nTo refresh only the processes with the listed <code>Pid</code>.\nStop process.\nLinux\nBad argument to routine (SVr4).\nType containing system’s information such as processes, …\nStop typed at terminal.\nTerminal input for background process.\nTerminal output for background process.\nTermination signal.\nEnum describing the different kind of threads.\nLinux\nTrace/breakpoint trap.\nA <code>MacAddr</code> with all bytes set to <code>0</code>.\nA user id wrapping a platform specific type.\nLinux\nUnknown type.\nUnknown.\nThis enum allows you to specify when you want the related …\nUrgent condition on socket.\nType containing user information.\nUser-defined signal 1.\nUser-defined signal 2.\nUser thread.\nInteracting with users.\nVirtual alarm clock.\nLinux\nLinux\nWindows resize signal.\nCPU time limit exceeded.\nFile size limit exceeded.\nLinux/FreeBSD/macOS\nReturns the total accumulated CPU usage (in …")