searchState.loadedDescShard("devela", 21, "The IP of the network interface.\nAllows to convert <code>Pid</code> into <code>u32</code>.\nReturns the motherboard asset tag.\nReturns the amount of available RAM in bytes.\nReturns the available disk size, in bytes.\nReturns the time (in seconds) when the system booted since …\nReturns the CPU’s brand.\nRetrieves the limits for the current cgroup (if any), …\nReturns the command line.\nReturns the value of the “cmd” refresh kind.\nReturns the value of the “cpu” refresh kind. It will …\nReturns the value of the “cpu” refresh kind.\nReturns the CPU architecture (eg. x86, amd64, aarch64, ……\nReturns the total CPU usage (in %). Notice that it might …\nReturns this CPU’s usage.\nReturns the value of the “cpu_usage” refresh kind.\nReturns the list of the CPUs.\nReturns the highest temperature before the component halts …\nReturns the current working directory.\nReturns the value of the “cwd” refresh kind.\nReturns number of bytes read and written to disk.\nReturns the value of the “disk_usage” refresh kind.\nReturns the distribution id as defined by os-release, or …\nReturns the distribution ids of operating systems that are …\nReturns the effective group ID of the process.\nReturns the user ID of the effective owner of this process …\nReturns the environment variables of the process.\nReturns the value of the “environ” refresh kind.\nReturns the number of incoming errors since the last …\nReturns the number of outcoming errors since the last …\nCreates a new <code>DiskRefreshKind</code> with every refresh set to …\nCreates a new <code>ProcessRefreshKind</code> with every refresh set to …\nCreates a new <code>CpuRefreshKind</code> with every refresh set to <code>true</code>…\nCreates a new <code>MemoryRefreshKind</code> with every refresh set to …\nCreates a new <code>RefreshKind</code> with every refresh set to <code>true</code>/…\nReturns the path to the process.\nReturns the value of the “exe” refresh kind.\nReturns <code>true</code> if the process doesn’t exist anymore but …\nReturns the product family identifier.\nAverage load within fifteen minutes.\nReturns the file system used on this disk (so for example: …\nAverage load within five minutes.\nReturns the amount of free RAM in bytes.\nFree memory (in bytes) for the current cgroup.\nReturns the amount of free SWAP in bytes.\nFree swap (in bytes) for the current cgroup.\nReturns the CPU’s frequency.\nReturns the value of the “frequency” refresh kind.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAllows to convert a <code>u32</code> into <code>Pid</code>.\nReturns the pid for the current process.\nReturns the <code>User</code> matching the given <code>user_id</code>.\nReturns “global” CPUs usage (aka the addition of all …\nReturns the process group ID of the process.\nReturns the group ID of the user.\nReturns the groups of the user.\nReturns the system hostname based off DNS.\nReturns the identifier of the component.\nReturns the ID of the user.\nReturns the ID of the group.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the value of the “io_usage” refresh kind.\nReturns the Ip Networks associated to current interface.\nReturns <code>true</code> if the disk is read-only.\nReturns <code>true</code> if the disk is removable.\nChecks if this <code>MacAddr</code> has all bytes equal to <code>0</code>.\nProvides kernel version following this string format:\nReturns the system’s kernel version.\nSends <code>Signal::Kill</code> to the process (which is the only …\nSends <code>Signal::Kill</code> to the process then waits for its …\nSends the given <code>signal</code> to the process. If the signal doesn…\nSends the given <code>signal</code> to the process.then waits for its …\nReturns the kind of disk.\nReturns the value of the “kind” refresh kind.\nReturns the label of the component.\nReturns the components list.\nReturns the disks list.\nReturns the network interfaces map.\nReturns the users list.\nReturns the groups list.\nReturns the components list.\nReturns the disks list.\nReturns the users list.\nReturns the groups list.\nReturns the system load average value.\nReturns the system long os version.\nReturns the MAC address associated to current interface.\nReturns the maximum temperature of the component (in …\nReturns the memory usage (in bytes).\nReturns the value of the “memory” refresh kind.\nReturns the value of the “memory” refresh kind.\nReturns the mount point of the disk (<code>/</code> for example).\nReturns the Maximum Transfer Unit (MTU) of the interface.\nReturns the disk name.\nReturns the system name.\nReturns the motherboard name.\nReturns the product name.\nReturns the name of the process.\nReturns this CPU’s name.\nReturns the name of the user.\nReturns the name of the group.\nCreates a new empty <code>Components</code> type.\nCreates a new empty <code>Disks</code> type.\nCreates a new empty <code>Networks</code> type.\nCreates a new <code>System</code> instance with nothing loaded.\nCreates a new instance of the <code>Motherboard</code> type.\nCreates a new empty <code>Users</code> type.\nCreates a new empty <code>Groups</code> type.\nCreates a new <code>System</code> instance with everything loaded.\nCreates a new <code>Components</code> type with the components list …\nCreates a new <code>Disks</code> type with the disk list loaded.\nCreates a new <code>Networks</code> type with the network interfaces …\nCreates a new <code>Users</code> type with the user list loaded.\nCreates a new <code>Groups</code> type with the group list loaded.\nCreates a new <code>Disks</code> type with the disk list loaded and …\nCreates a new <code>System</code> instance and refresh the data …\nCreates a new <code>DiskRefreshKind</code> with every refresh set to …\nCreates a new <code>ProcessRefreshKind</code> with every refresh set to …\nCreates a new <code>CpuRefreshKind</code> with every refresh set to …\nCreates a new <code>MemoryRefreshKind</code> with every refresh set to …\nCreates a new <code>RefreshKind</code> with every refresh set to <code>false</code>/…\nAverage load within one minute.\nReturns the number of open files in the current process.\nReturns the (default) maximum number of open files for a …\nReturns the maximum number of open files for the current …\nReturns the system version (e.g. for macOS this will …\nReturns the number of incoming packets since the last …\nReturns the number of outcoming packets since the last …\nReturns the parent PID.\nReturns the number of physical cores on the CPU or <code>None</code> if …\nReturns the PID of the process.\nThe netmask, prefix of the IP address.\nReturns the process corresponding to the given <code>pid</code> or <code>None</code> …\nReturns the process list.\nReturns the value of the “processes” refresh kind.\nReturns an iterator of processes with exactly the given …\nReturns an iterator of process containing the given <code>name</code>.\nReturns the value of the “ram” refresh kind.\nNumber of read bytes since the last refresh.\nReturns the number of received bytes since the last …\nRefreshes the components list.\nRefreshes component.\nUpdates the disk’ information with everything loaded.\nRefreshes the listed disks’ information.\nRefreshes the network interfaces.\nThe user list will be emptied then completely recomputed.\nThe group list will be emptied then completely recomputed.\nRefreshes all system and processes information.\nRefreshes all information related to CPUs information.\nRefreshes CPUs frequency information.\nRefreshes the list of CPU.\nRefreshes CPUs specific information.\nRefreshes CPUs usage.\nRefreshes RAM and SWAP usage.\nRefreshes system memory specific information.\nGets all processes and updates their information, along …\nGets all processes and updates the specified information.\nUpdates the disk’s information corresponding to the …\nRefreshes the disks’ information according to the given …\nRefreshes according to the given <code>RefreshKind</code>. It calls the …\nReturns the path of the root directory.\nReturns the value of the “root” refresh kind.\nResident Set Size (RSS) (in bytes) for the current cgroup.\nReturns for how much time the process has been running (in …\nReturns the motherboard serial number.\nReturns the product serial number.\nReturns the session ID for the current process or <code>None</code> if …\nThis function is only used on Linux targets, when the …\nReturns the time where the process was started (in …\nReturns the status of the process.\nReturns the product Stock Keeping Unit (SKU).\nReturns the value of the “storage” refresh kind.\nReturns the value of the “swap” refresh kind.\nTasks run by this process. If there are none, returns <code>None</code>.\nReturns the value of the “tasks” refresh kind.\nReturns the temperature of the component (in celsius …\nIf the process is a thread, it’ll return <code>Some</code> with the …\nReturns the total number of incoming errors.\nReturns the total number of outcoming errors.\nReturns the RAM size in bytes.\nTotal memory (in bytes) for the current cgroup.\nReturns the total number of incoming packets.\nReturns the total number of outcoming packets.\nTotal number of read bytes.\nReturns the total number of received bytes.\nReturns the total disk size, in bytes.\nReturns the SWAP size in bytes.\nReturns the total number of transmitted bytes.\nTotal number of written bytes.\nReturns the number of transmitted bytes since the last …\nReturns system uptime (in seconds).\nReturns number of bytes read and written by the disk\nReturns the amount of used RAM in bytes.\nReturns the amount of used SWAP in bytes.\nReturns the value of the “user” refresh kind. It will …\nReturns the ID of the owner user of this process or <code>None</code> …\nReturns the product UUID.\nReturns the CPU’s vendor id.\nReturns the motherboard vendor name.\nReturns the product vendor name.\nReturns the motherboard version.\nReturns the product version.\nReturns the virtual memory usage (in bytes).\nWaits for process termination and returns its <code>ExitStatus</code> …\nSets the value of the “cmd” refresh kind.\nSets the value of the “cpu” refresh kind to <code>true</code>.\nSets the value of the “cpu” refresh kind to <code>Some(...)</code>.\nSets the value of the “cpu_usage” refresh kind to <code>true</code>.\nSets the value of the “cwd” refresh kind.\nSets the value of the “disk_usage” refresh kind to <code>true</code>…\nSets the value of the “environ” refresh kind.\nSets the value of the “exe” refresh kind.\nSets the value of the “frequency” refresh kind to <code>true</code>.\nSets the value of the “io_usage” refresh kind to <code>true</code>.\nSets the value of the “kind” refresh kind to <code>true</code>.\nSets the value of the “memory” refresh kind to <code>true</code>.\nSets the value of the “memory” refresh kind to …\nSets the value of the “processes” refresh kind to …\nSets the value of the “ram” refresh kind to <code>true</code>.\nSets the value of the “root” refresh kind.\nSets the value of the “storage” refresh kind to <code>true</code>.\nSets the value of the “swap” refresh kind to <code>true</code>.\nSets the value of the “tasks” refresh kind to <code>true</code>.\nSets the value of the “user” refresh kind.\nSets the value of the “cmd” refresh kind to …\nSets the value of the “cpu” refresh kind to <code>false</code>.\nSets the value of the “cpu” refresh kind to <code>None</code>.\nSets the value of the “cpu_usage” refresh kind to <code>false</code>…\nSets the value of the “cwd” refresh kind to …\nSets the value of the “disk_usage” refresh kind to …\nSets the value of the “environ” refresh kind to …\nSets the value of the “exe” refresh kind to …\nSets the value of the “frequency” refresh kind to <code>false</code>…\nSets the value of the “io_usage” refresh kind to <code>false</code>.\nSets the value of the “kind” refresh kind to <code>false</code>.\nSets the value of the “memory” refresh kind to <code>false</code>.\nSets the value of the “memory” refresh kind to <code>None</code>.\nSets the value of the “processes” refresh kind to <code>None</code>.\nSets the value of the “ram” refresh kind to <code>false</code>.\nSets the value of the “root” refresh kind to …\nSets the value of the “storage” refresh kind to <code>false</code>.\nSets the value of the “swap” refresh kind to <code>false</code>.\nSets the value of the “tasks” refresh kind to <code>false</code>.\nSets the value of the “user” refresh kind to …\nNumber of written bytes since the last refresh.\nTraits, helpers, and type definitions for asynchronous I/O …\nTCP/UDP/Unix bindings for <code>tokio</code>.\nPins a value on the stack.\nAn implementation of asynchronous process management for …\nThe Tokio runtime.\nSpawns a new asynchronous task, returning a <code>JoinHandle</code> for …\nDue to the <code>Stream</code> trait’s inclusion in <code>std</code> landing later …\nSynchronization primitives for use in asynchronous …\nAsynchronous green-threads.\nDeclares a new task-local key of type <code>tokio::task::LocalKey</code>…\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nAn entity already exists, often a file.\nProgram argument list too long.\nReads bytes asynchronously.\nAn extension trait which adds utility methods to …\nReads bytes from a source.\nReads bytes from a source.\nSeek bytes asynchronously.\nAn extension trait that adds utility methods to <code>AsyncSeek</code> …\nWrites bytes asynchronously.\nWrites bytes to a sink.\nThe operation failed because a pipe was closed.\nThe <code>BufReader</code> struct adds buffering to any reader.\nWraps a type that is <code>AsyncWrite</code> and <code>AsyncRead</code>, and buffers …\nWraps a writer and buffers its output.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nCross-device or cross-filesystem (hard) link or rename.\nSets the offset to the current position plus the specified …\nDeadlock (avoided).\nA non-empty directory was specified where an empty …\nA bidirectional pipe to read and write bytes in memory.\n<code>Empty</code> ignores any data written via <code>AsyncWrite</code>, and will …\nSets the offset to the size of this object plus the …\nContains the error value\nThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…\nA list specifying general categories of I/O error.\nExecutable file is busy.\nFile larger than allowed or supported.\nLoop in the filesystem or IO subsystem; often, too many …\nThe remote host is not reachable.\nThe operation was partially successful and needs to be …\nThis operation was interrupted.\nData not valid for the operation were encountered.\nA filename was invalid.\nA parameter was incorrect.\nThe filesystem object is, unexpectedly, a directory.\nJoins two values implementing <code>AsyncRead</code> and <code>AsyncWrite</code> …\nReads lines from an <code>AsyncBufRead</code>.\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nA filesystem object is, unexpectedly, not a directory.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nSeek on unseekable file.\nContains the success value\nA custom error that does not fall under any other I/O …\nAn operation could not be completed, because it failed to …\nThe operation lacked the necessary privileges to complete.\nFilesystem quota or some other kind of quota was exceeded.\nA wrapper around a byte buffer that is incrementally …\nThe readable half of a value returned from <code>split</code>.\nThe filesystem or storage medium is read-only, but a write …\nAn async reader which yields one byte over and over and …\nResource is busy.\nA specialized <code>Result</code> type for I/O operations.\nEnumeration of possible methods to seek within an I/O …\nA unidirectional pipe to read and write bytes in memory.\nAn async writer which will move data into the void.\nSplitter for the <code>split</code> method.\nStale network file handle.\nSets the offset to the provided number of bytes.\nA handle to the standard error stream of a process.\nA handle to the standard input stream of a process.\nA handle to the standard output stream of a process.\nThe underlying storage (typically, a filesystem) is full.\nStream for the <code>take</code> method.\nThe I/O operation’s timeout expired, causing it to be …\nToo many (hard) links to the same filesystem object.\nAn error returned when an operation could not be completed …\nThis operation is unsupported on this platform.\nThe operation needs to block to complete, but the blocking …\nThe writable half of a value returned from <code>split</code>.\nAn error returned when an operation could not be completed …\nAdvances the size of the filled region of the buffer.\nAsserts that the first <code>n</code> unfilled bytes of the buffer are …\nReturns a reference to the internally buffered data.\nReturns a reference to the internally buffered data.\nReturns the total capacity of the buffer.\nCreates a new <code>AsyncRead</code> instance that chains this stream …\nClears the buffer, resetting the filled region to empty.\nTells this buffer that <code>amt</code> bytes have been consumed from …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nAsynchronously copies the entire contents of a reader into …\nCopies data in both directions between <code>a</code> and <code>b</code>.\nCopies data in both directions between <code>a</code> and <code>b</code> using …\nAsynchronously copies the entire contents of a reader into …\nCreate a new pair of <code>DuplexStream</code>s that act like a pair of …\nCreates a value that is always at EOF for reads, and …\nReturns the contents of the internal buffer, filling it …\nReturns a shared reference to the filled portion of the …\nReturns a mutable reference to the filled portion of the …\nFlushes this output stream, ensuring that all …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a mutable reference to the underlying reader.\nObtains a mutable reference to the underlying reader.\nGets a mutable reference to the underlying writer.\nGets a mutable reference to the underlying I/O object.\nGets a mutable reference to the underlying reader.\nGets a pinned mutable reference to the underlying reader.\nGets a pinned mutable reference to the underlying writer.\nGets a pinned mutable reference to the underlying I/O …\nGets a pinned mutable reference to the underlying reader.\nGets a reference to the underlying reader.\nObtains a reference to the underlying reader.\nGets a reference to the underlying writer.\nGets a reference to the underlying I/O object.\nGets a reference to the underlying reader.\nReturns a mutable reference to the unfilled part of the …\nReturns a mutable reference to the first <code>n</code> bytes of the …\nReturns a shared reference to the initialized portion of …\nReturns a mutable reference to the initialized portion of …\nReturns a mutable reference to the entire buffer, without …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSplits this <code>Join</code> back into its <code>AsyncRead</code> and <code>AsyncWrite</code> …\nConsumes the <code>Take</code>, returning the wrapped reader.\nUnwraps this <code>Lines&lt;R&gt;</code>, returning the underlying reader.\nConsumes this <code>BufWriter</code>, returning the underlying writer.\nConsumes this <code>BufStream</code>, returning the underlying I/O …\nConsumes this <code>BufReader</code>, returning the underlying reader.\nChecks if this <code>ReadHalf</code> and some <code>WriteHalf</code> were split from …\nChecks if this <code>WriteHalf</code> and some <code>ReadHalf</code> were split from …\nDetermines if this writer has an efficient …\nJoin two values implementing <code>AsyncRead</code> and <code>AsyncWrite</code> into …\nReturns the remaining number of bytes that can be read …\nReturns a stream over the lines of this reader. This …\nCreates a new <code>ReadBuf</code> from a fully initialized buffer.\nCreates a new <code>BufWriter</code> with a default buffer capacity. …\nWraps a type in both <code>BufWriter</code> and <code>BufReader</code>.\nCreates a new <code>BufReader</code> with a default buffer capacity. …\nCreates unidirectional buffer that acts like in memory …\nReturns the next line in the stream.\nReturns the next segment in the stream.\nWaits for a seek operation to complete.\nAttempts to return the contents of the internal buffer, …\nAttempts to flush the object, ensuring that any buffered …\nPolls for the next line in the stream.\nPolls for the next segment in the stream.\nAttempts to read from the <code>AsyncRead</code> into <code>buf</code>.\nInitiates or attempts to shut down this writer, returning …\nAttempt to write bytes from <code>buf</code> into the object.\nLike <code>poll_write</code>, except that it writes from a slice of …\nAppends data to the buffer, advancing the written position …\nPulls some bytes from this source into the specified …\nPulls some bytes from this source into the specified …\nReads the exact number of bytes required to fill <code>buf</code>.\nReads an 32-bit floating point type in big-endian order …\nReads an 32-bit floating point type in little-endian order …\nReads an 64-bit floating point type in big-endian order …\nReads an 64-bit floating point type in little-endian order …\nReads an signed 128-bit integer in big-endian order from …\nReads an signed 128-bit integer in little-endian order …\nReads a signed 16-bit integer in big-endian order from the …\nReads a signed 16-bit integer in little-endian order from …\nReads a signed 32-bit integer in big-endian order from the …\nReads a signed 32-bit integer in little-endian order from …\nReads an signed 64-bit integer in big-endian order from the\nReads an signed 64-bit integer in little-endian order from …\nReads a signed 8 bit integer from the underlying reader.\nReads all bytes until a newline (the 0xA byte) is reached, …\nReads all bytes until EOF in this source, placing them …\nReads all bytes until EOF in this source, appending them …\nReads an unsigned 128-bit integer in big-endian order from …\nReads an unsigned 128-bit integer in little-endian order …\nReads an unsigned 16-bit integer in big-endian order from …\nReads an unsigned 16-bit integer in little-endian order …\nReads an unsigned 32-bit integer in big-endian order from …\nReads an unsigned 32-bit integer in little-endian order …\nReads an unsigned 64-bit integer in big-endian order from …\nReads an unsigned 64-bit integer in little-endian order …\nReads an unsigned 8 bit integer from the underlying reader.\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nReturns a reference to the inner reader.\nReturns a mutable reference to the inner reader.\nReturns a pinned mutable reference to the inner reader.\nReturns the number of bytes at the end of the slice that …\nCreates an instance of an async reader that infinitely …\nCreates a future which will rewind to the beginning of the …\nCreates a future which will seek an IO object, and then …\nSets the size of the filled region of the buffer.\nSets the number of bytes that can be read before this …\nShuts down the output stream, ensuring that the value can …\nCreates unidirectional buffer that acts like in memory …\nCreates an instance of an async writer which will …\nSplits a single value implementing <code>AsyncRead + AsyncWrite</code> …\nReturns a stream of the contents of this reader split on …\nAttempts to seek to an offset, in bytes, in a stream.\nConstructs a new handle to the standard error of the …\nConstructs a new handle to the standard input of the …\nConstructs a new handle to the standard output of the …\nCreates a future which will return the current seek …\nReturns a new <code>ReadBuf</code> comprised of the unfilled section up …\nCreates an adaptor which reads at most <code>limit</code> bytes from it.\nReturns a mutable reference to the unfilled part of the …\nCreates a new <code>ReadBuf</code> from a buffer that may be …\nReunites with a previously split <code>WriteHalf</code>.\nCreates a new <code>BufWriter</code> with the specified buffer capacity.\nCreates a <code>BufStream</code> with the specified <code>BufReader</code> capacity …\nCreates a new <code>BufReader</code> with the specified buffer capacity.\nWrites a buffer into this writer, returning how many bytes …\nAttempts to write an entire buffer into this writer.\nAttempts to write an entire buffer into this writer.\nWrites a buffer into this writer, advancing the buffer’s …\nWrites an 32-bit floating point type in big-endian order …\nWrites an 32-bit floating point type in little-endian …\nWrites an 64-bit floating point type in big-endian order …\nWrites an 64-bit floating point type in little-endian …\nWrites an signed 128-bit integer in big-endian order to the\nWrites an signed 128-bit integer in little-endian order to …\nWrites a signed 16-bit integer in big-endian order to the …\nWrites a signed 16-bit integer in little-endian order to …\nWrites a signed 32-bit integer in big-endian order to the …\nWrites a signed 32-bit integer in little-endian order to …\nWrites an signed 64-bit integer in big-endian order to the …\nWrites an signed 64-bit integer in little-endian order to …\nWrites a signed 8-bit integer to the underlying writer.\nWrites an unsigned 128-bit integer in big-endian order to …\nWrites an unsigned 128-bit integer in little-endian order …\nWrites an unsigned 16-bit integer in big-endian order to …\nWrites an unsigned 16-bit integer in little-endian order …\nWrites an unsigned 32-bit integer in big-endian order to …\nWrites an unsigned 32-bit integer in little-endian order …\nWrites an unsigned 64-bit integer in big-endian order to …\nWrites an unsigned 64-bit integer in little-endian order …\nWrites an unsigned 8-bit integer to the underlying writer.\nLike <code>write</code>, except that it writes from a slice of buffers.\nReturns a reference to the inner writer.\nReturns a mutable reference to the inner writer.\nReturns a pinned mutable reference to the inner writer.\nConverts or resolves without blocking to one or more …\nRepresentation of a child process spawned onto an event …\nThe standard error stream for spawned children.\nThe standard input stream for spawned children.\nThe standard output stream for spawned children.\nThis structure mimics the API of <code>std::process::Command</code> …\nAdds an argument to pass to the program.\nSets executable argument.\nAdds multiple arguments to pass to the program.\nCheaply convert to a <code>&amp;std::process::Command</code> for places …\nCheaply convert to a <code>&amp;mut std::process::Command</code> for places …\nSets the working directory for the child process.\nInserts or updates an environment variable mapping.\nClears the entire environment map for the child process.\nRemoves an environment variable mapping.\nAdds or updates multiple environment variable mappings.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an asynchronous <code>ChildStdin</code> from a synchronous one.\nCreates an asynchronous <code>ChildStdout</code> from a synchronous one.\nCreates an asynchronous <code>ChildStderr</code> from a synchronous one.\nReturns the boolean value that was previously set by …\nSimilar to <code>uid</code> but sets the group ID of the child process. …\nReturns the OS-assigned process identifier associated with …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into <code>OwnedFd</code>.\nConvert into <code>OwnedFd</code>.\nConvert into <code>OwnedFd</code>.\nCheaply convert into a <code>std::process::Command</code>.\nForces the child to exit.\nControls whether a <code>kill</code> operation should be invoked on a …\nConstructs a new <code>Command</code> for launching the program at path …\nExecutes the command as a child process, waiting for it to …\nSchedules a closure to be run just before the <code>exec</code> …\nSets the process group ID (PGID) of the child process. …\nExecutes the command as a child process, returning a …\nAttempts to force the child to exit, but does not wait for …\nExecutes the command as a child process, waiting for it to …\nSets configuration for the child process’s standard …\nThe handle for reading from the child’s standard error …\nSets configuration for the child process’s standard …\nThe handle for writing to the child’s standard input …\nSets configuration for the child process’s standard …\nThe handle for reading from the child’s standard output …\nAttempts to collect the exit status of the child if it has …\nSets the child process’s user ID. This translates to a …\nWaits for the child to exit completely, returning the …\nReturns a future that will resolve to an <code>Output</code>, …\nBuilds Tokio Runtime with custom configuration values.\nThe flavor that executes all tasks on the current thread.\nRuntime context guard.\nHandle to the runtime.\nThe flavor that executes tasks across multiple threads.\nThe Tokio runtime.\nThe flavor of a <code>Runtime</code>.\nHandle to the runtime’s metrics.\nError returned by <code>try_current</code> when no Runtime has been …\nRuns a future to completion on this <code>Handle</code>’s associated …\nRuns a future to completion on the Tokio runtime. This is …\nCreates the configured <code>Runtime</code>.\nReturns a <code>Handle</code> view over the currently running <code>Runtime</code>.\nEnables both I/O and time drivers.\nEnables the I/O driver.\nEnters the runtime context. This allows you to construct …\nEnters the runtime context.\nSets the number of scheduler ticks after which the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the number of tasks currently scheduled in the …\nSets the number of scheduler ticks after which the …\nReturns a handle to the runtime’s spawner.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the call failed because there is currently …\nReturns true if the call failed because the Tokio context …\nSpecifies the limit for additional threads spawned by the …\nEnables the I/O driver and configures the max number of …\nReturns a view that lets you get information about how the …\nReturns a view that lets you get information about how the …\nCreates a new runtime instance with default configuration …\nReturns a new builder with the current thread scheduler …\nReturns a new builder with the multi thread scheduler …\nReturns the current number of alive tasks in the runtime.\nReturns the number of worker threads used by the runtime.\nExecutes function <code>f</code> just before a thread is parked (goes …\nExecutes function <code>f</code> after each thread is started but …\nExecutes function <code>f</code> before each thread stops.\nExecutes function <code>f</code> just after a thread unparks (starts …\nReturns the flavor of the current <code>Runtime</code>.\nShuts down the runtime, without waiting for any spawned …\nShuts down the runtime, waiting for at most <code>duration</code> for …\nSpawns a future onto the Tokio runtime.\nSpawns a future onto the Tokio runtime.\nRuns the provided function on an executor dedicated to …\nRuns the provided function on an executor dedicated to …\nSets a custom timeout for a thread in the blocking pool.\nSets name of threads spawned by the <code>Runtime</code>’s thread …\nSets a function used to generate the name of threads …\nSets the stack size (in bytes) for worker threads.\nReturns a Handle view over the currently running Runtime\nReturns the total number of times the given worker thread …\nReturns the total number of times the given worker thread …\nSets the number of worker threads the <code>Runtime</code> will use.\nReturns the amount of time the given worker thread has …\nError returned from the <code>Semaphore::acquire</code> function.\nThe cell was already initialized when <code>OnceCell::set</code> was …\nA barrier enables multiple tasks to synchronize the …\nA <code>BarrierWaitResult</code> is returned by <code>wait</code> when all tasks in …\nThe semaphore has been closed and cannot issue new permits.\nThe cell is currently being initialized.\nThe maximum number of permits which a semaphore can hold. …\nA handle to a held <code>Mutex</code> that has had a function applied …\nAn asynchronous <code>Mutex</code>-like type.\nA handle to a held <code>Mutex</code>. The guard can be held across any …\nThe semaphore has no available permits.\nNotifies a single task to wake up.\nA thread-safe cell that can be written to only once.\nA owned handle to a held <code>Mutex</code> that has had a function …\nAn owned handle to a held <code>Mutex</code>.\nOwned RAII structure used to release the exclusive write …\nOwned RAII structure used to release the shared read …\nOwned RAII structure used to release the exclusive write …\nAn owned permit from the semaphore.\nAn asynchronous reader-writer lock.\nRAII structure used to release the exclusive write access …\nRAII structure used to release the shared read access of a …\nRAII structure used to release the exclusive write access …\nCounting semaphore performing asynchronous permit …\nA permit from the semaphore.\nErrors that can be returned from <code>OnceCell::set</code>.\nA thread-safe cell that can be written to only once.\nError that can be returned from <code>SetOnce::set</code>.\nError returned from the <code>Semaphore::try_acquire</code> function.\nError returned from the <code>Mutex::try_lock</code>, <code>RwLock::try_read</code> …\nAcquires a permit from the semaphore.\nAcquires <code>n</code> permits from the semaphore.\nAcquires <code>n</code> permits from the semaphore.\nAcquires a permit from the semaphore.\nAdds <code>n</code> new permits to the semaphore.\nReturns the current number of available permits.\nBlockingly locks this <code>Mutex</code>. When the lock has been …\nBlockingly locks this <code>Mutex</code>. When the lock has been …\nBlockingly locks this <code>RwLock</code> with shared read access.\nBlockingly locks this <code>RwLock</code> with exclusive write access.\nA multi-producer, multi-consumer broadcast queue. Each …\nCloses the semaphore.\nCreates a new lock in an unlocked state ready for use.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.\nCreates a new empty <code>OnceCell</code> instance.\nCreates a new empty <code>SetOnce</code> instance.\nCreate a new <code>Notify</code>, initialized without a permit.\nCreates a new semaphore with the initial number of permits.\nCreates a new <code>OnceCell</code> that contains the provided value.\nCreates a new <code>SetOnce</code> that contains the provided value.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …\nAtomically downgrades a write lock into a read lock …\nAtomically downgrades a write lock into a read lock …\nMakes a new <code>OwnedRwLockReadGuard</code> for a component of the …\nMakes a new <code>RwLockReadGuard</code> for a component of the locked …\nForgets the permit <strong>without</strong> releasing it back to the …\nForgets the permit <strong>without</strong> releasing it back to the …\nDecrease a semaphore’s permits by a maximum of <code>n</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNamed future types.\nReturns a reference to the value currently stored in the …\nReturns a reference to the value currently stored in the …\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the value currently stored …\nGets the value currently in the <code>OnceCell</code>, or initialize it …\nGets the value currently in the <code>OnceCell</code>, or initialize it …\nReturns <code>true</code> if the <code>OnceCell</code> currently contains a value, …\nReturns <code>true</code> if the <code>SetOnce</code> currently contains a value, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the mutex, returning the underlying data.\nConsumes the lock, returning the underlying data.\nTakes the value from the cell, destroying the cell in the …\nTakes the value from the cell, destroying the cell in the …\nConverts this <code>OwnedRwLockWriteGuard</code> into an …\nConverts this <code>RwLockWriteGuard</code> into an …\nWhether <code>SetError</code> is <code>SetError::AlreadyInitializedError</code>.\nReturns true if the semaphore is closed\nWhether <code>SetError</code> is <code>SetError::InitializingError</code>\nReturns <code>true</code> if this task from wait is the “leader task…\nLocks this mutex, causing the current task to yield until …\nLocks this mutex, causing the current task to yield until …\nMakes a new <code>MappedMutexGuard</code> for a component of the locked …\nMakes a new <code>OwnedMappedMutexGuard</code> for a component of the …\nMakes a new <code>MappedMutexGuard</code> for a component of the locked …\nMakes a new <code>OwnedMappedMutexGuard</code> for a component of the …\nMakes a new <code>OwnedRwLockReadGuard</code> for a component of the …\nMakes a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …\nMakes a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …\nMakes a new <code>RwLockReadGuard</code> for a component of the locked …\nMakes a new <code>RwLockMappedWriteGuard</code> for a component of the …\nMakes a new <code>RwLockMappedWriteGuard</code> for a component of the …\nMerge two <code>SemaphorePermit</code> instances together, consuming …\nMerge two <code>OwnedSemaphorePermit</code> instances together, …\nA multi-producer, single-consumer queue for sending values …\nReturns a reference to the original <code>Mutex</code>.\nReturns a reference to the original <code>Arc&lt;Mutex&gt;</code>.\nCreates a new lock in an unlocked state ready for use.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.\nCreates a new empty <code>OnceCell</code> instance.\nCreates a new empty <code>SetOnce</code> instance.\nCreates a new barrier that can block a given number of …\nCreate a new <code>Notify</code>, initialized without a permit.\nCreates a new semaphore with the initial number of permits.\nCreates a new <code>OnceCell</code> that contains the provided value, …\nCreates a new <code>SetOnce</code> that contains the provided value, if …\nWait for a notification.\nWait for a notification with an owned <code>Future</code>.\nNotifies the last waiting task.\nNotifies the first waiting task.\nNotifies all waiting tasks.\nReturns the number of permits held by <code>self</code>.\nReturns the number of permits held by <code>self</code>.\nA one-shot channel is used for sending a single message …\nLocks this <code>RwLock</code> with shared read access, causing the …\nLocks this <code>RwLock</code> with shared read access, causing the …\nReturns a reference to the original <code>Arc&lt;RwLock&gt;</code>.\nReturns a reference to the original <code>Arc&lt;RwLock&gt;</code>.\nReturns a reference to the original <code>Arc&lt;RwLock&gt;</code>.\nReturns the <code>Semaphore</code> from which this permit was acquired.\nSets the value of the <code>OnceCell</code> to the given value if the …\nSets the value of the <code>SetOnce</code> to the given value if the …\nSplits <code>n</code> permits from <code>self</code> and returns a new …\nSplits <code>n</code> permits from <code>self</code> and returns a new …\nTakes ownership of the current value, leaving the cell …\nTries to acquire a permit from the semaphore.\nTries to acquire <code>n</code> permits from the semaphore.\nTries to acquire <code>n</code> permits from the semaphore.\nTries to acquire a permit from the semaphore.\nAttempts to make a new <code>OwnedRwLockReadGuard</code> for a …\nAttempts to make a new <code>RwLockReadGuard</code> for a component of …\nAttempts to acquire the lock, and returns <code>TryLockError</code> if …\nAttempts to acquire the lock, and returns <code>TryLockError</code> if …\nAttempts to make a new <code>MappedMutexGuard</code> for a component of …\nAttempts to make a new <code>OwnedMappedMutexGuard</code> for a …\nAttempts to make a new <code>MappedMutexGuard</code> for a component of …\nAttempts to make a new <code>OwnedMappedMutexGuard</code> for a …\nAttempts to make a new <code>OwnedRwLockReadGuard</code> for a …\nAttempts to make a new <code>OwnedRwLockMappedWriteGuard</code> for a …\nAttempts to make a new <code>OwnedRwLockMappedWriteGuard</code> for a …\nAttempts to make a new <code>RwLockReadGuard</code> for a component of …\nAttempts to make a new <code>RwLockMappedWriteGuard</code> for a …\nAttempts to make a new <code>RwLockMappedWriteGuard</code> for a …\nAttempts to acquire this <code>RwLock</code> with shared read access.\nAttempts to acquire this <code>RwLock</code> with shared read access.\nAttempts to acquire this <code>RwLock</code> with exclusive write …\nAttempts to acquire this <code>RwLock</code> with exclusive write …\nWaits until set is called. The future returned will keep …\nDoes not resolve until all tasks have rendezvoused here.\nA multi-producer, multi-consumer channel that only retains …\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …\nLocks this <code>RwLock</code> with exclusive write access, causing the …\nLocks this <code>RwLock</code> with exclusive write access, causing the …\nReceiving-half of the <code>broadcast</code> channel.\nSending-half of the <code>broadcast</code> channel.\nA sender that does not prevent the channel from being …\nBlocking receive to call outside of asynchronous contexts.\nCreate a bounded, multi-producer, multi-consumer channel …\nA future which completes when the number of Receivers …\nConverts the <code>Sender</code> to a <code>WeakSender</code> that does not count …\nBroadcast error types\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if a channel is closed.\nReturns true if there are no queued values.\nReturns true if there aren’t any messages in the channel …\nReturns the number of queued values.\nReturns the number of messages that were sent into the …\nCreates the sending-half of the <code>broadcast</code> channel.\nReturns the number of active receivers.\nReceives the next value for this receiver.\nRe-subscribes to the channel starting from the current …\nReturns <code>true</code> if senders belong to the same channel.\nReturns <code>true</code> if receivers belong to the same channel.\nAttempts to send a value to all active <code>Receiver</code> handles, …\nReturns the number of <code>Sender</code> handles.\nReturns the number of <code>WeakSender</code> handles.\nReturns the number of <code>Sender</code> handles.\nReturns the number of <code>Sender</code> handles.\nCreates a new <code>Receiver</code> handle that will receive values …\nAttempts to return a pending value on this receiver …\nTries to convert a <code>WeakSender</code> into a <code>Sender</code>.\nReturns the number of <code>WeakSender</code> handles.\nReturns the number of <code>WeakSender</code> handles.\nThere are no more active senders implying no further …\nThere are no more active senders implying no further …\nThe channel is currently empty. There are still active …\nThe receiver lagged too far behind. Attempting to receive …\nThe receiver lagged too far behind and has been forcibly …\nAn error returned from the <code>recv</code> function on a <code>Receiver</code>.\nError returned by the <code>send</code> function on a <code>Sender</code>.\nAn error returned from the <code>try_recv</code> function on a <code>Receiver</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFuture returned from <code>Notify::notified()</code>.\nFuture returned from <code>Notify::notified_owned()</code>.\nAdds this future to the list of futures that are ready to …\nAdds this future to the list of futures that are ready to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOwned permit to send one value into the channel.\nPermits to send one value into the channel.\nAn <code>Iterator</code> of <code>Permit</code> that can be used to hold <code>n</code> slots in …\nReceives values from the associated <code>Sender</code>.\nSends values to the associated <code>Receiver</code>.\nReceive values from the associated <code>UnboundedSender</code>.\nSend values to the associated <code>UnboundedReceiver</code>.\nA sender that does not prevent the channel from being …\nAn unbounded sender that does not prevent the channel from …\nBlocking receive to call outside of asynchronous contexts.\nBlocking receive to call outside of asynchronous contexts.\nVariant of <code>Self::recv_many</code> for blocking contexts.\nVariant of <code>Self::recv_many</code> for blocking contexts.\nBlocking send to call outside of asynchronous contexts.\nReturns the current capacity of the channel.\nReturns the current capacity of the channel.\nCreates a bounded mpsc channel for communicating between …\nCloses the receiving half of a channel without dropping it.\nCloses the receiving half of a channel, without dropping …\nCompletes when the receiver has dropped.\nCompletes when the receiver has dropped.\nConverts the <code>Sender</code> to a <code>WeakSender</code> that does not count …\nConverts the <code>UnboundedSender</code> to a <code>WeakUnboundedSender</code> that …\nChannel error types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the channel has been closed. This happens when …\nChecks if a channel is closed.\nChecks if the channel has been closed. This happens when …\nChecks if a channel is closed.\nChecks if a channel is empty.\nChecks if a channel is empty.\nReturns the number of messages in the channel.\nReturns the number of messages in the channel.\nReturns the maximum buffer capacity of the channel.\nReturns the maximum buffer capacity of the channel.\nPolls to receive the next message on this channel.\nPolls to receive the next message on this channel.\nPolls to receive multiple messages on this channel, …\nPolls to receive multiple messages on this channel, …\nReceives the next value for this receiver.\nReceives the next value for this receiver.\nReceives the next values for this receiver and extends …\nReceives the next values for this receiver and extends …\nReleases the reserved capacity <em>without</em> sending a message, …\nWaits for channel capacity. Once capacity to send one …\nWaits for channel capacity. Once capacity to send <code>n</code> …\nWaits for channel capacity, moving the <code>Sender</code> and …\nReturns <code>true</code> if senders belong to the same channel.\nReturns <code>true</code> if permits belong to the same channel.\nReturns <code>true</code> if senders belong to the same channel.\nReturns <code>true</code> if this permit belongs to the same channel as …\nSends a value, waiting until there is capacity.\nSends a value using the reserved capacity.\nSends a value using the reserved capacity.\nAttempts to send a message on this <code>UnboundedSender</code> without …\nReturns the number of <code>Sender</code> handles.\nReturns the number of <code>UnboundedSender</code> handles.\nReturns the number of <code>WeakSender</code> handles.\nReturns the number of <code>WeakUnboundedSender</code> handles.\nReturns the number of <code>Sender</code> handles.\nReturns the number of <code>Sender</code> handles.\nReturns the number of <code>UnboundedSender</code> handles.\nReturns the number of <code>UnboundedSender</code> handles.\nTries to receive the next value for this receiver.\nTries to receive the next value for this receiver.\nTries to acquire a slot in the channel without waiting for …\nTries to acquire <code>n</code> slots in the channel without waiting …\nTries to acquire a slot in the channel without waiting for …\nAttempts to immediately send a message on this <code>Sender</code>\nCreates an unbounded mpsc channel for communicating …\nTries to convert a <code>WeakSender</code> into a <code>Sender</code>. This will …\nTries to convert a <code>WeakUnboundedSender</code> into an …\nReturns the number of <code>WeakSender</code> handles.\nReturns the number of <code>WeakSender</code> handles.\nReturns the number of <code>WeakUnboundedSender</code> handles.\nReturns the number of <code>WeakUnboundedSender</code> handles.\nThe receive half of the channel was explicitly closed or …\nThe <strong>channel</strong>’s sending half has become disconnected, and …\nThis <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …\nThe data could not be sent on the channel because the …\nError returned by the <code>Sender</code>.\nError returned by <code>try_recv</code>.\nThis enumeration is the list of the possible error …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the <code>TrySendError</code>, returning the unsent value.\nReceives a value from the associated <code>Sender</code>.\nSends a value to the associated <code>Receiver</code>.\nBlocking receive to call outside of asynchronous contexts.\nCreates a new one-shot channel for sending single values …\nPrevents the associated <code>Sender</code> handle from sending a value.\nWaits for the associated <code>Receiver</code> handle to close.\n<code>Oneshot</code> error types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the associated <code>Receiver</code> handle has been …\nChecks if a channel is empty.\nChecks if this receiver is terminated.\nChecks whether the <code>oneshot</code> channel has been closed, and if …\nAttempts to send a value on this channel, returning it …\nAttempts to receive a value.\nThe send half of the channel was dropped without sending a …\nThe send half of the channel has not yet sent a value.\nError returned by the <code>Future</code> implementation for <code>Receiver</code>.\nError returned by the <code>try_recv</code> function on <code>Receiver</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReceives values from the associated <code>Sender</code>.\nReturns a reference to the inner value.\nSends values to the associated <code>Receiver</code>.\nReturns a reference to the most recently sent value.\nReturns a reference to the most recently sent value\nReturns a reference to the most recently sent value and …\nWaits for a change notification, then marks the newest …\nCreates a new watch channel, returning the “send” and …\nCompletes when all receivers have dropped.\nWatch error types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChecks if this channel contains a message that this …\nIndicates if the borrowed value is considered as <em>changed</em> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the channel has been closed. This happens when …\nMarks the state as changed.\nMarks the state as unchanged.\nCreates the sending-half of the <code>watch</code> channel.\nReturns the number of receivers that currently exist.\nReturns <code>true</code> if receivers belong to the same channel.\nReturns <code>true</code> if senders belong to the same channel.\nSends a new value via the channel, notifying all receivers.\nModifies the watched value <strong>conditionally</strong> in-place, …\nModifies the watched value <strong>unconditionally</strong> in-place, …\nSends a new value via the channel, notifying all receivers …\nReturns the number of senders that currently exist.\nCreates a new <code>Receiver</code> connected to this <code>Sender</code>.\nWaits for a value that satisfies the provided condition.\nError produced when receiving a change notification.\nError produced when sending a value fails.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn owned permission to abort a spawned task, without …\nAn opaque ID that uniquely identifies a task relative to …\nTask failed to execute to completion.\nAn owned permission to join on a task (await its …\nA collection of tasks spawned on a Tokio runtime.\nContext guard for <code>LocalSet</code>\nA key for task-local data.\nA set of tasks which are executed on the same thread.\nFuture for the <code>unconstrained</code> method.\nAbort the task associated with the handle.\nAbort the task associated with the handle.\nAborts all tasks on this <code>JoinSet</code>.\nReturns a new <code>AbortHandle</code> that can be used to remotely …\nRuns the provided blocking function on the current thread …\nRuns a future to completion on the provided runtime, …\nReturns a cloned <code>AbortHandle</code> that can be used to remotely …\nConsumes a unit of budget and returns the execution back …\nUtilities for improved cooperative scheduling.\nRemoves all tasks from this <code>JoinSet</code> without aborting them.\nEnters the context of this <code>LocalSet</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTask-related futures.\nReturns a copy of the task-local value if the task-local …\nReturns the <code>Id</code> of the currently running task.\nReturns a task ID that uniquely identifies this task …\nReturns a task ID that identifies the task which errored …\nReturns a task ID that uniquely identifies this task …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the join error, returning the object with which …\nReturns true if the error was caused by the task being …\nReturns whether the <code>JoinSet</code> is empty.\nChecks if the task associated with this <code>AbortHandle</code> has …\nChecks if the task associated with this <code>JoinHandle</code> has …\nReturns true if the error was caused by the task panicking.\nAwaits the completion of all tasks in this <code>JoinSet</code>, …\nWaits until one of the tasks in the set completes and …\nWaits until one of the tasks in the set completes and …\nReturns the number of tasks currently in the <code>JoinSet</code>.\nCreate a new <code>JoinSet</code>.\nReturns a new local task set.\nPolls for one of the tasks in the set to complete.\nPolls for one of the tasks in the set to complete.\nRuns a future to completion on the local set, returning …\nSets a value <code>T</code> as the task-local value for the future <code>F</code>.\nAborts all tasks and waits for them to finish shutting …\nSpawns a new asynchronous task, returning a <code>JoinHandle</code> for …\nSpawn the provided task on the <code>JoinSet</code>, returning an …\nRuns the provided closure on a thread where blocking is …\nSpawn the blocking code on the blocking threadpool and …\nSpawn the blocking code on the blocking threadpool of the …\nSpawns a <code>!Send</code> future on the current <code>LocalSet</code> or …\nSpawn the provided task on the current <code>LocalSet</code> and store …\nSpawns a <code>!Send</code> task onto the local task set.\nSpawn the provided task on the provided <code>LocalSet</code> and store …\nSpawn the provided task on the provided runtime and store …\nSets a value <code>T</code> as the task-local value for the closure <code>F</code>.\nReturns the <code>Id</code> of the currently running task, or <code>None</code> if …\nConsumes the join error, returning the object with which …\nTries to join one of the tasks in the set that has …\nTries to join one of the tasks in the set that has …\nAccesses the current task-local and runs the provided …\nTurn off cooperative scheduling for a future. The future …\nAccesses the current task-local and runs the provided …\nYields execution back to the Tokio runtime.\nFuture wrapper to ensure cooperative scheduling created by …\nValue returned by the <code>poll_proceed</code> method.\nFuture for the <code>unconstrained</code> method.\nConsumes a unit of budget and returns the execution back …\nCreates a wrapper future that makes the inner future …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>true</code> if there is still budget left on the task.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSignals that the task that obtained this <code>RestoreOnPending</code> …\nDecrements the task budget and returns <code>Poll::Pending</code> if …\nTurn off cooperative scheduling for a future. The future …\nA future that sets a value <code>T</code> of a task local for the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the value stored in the task local by this …\nA TOML <code>Value</code> that contains a sequence of <code>Value</code>s\nAn inline array of values.\nAn owned iterator type over <code>Array</code>’s <code>Value</code>s\nAn iterator type over <code>Array</code>’s <code>Value</code>s\nAn iterator type over <code>Array</code>’s <code>Value</code>s\nA top-level sequence of <code>Table</code>s, each under their own header\nType representing array of tables.\nAn iterator type over <code>ArrayOfTables</code>’s <code>Table</code>s\nAn iterator type over <code>ArrayOfTables</code>’s <code>Table</code>s\nAn iterator type over <code>ArrayOfTables</code>’s <code>Table</code>s\nA boolean value.\nOffset between local time and UTC\nA parsed TOML date value\nA parsed TOML datetime value\nAn RFC 3339 formatted date-time with offset.\nError returned from parsing a <code>Datetime</code> in the <code>FromStr</code> …\nA prefix and suffix,\nThe root TOML <code>Table</code>, containing <code>Key</code>/<code>Value</code> pairs and all …\nThe editable root TOML <code>Table</code>, containing <code>Key</code>/<code>Value</code> pairs …\nA view into a single location in a <code>Table</code>, which may be …\nA 64-bit float value.\nA scalar TOML <code>Value</code>’s logical value and its …\nType representing a parsed TOML document\nA view into a single location in an <code>InlineTable</code>, which may …\nA view into a single occupied location in an <code>InlineTable</code>.\nA TOML <code>Value</code> that contains a collection of <code>Key</code>/<code>Value</code> pairs\nAn inline table of key/value pairs.\nAn owned iterator type over an <code>InlineTable</code>’s <code>Key</code>/<code>Value</code> …\nAn iterator type over <code>InlineTable</code>’s <code>Key</code>/<code>Value</code> pairs\nA mutable iterator type over <code>InlineTable</code>’s <code>Key</code>/<code>Value</code> …\nA view into a single empty location in an <code>InlineTable</code>.\nA 64-bit integer value.\nAn owned iterator type over <code>Table</code>’s <code>Key</code>/<code>Item</code> pairs\nType representing either a value, a table, an array of …\nAn iterator type over <code>Table</code>’s <code>Key</code>/<code>Item</code> pairs\nA mutable iterator type over <code>Table</code>’s <code>Key</code>/<code>Item</code> pairs\nFor Key/<code>Value</code> pairs under a <code>Table</code> header or inside an …\nA mutable reference to a <code>Key</code>’s formatting\nType representing none.\nAn occupied Entry.\nAn occupied Entry.\nA view into a single occupied location in a <code>Table</code>.\nA parsed TOML time offset\nOpaque string storage for raw TOML; internal to <code>toml_edit</code>\nA TOML <code>Value</code> encoded as a <code>&amp;str</code>\nA string value.\nA TOML table, a top-level collection of key/<code>Value</code> pairs …\nType representing table.\nThis trait represents either a <code>Table</code>, or an <code>InlineTable</code>.\nA parsed TOML time value\nA TOML parse error\nA vacant Entry.\nA vacant Entry.\nA view into a single empty location in a <code>Table</code>.\nFor <code>Key</code>/Value pairs under a <code>Table</code> header or inside another …\nType representing value.\nA suffix which, when applied to a time, denotes a UTC …\nReturns an empty array of tables.\nCasts <code>self</code> to array.\nCasts <code>self</code> to array.\nCasts <code>self</code> to mutable array.\nCasts <code>self</code> to mutable array.\nCasts <code>self</code> to <code>ArrayOfTables</code>\nCasts <code>self</code> to mutable <code>ArrayOfTables</code>\nCasts <code>self</code> to boolean.\nCasts <code>self</code> to boolean.\nCasts <code>self</code> to date-time.\nCasts <code>self</code> to date-time.\nCasts <code>self</code> to float.\nCasts <code>self</code> to float.\nCasts <code>self</code> to inline table.\nCasts <code>self</code> to inline table.\nCasts <code>self</code> to mutable inline table.\nCasts <code>self</code> to mutable inline table.\nCasts <code>self</code> to integer.\nCasts <code>self</code> to integer.\nReturns a reference to the root item.\nReturns a reference to the root item.\nReturns a mutable reference to the root item.\nAccess a mutable proxy for the <code>Key</code>.\nAccess the underlying value\nReturns key raw representation, if available.\nReturns the raw representation, if available.\nReturns the raw representation, if available.\nCasts <code>self</code> to str.\nAccess the underlying string\nCasts <code>self</code> to str.\nReturns a reference to the root table.\nReturns a reference to the root table.\nCasts <code>self</code> to <code>Table</code>\nCasts <code>self</code> to either a table or an inline table.\nCasts <code>self</code> to either a table or an inline table.\nReturns a mutable reference to the root table.\nCasts <code>self</code> to mutable <code>Table</code>\nCasts <code>self</code> to <code>Value</code>\nCasts <code>self</code> to mutable <code>Value</code>.\nClears the table, removing all key-value pairs. Keeps the …\nClears the array, removing all values. Keeps the allocated …\nRemoves all the tables.\nClears the table, removing all key-value pairs. Keeps the …\nGo back to default decor\nClears the table, removing all key-value pairs. Keeps the …\nReturns true if the table contains an array of tables with …\nReturns true if the table contains an item with the given …\nReturns true if the table contains given key.\nReturns true if the table contains an item with the given …\nReturns true if the table contains a table with the given …\nReturns true if the table contains a value with the given …\nOptional date. Required for: <em>Offset Date-Time</em>, <em>Local </em>…\nDay: 1 to {28, 29, 30, 31} (based on month/year)\nDeserializing TOML into Rust structures.\nReturns the surrounding whitespace\nReturns the surrounding whitespace\nReturns the surrounding whitespace\nReturns the decor associated with a given key of the table.\nGet the decoration of the value.\nReturns the surrounding whitespace\nReturns the surrounding whitespace\nReturns the surrounding whitespace\nReturns the surrounding whitespace\nGet the decoration of the value.\nSets the prefix and the suffix for value.\nReturns the default raw representation.\nReturns the default raw representation.\nReturns the default raw representation.\nReturns a raw representation.\nReturns a raw representation.\nReturns a raw representation.\nReturns the surrounding whitespace for between dots\nReturns the surrounding whitespace for between dots\nReturns the surrounding whitespace for between dots\nReturns the surrounding whitespace for between dots\nGets the given key’s corresponding entry in the Table …\nGets the given key’s corresponding entry in the Table …\nGets the given key’s corresponding entry in the Table …\nGets the given key’s corresponding entry in the Table …\nGets the given key’s corresponding entry in the Table …\nGets the given key’s corresponding entry in the Table …\nAuto formats the table.\nAuto formats the array.\nAuto formats the table.\nAuto formats the key.\nAuto formats the key.\nAuto formats the value.\nAuto formats the table.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParses a document from a &amp;str\nParses a document from a &amp;str\nParses a value from a &amp;str\nTries to parse a key from a &amp;str, if fails, tries as basic …\nParses a value from a &amp;str\nReturns an optional reference to an item given the key.\nGets a reference to the value in the entry.\nGets a reference to the value in the entry.\nReturns a reference to the value at the given index, or …\nReturns an optional reference to the table.\nReturn an optional reference to the value at the given the …\nIndex into a TOML array or map. A string index can be used …\nReturns the parsed key value.\nReturns the parsed key value.\nReturns an optional reference to an item given the key.\nReturn references to the key-value pair stored for key, if …\nReturn references to the key-value pair stored for key, if …\nReturn references to the key-value pair stored for key, if …\nReturn mutable references to the key-value pair stored for …\nReturn mutable references to the key-value pair stored for …\nReturn mutable references to the key-value pair stored for …\nReturns an optional mutable reference to an item given the …\nGets a mutable reference to the value in the entry.\nGets a mutable reference to the value in the entry.\nReturns a reference to the value at the given index, or …\nReturns an optional mutable reference to the table.\nReturn an optional mutable reference to the value at the …\nMutably index into a TOML array or map. A string index can …\nReturns an optional mutable reference to an item given the …\nInserts a key/value pair if the table does not contain the …\nGet key/values for values that are visually children of …\nGet key/values for values that are visually children of …\nGet key/values for values that are visually children of …\nHour: 0 to 23\nInserts a key-value pair into the map.\nSets the value of the entry, and returns the entry’s old …\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nSets the value of the entry, and returns the entry’s old …\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nInserts an element at the given position within the array, …\nInserts a key-value pair into the map.\nInserts a key-value pair into the map.\nInserts an already formatted value at the given position …\nInserts a key-value pair into the map.\nInserts a key-value pair into the map.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to an inline array\nCasts <code>self</code> to <code>ArrayOfTables</code>\nConvert to an inline table\nReturns the root item.\nReturns the root item.\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nAllow editing of the <code>DocumentMut</code>\nReturns the root table.\nReturns the root table.\nConvert to a table\nCasts <code>self</code> to <code>Table</code>\nCasts <code>self</code> to <code>Value</code>\nThe wrapped value\nReturns true if <code>self</code> is an array.\nReturns true if <code>self</code> is an array.\nReturns true if <code>self</code> is an <code>ArrayOfTables</code>\nReturns true if <code>self</code> is a boolean.\nReturns true if <code>self</code> is a boolean.\nReturns true if <code>self</code> is a date-time.\nReturns true if <code>self</code> is a date-time.\nCheck if this is a wrapper for dotted keys, rather than a …\nCheck if this is a wrapper for dotted keys, rather than a …\nCheck if this is a wrapper for dotted keys, rather than a …\nReturns true if the table is empty.\nReturn true if <code>self.len() == 0</code>.\nReturns true if <code>self.len() == 0</code>.\nReturns true if the table is empty.\nReturns true if the table is empty.\nReturns true if <code>self</code> is a float.\nReturns true if <code>self</code> is a float.\nIf a table has no key/value pairs and implicit, it will …\nReturns true if <code>self</code> is an inline table.\nReturns true if <code>self</code> is an inline table.\nReturns true if <code>self</code> is an integer.\nReturns true if <code>self</code> is an integer.\nReturns true if <code>self</code> is <code>None</code>.\nReturns true if <code>self</code> is a string.\nReturns true if <code>self</code> is a string.\nReturns true if <code>self</code> is a <code>Table</code>\nReturns true if <code>self</code> is either a table, or an inline table.\nReturns true if <code>self</code> is a <code>Value</code>\nReturns an iterator over key/value pairs.\nReturns an iterator over all values.\nReturns an iterator over tables.\nReturns an iterator over the root table.\nReturns an iterator over the root table.\nReturns an iterator over key/value pairs.\nReturns an iterator over all key/value pairs, including …\nReturns an mutable iterator over all key/value pairs, …\nReturns an iterator over all values.\nReturns an iterator over tables.\nReturns an iterator over key/value pairs.\nReturns an mutable iterator over all key/value pairs, …\nReturns an accessor to a key’s formatting\nReturns the entry key\nGets a reference to the entry key\nGets a reference to the entry key\nReturns the entry key\nGets a reference to the entry key\nGets a reference to the entry key\nReturns an accessor to a key’s formatting\nReturns an accessor to a key’s formatting\nReturns an accessor to a key’s formatting\nGets a mutable reference to the entry key\nGets a mutable reference to the entry key\nReturns an accessor to a key’s formatting\nReturns an accessor to a key’s formatting\nReturns the surrounding whitespace for the line entry\nReturns the surrounding whitespace for the line entry\nReturns the surrounding whitespace for the line entry\nReturns the surrounding whitespace for the line entry\nReturns the number of nonempty items.\nReturns the length of the underlying Vec.\nReturns the length of the underlying Vec. To get the …\nReturns the number of key/value pairs.\nReturns the number of non-empty items in the table.\nIn-place convert to a value\nWhat went wrong\nMinute: 0 to 59\nMonth: 1 to 12\nNanosecond: 0 to <code>999_999_999</code>\nCreate an empty <code>Array</code>\nCreates an empty array of tables.\nCreates an empty document\nCreates an empty document\nCreates an empty table.\nCreate a new table key\nDefault-formatted value\nCreates a new decor from the given prefix and suffix.\nCreates an empty table.\nOptional offset. Required for: <em>Offset Date-Time</em>.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the default …\nSets <code>self</code> to the given item if <code>self</code> is none and returns a …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting the result of …\nParse a TOML document\nParse a TOML key expression\nThe position of the <code>Table</code> within the <code>DocumentMut</code>.\nWhitespace after before element\nGet the prefix.\nAppends a new value to the end of the array, applying …\nAppends a table to the array.\nAppends a new, already formatted value to the end of the …\nAccess the raw, unparsed document\nRemoves an item given the key.\nTakes the value out of the entry, and returns it\nTakes the value out of the entry, and returns it\nRemoves the value at the given index.\nRemoves a table with the given index.\nRemoves an item given the key.\nRemoves an item given the key.\nRemoves a key from the map, returning the stored key and …\nRemoves a key from the map, returning the stored key and …\nReplaces the element at the given position within the …\nReplaces the element at the given position within the …\nRetains only the values specified by the <code>keep</code> predicate.\nRetains only the elements specified by the <code>keep</code> predicate.\nRetains only the elements specified by the <code>keep</code> predicate.\nRetains only the elements specified by the <code>keep</code> predicate.\nSecond: 0 to {58, 59, 60} (based on leap second rules)\nSerializing Rust structures into TOML.\nChange this table’s dotted status\nChange this table’s dotted status\nChange this table’s dotted status\nIf a table has no key/value pairs and implicit, it will …\nSets the position of the <code>Table</code> within the <code>DocumentMut</code>.\nSet whitespace after before element\nSet the prefix.\nSet the suffix.\nSet whitespace after last element\nSet whitespace after last element\nSet whether the array will use a trailing comma\nSorts the slice with a comparator function.\nSorts the array with a key extraction function.\nSorts Key/Value-pairs of the table\nSorts Key/Value-pairs of the table\nSorts Key/Value-pairs of the table\nSort Key/Value-pairs of the table using the using the …\nSort Key/Value-pairs of the table using the using the …\nThe location within the original document\nThe location within the original document\nThe start/end index into the original document where the …\nThe location within the original document\nThe location within the original document\nThe location within the original document\nThe location within the original document\nThe location within the original document\nThe location within the original document\nThe location within the original document\nGet the suffix.\nReturns an empty table.\nOptional time. Required for: <em>Offset Date-Time</em>, <em>Local </em>…\nWhitespace after last element\nWhitespace after last element\nWhitespace after last element\nWhether the array will use a trailing comma\nText description of value type\nText description of value type\nReturns a formatted value.\nThe wrapped value\nDocument tree traversal to walk a shared borrow of a …\nDocument tree traversal to mutate an exclusive borrow of a …\nWhile creating the <code>Key</code>, add <code>Decor</code> to it for between dots\nWhile creating the <code>Key</code>, add <code>Decor</code> to it for the line entry\nYear: four digits\nMinutes: -<code>1_440..1_440</code>\nDeserialization for TOML documents.\nErrors that can occur when deserializing a type.\nDeserialization implementation for TOML values.\nAdd key while unwinding\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a <code>DocumentMut</code> into <code>T</code>.\nDeserializes bytes into a type.\nDeserializes a string into a type.\nParses a value from a &amp;str\nParses a document from a &amp;str\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhat went wrong\nParse a TOML document\nProvide the encoded TOML the error applies to\nThe start/end index into the original document where the …\nOther serialization error\nA serialized date was invalid\nErrors that can occur when deserializing a type.\nKey was not convertible to <code>String</code> for serializing to TOML\nValue was out of range for the given type\n<code>None</code> could not be serialized to TOML\nType could not be serialized to TOML\nSerialization for TOML values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new serializer generate a TOML document.\nSerialize the given data structure into a TOML document.\nSerialize the given data structure as a String of TOML.\nSerialize the given data structure as a “pretty” …\nSerialize the given data structure as a TOML byte vector.\nDocument tree traversal to mutate an exclusive borrow of a …\nDocument tree traversal to mutate an exclusive borrow of a …\n<code>visit_table_mut</code> and <code>visit_inline_table_mut</code> both recurse …\nCursor-based segmenter for grapheme clusters.\nAn error return indicating that not enough content was …\nExternal iterator for grapheme clusters and byte offsets.\nExternal iterator for a string’s grapheme clusters.\nAn error returned when the chunk given does not contain …\nWhen requesting <code>next_boundary</code>, the cursor is moving past …\nMore pre-context is needed. The caller should call …\nWhen requesting <code>prev_boundary</code>, the cursor is moving past …\nThe version of Unicode that this version of …\nExternal iterator for sentence boundaries and byte offsets.\nExternal iterator for a string’s sentence boundaries.\nExternal iterator for word boundaries and byte offsets.\nExternal iterator for a string’s word boundaries.\nMethods for segmenting strings according to Unicode …\nAn iterator over the substrings of a string which, after …\nAn iterator over the substrings of a string which, after …\nAn iterator over the substrings of a string which, after …\nView the underlying data (the part yet to be iterated) as …\nView the underlying data (the part yet to be iterated) as …\nView the underlying data (the part yet to be iterated) as …\nView the underlying data (the part yet to be iterated) as …\nThe current offset of the cursor. Equal to the last value …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns an iterator over the grapheme clusters of <code>self</code> and …\nReturns an iterator over the grapheme clusters of <code>self</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermine whether the current cursor location is a …\nCreate a new cursor. The string and initial offset are …\nFind the next boundary after the current cursor position. …\nFind the previous boundary after the current cursor …\nProvide additional pre-context when it is needed to decide …\nSet the cursor to a new location in the same string.\nReturns an iterator over substrings of <code>self</code>, split on …\nReturns an iterator over substrings of <code>self</code> separated on …\nReturns an iterator over substrings of <code>self</code>, split on …\nReturns an iterator over substrings of <code>self</code> separated on …\nReturns an iterator over substrings of <code>self</code> separated on …\nReturns an iterator over the words of <code>self</code>, separated on …\nReturns an iterator over the words of <code>self</code>, separated on …\nThe version of Unicode that this version of unicode-width …\nMethods for determining displayed width of Unicode …\nMethods for determining displayed width of Unicode strings.\nReturns the character’s displayed width in columns, or …\nReturns the string’s displayed width in columns.\nAgents keep state between requests.\nTrait for common types to send in POST, PUT or PATCH.\nError if the URI is missing scheme or host.\nA response body returned as <code>http::Response&lt;Body&gt;</code>.\nBuilder for creating a response body.\nA send body (Such as <code>&amp;str</code>) is larger than the …\nA reader of the response data.\nConfiguration of how to read the body.\nTimeout while opening the connection.\nAttempt to connect to a CONNECT proxy failed.\nA connection failed.\nErrors from ureq.\nTimeout for entire operation.\nError when resolving a hostname fails.\nErrors arising from the http-crate.\nCONNECT proxy over HTTP\nCONNECT proxy over HTTPS\nError when creating proxy settings.\nError in io such as the TCP socket.\nThe response header, from status up until body, is too big.\nSome other error occured.\nTimeout for the current call (when redirected).\nAn HTTP/1.1 protocol error.\nProxy server settings\nBuilder for configuring a proxy.\nProxy protocol\nTimeout while receiving the response body.\nTimeout while receiving the response headers.\nA redirect failed.\nTransparent wrapper around <code>http::request::Builder</code>.\nExtension trait for <code>http::Request&lt;impl AsSendBody&gt;</code>.\nThe setting <code>https_only</code> is true and the URI is not https.\nTimeout in the resolver.\nExtension trait for <code>http::Response&lt;Body&gt;</code>.\nRequest body for sending data via POST, PUT and PATCH.\nTimeout when sending then request body.\nTimeout while sending the request headers.\nA SOCKS4 proxy\nA SOCKS4a proxy (proxy can resolve domain name)\nSOCKS5 proxy\nWhen <code>http_status_as_error()</code> is true, 4xx and 5xx response …\nThe various timeouts.\nError raised if the request hits any configured timeout.\nThe protocol requires TLS (https), but the connector did …\nToo many redirects.\nA new Agent with default configuration\nHandle this body as a shared <code>impl Read</code> of the body.\nConstruct the <code>Proxy</code>\nBuilder for creating a body\nCreates a proxy config using a builder.\nSends the request and blocks the caller until we receive a …\nSet the mime type of the body\nThe charset of the <code>content-type</code> header.\nAgent configuration\nOverride agent level config on the request level.\nGet the config for this agent.\nShortcut to reach a <code>ConfigBuilder</code>\nAlter the configuration for an http crate request.\nMake a CONNECT request.\nMake a CONNECT request using this agent.\nThe content length of the body.\nSet the content-type header.\nCreates the body data turned into bytes.\nMake a DELETE request.\nMake a DELETE request using this agent.\nAdds an extension to this builder\nGet a mutable reference to the extensions for this request …\nGet a reference to the extensions for this request builder.\nForce sending a body.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a body from an owned [<code>Read]</code> impl.\nCreates a body from a shared <code>Read</code> impl.\nMake a GET request.\nMake a GET request using this agent.\nThe full history of uris, including the request and final …\nThe Uri that ultimately this Response is about.\nMake a HEAD request.\nMake a HEAD request using this agent.\nAppends a header to this request builder.\nGet headers on this request builder.\nGet header on this request builder.\nSet the proxy hostname\nThe host part of the proxy uri\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the error into a <code>std::io::Error</code>.\nTurn this response into an owned <code>impl Read</code> of the body.\nTurn this <code>SendBody</code> into a reader.\nConsume self and read the body with configuration.\nWhether this proxy setting was created manually or from …\nLimit how much data is to be released from the body.\nLimit the response body.\nReplace invalid utf-8 chars.\nGet the HTTP Method for this request.\nChained interception to modify the request or response.\nSet the mime type of the body.\nThe mime-type of the <code>content-type</code> header.\nCreate a proxy from a uri.\nCreates an agent with config.\nCreates an agent with defaults.\nCreates an empty body.\nMake an OPTIONS request.\nMake an OPTIONS request using this agent.\nSet the password\nThe password of the proxy uri\nMake a PATCH request.\nMake a PATCH request using this agent.\nSet the proxy port\nThe port of the proxy uri\nMake a POST request.\nMake a POST request using this agent.\nThe configured protocol.\nMake a PUT request.\nMake a PUT request using this agent.\nAdd a query parameter to the URL.\nSet multi query parameters.\nSet multi query parameters without percent-encoding.\nAdd a query parameter to the URL without percent-encoding.\nRead the response as a string.\nRead into string.\nRead the response to a vec.\nRead into vector.\nCreates a body from a streaming reader.\nCreates a reader.\nWhether to resolve the target host locally before calling …\nWhether to resolve target locally before calling the proxy.\nRun a <code>http::Request&lt;impl AsSendBody&gt;</code>.\nRun a <code>http::Request&lt;impl AsSendBody&gt;</code>.\nSend body data and blocks the caller until we receive …\nSend an empty body.\nSend form encoded data.\nMake a TRACE request.\nMake a TRACE request using this agent.\nRead proxy settings from environment variables.\nTypestate variables.\nAPI that does not (yet) follow semver.\nOverrides the URI for this request.\nThe proxy uri\nGet the URI for this request\nSet the username\nThe username of the proxy uri\nSet the HTTP version for this request.\nGet the HTTP version for this request\nAllows configuring this request behaviour, using a …\nRead the body data with configuration.\nAllows configuring the request behaviour, starting with …\nCreates an agent with a bespoke transport and resolver.\nBoth Ipv4 and Ipv6\nPossible config values for headers.\nConfig primarily for the <code>Agent</code>, but also per-request.\nBuilder of <code>Config</code>\nDefault behavior.\nConfiguration of IP family to use.\nJust Ipv4\nJust Ipv6\nNever preserve the <code>authorization</code> header on redirect. This …\nNo automatic header.\nUser provided header value.\nStrategy for preserving authorization headers during …\nPreserve the <code>authorization</code> header when the redirect is to …\nRequest timeout configuration.\nValue to use for the <code>Accept</code> header.\nValue to use for the <code>Accept</code> header.\nValue to use for the <code>Accept-Encoding</code> header.\nValue to use for the <code>Accept-Encoding</code> header.\nWhether to allow non-standard HTTP methods.\nWhether to allow non-standard HTTP methods.\nMax duration for awaiting a 100-continue response.\nFinalize the config\nFinalize the config\nFinalize the config\nFinalize the config\nA builder to make a bespoke configuration.\nMax duration for establishing the connection\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTimeout for the entire call\nWhether to treat 4xx and 5xx HTTP status codes as …\nWhether to treat 4xx and 5xx HTTP status codes as …\nWhether to limit requests (including redirects) to https …\nWhether to limit requests (including redirects) to https …\nDefault size of the input buffer\nDefault size of the input buffer\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfiguration of IPv4/IPv6.\nConfiguration of IPv4/IPv6.\nFilter the socket addresses to the family of IP.\nMax duration to keep an idle connection in the pool\nMax duration to keep an idle connection in the pool\nMax number of idle pooled connections overall.\nMax number of idle pooled connections overall.\nMax number of idle pooled connections per host/port combo.\nMax number of idle pooled connections per host/port combo.\nThe max number of redirects to follow before giving up.\nThe max number of redirects to follow before giving up.\nIf we should error when max redirects are reached.\nIf we should error when max redirects are reached.\nMax size of the HTTP response header.\nMax size of the HTTP response header.\nAdd middleware to use for each request in this agent.\nCreates a new agent by cloning this config.\nDisable Nagle’s algorithm\nDisable Nagle’s algorithm\nDefault size of the output buffer.\nDefault size of the output buffer.\nTimeout for call-by-call when following redirects\nProxy configuration.\nProxy configuration.\nMax duration for receving the response body.\nMax duration for receiving the response headers, but not …\nHow to handle <code>Authorization</code> headers when following …\nHow to handle <code>Authorization</code> headers when following …\nMax duration for doing the DNS lookup when establishing …\nRun the request with the agent in the ConfigBuilder\nIf we should record a history of every redirect location, …\nIf we should record a history of every redirect location, …\nMax duration for sending a request body (if there is one)\nMax duration for sending the request, but not the request …\nMax duration for awaiting a 100-continue response.\nMax duration for establishing the connection\nTimeout for the entire call\nTimeout for call-by-call when following redirects\nMax duration for receving the response body.\nMax duration for receiving the response headers, but not …\nMax duration for doing the DNS lookup when establishing …\nMax duration for sending a request body (if there is one)\nMax duration for sending the request, but not the request …\nAll configured timeouts.\nValue to use for the <code>User-Agent</code> header.\nValue to use for the <code>User-Agent</code> header.\n202 Accepted [RFC9110, Section 15.3.3]\n208 Already Reported [RFC5842, Section 7.1]\n502 Bad Gateway [RFC9110, Section 15.6.3]\n400 Bad Request [RFC9110, Section 15.5.1]\n409 Conflict [RFC9110, Section 15.5.10]\nCONNECT\n100 Continue [RFC9110, Section 15.2.1]\n201 Created [RFC9110, Section 15.3.2]\nDELETE\n417 Expectation Failed [RFC9110, Section 15.5.18]\nContains the error value\nA generic “error” for HTTP connections\nA type map of protocol extensions.\n424 Failed Dependency [RFC4918, Section 11.4]\n403 Forbidden [RFC9110, Section 15.5.4]\n302 Found [RFC9110, Section 15.4.3]\n504 Gateway Timeout [RFC9110, Section 15.6.5]\nGET\n410 Gone [RFC9110, Section 15.5.11]\nHEAD\n<code>HTTP/0.9</code>\n<code>HTTP/1.0</code>\n<code>HTTP/1.1</code>\n<code>HTTP/2.0</code>\n<code>HTTP/3.0</code>\n505 HTTP Version Not Supported [RFC9110, Section 15.6.6]\nA set of HTTP headers\nRepresents an HTTP header field name\nRepresents an HTTP header field value.\n418 I’m a teapot [curiously not registered by IANA but …\n226 IM Used [RFC3229, Section 10.4.1]\n507 Insufficient Storage [RFC4918, Section 11.5]\n500 Internal Server Error [RFC9110, Section 15.6.1]\n411 Length Required [RFC9110, Section 15.5.12]\n423 Locked [RFC4918, Section 11.3]\n508 Loop Detected [RFC5842, Section 7.2]\n405 Method Not Allowed [RFC9110, Section 15.5.6]\n421 Misdirected Request [RFC9110, Section 15.5.20]\n301 Moved Permanently [RFC9110, Section 15.4.2]\n300 Multiple Choices [RFC9110, Section 15.4.1]\n207 Multi-Status [RFC4918, Section 11.1]\nThe Request Method (VERB)\n511 Network Authentication Required [RFC6585, Section 6]\n203 Non-Authoritative Information [RFC9110, Section 15.3.4]\n406 Not Acceptable [RFC9110, Section 15.5.7]\n510 Not Extended [RFC2774, Section 7]\n404 Not Found [RFC9110, Section 15.5.5]\n501 Not Implemented [RFC9110, Section 15.6.2]\n304 Not Modified [RFC9110, Section 15.4.5]\n204 No Content [RFC9110, Section 15.3.5]\n200 OK [RFC9110, Section 15.3.1]\nOPTIONS\nContains the success value\n206 Partial Content [RFC9110, Section 15.3.7]\nPATCH\n413 Payload Too Large [RFC9110, Section 15.5.14]\n402 Payment Required [RFC9110, Section 15.5.3]\n308 Permanent Redirect [RFC9110, Section 15.4.8]\nPOST\n412 Precondition Failed [RFC9110, Section 15.5.13]\n428 Precondition Required [RFC6585, Section 3]\n102 Processing [RFC2518, Section 10.1]\n407 Proxy Authentication Required [RFC9110, Section 15.5.8]\nPUT\n416 Range Not Satisfiable [RFC9110, Section 15.5.17]\n431 Request Header Fields Too Large [RFC6585, Section 5]\n408 Request Timeout [RFC9110, Section 15.5.9]\n205 Reset Content [RFC9110, Section 15.3.6]\nRepresents an HTTP request.\nRepresents an HTTP response\nA <code>Result</code> typedef to use with the <code>http::Error</code> type\n303 See Other [RFC9110, Section 15.4.4]\n503 Service Unavailable [RFC9110, Section 15.6.4]\n101 Switching Protocols [RFC9110, Section 15.2.2]\nAn HTTP status code (<code>status-code</code> in RFC 9110 et al.).\n307 Temporary Redirect [RFC9110, Section 15.4.7]\n425 Too early [RFC8470, Section 5.2]\n429 Too Many Requests [RFC6585, Section 4]\nTRACE\n401 Unauthorized [RFC9110, Section 15.5.2]\n451 Unavailable For Legal Reasons [RFC7725, Section 3]\n422 Unprocessable Entity [RFC9110, Section 15.5.21]\n415 Unsupported Media Type [RFC9110, Section 15.5.16]\n426 Upgrade Required [RFC9110, Section 15.5.22]\n414 URI Too Long [RFC9110, Section 15.5.15]\n305 Use Proxy [RFC9110, Section 15.4.6]\nThe URI component of a request.\n506 Variant Also Negotiates [RFC2295, Section 8.1]\nRepresents a version of the HTTP spec.\nInserts a key-value pair into the map.\nConverts a <code>HeaderValue</code> to a byte slice.\nReturns a <code>str</code> representation of the header.\nReturn a &amp;str representation of the HTTP method\nReturns a &amp;str representation of the <code>StatusCode</code>\nReturns the <code>u16</code> corresponding to this <code>StatusCode</code>.\nGet the authority of this <code>Uri</code>.\nReturns a reference to the associated HTTP body.\nReturns a reference to the associated HTTP body.\nReturns a mutable reference to the associated HTTP body.\nReturns a mutable reference to the associated HTTP body.\nCreates a new builder-style object to manufacture a <code>Request</code>\nCreates a new builder-style object to manufacture a …\nCreates a new builder-style object to manufacture a <code>Uri</code>.\nGet the standardised <code>reason-phrase</code> for this status code.\nReturns the number of headers the map can hold without …\nClears the map, removing all key-value pairs. Keeps the …\nClear the <code>Extensions</code> of all inserted extensions.\nCreates a new <code>Builder</code> initialized with a CONNECT method …\nReturns true if the map contains a value for the specified …\nCreates a new <code>Builder</code> initialized with a DELETE method and …\nClears the map, returning all entries as an iterator.\nGets the given key’s corresponding entry in the map for …\nPerforms a case-insensitive comparison of the string …\nPerforms a case-insensitive comparison of the string …\nExtend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.\nExtends <code>self</code> with another <code>Extensions</code>.\nReturns a reference to the associated extensions.\nReturns a reference to the associated extensions.\nReturns a mutable reference to the associated extensions.\nReturns a mutable reference to the associated extensions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a byte slice to a <code>HeaderValue</code>.\nConverts a slice of bytes to an HTTP method.\nConverts a <code>&amp;[u8]</code> to a status code.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.\nAttempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.\nConvert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …\nConverts a HeaderName into a HeaderValue\nCreates a new <code>Request</code> with the given components parts and …\nCreates a new <code>Response</code> with the given head and body\nAttempt to convert a <code>Parts</code> into a <code>Uri</code>.\nConverts a static string to a HTTP header name.\nConvert a static string to a <code>HeaderValue</code>.\nConvert a <code>Uri</code> from a static string.\nAttempt to convert a string to a <code>HeaderValue</code>.\nConverts a u16 to a status code.\nReturns a reference to the value associated with the key.\nCreates a new <code>Builder</code> initialized with a GET method and …\nGet a reference to a type previously inserted on this …\nReturns a view of all values associated with a key.\nReturns a mutable reference to the value associated with …\nGet a mutable reference to a type previously inserted on …\nGet a mutable reference to a type, inserting <code>value</code> if not …\nGet a mutable reference to a type, inserting the type’s …\nGet a mutable reference to a type, inserting the value …\nReturn a reference to the lower level, inner error.\nCreates a new <code>Builder</code> initialized with a HEAD method and …\nHTTP header types\nReturns a reference to the associated header field map.\nReturns a reference to the associated header field map.\nReturns a mutable reference to the associated header field …\nReturns a mutable reference to the associated header field …\nGet the host of this <code>Uri</code>.\nPanics\nInserts a key-value pair into the map.\nInsert a type into this <code>Extensions</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the request, returning just the body.\nConsumes the response, returning just the body.\nCreates a consuming iterator, that is, one that moves keys …\nConsumes the request returning the head and body parts.\nConsumes the response returning the head and body parts.\nConvert a <code>Uri</code> into <code>Parts</code>.\nReturn true if the underlying error has the same type as T.\nCheck if status is within 400-499.\nReturns true if the map contains no elements.\nReturns true if the <code>HeaderValue</code> has a length of zero bytes.\nCheck whether the extension set is empty or not.\nWhether a method is considered “idempotent”, meaning …\nCheck if status is within 100-199.\nCheck if status is within 300-399.\nWhether a method is considered “safe”, meaning the …\nReturns <code>true</code> if the value represents sensitive data.\nCheck if status is within 500-599.\nCheck if status is within 200-299.\nAn iterator visiting all key-value pairs.\nAn iterator visiting all key-value pairs, with mutable …\nAn iterator visiting all keys.\nReturns the number of keys stored in the map.\nReturns the number of headers stored in the map.\nReturns the length of <code>self</code>.\nGet the number of extensions available.\nConsumes the request returning a new request with body …\nConsumes the response returning a new response with body …\nThe HTTP request method\nReturns a reference to the associated HTTP method.\nReturns a mutable reference to the associated HTTP method.\nCreate an empty <code>HeaderMap</code>.\nCreates a new blank <code>Request</code> with the body\nCreates a new blank <code>Response</code> with the body\nCreate an empty <code>Extensions</code>.\nCreates a new <code>Builder</code> initialized with an OPTIONS method …\nCreates a new <code>Builder</code> initialized with a PATCH method and …\nGet the path of this <code>Uri</code>.\nReturns the path &amp; query components of the Uri\nGet the port part of this <code>Uri</code>.\nGet the port of this <code>Uri</code> as a <code>u16</code>.\nCreates a new <code>Builder</code> initialized with a POST method and …\nCreates a new <code>Builder</code> initialized with a PUT method and …\nGet the query string of this <code>Uri</code>, starting after the <code>?</code>.\nRemoves a key from the map, returning the value associated …\nRemove a type from this <code>Extensions</code>.\nHTTP request types.\nReserves capacity for at least <code>additional</code> more headers to …\nHTTP response types.\nGet the scheme of this <code>Uri</code>.\nGet the scheme of this <code>Uri</code> as a <code>&amp;str</code>.\nMark that the header value represents sensitive …\nHTTP status codes\nReturns the <code>StatusCode</code>.\nReturns a mutable reference to the associated <code>StatusCode</code>.\nYields a <code>&amp;str</code> slice if the <code>HeaderValue</code> only contains …\nCreates a new <code>Builder</code> initialized with a TRACE method and …\nInserts a key-value pair into the map.\nGets the given key’s corresponding entry in the map for …\nInserts a key-value pair into the map.\nReserves capacity for at least <code>additional</code> more headers to …\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nURI component of request and response lines\nReturns a reference to the associated URI.\nReturns a mutable reference to the associated URI.\nAn iterator visiting all values.\nAn iterator visiting all values mutably.\nHTTP version\nReturns the associated version.\nReturns a reference to the associated version.\nReturns a mutable reference to the associated version.\nReturns a mutable reference to the associated version.\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nAdvertises which content types the client is able to …\nAdvertises which character set the client is able to …\nAdvertises which content encoding the client is able to …\nAdvertises which languages the client is able to …\nMarker used by the server to advertise partial request …\nPreflight response indicating if the response to the …\nPreflight response indicating permitted HTTP headers.\nPreflight header response indicating permitted access …\nIndicates whether the response can be shared with …\nIndicates which headers can be exposed as part of the …\nIndicates how long the results of a preflight request can …\nInforms the server which HTTP headers will be used when an …\nInforms the server know which HTTP method will be used …\nIndicates the time in seconds the object has been in a …\nLists the set of methods support by a resource.\nAdvertises the availability of alternate services to …\nContains the credentials to authenticate a user agent with …\nA marker trait used to identify values that can be used as …\nSpecifies directives for caching mechanisms in both …\nIndicates how caches have handled a response and its …\nSpecifies directives that allow origin servers to control …\nControls whether or not the network connection stays open …\nIndicates if the content is expected to be displayed …\nUsed to compress the media-type.\nUsed to describe the languages intended for the audience.\nIndicates the size of the entity-body.\nIndicates an alternate location for the returned data.\nIndicates where in a full body message a partial message …\nAllows controlling resources the user agent is allowed to …\nAllows experimenting with policies by monitoring their …\nUsed to indicate the media type of the resource.\nContains stored HTTP cookies previously sent by the server …\nContains the date and time at which the message was …\nIndicates the client’s tracking preference.\nA drain iterator for <code>HeaderMap</code>.\nIdentifier for a specific version of a resource.\nIndicates expectations that need to be fulfilled by the …\nContains the date/time after which the response is …\nA view into a single location in a <code>HeaderMap</code>, which may be …\nContains information from the client-facing side of proxy …\nContains an Internet email address for a human user who …\nA view to all values stored in a single entry.\nSpecifies the domain name of the server and (optionally) …\nA set of HTTP headers\nRepresents an HTTP header field name\nRepresents an HTTP header field value.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on the modification date.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on range.\nMakes the request conditional based on the last …\nA marker trait used to identify values that can be used as …\nAn owning iterator over the entries of a <code>HeaderMap</code>.\nA possible error when converting a <code>HeaderName</code> from another …\nA possible error when converting a <code>HeaderValue</code> from a …\n<code>HeaderMap</code> entry iterator.\n<code>HeaderMap</code> mutable entry iterator\nAn iterator over <code>HeaderMap</code> keys.\nThe Last-Modified header contains the date and time when …\nAllows the server to point an interested client to another …\nIndicates the URL to redirect a page to.\nIndicates the max number of intermediaries the request …\nError returned when max capacity of <code>HeaderMap</code> is exceeded\nIndicates where a fetch originates from.\nAn occupied entry\nA view into a single occupied location in a <code>HeaderMap</code>.\nHTTP/1.0 header usually used for backwards compatibility.\nDefines the authentication method that should be used to …\nContains the credentials to authenticate a user agent to a …\nAssociates a specific cryptographic public key with a …\nSends reports of pinning violation to the report-uri …\nIndicates the part of a document that the server should …\nContains the address of the previous web page from which a …\nGoverns which referrer information should be included with …\nInforms the web browser that the current page or frame …\nThe Retry-After response HTTP header indicates how long …\nThe |Sec-WebSocket-Accept| header field is used in the …\nThe |Sec-WebSocket-Extensions| header field is used in the …\nThe |Sec-WebSocket-Key| header field is used in the …\nThe |Sec-WebSocket-Protocol| header field is used in the …\nThe |Sec-WebSocket-Version| header field is used in the …\nContains information about the software used by the origin …\nUsed to send cookies from the server to the user agent.\nTells the client to communicate with HTTPS instead of …\nInforms the server of transfer encodings willing to be …\nAllows the sender to include additional fields at the end …\nSpecifies the form of encoding used to safely transfer the …\nA possible error when converting a <code>HeaderValue</code> to a string …\nUsed as part of the exchange to upgrade the protocol.\nSends a signal to the server expressing the client’s …\nContains a string that allows identifying the requesting …\nDetermines how to match future requests with cached …\nAdded by proxies to track routing.\nA vacant entry\nA view into a single empty location in a <code>HeaderMap</code>.\nAn drain iterator of all values associated with a single …\nAn iterator of all values associated with a single header …\nA mutable iterator of all values associated with a single …\n<code>HeaderMap</code> value iterator.\n<code>HeaderMap</code> mutable value iterator\nGeneral HTTP header contains information about possible …\nDefines the authentication method that should be used to …\nMarker used by the server to indicate that the MIME types …\nControls DNS prefetching.\nIndicates whether or not a browser should be allowed to …\nStop pages from loading when an XSS attack is detected.\nInsert the value into the entry.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a reference to the first value in the entry.\nGet a mutable reference to the first value in the entry.\nInsert the value into the entry.\nSets the value of the entry.\nInsert the value into the entry.\nSets the value of the entry.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTake ownership of the key\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nReturns an iterator visiting all values associated with …\nReturns an iterator visiting all values associated with …\nReturns an iterator mutably visiting all values associated …\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nRemove the entry from the map.\nRemove the entry from the map.\nRemove the entry from the map.\nInsert the value into the entry.\nInsert the value into the entry.\nA possible error value when converting <code>Method</code> from bytes.\nThe Request Method (VERB)\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn HTTP request builder\nComponent parts of an HTTP <code>Request</code>\nRepresents an HTTP request.\n“Consumes” this builder, using the provided <code>body</code> to …\nAdds an extension to this builder\nThe request’s extensions\nGet a mutable reference to the extensions for this request …\nGet a reference to the extensions for this request builder.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAppends a header to this request builder.\nThe request’s headers\nGet headers on this request builder.\nGet header on this request builder. when builder has error …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the HTTP method for this request.\nThe request’s method\nGet the HTTP Method for this request.\nCreates a new default instance of <code>Builder</code> to construct a …\nSet the URI for this request.\nThe request’s URI\nGet the URI for this request\nSet the HTTP version for this request.\nThe request’s version\nGet the HTTP version for this request\nAn HTTP response builder\nComponent parts of an HTTP <code>Response</code>\nRepresents an HTTP response\n“Consumes” this builder, using the provided <code>body</code> to …\nAdds an extension to this builder\nThe response’s extensions\nGet a mutable reference to the extensions for this …\nGet a reference to the extensions for this response …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAppends a header to this response builder.\nThe response’s headers\nGet header on this response builder. when builder has …\nGet header on this response builder.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new default instance of <code>Builder</code> to construct …\nSet the HTTP status for this response.\nThe response’s status\nSet the HTTP version for this response.\nThe response’s version\nA possible error value when converting a <code>StatusCode</code> from a …\nAn HTTP status code (<code>status-code</code> in RFC 9110 et al.).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents the authority component of a URI.\nA builder for <code>Uri</code>s.\nHTTP protocol scheme\nHTTP protocol over TLS.\nAn error resulting from a failed attempt to construct a …\nAn error resulting from a failed attempt to construct a …\nThe various parts of a URI.\nRepresents the path component of a URI\nThe port component of a URI.\nRepresents the scheme component of a URI\nThe URI component of a request.\nReturns the port number as a <code>str</code>.\nReturn a str representation of the authority\nReturns the path and query as a string component.\nReturn a str representation of the scheme\nReturns the port number as a <code>u16</code>.\nSet the <code>Authority</code> for this URI.\nThe authority component of a URI\nConsumes this builder, and tries to construct a valid <code>Uri</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to convert a <code>Bytes</code> buffer to a <code>Authority</code>.\nAttempt to convert a <code>Bytes</code> buffer to a <code>PathAndQuery</code>.\nAttempt to convert an <code>Authority</code> from a static string.\nConvert a <code>PathAndQuery</code> from a static string.\nGet the host of this <code>Authority</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new default instance of <code>Builder</code> to construct a …\nReturns the path component\nSet the <code>PathAndQuery</code> for this URI.\nThe origin-form component of a URI\nGet the port part of this <code>Authority</code>.\nGet the port of this <code>Authority</code> as a <code>u16</code>.\nReturns the query string component\nSet the <code>Scheme</code> for this URI.\nThe scheme component of a URI\nRepresents a version of the HTTP spec.\nChained processing of request (and response).\nContinuation of a <code>Middleware</code> chain.\nReturns the argument unchanged.\nHandle of the middleware logic.\nContinue the middleware chain.\nCalls <code>U::from(self)</code>.\nTypestate for <code>Config</code> when configured for an <code>Agent</code>.\nTypestate for for <code>Config</code> when configured via …\nTypestate for <code>Config</code> when configured on the <code>RequestBuilder</code> …\nTypestate when <code>RequestBuilder</code> needs to a send body.\nTypestate when <code>RequestBuilder</code> has no send body.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nName resolvers.\nHTTP/1.1 data transport.\nSimple impl of an array behaving like a vec.\nDefault resolver implementation.\nAddresses as returned by the resolver.\nTrait for name resolvers.\nProduce an empty array of addresses.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct the array.\nHelper to combine scheme host and port to a single string.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdd a value T.\nResolve the URI to a socket address.\nShorten the vec.\nThe first transport.\nThe second transport.\nAbstraction over input/output buffers.\nTwo chained connectors called one after another.\nConnector for CONNECT proxy settings.\nThe parameters needed to create a <code>Transport</code>.\nTrait for components providing some aspect of connecting.\nDefault connector providing TCP sockets, TLS and SOCKS …\nA selection between two transports.\nDefault buffer implementation.\nA pair of <code>Duration</code> and <code>Timeout</code>.\nThe type of transport produced by this connector.\nConnector for regular TCP sockets.\nTransport of HTTP/1.1 as created by a <code>Connector</code>.\nHelper to turn a <code>Transport</code> into a std::io <code>Read</code> and <code>Write</code>.\nThe resolved IP address + port for the uri being …\nDuration until next timeout.\nWait for input and fill the buffer.\nProvide buffers for this transport.\nHelper to determine if the <code>&amp;input</code> already holds unconsumed …\nChain this connector to another connector.\nThe configuration.\nUse this connector to make a <code>Transport</code>.\nExecutes the given command directly.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMut reference to the adapted transport\nReference to the adapted transport\nReference to the inner transport.\nUnconsumed bytes in the input buffer as read only.\nInput buffer to write to. This can be called despite there …\nAdd a number of read bytes into <code>Buffers::input_append_buf()</code>…\nConsume a number of bytes from <code>&amp;input</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurn the adapter back into the wrapped transport\nTell whether this transport is still functional. This must …\nWhether the transport is TLS.\nTell if the requested socket need TLS wrapping.\nCreates a new adapter\nCreate a new buffer.\nCreates a default connector.\nReturns the duration of the timeout if the timeout must …\nCurrent time.\nMut handle to output buffers to write new data. Data is …\nQueues the given command for further execution.\nThe name of the next timeout.s\nWhether the config is request level.\nThe resolver configured on <code>Agent</code>.\nRun the connector chain.\nSet a new value of the timeout.\nPerforms a set of actions within a synchronous update.\nInternal time wrappers\nThe next timeout for making the connection.\nHelper to get a scratch buffer (<code>tmp</code>) and the output …\nTransmit <code>amount</code> of the output buffer. ureq will always …\nFull uri that is being requested.\nA time in the past that already happened.\nWrapper for <code>std::time::Duration</code> that provides a duration …\nAn exact instant.\nAn exact duration.\nWrapper for <code>std::time::Instant</code> that provides additional …\nA time in the future that will never happen.\nA duration so long it will never happen.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a duration from seconds.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTells if this duration will ever happen.\nCurrent time.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe size of this SIMD vector in bits.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\nThe number of lanes in this SIMD vector.\ntrue if all high bits are set for every value in the vector\ntrue if all high bits are set for every value in the vector\ntrue if any high bits are set for any value in the vector\ntrue if any high bits are set for any value in the vector\nCalculates partial dot product. Multiplies packed signed …\nCalculates partial dot product. Multiplies packed signed …\nCalculate the exponent of a packed <code>f32x8</code>\nCalculate the exponent of a packed <code>f32x4</code>\nCalculate the exponent of a packed <code>f64x4</code>\nCalculate the exponent of a packed <code>f64x2</code>\nCalculates the lanewise maximum of both vectors. This is a …\nCalculates the lanewise maximum of both vectors. This is a …\nCalculates the lanewise maximum of both vectors. This is a …\nCalculates the lanewise maximum of both vectors. This is a …\nCalculates the lanewise minimum of both vectors. This is a …\nCalculates the lanewise minimum of both vectors. This is a …\nCalculates the lanewise minimum of both vectors. This is a …\nCalculates the lanewise minimum of both vectors. This is a …\nRounds each lane into an integer. This is a faster …\nRounds each lane into an integer. This is a faster …\nTruncates each lane into an integer. This is a faster …\nTruncates each lane into an integer. This is a faster …\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts the lower two <code>i32</code> lanes to two <code>f64</code> lanes (and …\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nwiden with zero extend from u8 to i16\nwiden with sign extend from i8 to i16\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nSplats the single value given across all lanes.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nwidens and sign extends to u16x16\nReturns the argument unchanged.\nReturns the argument unchanged.\nSplats the single value given across all lanes.\nwidens and zero extends to u32x8")