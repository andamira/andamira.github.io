searchState.loadedDescShard("devela", 25, "Creates a new <code>StringNonul</code> from a <code>char7</code>.\nCreates a new <code>StringU8</code> from a <code>char7</code>.\nCreates a new <code>StringNonul</code> from a <code>char8</code>.\nCreates a new <code>StringU8</code> from a <code>char8</code>.\nResolves a given path relative to the nearest <code>Cargo.toml</code> …\nReturns the current working directory.\nCreates a new angle from a <code>value</code> in a <code>custom_unit</code> which …\nCreates a new angle from a <code>value</code> in a <code>custom_unit</code> which …\nCreates a new angle from a <code>value</code> in a <code>custom_unit</code> which …\n<em>const</em> version of <code>From&lt;DataOverflow&gt; for TimeError</code>.\n<em>const</em> version of <code>From&lt;DataOverflow&gt; for DataError</code>.\n<em>const</em> version of <code>From&lt;DataOverflow&gt; for MismatchedBounds</code>.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new angle from a floating-point <code>degrees</code> value.\nCreates a new angle from a <code>degrees</code> value.\nCreates a new angle from a floating-point <code>degrees</code> value.\nConverts a <code>Duration</code> into a full <code>TimeSplit</code>.\nConverts a <code>Duration</code> into a <code>TimeSplitYearDay</code>.\nConverts a <code>Duration</code> into a <code>TimeSplitYearSec</code>.\nConverts a <code>Duration</code> into a <code>TimeSplitHourSec</code>.\nConverts a <code>Duration</code> into a time split representation from …\nConverts a <code>Duration</code>’s sub-second component into a …\nConverts a <code>Duration</code> to a <code>TimeDelta</code>.\nConverts a <code>Duration</code>’s sub-second component into a …\nConverts a <code>Duration</code> into a time split representation from …\nConverts a <code>Duration</code> into a <code>TimeSplitHourSec</code>.\nConverts a <code>Duration</code> into a <code>TimeSplitYearSec</code>.\nConverts a <code>Duration</code> into a full <code>TimeSplit</code>.\nConverts a <code>Duration</code> into a <code>TimeSplitYearDay</code>.\n<em>const</em> version of <code>From&lt;ElementNotFound&gt; for DataError</code>.\nConverts bytes to an <code>OsString</code> without checking that the …\nConverts a slice of bytes to an OS string slice without …\nConverts <code>KeyFfi</code> to <code>Key</code>.\nConverts <code>EventKeyFfi</code> to <code>EventKey</code>.\nCreates an iterator that calls the given closure …\nReturns a new <code>Array</code>, where each element <code>T</code> is the returned …\nCreates a new Xoroshiro128++ PRNG, seeded from addresses …\nCreates a new <code>TimeDelta</code> from the given number of hours. …\nCreates a new <code>Duration</code> from the specified number of hours.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nConverts a linear index back into <code>(row, col)</code>, if valid.\nReturns a <code>Month</code> from its index, from <code>January=0</code> to …\n<em>const</em> version of <code>From&lt;IndexOutOfBounds&gt; for DataError</code>.\n<em>const</em> version of …\nReturns a <code>Month</code> from its index, from <code>January=0</code> to …\n<em>const</em> version of <code>From&lt;InvalidAxisLength&gt; for DataError</code>.\nConverts <code>IoError</code> to <code>LinuxError</code>.\nCreates a value from an iterator.\nTakes each element in the <code>Iterator</code> and collects it into an …\nConstructs a <code>BTreeMap&lt;K, V&gt;</code> from an iterator of key-value …\nTakes each element in the <code>Iterator</code> and collects it into an …\nCreates a new <code>PathBuf</code> from the <code>Path</code> elements of an …\nCreates a new <code>CodecFlags</code> from a slice of arbitrary types.\nCreates a chunk from an iterator.\nTakes each element in the <code>Iterator</code>: if it is <code>None</code>, no …\nTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no …\nTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no …\nConverts <code>SignedDuration</code> into <code>TimeDelta</code>.\nConverts a <code>JsInstant</code> into a <code>TimeDelta</code> relative to the time …\nConverts a <code>WebEventKind</code> to <code>KeyState</code>, if applicable.\nConverts <code>WebEventMouse</code> to <code>EventMouse</code>.\nConverts a JavaScript button index in <code>WebEventMouse</code> into …\nConverts a <code>WebEventKind</code> into <code>EventButtonState</code>.\nConverts a <code>JsInstant</code> to an <code>EventTimestamp</code>, ensuring a …\nAttempts to construct a <code>KeyAlpha</code> from a JavaScript …\nAttempts to construct a <code>KeyPad</code> from a JavaScript …\nAtempts to construct a <code>KeyMedia</code> from a JavaScript …\nAtempts to construct a <code>KeyMod</code> from a JavaScript …\nAttempts to construct a <code>KeyMod</code> from a JavaScript …\nAttempts to construct a <code>KeyAlpha</code> from a JavaScript …\nAttempts to construct a <code>KeyPad</code> from a JavaScript …\nAtempts to construct a <code>KeyMedia</code> from a JavaScript …\nAtempts to construct a <code>KeyMod</code> from a JavaScript …\nAttempts to construct a <code>KeyMod</code> from a JavaScript …\n<em>const</em> version of <code>From&lt;KeyAlreadyExists&gt; for DataError</code>.\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nRetuns the path of <code>CARGO_MANIFEST_DIR</code>.\nRetuns the path of <code>CARGO_MANIFEST_PATH</code>.\nCreates a new <code>TimeDelta</code> from the given number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>TimeDelta</code> from the given number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a timestamp from seconds, ensuring a valid value.\nReturns a new <code>JsInstant</code> from a timestamp in milliseconds.\nReturns a time delta corresponding to the number of …\nCreates a new <code>TimeDelta</code> from the given number of minutes. …\nCreates a new <code>Duration</code> from the specified number of …\n<em>const</em> version of <code>From&lt;MismatchedCapacity&gt; for DataError</code>.\n<em>const</em> version of …\n<em>const</em> version of <code>From&lt;MismatchedDimensions&gt; for DataError</code>.\n<em>const</em> version of <code>From&lt;MismatchedIndices&gt; for DataError</code>.\n<em>const</em> version of …\nReturns a weekday from its index, from <code>Monday=0</code> to <code>Sunday=6</code>…\nReturns a weekday from its index, from <code>Monday=0</code> to <code>Sunday=6</code>…\nReturns a weekday from its counting number, from <code>Monday=1</code> …\nConverts a reference to a non-zero mutable reference if …\nConverts a mutable reference to a <code>NonNull</code> pointer.\nConvert an exclusive reference to a raw pointer.\nConverts a reference to <code>T</code> into a slice of length 1 …\nReturns a <code>&amp;Cell&lt;T&gt;</code> from a <code>&amp;mut T</code>\nConverts from <code>&amp;mut T</code> to <code>&amp;mut UnsafeCell&lt;T&gt;</code>.\nConverts a mutable reference to a non-zero mutable …\nCreates a new <code>TimeDelta</code> from the given number of whole …\nCreates a new <code>Duration</code> from the specified number of …\n<em>const</em> version of <code>From&lt;NodeEmpty&gt; for DataError</code>.\n<em>const</em> version of <code>From&lt;NodeLinkNotSet&gt; for DataError</code>.\n<em>const</em> version of <code>From&lt;NodeLinkNotUnique&gt; for DataError</code>.\nConstructs a box from a <code>NonNull</code> pointer.\nConstructs a box from a <code>NonNull</code> pointer in the given …\n<em>const</em> version of <code>From&lt;NotEnoughElements&gt; for DataError</code>.\n<em>const</em> version of <code>From&lt;NotEnoughElements&gt; for DataNotEnough</code>.\n<em>const</em> version of <code>From&lt;NotEnoughSpace&gt; for DataError</code>.\n<em>const</em> version of <code>From&lt;NotEnoughSpace&gt; for PartialSpace</code>.\n<em>const</em> version of <code>From&lt;NotEnoughSpace&gt; for DataNotEnough</code>.\n<em>const</em> version of <code>From&lt;NotImplemented&gt; for DataError</code>.\n<em>const</em> version of <code>From&lt;NotImplemented&gt; for NotAvailable</code>.\n<em>const</em> version of <code>From&lt;NotSupported&gt; for DataError</code>.\n<em>const</em> version of <code>From&lt;NotSupported&gt; for NotAvailable</code>.\nReturns a <code>Month</code> from its counting number, from <code>January=1</code> …\nCreates an <code>Ipv4Addr</code> from a four element byte array.\nCreates an <code>Ipv6Addr</code> from a sixteen element byte array.\n<em>const</em> version of <code>From&lt;PartiallyAdded&gt; for DataError</code>.\n<em>const</em> version of <code>From&lt;PartiallyAdded&gt; for PartialSpace</code>.\nCreates a <code>Vec&lt;T&gt;</code> directly from a <code>NonNull</code> pointer, a …\nCreates a <code>Vec&lt;T, A&gt;</code> directly from a <code>NonNull</code> pointer, a …\nCreates a new <code>AtomicBool</code> from a pointer.\nCreates a new <code>AtomicPtr</code> from a pointer.\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic float from a pointer.\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic float from a pointer.\nCreates a new reference to an atomic integer from a …\nCreates a new reference to an atomic integer from a …\nWraps a raw C string with a safe C string wrapper.\nCreates a new angle from a floating-point <code>radians</code> value.\nCreates a new angle from a floating-point <code>radians</code> value.\nCreates a new angle from a <code>radians</code> value.\nCreates a new Xoroshiro128++ PRNG, seeded from <code>RandomState</code>.\nInitializes the array from an iterator until it’s either …\nConstructs an <code>Arc&lt;T&gt;</code> from a raw pointer.\nConverts a raw pointer previously created by <code>into_raw</code> back …\nConstructs a box from a raw pointer.\nConstructs an <code>Rc&lt;T&gt;</code> from a raw pointer.\nConverts a raw pointer previously created by <code>into_raw</code> back …\nRetakes ownership of a <code>CString</code> that was transferred to C …\nConstructs a <code>Thread</code> from a raw pointer.\nCreates a new <code>Waker</code> from <code>RawWaker</code>.\nConstructs a box from a raw pointer in the given allocator.\nConstructs an <code>Rc&lt;T, A&gt;</code> from a raw pointer in the provided …\nConverts a raw pointer previously created by <code>into_raw</code> back …\nCreates a new instance of an <code>Error</code> from a particular OS …\nPerforms the same functionality as <code>std::ptr::from_raw_parts</code>…\nForms a shared slice from a pointer and a length.\nCreates a <code>Vec&lt;T&gt;</code> directly from a pointer, a length, and a …\nCreates a new <code>String</code> from a pointer, a length and a …\nCreates a <code>Vec&lt;T, A&gt;</code> directly from a pointer, a length, a …\nForms an exclusive slice from a pointer and a length.\nDecomposes a fat pointer <code>*const T</code> into a <code>FatPtr</code> structure.\nConverts a reference to a <code>NonNull</code> pointer.\nConvert a shared reference to a raw pointer.\nConverts a reference to <code>T</code> into a slice of length 1 …\nConstructs a <code>WebEventKind</code> from its representation.\nConstructs a keyboard location from the numeric value of …\nConvert to <code>Rgba&lt;u8&gt;</code> by scaling each component …\nCreate from <code>Rgb&lt;u16&gt;</code>.\nConvert to <code>Rgba&lt;u8&gt;</code> by scaling each component …\nCreate from <code>Rgb&lt;u16&gt;</code>.\nCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBB</code> format.\nCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format, …\nCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBB</code> format.\nCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format, …\nCreate from <code>Rgb&lt;u8&gt;</code>.\nCreate from <code>Rgb&lt;u8&gt;</code>.\nCreate from a packed <code>u32</code> in <code>0xRRGGBB</code> format.\nCreate from a packed <code>u32</code> in <code>0xRRGGBB</code> format, with the …\nCreate from a packed <code>u32</code> in <code>0xRRGGBB</code> format.\nCreate from a packed <code>u32</code> in <code>0xRRGGBB</code> format, with the …\nCreate from <code>Rgb&lt;f64&gt;</code>.\nCreate from <code>Rgb&lt;f64&gt;</code>.\nCreate from <code>Rgb&lt;f64&gt;</code>.\nCreate from <code>Rgb&lt;f64&gt;</code>.\nCreate from <code>Rgb&lt;f64&gt;</code>.\nCreate from <code>Rgb&lt;f64&gt;</code>.\nCreate from <code>Rgb&lt;f64&gt;</code>.\nCreate from <code>Rgb&lt;f64&gt;</code>.\nCreate from <code>Rgba&lt;u16&gt;</code> by scaling each component …\nCreate from <code>Rgba&lt;u16&gt;</code>.\nCreate from <code>Rgba&lt;u16&gt;</code>.\nCreate from <code>Rgba&lt;u16&gt;</code> by scaling each component …\nCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format, …\nCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format …\nCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format, …\nCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format …\nCreate from <code>Rgba&lt;u8&gt;</code>.\nCreate from <code>Rgba&lt;u8&gt;</code>.\nCreate from a packed <code>u32</code> in <code>0xRRGGBBAA</code> format, discarding …\nCreate from a packed <code>u32</code> in <code>0xRRGGBBAA</code> format (big-endian).\nCreate from a packed <code>u32</code> in <code>0xRRGGBBAA</code> format, discarding …\nCreate from a packed <code>u32</code> in <code>0xRRGGBBAA</code> format (big-endian).\nCreate from <code>Rgba&lt;f64&gt;</code>.\nCreate from <code>Rgba&lt;f64&gt;</code>.\nCreate from <code>Rgba&lt;f64&gt;</code>.\nCreate from <code>Rgba&lt;f64&gt;</code>.\nCreate from <code>Rgba&lt;f64&gt;</code>.\nCreate from <code>Rgba&lt;f64&gt;</code>.\nCreate from <code>Rgba&lt;f64&gt;</code>.\nCreate from <code>Rgba&lt;f64&gt;</code>.\nCreates a new <code>TimeDelta</code> from the given number of whole …\nCreates a new <code>Duration</code> from the specified number of whole …\nReturns a time delta corresponding to the number of …\nCreates a timestamp from milliseconds, ensuring a valid …\nCreates a new <code>Duration</code> from the specified number of …\nReturns a new <code>JsInstant</code> from a timestamp in milliseconds.\nReturns a time delta corresponding to the number of …\nCreates a new <code>Duration</code> from the specified number of …\nWhen seeded with zero this implementation uses the default …\nWhen seeded with zero this implementation uses the default …\nWhen seeded with zero this implementation uses the default …\nWhen seeded with zero this implementation uses the default …\nWhen seeded with zero this implementation uses the default …\nWhen seeded with zero this implementation uses the default …\nWhen seeded with zero this implementation uses the default …\nWhen seeded with zero this implementation uses the default …\nCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.\nConstructs a <code>Layout</code> from a given <code>size</code> and <code>align</code>, or …\nCreates a layout, bypassing all checks.\nCreates a new <code>CodecFlags</code> from a slice of <code>bool</code>s.\nConstructs a primitive <code>T</code> from a slice of <code>U</code> in big-endian …\nConstructs a primitive <code>T</code> from a slice of <code>U</code> in …\nConstructs a primitive <code>T</code> from a slice of <code>U</code> in …\nCreates a new Xoroshiro128++ PRNG, seeded from addresses …\nRestores the PRNG from the given state.\nRestores the PRNG from the given state.\nRestores the PRNG from the given state.\nRestores the PRNG from the given state.\nRestores the PRNG from the given state.\nRestores the PRNG from the given state.\nRestores the PRNG from the given state.\nRestores the PRNG from the given state.\nRestores the PRNG from the given state.\nRestores the PRNG from the given state.\nRestores the PRNG from the given state.\nParses a string <code>s</code> to return a value of this type.\nConverts a string <code>s</code> into a <code>CString</code>.\nReturns a weekday from its index, from <code>Sunday=0</code> to <code>Monday=6</code>…\nReturns a weekday from its index, from <code>Sunday=0</code> to <code>Monday=6</code>…\nReturns a weekday from its counting number, from <code>Sunday=1</code> …\n<em>const</em> version of <code>From&lt;SystemTimeError&gt; for TimeError</code>.\nReturns a temporary directory.\nCreate from a tuple.\nCreate from a tuple.\nCreate from a tuple.\nCreate from a tuple.\nCreate from a tuple.\nCreate from a tuple.\nCreate from a tuple.\nCreate from a tuple.\nReturns an <code>AnsiColor3b</code> from an <code>u8</code> value. If <code>value</code> &gt; 7 then …\nDecode a native endian UTF-16–encoded vector <code>v</code> into a …\nDecode a native endian UTF-16–encoded slice <code>v</code> into a …\nDecode a UTF-16BE–encoded vector <code>v</code> into a <code>String</code>, …\nDecode a UTF-16BE–encoded slice <code>v</code> into a <code>String</code>, …\nDecode a UTF-16LE–encoded vector <code>v</code> into a <code>String</code>, …\nDecode a UTF-16LE–encoded slice <code>v</code> into a <code>String</code>, …\nConverts a slice of bytes to a string slice.\nConverts a vector of bytes to a <code>String</code>.\nConverts a slice of bytes to a string, including invalid …\nConverts a <code>Vec&lt;u8&gt;</code> to a <code>String</code>, substituting invalid UTF-8 …\nConverts a mutable slice of bytes to a mutable string …\nConverts a slice of bytes to a string slice without …\nConverts a vector of bytes to a <code>String</code> without checking …\nConverts a mutable slice of bytes to a mutable string …\nCreates a C-compatible string by consuming a byte vector, …\nAttempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.\nConverts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …\nCreates a <code>Point</code> from a <code>Vector</code>.\nCreates a <code>Point</code> from a constant <code>Vector</code>.\nConstructs itself from a tuple.\nConstructs itself from a tuple, in compile-time.\nCreates a new <code>Context</code> from a <code>&amp;Waker</code>.\nCreates a new <code>Duration</code> from the specified number of weeks.\nReturns a shared reference to the front element.\nProvides a reference to the front element, or <code>None</code> if the …\nProvides a reference to the front element, or <code>None</code> if the …\nReturns an exclusive reference to the front element.\nProvides a mutable reference to the front element, or <code>None</code> …\nProvides a mutable reference to the front element, or <code>None</code> …\n⚙️ 𝟙 A pointer-sized floating-point primitive.\nWhether the window should be <code>fullscreen</code>.\nIf <code>true</code>, create the window in fullscreen mode (ignored on …\nCreates an iterator which ends after the first <code>None</code>.\nCreates an iterator which ends after the first <code>None</code>.\nCreates an iterator which ends after the first <code>None</code>.\nCreates an iterator which ends after the first <code>None</code>.\nCreates an iterator which ends after the first <code>None</code>.\nCreates an iterator which ends after the first <code>None</code>.\nCreates an iterator which ends after the first <code>None</code>.\nCreates an iterator which ends after the first <code>None</code>.\nLanewise fused <code>(a * b) + c</code>\nLow lane fused <code>(a * b) + c</code>, other lanes unchanged\nLanewise fused <code>(a * b) + c</code>\nLow lane fused <code>(a * b) + c</code>, other lanes unchanged\nLanewise fused <code>(a * b) + c</code>\nLanewise fused <code>(a * b) + c</code>\nLanewise fused <code>(a * b) addsub c</code> (adds odd lanes and …\nLanewise fused <code>(a * b) addsub c</code> (adds odd lanes and …\nLanewise fused <code>(a * b) addsub c</code> (adds odd lanes and …\nLanewise fused <code>(a * b) addsub c</code> (adds odd lanes and …\nLanewise fused <code>-(a * b) + c</code>\nLow lane <code>-(a * b) + c</code>, other lanes unchanged.\nLanewise fused <code>-(a * b) + c</code>\nLow lane <code>-(a * b) + c</code>, other lanes unchanged.\nLanewise fused <code>-(a * b) + c</code>\nLanewise fused <code>-(a * b) + c</code>\nLanewise fused <code>-(a * b) - c</code>\nLow lane fused <code>-(a * b) - c</code>, other lanes unchanged.\nLanewise fused <code>-(a * b) - c</code>\nLow lane fused <code>-(a * b) - c</code>, other lanes unchanged.\nLanewise fused <code>-(a * b) - c</code>\nLanewise fused <code>-(a * b) - c</code>\nLanewise fused <code>(a * b) - c</code>\nLow lane fused <code>(a * b) - c</code>, other lanes unchanged.\nLanewise fused <code>(a * b) - c</code>\nLow lane fused <code>(a * b) - c</code>, other lanes unchanged.\nLanewise fused <code>(a * b) - c</code>\nLanewise fused <code>(a * b) - c</code>\nLanewise fused <code>(a * b) subadd c</code> (subtracts odd lanes and …\nLanewise fused <code>(a * b) subadd c</code> (subtracts odd lanes and …\nLanewise fused <code>(a * b) subadd c</code> (subtracts odd lanes and …\nLanewise fused <code>(a * b) subadd c</code> (subtracts odd lanes and …\nGet a <code>Pin&lt;&amp;mut G&gt;</code>\n⚙️ A GLSL boolean.\n📐 Equivalent to GLSL <code>bvec2</code>, a vector of 2×<code>g_bool</code>s.\n📐 Equivalent to GLSL <code>bvec3</code>, a vector of 3×<code>g_bool</code>s.\n📐 Equivalent to GLSL <code>bvec4</code>, a vector of 4×<code>g_bool</code>s.\n📐 Equivalent to GLSL <code>dmat2</code>, a column-major 2×2 matrix …\n📐 Equivalent to GLSL <code>dmat3</code>, a column-major 3×3 matrix …\n📐 Equivalent to GLSL <code>dmat4</code>, a column-major 4×4 matrix …\n⚙️ 𝟙 A GLSL double-precision floating-point number.\n📐 Equivalent to GLSL <code>dvec2</code>, a vector of 2×<code>g_double</code>s.\n📐 Equivalent to GLSL <code>dvec3</code>, a vector of 3×<code>g_double</code>s.\n📐 Equivalent to GLSL <code>dvec4</code>, a vector of 4×<code>g_double</code>s.\n⚙️ 𝟙 A GLSL single-precision floating-point number.\n⚙️ 𝟙 A GLSL signed 32-bit integer.\n📐 Equivalent to GLSL <code>ivec2</code>, a vector of 2×<code>g_int</code>s.\n📐 Equivalent to GLSL <code>ivec3</code>, a vector of 3×<code>g_int</code>s.\n📐 Equivalent to GLSL <code>ivec4</code>, a vector of 4×<code>g_int</code>s.\n📐 Equivalent to GLSL <code>mat2</code>, a column-major 2×2 matrix …\n📐 Equivalent to GLSL <code>mat2x3</code>, a column-major 2×3 matrix …\n📐 Equivalent to GLSL <code>mat2x4</code>, a column-major 2×4 matrix …\n📐 Equivalent to GLSL <code>mat3x3</code>, a column-major 3×3 matrix …\n📐 Equivalent to GLSL <code>mat3x2</code>, a column-major 3×2 matrix …\n📐 Equivalent to GLSL <code>mat3x4</code>, a column-major 3×4 matrix …\n📐 Equivalent to GLSL <code>mat4x4</code>, a column-major 4×4 matrix …\n📐 Equivalent to GLSL <code>mat4x2</code>, a column-major 4×2 matrix …\n📐 Equivalent to GLSL <code>mat4x3</code>, a column-major 4×3 matrix …\n⚙️ 𝟙 A GLSL unsigned 32-bit integer.\n📐 Equivalent to GLSL <code>ivec2</code>, a vector of 2×<code>g_uint</code>s.\n📐 Equivalent to GLSL <code>ivec3</code>, a vector of 3×<code>g_uint</code>s.\n📐 Equivalent to GLSL <code>ivec4</code>, a vector of 4×<code>g_uint</code>s.\n📐 Equivalent to GLSL <code>vec2</code>, a vector of 2×<code>g_float</code>s.\n📐 Equivalent to GLSL <code>vec3</code>, a vector of 3×<code>g_float</code>s.\n📐 Equivalent to GLSL <code>vec4</code>, a vector of 4×<code>g_float</code>s.\n📐 A convenient 2D GLSL vertex representation with …\n📐 A convenient 3D GLSL vertex representation with …\nGamepad input capabilities.\nThe greatest common divisor.\n‘Greater than or equal to’ comparison for two <code>Arc</code>s.\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nReturns <code>true</code> if <code>self &gt;= other</code>.\nReturns <code>true</code> if <code>self &gt;= other</code> using total order.\nReturns <code>true</code> if <code>self &gt;= other</code>.\nReturns <code>true</code> if <code>self &gt;= other</code>.\n‘Greater than or equal to’ comparison for two <code>Rc</code>s.\nPanics\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nGets a reference to the ID data.\nReturns a reference to the value corresponding to the key.\nReturns a copy of the contained value.\nReturns the contained value as a primitive type.\nReturns a shared reference to the element at the given …\nReturns a reference to the value in the set, if any, that …\nReturns a reference to the value corresponding to the key.\nReturns a clone of the element at the given 2D coordinates …\nReturns a clone of the element at the given 2D coordinates …\nReturns an iterator over a subsection of the iterator.\nReturns an iterator over a subsection of the iterator.\nReturns a reference to the element in the set, if any, …\nProvides a reference to the element at the given index.\nReturns a reference to the value if initialized. Otherwise …\nGets the reference to the underlying value.\nReturns a copy of the contained value.\nGets a mutable pointer to the wrapped value.\nReturns a reference to the value if initialized. Otherwise …\nGets the reference to the underlying value.\nReturns the current hash value.\nReturns the current hash value.\nReturns the current hash value.\nReturns the current hash value.\nRetrieves a value by key.\nGets a reference to the item at the provided index in this …\nReturns a shared reference to an initialized element at a …\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nRetrieves the value at <code>(row, col)</code>, if valid.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns the value as a primitive type.\nReturns an iterator of the arguments that will be passed …\nGets a single byte from <em>stdin</em>.\nGets a single <code>char</code> from <em>stdin</em>.\nGets the bits in <code>self</code> from the <code>[start..=end]</code> checked range.\nReturns the contained value by cloning it.\nReturns the contained value by cloning it.\nReturns a clone of the element at the given 2D coordinates …\nReturns a clone of the element at the given 2D coordinates …\nCalculates the 2D coordinates from the given 1D array index\nCalculates the 2D coordinates from the given 1D array index\nCalculates the 2D coordinates from the given 1D array index\nCalculates the 2D coordinates from the given 1D array index\nCalculates the 2D coordinates from the given 1D array index\nCalculates the 2D coordinates from the given 1D array index\nCalculates the 2D coordinates from the given 1D array index\nCalculates the 2D coordinates from the given 1D array index\nReturns the working directory for the child process.\nGets either a single <code>char</code> from <em>stdin</em>, or the replacement …\nReturns an iterator of the environment variables …\nGets the low lane as an individual <code>f32</code> value.\nGets the lower lane as an <code>f64</code> value.\nReturns the hash value with lazy mod mapping to the given …\nReturns the hash value with lazy mod mapping to the given …\nReturns the hash value with lazy mod mapping to the given …\nReturns the hash value with lazy mod mapping to the given …\nReturns the hash value with retried mod mapping to the …\nReturns the hash value with retried mod mapping to the …\nReturns the hash value with retried mod mapping to the …\nReturns the hash value with retried mod mapping to the …\nReturns the hash value xor folded to <code>n</code> bits.\nReturns the hash value xor folded to <code>n</code> bits.\nReturns the hash value xor folded to <code>n</code> bits.\nReturns the hash value xor folded to <code>n</code> bits.\nConverts the low lane to <code>i32</code> and extracts as an individual …\nConverts the lower lane to an <code>i32</code> value.\nConverts the lower lane to an <code>i32</code> value.\nConverts the lower lane to an <code>i64</code> value.\nConverts the lower lane to an <code>i64</code> value.\nCalculates the 1D array index from the given 2D coordinates\nCalculates the 1D array index from the given 2D coordinates\nCalculates the 1D array index from the given 2D coordinates\nCalculates the 1D array index from the given 2D coordinates\nCalculates the 1D array index from the given 2D coordinates\nCalculates the 1D array index from the given 2D coordinates\nCalculates the 1D array index from the given 2D coordinates\nCalculates the 1D array index from the given 2D coordinates\nWhether the aspect ratio is maintained on window resize.\nReturns the key-value pair corresponding to the supplied …\nReturns the key-value pair corresponding to the supplied …\nReturns the key-value pair corresponding to the supplied …\nGets a string from <em>stdin</em> backed by a <code>buffer</code>, until a …\nWhether the aspect ratio is maintained on window resize.\nAttempts to get mutable references to <code>N</code> values in the map …\nAttempts to get mutable references to <code>N</code> values in the map …\nAttempts to get mutable references to <code>N</code> values in the map …\nAttempts to get mutable references to <code>N</code> values in the map …\nReturns a mutable reference into the given <code>Arc</code>, if there …\nReturns a mutable reference to the underlying type.\nReturns a mutable reference to the value corresponding to …\nReturns a mutable reference to the underlying <code>bool</code>.\nReturns a mutable reference to the underlying pointer.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying float.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying float.\nReturns a mutable reference to the underlying integer.\nReturns a mutable reference to the underlying integer.\nReturns an exclusive reference to the element at the given …\nReturns a mutable reference to the value corresponding to …\nReturns an exclusive reference to the element at the given …\nReturns an exclusive reference to the element at the given …\nGets a mutable reference to the underlying reader.\nGets a mutable reference to the underlying writer.\nGets a mutable reference to the underlying writer.\nReturns a mutable reference to the inner error wrapped by …\nProvides a mutable reference to the element at the given …\nReturns a mutable reference to the value if initialized. …\nGets the mutable reference to the underlying value.\nReturns a mutable reference to the underlying data.\nReturns a mutable reference into the given <code>Rc</code>, if there are\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nReaches into this error indicating that a lock is …\nReturns a mutable reference to the value if initialized. …\nGets the mutable reference to the underlying value.\nGets a mutable reference to the underlying value in this …\nGets mutable references to the underlying readers in this …\nGets a mutable reference to the underlying reader.\nRetrieves some exclusive reference to the value associated …\nReturns an exclusive reference to an initialized element …\nGets a mutable reference to the data inside of this <code>Pin</code>.\nReturns an exclusive reference to the element at the given …\nReturns an exclusive reference to the element at the given …\nGets the mutable reference of the contents of the cell, …\nGets the mutable reference of the contents of the cell, …\nGets the mutable reference of the contents of the cell, …\nGets the mutable reference of the contents of the cell, …\nReturns an exclusive reference to the element at the given …\nReturns an exclusive reference to the element at the given …\nReturns an exclusive reference to the element at the given …\nReturns an exclusive reference to the element at the given …\nReturns a mutable reference into the given <code>Rc</code>, without any …\nGets the contents of the cell, initializing it to <code>f()</code> if …\nGets the contents of the cell, initializing it to <code>f()</code> if …\nInserts the given <code>value</code> into the set if it is not present, …\nInserts the given <code>value</code> into the set if it is not present, …\nInserts <code>value</code> into the option if it is <code>None</code>, then returns …\nInserts the default value into the option if it is <code>None</code>, …\nInserts a value computed from <code>f</code> into the set if the given …\nInserts a value computed from <code>f</code> into the set if the given …\nInserts a value computed from <code>f</code> into the option if it is …\nGets the contents of the cell, initializing it to <code>f()</code> if …\nGets the contents of the cell, initializing it to <code>f()</code> if …\nGet the position of the window.\nReturns the path to the program that was given to …\nGets the bits in <code>self</code> from the <code>[start..=end]</code> range.\nReturns a reference to the element at the given 2D …\nReturns a reference to the element at the given 2D …\nGets a reference to the underlying reader.\nGets a reference to the underlying writer.\nGets a reference to the underlying writer.\nReturns a reference to the inner error wrapped by this …\nReaches into this error indicating that a lock is …\nGets a reference to the underlying value in this cursor.\nGets references to the underlying readers in this <code>Chain</code>.\nGets a reference to the underlying reader.\nRetrieves some shared reference to the value associated …\nGets a shared reference out of a pin.\nReturns a reference to the element at the given 2D …\nReturns a reference to the element at the given 2D …\nReturns a reference to the element at the given 2D …\nReturns a reference to the element at the given 2D …\nReturns a reference to the element at the given 2D …\nReturns a reference to the element at the given 2D …\nReturns a clone of the element at the given 2D coordinates …\nReturns a clone of the element at the given 2D coordinates …\nThe current framebuffer size in pixels.\nGets the current termios state into <code>state</code>.\nGets a string from <em>stdin</em> backed by a <code>buffer</code>, until the <code>stop</code>…\nReturns a clone of the element at the given 2D coordinates …\nReturns a clone of the element at the given 2D coordinates …\nReturns a raw pointer to an element or subslice, without …\nGets a mutable reference to the data inside of this <code>Pin</code>.\nGets a UTF-8 encoded byte sequence from <em>stdin</em> representing …\nGets the value of the bits in <code>self</code> from the <code>[start..=end]</code> …\nGets the value of the bits in <code>self</code> from the <code>[start..=end]</code> …\nReturns the size of the window, in cells and pixels.\nReturns the current process number.\nReturns the group ID of the owner of this file.\nReturns the group ID of the owner of this file.\n<code>core</code> Module-level inline assembly.\nA slice of glyphs.\nReturns the granularity of this time source.\nCreates a new <code>AnsiColor8b</code> from a 24-color grayscale <code>value</code>, …\nCreates a new <code>AnsiColor8b</code> from a 24-color grayscale <code>value</code> …\nCreates a grayscale color by wrapping <code>value</code> via <code>% 24</code>.\nThe green component.\nThe green component.\nThe green component.\nThe green component.\nThe green component.\nThe green component.\nThe green component.\nThe green component.\nThe green component.\nThe green component.\nThe green component.\nThe green component.\n(group) Creates a new inline group, indenting all …\nSee <code>.chunk_by()</code>.\nSee <code>.chunk_by()</code>.\n(groupCollapsed) Like <code>group</code> but starts with the inline …\n(groupEnd) Exits the current inline group.\nGreater-than comparison for two <code>Arc</code>s.\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nReturns <code>true</code> if <code>self &gt; other</code>.\nReturns <code>true</code> if <code>self &gt; other</code>.\nReturns <code>true</code> if <code>self &gt; other</code>.\nReturns <code>true</code> if <code>self &gt; other</code> using total order.\nGreater-than comparison for two <code>Rc</code>s.\nPanics\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nGet a <code>Pin&lt;&amp;mut H&gt;</code>\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nHours.\nSignals a memory allocation error.\nSets the given handler.\nHanging baseline position.\nCreates a new hard link on the filesystem.\nChecks if the <em>Alt</em> modifier is set.\nChecks if the <em>AltGraph</em> modifier is set.\nChecks if WebAssembly atomics are enabled.\nChecks if bulk memory operations are available.\nChecks if the <em>Caps Lock</em> modifier is set.\nChecks if the <em>Control</em> modifier is set.\nIndicates whether the <code>d</code> field is enabled.\nChecks if there is any data left to be <code>read</code>.\nChecks if there is any data left to be <code>read</code>.\nReturns <code>true</code> if the angle has the given <code>direction</code>.\nReturns <code>true</code> if the angle has the given <code>direction</code>.\nReturns <code>true</code> if the angle has the given <code>direction</code>.\nIndicates whether the <code>h</code> field is enabled.\nIndicates whether the 6 fields from <code>h</code> to <code>ns</code> are enabled.\nIndicates whether the 3 fields from <code>h</code> to <code>s</code> are enabled.\nChecks if there is input available to read from stdin.\nChecks if the <em>Meta</em> modifier is set.\nIndicates whether the <code>mo</code> field is enabled.\nIndicates whether the <code>ms</code> field is enabled.\nIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.\nChecks if mutable-globals are available.\nIndicates whether the <code>ns</code> field is enabled.\nChecks if the <em>Num Lock</em> modifier is set.\nReturns <code>true</code> if the <code>Path</code> has a root.\nIndicates whether the <code>s</code> field is enabled.\nChecks if the <em>Scroll Lock</em> modifier is set.\nChecks if the <em>Shift</em> modifier is set.\nChecks if SIMD is available.\nIndicates whether the <code>us</code> field is enabled.\nIndicates whether the <code>y</code> field is enabled.\nIndicates whether the 3 fields from <code>y</code> to <code>d</code> are enabled.\nIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are …\nIndicates whether the 6 fields from <code>y</code> to <code>s</code> are enabled.\nFeeds this value into the given <code>Hasher</code>.\nHash a raw pointer.\nA convenience method for when you need a quick hash.\nA convenience method for when you need a quick hash.\nA convenience method for when you need a quick hash.\nComputes the FNV hash of the provided byte slice.\nComputes the FNV hash of the provided byte slice.\nComputes the FNV hash of the provided byte slice.\nComputes the FNV hash of the provided byte slice.\nComputes a hash of a byte slice using the <strong>default seed</strong>.\nComputes a hash of a byte slice using the <strong>default seed</strong>.\nComputes a hash of a byte slice using the <strong>default seed</strong>.\nComputes a hash of a byte slice using a <strong>custom seed</strong>.\nComputes a hash of a byte slice using a <strong>custom seed</strong>.\nComputes a hash of a byte slice using a <strong>custom seed</strong>.\nComputes a hash index.\nMaps the computed FNV hash to the given <code>range</code> using lazy …\nMaps the computed FNV hash to the given <code>range</code> using lazy …\nMaps the computed FNV hash to the given <code>range</code> using lazy …\nMaps the computed FNV hash to the given <code>range</code> using lazy …\nMaps the computed FNV hash to the given <code>range</code> using …\nMaps the computed FNV hash to the given <code>range</code> using …\nMaps the computed FNV hash to the given <code>range</code> using …\nMaps the computed FNV hash to the given <code>range</code> using …\nComputes the FNV hash of the provided byte slice, xor …\nComputes the FNV hash of the provided byte slice, xor …\nComputes the FNV hash of the provided byte slice, xor …\nComputes the FNV hash of the provided byte slice, xor …\nCalculates the hash of a single value.\nCalculates the hash of a single value.\nCalculates the hash of a single value.\nFeeds a slice of this type into the given <code>Hasher</code>.\nFeeds a slice of this type into the given <code>Hasher</code>.\nFeeds a slice of this type into the given <code>Hasher</code>.\nReturns a reference to the map’s <code>BuildHasher</code>.\nReturns a reference to the set’s <code>BuildHasher</code>.\nInformation about something that was obtained, observed, …\nReturns a shared reference to the head of this tuple.\nReturns an exclusive reference to the head of this tuple.\nReturns the starting address of the WASM heap (<code>__heap_base</code>…\nReturns the height of any glyph.\nSets the height.\nThe height of each glyph in pixels.\nReturns <code>true</code> if <code>high_dpi</code> was requested and it’s running …\nIf <code>true</code>, the rendering canvas is scaled for HighDPI …\n(back) Moves the browser back one step in the session …\n(forward) Moves the browser forward one step in the …\n(go) Moves the browser to a specific point in the session …\n(pushState) Adds an entry to the session history stack.\n(replaceState) Modifies the current history entry without …\nReturns the path of the current user’s home directory if …\nApplies a function which takes the parameter by exclusive …\nApplies a function which takes the parameter by exclusive …\nApplies a function which takes the parameter by shared …\nApplies a function which takes the parameter by shared …\nThe name of the current host.\nThe hypothenuse (the euclidean distance).\nOptional icon data used by the OS where applicable:\nReturns the OS-assigned process identifier associated with …\nGets the thread’s unique identifier.\nReturns the worker’s ID.\nReturns the job’s ID.\nReturns the numeric ID of the handle.\nReturns the OS-assigned process identifier associated with …\nReturns the OS-assigned process identifier associated with …\nUnique identifier for the pointer device.\nUnique ID for touch and pen inputs (e.g., multi-touch …\nA macro for constructing a unique sequential identifier …\nDefines a constant for every given identifier with a value …\n<code>devela_macros</code> Returns the total number of identifiers in …\n<code>devela_macros</code> Returns the numbers of both <em>total</em> and <em>unique</em> …\n<code>devela_macros</code> Returns the number of <em>unique</em> identifiers in …\n∅ <code>core</code> The identity function. Just returns back its …\nReturns the identity matrix, or <code>None</code> if the matrix is not …\nReturns the identity matrix, or <code>None</code> if the matrix is not …\nReturns the identity matrix, or <code>None</code> if the matrix is not …\nReturns the identity matrix, or <code>None</code> if the matrix is not …\nReturns the identity matrix, or <code>None</code> if the matrix is not …\nReturns the identity matrix, or <code>None</code> if the matrix is not …\nReturns the identity matrix, or <code>None</code> if the matrix is not …\nReturns the identity matrix, or <code>None</code> if the matrix is not …\nCreates an NxN identity matrix.\nCreates an NxN identity matrix.\nCreates an NxN identity matrix.\nCreates an NxN identity matrix.\nCreates an NxN identity matrix.\nCreates an NxN identity matrix.\nCreates an NxN identity matrix.\nCreates an NxN identity matrix.\nIdeographic baseline position.\nRenamed to <code>is</code>.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nImage capabilities.\nA helper macro to concisely implement a few common utility …\nConstruct a stack-based DST using the given <code>buffer</code>.\nCreates a mismatch where <code>need</code> is an <code>Interval::closed</code>, and …\nCreates a mismatch where <code>need</code> is an <code>Interval::closed_open</code>, …\nCreates a mismatch where <code>need</code> is an <code>Interval::empty_const</code>, …\nCreates a mismatch where <code>need</code> is an <code>Interval::empty</code>, but …\nCreates a mismatch where <code>need</code> is an <code>Interval::empty_with</code>, …\nCreates a mismatch where <code>need</code> is an <code>Interval::open</code>, and …\nCreates a mismatch where <code>need</code> is an <code>Interval::point</code>, and …\nReturns <code>true</code> if it’s probable the given <code>address</code> is in …\n<code>core</code> Parses a file as an expression or an item according …\n<code>core</code> Includes a file as a reference to a byte array.\nIncludes a Rust source file relative to the project’s …\n𝐓 <code>core</code> Includes a UTF-8 encoded file as a string.\nReturns an iterator over the connections being received on …\nIncrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nIncrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nIncrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nPerforms the indexing (<code>container[index]</code>) operation.\nReturns a reference to the value corresponding to the …\nReturns a reference to the value corresponding to the …\nReturns the Month index from <code>January=0</code> to <code>December=11</code>.\nReturns the weekday index from <code>Monday=0</code> to <code>Sunday=6</code>.\nReturns the weekday index from <code>Sunday=0</code> to <code>Monday=6</code>.\nPerforms the mutable indexing (<code>container[index]</code>) operation.\n(info) Outputs a message to the console with the info log …\nContextual static information about the mismatch.\n<code>log</code> Logs a message at the indicated level.\nThe child inherits from the corresponding parent …\nReturns the event handler initialized.\nInitialize the miniquad rendering context, opening the …\nInitialize the pixel buffer stage.\nInitializes the next uninitialized element with the …\nInitializes elements from an iterator\n(innerWidth) (innerHeight) The extent in pixels of the …\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the PRNG’s inner state as a raw snapshot.\nReturns the inode number.\nReturns the inode number.\nInput capabilities.\nInserts a key-value pair into the map.\nSets the value of the entry, and returns an <code>OccupiedEntry</code>.\nAdds a value to the set.\nInserts a key-value pair into the map.\nAdds a value to the set.\nInserts an element at <code>index</code> within the deque, shifting all …\nInserts an element at position <code>index</code> within the vector, …\nInserts a character into this <code>String</code> at byte position <code>idx</code>.\nInserts a key-value pair.\nInserts <code>value</code> into the option, then returns a mutable …\nSets the value of the entry, and returns an <code>OccupiedEntry</code>.\nInserts a lane from <code>$b</code> into <code>$a</code>, optionally at a new …\nInserts the low 16 bits of an <code>i32</code> value into an <code>m128i</code>.\nInserts an <code>i16</code> to <code>m256i</code>\nInserts a new value for the <code>i32</code> lane specified.\nInserts an <code>i32</code> to <code>m256i</code>\nInserts a new value for the <code>i64</code> lane specified.\nInserts an <code>i64</code> to <code>m256i</code>\nInserts a new value for the <code>i64</code> lane specified.\nInserts an <code>i8</code> to <code>m256i</code>\nInserts an <code>m128</code> to <code>m256</code>\nInserts an <code>m128d</code> to <code>m256d</code>\nInserts an <code>m128i</code> to an <code>m256i</code> at the high or low position.\nSlowly inserts an <code>m128i</code> to <code>m256i</code>.\nInserts a key-value pair, consuming the value.\nInserts an element at <code>index</code> within the deque, shifting all …\nInserts an element at position <code>index</code> within the vector, …\nInserts a string slice into this <code>String</code> at byte position …\nInsert a key-value pair into the map without checking if …\nInsert a value the set without checking if the value …\nDoes something with each element of an iterator, passing …\nDoes something with each element of an iterator, passing …\nDoes something with each element of an iterator, passing …\nDoes something with each element of an iterator, passing …\nDoes something with each element of an iterator, passing …\nDoes something with each element of an iterator, passing …\nDoes something with each element of an iterator, passing …\nDoes something with each element of an iterator, passing …\nCalls a function with a reference to the contained value …\nCalls a function with a reference to the contained value …\nCalls a function with a reference to the contained value …\nApproximates the integral of the 1D function <code>f</code> over the …\nAlternate elements from two iterators until both have run …\nAlternate elements from two iterators until both have run …\nAlternate elements from two iterators until at least one …\nAlternate elements from two iterators until at least one …\nWhether it interpolates the scaled pixels.\nIf <code>linear == true</code> uses <code>FilterMode::Linear</code>, otherwise …\nVisits the values representing the intersection, i.e., the …\nVisits the elements representing the intersection, i.e., …\nAn iterator adaptor to insert a particular value between …\nAn iterator adaptor to insert a particular value between …\nCreates a new iterator which places a copy of <code>separator</code> …\nCreates a new iterator which places a copy of <code>separator</code> …\nCreates a new iterator which places a copy of <code>separator</code> …\nCreates a new iterator which places a copy of <code>separator</code> …\nCreates a new iterator which places a copy of <code>separator</code> …\nCreates a new iterator which places a copy of <code>separator</code> …\nCreates a new iterator which places a copy of <code>separator</code> …\nCreates a new iterator which places a copy of <code>separator</code> …\nAn iterator adaptor to insert a particular value created …\nAn iterator adaptor to insert a particular value created …\nCreates a new iterator which places an item generated by …\nCreates a new iterator which places an item generated by …\nCreates a new iterator which places an item generated by …\nCreates a new iterator which places an item generated by …\nCreates a new iterator which places an item generated by …\nCreates a new iterator which places an item generated by …\nCreates a new iterator which places an item generated by …\nCreates a new iterator which places an item generated by …\n(setInterval) Calls a function repeatedly at a fixed …\n📏 Creates an <code>Interval</code> using extended range notation.\nReturns an interval representing the angle range in …\nReturns an interval representing the angle range in …\nReturns an interval representing the angle range in …\nReturns an interval representing the angle range using 256 …\nConverts this type into the (usually inferred) input type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the owned value in variant <code>_0</code>, if present.\nReturns the owned value in variant <code>_1</code>, if present.\nReturns the owned value in variant <code>_10</code>, if present.\nReturns the owned value in variant <code>_11</code>, if present.\nReturns the owned value in variant <code>_2</code>, if present.\nReturns the owned value in variant <code>_3</code>, if present.\nReturns the owned value in variant <code>_4</code>, if present.\nReturns the owned value in variant <code>_5</code>, if present.\nReturns the owned value in variant <code>_6</code>, if present.\nReturns the owned value in variant <code>_7</code>, if present.\nReturns the owned value in variant <code>_8</code>, if present.\nReturns the owned value in variant <code>_9</code>, if present.\nConverts the boxed slice into a boxed array.\nReturns the inner <code>Box</code>ed primitive array.\nReturns the inner <code>BareBox</code>ed primitive array.\nReturns the inner <code>BareBox</code>ed primitive array.\nReturns the inner <code>Box</code>ed primitive array.\nConverts the reference-counted slice into a …\nReturns the inner array with the full contents.\nReturns the inner array with the full contents.\nSplits <code>self</code> into an array of <code>T</code> in big-endian order.\nReturns the inner <code>BareBox</code>ed primitive array in …\nReturns the inner <code>BareBox</code>ed primitive array in …\nSplits <code>self</code> into an array of <code>T</code> in little-endian order.\nSplits <code>self</code> into an array of <code>T</code> in native-endian order.\nConverts this <code>CString</code> into a boxed <code>CStr</code>.\nConverts this <code>OsString</code> into a boxed <code>OsStr</code>.\nConverts this <code>PathBuf</code> into a boxed <code>Path</code>.\nConverts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code>\nConverts the vector into <code>Box&lt;[T]&gt;</code>.\nConverts this <code>String</code> into a Box&lt;str&gt;.\nConsumes the <code>CString</code> and returns the underlying byte …\nConverts a <code>String</code> into a byte vector.\nEquivalent to <code>CString::into_bytes()</code> except that the …\nConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …\nConverts a <code>String</code> into an iterator over the <code>char</code>s of the …\nGroups every <code>N</code> elements in the <code>Vec&lt;T&gt;</code> into chunks to …\nConverts the <code>OsString</code> into a byte vector.  To convert the …\nReturns the contained <code>Err</code> value, but never panics.\nConsumes the <code>IntoInnerError</code> and returns the error which …\nTakes a <code>Vec&lt;[T; N]&gt;</code> and flattens it into a <code>Vec&lt;T&gt;</code>.\nCreates a future from a value.\nReturn a <code>HashMap</code> of keys mapped to <code>Vec</code>s of values. Keys …\nReturn a <code>HashMap</code> of keys mapped to <code>Vec</code>s of values. Keys …\nReturn a <code>HashMap</code> of keys mapped to <code>Vec</code>s of values. The key …\nReturn a <code>HashMap</code> of keys mapped to <code>Vec</code>s of values. The key …\nConstructs a <code>GroupingMap</code> to be used later with one of the …\nConstructs a <code>GroupingMap</code> to be used later with one of the …\nConstructs a <code>GroupingMap</code> to be used later with one of the …\nConstructs a <code>GroupingMap</code> to be used later with one of the …\nTurn this into an iterator over the connections being …\nReturns the inner value, if the <code>Arc</code> has exactly one strong …\nConsumes the atomic and returns the contained value.\nConsumes the <code>Box</code>, returning the wrapped value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nConsumes the atomic and returns the contained value.\nUnwraps this <code>BufReader&lt;R&gt;</code>, returning the underlying reader.\nUnwraps this <code>BufWriter&lt;W&gt;</code>, returning the underlying writer.\nUnwraps this <code>LineWriter</code>, returning the underlying writer.\nConsumes the <code>Error</code>, returning its inner error (if any).\nReturns the inner stored type.\nConsumes this <code>LazyCell</code> returning the stored value.\nConsumes the cell, returning the wrapped value.\nUnwraps the value, consuming the cell.\nReturns the inner value, if the <code>Rc</code> has exactly one strong …\nConsumes the <code>RefCell</code>, returning the wrapped value.\nUnwraps the value, consuming the cell.\nConsumes this mutex, returning the underlying data.\nConsumes this <code>RwLock</code>, returning the underlying data.\nConsumes this error indicating that a lock is poisoned, …\nConsumes this <code>LazyLock</code> returning the stored value.\nConsumes the <code>OnceLock</code>, returning the wrapped value. Returns\nReturns the buffered writer instance which generated the …\nConsumes this cursor, returning the underlying value.\nConsumes the <code>Chain</code>, returning the wrapped readers.\nConsumes the <code>Take</code>, returning the wrapped reader.\nReturns the inner <code>PathBuf</code>.\nThe inner value.\nConsumes the lock and returns the inner value.\nExtracts the value from the <code>ManuallyDrop</code> container.\nDestructures the <code>RangeInclusive</code> into (lower bound, upper …\nConsumes the <code>Rev</code>, returning the inner iterator.\nUnwraps this <code>Pin&lt;Ptr&gt;</code>, returning the underlying pointer.\nConsumes the <code>Ready</code>, returning the wrapped value.\nReturns the inner stored type in compile-time.\nA copy of the inner value, in compile-time.\nUnwraps this <code>Pin&lt;Ptr&gt;</code>, returning the underlying <code>Ptr</code>.\nCreates an iterator from a value.\nReturns an iterator over elements of the tuple.\nCreates an iterator over the entries of a <code>HashMap</code> in …\nCreates a consuming iterator, that is, one that moves each …\nCreates an iterator over the entries of a <code>HashMap</code> in …\nCreates a consuming iterator, that is, one that moves each …\nCreates a consuming iterator, that is, one that moves each …\nGets an owning iterator over the entries of the map, …\nGets an iterator for moving out the <code>BTreeSet</code>’s contents …\nConsumes the list into an iterator yielding elements by …\nConsumes the deque into a front-to-back iterator yielding …\nCreates a consuming iterator, that is, one that moves each …\nReturns a consuming iterator over the possibly contained …\nReturns a consuming iterator over the possibly contained …\nReturns an iterator which retrieves elements in heap order.\nCreates a consuming iterator visiting all the keys in …\nCreates a consuming iterator visiting all the keys, in …\nConsumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer.\nConsumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer and …\nReturns the contained <code>Ok</code> value, but never panics.\nConverts a Box&lt;OsStr&gt; into an <code>OsString</code> without copying or …\nConsumes the <code>PathBuf</code>, yielding its internal <code>OsString</code> …\nExtracts the owned data.\nConverts the container into an owned value.\nDisassembles this <code>BufWriter&lt;W&gt;</code>, returning the underlying …\nDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: …\nConsumes the <code>IntoInnerError</code> and returns the error which …\nDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: …\nConverts a <code>Box&lt;Path&gt;</code> into a <code>PathBuf</code> without copying or …\nConverts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …\nTurns <code>Cow&lt;[u8]&gt;</code> into <code>PyBytes</code>, all other <code>T</code>s will be turned …\nTurns <code>Vec&lt;u8&gt;</code> into <code>PyBytes</code>, all other <code>T</code>s will be turned …\nConsumes the <code>Arc</code>, returning the wrapped pointer.\nConsumes the <code>Weak&lt;T&gt;</code> and turns it into a raw pointer.\nConsumes the <code>Box</code>, returning a wrapped raw pointer.\nConsumes the <code>Rc</code>, returning the wrapped pointer.\nConsumes the <code>Weak&lt;T&gt;</code> and turns it into a raw pointer.\nConsumes the <code>CString</code> and transfers ownership of the string …\nConsumes the <code>Thread</code>, returning a raw pointer.\nDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: …\nDecomposes a <code>String</code> into its raw components: …\nDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: …\nConsumes the <code>Box</code>, returning a wrapped raw pointer and the …\nConsumes the <code>Rc</code>, returning the wrapped pointer and …\nConsumes the <code>Weak&lt;T&gt;</code>, returning the wrapped pointer and …\nConverts this <code>Pin&lt;&amp;mut T&gt;</code> into a <code>Pin&lt;&amp;T&gt;</code> with the same …\nReturns an exclusive reference to the inner <code>PathBuf</code>.\nReturns the inner <code>Box</code>ed primitive array as a slice.\nReturns the inner <code>Box</code>ed primitive array as a slice.\nGet the underlying bytes as a mutable slice with the …\nConsumes the <code>BinaryHeap</code> and returns a vector in sorted …\nConverts the <code>OsString</code> into a <code>String</code> if it contains valid …\nConverts the <code>CString</code> into a <code>String</code> if it contains valid …\nReturns both bounds as a tuple <code>(lower, upper)</code>.\nReturns a tuple with the active variant’s inner value in …\nReturns a tuple with <code>Some(value)</code> for the active variant …\nExtracts the value <code>T</code> that is wrapped by <code>ControlFlow&lt;T, T&gt;</code>.\nCreates a consuming iterator visiting all the values in …\nCreates a consuming iterator visiting all the values, in …\nConsumes the <code>BinaryHeap</code> and returns the underlying vector …\nReturns the inner <code>Box</code>ed primitive array as a <code>Vec</code>.\nReturns the inner <code>Box</code>ed primitive array as a <code>Vec</code>.\nConsumes this <code>Point</code> and converts it into a <code>Vector</code>.\nReturns the kind/type of the implementing value.\nReturns a new invalid worker.\nReturns a new invalid handle.\nComputes the inverse wavelet transform on the given …\nReturns a version of the angle with inverted direction.\nReturns a version of the angle with inverted direction …\nReturns a version of the angle with inverted direction.\nReturns the IP address associated with this socket address.\nReturns the IP address associated with this socket address.\nReturns the IP address associated with this socket address.\nReturns <code>true</code> if the inner type is the same as <code>T</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nConditional evaluation.\nReturns <code>true</code> if there’s a value in variant <code>_0</code> (The 1st).\nReturns <code>true</code> if there’s a value in variant <code>_1</code> (The 2nd).\nReturns <code>true</code> if there’s a value in variant <code>_10</code> (The …\nReturns <code>true</code> if there’s a value in variant <code>_11</code> (The …\nReturns <code>true</code> if there’s a value in variant <code>_2</code> (The 3rd).\nReturns <code>true</code> if there’s a value in variant <code>_3</code> (The 4th).\nReturns <code>true</code> if there’s a value in variant <code>_4</code> (The 5th).\nReturns <code>true</code> if there’s a value in variant <code>_5</code> (The 6th).\nReturns <code>true</code> if there’s a value in variant <code>_6</code> (The 7th).\nReturns <code>true</code> if there’s a value in variant <code>_7</code> (The 8th).\nReturns <code>true</code> if there’s a value in variant <code>_8</code> (The 9th).\nReturns <code>true</code> if there’s a value in variant <code>_9</code> (The 10th).\nReturns <code>true</code> if the <code>Path</code> is absolute, i.e., if it is …\nIs this path absolute?\nChecks if this worker is still active by querying …\nReturns whether the pointer is properly aligned for <code>T</code>.\nChecks if <code>value</code> is aligned to <code>align</code>.\nReturns whether the pointer is aligned to <code>align</code>.\nRuntime version of <code>MemAligned::is_compatible</code> for raw …\nReturns <code>true</code> if this mode uses existing memory.\nReturns <code>true</code> if this unicode scalar has the <code>Alphabetic</code> …\nReturns <code>true</code> if this unicode scalar satisfies either …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nChecks if the value is within the ASCII range.\nChecks if all characters in this string are within the …\nChecks if all elements are <code>None</code>, returning early if a <code>Some</code> …\nChecks if all elements are <code>Some</code>, returning early if a <code>None</code> …\nReturns <code>true</code> if this address is in a range designated for …\nReturns <code>true</code> if this address part of the <code>198.18.0.0/15</code> …\nReturns <code>true</code> if this is an address reserved for …\nReturns true if the data is borrowed, i.e. if <code>to_mut</code> would …\nReturns <code>true</code> if the value is borrowed.\nChecks if the interval is both lower and upper bounded.\nReturns <code>true</code> if this is a <code>Break</code> variant.\nReturns <code>true</code> if this is a broadcast address (…\nReturns <code>true</code> if this mode requires allocation.\n(closed) Whether the current window is closed or not.\n(crossOriginIsolated) Whether the website is in a …\n(compatMode) Returns <code>true</code> if the browser is in no-quirks …\nChecks if the <code>Candidate</code>’s alignment is compatible with …\nReturns <code>true</code> if some <code>call_once()</code> call has completed …\nQueries if a key event is composing (IME input).\nReturns <code>true</code> if the destaque is contiguous.\nReturns <code>true</code> if this is a <code>Continue</code> variant.\nReturns <code>true</code> if this unicode scalar has the general …\nChecks if the stored value is the default.\nChecks if the unicode scalar is a digit in the given radix.\nReturns <code>true</code> if the path exists on disk and is pointing at …\nReturns <code>true</code> if this metadata is for a directory. The …\nTests whether this file type represents a directory. The …\nIs this a directory?\nTest if file is a directory (S_ISDIR)\nIs this a directory?\nReturns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …\nReturns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …\nReturns <code>true</code> if this address is in a range designated for …\nReturns <code>true</code> if this address is in a range designated for …\nReturns <code>true</code> if this is an address reserved for …\nReturns <code>true</code> if the map contains no elements.\nChecks if the binary heap is empty.\nReturns the number of <code>None</code> elements in the array.\nReturns <code>true</code> if the set contains no elements.\nReturns <code>true</code> if the map contains no elements.\nReturns <code>true</code> if the destaque is empty.\nReturns <code>true</code> if the stack is empty.\nChecks whether the <code>OsStr</code> is empty.\nReturns <code>true</code> if the non-null raw slice has a length of 0.\nReturns <code>true</code> if the stack is empty.\nReturns <code>true</code> if the set contains no elements.\nReturns <code>true</code> if the range contains no items. One-sided …\nReturns <code>true</code> if the range contains no items. One-sided …\nReturns <code>true</code> if the range contains no items. One-sided …\nReturns <code>true</code> if the range contains no items. One-sided …\nReturns <code>true</code> if the <code>LinkedList</code> is empty.\nReturns <code>true</code> if the deque is empty.\nReturns <code>true</code> if the vector contains no elements.\nReturns <code>true</code> if this <code>String</code> has a length of zero, and <code>false</code>…\nReturns <code>true</code> if the iterator is empty.\nReturns <code>true</code> if the iterator is empty.\nReturns <code>true</code> if the iterator is empty.\nReturns <code>true</code> if the iterator is empty.\nReturns <code>true</code> if the iterator is empty.\nReturns <code>true</code> if the iterator is empty.\nReturns <code>true</code> if the iterator is empty.\nReturns <code>true</code> if the iterator is empty.\nChecks whether the current state is uninitialized (or …\nReturns <code>true</code> if the hashmap contains no entries.\nWhether the list is empty.\nReturns <code>true</code> if no elements are yet initialized.\nChecks if the interval is empty (contains no values).\nReturns true if the file size equals zero.\nReturns <code>true</code> if the current length is 0.\nReturns <code>true</code> if the current length is 0.\nReturns <code>true</code> if the range contains no items.\nReturns <code>true</code> if the range contains no items.\nReturns <code>true</code> if <code>self.to_bytes()</code> has a length of 0.\nReturns true if the file size equals zero.\nReturns <code>true</code> if the ordering is the <code>Equal</code> variant.\nReturns <code>true</code> if the result is <code>Err</code>.\nReturns <code>true</code> if the result is <code>Err</code> and the value inside of …\nReturns <code>true</code> if the path exists on disk and is pointing at …\nReturns <code>true</code> if this metadata is for a regular file. The …\nTests whether this file type represents a regular file. …\nIs this a file?\nTest if file is a regular file (S_ISREG)\nIs this a file?\nChecks if the associated thread has finished running its …\nChecks if the associated thread has finished running its …\nReturns <code>true</code> if <code>self</code> is nether infinite nor NaN.\nReturns the number of <code>None</code> elements in the array.\nReturns <code>true</code> if the destaque is full.\nReturns <code>true</code> if the stack is full.\nReturns <code>true</code> if the hashmap is completely full.\nReturns <code>true</code> if all the elements are already initialized.\nReturns <code>true</code> if the current remaining capacity is 0.\nReturns <code>true</code> if the current remaining capacity is 0.\nReturns <code>true</code> if the ordering is either the <code>Greater</code> or <code>Equal</code>…\nReturns <code>true</code> if the address appears to be globally …\nReturns <code>true</code> if the address appears to be globally …\nReturns <code>true</code> if the address appears to be globally …\nReturns <code>true</code> if the ordering is the <code>Greater</code> variant.\n(hidden) Whether the current document is hidden.\nIndicates whether <em>only</em> the 6 fields from <code>h</code> to <code>ns</code> are …\nIndicates whether <em>only</em> the 3 fields from <code>h</code> to <code>s</code> are …\nReturns <code>true</code> if <code>self</code> is infinite (either negative or …\nReturns <code>true</code> if this address is an <code>IPv4</code> address, and <code>false</code> …\nReturns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …\nReturns <code>true</code> if the address is an IPv4-mapped address (…\nReturns <code>true</code> if this address is an <code>IPv6</code> address, and <code>false</code> …\nReturns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …\nReturns <code>true</code> if the angle is of the given <code>kind</code>.\nReturns <code>true</code> if the angle is of the given <code>kind</code>.\nReturns <code>true</code> if the angle is of the given <code>kind</code>.\nReturns <code>true</code> if the angle is of the given <code>kind</code> using a …\nReturns <code>true</code> if the ordering is either the <code>Less</code> or <code>Equal</code> …\nReturns <code>true</code> if this thread is the “leader thread” for …\n🕘 Returns <code>true</code> if the provided <code>year</code> is a leap year.\nReturns <code>true</code> if the address is link-local (<code>169.254.0.0/16</code>).\nChecks if <code>Atomic</code> objects of this type are lock-free.\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nReturns <code>true</code> if operations on values of this type are …\nChecks if the lock is currently held.\nReturns <code>true</code> if this is a loopback address.\nReturns <code>true</code> if this is a loopback address (<code>127.0.0.0/8</code>).\nReturns <code>true</code> if this is the loopback address (<code>::1</code>), as …\nChecks if the lower bound is bounded.\nChecks if the lower bound is closed (included).\nChecks if the lower bound is open (excluded).\nReturns <code>true</code> if this unicode scalar has the <code>Lowercase</code> …\nReturns <code>true</code> if the ordering is the <code>Less</code> variant.\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).\nChecks if the window is approximately maximized (fills the …\nIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).\nReturns <code>true</code> if this is a multicast address.\nReturns <code>true</code> if this is a multicast address (<code>224.0.0.0/4</code>).\nReturns <code>true</code> if this is a multicast address (<code>ff00::/8</code>).\nReturns <code>true</code> if <code>self</code> is NaN.\nReturns <code>true</code> if the ordering is not the <code>Equal</code> variant.\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is sign negative.\nReturns true when this duration is negative. That is, less …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if this unicode scalar is a noncharacter.\nReturns <code>true</code> if the option is a <code>None</code> value.\nReturns <code>true</code> if the option is a <code>None</code> or the value inside …\nReturns <code>true</code> if <code>self</code> is neither zero, infinite, subnormal, …\nAlways returns <code>true</code> since integer representations are …\nAlways returns <code>true</code> since integer representations are …\nReturns <code>true</code> if the angle is between -1 and 1 …\nReturns <code>true</code> if this unicode scalar is the nul character (…\nReturns <code>true</code> if the chunk is empty.\nReturns <code>true</code> if this unicode scalar has one of the general …\nReturns <code>true</code> if the result is <code>Ok</code>.\nReturns <code>true</code> if the result is <code>Ok</code> and the value inside of …\nReturns true if the data is owned, i.e. if <code>to_mut</code> would be …\nReturns <code>true</code> if the value is owned.\nChecks if the elements of this iterator are partitioned …\nChecks if the elements of this iterator are partitioned …\nChecks if the elements of this iterator are partitioned …\nChecks if the elements of this iterator are partitioned …\nChecks if the elements of this iterator are partitioned …\nChecks if the elements of this iterator are partitioned …\nChecks if the elements of this iterator are partitioned …\nChecks if the elements of this iterator are partitioned …\nReturns <code>true</code> if the poll is a <code>Pending</code> value.\nDetermines whether the mutex is poisoned.\nReturns <code>true</code> if the associated <code>Once</code> was poisoned prior to …\nDetermines whether the lock is poisoned.\n(locationbar) Whether the window is a popup or not.\nChecks if the window is in a portrait orientation (height …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is sign positive.\nReturns true when this duration is positive. That is, …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if this is a private address.\nTells whether the raw mode is enabled.\nDetermines if <code>File</code> has an efficient <code>read_vectored</code> …\nDetermines if this <code>Read</code>er has an efficient <code>read_vectored</code> …\nDetermines if this <code>Read</code>er has an efficient <code>read_vectored</code> …\nIs this a read-only file?\nIs this a read-only file?\nReturns <code>true</code> if the poll is a <code>Poll::Ready</code> value.\nReturns <code>true</code> if the <code>Path</code> is relative, i.e., not absolute.\nIs this path relative?\nQueries if a key event is a repeat.\nReturns <code>true</code> if this address is reserved by IANA for …\n(isSecureContext) Whether the current context is secure.\nReturns if the <code>std::io::File</code> backing the <code>MediaSource</code> is …\nAlways returns true since a <code>io::Cursor&lt;u8&gt;</code> is always …\nDetermines whether the character is one of the permitted …\nDetermines whether the character is one of the permitted …\nReturns <code>true</code> if this address is part of the Shared Address …\nReturns <code>true</code> if <code>self</code> has a negative sign.\nReturns <code>true</code> if <code>self</code> has a negative sign and is not zero.\nReturns <code>true</code> if <code>self</code> has a positive sign.\nReturns <code>true</code> if <code>self</code> has a positive sign and is not zero.\nReturns <code>true</code> if the option is a <code>Some</code> value.\nReturns <code>true</code> if the option is a <code>Some</code> and the value inside …\nChecks if the elements of this iterator are sorted.\nChecks if the elements of this iterator are sorted.\nChecks if the elements of this iterator are sorted.\nChecks if the elements of this iterator are sorted.\nChecks if the elements of this iterator are sorted.\nChecks if the elements of this iterator are sorted.\nChecks if the elements of this iterator are sorted.\nChecks if the elements of this iterator are sorted.\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nReturns <code>true</code> if <code>self</code> is subnormal.\nReturns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…\nReturns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…\nReturns <code>true</code> if the set is a superset of another, i.e., …\nReturns <code>true</code> if the set is a superset of another, i.e., …\nReturns <code>true</code> if the path exists on disk and is pointing at …\nReturns <code>true</code> if this metadata is for a symbolic link.\nTests whether this file type represents a symbolic link. …\nIs this a symbolic link?\nIs this a symbolic link?\nReturns <code>true</code> if we are in a terminal context.\nReturns <code>true</code> if we’re in a terminal context.\nReturns <code>true</code> if this is a unicast address, as defined by …\nReturns <code>true</code> if the address is a globally routable unicast …\nReturns <code>true</code> if the address is a unicast address with …\nReturns <code>true</code> if the 2 dimensions of the extent are equal.\nReturns <code>true</code> if the 3 dimensions of the extent are equal.\nReturns <code>true</code> if all dimensions of the extent are equal. …\nReturns <code>true</code> if all dimensions of the extent are equal. …\nReturns <code>true</code> if all dimensions of the extent are equal. …\nReturns <code>true</code> if all dimensions of the extent are equal. …\nReturns <code>true</code> if all dimensions of the extent are equal. …\nReturns <code>true</code> if this is a unique local address (<code>fc00::/7</code>).\nReturns <code>true</code> for the special ‘unspecified’ address.\nReturns <code>true</code> for the special ‘unspecified’ address (…\nReturns <code>true</code> for the special ‘unspecified’ address (<code>::</code>…\nChecks if the upper bound is bounded.\nChecks if the upper bound is closed (included).\nChecks if the upper bound is open (excluded).\nReturns <code>true</code> if this unicode scalar has the <code>Lowercase</code> …\nValidates the internal consistency of window metrics.\nChecks whether the current variant is at <code>index</code> (0-based).\nChecks whether the current variant has the given <code>name</code>.\nDetermines if the prefix is verbatim, i.e., begins with …\nReturns <code>true</code> if the crate was compiled for a WebAssembly …\nValidates that the interval bounds are ordered correctly.\nReturns <code>true</code> if this unicode scalar has the <code>White_Space</code> …\nReturns whether the ratio is effectively a whole number (…\nDetermines if <code>File</code> has an efficient <code>write_vectored</code> …\nDetermines if this <code>Write</code>r has an efficient <code>write_vectored</code> …\nDetermines if this <code>Write</code>r has an efficient <code>write_vectored</code> …\nIndicates whether <em>only</em> the 3 fields from <code>y</code> to <code>d</code> are …\nIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are …\nIndicates whether <em>only</em> the 6 fields from <code>y</code> to <code>s</code> are …\nReturns <code>true</code> if <code>self</code> is either 0.0 or -0.0.\nReturns true if this duration spans no time.\nReturns true if this <code>Duration</code> spans no time.\n⚙️ 𝟙 A downcasted pointer-sized signed integer …\n⚙️ 𝟙 An upcasted pointer-sized signed integer …\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns the square root of the number, rounded down.\nReturns the square root of the number, rounded down.\nReturns the square root of the number, rounded down.\nReturns the square root of the number, rounded down.\nReturns the square root of the number, rounded down.\nReturns the square root of the number, rounded down.\nGroups <em><code>items</code></em> together and expands them as if they were …\nIterate through all supported logging levels.\nIterate through all supported filtering levels.\nAn iterator visiting all key-value pairs in arbitrary …\nReturns an iterator visiting all values in the underlying …\nAn iterator visiting all elements in arbitrary order. The …\nGets an iterator over the entries of the map, sorted by …\nReturns an iterator.\nReturns an iterator.\nReturns an immutable iterator (yields references to items, …\nReturns an immutable iterator (yields references to items, …\nGets an iterator that visits the elements in the <code>BTreeSet</code> …\nProvides a forward iterator.\nReturns a front-to-back iterator.\nProduces an iterator over the path’s components viewed …\nReturns an iterator that will block waiting for messages, …\nCreates an iterator over the contents of the list.\nReturns an iterator over the possibly contained value.\nReturns an iterator over the possibly contained value.\n<code>core</code> Creates an iterator where each iteration calls the …\nReturns an iterator over exclusive reference to elements …\nAn iterator visiting all key-value pairs in arbitrary …\nGets a mutable iterator over the entries of the map, …\nReturns a mutable iterator.\nReturns a mutable iterator.\nProvides a forward iterator with mutable references.\nReturns a front-to-back iterator that returns mutable …\nReturns a mutable iterator over the possibly contained …\nReturns a mutable iterator over the possibly contained …\nReturns an iterator over shared references to elements of …\nWaits for the associated thread to finish.\nWaits for the associated thread to finish.\nCombine all iterator elements into one <code>String</code>, separated …\nCombine all iterator elements into one <code>String</code>, separated …\nCreates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.\n𝐓 Joins multiple byte slices or string slices in …\nExecutes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.\nExecutes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.\nJoins a collection of Paths appropriately for the <code>PATH</code> …\n⚙️ A JavaScript boolean (<code>true</code> / <code>false</code>).\n⚙️ 𝟙 A JavaScript signed 32-bit integer.\n⚙️ ∅ The JavaScript <code>null</code> value.\n⚙️ 𝟙 A JavaScript Number.\n⚙️ 𝐓 A JavaScript string reference.\n⚙️ 𝟙 A JavaScript unsigned 32-bit integer.\n⚙️ ∅ The JavaScript <code>undefined</code> value.\nThe jump function for the generator, equivalent to 2^64 …\nSort the k largest elements into a new iterator, in …\nSort the k largest elements into a new iterator, in …\nSort the k largest elements into a new iterator using the …\nSort the k largest elements into a new iterator using the …\nReturn the elements producing the k largest outputs of the …\nReturn the elements producing the k largest outputs of the …\nSort the k largest elements into a new iterator, in …\nSort the k largest elements into a new iterator, in …\nSort the k largest elements into a new iterator using the …\nSort the k largest elements into a new iterator using the …\nReturn the elements producing the k largest outputs of the …\nReturn the elements producing the k largest outputs of the …\nSort the k smallest elements into a new iterator, in …\nSort the k smallest elements into a new iterator, in …\nSort the k smallest elements into a new iterator using the …\nSort the k smallest elements into a new iterator using the …\nReturn the elements producing the k smallest outputs of …\nReturn the elements producing the k smallest outputs of …\nSort the k smallest elements into a new iterator, in …\nSort the k smallest elements into a new iterator, in …\nSort the k smallest elements into a new iterator using the …\nSort the k smallest elements into a new iterator using the …\nReturn the elements producing the k smallest outputs of …\nReturn the elements producing the k smallest outputs of …\nReturns a reference to this entry’s key.\nReturns a reference to this entry’s key.\nAdds the key part of a new entry to the map output.\nNote: you are not always guaranteed to receive a key_up …\nNote: you are not always guaranteed to receive a key_up …\nAdds the key part of a new entry to the map output.\nKeyboard input capabilities.\nAn iterator visiting all keys in arbitrary order. The …\nGets an iterator over the keys of the map, in sorted order.\nForces the child process to exit. If the child has already …\nReturns the corresponding <code>ErrorKind</code> for this error.\nReturns the parsed prefix data.\nReturns the kind of the normalized angle.\nReturns the kind of the normalized angle.\nReturns the kind of the normalized angle.\nOutputs the detailed cause of parsing an integer failing.\nThe type of pointer (mouse, touch, pen).\nReturns the kind of the angle using a custom tolerance for …\nReturn an iterator adaptor that flattens an iterator of …\nReturn an iterator adaptor that flattens an iterator of …\nReturn an iterator adaptor that flattens an iterator of …\nReturn an iterator adaptor that flattens an iterator of …\nReturns the raw channel value, regardless of …\nReturns the raw channel value, regardless of …\nReturns the raw channel value, regardless of …\nReturns a mutable reference to the raw channel value.\nReturns a mutable reference to the raw channel value.\nReturns a mutable reference to the raw channel value.\nReturns a reference to the last element in the set, if any.\nConsumes the iterator, returning the last element.\nConsumes the iterator, returning the last element.\nConsumes the iterator, returning the last element.\nConsumes the iterator, returning the last element.\nConsumes the iterator, returning the last element.\nConsumes the iterator, returning the last element.\nConsumes the iterator, returning the last element.\nConsumes the iterator, returning the last element.\nSearch for the last occurrence of a byte in a slice.\nSearch for the last occurrence of two possible bytes in a …\nSearch for the last occurrence of three possible bytes in …\nReturns the value of the ftLastAccessTime field of this …\nReturns the last entry in the map for in-place …\nReturns the last key-value pair in the map. The key in …\nReturns an error representing the last OS error which …\nReturns the value of the ftLastWriteTime field of this …\n‘Less than or equal to’ comparison for two <code>Arc</code>s.\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nReturns <code>true</code> if <code>self &lt;= other</code>.\nReturns <code>true</code> if <code>self &lt;= other</code> using total order.\nReturns <code>true</code> if <code>self &lt;= other</code>.\nReturns <code>true</code> if <code>self &lt;= other</code>.\n‘Less than or equal to’ comparison for two <code>Rc</code>s.\nPanics\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nCount the leading zeroes in a <code>u32</code>.\nCount the leading zeroes in a <code>u64</code>.\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nConsumes and leaks the <code>Box</code>, returning a mutable reference, …\nConsumes and leaks the <code>OsString</code>, returning a mutable …\nConverts into a reference to the underlying data.\nConverts into a mutable reference to the underlying data.\nConsumes and leaks the <code>PathBuf</code>, returning a mutable …\nConsumes and leaks the <code>Vec</code>, returning a mutable reference …\nConsumes and leaks the <code>String</code>, returning a mutable …\nSwitches back to the main screen.\nExecutes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.\nExecutes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.\nDistance from the alignment point to the leftmost glyph …\nReturns the number of elements in the map.\nReturns the length of the binary heap.\nReturns the number of elements in the set.\nReturns the number of elements in the map.\nReturns total length of all slices.\nReturns 1 (length of single byte).\nReturns array length.\nReturns L (array length).\nReturns slice length.\nReturns byte length.\nReturns total length of all string slices.\nReturns the number of destaqued elements.\nReturns the number of stacked elements.\nReturns the length of this <code>OsStr</code>.\nReturns the length of a non-null raw slice.\nReturns the number of elements in the set.\nReturns the length of the <code>LinkedList</code>.\nReturns the number of elements in the deque.")