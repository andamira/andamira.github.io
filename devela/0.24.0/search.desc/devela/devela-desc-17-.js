searchState.loadedDescShard("devela", 17, "Reset to <code>new()</code> state.\nPerforms a set of actions within a synchronous update.\nUpdate state with <code>data</code>. This can be called multiple times.\nUpdate the hasher’s internal state with <em>all</em> of the bytes …\nRate of SHAKE-128.\nSHAKE-128 streaming state.\nUpdate state with <code>data</code>. This can be called multiple times.\nExecutes the given command directly.\nThis type doesn’t buffer writes, so flushing is a no-op.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInitialize a <code>Shake128</code> struct.\nQueues the given command for further execution.\nReset to <code>new()</code> state.\nSqueeze output of the XOF into <code>dest</code>. This can be called …\nPerforms a set of actions within a synchronous update.\nUpdate the hasher’s internal state with <em>all</em> of the bytes …\nRate of SHAKE-256.\nSHAKE-256 streaming state.\nUpdate state with <code>data</code>. This can be called multiple times.\nExecutes the given command directly.\nThis type doesn’t buffer writes, so flushing is a no-op.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInitialize a <code>Shake256</code> struct.\nQueues the given command for further execution.\nReset to <code>new()</code> state.\nSqueeze output of the XOF into <code>dest</code>. This can be called …\nPerforms a set of actions within a synchronous update.\nUpdate the hasher’s internal state with <em>all</em> of the bytes …\nAEAD ID for this HPKE scheme’s AEAD (in LE bytes).\nHPKE suite: DHKEM(X25519, HKDF-SHA256), HKDF-SHA256 and …\nThe maximum length of <code>export</code> secret that may be requested.\nHPKE ID for this HPKE scheme.\nKDF ID for this HPKE scheme’s KDF (in LE bytes).\nSize of the HPKE suite KEM ciphertext/encapsulated key.\nKEM ID for this HPKE scheme’s KEM (in LE bytes).\nSize of the HPKE suite KEM shared secret.\nHPKE Base mode ID.\nHPKE Psk mode ID.\nHPKE Auth mode ID.\nHPKE AuthPsk mode ID.\nHPKE Auth mode. Encrypt data to a public key with sender …\nHPKE AuthPsk mode. Encrypt data to a public key, with …\nHPKE Base mode. Encrypt data to a public key, without …\nHPKE Psk mode. Encrypt data to a public key, using a …\nOutput size for this suite’s KDF (…\nNonce size for this suite’s AEAD (…\nHPKE instance for decrypting data.\nThe role for an instance of HPKE mode.\nHPKE instance for encrypting data.\nVersion identifier for this HPKE scheme.\nOne-shot API for HPKE Auth mode <code>Self::open()</code> operation.\nOne-shot API for HPKE Auth mode <code>Self::seal()</code> operation.\nOne-shot API for HPKE AuthPsk mode <code>Self::open()</code> operation.\nOne-shot API for HPKE AuthPsk mode <code>Self::seal()</code> operation.\nOne-shot API for HPKE Base mode <code>Self::open()</code> operation.\nOne-shot API for HPKE Base mode <code>Self::seal()</code> operation.\nExport secret.\nExport secret.\nExport secret.\nExport secret.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHPKE Base mode recipient.\nHPKE Psk mode recipient.\nHPKE Auth mode recipient.\nHPKE AuthPsk mode recipient.\nHPKE Base mode sender.\nHPKE Psk mode sender.\nHPKE Auth mode sender.\nHPKE AuthPsk mode sender.\nHPKE Base mode sender with a supplied ephemeral private …\nHPKE Psk mode sender with a supplied ephemeral private …\nHPKE Auth mode sender with a supplied ephemeral private …\nHPKE AuthPsk mode sender with a supplied ephemeral private …\nContext-aware opening operations.\nContext-aware opening operations.\nContext-aware opening operations.\nContext-aware opening operations.\nOne-shot API for HPKE Psk mode <code>Self::open()</code> operation.\nOne-shot API for HPKE Psk mode <code>Self::seal()</code> operation.\nContext-aware sealing operations.\nContext-aware sealing operations.\nContext-aware sealing operations.\nContext-aware sealing operations.\nArgon2i password hashing function as described in the …\nHKDF (HMAC-based Extract-and-Expand Key Derivation …\nPBKDF2(Password-Based Key Derivation Function 2) as …\nThe Argon2 variant (i).\nThe Argon2 version (0x13).\nArgon2i password hashing function as described in the …\nVerify Argon2i derived key in constant time.\nHKDF-HMAC-SHA256 (HMAC-based Extract-and-Expand Key …\nHKDF-HMAC-SHA384 (HMAC-based Extract-and-Expand Key …\nHKDF-HMAC-SHA512 (HMAC-based Extract-and-Expand Key …\nA type to represent the <code>Tag</code> that HMAC returns.\nCombine <code>extract</code> and <code>expand</code> to return a derived key.\nThe HKDF expand step.\nThe HKDF extract step.\nA type to represent the <code>Tag</code> that HMAC returns.\nCombine <code>extract</code> and <code>expand</code> to return a derived key.\nThe HKDF expand step.\nThe HKDF extract step.\nA type to represent the <code>Tag</code> that HMAC returns.\nCombine <code>extract</code> and <code>expand</code> to return a derived key.\nThe HKDF expand step.\nThe HKDF extract step.\nPBKDF2-HMAC-SHA256 (Password-Based Key Derivation Function …\nPBKDF2-HMAC-SHA384 (Password-Based Key Derivation Function …\nPBKDF2-HMAC-SHA512 (Password-Based Key Derivation Function …\nA type to represent the <code>Password</code> that PBKDF2 hashes.\nDerive a key using PBKDF2-HMAC-SHA256.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nVerify PBKDF2-HMAC-SHA256 derived key in constant time.\nA type to represent the <code>Password</code> that PBKDF2 hashes.\nDerive a key using PBKDF2-HMAC-SHA384.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nVerify PBKDF2-HMAC-SHA384 derived key in constant time.\nA type to represent the <code>Password</code> that PBKDF2 hashes.\nDerive a key using PBKDF2-HMAC-SHA512.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nVerify PBKDF2-HMAC-SHA512 derived key in constant time.\nML-KEM-1024 as specified in FIPS-203.\nML-KEM-512 as specified in FIPS-203.\nML-KEM-768 as specified in FIPS-203.\nDHKEM(X25519, HKDF-SHA256) as specified in HPKE RFC 9180.\nX-Wing hybrid KEM as specified in …\nCiphertext size (bytes).\nA type to represent the KEM <code>Ciphertext</code> that ML-KEM-1024 …\nDecapsulation key size (bytes).\nA type to represent the <code>DecapsulationKey</code> that ML-KEM-1024 …\nEncapsulation key size (bytes).\nA type to represent the <code>EncapsulationKey</code> that ML-KEM-1024 …\nA keypair of ML-KEM-1024 keys, that are derived from a …\nML-KEM-1024.\nShared Secret size (bytes).\nA type to represent the <code>d||z</code> seed used by ML-KEM to produce\nA type to represent the <code>SharedSecret</code> that ML-KEM-1024 …\nPerform decapsulation of a Ciphertext.\nGiven the DecapsulationKey, produce a SharedSecret using …\nGiven the EncapsulationKey, generate a SharedSecret and …\nGiven the EncapsulationKey, generate a SharedSecret and …\nGiven the EncapsulationKey and randomness <code>m</code>, generate a …\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstantiate a KeyPair with all key validation checks, …\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nInstantiate a EncapsulationKey with key-checks from …\nConstruct from a given byte slice.\nGenerate a fresh KeyPair.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the length of the object.\nReturn the length of the object.\nGet the private DecapsulationKey used to generate this …\nGet the public EncapsulationKey corresponding to this …\nGet the Seed used to generate this keypair. Use this …\nInstantiate a DecapsulationKey with only key-checks from …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nCiphertext size (bytes).\nA type to represent the KEM <code>Ciphertext</code> that ML-KEM-512 …\nDecapsulation key size (bytes).\nA type to represent the <code>DecapsulationKey</code> that ML-KEM-512 …\nEncapsulation key size (bytes).\nA type to represent the <code>EncapsulationKey</code> that ML-KEM-512 …\nA keypair of ML-KEM-512 keys, that are derived from a …\nML-KEM-512.\nShared Secret size (bytes).\nA type to represent the <code>d||z</code> seed used by ML-KEM to produce\nA type to represent the <code>SharedSecret</code> that ML-KEM-512 …\nPerform decapsulation of a Ciphertext.\nGiven the DecapsulationKey, produce a SharedSecret using …\nGiven the EncapsulationKey, generate a SharedSecret and …\nGiven the EncapsulationKey, generate a SharedSecret and …\nGiven the EncapsulationKey and randomness <code>m</code>, generate a …\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstantiate a KeyPair with all key validation checks, …\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nInstantiate a EncapsulationKey with key-checks from …\nGenerate a fresh KeyPair.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the length of the object.\nGet the private DecapsulationKey used to generate this …\nGet the public EncapsulationKey corresponding to this …\nGet the Seed used to generate this keypair. Use this …\nInstantiate a DecapsulationKey with only key-checks from …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nCiphertext size (bytes).\nA type to represent the KEM <code>Ciphertext</code> that ML-KEM-768 …\nDecapsulation key size (bytes).\nA type to represent the <code>DecapsulationKey</code> that ML-KEM-768 …\nEncapsulation key size (bytes).\nA type to represent the <code>EncapsulationKey</code> that ML-KEM-768 …\nA keypair of ML-KEM-768 keys, that are derived from a …\nML-KEM-768.\nShared Secret size (bytes).\nA type to represent the <code>d||z</code> seed used by ML-KEM to produce\nA type to represent the <code>SharedSecret</code> that ML-KEM-768 …\nPerform decapsulation of a Ciphertext.\nGiven the DecapsulationKey, produce a SharedSecret using …\nGiven the EncapsulationKey, generate a SharedSecret and …\nGiven the EncapsulationKey, generate a SharedSecret and …\nGiven the EncapsulationKey and randomness <code>m</code>, generate a …\nMake an object from a byte array.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstantiate a KeyPair with all key validation checks, …\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nInstantiate a EncapsulationKey with key-checks from …\nGenerate a fresh KeyPair.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the length of the object.\nGet the private DecapsulationKey used to generate this …\nGet the public EncapsulationKey corresponding to this …\nGet the Seed used to generate this keypair. Use this …\nInstantiate a DecapsulationKey with only key-checks from …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nDHKEM(X25519, HKDF-SHA256) as specified in HPKE RFC 9180.\nVersion of HPKE implemented. See …\nID for this DH-KEM. See …\nA type to represent the <code>PrivateKey</code> that X25519 uses.\nA type that represents a <code>PublicKey</code> that X25519 uses.\nA type to represent the <code>SharedSecret</code> that DH-KEM(X25519, …\nEquivalent to <code>Self::decap()</code>, additionally ensuring the …\nEquivalent to <code>Self::encap()</code>, additionally ensuring the …\nEquivalent to  <code>Self::auth_encap()</code>, but with a one-time use …\nDecapsulate <code>public_ephemeral</code> and return the shared …\nDeterministically derive a X25519 keypair from <code>ikm</code>.\nDerive ephemeral shared secret and encapsulation thereof, …\nEquivalent to <code>Self::encap()</code>, but with a one-time use …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nGenerate random X25519 keypair.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nSize of public Ciphertext.\nA type to represent the KEM <code>Ciphertext</code> that X-Wing returns.\nA type to represent the <code>DecapsulationKey</code> that X-Wing …\nA type to represent the public <code>EncapsulationKey</code> that …\nA keypair of X-Wing keys.\nSize of private DecapsulationKey.\nSize of public EncapsulationKey.\nSize of private SharedSecret.\nA type to represent the private <code>Seed</code> that X-Wing uses.\nA type to represent the private <code>SharedSecret</code> that X-Wing …\nX-Wing hybrid KEM.\nGiven the DecapsulationKey, produce a SharedSecret using …\nGiven the EncapsulationKey, generate a SharedSecret and …\nGiven the EncapsulationKey and securely generated …\nMake an object from a byte array.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nGenerate a fresh KeyPair.\nDeterministically generate a KeyPair from a private Seed.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the length of the object.\nReturn the length of the object.\nReturn the length of the object.\nGet the private DecapsulationKey used to generate this …\nGet the public EncapsulationKey corresponding to this …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nBLAKE2b as specified in the RFC 7693.\nHMAC (Hash-based Message Authentication Code) as specified …\nPoly1305 as specified in the RFC 8439.\nBLAKE2b streaming state.\nA type to represent the secret key that BLAKE2b uses for …\nA type to represent the <code>Tag</code> that BLAKE2b returns.\nReturn a BLAKE2b tag.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nInitialize a <code>Blake2b</code> struct with a given size (in bytes) …\nReset to <code>new()</code> state.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nUpdate state with <code>data</code>. This can be called multiple times.\nVerify a BLAKE2b tag in constant time.\nHMAC-SHA256 (Hash-based Message Authentication Code) as …\nHMAC-SHA384 (Hash-based Message Authentication Code) as …\nHMAC-SHA512 (Hash-based Message Authentication Code) as …\nHMAC-SHA256 streaming state.\nA type to represent the <code>SecretKey</code> that HMAC uses for …\nA type to represent the <code>Tag</code> that HMAC returns.\nReturn a HMAC-SHA256 tag.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nOne-shot function for generating an HMAC-SHA256 tag of <code>data</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the length of the object.\nInitialize <code>HmacSha256</code> struct with a given key.\nReset to <code>new()</code> state.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nUpdate state with <code>data</code>. This can be called multiple times.\nVerify a HMAC-SHA256 tag in constant time.\nHMAC-SHA384 streaming state.\nA type to represent the <code>SecretKey</code> that HMAC uses for …\nA type to represent the <code>Tag</code> that HMAC returns.\nReturn a HMAC-SHA384 tag.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nOne-shot function for generating an HMAC-SHA384 tag of <code>data</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the length of the object.\nInitialize <code>HmacSha384</code> struct with a given key.\nReset to <code>new()</code> state.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nUpdate state with <code>data</code>. This can be called multiple times.\nVerify a HMAC-SHA384 tag in constant time.\nHMAC-SHA512 streaming state.\nA type to represent the <code>SecretKey</code> that HMAC uses for …\nA type to represent the <code>Tag</code> that HMAC returns.\nReturn a HMAC-SHA512 tag.\nReturns the argument unchanged.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nOne-shot function for generating an HMAC-SHA512 tag of <code>data</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the length of the object.\nInitialize <code>HmacSha512</code> struct with a given key.\nReset to <code>new()</code> state.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nUpdate state with <code>data</code>. This can be called multiple times.\nVerify a HMAC-SHA512 tag in constant time.\nA type to represent the <code>OneTimeKey</code> that Poly1305 uses for …\nThe key size for Poly1305.\nThe output size for Poly1305.\nPoly1305 streaming state.\nA type to represent the <code>Tag</code> that Poly1305 returns.\nReturn a Poly1305 tag.\nReturns the argument unchanged.\nMake an object from a byte array.\nMake an object from a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the length of the object.\nInitialize a <code>Poly1305</code> struct with a given one-time key.\nOne-shot function for generating a Poly1305 tag of <code>data</code>.\nReset to <code>new()</code> state.\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nUpdate state with <code>data</code>. This can be called multiple times.\nVerify a Poly1305 tag in constant time.\nIETF ChaCha20 as specified in the RFC 8439.\nXChaCha20 as specified in the draft-irtf-cfrg-xchacha-03.\nThe key size for ChaCha20.\nThe nonce size for IETF ChaCha20.\nA type that represents a <code>Nonce</code> that ChaCha20 and …\nA type to represent the <code>SecretKey</code> that Chacha20, …\nIETF ChaCha20 decryption as specified in the RFC 8439.\nIETF ChaCha20 encryption as specified in the RFC 8439.\nA type that represents a <code>Nonce</code> that XChaCha20, …\nA type to represent the <code>SecretKey</code> that Chacha20, …\nThe nonce size for XChaCha20.\nXChaCha20 decryption as specified in the draft RFC.\nXChaCha20 encryption as specified in the draft RFC.\nA type to represent the <code>Password</code> that Argon2i hashes and …\nA type to represent the <code>Salt</code> that Argon2i uses during key …\nA type to represent a secret key.\nRandomly generate using a CSPRNG with recommended size. …\nDerive a key using Argon2i.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nA key pair used to establish shared keys for a single …\nA key pair used to establish shared keys for a single …\nA type to represent the <code>PrivateKey</code> that X25519 uses.\nA type that represents a <code>PublicKey</code> that X25519 uses.\nA type to represent a secret key.\nA set of shared secrets for either transmitting to this …\nEstablish session keys with a client. This moves <code>self</code> to …\nEstablish session keys with a server. This moves <code>self</code> to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a given byte slice.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the object.\nReturn the length of the object.\nGenerate a new random key pair.\nGenerate a new random key pair.\nGet a reference to the <code>PrivateKey</code>.\nGet a reference to the <code>PrivateKey</code>.\nGet a reference to the <code>PublicKey</code>.\nGet a reference to the <code>PublicKey</code>.\nGet the shared secret intended to be used for receiving …\nConvert this PublicKey to its byte-representation.\nGet the shared secret intended to be used for transporting …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nGiven a 16-byte salt (22 characters encoded) and 32-byte …\nGiven a 16-byte salt (22 characters encoded) and 32-byte …\nThe length of the hashed password.\nA type to represent the <code>Password</code> that Argon2i hashes and …\nA type to represent the <code>PasswordHash</code> that Argon2i returns …\nThe length of the salt used for password hashing.\nRandomly generate using a CSPRNG with recommended size. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from encoded password hash.\nConstruct from given byte slice and parameters.\nConstruct from a given byte slice.\nRandomly generate using a CSPRNG. Not available in <code>no_std</code> …\nHash a password using Argon2i.\nHash and verify a password using Argon2i. The Argon2i …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if the password hash is empty, <code>false</code> otherwise.\nReturn <code>true</code> if this object does not hold any data, <code>false</code> …\nReturn the length of the password hash.\nReturn the length of the object.\nReturn the password hash as byte slice. <strong><strong>Warning</strong></strong>: Should …\nReturn the object as byte slice. <strong><strong>Warning</strong></strong>: Should not be …\nReturn encoded password hash. <strong><strong>Warning</strong></strong>: Should not be used …\nCompare two equal length slices in constant time.\nGenerate random bytes using a CSPRNG. Not available in …\nHas the effects of both <code>Acquire</code> and <code>Release</code> together: For …\nWhen coupled with a load, if the loaded value was written …\nA boolean type which can be safely shared between threads.\nA floating point type which can be safely shared between …\nA floating point type which can be safely shared between …\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nA raw pointer type which can be safely shared between …\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nAn integer type which can be safely shared between threads.\nAtomic memory orderings\nNo ordering constraints, only atomic operations.\nWhen coupled with a store, all previous operations become …\nLike <code>Acquire</code>/<code>Release</code>/<code>AcqRel</code> (for load, store, and …\nA “compiler-only” atomic fence.\nAn atomic fence.\nRe-export of the <code>core::hint</code> module.\nMakes a <em>soundness</em> promise to the compiler that <code>cond</code> holds.\nAn identity function that <em><strong>hints</strong></em> to the compiler to be …\nHints to the compiler that given path is cold, i.e., …\nHints to the compiler that a branch condition is likely to …\nAn identity function that causes an <code>unused_must_use</code> …\nReturns either <code>true_val</code> or <code>false_val</code> depending on the …\nEmits a machine instruction to signal the processor that …\nHints to the compiler that a branch condition is unlikely …\nInforms the compiler that the site which is calling this …\nA thread-safe reference-counting pointer. ‘Arc’ stands …\n<code>Weak</code> is a version of <code>Arc</code> that holds a non-owning reference …\nTypes and Traits for working with asynchronous tasks.\nThe implementation of waking a task on an executor.\nWake this task.\nType erased version of <code>Self</code>\nA borrowed equivalent to <code>Bound</code>.\nA GIL-attached equivalent to <code>Py&lt;T&gt;</code>.\nOwned or borrowed gil-bound Python smart pointer\nError that indicates a failure to convert a PyAny to a …\nError that indicates a failure to convert a PyAny to a …\nGets the Python builtin value <code>Ellipsis</code>, or <code>...</code>.\nContains the error value\nThe type returned in the event of a conversion error.\nExtract a type from a Python object.\nWhether the pyclass is frozen.\nDefines a conversion from a Rust type to a Python object, …\nConvenience methods for common usages of <code>IntoPyObject</code>. …\nModule name, if any.\nClass name.\nName of self. This is used in error messages, for example.\nGets the Python builtin value <code>None</code>.\nGets the Python builtin value <code>NotImplemented</code>.\nContains the success value\nThe smart pointer type to use.\nA GIL-independent reference to an object allocated on the …\nRepresents any Python object.\nTypes that can be used as Python classes.\nInitializer for our <code>#[pyclass]</code> system.\nRepresents a Python exception.\nHelper conversion trait that allows to use custom …\nA commonly-used alias for <code>Py&lt;PyAny&gt;</code>.\nA wrapper type for an immutably borrowed value from a …\nA wrapper type for a mutably borrowed value from a …\nRepresents the result of a Python call.\nError returned by a <code>__traverse__</code> visitor implementation.\nImplemented by types which can be used as a concrete …\nPython type information. All Python native types (e.g., …\nObject visitor for GC.\nA marker token that represents holding the GIL.\nRepresents the major, minor, and patch (if any) versions …\nThe Python output type\nPython exceptions that can be converted to <code>PyErr</code>.\nComputes <code>self + other</code>.\nConstructs a new initializer from an initializer for the …\nTemporarily releases the GIL, thus allowing other Python …\nAppends an item to the list.\nArguments for exception\nHelper to cast to <code>Bound&lt;&#39;py, PyAny&gt;</code>.\nHelper to cast to <code>Py&lt;PyAny&gt;</code>.\nBorrow this smart pointer.\nCasts this <code>Bound&lt;T&gt;</code> to a <code>Borrowed&lt;T&gt;</code> smart pointer.\nGets the Python bytes as a byte slice. Because Python …\nTurn this smart pointer into a borrowed reference pointer\nReturns the raw FFI pointer represented by self.\nReturns the raw FFI pointer represented by self.\nReturns the raw FFI pointer represented by self.\nReturns the raw FFI pointer represented by self.\nReturns the raw FFI pointer represented by self.\nReturns <code>self</code> cast as a <code>PySequence</code>.\nUpcast this <code>Bound&lt;PyClass&gt;</code> to its base type by reference.\nBorrows a shared reference to <code>PyRef&lt;T::BaseType&gt;</code>.\nBorrows a mutable reference to <code>PyRefMut&lt;T::BaseType&gt;</code>.\nRetrieves the underlying FFI pointer associated with this …\nRemoves the connection for this <code>Bound&lt;T&gt;</code> from the GIL, …\nUnsafely creates a Python token with an unbounded lifetime.\nAttaches this <code>Py</code> to the given Python context, allowing …\nSame as <code>bind</code> but produces a <code>Borrowed&lt;T&gt;</code> instead of a …\nComputes <code>self &amp; other</code>.\nComputes <code>self | other</code>.\nComputes <code>self ^ other</code>.\nImmutably borrows the value <code>T</code>.\nImmutably borrows the value <code>T</code>.\nMutably borrows the value <code>T</code>.\nMutably borrows the value <code>T</code>.\n<code>PyBuffer</code> implementation\nDefines how Python calls are dispatched, see <code>PyCallArgs</code>…\nCalls the object.\nVisit <code>obj</code>.\nCalls the object without arguments.\nCalls the object with only positional arguments.\nCalls a method on the object.\nCalls a method on the object with no arguments.\nCalls a method on the object with only positional …\nReturn the cause (either an exception instance, or None, …\nLets the Python interpreter check and handle any pending …\nOld module which contained some implementation details of …\nClone the PyErr. This requires the GIL, which is why PyErr …\nMakes a clone of <code>self</code>.\nDetermines if self contains <code>value</code>.\nDefines conversions between Rust and Python types.\nDefines a new exception type.\nDeletes the <code>index</code>th element of self.\nDeletes the slice from <code>low</code> to <code>high</code> from <code>self</code>.\nPrints a standard traceback to <code>sys.stderr</code>.\nComputes <code>self / other</code>.\nComputes <code>divmod(self, other)</code>.\nDowncast this <code>PyObject</code> to a concrete Python type or …\nCasts the PyObject to a concrete Python object type …\nDrops <code>self</code> and immediately decreases its reference count.\nEvaluates a Python expression in the given context and …\nException and warning types defined by Python.\nExtracts some type from the Python object.\nExtracts <code>Self</code> from the bound smart pointer <code>obj</code>.\nExtracts <code>Self</code> from the source <code>PyObject</code>.\nExtracts <code>Self</code> from the source <code>PyObject</code>.\nEquivalent to PyErr::take, but when no error is set:\nRaw FFI declarations for Python’s C API.\nComputes <code>self // other</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate borrow on a Bound\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new <code>Bound&lt;&#39;py, PyAny&gt;</code> from a pointer by …\nCreate a <code>Py&lt;T&gt;</code> instance by creating a new reference from …\nConstructs a new <code>Bound&lt;&#39;py, PyAny&gt;</code> from a pointer by …\nCreate a <code>Py&lt;T&gt;</code> instance by creating a new reference from …\nConstructs a new <code>Bound&lt;&#39;py, PyAny&gt;</code> from a pointer by …\nCreate a <code>Py&lt;T&gt;</code> instance by creating a new reference from …\nConstructs a new <code>Bound&lt;&#39;py, PyAny&gt;</code> from a pointer. Panics …\nCreate a <code>Py&lt;T&gt;</code> instance by taking ownership of the given …\nConstructs a new <code>Bound&lt;&#39;py, PyAny&gt;</code> from a pointer. Returns …\nCreate a <code>Py&lt;T&gt;</code> instance by taking ownership of the given …\nConstructs a new <code>Bound&lt;&#39;py, PyAny&gt;</code> from a pointer. Returns …\nCreate a <code>Py&lt;T&gt;</code> instance by taking ownership of the given …\nConstructs a new <code>Borrowed&lt;&#39;a, &#39;py, PyAny&gt;</code> from a pointer. …\nConstructs a new <code>Borrowed&lt;&#39;a, &#39;py, PyAny&gt;</code> from a pointer. …\nConstructs a new <code>Borrowed&lt;&#39;a, &#39;py, PyAny&gt;</code> from a pointer. …\nConstructs a new PyErr from the given Python type and …\nCreates a new PyErr.\nGets the fully qualified name of the <code>PyType</code>.\nProvide an immutable borrow of the value <code>T</code> without …\nProvide an immutable borrow of the value <code>T</code> without …\nGets the list item at the specified index.\nGets the list item at the specified index. Undefined …\nGets the reference count of the <code>ffi::PyObject</code> pointer.\nTakes the slice <code>self[low:high]</code> and returns it as a new …\nReturns the type of this exception.\nGets the Python type object for type <code>T</code>.\nRetrieves an attribute value.\nConversions to and from hashbrown’s <code>HashMap</code> and <code>HashSet</code>.\nImports the Python module with the specified name.\nDefines a Rust type for an exception defined in Python …\nVariant of <code>import_exception</code> that does not emit code needed …\nReturns the first index <code>i</code> for which <code>self[i] == value</code>.\nInserts an item at the specified index.\nInterns <code>text</code> as a Python string and stores a reference to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUpcast the target type of this smart pointer\nHelper to cast to <code>Bound&lt;&#39;py, PyAny&gt;</code>, transferring …\nHelper to cast to <code>Py&lt;PyAny&gt;</code>, transferring ownership.\nTurns this smart pointer into an owned <code>Bound&lt;&#39;py, T&gt;</code>\nSame as <code>bind</code> but takes ownership of <code>self</code>.\nConverts <code>self</code> into an owned Python object, dropping type …\nConsumes this <code>DowncastIntoError</code> and returns the original …\nReturns an iterator of values in this set.\nReturns an iterator of values in this set.\nReturns an iterator of values in this set.\nReturns an iterator of values in this set.\nTurn this smart pointer into a strong reference pointer\nReturns an owned raw FFI pointer represented by self.\nReturns an owned raw FFI pointer represented by self.\nReturns an owned raw FFI pointer represented by self.\nReturns an owned raw FFI pointer represented by self.\nConverts <code>self</code> into an owned Python object, dropping type …\nPerforms the conversion.\nConverts <code>self</code> into a Python object.\nReturns <code>self</code> cast as a <code>PySequence</code>.\nUpcast this <code>Bound&lt;PyClass&gt;</code> to its base type by value.\nGets a <code>PyRef&lt;T::BaseType&gt;</code>.\nGets a <code>PyRef&lt;T::BaseType&gt;</code>.\nConsumes self to take ownership of the exception value …\nReturns whether <code>self</code> and <code>other</code> point to the same object. …\nChecks if the list is empty.\nChecks if <code>object</code> is an instance of this type.\nReturns true if the current exception is instance of <code>T</code>.\nReturns true if the current exception is instance of <code>T</code>.\nReturns whether the object is considered to be None.\nChecks whether <code>self</code> is a subclass of <code>other</code>.\nChecks whether <code>self</code> is a subclass of type <code>T</code>.\nReturns whether the object is considered to be true.\nChecks if <code>object</code> is an instance of this type or a subclass …\nReturns an iterator over this list’s items.\nConversions to and from jiff’s <code>Span</code>, <code>SignedDuration</code>, …\nReturns the length of the list.\nIterates over a list while holding a critical section, …\nComputes <code>self &lt;&lt; other</code>.\nPython major version (e.g. <code>3</code>).\nFundamental properties of objects tied to the Python …\nSupport for the Python <code>marshal</code> format.\nReturns true if the current exception matches the …\nComputes <code>self @ other</code>.\nPython minor version (e.g. <code>11</code>).\nGets the name of the module defining the <code>PyType</code>.\nComputes <code>self * other</code>.\nGets the name of the <code>PyType</code>.\nCreates a new PyErr of type <code>T</code>.\nCreates a new instance <code>Bound&lt;T&gt;</code> of a <code>#[pyclass]</code> on the …\nCreates a new instance <code>Py&lt;T&gt;</code> of a <code>#[pyclass]</code> on the Python …\nConstructs a new initializer from value <code>T</code> and base class’…\nCreate a new <code>PyDowncastError</code> representing a failure to …\nCreate a new <code>DowncastIntoError</code> representing a failure to …\nCreates a new exception type with the given name and …\nRetrieves the next item from an iterator.\nGets whether an error is present in the Python interpreter…\nHelper to convert Rust panics to Python exceptions.\nPython patch version (e.g. <code>0</code>).\nComputes <code>self ** other % modulus</code> (<code>pow(self, other, modulus)</code>…\nPyO3’s prelude.\nPrepares the use of Python in a free-threaded context.\nCalls <code>sys.excepthook</code> and then prints a standard traceback …\nCalls <code>sys.excepthook</code> and then prints a standard traceback …\nReturns the GIL token associated with this object.\nReturns a <code>Python</code> token that is bound to the lifetime of …\nReturns a <code>Python</code> token that is bound to the lifetime of …\nContains types for working with Python objects that own …\nPyO3’s interior mutability primitive.\n<code>PyClass</code> and related traits.\nContains initialization utilities for <code>#[pyclass]</code>.\nGets the qualified name of the <code>PyType</code>.\nComputes <code>self % other</code>.\nWrites the error back to the Python interpreter’s global …\nReverses the list in-place. Equivalent to the Python …\nComputes <code>self &gt;&gt; other</code>.\nExecutes one or more Python statements in the given …\nSends a value into a python generator. This is the …\nEnables (de)serialization of <code>Py</code><code>&lt;T&gt;</code> objects via serde.\nSet the cause associated with the exception, pass <code>None</code> to …\nSets the item at the specified index.\nAssigns the sequence <code>seq</code> to the slice of <code>self</code> from <code>low</code> to …\nSets an attribute value.\nSorts the list in-place. Equivalent to the Python …\nComputes <code>self - other</code>.\nPython version suffix, if applicable (e.g. <code>a0</code>).\nSynchronization mechanisms based on the Python GIL.\nTakes the current error from the Python interpreter’s …\nConverts the <code>PyString</code> into a Rust string, avoiding copying …\nCreates a new owned <code>Bound&lt;T&gt;</code> from this borrowed reference …\nGets the Python string as a Rust UTF-8 string slice.\nConverts the <code>PyString</code> into a Rust string.\nReturn a new tuple containing the contents of the list; …\nReturns the traceback of this exception object.\nAttempts to immutably borrow the value <code>T</code>, returning an …\nAttempts to immutably borrow the value <code>T</code>, returning an …\nAttempts to mutably borrow the value <code>T</code>, returning an error …\nAttempts to mutably borrow the value <code>T</code>, returning an error …\nCreates a new Python <code>memoryview</code> object from another Python …\nCreates a new Python <code>bytearray</code> object from another Python …\nChecks if <code>object</code> is an instance of <code>Self</code>, which may include …\nPython type object information\nReturns the safe abstraction over the type object.\nReturns the PyTypeObject instance for this type.\nVarious types defined by the Python interpreter such as <code>int</code>…\nTurn this smart pointer into an owned <code>Py&lt;T&gt;</code>\nRemoves the connection for this <code>Bound&lt;T&gt;</code> from the GIL, …\nReturns the value of this exception.\nGets the running Python interpreter version as a string.\nGets the running Python interpreter version as a struct …\nIssues a warning message.\nIssues a warning message, with more control over the …\nExecutes the provided closure with an embedded Python …\nAcquires the global interpreter lock, allowing access to …\nLike <code>Python::with_gil</code> except Python interpreter state …\nReports the error as unraisable.\nA boolean type.\nTrait implemented for possible element types of <code>PyBuffer</code>.\nRepresents the type of a Python buffer element.\nA float type.\nAllows access to the underlying buffer used by a python …\nLike std::cell::Cell, but only provides read-only access …\nA signed integer type.\nAn unknown type. This may occur when parsing has failed.\nAn unsigned integer type.\nGets the buffer memory as a slice.\nGets the buffer memory as a slice.\nGets the buffer memory as a slice.\nReturns a pointer to the current value.\nGets the buffer memory as a slice.\nGets the pointer to the start of the buffer memory.\nCopies the specified slice into the buffer. If the buffer …\nCopies the specified slice into the buffer. If the buffer …\nCopies the buffer elements to the specified slice. If the …\nCopies the buffer elements to the specified slice. If the …\nGets the number of dimensions.\nA NUL terminated string in struct module style syntax …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDetermines the <code>ElementType</code> from a Python <code>struct</code> module …\nGets the underlying buffer from the specified python …\nReturns a copy of the current value.\nGets a pointer to the specified item.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets whether the buffer is contiguous in C-style order …\nGets whether the element specified in the format string is …\nGets whether the buffer is contiguous in Fortran-style …\nGets the total number of items.\nGets the size of a single element, in bytes. Important …\n<code>item_size() * item_count()</code>. For contiguous arrays, this is …\nGets whether the underlying buffer is read-only.\nReleases the buffer object, freeing the reference to the …\nReturns an array of length <code>dimensions</code>. <code>shape()[i]</code> is the …\nReturns an array that holds, for each dimension, the …\nAn array of length ndim. If <code>suboffsets[n] &gt;= 0</code>, the values …\nCopies the buffer elements to a newly allocated vector. If …\nCopies the buffer elements to a newly allocated vector. If …\nThe width of the signed integer in bytes.\nThe width of the unsigned integer in bytes.\nThe width of the float in bytes.\nThis trait marks types that can be used as arguments to …\nError returned by a <code>__traverse__</code> visitor implementation.\nObject visitor for GC.\nOld module which contained some implementation details of …\nOld module which contained some implementation details of …\nOperators for the <code>__richcmp__</code> method\nThe equality operator.\nThe <em>greater than or equal to</em> operator.\nThe <em>greater than</em> operator.\nThe <em>less than or equal to</em> operator.\nThe <em>less than</em> operator.\nThe <em>not equal to</em> operator.\nError returned by a <code>__traverse__</code> visitor implementation.\nObject visitor for GC.\nThe type returned in the event of a conversion error.\nExtract a type from a Python object.\nExpected form of <code>FromPyObject</code> to be used in a future PyO3 …\nDefines a conversion from a Rust type to a Python object, …\nConvenience methods for common usages of <code>IntoPyObject</code>. …\nThe smart pointer type to use.\nThe Python output type\nExtracts <code>Self</code> from the bound smart pointer <code>obj</code>.\nExtracts <code>Self</code> from the bound smart pointer <code>obj</code>.\nConverts <code>self</code> into an owned Python object, dropping type …\nConverts <code>self</code> into an owned Python object, dropping type …\nPerforms the conversion.\nConverts <code>self</code> into a Python object.\nRepresents Python’s <code>ArithmeticError</code> exception.\nRepresents Python’s <code>AssertionError</code> exception.\nRepresents Python’s <code>AttributeError</code> exception.\nRepresents Python’s <code>BaseException</code> exception.\nRepresents Python’s <code>BlockingIOError</code> exception.\nRepresents Python’s <code>BrokenPipeError</code> exception.\nRepresents Python’s <code>BufferError</code> exception.\nRepresents Python’s <code>BytesWarning</code> exception.\nRepresents Python’s <code>ChildProcessError</code> exception.\nRepresents Python’s <code>ConnectionAbortedError</code> exception.\nRepresents Python’s <code>ConnectionError</code> exception.\nRepresents Python’s <code>ConnectionRefusedError</code> exception.\nRepresents Python’s <code>ConnectionResetError</code> exception.\nRepresents Python’s <code>DeprecationWarning</code> exception.\nRepresents Python’s <code>EOFError</code> exception.\nRepresents Python’s <code>EncodingWarning</code> exception.\nRepresents Python’s <code>EnvironmentError</code> exception.\nRepresents Python’s <code>Exception</code> exception.\nRepresents Python’s <code>FileExistsError</code> exception.\nRepresents Python’s <code>FileNotFoundError</code> exception.\nRepresents Python’s <code>FloatingPointError</code> exception.\nRepresents Python’s <code>FutureWarning</code> exception.\nRepresents Python’s <code>GeneratorExit</code> exception.\nRepresents Python’s <code>IOError</code> exception.\nRepresents Python’s <code>ImportError</code> exception.\nRepresents Python’s <code>ImportWarning</code> exception.\nRepresents Python’s <code>IndexError</code> exception.\nRepresents Python’s <code>InterruptedError</code> exception.\nRepresents Python’s <code>IsADirectoryError</code> exception.\nRepresents Python’s <code>KeyError</code> exception.\nRepresents Python’s <code>KeyboardInterrupt</code> exception.\nRepresents Python’s <code>LookupError</code> exception.\nRepresents Python’s <code>MemoryError</code> exception.\nRepresents Python’s <code>ModuleNotFoundError</code> exception.\nRepresents Python’s <code>NameError</code> exception.\nRepresents Python’s <code>NotADirectoryError</code> exception.\nRepresents Python’s <code>NotImplementedError</code> exception.\nRepresents Python’s <code>OSError</code> exception.\nRepresents Python’s <code>OverflowError</code> exception.\nRepresents Python’s <code>PendingDeprecationWarning</code> exception.\nRepresents Python’s <code>PermissionError</code> exception.\nRepresents Python’s <code>ProcessLookupError</code> exception.\nRepresents Python’s <code>RecursionError</code> exception.\nRepresents Python’s <code>ReferenceError</code> exception.\nRepresents Python’s <code>ResourceWarning</code> exception.\nRepresents Python’s <code>RuntimeError</code> exception.\nRepresents Python’s <code>RuntimeWarning</code> exception.\nRepresents Python’s <code>StopAsyncIteration</code> exception.\nRepresents Python’s <code>StopIteration</code> exception.\nRepresents Python’s <code>SyntaxError</code> exception.\nRepresents Python’s <code>SyntaxWarning</code> exception.\nRepresents Python’s <code>SystemError</code> exception.\nRepresents Python’s <code>SystemExit</code> exception.\nRepresents Python’s <code>TimeoutError</code> exception.\nRepresents Python’s <code>TypeError</code> exception.\nRepresents Python’s <code>UnboundLocalError</code> exception.\nRepresents Python’s <code>UnicodeDecodeError</code> exception.\nRepresents Python’s <code>UnicodeEncodeError</code> exception.\nRepresents Python’s <code>UnicodeError</code> exception.\nRepresents Python’s <code>UnicodeTranslateError</code> exception.\nRepresents Python’s <code>UnicodeWarning</code> exception.\nRepresents Python’s <code>UserWarning</code> exception.\nRepresents Python’s <code>ValueError</code> exception.\nRepresents Python’s <code>Warning</code> exception.\nRepresents Python’s <code>ZeroDivisionError</code> exception.\nExceptions defined in Python’s <code>asyncio</code> module.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a Python <code>UnicodeDecodeError</code>.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a Python <code>UnicodeDecodeError</code> from a Rust UTF-8 …\nExceptions defined in Python’s <code>socket</code> module.\nA Rust type representing an exception defined in Python …\nA Rust type representing an exception defined in Python …\nA Rust type representing an exception defined in Python …\nA Rust type representing an exception defined in Python …\nA Rust type representing an exception defined in Python …\nA Rust type representing an exception defined in Python …\nA Rust type representing an exception defined in Python …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA Rust type representing an exception defined in Python …\nA Rust type representing an exception defined in Python …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nCreates a new <code>PyErr</code> of this type.\nA Rust type representing an exception defined in Python …\nNo value.\nNo value.\nMaximum number of dimensions\nbuilt-in ‘object’\nThis variant corresponds with <code>METH_VARARGS</code> <em>or</em> <code>METH_NOARGS</code> …\nThis variant corresponds with <code>METH_FASTCALL</code>.\nThis variant corresponds with <code>METH_FASTCALL</code> | <code>METH_KEYWORDS</code>…\nThis variant corresponds with <code>METH_VARARGS</code> | <code>METH_KEYWORDS</code>.\nThis variant corresponds with <code>METH_METHOD</code> | <code>METH_FASTCALL</code> …\nA Python code object.\nReturns a pointer to a <code>PyDateTime_CAPI</code> instance\nCheck if <code>op</code> is a <code>PyDateTimeAPI.DateTimeType</code> or subtype.\nCheck if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DateTimeType</code>.\nRetrieve the fold component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the hour component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the microsecond component of a <code>PyDateTime_DateTime</code>…\nRetrieve the minute component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the second component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the tzinfo component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the days component of a <code>PyDateTime_Delta</code>.\nRetrieve the seconds component of a <code>PyDateTime_Delta</code>.\nRetrieve the seconds component of a <code>PyDateTime_Delta</code>.\nStructure representing a <code>datetime.date</code>\nStructure representing a <code>datetime.datetime</code>.\nStructure representing a <code>datetime.timedelta</code>.\nRetrieve the day component of a <code>PyDateTime_Date</code> or …\nRetrieve the month component of a <code>PyDateTime_Date</code> or …\nRetrieve the year component of a <code>PyDateTime_Date</code> or …\nPopulates the <code>PyDateTimeAPI</code> object\nRetrieve the fold component of a <code>PyDateTime_Time</code>. Returns …\nRetrieve the hour component of a <code>PyDateTime_Time</code>. Returns …\nRetrieve the microsecond component of a <code>PyDateTime_DateTime</code>…\nRetrieve the minute component of a <code>PyDateTime_Time</code>. …\nRetrieve the second component of a <code>PyDateTime_DateTime</code>. …\nRetrieve the tzinfo component of a <code>PyDateTime_Time</code>. …\nStructure representing a <code>datetime.time</code>.\nType Check macros\nCheck if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DateType</code>.\nCheck if <code>op</code> is a <code>PyDateTimeAPI.DetaType</code> or subtype.\nCheck if <code>op</code>’s type is exactly <code>PyDateTimeAPI.DeltaType</code>.\nRepresents the PyGetSetDef structure.\nMacro, trading safety for speed\nMacro, <em>only</em> to be used to fill in brand new lists\nRepresents the PyMemberDef structure.\nRepresents the PyMethodDef structure.\nFunction types used to implement Python callables.\nbuilt-in ‘super’\nCheck if <code>op</code> is a <code>PyDateTimeAPI.TZInfoType</code> or subtype.\nCheck if <code>op</code>’s type is exactly <code>PyDateTimeAPI.TZInfoType</code>.\nCheck if <code>op</code> is a <code>PyDateTimeAPI.TimeType</code> or subtype.\nCheck if <code>op</code>’s type is exactly <code>PyDateTimeAPI.TimeType</code>.\nMacro, trading safety for speed\nMacro, <em>only</em> to be used to fill in brand new tuples\nbuilt-in ‘type’\nSet if the type allows subclassing\nObjects support garbage collection (see objimp.h)\nSet if the type implements the vectorcall protocol (PEP …\nSet if the type object is dynamically allocated\nSet if the type is ‘ready’ – fully initialized\nSet while the type is being ‘readied’, to prevent …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis variant corresponds with <code>METH_FASTCALL</code>.\nThis variant corresponds with <code>METH_FASTCALL</code> | <code>METH_KEYWORDS</code>…\nStructure representing a <code>datetime.datetime</code> without a <code>tzinfo</code>…\nStructure representing a <code>datetime.time</code> without a <code>tzinfo</code> …\nGet the frame evaluation function.\nSet the frame evaluation function.\nGet the <code>ascii</code> field of the <code>PyASCIIObject</code> state bitfield.\nThis is a helper macro to create a <code>&amp;&#39;static CStr</code>.\nGet the <code>compact</code> field of the <code>PyASCIIObject</code> state bitfield.\nC API Compatibility Shims\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the <code>interned</code> field of the <code>PyASCIIObject</code> state bitfield.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper to use as pymethod ffi definition\nGet the <code>kind</code> field of the <code>PyASCIIObject</code> state bitfield.\nOwned reference\nGet the <code>ready</code> field of the <code>PyASCIIObject</code> state bitfield.\nSet the <code>ascii</code> flag of the <code>PyASCIIObject</code> state bitfield.\nSet the <code>compact</code> flag of the <code>PyASCIIObject</code> state bitfield.\nSet the <code>interned</code> field of the <code>PyASCIIObject</code> state bitfield.\nSet the <code>kind</code> field of the <code>PyASCIIObject</code> state bitfield.\nSet the <code>ready</code> flag of the <code>PyASCIIObject</code> state bitfield.\nA bit field with various properties.\nSafety\nSafety\nRepresents the PyMemberDef structure.\nA marker token that represents holding the GIL.\nTypes that are safe to access while the GIL is not held.\nThe current version of the marshal binary format.\nSerialize an object to bytes using the Python built-in …\nDeserialize an object from bytes using the Python built-in …\nThe exception raised when Rust code called from Python …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>PyErr</code> of this type.\nA borrowed equivalent to <code>Bound</code>.\nA GIL-attached equivalent to <code>Py&lt;T&gt;</code>.\nContains the error value\nThe type returned in the event of a conversion error.\nExtract a type from a Python object.\nDefines a conversion from a Rust type to a Python object, …\nContains the success value\nThe smart pointer type to use.\nA GIL-independent reference to an object allocated on the …\nRepresents any Python object.\nThis trait represents the Python APIs which are usable on …\nImplementation of functionality for <code>PyBool</code>.\nImplementation of functionality for <code>PyByteArray</code>.\nImplementation of functionality for <code>PyBytes</code>.\nImplementation of functionality for <code>PyCapsule</code>.\nInitializer for our <code>#[pyclass]</code> system.\nImplementation of functionality for <code>PyComplex</code>.\nImplementation of functionality for <code>PyDict</code>.\nRepresents a Python exception.\nImplementation of functionality for <code>PyFloat</code>.\nImplementation of functionality for <code>PyFrozenSet</code>.\nImplementation of functionality for <code>PyList</code>.\nImplementation of functionality for <code>PyMapping</code>.\nImplementation of functionality for <code>PyMappingProxy</code>.\nRepresents a Python <code>module</code> object.\nImplementation of functionality for <code>PyModule</code>.\nA commonly-used alias for <code>Py&lt;PyAny&gt;</code>.\nA wrapper type for an immutably borrowed value from a …\nA wrapper type for a mutably borrowed value from a …\nRepresents the result of a Python call.\nImplementation of functionality for <code>PySequence</code>.\nImplementation of functionality for <code>PySet</code>.\nImplementation of functionality for <code>PySlice</code>.\nImplementation of functionality for <code>PyString</code>.\nImplementation of functionality for <code>PyTraceback</code>.\nImplementation of functionality for <code>PyTuple</code>.\nImplementation of functionality for <code>PyType</code>.\nImplementation of functionality for <code>PyWeakref</code>.\nA marker token that represents holding the GIL.\nThe Python output type\nComputes the absolute of self.\nReturns <code>|self|</code>.\nComputes <code>self + other</code>.\nAdds an attribute to the module.\nAdds an element to the set.\nAdds a new class to the module.\nAdd a function to a module.\nAdds a submodule to a module.\nAdds a function or a (sub)module to a module, using the …\nAppends an item to the list.\nExtracts a slice of the <code>ByteArray</code>’s entire buffer.\nGets the Python string as a byte slice.\nExtracts a mutable slice of the <code>ByteArray</code>’s entire …\nReturns <code>self</code> cast as a <code>PyMapping</code>.\nReturns <code>self</code> cast as a <code>PyMapping</code>.\nReturns <code>self</code> cast as a <code>PySequence</code>.\nReturns <code>self</code> cast as a <code>PySequence</code>.\nReturns <code>self</code> as a slice of objects.\nRetrieves the underlying FFI pointer associated with this …\nReturn Python bases\nComputes <code>self &amp; other</code>.\nComputes <code>~self</code>.\nComputes <code>self | other</code>.\nComputes <code>self ^ other</code>.\nCalls the object.\nCalls the object without arguments.\nCalls the object with only positional arguments.\nCalls a method on the object.\nCalls a method on the object without arguments.\nCalls a method on the object with only positional …\nEmpties an existing dictionary of all key-value pairs.\nRemoves all elements from the set.\nReturns an <code>Ordering</code> between <code>self</code> and <code>other</code>.\nReturns the concatenation of <code>self</code> and <code>other</code>.\nDetermines if self contains <code>value</code>.\nDetermines if the dictionary contains the specified key.\nDetermines if the set contains the specified key.\nDetermines if self contains <code>value</code>.\nDetermines if the mapping contains the specified key.\nDetermines if self contains <code>value</code>.\nDetermines if the set contains the specified key.\nDetermines if self contains <code>value</code>.\nGets the current context stored in the capsule. If there …\nReturns a new dictionary that contains the same key-value …\nReturns the number of occurrences of <code>value</code> in self, that …\nGets the start of the buffer containing the contents of …\nObtains the raw data backing the Python string.\nDeletes an item from the collection.\nDeletes an item.\nDeletes the <code>index</code>th element of self.\nDeletes the item with key <code>key</code>.\nDeletes the <code>i</code>th element of self.\nDeletes the slice from <code>low</code> to <code>high</code> from <code>self</code>.\nDeletes the slice from <code>i1</code> to <code>i2</code> from <code>self</code>.\nDeletes an attribute.\nReturns the module’s <code>__dict__</code> attribute, which contains …\nReturns the list of attributes of this object.\nRemoves the element from the set if it is present.\nComputes <code>self / other</code>.\nComputes <code>divmod(self, other)</code>.\nDowncast this <code>PyAny</code> to a concrete Python type or pyclass.\nDowncast this <code>PyAny</code> to a concrete Python type or pyclass …\nLike <code>downcast</code> but takes ownership of <code>self</code>.\nLike <code>downcast_exact</code> but takes ownership of <code>self</code>.\nLike <code>downcast_unchecked</code> but takes ownership of <code>self</code>.\nConverts this <code>PyAny</code> to a concrete Python type without …\nEncodes this string as a Python <code>bytes</code> object, using UTF-8 …\nTests whether this object is equal to another.\nExtracts some type from the Python object.\nExtracts <code>Self</code> from the bound smart pointer <code>obj</code>.\nReturns the filename (the <code>__file__</code> attribute) of the …\nComputes <code>self // other</code>.\nFormats the traceback as a string.\nGets the fully qualified name of the <code>PyType</code>.\nTests whether this object is greater than or equal to …\nLike <code>get_item</code>, but returns a borrowed object, which is a …\nLike <code>get_item_unchecked</code>, but returns a borrowed object, …\nGets an item from the collection.\nGets an item from the dictionary.\nGets the list item at the specified index.\nGets the item in self with key <code>key</code>.\nReturns the <code>index</code>th element of the Sequence.\nGets the tuple item at the specified index.\nGets the list item at the specified index. Undefined …\nGets the tuple item at the specified index. Undefined …\nReturns the reference count for the Python object.\nTakes the slice <code>self[low:high]</code> and returns it as a new …\nReturns the slice of sequence object between <code>begin</code> and <code>end</code>.\nTakes the slice <code>self[low:high]</code> and returns it as a new …\nReturns the Python type object for this object’s type.\nReturns the Python type pointer for this object.\nRetrieves an attribute value.\nRetrieves an attribute value optionally.\nDeclare whether or not this module supports running with …\nTests whether this object is greater than another.\nDetermines whether this object has the given attribute.\nRetrieves the hash code of self.\nReturns the imaginary part of the complex number.\nConcatenates <code>self</code> and <code>other</code>, in place if possible.\nRepeats the sequence object <code>count</code> times and updates <code>self</code>, …\nReturns the first index <code>i</code> for which <code>self[i] == value</code>.\nReturns the index (the <code>__all__</code> attribute) of the module, …\nReturns the first index <code>i</code> for which <code>self[i] == value</code>.\nReturns the first index <code>i</code> for which <code>self[i] == value</code>.\nRetrieves the start, stop, and step indices from the slice …\nInserts an item at the specified index.\nReturns <code>self</code> cast as a <code>PyMapping</code>.\nPerforms the conversion.\nReturns <code>self</code> cast as a <code>PySequence</code>.\nReturns <code>self</code> cast as a <code>PySequence</code>.\nReturns whether <code>self</code> and <code>other</code> point to the same object. …\nDetermines whether this object appears callable.\nReturns true if the sequence or mapping has a length of 0.\nChecks if the bytearray is empty.\nChecks if the dict is empty, i.e. <code>len(self) == 0</code>.\nChecks if the list is empty.\nReturns whether the mapping is empty.\nChecks if the mappingproxy is empty, i.e. <code>len(self) == 0</code>.\nReturns whether the sequence is empty.\nChecks if the tuple is empty.\nChecks whether this object is an instance of exactly type …\nChecks whether this object is an instance of exactly type <code>T</code>…\nChecks whether this object is an instance of type <code>ty</code>.\nChecks whether this object is an instance of type <code>T</code>.\nReturns whether the object is considered to be None.\nChecks whether <code>self</code> is a subclass of <code>other</code>.\nChecks whether <code>self</code> is a subclass of type <code>T</code>.\nGets whether this boolean is <code>true</code>.\nReturns whether the object is considered to be true.\nChecks if this is a valid capsule.\nReturns a list of dict items.\nReturns a list of all (key, value) pairs in the mapping.\nReturns a list of tuples of all (key, value) pairs in the …\nReturns an iterator of <code>(key, value)</code> pairs in this …\nReturns an iterator of values in this set.\nReturns an iterator over this list’s items.\nReturns an iterator of values in this set.\nReturns an iterator over the tuple items.\nLike <code>iter</code>, but produces an iterator which returns borrowed …\nReturns a list of dict keys.\nReturns a list containing all keys in the mapping.\nReturns a list containing all keys in the mapping.\nTests whether this object is less than or equal to another.\nReturns the length of the sequence or mapping.\nGets the length of the bytearray.\nReturn the number of items in the dictionary.\nReturns the number of items in the set.\nReturns the length of the list.\nReturns the number of objects in the mapping.\nReturns the number of objects in sequence.\nReturns the number of items in the set.\nGets the length of the tuple.\nIterates over the contents of this dictionary while …\nIterates over the contents of this list while holding a …\nComputes <code>self &lt;&lt; other</code>.\nTests whether this object is less than another.\nComputes <code>self @ other</code>.\nGets the name of the module defining the <code>PyType</code>.\nReturn the method resolution order for this type.\nComputes <code>self * other</code>.\nRetrieves the name of this capsule, if set.\nReturns the name (the <code>__name__</code> attribute) of the module.\nGets the name of the <code>PyType</code>. Equivalent to <code>self.__name__</code> …\nTests whether this object is not equal to another.\nComputes the negative of self.\nGets the raw <code>c_void</code> pointer to the value in this capsule.\nRemoves and returns an arbitrary element from the set.\nComputes the positive of self.\nComputes <code>self ** other % modulus</code> (<code>pow(self, other, modulus)</code>…\nReturns <code>self</code> raised to the power of <code>other</code>.\nReturn a proxy object that delegates method calls to a …\nGets the qualified name of the <code>PyType</code>. Equivalent to …\nReturns the real part of the complex number.\nObtains a reference to the value of this capsule.\nComputes <code>self % other</code>.\nReturns the result of repeating a sequence object <code>count</code> …\nComputes the “repr” representation of self.\nResizes the bytearray object to the new length <code>len</code>.\nReverses the list in-place. Equivalent to the Python …\nTests whether two Python objects obey a given <code>CompareOp</code>.\nComputes <code>self &gt;&gt; other</code>.\nSets the context pointer in the capsule.\nSets a collection item value.\nSets an item value.\nSets the item at the specified index.\nSets the item in self with key <code>key</code>.\nAssigns object <code>item</code> to the <code>i</code>th element of self.\nAssigns the sequence <code>seq</code> to the slice of <code>self</code> from <code>low</code> to …\nAssigns the sequence <code>v</code> to the slice of <code>self</code> from <code>i1</code> to <code>i2</code>.\nSets an attribute value.\nSorts the list in-place. Equivalent to the Python …\nComputes the “str” representation of self.\nComputes <code>self - other</code>.\nConverts the <code>PyString</code> into a Rust string, avoiding copying …\nReturns a fresh list based on the Sequence.\nReturn a new list containing the contents of this tuple; …\nGets the Python string as a Rust UTF-8 string slice.\nConverts the <code>PyString</code> into a Rust string.\nReturn a new tuple containing the contents of the list; …\nReturns a fresh tuple based on the Sequence.\nCopies the contents of the bytearray to a Rust vector.\nTakes an object and returns an iterator for it. Returns an …\nTakes an object and returns an iterator for it. Returns an …\nUpdate this dictionary with the key/value pairs from …\nAdd key/value pairs from another dictionary to this one …\nUpgrade the weakref to a Bound <code>PyAny</code> reference to the …\nGets the value of this float.\nReturns a list of dict values.\nReturns a list containing all values in the mapping.\nReturns a list containing all values in the mapping.\nA wrapper around <code>[u8]</code> where the storage is either owned by …\nA wrapper around <code>str</code> where the storage is owned by a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn error type returned by <code>Bound::try_borrow</code>.\nAn error type returned by <code>Bound::try_borrow_mut</code>.\nA wrapper type for an immutably borrowed value from a …\nA wrapper type for a mutably borrowed value from a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOperators for the <code>__richcmp__</code> method\nThe equality operator.\nWhether the pyclass is frozen.\nThe <em>greater than or equal to</em> operator.\nThe <em>greater than</em> operator.\nThe <em>less than or equal to</em> operator.\nThe <em>less than</em> operator.\nThe <em>not equal to</em> operator.\nTypes that can be used as Python classes.\nError returned by a <code>__traverse__</code> visitor implementation.\nObject visitor for GC.\nReturns the argument unchanged.\nConversion from the C enum.\nCalls <code>U::from(self)</code>.\nReturns if a Rust <code>std::cmp::Ordering</code> matches this ordering …\nInitializer for our <code>#[pyclass]</code> system.\nA write-once primitive similar to <code>std::sync::OnceLock&lt;T&gt;</code>.\nValue with concurrent access protected by the GIL.\nExtension trait for <code>std::sync::Mutex</code> which helps avoid …\nHelper trait for <code>Once</code> to help avoid deadlocking when using …\nExtension trait for <code>std::sync::OnceLock</code> which helps avoid …\nThe state of <code>Once</code>\nSimilar to <code>call_once_force</code>, but releases the Python GIL …\nSimilar to <code>call_once</code>, but releases the Python GIL …\nCreates a new cell that contains a new Python reference to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGain access to the inner value by giving proof of having …\nGet a reference to the contained value, or <code>None</code> if the …\nGet the contents of the cell mutably. This is only …\nGet a reference to the contained value, initializing it if …\nInitializes this <code>OnceLock</code> with the given closure if it has …\nLike <code>get_or_init</code>, but accepts a fallible initialization …\nGet a reference to the contained Python type, initializing …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the cell, returning the wrapped value.\nLock this <code>Mutex</code> in a manner that cannot deadlock with the …\nPlace the given value under the protection of the GIL.\nCreate a <code>GILOnceCell</code> which does not yet contain a value.\nSet the value in the cell.\nTakes the value out of the cell, moving it back to an …\nGain access to the inner value by giving proof that …\nExecutes a closure with a Python critical section held on …\nExecutes a closure with a Python critical section held on …\nModule name, if any.\nClass name.\nName of self. This is used in error messages, for example.\n<code>T: PyLayout&lt;U&gt;</code> represents that <code>T</code> is a concrete …\n<code>T: PySizedLayout&lt;U&gt;</code> represents that <code>T</code> is not a instance of …\nImplemented by types which can be used as a concrete …\nPython type information. All Python native types (e.g., …\nChecks if <code>object</code> is an instance of this type.\nChecks if <code>object</code> is an instance of this type or a subclass …\nChecks if <code>object</code> is an instance of <code>Self</code>, which may include …\nReturns the safe abstraction over the type object.\nReturns the PyTypeObject instance for this type.\nPython objects that have a base type.\nConversion trait that allows a sequence of tuples to be …\nRepresents any Python object.\nThis trait represents the Python APIs which are usable on …\nRepresents a Python <code>bool</code>.\nImplementation of functionality for <code>PyBool</code>.\nRepresents a Python <code>bytearray</code>.\nImplementation of functionality for <code>PyByteArray</code>.\nRepresents a Python <code>bytes</code> object.\nImplementation of functionality for <code>PyBytes</code>.\nRepresents a builtin Python function object.\nRepresents a Python Capsule as described in Capsules:\nImplementation of functionality for <code>PyCapsule</code>.\nRepresents a Python code object.\nRepresents a Python <code>complex</code> object.\nImplementation of functionality for <code>PyComplex</code>.\nBindings around <code>datetime.date</code>.\nTrait for accessing the date components of a struct …\nBindings for <code>datetime.datetime</code>.\nBindings for <code>datetime.timedelta</code>.\nTrait for accessing the components of a struct containing …\nRepresents a Python <code>dict</code>.\nRepresents a Python <code>dict_items</code>.\nRepresents a Python <code>dict_keys</code>.\nImplementation of functionality for <code>PyDict</code>.\nRepresents a Python <code>dict_values</code>.\nRepresents the Python <code>Ellipsis</code> object.\nRepresents a Python <code>float</code> object.\nImplementation of functionality for <code>PyFloat</code>.\nRepresents a Python frame.\nRepresents a  Python <code>frozenset</code>.\nAllows building a Python <code>frozenset</code> one item at a time\nImplementation of functionality for <code>PyFrozenSet</code>.\nRepresents a Python function object.\nRepresents a Python <code>types.GenericAlias</code> object.\nRepresents a Python <code>int</code> object.\nA Python iterator object.\nRepresents a Python <code>list</code>.\nImplementation of functionality for <code>PyList</code>.\nRepresents a reference to a Python object supporting the …\nImplementation of functionality for <code>PyMapping</code>.\nRepresents a Python <code>mappingproxy</code>.\nRepresents a Python <code>memoryview</code>.\nRepresents a Python <code>module</code> object.\nImplementation of functionality for <code>PyModule</code>.\nRepresents the Python <code>None</code> object.\nRepresents the Python <code>NotImplemented</code> object.\nRepresents a Python <code>range</code>.\nImplementation of functionality for <code>PyRange</code>.\nRepresents a reference to a Python object supporting the …\nImplementation of functionality for <code>PySequence</code>.\nRepresents a Python <code>set</code>.\nImplementation of functionality for <code>PySet</code>.\nRepresents a Python <code>slice</code>.\nReturn value from <code>PySliceMethods::indices</code>.\nImplementation of functionality for <code>PySlice</code>.\nRepresents a Python <code>string</code> (a Unicode string object).\nRepresents raw data backing a Python <code>str</code>.\nImplementation of functionality for <code>PyString</code>.\nRepresents a Python <code>super</code> object.\nBindings for <code>datetime.time</code>.\nTrait for accessing the time components of a struct …\nRepresents a Python traceback.\nImplementation of functionality for <code>PyTraceback</code>.\nRepresents a Python <code>tuple</code> object.\nImplementation of functionality for <code>PyTuple</code>.\nRepresents a reference to a Python <code>type</code> object.\nImplementation of functionality for <code>PyType</code>.\nBindings for <code>datetime.tzinfo</code>.\nTrait for accessing the components of a struct containing …\nRepresents any Python <code>weakref</code> reference.\nImplementation of functionality for <code>PyWeakref</code>.\nRepresents any Python <code>weakref</code> Proxy type.\nRepresents a Python <code>weakref.ReferenceType</code>.\nUCS1 representation.\nUCS2 representation.\nUCS4 representation.\nComputes the absolute of self.\nReturns <code>|self|</code>.\nComputes <code>self + other</code>.\nAdds an attribute to the module.\nAdds an element to the set.\nAdds an element to the set.\nAdds a new class to the module.\nAdd a function to a module.\nAdds a submodule to a module.\nAdds a function or a (sub)module to a module, using the …\nAppends an item to the list.\nExtracts a slice of the <code>ByteArray</code>’s entire buffer.\nGets the Python string as a byte slice.\nObtain the raw bytes backing this instance as a u8 slice.\nExtracts a mutable slice of the <code>ByteArray</code>’s entire …\nReturns <code>self</code> cast as a <code>PyMapping</code>.\nReturns <code>self</code> cast as a <code>PySequence</code>.\nReturns <code>self</code> cast as a <code>PySequence</code>.\nReturns <code>self</code> as a slice of objects.\nRetrieves the underlying FFI pointer associated with this …\nReturn Python bases\nComputes <code>self &amp; other</code>.\nComputes <code>~self</code>.\nComputes <code>self | other</code>.\nComputes <code>self ^ other</code>.\nCalls the object.\nCalls the object without arguments.\nCalls the object with only positional arguments.\nCalls a method on the object.\nCalls a method on the object without arguments.\nCalls a method on the object with only positional …\nEmpties an existing dictionary of all key-value pairs.\nRemoves all elements from the set.\nReturns an <code>Ordering</code> between <code>self</code> and <code>other</code>.\nReturns the concatenation of <code>self</code> and <code>other</code>.\nDetermines if self contains <code>value</code>.\nDetermines if the dictionary contains the specified key.\nDetermines if the set contains the specified key.\nDetermines if self contains <code>value</code>.\nDetermines if the mapping contains the specified key.\nDetermines if self contains <code>value</code>.\nDetermines if the set contains the specified key.\nDetermines if self contains <code>value</code>.\nGets the current context stored in the capsule. If there …\nReturns a new dictionary that contains the same key-value …\nReturns the number of occurrences of <code>value</code> in self, that …\nGets the start of the buffer containing the contents of …\nObtains the raw data backing the Python string.\nDeletes an item from the collection.\nDeletes an item.\nDeletes the <code>index</code>th element of self.\nDeletes the item with key <code>key</code>.\nDeletes the <code>i</code>th element of self.\nDeletes the slice from <code>low</code> to <code>high</code> from <code>self</code>.\nDeletes the slice from <code>i1</code> to <code>i2</code> from <code>self</code>.\nDeletes an attribute.\nReturns the module’s <code>__dict__</code> attribute, which contains …\nReturns the list of attributes of this object.\nRemoves the element from the set if it is present.\nComputes <code>self / other</code>.\nComputes <code>divmod(self, other)</code>.\nDowncast this <code>PyAny</code> to a concrete Python type or pyclass.\nDowncast this <code>PyAny</code> to a concrete Python type or pyclass …\nLike <code>downcast</code> but takes ownership of <code>self</code>.\nLike <code>downcast_exact</code> but takes ownership of <code>self</code>.\nLike <code>downcast_unchecked</code> but takes ownership of <code>self</code>.\nConverts this <code>PyAny</code> to a concrete Python type without …\nCreates a new empty frozen set\nConstructs a new empty list.\nCreates a new empty set.\nConstructs an empty tuple (on the Python side, a singleton …\nEncodes this string as a Python <code>bytes</code> object, using UTF-8 …\nTests whether this object is equal to another.\nExtracts some type from the Python object.\nReturns the filename (the <code>__file__</code> attribute) of the …\nFinish building the set and take ownership of its current …\nEquivalent to <code>datetime.timezone</code> constructor\nComputes <code>self // other</code>.\nFormats the traceback as a string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new Python <code>bytearray</code> object from another Python …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new Python <code>memoryview</code> object from another Python …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts the given FFI pointer into <code>Bound&lt;PyType&gt;</code>, to use …\nCreates and loads a module named <code>module_name</code>, containing …\nCreates a new <code>PyComplex</code> from the given real and imaginary …\nBuilds an iterator for an iterable Python object; the …\nAttempts to create a Python string from a Python …\nCreates a new Python byte string object from a raw pointer …\nCreates a new dictionary from the sequence given.\nConstruct a <code>datetime.date</code> from a POSIX timestamp\nConstruct a <code>datetime</code> object from a POSIX timestamp\nConstructs a new full slice that is equivalent to <code>::</code>.\nGets the fully qualified name of the <code>PyType</code>.\nTests whether this object is greater than or equal to …\nReturns the <code>Ellipsis</code> object.\nReturns the <code>None</code> object.\nReturns the <code>NotImplemented</code> object.\nLike <code>get_item</code>, but returns a borrowed object, which is a …\nLike <code>get_item_unchecked</code>, but returns a borrowed object, …\nReturns the day, as an int from 1 through 31.\nReturns the number of days, as an int from -999999999 to …\nReturns whether this date is the later of two moments with …\nReturns the hour, as an int from 0 through 23.\nGets an item from the collection.\nGets an item from the dictionary.\nGets the list item at the specified index.\nGets the item in self with key <code>key</code>.\nReturns the <code>index</code>th element of the Sequence.\nGets the tuple item at the specified index.\nGets the list item at the specified index. Undefined …\nGets the tuple item at the specified index. Undefined …\nReturns the microsecond, as an int from 0 through 999999.\nReturns the number of microseconds, as an int from 0 …\nReturns the minute, as an int from 0 through 59.\nReturns the month, as an int from 1 through 12.\nReturns the reference count for the Python object.\nReturns the second, as an int from 0 through 59.\nReturns the number of seconds, as an int from 0 through …\nTakes the slice <code>self[low:high]</code> and returns it as a new …\nReturns the slice of sequence object between <code>begin</code> and <code>end</code>.\nTakes the slice <code>self[low:high]</code> and returns it as a new …\nReturns the Python type object for this object’s type.\nReturns the Python type pointer for this object.\nReturns the tzinfo (which may be None).\nReturns the year, as a positive int.\nRetrieves an attribute value.\nRetrieves an attribute value optionally.\nDeclare whether or not this module supports running with …\nTests whether this object is greater than another.\nDetermines whether this object has the given attribute.\nRetrieves the hash code of self.\nReturns the imaginary part of the complex number.\nImports an existing capsule.\nImports the Python module with the specified name.\nConcatenates <code>self</code> and <code>other</code>, in place if possible.\nRepeats the sequence object <code>count</code> times and updates <code>self</code>, …\nReturns the first index <code>i</code> for which <code>self[i] == value</code>.\nReturns the index (the <code>__all__</code> attribute) of the module, …\nReturns the first index <code>i</code> for which <code>self[i] == value</code>.\nReturns the first index <code>i</code> for which <code>self[i] == value</code>.\nRetrieves the start, stop, and step indices from the slice …\nInserts an item at the specified index.\nIntern the given string\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> cast as a <code>PyMapping</code>.\nConverts self into a <code>PyDict</code> object pointer. Whether …\nReturns <code>self</code> cast as a <code>PySequence</code>.\nReturns <code>self</code> cast as a <code>PySequence</code>.\nReturns whether <code>self</code> and <code>other</code> point to the same object. …\nDetermines whether this object appears callable.\nReturns true if the sequence or mapping has a length of 0.\nChecks if the bytearray is empty.\nChecks if the dict is empty, i.e. <code>len(self) == 0</code>.\nChecks if the list is empty.\nReturns whether the mapping is empty.\nReturns whether the sequence is empty.\nChecks if the tuple is empty.\nChecks if set is empty.\nChecks if set is empty.\nChecks if set is empty.\nChecks if set is empty.\nChecks whether this object is an instance of exactly type …\nChecks whether this object is an instance of exactly type <code>T</code>…\nChecks whether this object is an instance of type <code>ty</code>.\nChecks whether this object is an instance of type <code>T</code>.\nReturns whether the object is considered to be None.\nChecks whether <code>self</code> is a subclass of <code>other</code>.\nChecks whether <code>self</code> is a subclass of type <code>T</code>.\nGets whether this boolean is <code>true</code>.\nReturns whether the object is considered to be true.\nChecks if this is a valid capsule.\nReturns a list of dict items.\nReturns a list of all (key, value) pairs in the mapping.\nIteration over Python collections.\nReturns an iterator of <code>(key, value)</code> pairs in this …\nReturns an iterator of values in this set.\nReturns an iterator over this list’s items.\nReturns an iterator of values in this set.\nReturns an iterator over the tuple items.\nLike <code>iter</code>, but produces an iterator which returns borrowed …\nReturns a list of dict keys.\nReturns a list containing all keys in the mapping.\nTests whether this object is less than or equal to another.\nReturns the length of the sequence or mapping.\nGets the length of the bytearray.\nReturn the number of items in the dictionary.\nReturns the number of items in the set.\nReturns the length of the list.\nReturns the number of objects in the mapping.\nReturns the number of objects in sequence.\nReturns the number of items in the set.\nGets the length of the tuple.\nIterates over the contents of this dictionary while …\nIterates over the contents of this list while holding a …\nComputes <code>self &lt;&lt; other</code>.\nTests whether this object is less than another.\nComputes <code>self @ other</code>.\nGets the name of the module defining the <code>PyType</code>.\nReturn the method resolution order for this type.\nComputes <code>self * other</code>.\nRetrieves the name of this capsule, if set.\nReturns the name (the <code>__name__</code> attribute) of the module.\nGets the name of the <code>PyType</code>. Equivalent to <code>self.__name__</code> …\nTests whether this object is not equal to another.\nComputes the negative of self.\nDepending on <code>val</code>, returns <code>true</code> or <code>false</code>.\nCreates a new Python bytearray object.\nCreates a new Python bytestring object. The bytestring is …\nConstructs a new capsule whose contents are <code>value</code>, …\nCreates a new <code>datetime.date</code>.\nCreates a new <code>datetime.datetime</code> object.\nCreates a new <code>datetime.time</code> object.\nCreates a new <code>timedelta</code>.\nCreates a new empty dictionary.\nCreates a new Python <code>float</code> object.\nCreate a new <code>FrozenSetBuilder</code>. Since this allocates a …\nCreates a new frozenset.\nCreate a new built-in function which takes no arguments.\nCreates a new Python GenericAlias object.\nConstructs a new list with the given elements.\nCreates a mappingproxy from an object.\nCreates a new module object with the <code>__name__</code> attribute …\nCreates a new Python int object.\nConstructs a new super object. More read about super …\nCreates a new Python <code>range</code> object with a default step of 1.\nCreates a new set with elements from the given slice.\nConstructs a new slice with the given elements.\nCreates a new Python string object.\nConstructs a new tuple with the given elements.\nCreates a new type object.\nConstructs a new Weak Reference (<code>weakref.proxy</code>/…\nConstructs a new Weak Reference (<code>weakref.ref</code>/…\nCreates a new <code>PySliceIndices</code>.\nCreate a new function from a closure.\nCreates a new Python <code>bytearray</code> object with an <code>init</code> closure …\nCreates a new Python <code>bytes</code> object with an <code>init</code> closure to …\nConstructs a new Weak Reference (<code>weakref.proxy</code>/…\nConstructs a new Weak Reference (<code>weakref.ref</code>/…\nConstructs a new capsule whose contents are <code>value</code>, …\nAlternate constructor that takes a <code>fold</code> parameter. A <code>true</code> …\nAlternate constructor that takes a <code>fold</code> argument. See …\nCreate a new built-in function with keywords (*args and/or …\nCreates a new Python <code>range</code> object with a specified step.\nGets the raw <code>c_void</code> pointer to the value in this capsule.\nRemoves and returns an arbitrary element from the set.\nComputes the positive of self.\nComputes <code>self ** other % modulus</code> (<code>pow(self, other, modulus)</code>…\nReturns <code>self</code> raised to the power of <code>other</code>.\nReturn a proxy object that delegates method calls to a …\nGets the qualified name of the <code>PyType</code>. Equivalent to …\nReturns the real part of the complex number.\nObtains a reference to the value of this capsule.\nRegister a pyclass as a subclass of <code>collections.abc.Mapping</code>…\nRegister a pyclass as a subclass of …\nComputes <code>self % other</code>.\nReturns the result of repeating a sequence object <code>count</code> …\nComputes the “repr” representation of self.\nResizes the bytearray object to the new length <code>len</code>.\nReverses the list in-place. Equivalent to the Python …\nTests whether two Python objects obey a given <code>CompareOp</code>.\nComputes <code>self &gt;&gt; other</code>.\nSets the context pointer in the capsule.\nSets a collection item value.\nSets an item value.\nSets the item at the specified index.\nSets the item in self with key <code>key</code>.\nAssigns object <code>item</code> to the <code>i</code>th element of self.\nAssigns the sequence <code>seq</code> to the slice of <code>self</code> from <code>low</code> to …\nAssigns the sequence <code>v</code> to the slice of <code>self</code> from <code>i1</code> to <code>i2</code>.\nSets an attribute value.\nThe length of the slice calculated from the original input …\nSorts the list in-place. Equivalent to the Python …\nReturns the start of the range.\nStart of the slice\nReturns the step of the range.\nIncrement to use when iterating the slice from <code>start</code> to …\nReturns the exclusive end of the range.\nEnd of the slice\nComputes the “str” representation of self.\nComputes <code>self - other</code>.\nEquivalent to <code>zoneinfo.ZoneInfo</code> constructor\nEquivalent to <code>datetime.timezone.utc</code>\nConverts the <code>PyString</code> into a Rust string, avoiding copying …\nReturns a fresh list based on the Sequence.\nReturn a new list containing the contents of this tuple; …\nGets the Python string as a Rust UTF-8 string slice.\nConvert the raw data to a Rust string.\nConverts the <code>PyString</code> into a Rust string.\nConvert the raw data to a Rust string, possibly with data …\nReturn a new tuple containing the contents of the list; …\nReturns a fresh tuple based on the Sequence.\nCopies the contents of the bytearray to a Rust vector.\nTakes an object and returns an iterator for it. Returns an …\nUpdate this dictionary with the key/value pairs from …\nAdd key/value pairs from another dictionary to this one …\nUpgrade the weakref to a Bound <code>PyAny</code> reference to the …\nUpgrade the weakref to a direct Bound object reference.\nUpgrade the weakref to a direct Bound object reference.\nUpgrade the weakref to a exact direct Bound object …\nUpgrade the weakref to a exact direct Bound object …\nUpgrade the weakref to a direct Bound object reference …\nUpgrade the weakref to a direct Bound object reference …\nEquivalent to <code>datetime.timezone.utc</code>\nGets the value of this float.\nSize in bytes of each value/item in the underlying slice.\nReturns a list of dict values.\nReturns a list containing all values in the mapping.\nUsed by <code>PyTuple::iter_borrowed()</code>.\nPyO3 implementation of an iterator for a Python <code>dict</code> …\nPyO3 implementation of an iterator for a Python <code>frozenset</code> …\nUsed by <code>PyList::iter()</code>.\nPyO3 implementation of an iterator for a Python <code>set</code> object.\nUsed by <code>PyTuple::into_iter()</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdvances the iterator and returns the next value.\nAdvances the iterator and returns the next value.\nA marker trait over <code>RngCore</code> for securely unpredictable RNGs\nThe type returned in the event of a RNG error.\nImplementation-level interface for RNGs\nSeed type, which is restricted to types …\nA random number generator that can be explicitly seeded.\nA marker trait over <code>TryRngCore</code> for securely unpredictable …\nA potentially fallible variant of <code>RngCore</code>\nWrapper around <code>TryRngCore</code> implementation which implements …\nWrapper around <code>TryRngCore</code> implementation which implements …\nThe <code>BlockRngCore</code> trait and implementation helpers\nFill <code>dest</code> with random data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new PRNG seeded from an infallible <code>Rng</code>.\nCreate a new PRNG using the given seed.\nHelper functions for implementing <code>RngCore</code> functions.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLittle-Endian utilities\nReturn the next random <code>u32</code>.\nReturn the next random <code>u64</code>.\nReborrow with a new lifetime\nCreate a new PRNG using a <code>u64</code> seed.\nFill <code>dest</code> entirely with random data.\nCreate a new PRNG seeded from a potentially fallible <code>Rng</code>.\nReturn the next random <code>u32</code>.\nReturn the next random <code>u64</code>.\nWrap RNG with the <code>UnwrapErr</code> wrapper.\nWrap RNG with the <code>UnwrapMut</code> wrapper.\nA wrapper type implementing <code>RngCore</code> for some type …\nA wrapper type implementing <code>RngCore</code> for some type …\nA trait for RNGs which do not generate random numbers …\nA marker trait used to indicate that an <code>RngCore</code> …\nResults element type, e.g. <code>u32</code>.\nResults type. This is the ‘block’ an RNG implementing …\nThe <em>core</em> part of the RNG, implementing the <code>generate</code> …\nThe <em>core</em> part of the RNG, implementing the <code>generate</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate a new block of results.\nGenerate a new set of results immediately, setting the …\nGenerate a new set of results immediately, setting the …\nGet the index into the result buffer.\nGet the index into the result buffer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>BlockRng</code> from an existing RNG implementing …\nCreate a new <code>BlockRng</code> from an existing RNG implementing …\nReset the number of available results. This will force a …\nReset the number of available results. This will force a …\nImplement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …\nImplement <code>fill_bytes</code> by reading chunks from the output …\nImplement <code>fill_bytes</code> by reading chunks from the output …\nImplement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.\nImplement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.\nImplement <code>next_u64</code> via <code>next_u32</code>, little-endian order.\nReads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.\nReads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.\nProcessor Power Management and RAS Capabilities …\nInfo about cache Associativity.\nThis table is taken from Intel manual (Section CPUID …\nDescribes any kind of cache (TLB, Data and Instruction …\nIterates over cache information (LEAF=0x02).\nWhat type of cache are we dealing with?\nInformation about an individual cache in the hierarchy.\nIterator over caches (LEAF=0x04).\nInfo about a what a given cache caches (instructions, …\nThe main type used to query information about the CPU we’…\nImplements function to read/write cpuid. This allows to …\nThe native reader uses the cpuid instruction to read the …\nLow-level data-structure to store result of cpuid …\nDeterministic Address Translation Structure\nDeterministic Address Translation Structure Iterator …\nDeterministic Address Translation cache type (EDX bits 04 …\nData cache\nDirect cache access info (LEAF=0x09).\nEBX:EAX and EDX:ECX provide information on the Enclave …\nStructured Extended Feature Identifiers (LEAF=0x07).\nExtended Processor and Processor Feature Identifiers …\nWhere the extended register state is stored.\nWhat kidn of extended register state this is.\nExtendedState subleaf structure for things that need to be …\nInformation for saving/restoring extended register state …\nYields ExtendedState structs.\nInformation about topology (LEAF=0x0B).\nGives information about the current level in the topology.\nProcessor and Processor Feature Identifiers (LEAF=0x01).\nIdentifies the different Hypervisor products.\nInformation about Hypervisor (LEAF=0x4000_0001)\nInstruction cache\nL1 Cache and TLB Information (LEAF=0x8000_0005).\nL2/L3 Cache and TLB Information (LEAF=0x8000_0006).\nL2 Cache Allocation Technology Enumeration Sub-leaf …\nL3 Cache Allocation Technology Enumeration Sub-leaf …\nInformation about L3 cache monitoring.\nMemory Bandwidth Allocation Enumeration Sub-leaf …\nEncrypted Memory Capabilities (LEAF=0x8000_001F).\nInformation about how monitor/mwait works on this CPU …\nNull - No more caches\nNull (indicates this sub-leaf is not valid).\nInfo about performance monitoring – how many counters …\nPerformance Optimization Identifier (LEAF=0x8000_001A).\nProcessor name (LEAF=0x8000_0002..=0x8000_0004).\nProcessor Capacity Parameters and Extended Feature …\nProcessor Frequency Information (LEAF=0x16).\nProcessor Serial Number (LEAF=0x3).\nProcessor Topology Information (LEAF=0x8000_001E).\nIntel Processor Trace Information (LEAF=0x14).\nQEMU is the hypervisor identity when QEMU is used without …\nQuality of service enforcement information (LEAF=0x10).\nIntel Resource Director Technology RDT (LEAF=0x0F).\n4-31 = Reserved\nHyper-thread (Simultaneous multithreading)\nIntel SGX Capability Enumeration Leaf (LEAF=0x12).\nIntel SGX EPC Enumeration Leaf\nIterator over the SGX sub-leafs (ECX &gt;= 2).\nIterator for SoC vendor attributes.\nA vendor brand string as queried from the cpuid leaf.\nSoC vendor specific information (LEAF=0x17).\nInformation about the SVM features that the processory …\nQuery information about thermal and power management …\nTLB 1-GiB Pages Information (LEAF=0x8000_0019).\nWhat type of core we have at this level in the topology …\nTime Stamp Counter/Core Crystal Clock Information …\nData and Instruction cache\nSome unified TLBs will allow a single TLB entry to satisfy …\nVendor Info String (LEAF=0x0)\n(Virtual) Bus (local apic timer) frequency in kHz.\nAPIC ID size.\nReturn the processor brand string as a rust string.\nReturn vendor identification as human readable string.\nReturn the SocVendorBrand as a string.\nWays of associativity (Bits 31-22)\nVersion Information: Family\nVersion Information: Model\nReturns brand ID on AMD.\nBrand Index\nBus (Reference) Frequency (in MHz).\nC-bit location in page table entry\nTranslation cache level (starts at 1)\nTranslation cache type field.\nCache Type\nLength of the capacity bit mask.\nLength of the capacity bit mask.\nCLFLUSH line size (Value ∗ 8 = cache line size in bytes)\nSystem Coherency Line Size (Bits 11-00)\nNumber of configurable Address Ranges for filtering (Bits …\nConversion factor from reported IA32_QM_CTR value to …\nCore ID\nBit width of general-purpose, performance monitoring …\nSpecifies the ratio of the compute unit power accumulator …\nMacro which queries cpuid directly.\nL1 data cache associativity.\nL1 data cache line size in bytes.\nL1 data cache lines per tag.\nL1 data cache size in KB\nCreate a new <code>CpuId</code> instance.\nAn unsigned integer which is the denominator of the …\nDescription of the cache (from Intel Manual)\nData TLB associativity for 2-MB and 4-MB pages.\nL2 Data TLB associativity for 2-MB and 4-MB pages.\nData TLB number of entries for 2-MB and 4-MB pages.\nL2 Data TLB number of entries for 2-MB and 4-MB pages.\nData TLB associativity for 4K pages.\nL2 Data TLB associativity for 4K pages.\nData TLB number of entries for 4K pages.\nL2 Data TLB number of entries for 4K pages.\nL1 Data TLB associativity for 1-GB pages.\nL1 Data TLB number of entries for 1-GB pages.\nL2 Data TLB associativity for 1-GB pages.\nL2 Data TLB number of entries for 1-GB pages.\nNumber of Interrupt Thresholds in Digital Thermal Sensor\nReturn value EAX register\nReturn value EBX register\nLength of EBX bit vector to enumerate architectural …\nReturn value ECX register\nReturn value EDX register\nVersion Information: Extended Family\nVersion Information: Extended Model\nExtended Processor Signature.\nEnumeration of Monitor-Mwait extensions (beyond EAX and …\nNumber of fixed-function performance counters (if Version …\nBit width of fixed-function performance counters (if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdvanced Power Management Information (LEAF=0x8000_0007).\nQuery basic information about caches (LEAF=0x02).\nRetrieve more elaborate information about caches …\nValue of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …\nQuery deterministic address translation feature …\nDirect cache access info (LEAF=0x09).\nFind out about more features supported by this CPU …\nExtended Processor and Processor Feature Identifiers …\nInformation for saving/restoring extended register state …\nInformation about topology (LEAF=0x0B).\nExtended information about topology (LEAF=0x1F).\nQuery a set of features that are available on this CPU …\nReturns information provided by the hypervisor, if running …\nL1 Instruction Cache Information (LEAF=0x8000_0005)\nL2/L3 Cache and TLB Information (LEAF=0x8000_0006).\nInformations about memory encryption support …\nInformation about how monitor/mwait works on this CPU …\nInfo about performance monitoring (LEAF=0x0A).\nInformations about performance optimization …\nRetrieve processor brand string (LEAF=0x8000_000{2..4}).\nProcessor Capacity Parameters and Extended Feature …\nProcessor Frequency Information (LEAF=0x16).\nRetrieve serial number of processor (LEAF=0x03).\nInformations about processor topology (LEAF=0x8000_001E)\nIntel Processor Trace Enumeration Information (LEAF=0x14).\nQuality of service enforcement information (LEAF=0x10).\nQuality of service monitoring information (LEAF=0x0F).\nInformation about secure enclave support (LEAF=0x12).\nContains SoC vendor specific information (LEAF=0x17).\nThis function provides information about the SVM features …\nQuery information about thermal and power management …\nTLB 1-GiB Pages Information (LEAF=0x8000_0019)\nTime Stamp Counter/Core Crystal Clock Information …\nReturn information about the vendor (LEAF=0x00).\nGuest Physical Address Bits\nHas 100 MHz multiplier Control?\n1GB page size entries supported by this structure\nIs there support for 1GiB pages.\n2MB page size entries supported by this structure\n3DNow extensions.\n4K page size entries supported by this structure\n4MB page size entries supported by this structure\nCheck support for 64-bit mode.\nSEV guest execution only allowed from a 64-bit host if set.\nThermal Monitor and Software Controlled Clock Facilities. …\nBreakpoint Addressing masking extended to bit 31.\nSupports ADX.\nA value of 1 indicates that the processor supports the …\nLOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.\nAlternate Injection supported if set.\n3DNow AMD extensions.\nSupports AMX_BF16.\nSupports AMX_INT8.\nSupports AMX_TILE.\nAnyThread deprecation\nAPIC On-Chip. The processor contains an Advanced …\nARAT. APIC-Timer-always-running feature is supported if …\nAVX512VBMI2\nSupport for the AMD advanced virtual interrupt controller …\nA value of 1 indicates the processor supports the AVX …\nSupports AVX10\nAVX2\nSupports AVX512_4FMAPS.\nSupports AVX512_4VNNIW.\nSupports AVX512_BF16.\nSupports AVX512_FP16.\nAVX512_IFMA\nSupports AVX512_VP2INTERSECT.\nAVX512BITALG\nAVX512BW\nAVX512CD\nSupports AVX512DQ.\nAVX512ER\nSupports AVX512F.\nAVX512PF\nAVX512VBMI\nAVX512VBMI2\nAVX512VL\nAVX512VNNI\nAVX512VPOPCNTDQ\nSupports AVX-IFMA Instructions.\nSupports AVX_NE_CONVERT\nSupports AVX_VNNI.\nSupports AVX_VNNI_INT16\nSupports AVX_VNNI_INT8\nBMI1\nBMI2\nSupports CET shadow stack features. Processors that set …\nSupports CET_SSS\nCLZERO instruction supported if set.\nCLFLUSH Instruction. CLFLUSH Instruction is supported.\nSupports CLFLUSHOPT.\nCLWB\nConditional Move Instructions. The conditional move …\nCheck support legacy cmp.\nCMPXCHG16B Available. A value of 1 indicates that the …\nCMPXCHG8B Instruction. The compare-and-exchange 8 bytes …\nL1 Context ID. A value of 1 indicates the L1 data cache …\nIs Code and Data Prioritization Technology supported?\nComplex Cache Indexing (Bit 2) False: Direct mapped cache. …\nIf true, Indicates support of Configurable PSB and …\nHas Core performance boost?\nCPL Qualified Debug Store. A value of 1 indicates the …\nData access breakpoint extension.\nA value of 1 indicates the processor supports the ability …\nDebugging Extensions. Support for I/O breakpoints, …\nFull debug state swap supported for SEV-ES guests.\nIndicates support for the decode assists if set.\nDebug Store. The processor supports the ability to write …\n64-bit DS Area. A value of 1 indicates the processor …\nDigital temperature sensor is supported if set.\nECMD. Clock modulation duty cycle extension is supported …\nEnhanced Intel SpeedStep® technology. A value of 1 …\nSupports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …\nSupports ENCLV instruction leaves EINCVIRTCHILD, …\nThe processor supports performance-energy bias preference …\nIs there support for execute disable bit.\nExtended APIC space.\nA value of 1 indicates that processor supports 16-bit …\nFXSAVE and FXRSTOR instruction optimizations.\nFDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …\nIndicates support for processor feedback interface.\nFlexible HWP is supported if set.\nIndicates that TLB flush events, including CR3 writes and …\nA value of 1 indicates the processor supports FMA …\nFour-operand FMA instruction support.\nThe internal FP/SIMD execution datapath is 128 bits wide …\nThe internal FP/SIMD execution datapath is 256 bits wide …\nFloating Point Unit On-Chip. The processor contains an x87 …\nDeprecates FPU CS and FPU DS values if 1.\nFrequency ID control.\nFSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …\nSupports Fast Short REP CMPSB, REP SCASB\nSupports Fast Short REP STOSB\nFXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …\nSupports Fast zero-length REP MOVSB\nGFNI\nGIF – virtualized global interrupt flag if set.\nGuest Mode Execution Trap supported if set.\nHDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …\nHLE\nWhen host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …\nSupports HRESET\nMax APIC IDs reserved field is Valid. A value of 0 for HTT …")