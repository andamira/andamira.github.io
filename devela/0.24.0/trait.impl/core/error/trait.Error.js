(function() {
    var implementors = Object.fromEntries([["devela",[["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/all/enum.AllError.html\" title=\"enum devela::all::AllError\">AllError</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/all/enum.DataError.html\" title=\"enum devela::all::DataError\">DataError</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/all/enum.DataNotEnough.html\" title=\"enum devela::all::DataNotEnough\">DataNotEnough</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/all/enum.ImageError.html\" title=\"enum devela::all::ImageError\">ImageError</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/all/enum.MismatchedBounds.html\" title=\"enum devela::all::MismatchedBounds\">MismatchedBounds</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/all/enum.NotAvailable.html\" title=\"enum devela::all::NotAvailable\">NotAvailable</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/all/enum.PartialSpace.html\" title=\"enum devela::all::PartialSpace\">PartialSpace</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/all/enum.SixelError.html\" title=\"enum devela::all::SixelError\">SixelError</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/all/enum.TimeError.html\" title=\"enum devela::all::TimeError\">TimeError</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/num/enum.NumError.html\" title=\"enum devela::num::NumError\">NumError</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/text/enum.InvalidText.html\" title=\"enum devela::text::InvalidText\">InvalidText</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/text/enum.TextError.html\" title=\"enum devela::text::TextError\">TextError</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"enum\" href=\"devela/ui/enum.UiError.html\" title=\"enum devela::ui::UiError\">UiError</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.DataOverflow.html\" title=\"struct devela::all::DataOverflow\">DataOverflow</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.ElementNotFound.html\" title=\"struct devela::all::ElementNotFound\">ElementNotFound</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.FailedErrorConversion.html\" title=\"struct devela::all::FailedErrorConversion\">FailedErrorConversion</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.IndexOutOfBounds.html\" title=\"struct devela::all::IndexOutOfBounds\">IndexOutOfBounds</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.InvalidAxisLength.html\" title=\"struct devela::all::InvalidAxisLength\">InvalidAxisLength</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.KeyAlreadyExists.html\" title=\"struct devela::all::KeyAlreadyExists\">KeyAlreadyExists</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.MismatchedCapacity.html\" title=\"struct devela::all::MismatchedCapacity\">MismatchedCapacity</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.MismatchedDimensions.html\" title=\"struct devela::all::MismatchedDimensions\">MismatchedDimensions</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.MismatchedIndices.html\" title=\"struct devela::all::MismatchedIndices\">MismatchedIndices</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.NodeEmpty.html\" title=\"struct devela::all::NodeEmpty\">NodeEmpty</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.NodeLinkNotSet.html\" title=\"struct devela::all::NodeLinkNotSet\">NodeLinkNotSet</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.NodeLinkNotUnique.html\" title=\"struct devela::all::NodeLinkNotUnique\">NodeLinkNotUnique</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.NotEnoughElements.html\" title=\"struct devela::all::NotEnoughElements\">NotEnoughElements</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.NotEnoughSpace.html\" title=\"struct devela::all::NotEnoughSpace\">NotEnoughSpace</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.NotImplemented.html\" title=\"struct devela::all::NotImplemented\">NotImplemented</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.NotSupported.html\" title=\"struct devela::all::NotSupported\">NotSupported</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.PartiallyAdded.html\" title=\"struct devela::all::PartiallyAdded\">PartiallyAdded</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.SystemTimeError.html\" title=\"struct devela::all::SystemTimeError\">SystemTimeError</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/all/struct.Timeout.html\" title=\"struct devela::all::Timeout\">Timeout</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/text/struct.InvalidChar.html\" title=\"struct devela::text::InvalidChar\">InvalidChar</a>"],["impl <a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for <a class=\"struct\" href=\"devela/text/struct.InvalidUtf8.html\" title=\"struct devela::text::InvalidUtf8\">InvalidUtf8</a>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[8165]}