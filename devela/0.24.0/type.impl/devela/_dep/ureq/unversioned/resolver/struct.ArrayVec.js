(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayVec%3CT,+N%3E\" class=\"impl\"><a href=\"#impl-ArrayVec%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/_dep/ureq/unversioned/resolver/struct.ArrayVec.html\" title=\"struct devela::_dep::ureq::unversioned::resolver::ArrayVec\">ArrayVec</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fn\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"devela/_dep/ureq/unversioned/resolver/struct.ArrayVec.html#tymethod.from_fn\" class=\"fn\">from_fn</a>(cb: impl <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; T) -&gt; <a class=\"struct\" href=\"devela/_dep/ureq/unversioned/resolver/struct.ArrayVec.html\" title=\"struct devela::_dep::ureq::unversioned::resolver::ArrayVec\">ArrayVec</a>&lt;T, N&gt;</h4></section></summary><div class=\"docblock\"><p>Construct the array.</p>\n<p>The function must produces placeholder elements of the type <code>T</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"devela/_dep/ureq/unversioned/resolver/struct.ArrayVec.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: T)</h4></section></summary><div class=\"docblock\"><p>Add a value T.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"devela/_dep/ureq/unversioned/resolver/struct.ArrayVec.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shorten the vec.</p>\n<p>This does not drop the elements that are now unused.</p>\n</div></details></div></details>",0,"devela::_dep::ureq::unversioned::resolver::ResolvedSocketAddrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ArrayVec%3CT,+N%3E\" class=\"impl\"><a href=\"#impl-Debug-for-ArrayVec%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"struct\" href=\"devela/_dep/ureq/unversioned/resolver/struct.ArrayVec.html\" title=\"struct devela::_dep::ureq::unversioned::resolver::ArrayVec\">ArrayVec</a>&lt;T, N&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"devela/all/struct.FmtError.html\" title=\"struct devela::all::FmtError\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::_dep::ureq::unversioned::resolver::ResolvedSocketAddrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-ArrayVec%3CT,+N%3E\" class=\"impl\"><a href=\"#impl-Deref-for-ArrayVec%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Deref.html\" title=\"trait devela::all::Deref\">Deref</a> for <a class=\"struct\" href=\"devela/_dep/ureq/unversioned/resolver/struct.ArrayVec.html\" title=\"struct devela::_dep::ureq::unversioned::resolver::ArrayVec\">ArrayVec</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"devela/_dep/ureq/unversioned/resolver/struct.ArrayVec.html\" title=\"struct devela::_dep::ureq::unversioned::resolver::ArrayVec\">ArrayVec</a>&lt;T, N&gt; as <a class=\"trait\" href=\"devela/all/trait.Deref.html\" title=\"trait devela::all::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Deref.html#associatedtype.Target\" title=\"type devela::all::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","devela::_dep::ureq::unversioned::resolver::ResolvedSocketAddrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-ArrayVec%3CT,+N%3E\" class=\"impl\"><a href=\"#impl-DerefMut-for-ArrayVec%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.DerefMut.html\" title=\"trait devela::all::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"devela/_dep/ureq/unversioned/resolver/struct.ArrayVec.html\" title=\"struct devela::_dep::ureq::unversioned::resolver::ArrayVec\">ArrayVec</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut &lt;<a class=\"struct\" href=\"devela/_dep/ureq/unversioned/resolver/struct.ArrayVec.html\" title=\"struct devela::_dep::ureq::unversioned::resolver::ArrayVec\">ArrayVec</a>&lt;T, N&gt; as <a class=\"trait\" href=\"devela/all/trait.Deref.html\" title=\"trait devela::all::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Deref.html#associatedtype.Target\" title=\"type devela::all::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","devela::_dep::ureq::unversioned::resolver::ResolvedSocketAddrs"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[8001]}