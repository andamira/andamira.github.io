(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-MergeBy%3CI,+J,+F%3E\" class=\"impl\"><a href=\"#impl-Clone-for-MergeBy%3CI,+J,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, J, F&gt; <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> for <a class=\"struct\" href=\"devela/_dep/itertools/struct.MergeBy.html\" title=\"struct devela::_dep::itertools::MergeBy\">MergeBy</a>&lt;I, J, F&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>,\n    J: <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>,\n    <a class=\"struct\" href=\"devela/_dep/itertools/struct.PutBack.html\" title=\"struct devela::_dep::itertools::PutBack\">PutBack</a>&lt;<a class=\"struct\" href=\"devela/all/struct.IterFuse.html\" title=\"struct devela::all::IterFuse\">Fuse</a>&lt;I&gt;&gt;: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    <a class=\"struct\" href=\"devela/_dep/itertools/struct.PutBack.html\" title=\"struct devela::_dep::itertools::PutBack\">PutBack</a>&lt;<a class=\"struct\" href=\"devela/all/struct.IterFuse.html\" title=\"struct devela::all::IterFuse\">Fuse</a>&lt;J&gt;&gt;: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    F: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"devela/_dep/itertools/struct.MergeBy.html\" title=\"struct devela::_dep::itertools::MergeBy\">MergeBy</a>&lt;I, J, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"MergeBy&lt;I, J, F&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"devela/code/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"devela/code/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","devela::_dep::itertools::Merge","devela::_dep::itertools::MergeJoinBy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-MergeBy%3CI,+J,+F%3E\" class=\"impl\"><a href=\"#impl-Debug-for-MergeBy%3CI,+J,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, J, F&gt; <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"struct\" href=\"devela/_dep/itertools/struct.MergeBy.html\" title=\"struct devela::_dep::itertools::MergeBy\">MergeBy</a>&lt;I, J, F&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a> + <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>,\n    &lt;I as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>,\n    J: <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a> + <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>,\n    &lt;J as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"devela/all/struct.FmtError.html\" title=\"struct devela::all::FmtError\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::_dep::itertools::Merge","devela::_dep::itertools::MergeJoinBy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Iterator-for-MergeBy%3CI,+J,+F%3E\" class=\"impl\"><a href=\"#impl-Iterator-for-MergeBy%3CI,+J,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, J, F&gt; <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a> for <a class=\"struct\" href=\"devela/_dep/itertools/struct.MergeBy.html\" title=\"struct devela::_dep::itertools::MergeBy\">MergeBy</a>&lt;I, J, F&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>,\n    J: <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>,\n    F: OrderingOrBool&lt;&lt;I as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, &lt;J as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Iterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;F as OrderingOrBool&lt;&lt;I as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, &lt;J as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;&gt;::MergeResult</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next\" class=\"method trait-impl\"><a href=\"#method.next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#tymethod.next\" class=\"fn\">next</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"devela/_dep/itertools/struct.MergeBy.html\" title=\"struct devela::_dep::itertools::MergeBy\">MergeBy</a>&lt;I, J, F&gt; as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;&lt;MergeBy&lt;I, J, F&gt; as Iterator&gt;::Item&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Advances the iterator and returns the next value. <a href=\"devela/all/trait.Iterator.html#tymethod.next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold\" class=\"method trait-impl\"><a href=\"#method.fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.fold\" class=\"fn\">fold</a>&lt;B, G&gt;(self, init: B, f: G) -&gt; B<div class=\"where\">where\n    <a class=\"struct\" href=\"devela/_dep/itertools/struct.MergeBy.html\" title=\"struct devela::_dep::itertools::MergeBy\">MergeBy</a>&lt;I, J, F&gt;: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(B, &lt;<a class=\"struct\" href=\"devela/_dep/itertools/struct.MergeBy.html\" title=\"struct devela::_dep::itertools::MergeBy\">MergeBy</a>&lt;I, J, F&gt; as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Folds every element into an accumulator by applying an operation,\nreturning the final result. <a href=\"devela/all/trait.Iterator.html#method.fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) <a href=\"#\" class=\"tooltip\" data-notable-ty=\"(usize, Option&lt;usize&gt;)\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the iterator. <a href=\"devela/all/trait.Iterator.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth\" class=\"method trait-impl\"><a href=\"#method.nth\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.nth\" class=\"fn\">nth</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"devela/_dep/itertools/struct.MergeBy.html\" title=\"struct devela::_dep::itertools::MergeBy\">MergeBy</a>&lt;I, J, F&gt; as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;&lt;MergeBy&lt;I, J, F&gt; as Iterator&gt;::Item&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the <code>n</code>th element of the iterator. <a href=\"devela/all/trait.Iterator.html#method.nth\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_chunk\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#109-113\">Source</a><a href=\"#method.next_chunk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.next_chunk\" class=\"fn\">next_chunk</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;[Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>], <a class=\"struct\" href=\"devela/all/struct.ArrayIntoIter.html\" title=\"struct devela::all::ArrayIntoIter\">IntoIter</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, N&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;[Self::Item; N], IntoIter&lt;Self::Item, N&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_next_chunk</code>)</span></div></span><div class='docblock'>Advances the iterator and returns an array containing the next <code>N</code> values. <a href=\"devela/all/trait.Iterator.html#method.next_chunk\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#221-223\">Source</a></span><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.count\" class=\"fn\">count</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Consumes the iterator, counting the number of iterations and returning it. <a href=\"devela/all/trait.Iterator.html#method.count\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#249-251\">Source</a></span><a href=\"#method.last\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.last\" class=\"fn\">last</a>(self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Item&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Consumes the iterator, returning the last element. <a href=\"devela/all/trait.Iterator.html#method.last\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#296\">Source</a><a href=\"#method.advance_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.advance_by\" class=\"fn\">advance_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"devela/all/struct.NonZero.html\" title=\"struct devela::all::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), NonZero&lt;usize&gt;&gt;\">ⓘ</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>)</span></div></span><div class='docblock'>Advances the iterator by <code>n</code> elements. <a href=\"devela/all/trait.Iterator.html#method.advance_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.step_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#423-425\">Source</a></span><a href=\"#method.step_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.step_by\" class=\"fn\">step_by</a>(self, step: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterStepBy.html\" title=\"struct devela::all::IterStepBy\">StepBy</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"StepBy&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration. <a href=\"devela/all/trait.Iterator.html#method.step_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#494-497\">Source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.chain\" class=\"fn\">chain</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterChain.html\" title=\"struct devela::all::IterChain\">Chain</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.IntoIter\" title=\"type devela::all::IteratorInto::IntoIter\">IntoIter</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Chain&lt;Self, &lt;U as IntoIterator&gt;::IntoIter&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes two iterators and creates a new iterator over both in sequence. <a href=\"devela/all/trait.Iterator.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#612-615\">Source</a></span><a href=\"#method.zip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.zip\" class=\"fn\">zip</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterZip.html\" title=\"struct devela::all::IterZip\">Zip</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.IntoIter\" title=\"type devela::all::IteratorInto::IntoIter\">IntoIter</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Zip&lt;Self, &lt;U as IntoIterator&gt;::IntoIter&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,</div></h4></section></summary><div class='docblock'>‘Zips up’ two iterators into a single iterator of pairs. <a href=\"devela/all/trait.Iterator.html#method.zip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersperse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#655-658\">Source</a><a href=\"#method.intersperse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.intersperse\" class=\"fn\">intersperse</a>(self, separator: Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"struct\" href=\"devela/_core/iter/struct.Intersperse.html\" title=\"struct devela::_core::iter::Intersperse\">Intersperse</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Intersperse&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>)</span></div></span><div class='docblock'>Creates a new iterator which places a copy of <code>separator</code> between adjacent\nitems of the original iterator. <a href=\"devela/all/trait.Iterator.html#method.intersperse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersperse_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#713-716\">Source</a><a href=\"#method.intersperse_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.intersperse_with\" class=\"fn\">intersperse_with</a>&lt;G&gt;(self, separator: G) -&gt; <a class=\"struct\" href=\"devela/_core/iter/struct.IntersperseWith.html\" title=\"struct devela::_core::iter::IntersperseWith\">IntersperseWith</a>&lt;Self, G&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"IntersperseWith&lt;Self, G&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>() -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>)</span></div></span><div class='docblock'>Creates a new iterator which places an item generated by <code>separator</code>\nbetween adjacent items of the original iterator. <a href=\"devela/all/trait.Iterator.html#method.intersperse_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#772-775\">Source</a></span><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.map\" class=\"fn\">map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterMap.html\" title=\"struct devela::all::IterMap\">Map</a>&lt;Self, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Map&lt;Self, F&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Takes a closure and creates an iterator which calls that closure on each\nelement. <a href=\"devela/all/trait.Iterator.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#817-820\">Source</a></span><a href=\"#method.for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.for_each\" class=\"fn\">for_each</a>&lt;F&gt;(self, f: F)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>),</div></h4></section></summary><div class='docblock'>Calls a closure on each element of an iterator. <a href=\"devela/all/trait.Iterator.html#method.for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#892-895\">Source</a></span><a href=\"#method.filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.filter\" class=\"fn\">filter</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterFilter.html\" title=\"struct devela::all::IterFilter\">Filter</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Filter&lt;Self, P&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which uses a closure to determine if an element\nshould be yielded. <a href=\"devela/all/trait.Iterator.html#method.filter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#937-940\">Source</a></span><a href=\"#method.filter_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.filter_map\" class=\"fn\">filter_map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterFilterMap.html\" title=\"struct devela::all::IterFilterMap\">FilterMap</a>&lt;Self, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"FilterMap&lt;Self, F&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator that both filters and maps. <a href=\"devela/all/trait.Iterator.html#method.filter_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enumerate\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#984-986\">Source</a></span><a href=\"#method.enumerate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.enumerate\" class=\"fn\">enumerate</a>(self) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterEnumerate.html\" title=\"struct devela::all::IterEnumerate\">Enumerate</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Enumerate&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which gives the current iteration count as well as\nthe next value. <a href=\"devela/all/trait.Iterator.html#method.enumerate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peekable\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1055-1057\">Source</a></span><a href=\"#method.peekable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.peekable\" class=\"fn\">peekable</a>(self) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterPeekable.html\" title=\"struct devela::all::IterPeekable\">Peekable</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Peekable&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which can use the <a href=\"devela/all/struct.IterPeekable.html#method.peek\" title=\"method devela::all::IterPeekable::peek\"><code>peek</code></a> and <a href=\"devela/all/struct.IterPeekable.html#method.peek_mut\" title=\"method devela::all::IterPeekable::peek_mut\"><code>peek_mut</code></a> methods\nto look at the next element of the iterator without consuming it. See\ntheir documentation for more information. <a href=\"devela/all/trait.Iterator.html#method.peekable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1120-1123\">Source</a></span><a href=\"#method.skip_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.skip_while\" class=\"fn\">skip_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterSkipWhile.html\" title=\"struct devela::all::IterSkipWhile\">SkipWhile</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"SkipWhile&lt;Self, P&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that <a href=\"devela/all/trait.Iterator.html#method.skip\" title=\"method devela::all::Iterator::skip\"><code>skip</code></a>s elements based on a predicate. <a href=\"devela/all/trait.Iterator.html#method.skip_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1198-1201\">Source</a></span><a href=\"#method.take_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.take_while\" class=\"fn\">take_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterTakeWhile.html\" title=\"struct devela::all::IterTakeWhile\">TakeWhile</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TakeWhile&lt;Self, P&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that yields elements based on a predicate. <a href=\"devela/all/trait.Iterator.html#method.take_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0\">1.57.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1286-1289\">Source</a></span><a href=\"#method.map_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.map_while\" class=\"fn\">map_while</a>&lt;B, P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterMapWhile.html\" title=\"struct devela::all::IterMapWhile\">MapWhile</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"MapWhile&lt;Self, P&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator that both yields elements based on a predicate and maps. <a href=\"devela/all/trait.Iterator.html#method.map_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1315-1317\">Source</a></span><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.skip\" class=\"fn\">skip</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterSkip.html\" title=\"struct devela::all::IterSkip\">Skip</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Skip&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that skips the first <code>n</code> elements. <a href=\"devela/all/trait.Iterator.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1387-1389\">Source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.take\" class=\"fn\">take</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterTake.html\" title=\"struct devela::all::IterTake\">Take</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Take&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that yields the first <code>n</code> elements, or fewer\nif the underlying iterator ends sooner. <a href=\"devela/all/trait.Iterator.html#method.take\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scan\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1434-1437\">Source</a></span><a href=\"#method.scan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.scan\" class=\"fn\">scan</a>&lt;St, B, F&gt;(self, initial_state: St, f: F) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterScan.html\" title=\"struct devela::all::IterScan\">Scan</a>&lt;Self, St, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Scan&lt;Self, St, F&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut St</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>An iterator adapter which, like <a href=\"devela/all/trait.Iterator.html#method.fold\" title=\"method devela::all::Iterator::fold\"><code>fold</code></a>, holds internal state, but\nunlike <a href=\"devela/all/trait.Iterator.html#method.fold\" title=\"method devela::all::Iterator::fold\"><code>fold</code></a>, produces a new iterator. <a href=\"devela/all/trait.Iterator.html#method.scan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1472-1476\">Source</a></span><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterFlatMap.html\" title=\"struct devela::all::IterFlatMap\">FlatMap</a>&lt;Self, U, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"FlatMap&lt;Self, U, F&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; U,</div></h4></section></summary><div class='docblock'>Creates an iterator that works like map, but flattens nested structure. <a href=\"devela/all/trait.Iterator.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.29.0\">1.29.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1556-1559\">Source</a></span><a href=\"#method.flatten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.flatten\" class=\"fn\">flatten</a>(self) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterFlatten.html\" title=\"struct devela::all::IterFlatten\">Flatten</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Flatten&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that flattens nested structure. <a href=\"devela/all/trait.Iterator.html#method.flatten\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_windows\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1712-1715\">Source</a><a href=\"#method.map_windows\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.map_windows\" class=\"fn\">map_windows</a>&lt;F, R, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"devela/_core/iter/struct.MapWindows.html\" title=\"struct devela::_core::iter::MapWindows\">MapWindows</a>&lt;Self, F, N&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"MapWindows&lt;Self, F, N&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;[Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]) -&gt; R,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_map_windows</code>)</span></div></span><div class='docblock'>Calls the given function <code>f</code> for each contiguous window of size <code>N</code> over\n<code>self</code> and returns an iterator over the outputs of <code>f</code>. Like <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.windows\" title=\"method slice::windows\"><code>slice::windows()</code></a>,\nthe windows during mapping overlap as well. <a href=\"devela/all/trait.Iterator.html#method.map_windows\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fuse\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1774-1776\">Source</a></span><a href=\"#method.fuse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.fuse\" class=\"fn\">fuse</a>(self) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterFuse.html\" title=\"struct devela::all::IterFuse\">Fuse</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Fuse&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which ends after the first <a href=\"devela/all/enum.Option.html#variant.None\" title=\"variant devela::all::Option::None\"><code>None</code></a>. <a href=\"devela/all/trait.Iterator.html#method.fuse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1858-1861\">Source</a></span><a href=\"#method.inspect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterInspect.html\" title=\"struct devela::all::IterInspect\">Inspect</a>&lt;Self, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Inspect&lt;Self, F&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>),</div></h4></section></summary><div class='docblock'>Does something with each element of an iterator, passing the value on. <a href=\"devela/all/trait.Iterator.html#method.inspect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#1895-1897\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adapter for this instance of <code>Iterator</code>. <a href=\"devela/all/trait.Iterator.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2014-2016\">Source</a></span><a href=\"#method.collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.collect\" class=\"fn\">collect</a>&lt;B&gt;(self) -&gt; B<div class=\"where\">where\n    B: <a class=\"trait\" href=\"devela/all/trait.IteratorFrom.html\" title=\"trait devela::all::IteratorFrom\">FromIterator</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms an iterator into a collection. <a href=\"devela/all/trait.Iterator.html#method.collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_collect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2101-2105\">Source</a><a href=\"#method.try_collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.try_collect\" class=\"fn\">try_collect</a>&lt;B&gt;(\n    &amp;mut self,\n) -&gt; &lt;&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Try.html#associatedtype.Residual\" title=\"type devela::_core::ops::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"devela/_core/ops/trait.Residual.html\" title=\"trait devela::_core::ops::Residual\">Residual</a>&lt;B&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Residual.html#associatedtype.TryType\" title=\"type devela::_core::ops::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>,\n    &lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Try.html#associatedtype.Residual\" title=\"type devela::_core::ops::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"devela/_core/ops/trait.Residual.html\" title=\"trait devela::_core::ops::Residual\">Residual</a>&lt;B&gt;,\n    B: <a class=\"trait\" href=\"devela/all/trait.IteratorFrom.html\" title=\"trait devela::all::IteratorFrom\">FromIterator</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Try.html#associatedtype.Output\" title=\"type devela::_core::ops::Try::Output\">Output</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iterator_try_collect</code>)</span></div></span><div class='docblock'>Fallibly transforms an iterator into a collection, short circuiting if\na failure is encountered. <a href=\"devela/all/trait.Iterator.html#method.try_collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2173-2175\">Source</a><a href=\"#method.collect_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.collect_into\" class=\"fn\">collect_into</a>&lt;E&gt;(self, collection: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"devela/all/trait.IteratorExtend.html\" title=\"trait devela::all::IteratorExtend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_collect_into</code>)</span></div></span><div class='docblock'>Collects all the items from an iterator into a collection. <a href=\"devela/all/trait.Iterator.html#method.collect_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2205-2209\">Source</a></span><a href=\"#method.partition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.partition\" class=\"fn\">partition</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(B, B)</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"(B, B)\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a> + <a class=\"trait\" href=\"devela/all/trait.IteratorExtend.html\" title=\"trait devela::all::IteratorExtend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Consumes an iterator, creating two collections from it. <a href=\"devela/all/trait.Iterator.html#method.partition\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2267-2270\">Source</a><a href=\"#method.partition_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.partition_in_place\" class=\"fn\">partition_in_place</a>&lt;'a, T, P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    T: 'a,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a> + <a class=\"trait\" href=\"devela/all/trait.IteratorDoubleEnded.html\" title=\"trait devela::all::IteratorDoubleEnded\">DoubleEndedIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a mut T</a>&gt;,\n    P: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_partition_in_place</code>)</span></div></span><div class='docblock'>Reorders the elements of this iterator <em>in-place</em> according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>.\nReturns the number of <code>true</code> elements found. <a href=\"devela/all/trait.Iterator.html#method.partition_in_place\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partitioned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2324-2327\">Source</a><a href=\"#method.is_partitioned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.is_partitioned\" class=\"fn\">is_partitioned</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_is_partitioned</code>)</span></div></span><div class='docblock'>Checks if the elements of this iterator are partitioned according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>. <a href=\"devela/all/trait.Iterator.html#method.is_partitioned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2418-2422\">Source</a></span><a href=\"#method.try_fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.try_fold\" class=\"fn\">try_fold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class='docblock'>An iterator method that applies a function as long as it returns\nsuccessfully, producing a single, final value. <a href=\"devela/all/trait.Iterator.html#method.try_fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2476-2480\">Source</a></span><a href=\"#method.try_for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.try_for_each\" class=\"fn\">try_for_each</a>&lt;F, R&gt;(&amp;mut self, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>An iterator method that applies a fallible function to each item in the\niterator, stopping at the first error and returning that error. <a href=\"devela/all/trait.Iterator.html#method.try_for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reduce\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2632-2635\">Source</a></span><a href=\"#method.reduce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.reduce\" class=\"fn\">reduce</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Item&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>,</div></h4></section></summary><div class='docblock'>Reduces the elements to a single one, by repeatedly applying a reducing\noperation. <a href=\"devela/all/trait.Iterator.html#method.reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reduce\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2703-2709\">Source</a><a href=\"#method.try_reduce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.try_reduce\" class=\"fn\">try_reduce</a>&lt;R&gt;(\n    &amp;mut self,\n    f: impl <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; R,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Try.html#associatedtype.Residual\" title=\"type devela::_core::ops::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"devela/_core/ops/trait.Residual.html\" title=\"trait devela::_core::ops::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;&lt;R as <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Try.html#associatedtype.Output\" title=\"type devela::_core::ops::Try::Output\">Output</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Residual.html#associatedtype.TryType\" title=\"type devela::_core::ops::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&lt;Output = Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Try.html#associatedtype.Residual\" title=\"type devela::_core::ops::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"devela/_core/ops/trait.Residual.html\" title=\"trait devela::_core::ops::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iterator_try_reduce</code>)</span></div></span><div class='docblock'>Reduces the elements to a single one by repeatedly applying a reducing operation. If the\nclosure returns a failure, the failure is propagated back to the caller immediately. <a href=\"devela/all/trait.Iterator.html#method.try_reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2761-2764\">Source</a></span><a href=\"#method.all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.all\" class=\"fn\">all</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Tests if every element of the iterator matches a predicate. <a href=\"devela/all/trait.Iterator.html#method.all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.any\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2814-2817\">Source</a></span><a href=\"#method.any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.any\" class=\"fn\">any</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Tests if any element of the iterator matches a predicate. <a href=\"devela/all/trait.Iterator.html#method.any\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2876-2879\">Source</a></span><a href=\"#method.find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.find\" class=\"fn\">find</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Item&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element of an iterator that satisfies a predicate. <a href=\"devela/all/trait.Iterator.html#method.find\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2907-2910\">Source</a></span><a href=\"#method.find_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.find_map\" class=\"fn\">find_map</a>&lt;B, F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;B&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;B&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Applies function to the elements of iterator and returns\nthe first non-none result. <a href=\"devela/all/trait.Iterator.html#method.find_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_find\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#2965-2971\">Source</a><a href=\"#method.try_find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.try_find\" class=\"fn\">try_find</a>&lt;R&gt;(\n    &amp;mut self,\n    f: impl <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; R,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Try.html#associatedtype.Residual\" title=\"type devela::_core::ops::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"devela/_core/ops/trait.Residual.html\" title=\"trait devela::_core::ops::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Residual.html#associatedtype.TryType\" title=\"type devela::_core::ops::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"devela/_core/ops/trait.Try.html\" title=\"trait devela::_core::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"devela/_core/ops/trait.Try.html#associatedtype.Residual\" title=\"type devela::_core::ops::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"devela/_core/ops/trait.Residual.html\" title=\"trait devela::_core::ops::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_find</code>)</span></div></span><div class='docblock'>Applies function to the elements of iterator and returns\nthe first true result or the first error. <a href=\"devela/all/trait.Iterator.html#method.try_find\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.position\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3048-3051\">Source</a></span><a href=\"#method.position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.position\" class=\"fn\">position</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;usize&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element in an iterator, returning its index. <a href=\"devela/all/trait.Iterator.html#method.position\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rposition\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3113-3116\">Source</a></span><a href=\"#method.rposition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.rposition\" class=\"fn\">rposition</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;usize&gt;\">ⓘ</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a> + <a class=\"trait\" href=\"devela/all/trait.IteratorExactSize.html\" title=\"trait devela::all::IteratorExactSize\">ExactSizeIterator</a> + <a class=\"trait\" href=\"devela/all/trait.IteratorDoubleEnded.html\" title=\"trait devela::all::IteratorDoubleEnded\">DoubleEndedIterator</a>,</div></h4></section></summary><div class='docblock'>Searches for an element in an iterator from the right, returning its\nindex. <a href=\"devela/all/trait.Iterator.html#method.rposition\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3162-3165\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.max\" class=\"fn\">max</a>(self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Item&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.Ord.html\" title=\"trait devela::all::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the maximum element of an iterator. <a href=\"devela/all/trait.Iterator.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3198-3201\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.min\" class=\"fn\">min</a>(self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Item&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.Ord.html\" title=\"trait devela::all::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the minimum element of an iterator. <a href=\"devela/all/trait.Iterator.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3220-3223\">Source</a></span><a href=\"#method.max_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.max_by_key\" class=\"fn\">max_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Item&gt;\">ⓘ</a><div class=\"where\">where\n    B: <a class=\"trait\" href=\"devela/all/trait.Ord.html\" title=\"trait devela::all::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value from the\nspecified function. <a href=\"devela/all/trait.Iterator.html#method.max_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3253-3256\">Source</a></span><a href=\"#method.max_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.max_by\" class=\"fn\">max_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Item&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value with respect to the\nspecified comparison function. <a href=\"devela/all/trait.Iterator.html#method.max_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3280-3283\">Source</a></span><a href=\"#method.min_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.min_by_key\" class=\"fn\">min_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Item&gt;\">ⓘ</a><div class=\"where\">where\n    B: <a class=\"trait\" href=\"devela/all/trait.Ord.html\" title=\"trait devela::all::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value from the\nspecified function. <a href=\"devela/all/trait.Iterator.html#method.min_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3313-3316\">Source</a></span><a href=\"#method.min_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.min_by\" class=\"fn\">min_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Item&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value with respect to the\nspecified comparison function. <a href=\"devela/all/trait.Iterator.html#method.min_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rev\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3350-3352\">Source</a></span><a href=\"#method.rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.rev\" class=\"fn\">rev</a>(self) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterRev.html\" title=\"struct devela::all::IterRev\">Rev</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Rev&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a> + <a class=\"trait\" href=\"devela/all/trait.IteratorDoubleEnded.html\" title=\"trait devela::all::IteratorDoubleEnded\">DoubleEndedIterator</a>,</div></h4></section></summary><div class='docblock'>Reverses an iterator’s direction. <a href=\"devela/all/trait.Iterator.html#method.rev\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unzip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3386-3390\">Source</a></span><a href=\"#method.unzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.unzip\" class=\"fn\">unzip</a>&lt;A, B, FromA, FromB&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"(FromA, FromB)\">ⓘ</a><div class=\"where\">where\n    FromA: <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a> + <a class=\"trait\" href=\"devela/all/trait.IteratorExtend.html\" title=\"trait devela::all::IteratorExtend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a> + <a class=\"trait\" href=\"devela/all/trait.IteratorExtend.html\" title=\"trait devela::all::IteratorExtend\">Extend</a>&lt;B&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a> + <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class='docblock'>Converts an iterator of pairs into a pair of containers. <a href=\"devela/all/trait.Iterator.html#method.unzip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3417-3420\">Source</a></span><a href=\"#method.copied\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.copied\" class=\"fn\">copied</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterCopied.html\" title=\"struct devela::all::IterCopied\">Copied</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Copied&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a> + 'a,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a> + <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator which copies all of its elements. <a href=\"devela/all/trait.Iterator.html#method.copied\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3465-3468\">Source</a></span><a href=\"#method.cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.cloned\" class=\"fn\">cloned</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterCloned.html\" title=\"struct devela::all::IterCloned\">Cloned</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Cloned&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + 'a,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a> + <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator which <a href=\"devela/code/trait.Clone.html#tymethod.clone\" title=\"method devela::code::Clone::clone\"><code>clone</code></a>s all of its elements. <a href=\"devela/all/trait.Iterator.html#method.cloned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cycle\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3496-3498\">Source</a></span><a href=\"#method.cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.cycle\" class=\"fn\">cycle</a>(self) -&gt; <a class=\"struct\" href=\"devela/all/struct.IterCycle.html\" title=\"struct devela::all::IterCycle\">Cycle</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Cycle&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a> + <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Repeats an iterator endlessly. <a href=\"devela/all/trait.Iterator.html#method.cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.array_chunks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3539-3541\">Source</a><a href=\"#method.array_chunks\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.array_chunks\" class=\"fn\">array_chunks</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;(self) -&gt; <a class=\"struct\" href=\"devela/_core/iter/struct.ArrayChunks.html\" title=\"struct devela::_core::iter::ArrayChunks\">ArrayChunks</a>&lt;Self, N&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ArrayChunks&lt;Self, N&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_array_chunks</code>)</span></div></span><div class='docblock'>Returns an iterator over <code>N</code> elements of the iterator at a time. <a href=\"devela/all/trait.Iterator.html#method.array_chunks\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3575-3578\">Source</a></span><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.sum\" class=\"fn\">sum</a>&lt;S&gt;(self) -&gt; S<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    S: <a class=\"trait\" href=\"devela/all/trait.IteratorSum.html\" title=\"trait devela::all::IteratorSum\">Sum</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Sums the elements of an iterator. <a href=\"devela/all/trait.Iterator.html#method.sum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3607-3610\">Source</a></span><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.product\" class=\"fn\">product</a>&lt;P&gt;(self) -&gt; P<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"devela/all/trait.IteratorProduct.html\" title=\"trait devela::all::IteratorProduct\">Product</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Iterates over the entire iterator, multiplying all the elements <a href=\"devela/all/trait.Iterator.html#method.product\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3628-3632\">Source</a></span><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.cmp\" class=\"fn\">cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.Ord.html\" title=\"trait devela::all::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'><a href=\"devela/all/trait.Ord.html#lexicographical-comparison\" title=\"trait devela::all::Ord\">Lexicographically</a> compares the elements of this <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> with those\nof another. <a href=\"devela/all/trait.Iterator.html#method.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3655-3659\">Source</a><a href=\"#method.cmp_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.cmp_by\" class=\"fn\">cmp_by</a>&lt;I, F&gt;(self, other: I, cmp: F) -&gt; <a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.Item\" title=\"type devela::all::IteratorInto::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'><a href=\"devela/all/trait.Ord.html#lexicographical-comparison\" title=\"trait devela::all::Ord\">Lexicographically</a> compares the elements of this <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"devela/all/trait.Iterator.html#method.cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3711-3715\">Source</a></span><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.partial_cmp\" class=\"fn\">partial_cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.Item\" title=\"type devela::all::IteratorInto::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'><a href=\"devela/all/trait.Ord.html#lexicographical-comparison\" title=\"trait devela::all::Ord\">Lexicographically</a> compares the <a href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\"><code>PartialOrd</code></a> elements of\nthis <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> with those of another. The comparison works like short-circuit\nevaluation, returning a result without comparing the remaining elements.\nAs soon as an order can be determined, the evaluation stops and a result is returned. <a href=\"devela/all/trait.Iterator.html#method.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3747-3751\">Source</a><a href=\"#method.partial_cmp_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.partial_cmp_by\" class=\"fn\">partial_cmp_by</a>&lt;I, F&gt;(self, other: I, partial_cmp: F) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.Item\" title=\"type devela::all::IteratorInto::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'><a href=\"devela/all/trait.Ord.html#lexicographical-comparison\" title=\"trait devela::all::Ord\">Lexicographically</a> compares the elements of this <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"devela/all/trait.Iterator.html#method.partial_cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3780-3784\">Source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.eq\" class=\"fn\">eq</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.Item\" title=\"type devela::all::IteratorInto::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> are equal to those of\nanother. <a href=\"devela/all/trait.Iterator.html#method.eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3803-3807\">Source</a><a href=\"#method.eq_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.eq_by\" class=\"fn\">eq_by</a>&lt;I, F&gt;(self, other: I, eq: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.Item\" title=\"type devela::all::IteratorInto::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'>Determines if the elements of this <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> are equal to those of\nanother with respect to the specified equality function. <a href=\"devela/all/trait.Iterator.html#method.eq_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3835-3839\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.ne\" class=\"fn\">ne</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.Item\" title=\"type devela::all::IteratorInto::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> are not equal to those of\nanother. <a href=\"devela/all/trait.Iterator.html#method.ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3856-3860\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.lt\" class=\"fn\">lt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.Item\" title=\"type devela::all::IteratorInto::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> are <a href=\"devela/all/trait.Ord.html#lexicographical-comparison\" title=\"trait devela::all::Ord\">lexicographically</a>\nless than those of another. <a href=\"devela/all/trait.Iterator.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3877-3881\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.le\" class=\"fn\">le</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.Item\" title=\"type devela::all::IteratorInto::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> are <a href=\"devela/all/trait.Ord.html#lexicographical-comparison\" title=\"trait devela::all::Ord\">lexicographically</a>\nless or equal to those of another. <a href=\"devela/all/trait.Iterator.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3898-3902\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.gt\" class=\"fn\">gt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.Item\" title=\"type devela::all::IteratorInto::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> are <a href=\"devela/all/trait.Ord.html#lexicographical-comparison\" title=\"trait devela::all::Ord\">lexicographically</a>\ngreater than those of another. <a href=\"devela/all/trait.Iterator.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3919-3923\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.ge\" class=\"fn\">ge</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.IteratorInto.html#associatedtype.Item\" title=\"type devela::all::IteratorInto::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\"><code>Iterator</code></a> are <a href=\"devela/all/trait.Ord.html#lexicographical-comparison\" title=\"trait devela::all::Ord\">lexicographically</a>\ngreater than or equal to those of another. <a href=\"devela/all/trait.Iterator.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3948-3951\">Source</a></span><a href=\"#method.is_sorted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.is_sorted\" class=\"fn\">is_sorted</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted. <a href=\"devela/all/trait.Iterator.html#method.is_sorted\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#3974-3977\">Source</a></span><a href=\"#method.is_sorted_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.is_sorted_by\" class=\"fn\">is_sorted_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted using the given comparator function. <a href=\"devela/all/trait.Iterator.html#method.is_sorted_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/iterator.rs.html#4018-4022\">Source</a></span><a href=\"#method.is_sorted_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Iterator.html#method.is_sorted_by_key\" class=\"fn\">is_sorted_by_key</a>&lt;F, K&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>) -&gt; K,\n    K: <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted using the given key extraction\nfunction. <a href=\"devela/all/trait.Iterator.html#method.is_sorted_by_key\">Read more</a></div></details></div></details>","Iterator","devela::_dep::itertools::Merge","devela::_dep::itertools::MergeJoinBy"],["<section id=\"impl-FusedIterator-for-MergeBy%3CI,+J,+F%3E\" class=\"impl\"><a href=\"#impl-FusedIterator-for-MergeBy%3CI,+J,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, J, F&gt; <a class=\"trait\" href=\"devela/all/trait.IteratorFused.html\" title=\"trait devela::all::IteratorFused\">FusedIterator</a> for <a class=\"struct\" href=\"devela/_dep/itertools/struct.MergeBy.html\" title=\"struct devela::_dep::itertools::MergeBy\">MergeBy</a>&lt;I, J, F&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>,\n    J: <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>,\n    F: OrderingOrBool&lt;&lt;I as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>, &lt;J as <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.Iterator.html#associatedtype.Item\" title=\"type devela::all::Iterator::Item\">Item</a>&gt;,</div></h3></section>","FusedIterator","devela::_dep::itertools::Merge","devela::_dep::itertools::MergeJoinBy"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[130153]}