(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DataType64CopyWith%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#impl-Clone-for-DataType64CopyWith%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.DataType.html\" title=\"trait devela::all::DataType\">DataType</a>&gt; <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> for <a class=\"enum\" href=\"devela/all/enum.DataType64CopyWith.html\" title=\"enum devela::all::DataType64CopyWith\">DataType64CopyWith</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"devela/all/enum.DataType64CopyWith.html\" title=\"enum devela::all::DataType64CopyWith\">DataType64CopyWith</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"devela/code/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"devela/code/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","devela::data::table::value::build::DataType64Copy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DataType-for-DataType64CopyWith%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#impl-DataType-for-DataType64CopyWith%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.DataType.html\" title=\"trait devela::all::DataType\">DataType</a>&gt; <a class=\"trait\" href=\"devela/all/trait.DataType.html\" title=\"trait devela::all::DataType\">DataType</a> for <a class=\"enum\" href=\"devela/all/enum.DataType64CopyWith.html\" title=\"enum devela::all::DataType64CopyWith\">DataType64CopyWith</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.DataType.html#associatedtype.Value\" class=\"associatedtype\">Value</a> = <a class=\"enum\" href=\"devela/all/enum.DataValue64CopyWith.html\" title=\"enum devela::all::DataValue64CopyWith\">DataValue64CopyWith</a>&lt;&lt;T as <a class=\"trait\" href=\"devela/all/trait.DataType.html\" title=\"trait devela::all::DataType\">DataType</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.DataType.html#associatedtype.Value\" title=\"type devela::all::DataType::Value\">Value</a>&gt;</h4></section></summary><div class='docblock'>The <code>DataValue</code> type that pairs with this <code>DataType</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_values_are_copy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#method.data_values_are_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.DataType.html#tymethod.data_values_are_copy\" class=\"fn\">data_values_are_copy</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether all values represented by this type are <code>Copy</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_value_is_copy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#method.data_value_is_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.DataType.html#tymethod.data_value_is_copy\" class=\"fn\">data_value_is_copy</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether the specific value for this type is <code>Copy</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_value_default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#method.data_value_default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.DataType.html#tymethod.data_value_default\" class=\"fn\">data_value_default</a>(&amp;self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.DataType.html#associatedtype.Value\" title=\"type devela::all::DataType::Value\">Value</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Value&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the default value for this type, or <code>None</code> if not available.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_value_align\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#method.data_value_align\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.DataType.html#tymethod.data_value_align\" class=\"fn\">data_value_align</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the alignment of the value represented by this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_value_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#method.data_value_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.DataType.html#tymethod.data_value_size\" class=\"fn\">data_value_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the size of the value represented by this type.</div></details></div></details>","DataType","devela::data::table::value::build::DataType64Copy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DataTypeCopy-for-DataType64CopyWith%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#impl-DataTypeCopy-for-DataType64CopyWith%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.DataTypeCopy.html\" title=\"trait devela::all::DataTypeCopy\">DataTypeCopy</a>&gt; <a class=\"trait\" href=\"devela/all/trait.DataTypeCopy.html\" title=\"trait devela::all::DataTypeCopy\">DataTypeCopy</a> for <a class=\"enum\" href=\"devela/all/enum.DataType64CopyWith.html\" title=\"enum devela::all::DataType64CopyWith\">DataType64CopyWith</a>&lt;T&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"devela/all/trait.DataType.html#associatedtype.Value\" title=\"type devela::all::DataType::Value\">Value</a>: <a class=\"trait\" href=\"devela/all/trait.DataValueCopy.html\" title=\"trait devela::all::DataValueCopy\">DataValueCopy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_value_copy_default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/traits.rs.html#62-64\">Source</a><a href=\"#method.data_value_copy_default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.DataTypeCopy.html#method.data_value_copy_default\" class=\"fn\">data_value_copy_default</a>(&amp;self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.DataType.html#associatedtype.Value\" title=\"type devela::all::DataType::Value\">Value</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self::Value&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the default value for this <code>Copy</code> type, or <code>None</code> if not available. <a href=\"devela/all/trait.DataTypeCopy.html#method.data_value_copy_default\">Read more</a></div></details></div></details>","DataTypeCopy","devela::data::table::value::build::DataType64Copy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DataType64CopyWith%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#impl-Debug-for-DataType64CopyWith%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> + <a class=\"trait\" href=\"devela/all/trait.DataType.html\" title=\"trait devela::all::DataType\">DataType</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"enum\" href=\"devela/all/enum.DataType64CopyWith.html\" title=\"enum devela::all::DataType64CopyWith\">DataType64CopyWith</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"devela/_core/fmt/type.Result.html\" title=\"type devela::_core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::data::table::value::build::DataType64Copy"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-DataType64CopyWith%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#impl-PartialEq-for-DataType64CopyWith%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"devela/all/trait.DataType.html\" title=\"trait devela::all::DataType\">DataType</a>&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"devela/all/enum.DataType64CopyWith.html\" title=\"enum devela::all::DataType64CopyWith\">DataType64CopyWith</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"devela/all/enum.DataType64CopyWith.html\" title=\"enum devela::all::DataType64CopyWith\">DataType64CopyWith</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","devela::data::table::value::build::DataType64Copy"],["<section id=\"impl-Copy-for-DataType64CopyWith%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#impl-Copy-for-DataType64CopyWith%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a> + <a class=\"trait\" href=\"devela/all/trait.DataType.html\" title=\"trait devela::all::DataType\">DataType</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a> for <a class=\"enum\" href=\"devela/all/enum.DataType64CopyWith.html\" title=\"enum devela::all::DataType64CopyWith\">DataType64CopyWith</a>&lt;T&gt;</h3></section>","Copy","devela::data::table::value::build::DataType64Copy"],["<section id=\"impl-StructuralPartialEq-for-DataType64CopyWith%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#21-160\">Source</a><a href=\"#impl-StructuralPartialEq-for-DataType64CopyWith%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.DataType.html\" title=\"trait devela::all::DataType\">DataType</a>&gt; <a class=\"trait\" href=\"devela/_core/marker/trait.StructuralPartialEq.html\" title=\"trait devela::_core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"devela/all/enum.DataType64CopyWith.html\" title=\"enum devela::all::DataType64CopyWith\">DataType64CopyWith</a>&lt;T&gt;</h3></section>","StructuralPartialEq","devela::data::table::value::build::DataType64Copy"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[16010]}