(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DstQueue%3CDST,+BUF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/impl_traits.rs.html#22-32\">Source</a><a href=\"#impl-Debug-for-DstQueue%3CDST,+BUF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;BUF: <a class=\"trait\" href=\"devela/all/trait.DstBuf.html\" title=\"trait devela::all::DstBuf\">DstBuf</a>, DST: ?<a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a> + <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"struct\" href=\"devela/all/struct.DstQueue.html\" title=\"struct devela::all::DstQueue\">DstQueue</a>&lt;DST, BUF&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/impl_traits.rs.html#23-31\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"devela/_core/fmt/type.Result.html\" title=\"type devela::_core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::data::dst::queue::DstQueueUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-DstQueue%3CDST,+BUF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/impl_traits.rs.html#16-20\">Source</a><a href=\"#impl-Default-for-DstQueue%3CDST,+BUF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;DST: ?<a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>, BUF: <a class=\"trait\" href=\"devela/all/trait.DstBuf.html\" title=\"trait devela::all::DstBuf\">DstBuf</a> + <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a>&gt; <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a> for <a class=\"struct\" href=\"devela/all/struct.DstQueue.html\" title=\"struct devela::all::DstQueue\">DstQueue</a>&lt;DST, BUF&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/impl_traits.rs.html#17-19\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"devela/code/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","devela::data::dst::queue::DstQueueUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-DstQueue%3CDST,+BUF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/impl_traits.rs.html#11-15\">Source</a><a href=\"#impl-Drop-for-DstQueue%3CDST,+BUF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;DST: ?<a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>, BUF: <a class=\"trait\" href=\"devela/all/trait.DstBuf.html\" title=\"trait devela::all::DstBuf\">DstBuf</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Drop.html\" title=\"trait devela::all::Drop\">Drop</a> for <a class=\"struct\" href=\"devela/all/struct.DstQueue.html\" title=\"struct devela::all::DstQueue\">DstQueue</a>&lt;DST, BUF&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/impl_traits.rs.html#12-14\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"devela/all/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","devela::data::dst::queue::DstQueueUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DstQueue%3C%5BDST%5D,+BUF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#196-269\">Source</a><a href=\"#impl-DstQueue%3C%5BDST%5D,+BUF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;BUF: <a class=\"trait\" href=\"devela/all/trait.DstBuf.html\" title=\"trait devela::all::DstBuf\">DstBuf</a>, DST&gt; <a class=\"struct\" href=\"devela/all/struct.DstQueue.html\" title=\"struct devela::all::DstQueue\">DstQueue</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[DST]</a>, BUF&gt;<div class=\"where\">where\n    (DST, BUF::<a class=\"associatedtype\" href=\"devela/all/trait.DstBuf.html#associatedtype.Inner\" title=\"type devela::all::DstBuf::Inner\">Inner</a>): <a class=\"trait\" href=\"devela/all/trait.MemAligned.html\" title=\"trait devela::all::MemAligned\">MemAligned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#208-214\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.push_cloned\" class=\"fn\">push_cloned</a>(&amp;mut self, slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[DST]</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), ()&gt;\">ⓘ</a><div class=\"where\">where\n    DST: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Pushes a set of items (cloning out of the input <code>slice</code>).</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = DstQueue::&lt;[String], DstArray&lt;usize, <span class=\"number\">8</span>&gt;&gt;::new();\nqueue.push_cloned(<span class=\"kw-2\">&amp;</span>[<span class=\"string\">\"1\"</span>.to_owned()]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_copied\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#224-239\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.push_copied\" class=\"fn\">push_copied</a>(&amp;mut self, slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[DST]</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), ()&gt;\">ⓘ</a><div class=\"where\">where\n    DST: <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Pushes a set of items (copying out of the input <code>slice</code>).</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = DstQueue::&lt;[usize], DstArray&lt;usize, <span class=\"number\">8</span>&gt;&gt;::new();\nqueue.push_copied(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_from_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#250-268\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.push_from_iter\" class=\"fn\">push_from_iter</a>(\n    &amp;mut self,\n    iter: impl <a class=\"trait\" href=\"devela/all/trait.IteratorExactSize.html\" title=\"trait devela::all::IteratorExactSize\">ExactSizeIterator</a>&lt;Item = DST&gt;,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), ()&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Pushes an item, populated from an exact-sized iterator.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>stack = DstQueue::&lt;[u8], DstArray&lt;usize, <span class=\"number\">8</span>&gt;&gt;::new();\nstack.push_from_iter(<span class=\"number\">0</span>..<span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(stack.front().unwrap(), <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]);</code></pre></div>\n</div></details></div></details>",0,"devela::data::dst::queue::DstQueueUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DstQueue%3CDST,+BUF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#14-194\">Source</a><a href=\"#impl-DstQueue%3CDST,+BUF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;DST: ?<a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>, BUF: <a class=\"trait\" href=\"devela/all/trait.DstBuf.html\" title=\"trait devela::all::DstBuf\">DstBuf</a>&gt; <a class=\"struct\" href=\"devela/all/struct.DstQueue.html\" title=\"struct devela::all::DstQueue\">DstQueue</a>&lt;DST, BUF&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#17\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self<div class=\"where\">where\n    BUF: <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructs a new (empty) queue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_buffer\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#21-23\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.with_buffer\" class=\"fn\">with_buffer</a>(data: BUF) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs a new (empty) queue using the given <code>buffer</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_back\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#26-43\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.push_back\" class=\"fn\">push_back</a>&lt;VAL, F&gt;(&amp;mut self, value: VAL, f: F) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, VAL&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), VAL&gt;\">ⓘ</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"devela/all/trait.FnOnce.html\" title=\"trait devela::all::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;VAL</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;DST</a>,\n    (VAL, BUF::<a class=\"associatedtype\" href=\"devela/all/trait.DstBuf.html#associatedtype.Inner\" title=\"type devela::all::DstBuf::Inner\">Inner</a>): <a class=\"trait\" href=\"devela/all/trait.MemAligned.html\" title=\"trait devela::all::MemAligned\">MemAligned</a>,</div></h4></section></summary><div class=\"docblock\"><p>Pushes a value to the end of the queue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compact\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#46-52\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.compact\" class=\"fn\">compact</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Compacts the queue (moving the read position to zero).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#56-58\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.DstQueue.html#tymethod.empty\" class=\"fn\">empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the queue is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_front\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#62-68\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.pop_front\" class=\"fn\">pop_front</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.DstQueuePopHandle.html\" title=\"struct devela::all::DstQueuePopHandle\">DstQueuePopHandle</a>&lt;'_, DST, BUF&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;DstQueuePopHandle&lt;&#39;_, DST, BUF&gt;&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Removes an item from the front of the queue.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.front_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#72-79\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.front_mut\" class=\"fn\">front_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DST</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;&amp;mut DST&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an exclusive reference to the front element.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.front\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#83-90\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.front\" class=\"fn\">front</a>(&amp;self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;DST</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;&amp;DST&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a shared reference to the front element.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#107-109\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.DstQueue.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"devela/all/struct.DstQueueIter.html\" title=\"struct devela::all::DstQueueIter\">DstQueueIter</a>&lt;'_, DST, BUF&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DstQueueIter&lt;&#39;_, DST, BUF&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an immutable iterator\n(yields references to items, in insertion order).</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>list = DstQueue::&lt;str, DstArray&lt;usize, <span class=\"number\">8</span>&gt;&gt;::new();\nlist.push_back_str(<span class=\"string\">\"Hello\"</span>);\nlist.push_back_str(<span class=\"string\">\"world\"</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>it = list.iter();\n<span class=\"macro\">assert_eq!</span>(it.next(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"Hello\"</span>));\n<span class=\"macro\">assert_eq!</span>(it.next(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"world\"</span>));\n<span class=\"macro\">assert_eq!</span>(it.next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#128-130\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"devela/all/struct.DstQueueIterMut.html\" title=\"struct devela::all::DstQueueIterMut\">DstQueueIterMut</a>&lt;'_, DST, BUF&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DstQueueIterMut&lt;&#39;_, DST, BUF&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable iterator.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>list = DstQueue::&lt;[u8], DstArray&lt;usize, <span class=\"number\">8</span>&gt;&gt;::new();\nlist.push_copied(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]);\nlist.push_copied(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">9</span>]);\n<span class=\"kw\">for </span>v <span class=\"kw\">in </span>list.iter_mut() {\n    v[<span class=\"number\">0</span>] -= <span class=\"number\">1</span>;\n}\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>it = list.iter();\n<span class=\"macro\">assert_eq!</span>(it.next(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>][..]));\n<span class=\"macro\">assert_eq!</span>(it.next(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">8</span>][..]));\n<span class=\"macro\">assert_eq!</span>(it.next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#155-193\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.retain\" class=\"fn\">retain</a>&lt;Cb&gt;(&amp;mut self, cb: Cb)<div class=\"where\">where\n    Cb: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DST</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes any items that don’t meet a predicate.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">trait </span>DebugAny: <span class=\"lifetime\">'static </span>+ Any + Debug { <span class=\"kw\">fn </span>as_any(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; <span class=\"kw-2\">&amp;</span><span class=\"kw\">dyn </span>Any; }\n<span class=\"kw\">impl</span>&lt;DST: Debug + Any + <span class=\"lifetime\">'static</span>&gt; DebugAny <span class=\"kw\">for </span>DST { <span class=\"kw\">fn </span>as_any(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; <span class=\"kw-2\">&amp;</span><span class=\"kw\">dyn </span>Any { <span class=\"self\">self </span>} }\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>list = {\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>list: DstQueue&lt;<span class=\"kw\">dyn </span>DebugAny, DstArray&lt;usize, <span class=\"number\">8</span>&gt;&gt; = DstQueue::new();\n    list.push_back(<span class=\"number\">1234</span>, |v| v);\n    list.push_back(<span class=\"number\">234.5f32</span>, |v| v);\n    list.push_back(<span class=\"number\">5678</span>, |v| v);\n    list.push_back(<span class=\"number\">0.5f32</span>, |v| v);\n    list\n};\nlist.retain(|v| (<span class=\"kw-2\">*</span>v).as_any().downcast_ref::&lt;f32&gt;().is_some());\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>it = list.iter().map(|v| <span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, v));\n<span class=\"macro\">assert_eq!</span>(it.next(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"234.5\"</span>.to_owned()));\n<span class=\"macro\">assert_eq!</span>(it.next(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"0.5\"</span>.to_owned()));\n<span class=\"macro\">assert_eq!</span>(it.next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>",0,"devela::data::dst::queue::DstQueueUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DstQueue%3Cstr,+BUF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#271-285\">Source</a><a href=\"#impl-DstQueue%3Cstr,+BUF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;BUF: <a class=\"trait\" href=\"devela/all/trait.DstBuf.html\" title=\"trait devela::all::DstBuf\">DstBuf</a>&gt; <a class=\"struct\" href=\"devela/all/struct.DstQueue.html\" title=\"struct devela::all::DstQueue\">DstQueue</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, BUF&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_back_str\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/dst/queue/methods.rs.html#273-284\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.DstQueue.html#tymethod.push_back_str\" class=\"fn\">push_back_str</a>(&amp;mut self, string: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), ()&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Pushes the contents of a <code>string</code> slice as an item onto the stack.</p>\n</div></details></div></details>",0,"devela::data::dst::queue::DstQueueUsize"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[25889]}