(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#24-29\">Source</a><a href=\"#impl-Add-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Add.html\" title=\"trait devela::all::Add\">Add</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Add.html\" title=\"trait devela::all::Add\">Add</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#25\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#26-28\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Add.html#associatedtype.Output\" title=\"type devela::all::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"devela/all/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26Vector%3CT,+D%3E%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#30-34\">Source</a><a href=\"#impl-AddAssign%3C%26Vector%3CT,+D%3E%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Add.html\" title=\"trait devela::all::Add\">Add</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.AddAssign.html\" title=\"trait devela::all::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#31-33\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;Self)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"devela/all/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&Vector<T, D>>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#11-15\">Source</a><a href=\"#impl-Clone-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#12-14\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"devela/code/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"devela/code/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstDefault-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#32-39\">Source</a><a href=\"#impl-ConstDefault-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.ConstDefault.html\" title=\"trait devela::code::ConstDefault\">ConstDefault</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/code/trait.ConstDefault.html\" title=\"trait devela::code::ConstDefault\">ConstDefault</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#35-38\">Source</a><a href=\"#associatedconstant.DEFAULT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/code/trait.ConstDefault.html#associatedconstant.DEFAULT\" class=\"constant\">DEFAULT</a>: Self</h4></section></summary><div class=\"docblock\"><p>Returns a Vector, allocated in the stack,\nusing the default value to fill the data.</p>\n</div></details></div></details>","ConstDefault","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#42-46\">Source</a><a href=\"#impl-Debug-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#43-45\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"devela/_core/fmt/type.Result.html\" title=\"type devela::_core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#22-29\">Source</a><a href=\"#impl-Default-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#25-28\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a <code>Vector</code>, allocated in the stack,\nusing the default value to fill the data.</p>\n</div></details></div></details>","Default","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26T%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#114-119\">Source</a><a href=\"#impl-Div%3C%26T%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Div.html\" title=\"trait devela::all::Div\">Div</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Div.html\" title=\"trait devela::all::Div\">Div</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#115\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#116-118\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scalar: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Div.html#associatedtype.Output\" title=\"type devela::all::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"devela/all/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&T>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#103-108\">Source</a><a href=\"#impl-Div%3CT%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Div.html\" title=\"trait devela::all::Div\">Div</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Div.html\" title=\"trait devela::all::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#104\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#105-107\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scalar: T) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Div.html#associatedtype.Output\" title=\"type devela::all::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"devela/all/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26T%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#120-124\">Source</a><a href=\"#impl-DivAssign%3C%26T%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Div.html\" title=\"trait devela::all::Div\">Div</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.DivAssign.html\" title=\"trait devela::all::DivAssign\">DivAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#121-123\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scalar: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"devela/all/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&T>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#109-113\">Source</a><a href=\"#impl-DivAssign%3CT%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Div.html\" title=\"trait devela::all::Div\">Div</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.DivAssign.html\" title=\"trait devela::all::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#110-112\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scalar: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"devela/all/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#57-61\">Source</a><a href=\"#impl-Hash-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Hash.html\" title=\"trait devela::all::Hash\">Hash</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Hash.html\" title=\"trait devela::all::Hash\">Hash</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#58-60\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;HR: <a class=\"trait\" href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut HR</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\"><code>Hasher</code></a>. <a href=\"devela/all/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\"><code>Hasher</code></a>. <a href=\"devela/all/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26T%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#81-86\">Source</a><a href=\"#impl-Mul%3C%26T%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Mul.html\" title=\"trait devela::all::Mul\">Mul</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Mul.html\" title=\"trait devela::all::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#82\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#83-85\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scalar: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Mul.html#associatedtype.Output\" title=\"type devela::all::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"devela/all/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&T>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#70-75\">Source</a><a href=\"#impl-Mul%3CT%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Mul.html\" title=\"trait devela::all::Mul\">Mul</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Mul.html\" title=\"trait devela::all::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#71\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#72-74\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scalar: T) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Mul.html#associatedtype.Output\" title=\"type devela::all::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"devela/all/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26T%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#87-91\">Source</a><a href=\"#impl-MulAssign%3C%26T%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Mul.html\" title=\"trait devela::all::Mul\">Mul</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.MulAssign.html\" title=\"trait devela::all::MulAssign\">MulAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#88-90\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scalar: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"devela/all/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&T>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#76-80\">Source</a><a href=\"#impl-MulAssign%3CT%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Mul.html\" title=\"trait devela::all::Mul\">Mul</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.MulAssign.html\" title=\"trait devela::all::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#77-79\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scalar: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"devela/all/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/num.rs.html#12-20\">Source</a><a href=\"#impl-Num-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/num/trait.Num.html\" title=\"trait devela::num::Num\">Num</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/num/trait.Num.html\" title=\"trait devela::num::Num\">Num</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/num.rs.html#13\">Source</a><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/num/trait.Num.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; D]</a></h4></section></summary><div class='docblock'>The internal representation of this numeric type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Out\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/num.rs.html#14\">Source</a><a href=\"#associatedtype.Out\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/num/trait.Num.html#associatedtype.Out\" class=\"associatedtype\">Out</a> = <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The output type for operations.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Rhs\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/num.rs.html#15\">Source</a><a href=\"#associatedtype.Rhs\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/num/trait.Num.html#associatedtype.Rhs\" class=\"associatedtype\">Rhs</a> = <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The right hand side type for operations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/num.rs.html#17-19\">Source</a><a href=\"#method.num_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#tymethod.num_into\" class=\"fn\">num_into</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Inner\" title=\"type devela::num::Num::Inner\">Inner</a></h4></section></summary><div class='docblock'>Returns the inner <code>self</code> representation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#56-57\">Source</a><a href=\"#method.num_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_from\" class=\"fn\">num_from</a>(value: Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Inner\" title=\"type devela::num::Num::Inner\">Inner</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns <code>Self</code> if given a valid <code>value</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_from_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#59-60\">Source</a><a href=\"#method.num_from_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_from_ref\" class=\"fn\">num_from_ref</a>(value: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Inner\" title=\"type devela::num::Num::Inner\">Inner</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns <code>Self</code> if given a valid <code>&amp;value</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#63\">Source</a><a href=\"#method.num_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_set\" class=\"fn\">num_set</a>(&amp;mut self, value: Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Inner\" title=\"type devela::num::Num::Inner\">Inner</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Sets <code>self</code> to the given valid <code>value</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_set_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#65\">Source</a><a href=\"#method.num_set_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_set_ref\" class=\"fn\">num_set_ref</a>(&amp;mut self, value: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Inner\" title=\"type devela::num::Num::Inner\">Inner</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Sets <code>self</code> to the given valid <code>&amp;value</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#70\">Source</a><a href=\"#method.num_is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_is_zero\" class=\"fn\">num_is_zero</a>(&amp;self) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is zero.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_get_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#72\">Source</a><a href=\"#method.num_get_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_get_zero\" class=\"fn\">num_get_zero</a>() -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns the number zero.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#74\">Source</a><a href=\"#method.num_set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_set_zero\" class=\"fn\">num_set_zero</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Sets <code>self</code> to <code>0</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#77\">Source</a><a href=\"#method.num_is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_is_one\" class=\"fn\">num_is_one</a>(&amp;self) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is one.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_get_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#79\">Source</a><a href=\"#method.num_get_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_get_one\" class=\"fn\">num_get_one</a>() -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns the number one.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#81\">Source</a><a href=\"#method.num_set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_set_one\" class=\"fn\">num_set_one</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Sets the number to one.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#86\">Source</a><a href=\"#method.num_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_add\" class=\"fn\">num_add</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Computes <code>self + rhs</code> (addition).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#88\">Source</a><a href=\"#method.num_ref_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_add\" class=\"fn\">num_ref_add</a>(&amp;self, rhs: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;</h4></section></summary><div class='docblock'><em>Like <a href=\"devela/num/trait.Num.html#method.num_add\"><code>num_add</code></a> but takes the arguments by reference.</em></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#90\">Source</a><a href=\"#method.num_ref_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_add_assign\" class=\"fn\">num_ref_add_assign</a>(&amp;mut self, rhs: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Computes <code>&amp;mut self += rhs;</code> (addition).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#93\">Source</a><a href=\"#method.num_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_sub\" class=\"fn\">num_sub</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Computes <code>self - rhs</code> (subtraction).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#95\">Source</a><a href=\"#method.num_ref_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_sub\" class=\"fn\">num_ref_sub</a>(&amp;self, rhs: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;</h4></section></summary><div class='docblock'><em>Like <a href=\"devela/num/trait.Num.html#method.num_sub\"><code>num_sub</code></a> but takes the arguments by reference.</em></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#97\">Source</a><a href=\"#method.num_ref_sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_sub_assign\" class=\"fn\">num_ref_sub_assign</a>(&amp;mut self, rhs: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Computes <code>&amp;mut self -= rhs;</code> (subtraction).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#100\">Source</a><a href=\"#method.num_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_mul\" class=\"fn\">num_mul</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Computes <code>self * rhs</code> (multiplication).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#102\">Source</a><a href=\"#method.num_ref_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_mul\" class=\"fn\">num_ref_mul</a>(&amp;self, rhs: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;</h4></section></summary><div class='docblock'><em>Like <a href=\"devela/num/trait.Num.html#method.num_mul\"><code>num_mul</code></a> but takes the arguments by reference.</em></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#104\">Source</a><a href=\"#method.num_ref_mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_mul_assign\" class=\"fn\">num_ref_mul_assign</a>(&amp;mut self, rhs: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Computes <code>&amp;mut self *= rhs;</code> (multiplication).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#107\">Source</a><a href=\"#method.num_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_div\" class=\"fn\">num_div</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Computes <code>self / rhs</code> (division).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#109\">Source</a><a href=\"#method.num_ref_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_div\" class=\"fn\">num_ref_div</a>(&amp;self, rhs: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;</h4></section></summary><div class='docblock'><em>Like <a href=\"devela/num/trait.Num.html#method.num_div\"><code>num_div</code></a> but takes the arguments by reference.</em></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#111\">Source</a><a href=\"#method.num_ref_div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_div_assign\" class=\"fn\">num_ref_div_assign</a>(&amp;mut self, rhs: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Computes <code>&amp;mut self /= rhs;</code> (division).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#114\">Source</a><a href=\"#method.num_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_rem\" class=\"fn\">num_rem</a>(self, rhs: Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Computes <code>self % rhs</code> (remainder).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#116\">Source</a><a href=\"#method.num_ref_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_rem\" class=\"fn\">num_ref_rem</a>(&amp;self, rhs: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;</h4></section></summary><div class='docblock'><em>Like <a href=\"devela/num/trait.Num.html#method.num_rem\"><code>num_rem</code></a> but takes the arguments by reference.</em></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#118\">Source</a><a href=\"#method.num_ref_rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_rem_assign\" class=\"fn\">num_ref_rem_assign</a>(&amp;mut self, rhs: &amp;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Rhs\" title=\"type devela::num::Num::Rhs\">Rhs</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Computes <code>&amp;mut self %= rhs;</code> (remainder).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#121\">Source</a><a href=\"#method.num_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_neg\" class=\"fn\">num_neg</a>(self) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Computes <code>-self</code> (additive inverse).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#123\">Source</a><a href=\"#method.num_ref_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_neg\" class=\"fn\">num_ref_neg</a>(&amp;self) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;</h4></section></summary><div class='docblock'><em>Like <a href=\"devela/num/trait.Num.html#method.num_neg\"><code>num_neg</code></a> but takes the arguments by reference.</em></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#126\">Source</a><a href=\"#method.num_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_abs\" class=\"fn\">num_abs</a>(self) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Computes <code>|self|</code> (absolute value).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ref_abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/traits/mod.rs.html#128\">Source</a><a href=\"#method.num_ref_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/num/trait.Num.html#method.num_ref_abs\" class=\"fn\">num_ref_abs</a>(&amp;self) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/num/trait.Num.html#associatedtype.Out\" title=\"type devela::num::Num::Out\">Out</a>&gt;</h4></section></summary><div class='docblock'><em>Like <a href=\"devela/num/trait.Num.html#method.num_abs\"><code>num_abs</code></a> but takes the arguments by reference.</em></div></details></div></details>","Num","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumVector-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/num.rs.html#8-10\">Source</a><a href=\"#impl-NumVector-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/num/trait.Num.html\" title=\"trait devela::num::Num\">Num</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.NumVector.html\" title=\"trait devela::all::NumVector\">NumVector</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/num.rs.html#9\">Source</a><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.NumVector.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = T</h4></section></summary><div class='docblock'>The associated scalar type.</div></details></div></details>","NumVector","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#49-53\">Source</a><a href=\"#impl-PartialEq-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#50-52\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#46-51\">Source</a><a href=\"#impl-Sub-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Sub.html\" title=\"trait devela::all::Sub\">Sub</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Sub.html\" title=\"trait devela::all::Sub\">Sub</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#47\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#48-50\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Sub.html#associatedtype.Output\" title=\"type devela::all::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"devela/all/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26Vector%3CT,+D%3E%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#52-56\">Source</a><a href=\"#impl-SubAssign%3C%26Vector%3CT,+D%3E%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Sub.html\" title=\"trait devela::all::Sub\">Sub</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.SubAssign.html\" title=\"trait devela::all::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#53-55\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;Self)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"devela/all/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&Vector<T, D>>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryInto%3CBox%3Cdyn+NumVector%3CInner+=+%5BT;+D%5D,+Out+=+Vector%3CT,+D%3E,+Rhs+=+Vector%3CT,+D%3E,+Scalar+=+T%3E%3E%3E-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/mod.rs.html#58-69\">Source</a><a href=\"#impl-TryInto%3CBox%3Cdyn+NumVector%3CInner+=+%5BT;+D%5D,+Out+=+Vector%3CT,+D%3E,+Rhs+=+Vector%3CT,+D%3E,+Scalar+=+T%3E%3E%3E-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/num/trait.Num.html\" title=\"trait devela::num::Num\">Num</a> + 'static, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/code/trait.TryInto.html\" title=\"trait devela::code::TryInto\">TryInto</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Box.html\" title=\"struct devela::all::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"devela/all/trait.NumVector.html\" title=\"trait devela::all::NumVector\">NumVector</a>&lt;Out = <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;, Scalar = T, Rhs = <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;, Inner = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; D]</a>&gt;&gt;&gt; for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/mod.rs.html#62\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/code/trait.TryInto.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"devela/num/enum.NumError.html\" title=\"enum devela::num::NumError\">NumError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/mod.rs.html#64-68\">Source</a><a href=\"#method.try_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.TryInto.html#tymethod.try_into\" class=\"fn\">try_into</a>(\n    self,\n) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">Result</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Box.html\" title=\"struct devela::all::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"devela/all/trait.NumVector.html\" title=\"trait devela::all::NumVector\">NumVector</a>&lt;Scalar = T, Rhs = Self, Inner = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; D]</a>, Out = Self&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryInto<Box<dyn NumVector<Out = Vector<T, D>, Scalar = T, Rhs = Vector<T, D>, Inner = [T; D]>>>","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#16-21\">Source</a><a href=\"#impl-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#18-20\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.new\" class=\"fn\">new</a>(coords: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; D]</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a new <code>Vector</code> from the given <code>coords</code> array.</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#14-23\">Source</a><a href=\"#impl-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Add.html\" title=\"trait devela::all::Add\">Add</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_add\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#16-22\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.clone_add\" class=\"fn\">clone_add</a>(&amp;self, other: &amp;Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Adds two vectors together</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#36-45\">Source</a><a href=\"#impl-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Sub.html\" title=\"trait devela::all::Sub\">Sub</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#38-44\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.clone_sub\" class=\"fn\">clone_sub</a>(&amp;self, other: &amp;Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Subtracts two vectors together.</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#60-69\">Source</a><a href=\"#impl-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Mul.html\" title=\"trait devela::all::Mul\">Mul</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_mul_scalar\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#62-68\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.clone_mul_scalar\" class=\"fn\">clone_mul_scalar</a>(&amp;self, scalar: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Multiplies a vector by a scalar.</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#93-102\">Source</a><a href=\"#impl-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Div.html\" title=\"trait devela::all::Div\">Div</a>&lt;Output = T&gt;, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_div_scalar\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/ops.rs.html#95-101\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.clone_div_scalar\" class=\"fn\">clone_div_scalar</a>(&amp;self, scalar: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Divides a vector by a scalar.</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cf32,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cf32,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-f32\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-f32\">§</a>Methods for 3d vectors represented using <code>f32</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.cross\" class=\"fn\">cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cf64,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cf64,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-f64\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-f64\">§</a>Methods for 3d vectors represented using <code>f64</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.cross\" class=\"fn\">cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cf64,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cf64,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>, D&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-vectors-represented-using-f64\"><a class=\"doc-anchor\" href=\"#methods-for-vectors-represented-using-f64\">§</a>Methods for vectors represented using <code>f64</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.Vector.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_float_f64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>A <code>Vector</code> with all ones.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.Vector.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_float_f64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>A <code>Vector</code> with all zeros.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NEG_ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.Vector.html#associatedconstant.NEG_ONE\" class=\"constant\">NEG_ONE</a>: Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_float_f64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>A <code>Vector</code> with all negative ones.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.normalize\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.normalize\" class=\"fn\">normalize</a>(&amp;self) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_float_f64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Returns the normalized vector, as a <em>unit vector</em>.</p>\n<p>$$\n\\bm{n} = \\widehat{\\bm{a}} = \\frac{1}{d}\\thinspace\\bm{a} =\n\\frac{\\bm{a}}{|\\bm{a}|}\n$$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.magnitude\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.magnitude\" class=\"fn\">magnitude</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"f64\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_float_f64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Calculates the magnitude of the vector.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$ \\large |\\vec{V}| = \\sqrt{V_0^2 + … + V_n^2} $$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.magnitude_sq\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.magnitude_sq\" class=\"fn\">magnitude_sq</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"f64\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_float_f64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Calculates the squared magnitude of the vector.</p>\n<p>This is faster than calculating the magnitude,\nwhich is useful for comparisons.</p>\n<h5 id=\"formula-1\"><a class=\"doc-anchor\" href=\"#formula-1\">§</a>Formula</h5>\n<p>$$ \\large |\\vec{V}|^2 = V_0^2 + … + V_n^2 $$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.add\" class=\"fn\">add</a>(self, other: Self) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_float_f64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Adds two vectors together.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_float_f64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Subtracts another vector from this vector.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dot\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Vector.html#tymethod.dot\" class=\"fn\">dot</a>(self, other: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"f64\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_float_f64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Computes the dot product of two vectors.</p>\n<p>That is the magnitude of one vector in the direction of another.</p>\n<p>Also known as the <em>inner produc</em> or the <em>scalar product</em>.</p>\n<h5 id=\"formula-2\"><a class=\"doc-anchor\" href=\"#formula-2\">§</a>Formula</h5>\n<p>$$\n\\large \\vec{a}\\cdot\\vec{b} =\n\\begin{bmatrix} a_0 \\cr … \\cr a_n \\end{bmatrix} \\cdot\n\\begin{bmatrix} b_0 \\cr … \\cr b_n \\end{bmatrix} =\na_0 b_0 + … + a_n b_n\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Ci128,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Ci128,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-i128\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-i128\">§</a>Methods for 3d vectors represented using <code>i128</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Ci16,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Ci16,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-i16\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-i16\">§</a>Methods for 3d vectors represented using <code>i16</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Ci32,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Ci32,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-i32\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-i32\">§</a>Methods for 3d vectors represented using <code>i32</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Ci64,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Ci64,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-i64\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-i64\">§</a>Methods for 3d vectors represented using <code>i64</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Ci64,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Ci64,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, D&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-vectors-represented-using-i64-signed\"><a class=\"doc-anchor\" href=\"#methods-for-vectors-represented-using-i64-signed\">§</a>Methods for vectors represented using <code>i64</code>, signed.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.NEG_ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.Vector.html#associatedconstant.NEG_ONE\" class=\"constant\">NEG_ONE</a>: Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>A <code>Vector</code> with all negative ones.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_magnitude_floor\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_magnitude_floor\" class=\"fn\">c_magnitude_floor</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"i64\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Calculates the floored magnitude of the vector.</p>\n<p>It could underestimate the true magnitude.</p>\n<h5 id=\"features\"><a class=\"doc-anchor\" href=\"#features\">§</a>Features</h5>\n<p>This will only be <em>const</em> if the “_cmp_i64” feature is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_magnitude_ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_magnitude_ceil\" class=\"fn\">c_magnitude_ceil</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"i64\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Calculates the ceiled magnitude of the vector.</p>\n<p>It could overestimate the true magnitude.</p>\n<h5 id=\"features-1\"><a class=\"doc-anchor\" href=\"#features-1\">§</a>Features</h5>\n<p>This will only be <em>const</em> if the “_cmp_i64” feature is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_magnitude_round\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_magnitude_round\" class=\"fn\">c_magnitude_round</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"i64\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Calculates the rounded magnitude of the vector.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Can panic if we reach a <code>i128</code> value close to its maximum during operations.</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Ci64,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Ci64,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, D&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-vectors-represented-using-i64\"><a class=\"doc-anchor\" href=\"#methods-for-vectors-represented-using-i64\">§</a>Methods for vectors represented using <code>i64</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.Vector.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>A <code>Vector</code> with all ones.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.Vector.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>A <code>Vector</code> with all zeros.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_normalize_with\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_normalize_with\" class=\"fn\">c_normalize_with</a>(self, magnitude: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Returns the normalized vector, using the given vector <code>magnitude</code>.</p>\n<p>$$\n\\bm{n} = \\widehat{\\bm{a}} = \\frac{1}{d}\\thinspace\\bm{a} =\n\\frac{\\bm{a}}{|\\bm{a}|}\n$$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_magnitude_sq\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_magnitude_sq\" class=\"fn\">c_magnitude_sq</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"i64\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Calculates the magnitude of the vector (squared).</p>\n<p>This is faster than calculating the magnitude,\nwhich is useful for comparisons.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$ \\large |\\vec{V}|^2 = V_0^2 + … + V_n^2 $$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_add\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_add\" class=\"fn\">c_add</a>(self, other: Self) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Adds two vectors together, in compile-time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_sub\" class=\"fn\">c_sub</a>(self, other: Self) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Subtracts another vector from this vector, in compile-time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_dot\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_dot\" class=\"fn\">c_dot</a>(self, other: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"i64\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Computes the dot product of two vectors, in compile-time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_scalar_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_scalar_mul\" class=\"fn\">c_scalar_mul</a>(self, scalar: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Multiplies each element of the vector by a scalar, in compile-time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_scalar_div\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_scalar_div\" class=\"fn\">c_scalar_div</a>(self, scalar: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_i64</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Divides each element of the vector by a scalar, in compile-time.</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Ci8,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Ci8,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-i8\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-i8\">§</a>Methods for 3d vectors represented using <code>i8</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cisize,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cisize,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-isize\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-isize\">§</a>Methods for 3d vectors represented using <code>isize</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cu128,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cu128,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-u128\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-u128\">§</a>Methods for 3d vectors represented using <code>u128</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cu16,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cu16,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-u16\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-u16\">§</a>Methods for 3d vectors represented using <code>u16</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cu32,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cu32,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-u32\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-u32\">§</a>Methods for 3d vectors represented using <code>u32</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cu32,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cu32,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, D&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-vectors-represented-using-u32-unsigned\"><a class=\"doc-anchor\" href=\"#methods-for-vectors-represented-using-u32-unsigned\">§</a>Methods for vectors represented using <code>u32</code>, unsigned.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_magnitude_floor\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_magnitude_floor\" class=\"fn\">c_magnitude_floor</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"u32\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Calculates the floored magnitude of the vector.</p>\n<p>It could underestimate the true magnitude.</p>\n<h5 id=\"features\"><a class=\"doc-anchor\" href=\"#features\">§</a>Features</h5>\n<p>This will only be <em>const</em> if the “_cmp_u32” feature is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_magnitude_ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_magnitude_ceil\" class=\"fn\">c_magnitude_ceil</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"u32\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Calculates the ceiled magnitude of the vector.</p>\n<p>It could overestimate the true magnitude.</p>\n<h5 id=\"features-1\"><a class=\"doc-anchor\" href=\"#features-1\">§</a>Features</h5>\n<p>This will only be <em>const</em> if the “_cmp_u32” feature is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_magnitude_round\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_magnitude_round\" class=\"fn\">c_magnitude_round</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"u32\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Calculates the rounded magnitude of the vector.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Can panic if we reach a <code>u128</code> value close to its maximum during operations.</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cu32,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cu32,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, D&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-vectors-represented-using-u32\"><a class=\"doc-anchor\" href=\"#methods-for-vectors-represented-using-u32\">§</a>Methods for vectors represented using <code>u32</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.Vector.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>A <code>Vector</code> with all ones.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.Vector.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>A <code>Vector</code> with all zeros.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_normalize_with\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_normalize_with\" class=\"fn\">c_normalize_with</a>(self, magnitude: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Returns the normalized vector, using the given vector <code>magnitude</code>.</p>\n<p>$$\n\\bm{n} = \\widehat{\\bm{a}} = \\frac{1}{d}\\thinspace\\bm{a} =\n\\frac{\\bm{a}}{|\\bm{a}|}\n$$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_magnitude_sq\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_magnitude_sq\" class=\"fn\">c_magnitude_sq</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"u32\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Calculates the magnitude of the vector (squared).</p>\n<p>This is faster than calculating the magnitude,\nwhich is useful for comparisons.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$ \\large |\\vec{V}|^2 = V_0^2 + … + V_n^2 $$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_add\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_add\" class=\"fn\">c_add</a>(self, other: Self) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Adds two vectors together, in compile-time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_sub\" class=\"fn\">c_sub</a>(self, other: Self) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Subtracts another vector from this vector, in compile-time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_dot\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_dot\" class=\"fn\">c_dot</a>(self, other: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"u32\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Computes the dot product of two vectors, in compile-time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_scalar_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_scalar_mul\" class=\"fn\">c_scalar_mul</a>(self, scalar: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Multiplies each element of the vector by a scalar, in compile-time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_scalar_div\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_scalar_div\" class=\"fn\">c_scalar_div</a>(self, scalar: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_int_u32</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Divides each element of the vector by a scalar, in compile-time.</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cu64,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cu64,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-u64\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-u64\">§</a>Methods for 3d vectors represented using <code>u64</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cu8,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cu8,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-u8\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-u8\">§</a>Methods for 3d vectors represented using <code>u8</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector%3Cusize,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><a href=\"#impl-Vector%3Cusize,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, 3&gt;</h3><div class=\"docblock\"><h4 id=\"methods-for-3d-vectors-represented-using-usize\"><a class=\"doc-anchor\" href=\"#methods-for-3d-vectors-represented-using-usize\">§</a>Methods for 3d vectors represented using <code>usize</code>.</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.c_cross\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/methods.rs.html#429\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Vector.html#tymethod.c_cross\" class=\"fn\">c_cross</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the cross product of two vectors.</p>\n<p>That is the vector orthogonal to both vectors.</p>\n<p>Also known as the <em>exterior product</em> or the <em>vector product</em>.</p>\n<p>It is only defined for 3-dimensional vectors, and it is not\ncommutative: $\\vec{a}\\times\\vec{b} = -(\\vec{b}\\times\\vec{a})$.</p>\n<h5 id=\"formula\"><a class=\"doc-anchor\" href=\"#formula\">§</a>Formula</h5>\n<p>$$\n\\bm{a} \\times \\bm{b} =\n\\begin{bmatrix} a_x \\cr a_y \\cr a_z \\end{bmatrix} \\times\n\\begin{bmatrix} b_x \\cr b_y \\cr b_z \\end{bmatrix} =\n\\begin{bmatrix}\na_y b_z - a_z b_y \\cr\na_z b_x - a_x b_z \\cr\na_x b_y - a_y b_x\n\\end{bmatrix}\n$$</p>\n</div></details></div></details>",0,"devela::num::geom::linear::vector::Vector3d"],["<section id=\"impl-Copy-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#18\">Source</a><a href=\"#impl-Copy-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section>","Copy","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"],["<section id=\"impl-Eq-for-Vector%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/geom/linear/vector/array/impl_traits.rs.html#55\">Source</a><a href=\"#impl-Eq-for-Vector%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Eq.html\" title=\"trait devela::all::Eq\">Eq</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Eq.html\" title=\"trait devela::all::Eq\">Eq</a> for <a class=\"struct\" href=\"devela/all/struct.Vector.html\" title=\"struct devela::all::Vector\">Vector</a>&lt;T, D&gt;</h3></section>","Eq","devela::num::geom::linear::vector::Vector2d","devela::num::geom::linear::vector::Vector3d"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[141067]}