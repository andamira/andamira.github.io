(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Adler32Hash-for-%26str\" class=\"impl\"><a href=\"#impl-Adler32Hash-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Adler32Hash for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"u32\">ⓘ</a></h4></section></summary><div class='docblock'>Feeds this value into <code>Adler32</code>.</div></details></div></details>","Adler32Hash","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBStr-for-%26str\" class=\"impl\"><a href=\"#impl-AsBStr-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.AsBStr.html\" title=\"trait devela::_dep::winnow::stream::AsBStr\">AsBStr</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bstr\" class=\"method trait-impl\"><a href=\"#method.as_bstr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.AsBStr.html#tymethod.as_bstr\" class=\"fn\">as_bstr</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Casts the input type to a byte slice</div></details></div></details>","AsBStr","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitSized%3C%7B%24PTR_BITS+*+2%7D%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#234\">Source</a><a href=\"#impl-BitSized%3C%7B%24PTR_BITS+*+2%7D%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitSized.html\" title=\"trait devela::all::BitSized\">BitSized</a>&lt;{$PTR_BITS * 2}&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BIT_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#55-61\">Source</a><a href=\"#associatedconstant.BIT_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/all/trait.BitSized.html#associatedconstant.BIT_SIZE\" class=\"constant\">BIT_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The bit size of this type (only the relevant data part, without padding). <a href=\"devela/all/trait.BitSized.html#associatedconstant.BIT_SIZE\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_BYTE_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#70-76\">Source</a><a href=\"#associatedconstant.MIN_BYTE_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/all/trait.BitSized.html#associatedconstant.MIN_BYTE_SIZE\" class=\"constant\">MIN_BYTE_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The rounded up byte size for this type. <a href=\"devela/all/trait.BitSized.html#associatedconstant.MIN_BYTE_SIZE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#83-85\">Source</a><a href=\"#method.bit_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitSized.html#method.bit_size\" class=\"fn\">bit_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the bit size of this type (only the relevant data part, without padding). <a href=\"devela/all/trait.BitSized.html#method.bit_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_byte_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#95-97\">Source</a><a href=\"#method.min_byte_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitSized.html#method.min_byte_size\" class=\"fn\">min_byte_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the rounded up byte size for this type. <a href=\"devela/all/trait.BitSized.html#method.min_byte_size\">Read more</a></div></details></div></details>","BitSized<{$PTR_BITS * 2}>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3C%26str%3E-for-%26str\" class=\"impl\"><a href=\"#impl-Compare%3C%26str%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Compare.html\" title=\"trait devela::_dep::winnow::stream::Compare\">Compare</a>&lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: &amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"devela/_dep/winnow/stream/enum.CompareResult.html\" title=\"enum devela::_dep::winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<&'b str>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3C%26str%3E%3E-for-%26str\" class=\"impl\"><a href=\"#impl-Compare%3CCaseless%3C%26str%3E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Compare.html\" title=\"trait devela::_dep::winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"devela/_dep/winnow/ascii/struct.Caseless.html\" title=\"struct devela::_dep::winnow::ascii::Caseless\">Caseless</a>&lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"devela/_dep/winnow/ascii/struct.Caseless.html\" title=\"struct devela::_dep::winnow::ascii::Caseless\">Caseless</a>&lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"enum\" href=\"devela/_dep/winnow/stream/enum.CompareResult.html\" title=\"enum devela::_dep::winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<Caseless<&'b str>>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3Cchar%3E%3E-for-%26str\" class=\"impl\"><a href=\"#impl-Compare%3CCaseless%3Cchar%3E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Compare.html\" title=\"trait devela::_dep::winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"devela/_dep/winnow/ascii/struct.Caseless.html\" title=\"struct devela::_dep::winnow::ascii::Caseless\">Caseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"devela/_dep/winnow/ascii/struct.Caseless.html\" title=\"struct devela::_dep::winnow::ascii::Caseless\">Caseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;) -&gt; <a class=\"enum\" href=\"devela/_dep/winnow/stream/enum.CompareResult.html\" title=\"enum devela::_dep::winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<Caseless<char>>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3Cchar%3E-for-%26str\" class=\"impl\"><a href=\"#impl-Compare%3Cchar%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Compare.html\" title=\"trait devela::_dep::winnow::stream::Compare\">Compare</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a href=\"#method.compare\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"devela/_dep/winnow/stream/enum.CompareResult.html\" title=\"enum devela::_dep::winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details></div></details>","Compare<char>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstDefault-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/text/str/reexports.rs.html#53\">Source</a><a href=\"#impl-ConstDefault-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/code/trait.ConstDefault.html\" title=\"trait devela::code::ConstDefault\">ConstDefault</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/text/str/reexports.rs.html#53\">Source</a><a href=\"#associatedconstant.DEFAULT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/code/trait.ConstDefault.html#associatedconstant.DEFAULT\" class=\"constant\">DEFAULT</a>: Self = &quot;&quot;</h4></section></summary><div class='docblock'>Returns the compile-time “default value” for a type.</div></details></div></details>","ConstDefault","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3C%26mut+%26%5Bu8%5D%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/encode/impls.rs.html#203-214\">Source</a><a href=\"#impl-Decodable%3C%26mut+%26%5Bu8%5D%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.Decodable.html\" title=\"trait devela::all::Decodable\">Decodable</a>&lt;&amp;'a mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/encode/impls.rs.html#204\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Decodable.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type produced when decoding.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/encode/impls.rs.html#205-213\">Source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(reader: &amp;mut &amp;'a mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"devela/all/type.IoResult.html\" title=\"type devela::all::IoResult\">IoResult</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Decodable.html#associatedtype.Output\" title=\"type devela::all::Decodable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Decodes <code>Self</code> from the given <code>reader</code>, returning the decoded value. <a href=\"devela/all/trait.Decodable.html#tymethod.decode\">Read more</a></div></details></div></details>","Decodable<&'a mut &[u8]>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decoder%3CUnknownType%3E-for-%26str\" class=\"impl\"><a href=\"#impl-Decoder%3CUnknownType%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/ffmpeg_the_third/codec/traits/trait.Decoder.html\" title=\"trait devela::_dep::ffmpeg_the_third::codec::traits::Decoder\">Decoder</a>&lt;<a class=\"struct\" href=\"devela/_dep/ffmpeg_the_third/codec/codec/struct.UnknownType.html\" title=\"struct devela::_dep::ffmpeg_the_third::codec::codec::UnknownType\">UnknownType</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.decoder\" class=\"method trait-impl\"><a href=\"#method.decoder\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/ffmpeg_the_third/codec/traits/trait.Decoder.html#tymethod.decoder\" class=\"fn\">decoder</a>(self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/_dep/ffmpeg_the_third/struct.Codec.html\" title=\"struct devela::_dep::ffmpeg_the_third::Codec\">Codec</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Codec&gt;\">ⓘ</a></h4></section></div></details>","Decoder<UnknownType>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143894\" title=\"Tracking issue for const_default\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/str/mod.rs.html#3090\">Source</a></span><a href=\"#impl-Default-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/mod.rs.html#3093\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;str\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Creates an empty str</p>\n</div></details></div></details>","Default","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#741\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, 'a&gt; <a class=\"trait\" href=\"devela/_dep/serde/trait.Deserialize.html\" title=\"trait devela::_dep::serde::Deserialize\">Deserialize</a>&lt;'de&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a><div class=\"where\">where\n    'de: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#742-744\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/serde/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &lt;D as <a class=\"trait\" href=\"devela/_dep/serde/trait.Deserializer.html\" title=\"trait devela::_dep::serde::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/serde/trait.Deserializer.html#associatedtype.Error\" title=\"type devela::_dep::serde::Deserializer::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&amp;&#39;a str, &lt;D as Deserializer&lt;&#39;de&gt;&gt;::Error&gt;\">ⓘ</a><div class=\"where\">where\n    D: <a class=\"trait\" href=\"devela/_dep/serde/trait.Deserializer.html\" title=\"trait devela::_dep::serde::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"devela/_dep/serde/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encoder%3CUnknownType%3E-for-%26str\" class=\"impl\"><a href=\"#impl-Encoder%3CUnknownType%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/ffmpeg_the_third/codec/traits/trait.Encoder.html\" title=\"trait devela::_dep::ffmpeg_the_third::codec::traits::Encoder\">Encoder</a>&lt;<a class=\"struct\" href=\"devela/_dep/ffmpeg_the_third/codec/codec/struct.UnknownType.html\" title=\"struct devela::_dep::ffmpeg_the_third::codec::codec::UnknownType\">UnknownType</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.encoder\" class=\"method trait-impl\"><a href=\"#method.encoder\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/ffmpeg_the_third/codec/traits/trait.Encoder.html#tymethod.encoder\" class=\"fn\">encoder</a>(self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/_dep/ffmpeg_the_third/struct.Codec.html\" title=\"struct devela::_dep::ffmpeg_the_third::Codec\">Codec</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Codec&gt;\">ⓘ</a></h4></section></div></details>","Encoder<UnknownType>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Expected-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/mod.rs.html#489\">Source</a><a href=\"#impl-Expected-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/serde/de/trait.Expected.html\" title=\"trait devela::_dep::serde::de::Expected\">Expected</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/mod.rs.html#490\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/serde/de/trait.Expected.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, formatter: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"devela/all/struct.FmtError.html\" title=\"struct devela::all::FmtError\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Format an explanation of what data was being expected. Same signature as\nthe <code>Display</code> and <code>Debug</code> traits.</div></details></div></details>","Expected","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C%26str%3E-for-%26str\" class=\"impl\"><a href=\"#impl-FindSlice%3C%26str%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.FindSlice.html\" title=\"trait devela::_dep::winnow::stream::FindSlice\">FindSlice</a>&lt;&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Range.html\" title=\"struct devela::all::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Range&lt;usize&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<&'s str>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26str,)%3E-for-%26str\" class=\"impl\"><a href=\"#impl-FindSlice%3C(%26str,)%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.FindSlice.html\" title=\"trait devela::_dep::winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,)&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,)) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Range.html\" title=\"struct devela::all::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Range&lt;usize&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s str,)>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26str,+%26str)%3E-for-%26str\" class=\"impl\"><a href=\"#impl-FindSlice%3C(%26str,+%26str)%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.FindSlice.html\" title=\"trait devela::_dep::winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Range.html\" title=\"struct devela::all::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Range&lt;usize&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s str, &'s str)>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26str,+%26str,+%26str)%3E-for-%26str\" class=\"impl\"><a href=\"#impl-FindSlice%3C(%26str,+%26str,+%26str)%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.FindSlice.html\" title=\"trait devela::_dep::winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(\n    &amp;self,\n    substr: (&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>),\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Range.html\" title=\"struct devela::all::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Range&lt;usize&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s str, &'s str, &'s str)>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(char,)%3E-for-%26str\" class=\"impl\"><a href=\"#impl-FindSlice%3C(char,)%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.FindSlice.html\" title=\"trait devela::_dep::winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>,)&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>,)) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Range.html\" title=\"struct devela::all::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Range&lt;usize&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(char,)>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(char,+char)%3E-for-%26str\" class=\"impl\"><a href=\"#impl-FindSlice%3C(char,+char)%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.FindSlice.html\" title=\"trait devela::_dep::winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Range.html\" title=\"struct devela::all::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Range&lt;usize&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(char, char)>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(char,+char,+char)%3E-for-%26str\" class=\"impl\"><a href=\"#impl-FindSlice%3C(char,+char,+char)%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.FindSlice.html\" title=\"trait devela::_dep::winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Range.html\" title=\"struct devela::all::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Range&lt;usize&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(char, char, char)>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3Cchar%3E-for-%26str\" class=\"impl\"><a href=\"#impl-FindSlice%3Cchar%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.FindSlice.html\" title=\"trait devela::_dep::winnow::stream::FindSlice\">FindSlice</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a href=\"#method.find_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Range.html\" title=\"struct devela::all::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Range&lt;usize&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<char>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMatch%3C'h%3E%3E-for-%26str\" class=\"impl\"><a href=\"#impl-From%3CMatch%3C'h%3E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'h&gt; <a class=\"trait\" href=\"devela/code/trait.From.html\" title=\"trait devela::code::From\">From</a>&lt;<a class=\"struct\" href=\"devela/_dep/regex_lite/struct.Match.html\" title=\"struct devela::_dep::regex_lite::Match\">Match</a>&lt;'h&gt;&gt; for &amp;'h <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.From.html#tymethod.from\" class=\"fn\">from</a>(m: <a class=\"struct\" href=\"devela/_dep/regex_lite/struct.Match.html\" title=\"struct devela::_dep::regex_lite::Match\">Match</a>&lt;'h&gt;) -&gt; &amp;'h <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;h str\">ⓘ</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Match<'h>>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPyObjectBound%3C'a,+'_%3E-for-%26str\" class=\"impl\"><a href=\"#impl-FromPyObjectBound%3C'a,+'_%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/_dep/pyo3/conversion/trait.FromPyObjectBound.html\" title=\"trait devela::_dep::pyo3::conversion::FromPyObjectBound\">FromPyObjectBound</a>&lt;'a, '_&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_py_object_bound\" class=\"method trait-impl\"><a href=\"#method.from_py_object_bound\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/pyo3/conversion/trait.FromPyObjectBound.html#tymethod.from_py_object_bound\" class=\"fn\">from_py_object_bound</a>(ob: <a class=\"struct\" href=\"devela/_dep/pyo3/struct.Borrowed.html\" title=\"struct devela::_dep::pyo3::Borrowed\">Borrowed</a>&lt;'a, '_, <a class=\"struct\" href=\"devela/_dep/pyo3/struct.PyAny.html\" title=\"struct devela::_dep::pyo3::PyAny\">PyAny</a>&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, <a class=\"struct\" href=\"devela/_dep/pyo3/struct.PyErr.html\" title=\"struct devela::_dep::pyo3::PyErr\">PyErr</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&amp;&#39;a str, PyErr&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Extracts <code>Self</code> from the bound smart pointer <code>obj</code>. <a href=\"devela/_dep/pyo3/conversion/trait.FromPyObjectBound.html#tymethod.from_py_object_bound\">Read more</a></div></details></div></details>","FromPyObjectBound<'a, '_>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#451-453\">Source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, 'a, E&gt; <a class=\"trait\" href=\"devela/_dep/serde/de/trait.IntoDeserializer.html\" title=\"trait devela::_dep::serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"devela/_dep/serde/de/trait.Error.html\" title=\"trait devela::_dep::serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#455\">Source</a><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"devela/_dep/serde/de/value/struct.StrDeserializer.html\" title=\"struct devela::_dep::serde::de::value::StrDeserializer\">StrDeserializer</a>&lt;'a, E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#457\">Source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/serde/de/value/struct.StrDeserializer.html\" title=\"struct devela::_dep::serde::de::value::StrDeserializer\">StrDeserializer</a>&lt;'a, E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoPyObject%3C'py%3E-for-%26str\" class=\"impl\"><a href=\"#impl-IntoPyObject%3C'py%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'py&gt; <a class=\"trait\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html\" title=\"trait devela::_dep::pyo3::IntoPyObject\">IntoPyObject</a>&lt;'py&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"struct\" href=\"devela/_dep/pyo3/types/struct.PyString.html\" title=\"struct devela::_dep::pyo3::types::PyString\">PyString</a></h4></section></summary><div class='docblock'>The Python output type</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"devela/_dep/pyo3/struct.Bound.html\" title=\"struct devela::_dep::pyo3::Bound\">Bound</a>&lt;'py, &lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html\" title=\"trait devela::_dep::pyo3::IntoPyObject\">IntoPyObject</a>&lt;'py&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Target\" title=\"type devela::_dep::pyo3::IntoPyObject::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>The smart pointer type to use. <a href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Output\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"devela/code/enum.Infallible.html\" title=\"enum devela::code::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_pyobject\" class=\"method trait-impl\"><a href=\"#method.into_pyobject\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/pyo3/trait.IntoPyObject.html#tymethod.into_pyobject\" class=\"fn\">into_pyobject</a>(\n    self,\n    py: <a class=\"struct\" href=\"devela/_dep/pyo3/struct.Python.html\" title=\"struct devela::_dep::pyo3::Python\">Python</a>&lt;'py&gt;,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html\" title=\"trait devela::_dep::pyo3::IntoPyObject\">IntoPyObject</a>&lt;'py&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Output\" title=\"type devela::_dep::pyo3::IntoPyObject::Output\">Output</a>, &lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html\" title=\"trait devela::_dep::pyo3::IntoPyObject\">IntoPyObject</a>&lt;'py&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Error\" title=\"type devela::_dep::pyo3::IntoPyObject::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&lt;&amp;str as IntoPyObject&lt;&#39;py&gt;&gt;::Output, &lt;&amp;str as IntoPyObject&lt;&#39;py&gt;&gt;::Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","IntoPyObject<'py>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Offset%3C%3C%26str+as+Stream%3E::Checkpoint%3E-for-%26str\" class=\"impl\"><a href=\"#impl-Offset%3C%3C%26str+as+Stream%3E::Checkpoint%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Offset.html\" title=\"trait devela::_dep::winnow::stream::Offset\">Offset</a>&lt;&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type devela::_dep::winnow::stream::Stream::Checkpoint\">Checkpoint</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_from\" class=\"method trait-impl\"><a href=\"#method.offset_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Offset.html#tymethod.offset_from\" class=\"fn\">offset_from</a>(&amp;self, other: &amp;&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type devela::_dep::winnow::stream::Stream::Checkpoint\">Checkpoint</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Offset between the first byte of <code>start</code> and the first byte of <code>self</code>a <a href=\"devela/_dep/winnow/stream/trait.Offset.html#tymethod.offset_from\">Read more</a></div></details></div></details>","Offset<<&'a str as Stream>::Checkpoint>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Offset-for-%26str\" class=\"impl\"><a href=\"#impl-Offset-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Offset.html\" title=\"trait devela::_dep::winnow::stream::Offset\">Offset</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_from\" class=\"method trait-impl\"><a href=\"#method.offset_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Offset.html#tymethod.offset_from\" class=\"fn\">offset_from</a>(&amp;self, start: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Offset between the first byte of <code>start</code> and the first byte of <code>self</code>a <a href=\"devela/_dep/winnow/stream/trait.Offset.html#tymethod.offset_from\">Read more</a></div></details></div></details>","Offset","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParseSlice%3CR%3E-for-%26str\" class=\"impl\"><a href=\"#impl-ParseSlice%3CR%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.ParseSlice.html\" title=\"trait devela::_dep::winnow::stream::ParseSlice\">ParseSlice</a>&lt;R&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"devela/all/trait.FromStr.html\" title=\"trait devela::all::FromStr\">FromStr</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_slice\" class=\"method trait-impl\"><a href=\"#method.parse_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.ParseSlice.html#tymethod.parse_slice\" class=\"fn\">parse_slice</a>(&amp;self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;R&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;R&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Succeeds if <code>parse()</code> succeeded <a href=\"devela/_dep/winnow/stream/trait.ParseSlice.html#tymethod.parse_slice\">Read more</a></div></details></div></details>","ParseSlice<R>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parser%3CI,+%3CI+as+Stream%3E::Slice,+E%3E-for-%26str\" class=\"impl\"><a href=\"#impl-Parser%3CI,+%3CI+as+Stream%3E::Slice,+E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, I, E&gt; <a class=\"trait\" href=\"devela/_dep/winnow/trait.Parser.html\" title=\"trait devela::_dep::winnow::Parser\">Parser</a>&lt;I, &lt;I as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type devela::_dep::winnow::stream::Stream::Slice\">Slice</a>, E&gt; for &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Compare.html\" title=\"trait devela::_dep::winnow::stream::Compare\">Compare</a>&lt;&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html\" title=\"trait devela::_dep::winnow::stream::StreamIsPartial\">StreamIsPartial</a> + <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,</div></h3><div class=\"docblock\"><p>This is a shortcut for <a href=\"devela/_dep/winnow/token/fn.literal.html\" title=\"fn devela::_dep::winnow::token::literal\"><code>literal</code></a>.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">fn </span>parser&lt;<span class=\"lifetime\">'s</span>&gt;(s: <span class=\"kw-2\">&amp;mut &amp;</span><span class=\"lifetime\">'s </span>str) -&gt; ModalResult&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'s </span>str&gt; {\n  alt((<span class=\"string\">\"Hello\"</span>, take(<span class=\"number\">5usize</span>))).parse_next(s)\n}\n\n<span class=\"macro\">assert_eq!</span>(parser.parse_peek(<span class=\"string\">\"Hello, World!\"</span>), <span class=\"prelude-val\">Ok</span>((<span class=\"string\">\", World!\"</span>, <span class=\"string\">\"Hello\"</span>)));\n<span class=\"macro\">assert_eq!</span>(parser.parse_peek(<span class=\"string\">\"Something\"</span>), <span class=\"prelude-val\">Ok</span>((<span class=\"string\">\"hing\"</span>, <span class=\"string\">\"Somet\"</span>)));\n<span class=\"macro\">assert!</span>(parser.parse_peek(<span class=\"string\">\"Some\"</span>).is_err());\n<span class=\"macro\">assert!</span>(parser.parse_peek(<span class=\"string\">\"\"</span>).is_err());</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_next\" class=\"method trait-impl\"><a href=\"#method.parse_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#tymethod.parse_next\" class=\"fn\">parse_next</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&lt;I as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type devela::_dep::winnow::stream::Stream::Slice\">Slice</a>, E&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&lt;I as Stream&gt;::Slice, E&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Take tokens from the <a href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\"><code>Stream</code></a>, turning it into the output <a href=\"devela/_dep/winnow/trait.Parser.html#tymethod.parse_next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse\" class=\"fn\">parse</a>(\n    &amp;mut self,\n    input: I,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;O, <a class=\"struct\" href=\"devela/_dep/winnow/error/struct.ParseError.html\" title=\"struct devela::_dep::winnow::error::ParseError\">ParseError</a>&lt;I, &lt;E as <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/error/trait.ParserError.html#associatedtype.Inner\" title=\"type devela::_dep::winnow::error::ParserError::Inner\">Inner</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;O, ParseError&lt;I, &lt;E as ParserError&lt;I&gt;&gt;::Inner&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html\" title=\"trait devela::_dep::winnow::stream::StreamIsPartial\">StreamIsPartial</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    &lt;E as <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/error/trait.ParserError.html#associatedtype.Inner\" title=\"type devela::_dep::winnow::error::ParserError::Inner\">Inner</a>: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Parse all of <code>input</code>, generating <code>O</code> from it <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_peek\" class=\"method trait-impl\"><a href=\"#method.parse_peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse_peek\" class=\"fn\">parse_peek</a>(&amp;mut self, input: I) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(I, O)</a>, E&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(I, O), E&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Take tokens from the <a href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\"><code>Stream</code></a>, turning it into the output <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse_peek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.ByRef.html\" title=\"struct devela::_dep::winnow::combinator::impls::ByRef\">ByRef</a>&lt;'_, Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Treat <code>&amp;mut Self</code> as a parser <a href=\"devela/_dep/winnow/trait.Parser.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method trait-impl\"><a href=\"#method.value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.value\" class=\"fn\">value</a>&lt;O2&gt;(self, val: O2) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Value.html\" title=\"struct devela::_dep::winnow::combinator::impls::Value\">Value</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    O2: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Produce the provided value <a href=\"devela/_dep/winnow/trait.Parser.html#method.value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_value\" class=\"method trait-impl\"><a href=\"#method.default_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.default_value\" class=\"fn\">default_value</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.DefaultValue.html\" title=\"struct devela::_dep::winnow::combinator::impls::DefaultValue\">DefaultValue</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    O2: <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Produce a type’s default value <a href=\"devela/_dep/winnow/trait.Parser.html#method.default_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.void\" class=\"method trait-impl\"><a href=\"#method.void\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.void\" class=\"fn\">void</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Void.html\" title=\"struct devela::_dep::winnow::combinator::impls::Void\">Void</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Discards the output of the <code>Parser</code> <a href=\"devela/_dep/winnow/trait.Parser.html#method.void\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.output_into\" class=\"method trait-impl\"><a href=\"#method.output_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.output_into\" class=\"fn\">output_into</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.OutputInto.html\" title=\"struct devela::_dep::winnow::combinator::impls::OutputInto\">OutputInto</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    O: <a class=\"trait\" href=\"devela/code/trait.Into.html\" title=\"trait devela::code::Into\">Into</a>&lt;O2&gt;,</div></h4></section></summary><div class='docblock'>Convert the parser’s output to another type using <a href=\"devela/code/trait.From.html\" title=\"trait devela::code::From\"><code>std::convert::From</code></a> <a href=\"devela/_dep/winnow/trait.Parser.html#method.output_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.take\" class=\"fn\">take</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Take.html\" title=\"struct devela::_dep::winnow::combinator::impls::Take\">Take</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,</div></h4></section></summary><div class='docblock'>Produce the consumed input as produced value. <a href=\"devela/_dep/winnow/trait.Parser.html#method.take\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_taken\" class=\"method trait-impl\"><a href=\"#method.with_taken\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.with_taken\" class=\"fn\">with_taken</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.WithTaken.html\" title=\"struct devela::_dep::winnow::combinator::impls::WithTaken\">WithTaken</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,</div></h4></section></summary><div class='docblock'>Produce the consumed input with the output <a href=\"devela/_dep/winnow/trait.Parser.html#method.with_taken\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.span\" class=\"method trait-impl\"><a href=\"#method.span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.span\" class=\"fn\">span</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Span.html\" title=\"struct devela::_dep::winnow::combinator::impls::Span\">Span</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Location.html\" title=\"trait devela::_dep::winnow::stream::Location\">Location</a>,</div></h4></section></summary><div class='docblock'>Produce the location of the consumed input as produced value. <a href=\"devela/_dep/winnow/trait.Parser.html#method.span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_span\" class=\"method trait-impl\"><a href=\"#method.with_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.with_span\" class=\"fn\">with_span</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.WithSpan.html\" title=\"struct devela::_dep::winnow::combinator::impls::WithSpan\">WithSpan</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Location.html\" title=\"trait devela::_dep::winnow::stream::Location\">Location</a>,</div></h4></section></summary><div class='docblock'>Produce the location of consumed input with the output <a href=\"devela/_dep/winnow/trait.Parser.html#method.with_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.map\" class=\"fn\">map</a>&lt;G, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Map.html\" title=\"struct devela::_dep::winnow::combinator::impls::Map\">Map</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(O) -&gt; O2,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps a function over the output of a parser <a href=\"devela/_dep/winnow/trait.Parser.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_map\" class=\"method trait-impl\"><a href=\"#method.try_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.try_map\" class=\"fn\">try_map</a>&lt;G, O2, E2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.TryMap.html\" title=\"struct devela::_dep::winnow::combinator::impls::TryMap\">TryMap</a>&lt;Self, G, I, O, O2, E, E2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(O) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;O2, E2&gt;,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.FromExternalError.html\" title=\"trait devela::_dep::winnow::error::FromExternalError\">FromExternalError</a>&lt;I, E2&gt; + <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Applies a function returning a <code>Result</code> over the output of a parser. <a href=\"devela/_dep/winnow/trait.Parser.html#method.try_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_map\" class=\"method trait-impl\"><a href=\"#method.verify_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.verify_map\" class=\"fn\">verify_map</a>&lt;G, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.VerifyMap.html\" title=\"struct devela::_dep::winnow::combinator::impls::VerifyMap\">VerifyMap</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(O) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;O2&gt;,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Apply both <a href=\"devela/_dep/winnow/trait.Parser.html#method.verify\" title=\"method devela::_dep::winnow::Parser::verify\"><code>Parser::verify</code></a> and <a href=\"devela/_dep/winnow/trait.Parser.html#method.map\" title=\"method devela::_dep::winnow::Parser::map\"><code>Parser::map</code></a>. <a href=\"devela/_dep/winnow/trait.Parser.html#method.verify_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;G, H, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.FlatMap.html\" title=\"struct devela::_dep::winnow::combinator::impls::FlatMap\">FlatMap</a>&lt;Self, G, H, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(O) -&gt; H,\n    H: <a class=\"trait\" href=\"devela/_dep/winnow/trait.Parser.html\" title=\"trait devela::_dep::winnow::Parser\">Parser</a>&lt;I, O2, E&gt;,</div></h4></section></summary><div class='docblock'>Creates a parser from the output of this one <a href=\"devela/_dep/winnow/trait.Parser.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method trait-impl\"><a href=\"#method.and_then\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.and_then\" class=\"fn\">and_then</a>&lt;G, O2&gt;(self, inner: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.AndThen.html\" title=\"struct devela::_dep::winnow::combinator::impls::AndThen\">AndThen</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/_dep/winnow/trait.Parser.html\" title=\"trait devela::_dep::winnow::Parser\">Parser</a>&lt;O, O2, E&gt;,\n    O: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html\" title=\"trait devela::_dep::winnow::stream::StreamIsPartial\">StreamIsPartial</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,</div></h4></section></summary><div class='docblock'>Applies a second parser over the output of the first one <a href=\"devela/_dep/winnow/trait.Parser.html#method.and_then\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_to\" class=\"method trait-impl\"><a href=\"#method.parse_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse_to\" class=\"fn\">parse_to</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.ParseTo.html\" title=\"struct devela::_dep::winnow::combinator::impls::ParseTo\">ParseTo</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    O: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.ParseSlice.html\" title=\"trait devela::_dep::winnow::stream::ParseSlice\">ParseSlice</a>&lt;O2&gt;,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Apply <a href=\"devela/all/trait.FromStr.html\" title=\"trait devela::all::FromStr\"><code>std::str::FromStr</code></a> to the output of the parser <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method trait-impl\"><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.verify\" class=\"fn\">verify</a>&lt;G, O2&gt;(self, filter: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Verify.html\" title=\"struct devela::_dep::winnow::combinator::impls::Verify\">Verify</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;O2</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    O: <a class=\"trait\" href=\"devela/all/trait.Borrow.html\" title=\"trait devela::all::Borrow\">Borrow</a>&lt;O2&gt;,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    O2: ?<a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns the output of the child parser if it satisfies a verification function. <a href=\"devela/_dep/winnow/trait.Parser.html#method.verify\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.context\" class=\"method trait-impl\"><a href=\"#method.context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.context\" class=\"fn\">context</a>&lt;C&gt;(self, context: C) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Context.html\" title=\"struct devela::_dep::winnow::combinator::impls::Context\">Context</a>&lt;Self, I, O, E, C&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.AddContext.html\" title=\"trait devela::_dep::winnow::error::AddContext\">AddContext</a>&lt;I, C&gt; + <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    C: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>,</div></h4></section></summary><div class='docblock'>If parsing fails, add context to the error <a href=\"devela/_dep/winnow/trait.Parser.html#method.context\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.context_with\" class=\"method trait-impl\"><a href=\"#method.context_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.context_with\" class=\"fn\">context_with</a>&lt;F, C, FI&gt;(\n    self,\n    context: F,\n) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.ContextWith.html\" title=\"struct devela::_dep::winnow::combinator::impls::ContextWith\">ContextWith</a>&lt;Self, I, O, E, F, C, FI&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.AddContext.html\" title=\"trait devela::_dep::winnow::error::AddContext\">AddContext</a>&lt;I, C&gt; + <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    F: <a class=\"trait\" href=\"devela/all/trait.Fn.html\" title=\"trait devela::all::Fn\">Fn</a>() -&gt; FI + <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>,\n    FI: <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&lt;Item = C&gt;,</div></h4></section></summary><div class='docblock'>If parsing fails, dynamically add context to the error <a href=\"devela/_dep/winnow/trait.Parser.html#method.context_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_err\" class=\"method trait-impl\"><a href=\"#method.map_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.map_err\" class=\"fn\">map_err</a>&lt;G, E2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.MapErr.html\" title=\"struct devela::_dep::winnow::combinator::impls::MapErr\">MapErr</a>&lt;Self, G, I, O, E, E2&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(E) -&gt; E2,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps a function over the error of a parser <a href=\"devela/_dep/winnow/trait.Parser.html#method.map_err\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complete_err\" class=\"method trait-impl\"><a href=\"#method.complete_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.complete_err\" class=\"fn\">complete_err</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.CompleteErr.html\" title=\"struct devela::_dep::winnow::combinator::impls::CompleteErr\">CompleteErr</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms <a href=\"devela/_dep/winnow/error/enum.ErrMode.html#variant.Incomplete\" title=\"variant devela::_dep::winnow::error::ErrMode::Incomplete\"><code>Incomplete</code></a> into <a href=\"devela/_dep/winnow/error/enum.ErrMode.html#variant.Backtrack\" title=\"variant devela::_dep::winnow::error::ErrMode::Backtrack\"><code>Backtrack</code></a> <a href=\"devela/_dep/winnow/trait.Parser.html#method.complete_err\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.err_into\" class=\"method trait-impl\"><a href=\"#method.err_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.err_into\" class=\"fn\">err_into</a>&lt;E2&gt;(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.ErrInto.html\" title=\"struct devela::_dep::winnow::combinator::impls::ErrInto\">ErrInto</a>&lt;Self, I, O, E, E2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"devela/code/trait.Into.html\" title=\"trait devela::code::Into\">Into</a>&lt;E2&gt;,</div></h4></section></summary><div class='docblock'>Convert the parser’s error to another type using <a href=\"devela/code/trait.From.html\" title=\"trait devela::code::From\"><code>std::convert::From</code></a></div></details></div></details>","Parser<I, <I as Stream>::Slice, E>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CAuthority%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CAuthority%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/ureq/http/uri/struct.Authority.html\" title=\"struct devela::_dep::ureq::http::uri::Authority\">Authority</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/ureq/http/uri/struct.Authority.html\" title=\"struct devela::_dep::ureq::http::uri::Authority\">Authority</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Authority>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBStr%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CBStr%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/winnow/struct.BStr.html\" title=\"struct devela::_dep::winnow::BStr\">BStr</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/winnow/struct.BStr.html\" title=\"struct devela::_dep::winnow::BStr\">BStr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<BStr>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBorrowed%3C'_,+'_,+PyString%3E%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CBorrowed%3C'_,+'_,+PyString%3E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/pyo3/struct.Borrowed.html\" title=\"struct devela::_dep::pyo3::Borrowed\">Borrowed</a>&lt;'_, '_, <a class=\"struct\" href=\"devela/_dep/pyo3/types/struct.PyString.html\" title=\"struct devela::_dep::pyo3::types::PyString\">PyString</a>&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3><div class=\"docblock\"><p>Compares whether the data in the Python string is equal to the given UTF8.</p>\n</div></section></summary><div class=\"docblock\"><p>In some cases Python equality might be more appropriate; see the note on <a href=\"devela/_dep/pyo3/types/struct.PyString.html\" title=\"struct devela::_dep::pyo3::types::PyString\"><code>PyString</code></a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/pyo3/struct.Borrowed.html\" title=\"struct devela::_dep::pyo3::Borrowed\">Borrowed</a>&lt;'_, '_, <a class=\"struct\" href=\"devela/_dep/pyo3/types/struct.PyString.html\" title=\"struct devela::_dep::pyo3::types::PyString\">PyString</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Borrowed<'_, '_, PyString>>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBound%3C'_,+PyString%3E%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CBound%3C'_,+PyString%3E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/pyo3/struct.Bound.html\" title=\"struct devela::_dep::pyo3::Bound\">Bound</a>&lt;'_, <a class=\"struct\" href=\"devela/_dep/pyo3/types/struct.PyString.html\" title=\"struct devela::_dep::pyo3::types::PyString\">PyString</a>&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3><div class=\"docblock\"><p>Compares whether the data in the Python string is equal to the given UTF8.</p>\n</div></section></summary><div class=\"docblock\"><p>In some cases Python equality might be more appropriate; see the note on <a href=\"devela/_dep/pyo3/types/struct.PyString.html\" title=\"struct devela::_dep::pyo3::types::PyString\"><code>PyString</code></a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/pyo3/struct.Bound.html\" title=\"struct devela::_dep::pyo3::Bound\">Bound</a>&lt;'_, <a class=\"struct\" href=\"devela/_dep/pyo3/types/struct.PyString.html\" title=\"struct devela::_dep::pyo3::types::PyString\">PyString</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Bound<'_, PyString>>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CByteStr%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/bstr/traits.rs.html#143\">Source</a><a href=\"#impl-PartialEq%3CByteStr%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_core/bstr/struct.ByteStr.html\" title=\"struct devela::_core::bstr::ByteStr\">ByteStr</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/bstr/traits.rs.html#143\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_core/bstr/struct.ByteStr.html\" title=\"struct devela::_core::bstr::ByteStr\">ByteStr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<ByteStr>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CByteString%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/bstr.rs.html#533\">Source</a><a href=\"#impl-PartialEq%3CByteString%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/_alloc/bstr/struct.ByteString.html\" title=\"struct devela::_dep::_alloc::bstr::ByteString\">ByteString</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/bstr.rs.html#533\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/_alloc/bstr/struct.ByteString.html\" title=\"struct devela::_dep::_alloc::bstr::ByteString\">ByteString</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<ByteString>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBytes%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CBytes%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;Bytes&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Bytes) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Bytes>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBytes%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CBytes%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/winnow/struct.Bytes.html\" title=\"struct devela::_dep::winnow::Bytes\">Bytes</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/winnow/struct.Bytes.html\" title=\"struct devela::_dep::winnow::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Bytes>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBytesMut%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CBytesMut%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;BytesMut&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;BytesMut) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<BytesMut>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CCow%3C'a,+str%3E%3E-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2609\">Source</a></span><a href=\"#impl-PartialEq%3CCow%3C'a,+str%3E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Cow.html\" title=\"enum devela::all::Cow\">Cow</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for &amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2609\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"devela/all/enum.Cow.html\" title=\"enum devela::all::Cow\">Cow</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2609\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"devela/all/enum.Cow.html\" title=\"enum devela::all::Cow\">Cow</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Cow<'a, str>>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CHeaderName%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CHeaderName%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/ureq/http/struct.HeaderName.html\" title=\"struct devela::_dep::ureq::http::HeaderName\">HeaderName</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/ureq/http/struct.HeaderName.html\" title=\"struct devela::_dep::ureq::http::HeaderName\">HeaderName</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Performs a case-insensitive comparison of the string against the header\nname</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<HeaderName>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CHeaderValue%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CHeaderValue%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/ureq/http/struct.HeaderValue.html\" title=\"struct devela::_dep::ureq::http::HeaderValue\">HeaderValue</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/ureq/http/struct.HeaderValue.html\" title=\"struct devela::_dep::ureq::http::HeaderValue\">HeaderValue</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<HeaderValue>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CMethod%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CMethod%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/ureq/http/struct.Method.html\" title=\"struct devela::_dep::ureq::http::Method\">Method</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/ureq/http/struct.Method.html\" title=\"struct devela::_dep::ureq::http::Method\">Method</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Method>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3COsString%3E-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.29.0\">1.29.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#753\">Source</a></span><a href=\"#impl-PartialEq%3COsString%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/all/struct.OsString.html\" title=\"struct devela::all::OsString\">OsString</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#755\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/all/struct.OsString.html\" title=\"struct devela::all::OsString\">OsString</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<OsString>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CPathAndQuery%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CPathAndQuery%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/ureq/http/uri/struct.PathAndQuery.html\" title=\"struct devela::_dep::ureq::http::uri::PathAndQuery\">PathAndQuery</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/ureq/http/uri/struct.PathAndQuery.html\" title=\"struct devela::_dep::ureq::http::uri::PathAndQuery\">PathAndQuery</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<PathAndQuery>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CPyBackedStr%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CPyBackedStr%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/pyo3/pybacked/struct.PyBackedStr.html\" title=\"struct devela::_dep::pyo3::pybacked::PyBackedStr\">PyBackedStr</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/pyo3/pybacked/struct.PyBackedStr.html\" title=\"struct devela::_dep::pyo3::pybacked::PyBackedStr\">PyBackedStr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<PyBackedStr>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CString%3C'bump%3E%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CString%3C'bump%3E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'b, 'bump&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/bumpalo/collections/struct.String.html\" title=\"struct devela::_dep::bumpalo::collections::String\">String</a>&lt;'bump&gt;&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/bumpalo/collections/struct.String.html\" title=\"struct devela::_dep::bumpalo::collections::String\">String</a>&lt;'bump&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<String<'bump>>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CString%3E-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2605\">Source</a></span><a href=\"#impl-PartialEq%3CString%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/all/struct.String.html\" title=\"struct devela::all::String\">String</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2605\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/all/struct.String.html\" title=\"struct devela::all::String\">String</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2605\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/all/struct.String.html\" title=\"struct devela::all::String\">String</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<String>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CStringNonul%3CCAP%3E%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/text/str/nonul.rs.html#509-512\">Source</a><a href=\"#impl-PartialEq%3CStringNonul%3CCAP%3E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const CAP: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/all/struct.StringNonul.html\" title=\"struct devela::all::StringNonul\">StringNonul</a>&lt;CAP&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_str_nonul</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/text/str/nonul.rs.html#511\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, string: &amp;<a class=\"struct\" href=\"devela/all/struct.StringNonul.html\" title=\"struct devela::all::StringNonul\">StringNonul</a>&lt;CAP&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<StringNonul<CAP>>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CStringU8%3CCAP%3E%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/text/str/string_u.rs.html#705\">Source</a><a href=\"#impl-PartialEq%3CStringU8%3CCAP%3E%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const CAP: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/all/struct.StringU8.html\" title=\"struct devela::all::StringU8\">StringU8</a>&lt;CAP&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/text/str/string_u.rs.html#705\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, string: &amp;<a class=\"struct\" href=\"devela/all/struct.StringU8.html\" title=\"struct devela::all::StringU8\">StringU8</a>&lt;CAP&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<StringU8<CAP>>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CUri%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialEq%3CUri%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"devela/_dep/ureq/http/struct.Uri.html\" title=\"struct devela::_dep::ureq::http::Uri\">Uri</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, uri: &amp;<a class=\"struct\" href=\"devela/_dep/ureq/http/struct.Uri.html\" title=\"struct devela::_dep::ureq::http::Uri\">Uri</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Uri>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CAuthority%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialOrd%3CAuthority%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"devela/_dep/ureq/http/uri/struct.Authority.html\" title=\"struct devela::_dep::ureq::http::uri::Authority\">Authority</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/ureq/http/uri/struct.Authority.html\" title=\"struct devela::_dep::ureq::http::uri::Authority\">Authority</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Authority>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CBStr%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialOrd%3CBStr%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"devela/_dep/winnow/struct.BStr.html\" title=\"struct devela::_dep::winnow::BStr\">BStr</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/winnow/struct.BStr.html\" title=\"struct devela::_dep::winnow::BStr\">BStr</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<BStr>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CBytes%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialOrd%3CBytes%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;Bytes&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;Bytes) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Bytes>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CBytes%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialOrd%3CBytes%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"devela/_dep/winnow/struct.Bytes.html\" title=\"struct devela::_dep::winnow::Bytes\">Bytes</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/winnow/struct.Bytes.html\" title=\"struct devela::_dep::winnow::Bytes\">Bytes</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Bytes>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CBytesMut%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialOrd%3CBytesMut%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;BytesMut&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;BytesMut) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<BytesMut>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CHeaderValue%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialOrd%3CHeaderValue%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"devela/_dep/ureq/http/struct.HeaderValue.html\" title=\"struct devela::_dep::ureq::http::HeaderValue\">HeaderValue</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/ureq/http/struct.HeaderValue.html\" title=\"struct devela::_dep::ureq::http::HeaderValue\">HeaderValue</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<HeaderValue>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CPathAndQuery%3E-for-%26str\" class=\"impl\"><a href=\"#impl-PartialOrd%3CPathAndQuery%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"devela/_dep/ureq/http/uri/struct.PathAndQuery.html\" title=\"struct devela::_dep::ureq::http::uri::PathAndQuery\">PathAndQuery</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/_dep/ureq/http/uri/struct.PathAndQuery.html\" title=\"struct devela::_dep::ureq::http::uri::PathAndQuery\">PathAndQuery</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<PathAndQuery>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pattern-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#972\">Source</a><a href=\"#impl-Pattern-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b&gt; <a class=\"trait\" href=\"devela/_core/str/pattern/trait.Pattern.html\" title=\"trait devela::_core::str::pattern::Pattern\">Pattern</a> for &amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3><div class=\"docblock\"><p>Non-allocating substring search.</p>\n</div></section></summary><div class=\"docblock\"><p>Will handle the pattern <code>\"\"</code> as returning empty matches at each character\nboundary.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"Hello world\"</span>.find(<span class=\"string\">\"world\"</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">6</span>));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_prefix_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#982\">Source</a><a href=\"#method.is_prefix_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_core/str/pattern/trait.Pattern.html#method.is_prefix_of\" class=\"fn\">is_prefix_of</a>(self, haystack: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span></summary><div class=\"docblock\"><p>Checks whether the pattern matches at the front of the haystack.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_contained_in\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#988\">Source</a><a href=\"#method.is_contained_in\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_core/str/pattern/trait.Pattern.html#method.is_contained_in\" class=\"fn\">is_contained_in</a>(self, haystack: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span></summary><div class=\"docblock\"><p>Checks whether the pattern matches anywhere in the haystack</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strip_prefix_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#1017\">Source</a><a href=\"#method.strip_prefix_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_core/str/pattern/trait.Pattern.html#method.strip_prefix_of\" class=\"fn\">strip_prefix_of</a>(self, haystack: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;&amp;str&gt;\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span></summary><div class=\"docblock\"><p>Removes the pattern from the front of haystack, if it matches.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_suffix_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#1028-1030\">Source</a><a href=\"#method.is_suffix_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_core/str/pattern/trait.Pattern.html#method.is_suffix_of\" class=\"fn\">is_suffix_of</a>&lt;'a&gt;(self, haystack: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    &lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_core/str/pattern/trait.Pattern.html\" title=\"trait devela::_core::str::pattern::Pattern\">Pattern</a>&gt;::<a class=\"associatedtype\" href=\"devela/_core/str/pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type devela::_core::str::pattern::Pattern::Searcher\">Searcher</a>&lt;'a&gt;: <a class=\"trait\" href=\"devela/_core/str/pattern/trait.ReverseSearcher.html\" title=\"trait devela::_core::str::pattern::ReverseSearcher\">ReverseSearcher</a>&lt;'a&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span></summary><div class=\"docblock\"><p>Checks whether the pattern matches at the back of the haystack.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strip_suffix_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#1037-1039\">Source</a><a href=\"#method.strip_suffix_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_core/str/pattern/trait.Pattern.html#method.strip_suffix_of\" class=\"fn\">strip_suffix_of</a>&lt;'a&gt;(self, haystack: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;&amp;&#39;a str&gt;\">ⓘ</a><div class=\"where\">where\n    &lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_core/str/pattern/trait.Pattern.html\" title=\"trait devela::_core::str::pattern::Pattern\">Pattern</a>&gt;::<a class=\"associatedtype\" href=\"devela/_core/str/pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type devela::_core::str::pattern::Pattern::Searcher\">Searcher</a>&lt;'a&gt;: <a class=\"trait\" href=\"devela/_core/str/pattern/trait.ReverseSearcher.html\" title=\"trait devela::_core::str::pattern::ReverseSearcher\">ReverseSearcher</a>&lt;'a&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span></summary><div class=\"docblock\"><p>Removes the pattern from the back of haystack, if it matches.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Searcher\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#973\">Source</a><a href=\"#associatedtype.Searcher\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_core/str/pattern/trait.Pattern.html#associatedtype.Searcher\" class=\"associatedtype\">Searcher</a>&lt;'a&gt; = <a class=\"struct\" href=\"devela/_core/str/pattern/struct.StrSearcher.html\" title=\"struct devela::_core::str::pattern::StrSearcher\">StrSearcher</a>&lt;'a, 'b&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span><div class='docblock'>Associated searcher for this pattern</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_searcher\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#976\">Source</a><a href=\"#method.into_searcher\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_core/str/pattern/trait.Pattern.html#tymethod.into_searcher\" class=\"fn\">into_searcher</a>(self, haystack: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"devela/_core/str/pattern/struct.StrSearcher.html\" title=\"struct devela::_core::str::pattern::StrSearcher\">StrSearcher</a>&lt;'_, 'b&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span><div class='docblock'>Constructs the associated searcher from\n<code>self</code> and the <code>haystack</code> to search in.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_utf8_pattern\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#1051\">Source</a><a href=\"#method.as_utf8_pattern\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_core/str/pattern/trait.Pattern.html#method.as_utf8_pattern\" class=\"fn\">as_utf8_pattern</a>(&amp;self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/_core/str/pattern/enum.Utf8Pattern.html\" title=\"enum devela::_core::str::pattern::Utf8Pattern\">Utf8Pattern</a>&lt;'_&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Utf8Pattern&lt;&#39;_&gt;&gt;\">ⓘ</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span><div class='docblock'>Returns the pattern as utf-8 bytes if possible.</div></details></div></details>","Pattern","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Replacer-for-%26str\" class=\"impl\"><a href=\"#impl-Replacer-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/_dep/regex_lite/trait.Replacer.html\" title=\"trait devela::_dep::regex_lite::Replacer\">Replacer</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_append\" class=\"method trait-impl\"><a href=\"#method.replace_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/regex_lite/trait.Replacer.html#tymethod.replace_append\" class=\"fn\">replace_append</a>(&amp;mut self, caps: &amp;<a class=\"struct\" href=\"devela/_dep/regex_lite/struct.Captures.html\" title=\"struct devela::_dep::regex_lite::Captures\">Captures</a>&lt;'_&gt;, dst: &amp;mut <a class=\"struct\" href=\"devela/all/struct.String.html\" title=\"struct devela::all::String\">String</a>)</h4></section></summary><div class='docblock'>Appends possibly empty data to <code>dst</code> to replace the current match. <a href=\"devela/_dep/regex_lite/trait.Replacer.html#tymethod.replace_append\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.no_expansion\" class=\"method trait-impl\"><a href=\"#method.no_expansion\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/regex_lite/trait.Replacer.html#method.no_expansion\" class=\"fn\">no_expansion</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Cow.html\" title=\"enum devela::all::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Cow&lt;&#39;_, str&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Return a fixed unchanging replacement string. <a href=\"devela/_dep/regex_lite/trait.Replacer.html#method.no_expansion\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/regex_lite/trait.Replacer.html#method.by_ref\" class=\"fn\">by_ref</a>&lt;'r&gt;(&amp;'r mut self) -&gt; <a class=\"struct\" href=\"devela/_dep/regex_lite/struct.ReplacerRef.html\" title=\"struct devela::_dep::regex_lite::ReplacerRef\">ReplacerRef</a>&lt;'r, Self&gt;</h4></section></summary><div class='docblock'>Returns a type that implements <code>Replacer</code>, but that borrows and wraps\nthis <code>Replacer</code>. <a href=\"devela/_dep/regex_lite/trait.Replacer.html#method.by_ref\">Read more</a></div></details></div></details>","Replacer","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SliceLen-for-%26str\" class=\"impl\"><a href=\"#impl-SliceLen-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.SliceLen.html\" title=\"trait devela::_dep::winnow::stream::SliceLen\">SliceLen</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_len\" class=\"method trait-impl\"><a href=\"#method.slice_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.SliceLen.html#tymethod.slice_len\" class=\"fn\">slice_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the input length, as indicated by its name,\nand the name of the trait itself</div></details></div></details>","SliceLen","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stream-for-%26str\" class=\"impl\"><a href=\"#impl-Stream-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'i&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a> for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Token\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Token\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Token\" class=\"associatedtype\">Token</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a></h4></section></summary><div class='docblock'>The smallest unit being parsed <a href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Token\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\" class=\"associatedtype\">Slice</a> = &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Sequence of <code>Token</code>s <a href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IterOffsets\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IterOffsets\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.IterOffsets\" class=\"associatedtype\">IterOffsets</a> = <a class=\"struct\" href=\"devela/_core/str/struct.CharIndices.html\" title=\"struct devela::_core::str::CharIndices\">CharIndices</a>&lt;'i&gt;</h4></section></summary><div class='docblock'>Iterate with the offset from the current location</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Checkpoint\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Checkpoint\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" class=\"associatedtype\">Checkpoint</a> = <a class=\"struct\" href=\"devela/_dep/winnow/stream/struct.Checkpoint.html\" title=\"struct devela::_dep::winnow::stream::Checkpoint\">Checkpoint</a>&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>A parse location within the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_offsets\" class=\"method trait-impl\"><a href=\"#method.iter_offsets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.iter_offsets\" class=\"fn\">iter_offsets</a>(&amp;self) -&gt; &lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.IterOffsets\" title=\"type devela::_dep::winnow::stream::Stream::IterOffsets\">IterOffsets</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;i str as Stream&gt;::IterOffsets\">ⓘ</a></h4></section></summary><div class='docblock'>Iterate with the offset from the current location</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eof_offset\" class=\"method trait-impl\"><a href=\"#method.eof_offset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.eof_offset\" class=\"fn\">eof_offset</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the offset to the end of the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_token\" class=\"method trait-impl\"><a href=\"#method.next_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.next_token\" class=\"fn\">next_token</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Token\" title=\"type devela::_dep::winnow::stream::Stream::Token\">Token</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;&lt;&amp;&#39;i str as Stream&gt;::Token&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Split off the next token from the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_token\" class=\"method trait-impl\"><a href=\"#method.peek_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.peek_token\" class=\"fn\">peek_token</a>(&amp;self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Token\" title=\"type devela::_dep::winnow::stream::Stream::Token\">Token</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;&lt;&amp;&#39;i str as Stream&gt;::Token&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Split off the next token from the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_for\" class=\"method trait-impl\"><a href=\"#method.offset_for\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.offset_for\" class=\"fn\">offset_for</a>&lt;P&gt;(&amp;self, predicate: P) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;usize&gt;\">ⓘ</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"devela/all/trait.Fn.html\" title=\"trait devela::all::Fn\">Fn</a>(&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Token\" title=\"type devela::_dep::winnow::stream::Stream::Token\">Token</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Finds the offset of the next matching token</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_at\" class=\"method trait-impl\"><a href=\"#method.offset_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.offset_at\" class=\"fn\">offset_at</a>(&amp;self, tokens: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"devela/_dep/winnow/error/enum.Needed.html\" title=\"enum devela::_dep::winnow::error::Needed\">Needed</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;usize, Needed&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Get the offset for the number of <code>tokens</code> into the stream <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.offset_at\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_slice\" class=\"method trait-impl\"><a href=\"#method.next_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.next_slice\" class=\"fn\">next_slice</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type devela::_dep::winnow::stream::Stream::Slice\">Slice</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;i str as Stream&gt;::Slice\">ⓘ</a></h4></section></summary><div class='docblock'>Split off a slice of tokens from the input <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.next_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_slice_unchecked\" class=\"method trait-impl\"><a href=\"#method.next_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#method.next_slice_unchecked\" class=\"fn\">next_slice_unchecked</a>(\n    &amp;mut self,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; &lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type devela::_dep::winnow::stream::Stream::Slice\">Slice</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;i str as Stream&gt;::Slice\">ⓘ</a></h4></section></summary><div class='docblock'>Split off a slice of tokens from the input <a href=\"devela/_dep/winnow/stream/trait.Stream.html#method.next_slice_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_slice\" class=\"method trait-impl\"><a href=\"#method.peek_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.peek_slice\" class=\"fn\">peek_slice</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type devela::_dep::winnow::stream::Stream::Slice\">Slice</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;i str as Stream&gt;::Slice\">ⓘ</a></h4></section></summary><div class='docblock'>Split off a slice of tokens from the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_slice_unchecked\" class=\"method trait-impl\"><a href=\"#method.peek_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#method.peek_slice_unchecked\" class=\"fn\">peek_slice_unchecked</a>(\n    &amp;self,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; &lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type devela::_dep::winnow::stream::Stream::Slice\">Slice</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;i str as Stream&gt;::Slice\">ⓘ</a></h4></section></summary><div class='docblock'>Split off a slice of tokens from the input <a href=\"devela/_dep/winnow/stream/trait.Stream.html#method.peek_slice_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checkpoint\" class=\"method trait-impl\"><a href=\"#method.checkpoint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.checkpoint\" class=\"fn\">checkpoint</a>(&amp;self) -&gt; &lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type devela::_dep::winnow::stream::Stream::Checkpoint\">Checkpoint</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;&#39;i str as Stream&gt;::Checkpoint\">ⓘ</a></h4></section></summary><div class='docblock'>Save the current parse location within the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method trait-impl\"><a href=\"#method.reset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.reset\" class=\"fn\">reset</a>(&amp;mut self, checkpoint: &amp;&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type devela::_dep::winnow::stream::Stream::Checkpoint\">Checkpoint</a>)</h4></section></summary><div class='docblock'>Revert the stream to a prior <a href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"associated type winnow::stream::Stream::Checkpoint::Checkpoint\"><code>Self::Checkpoint</code></a> <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.reset\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw\" class=\"method trait-impl\"><a href=\"#method.raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#tymethod.raw\" class=\"fn\">raw</a>(&amp;self) -&gt; &amp;dyn <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.7.10: Replaced with <code>Stream::trace</code></span></div></span><div class='docblock'>Deprecated for callers as of 0.7.10, instead call <a href=\"devela/_dep/winnow/stream/trait.Stream.html#method.trace\" title=\"method devela::_dep::winnow::stream::Stream::trace\"><code>Stream::trace</code></a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finish\" class=\"method trait-impl\"><a href=\"#method.finish\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#method.finish\" class=\"fn\">finish</a>(&amp;mut self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type devela::_dep::winnow::stream::Stream::Slice\">Slice</a></h4></section></summary><div class='docblock'>Advance to the end of the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_finish\" class=\"method trait-impl\"><a href=\"#method.peek_finish\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#method.peek_finish\" class=\"fn\">peek_finish</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type devela::_dep::winnow::stream::Stream::Slice\">Slice</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Advance to the end of the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace\" class=\"method trait-impl\"><a href=\"#method.trace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Stream.html#method.trace\" class=\"fn\">trace</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"devela/all/struct.FmtError.html\" title=\"struct devela::all::FmtError\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Write out a single-line summary of the current parse location</div></details></div></details>","Stream","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StreamIsPartial-for-%26str\" class=\"impl\"><a href=\"#impl-StreamIsPartial-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html\" title=\"trait devela::_dep::winnow::stream::StreamIsPartial\">StreamIsPartial</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PartialState\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PartialState\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html#associatedtype.PartialState\" class=\"associatedtype\">PartialState</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Whether the stream is currently partial or complete</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complete\" class=\"method trait-impl\"><a href=\"#method.complete\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html#tymethod.complete\" class=\"fn\">complete</a>(&amp;mut self) -&gt; &lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html\" title=\"trait devela::_dep::winnow::stream::StreamIsPartial\">StreamIsPartial</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html#associatedtype.PartialState\" title=\"type devela::_dep::winnow::stream::StreamIsPartial::PartialState\">PartialState</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;str as StreamIsPartial&gt;::PartialState\">ⓘ</a></h4></section></summary><div class='docblock'>Mark the stream is complete</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.restore_partial\" class=\"method trait-impl\"><a href=\"#method.restore_partial\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html#tymethod.restore_partial\" class=\"fn\">restore_partial</a>(&amp;mut self, _state: &lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html\" title=\"trait devela::_dep::winnow::stream::StreamIsPartial\">StreamIsPartial</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html#associatedtype.PartialState\" title=\"type devela::_dep::winnow::stream::StreamIsPartial::PartialState\">PartialState</a>)</h4></section></summary><div class='docblock'>Restore the stream back to its previous state</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partial_supported\" class=\"method trait-impl\"><a href=\"#method.is_partial_supported\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html#tymethod.is_partial_supported\" class=\"fn\">is_partial_supported</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Report whether the <a href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\"><code>Stream</code></a> is can ever be incomplete</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partial\" class=\"method trait-impl\"><a href=\"#method.is_partial\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html#method.is_partial\" class=\"fn\">is_partial</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Report whether the <a href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\"><code>Stream</code></a> is currently incomplete</div></details></div></details>","StreamIsPartial","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StringBuilder%3C's%3E-for-%26str\" class=\"impl\"><a href=\"#impl-StringBuilder%3C's%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s&gt; StringBuilder&lt;'s&gt; for &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(&amp;mut self)</h4></section><section id=\"method.push_str\" class=\"method trait-impl\"><a href=\"#method.push_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">push_str</a>(&amp;mut self, append: &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.push_char\" class=\"method trait-impl\"><a href=\"#method.push_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">push_char</a>(&amp;mut self, _append: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></div></details>","StringBuilder<'s>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stylize-for-%26str\" class=\"impl\"><a href=\"#impl-Stylize-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/crossterm/style/trait.Stylize.html\" title=\"trait devela::_dep::crossterm::style::Stylize\">Stylize</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Styled\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Styled\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" class=\"associatedtype\">Styled</a> = <a class=\"struct\" href=\"devela/_dep/crossterm/style/struct.StyledContent.html\" title=\"struct devela::_dep::crossterm::style::StyledContent\">StyledContent</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>This type with styles applied.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stylize\" class=\"method trait-impl\"><a href=\"#method.stylize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#tymethod.stylize\" class=\"fn\">stylize</a>(self) -&gt; &lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/crossterm/style/trait.Stylize.html\" title=\"trait devela::_dep::crossterm::style::Stylize\">Stylize</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;&amp;str as Stylize&gt;::Styled\">ⓘ</a></h4></section></summary><div class='docblock'>Styles this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with\" class=\"method trait-impl\"><a href=\"#method.with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.with\" class=\"fn\">with</a>(self, color: <a class=\"enum\" href=\"devela/_dep/crossterm/style/enum.Color.html\" title=\"enum devela::_dep::crossterm::style::Color\">Color</a>) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on\" class=\"method trait-impl\"><a href=\"#method.on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on\" class=\"fn\">on</a>(self, color: <a class=\"enum\" href=\"devela/_dep/crossterm/style/enum.Color.html\" title=\"enum devela::_dep::crossterm::style::Color\">Color</a>) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline\" class=\"method trait-impl\"><a href=\"#method.underline\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline\" class=\"fn\">underline</a>(self, color: <a class=\"enum\" href=\"devela/_dep/crossterm/style/enum.Color.html\" title=\"enum devela::_dep::crossterm::style::Color\">Color</a>) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.attribute\" class=\"method trait-impl\"><a href=\"#method.attribute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.attribute\" class=\"fn\">attribute</a>(self, attr: <a class=\"enum\" href=\"devela/_dep/crossterm/style/enum.Attribute.html\" title=\"enum devela::_dep::crossterm::style::Attribute\">Attribute</a>) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Styles the content with the attribute.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method trait-impl\"><a href=\"#method.reset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.reset\" class=\"fn\">reset</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.Reset\" title=\"variant devela::_dep::crossterm::style::Attribute::Reset\"><code>Reset</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bold\" class=\"method trait-impl\"><a href=\"#method.bold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.bold\" class=\"fn\">bold</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.Bold\" title=\"variant devela::_dep::crossterm::style::Attribute::Bold\"><code>Bold</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underlined\" class=\"method trait-impl\"><a href=\"#method.underlined\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underlined\" class=\"fn\">underlined</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.Underlined\" title=\"variant devela::_dep::crossterm::style::Attribute::Underlined\"><code>Underlined</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse\" class=\"method trait-impl\"><a href=\"#method.reverse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.reverse\" class=\"fn\">reverse</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.Reverse\" title=\"variant devela::_dep::crossterm::style::Attribute::Reverse\"><code>Reverse</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dim\" class=\"method trait-impl\"><a href=\"#method.dim\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.dim\" class=\"fn\">dim</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.Dim\" title=\"variant devela::_dep::crossterm::style::Attribute::Dim\"><code>Dim</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.italic\" class=\"method trait-impl\"><a href=\"#method.italic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.italic\" class=\"fn\">italic</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.Italic\" title=\"variant devela::_dep::crossterm::style::Attribute::Italic\"><code>Italic</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.negative\" class=\"method trait-impl\"><a href=\"#method.negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.negative\" class=\"fn\">negative</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.Reverse\" title=\"variant devela::_dep::crossterm::style::Attribute::Reverse\"><code>Reverse</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slow_blink\" class=\"method trait-impl\"><a href=\"#method.slow_blink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.slow_blink\" class=\"fn\">slow_blink</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.SlowBlink\" title=\"variant devela::_dep::crossterm::style::Attribute::SlowBlink\"><code>SlowBlink</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rapid_blink\" class=\"method trait-impl\"><a href=\"#method.rapid_blink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.rapid_blink\" class=\"fn\">rapid_blink</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.RapidBlink\" title=\"variant devela::_dep::crossterm::style::Attribute::RapidBlink\"><code>RapidBlink</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hidden\" class=\"method trait-impl\"><a href=\"#method.hidden\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.hidden\" class=\"fn\">hidden</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.Hidden\" title=\"variant devela::_dep::crossterm::style::Attribute::Hidden\"><code>Hidden</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crossed_out\" class=\"method trait-impl\"><a href=\"#method.crossed_out\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.crossed_out\" class=\"fn\">crossed_out</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Applies the <a href=\"devela/_dep/crossterm/style/enum.Attribute.html#variant.CrossedOut\" title=\"variant devela::_dep::crossterm::style::Attribute::CrossedOut\"><code>CrossedOut</code></a> attribute to the text.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.black\" class=\"method trait-impl\"><a href=\"#method.black\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.black\" class=\"fn\">black</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Black\" title=\"variant devela::_dep::crossterm::style::Color::Black\"><code>Black</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_black\" class=\"method trait-impl\"><a href=\"#method.on_black\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_black\" class=\"fn\">on_black</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Black\" title=\"variant devela::_dep::crossterm::style::Color::Black\"><code>Black</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_black\" class=\"method trait-impl\"><a href=\"#method.underline_black\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_black\" class=\"fn\">underline_black</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Black\" title=\"variant devela::_dep::crossterm::style::Color::Black\"><code>Black</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dark_grey\" class=\"method trait-impl\"><a href=\"#method.dark_grey\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.dark_grey\" class=\"fn\">dark_grey</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkGrey\" title=\"variant devela::_dep::crossterm::style::Color::DarkGrey\"><code>DarkGrey</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_dark_grey\" class=\"method trait-impl\"><a href=\"#method.on_dark_grey\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_dark_grey\" class=\"fn\">on_dark_grey</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkGrey\" title=\"variant devela::_dep::crossterm::style::Color::DarkGrey\"><code>DarkGrey</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_dark_grey\" class=\"method trait-impl\"><a href=\"#method.underline_dark_grey\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_dark_grey\" class=\"fn\">underline_dark_grey</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkGrey\" title=\"variant devela::_dep::crossterm::style::Color::DarkGrey\"><code>DarkGrey</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.red\" class=\"method trait-impl\"><a href=\"#method.red\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.red\" class=\"fn\">red</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Red\" title=\"variant devela::_dep::crossterm::style::Color::Red\"><code>Red</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_red\" class=\"method trait-impl\"><a href=\"#method.on_red\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_red\" class=\"fn\">on_red</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Red\" title=\"variant devela::_dep::crossterm::style::Color::Red\"><code>Red</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_red\" class=\"method trait-impl\"><a href=\"#method.underline_red\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_red\" class=\"fn\">underline_red</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Red\" title=\"variant devela::_dep::crossterm::style::Color::Red\"><code>Red</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dark_red\" class=\"method trait-impl\"><a href=\"#method.dark_red\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.dark_red\" class=\"fn\">dark_red</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkRed\" title=\"variant devela::_dep::crossterm::style::Color::DarkRed\"><code>DarkRed</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_dark_red\" class=\"method trait-impl\"><a href=\"#method.on_dark_red\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_dark_red\" class=\"fn\">on_dark_red</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkRed\" title=\"variant devela::_dep::crossterm::style::Color::DarkRed\"><code>DarkRed</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_dark_red\" class=\"method trait-impl\"><a href=\"#method.underline_dark_red\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_dark_red\" class=\"fn\">underline_dark_red</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkRed\" title=\"variant devela::_dep::crossterm::style::Color::DarkRed\"><code>DarkRed</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.green\" class=\"method trait-impl\"><a href=\"#method.green\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.green\" class=\"fn\">green</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Green\" title=\"variant devela::_dep::crossterm::style::Color::Green\"><code>Green</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_green\" class=\"method trait-impl\"><a href=\"#method.on_green\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_green\" class=\"fn\">on_green</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Green\" title=\"variant devela::_dep::crossterm::style::Color::Green\"><code>Green</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_green\" class=\"method trait-impl\"><a href=\"#method.underline_green\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_green\" class=\"fn\">underline_green</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Green\" title=\"variant devela::_dep::crossterm::style::Color::Green\"><code>Green</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dark_green\" class=\"method trait-impl\"><a href=\"#method.dark_green\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.dark_green\" class=\"fn\">dark_green</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkGreen\" title=\"variant devela::_dep::crossterm::style::Color::DarkGreen\"><code>DarkGreen</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_dark_green\" class=\"method trait-impl\"><a href=\"#method.on_dark_green\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_dark_green\" class=\"fn\">on_dark_green</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkGreen\" title=\"variant devela::_dep::crossterm::style::Color::DarkGreen\"><code>DarkGreen</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_dark_green\" class=\"method trait-impl\"><a href=\"#method.underline_dark_green\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_dark_green\" class=\"fn\">underline_dark_green</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkGreen\" title=\"variant devela::_dep::crossterm::style::Color::DarkGreen\"><code>DarkGreen</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.yellow\" class=\"method trait-impl\"><a href=\"#method.yellow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.yellow\" class=\"fn\">yellow</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Yellow\" title=\"variant devela::_dep::crossterm::style::Color::Yellow\"><code>Yellow</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_yellow\" class=\"method trait-impl\"><a href=\"#method.on_yellow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_yellow\" class=\"fn\">on_yellow</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Yellow\" title=\"variant devela::_dep::crossterm::style::Color::Yellow\"><code>Yellow</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_yellow\" class=\"method trait-impl\"><a href=\"#method.underline_yellow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_yellow\" class=\"fn\">underline_yellow</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Yellow\" title=\"variant devela::_dep::crossterm::style::Color::Yellow\"><code>Yellow</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dark_yellow\" class=\"method trait-impl\"><a href=\"#method.dark_yellow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.dark_yellow\" class=\"fn\">dark_yellow</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkYellow\" title=\"variant devela::_dep::crossterm::style::Color::DarkYellow\"><code>DarkYellow</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_dark_yellow\" class=\"method trait-impl\"><a href=\"#method.on_dark_yellow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_dark_yellow\" class=\"fn\">on_dark_yellow</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkYellow\" title=\"variant devela::_dep::crossterm::style::Color::DarkYellow\"><code>DarkYellow</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_dark_yellow\" class=\"method trait-impl\"><a href=\"#method.underline_dark_yellow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_dark_yellow\" class=\"fn\">underline_dark_yellow</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkYellow\" title=\"variant devela::_dep::crossterm::style::Color::DarkYellow\"><code>DarkYellow</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.blue\" class=\"method trait-impl\"><a href=\"#method.blue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.blue\" class=\"fn\">blue</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Blue\" title=\"variant devela::_dep::crossterm::style::Color::Blue\"><code>Blue</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_blue\" class=\"method trait-impl\"><a href=\"#method.on_blue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_blue\" class=\"fn\">on_blue</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Blue\" title=\"variant devela::_dep::crossterm::style::Color::Blue\"><code>Blue</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_blue\" class=\"method trait-impl\"><a href=\"#method.underline_blue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_blue\" class=\"fn\">underline_blue</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Blue\" title=\"variant devela::_dep::crossterm::style::Color::Blue\"><code>Blue</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dark_blue\" class=\"method trait-impl\"><a href=\"#method.dark_blue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.dark_blue\" class=\"fn\">dark_blue</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkBlue\" title=\"variant devela::_dep::crossterm::style::Color::DarkBlue\"><code>DarkBlue</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_dark_blue\" class=\"method trait-impl\"><a href=\"#method.on_dark_blue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_dark_blue\" class=\"fn\">on_dark_blue</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkBlue\" title=\"variant devela::_dep::crossterm::style::Color::DarkBlue\"><code>DarkBlue</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_dark_blue\" class=\"method trait-impl\"><a href=\"#method.underline_dark_blue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_dark_blue\" class=\"fn\">underline_dark_blue</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkBlue\" title=\"variant devela::_dep::crossterm::style::Color::DarkBlue\"><code>DarkBlue</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.magenta\" class=\"method trait-impl\"><a href=\"#method.magenta\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.magenta\" class=\"fn\">magenta</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Magenta\" title=\"variant devela::_dep::crossterm::style::Color::Magenta\"><code>Magenta</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_magenta\" class=\"method trait-impl\"><a href=\"#method.on_magenta\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_magenta\" class=\"fn\">on_magenta</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Magenta\" title=\"variant devela::_dep::crossterm::style::Color::Magenta\"><code>Magenta</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_magenta\" class=\"method trait-impl\"><a href=\"#method.underline_magenta\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_magenta\" class=\"fn\">underline_magenta</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Magenta\" title=\"variant devela::_dep::crossterm::style::Color::Magenta\"><code>Magenta</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dark_magenta\" class=\"method trait-impl\"><a href=\"#method.dark_magenta\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.dark_magenta\" class=\"fn\">dark_magenta</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkMagenta\" title=\"variant devela::_dep::crossterm::style::Color::DarkMagenta\"><code>DarkMagenta</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_dark_magenta\" class=\"method trait-impl\"><a href=\"#method.on_dark_magenta\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_dark_magenta\" class=\"fn\">on_dark_magenta</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkMagenta\" title=\"variant devela::_dep::crossterm::style::Color::DarkMagenta\"><code>DarkMagenta</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_dark_magenta\" class=\"method trait-impl\"><a href=\"#method.underline_dark_magenta\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_dark_magenta\" class=\"fn\">underline_dark_magenta</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkMagenta\" title=\"variant devela::_dep::crossterm::style::Color::DarkMagenta\"><code>DarkMagenta</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cyan\" class=\"method trait-impl\"><a href=\"#method.cyan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.cyan\" class=\"fn\">cyan</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Cyan\" title=\"variant devela::_dep::crossterm::style::Color::Cyan\"><code>Cyan</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_cyan\" class=\"method trait-impl\"><a href=\"#method.on_cyan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_cyan\" class=\"fn\">on_cyan</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Cyan\" title=\"variant devela::_dep::crossterm::style::Color::Cyan\"><code>Cyan</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_cyan\" class=\"method trait-impl\"><a href=\"#method.underline_cyan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_cyan\" class=\"fn\">underline_cyan</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Cyan\" title=\"variant devela::_dep::crossterm::style::Color::Cyan\"><code>Cyan</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dark_cyan\" class=\"method trait-impl\"><a href=\"#method.dark_cyan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.dark_cyan\" class=\"fn\">dark_cyan</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkCyan\" title=\"variant devela::_dep::crossterm::style::Color::DarkCyan\"><code>DarkCyan</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_dark_cyan\" class=\"method trait-impl\"><a href=\"#method.on_dark_cyan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_dark_cyan\" class=\"fn\">on_dark_cyan</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkCyan\" title=\"variant devela::_dep::crossterm::style::Color::DarkCyan\"><code>DarkCyan</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_dark_cyan\" class=\"method trait-impl\"><a href=\"#method.underline_dark_cyan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_dark_cyan\" class=\"fn\">underline_dark_cyan</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.DarkCyan\" title=\"variant devela::_dep::crossterm::style::Color::DarkCyan\"><code>DarkCyan</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.white\" class=\"method trait-impl\"><a href=\"#method.white\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.white\" class=\"fn\">white</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.White\" title=\"variant devela::_dep::crossterm::style::Color::White\"><code>White</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_white\" class=\"method trait-impl\"><a href=\"#method.on_white\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_white\" class=\"fn\">on_white</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.White\" title=\"variant devela::_dep::crossterm::style::Color::White\"><code>White</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_white\" class=\"method trait-impl\"><a href=\"#method.underline_white\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_white\" class=\"fn\">underline_white</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.White\" title=\"variant devela::_dep::crossterm::style::Color::White\"><code>White</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.grey\" class=\"method trait-impl\"><a href=\"#method.grey\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.grey\" class=\"fn\">grey</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the foreground color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Grey\" title=\"variant devela::_dep::crossterm::style::Color::Grey\"><code>Grey</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_grey\" class=\"method trait-impl\"><a href=\"#method.on_grey\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.on_grey\" class=\"fn\">on_grey</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the background color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Grey\" title=\"variant devela::_dep::crossterm::style::Color::Grey\"><code>Grey</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underline_grey\" class=\"method trait-impl\"><a href=\"#method.underline_grey\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/crossterm/style/trait.Stylize.html#method.underline_grey\" class=\"fn\">underline_grey</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/_dep/crossterm/style/trait.Stylize.html#associatedtype.Styled\" title=\"type devela::_dep::crossterm::style::Stylize::Styled\">Styled</a></h4></section></summary><div class='docblock'>Sets the underline color to <a href=\"devela/_dep/crossterm/style/enum.Color.html#variant.Grey\" title=\"variant devela::_dep::crossterm::style::Color::Grey\"><code>Grey</code></a>.</div></details></div></details>","Stylize","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26ByteStr%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/bstr/mod.rs.html#306\">Source</a><a href=\"#impl-TryFrom%3C%26ByteStr%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/code/trait.TryFrom.html\" title=\"trait devela::code::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"devela/_core/bstr/struct.ByteStr.html\" title=\"struct devela::_core::bstr::ByteStr\">ByteStr</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/bstr/mod.rs.html#307\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"devela/_core/str/struct.Utf8Error.html\" title=\"struct devela::_core::str::Utf8Error\">Utf8Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/bstr/mod.rs.html#310\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    s: &amp;'a <a class=\"struct\" href=\"devela/_core/bstr/struct.ByteStr.html\" title=\"struct devela::_core::bstr::ByteStr\">ByteStr</a>,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/code/trait.TryFrom.html\" title=\"trait devela::code::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"devela/_core/bstr/struct.ByteStr.html\" title=\"struct devela::_core::bstr::ByteStr\">ByteStr</a>&gt;&gt;::<a class=\"associatedtype\" href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" title=\"type devela::code::TryFrom::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&amp;&#39;a str, &lt;&amp;&#39;a str as TryFrom&lt;&amp;&#39;a ByteStr&gt;&gt;::Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'a ByteStr>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26ByteString%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/bstr.rs.html#581\">Source</a><a href=\"#impl-TryFrom%3C%26ByteString%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/code/trait.TryFrom.html\" title=\"trait devela::code::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"devela/_dep/_alloc/bstr/struct.ByteString.html\" title=\"struct devela::_dep::_alloc::bstr::ByteString\">ByteString</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/bstr.rs.html#582\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"devela/_core/str/struct.Utf8Error.html\" title=\"struct devela::_core::str::Utf8Error\">Utf8Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/bstr.rs.html#585\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    s: &amp;'a <a class=\"struct\" href=\"devela/_dep/_alloc/bstr/struct.ByteString.html\" title=\"struct devela::_dep::_alloc::bstr::ByteString\">ByteString</a>,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/code/trait.TryFrom.html\" title=\"trait devela::code::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"devela/_dep/_alloc/bstr/struct.ByteString.html\" title=\"struct devela::_dep::_alloc::bstr::ByteString\">ByteString</a>&gt;&gt;::<a class=\"associatedtype\" href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" title=\"type devela::code::TryFrom::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&amp;&#39;a str, &lt;&amp;&#39;a str as TryFrom&lt;&amp;&#39;a ByteString&gt;&gt;::Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'a ByteString>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26OsStr%3E-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.72.0\">1.72.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#1445\">Source</a></span><a href=\"#impl-TryFrom%3C%26OsStr%3E-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/code/trait.TryFrom.html\" title=\"trait devela::code::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"devela/all/struct.OsStr.html\" title=\"struct devela::all::OsStr\">OsStr</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#1457\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: &amp;'a <a class=\"struct\" href=\"devela/all/struct.OsStr.html\" title=\"struct devela::all::OsStr\">OsStr</a>,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/code/trait.TryFrom.html\" title=\"trait devela::code::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"devela/all/struct.OsStr.html\" title=\"struct devela::all::OsStr\">OsStr</a>&gt;&gt;::<a class=\"associatedtype\" href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" title=\"type devela::code::TryFrom::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&amp;&#39;a str, &lt;&amp;&#39;a str as TryFrom&lt;&amp;&#39;a OsStr&gt;&gt;::Error&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Tries to convert an <code>&amp;OsStr</code> to a <code>&amp;str</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::ffi::OsStr;\n\n<span class=\"kw\">let </span>os_str = OsStr::new(<span class=\"string\">\"foo\"</span>);\n<span class=\"kw\">let </span>as_str = &lt;<span class=\"kw-2\">&amp;</span>str&gt;::try_from(os_str).unwrap();\n<span class=\"macro\">assert_eq!</span>(as_str, <span class=\"string\">\"foo\"</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#1446\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"devela/_core/str/struct.Utf8Error.html\" title=\"struct devela::_core::str::Utf8Error\">Utf8Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<&'a OsStr>","devela::_dep::winnow::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpdateSlice-for-%26str\" class=\"impl\"><a href=\"#impl-UpdateSlice-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.UpdateSlice.html\" title=\"trait devela::_dep::winnow::stream::UpdateSlice\">UpdateSlice</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_slice\" class=\"method trait-impl\"><a href=\"#method.update_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.UpdateSlice.html#tymethod.update_slice\" class=\"fn\">update_slice</a>(self, inner: &lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type devela::_dep::winnow::stream::Stream::Slice\">Slice</a>) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;str\">ⓘ</a></h4></section></summary><div class='docblock'>Convert an <code>Output</code> type to be used as <code>Stream</code></div></details></div></details>","UpdateSlice","devela::_dep::winnow::Str"],["<section id=\"impl-AsHeaderName-for-%26str\" class=\"impl\"><a href=\"#impl-AsHeaderName-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"devela/_dep/ureq/http/header/trait.AsHeaderName.html\" title=\"trait devela::_dep::ureq::http::header::AsHeaderName\">AsHeaderName</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section>","AsHeaderName","devela::_dep::winnow::Str"],["<section id=\"impl-AsSendBody-for-%26str\" class=\"impl\"><a href=\"#impl-AsSendBody-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/ureq/trait.AsSendBody.html\" title=\"trait devela::_dep::ureq::AsSendBody\">AsSendBody</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section>","AsSendBody","devela::_dep::winnow::Str"],["<section id=\"impl-Error-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.65.0\">1.65.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/str/mod.rs.html#3165\">Source</a></span><a href=\"#impl-Error-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl !<a class=\"trait\" href=\"devela/all/trait.Error.html\" title=\"trait devela::all::Error\">Error</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section>","Error","devela::_dep::winnow::Str"],["<section id=\"impl-IntoHeaderName-for-%26str\" class=\"impl\"><a href=\"#impl-IntoHeaderName-for-%26str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/ureq/http/header/trait.IntoHeaderName.html\" title=\"trait devela::_dep::ureq::http::header::IntoHeaderName\">IntoHeaderName</a> for &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section>","IntoHeaderName","devela::_dep::winnow::Str"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[280229]}