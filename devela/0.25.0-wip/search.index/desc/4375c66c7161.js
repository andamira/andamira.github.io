rd_("DjReturns the session ID for the current process or <code>None</code> if \xe2\x80\xa6CmSets the position of the bottom side of this rectangle to \xe2\x80\xa60CiSets the active canvas using a CSS <code>selector</code>.CdSet the cursor to a new location in the same string.CcSets the cutoff frequency of the filter (in hertz).BcChange this table\xe2\x80\x99s dotted status00BbModifies the amplification factor.AjModifies the speed factor.CaSets the size of the filled region of the buffer.CgSupply the format as which to interpret the read image.CiSets the height of this rectangle to the given value, \xe2\x80\xa60DiSet the decoder to have the specified limits. See <code>Limits</code> \xe2\x80\xa6DcSets the value of the <code>SO_LINGER</code> option on this socket.CnSets the global logger to a <code>&amp;&#39;static Log</code>.0DdSets the args into an <code>m128</code>, first arg is the high lane.0BhSet the minute on this broken down time.CbSet the time zone offset on this broken down time.CfSets a constant value that the modulator is offset by.B`Sets whether the filter applies.oSet the prefix.CbChanges what should happen to effect when it ends.ClSet the rumble motors to their specified intensities, if \xe2\x80\xa60BhSet the second on this broken down time.CkSets shaped state, to create via SDL_CreateShapedWindow \xe2\x80\xa6EbSets the bit corresponding to a <code>signal</code> in the <code>sig</code> array.Di<strong>Sets</strong> the attribute: whether the output is stereo 3D; \xe2\x80\xa6oSet the suffix.AmSets the volume of the sound.0CcSets the volume adjustment to apply to input audio.CbSets the (post-effects) volume of the mixer track.CaSets the (post-effects) volume of the send track.11B`Changes the volume of the sound.0CmSets the volume for a given channel number. Will panic if \xe2\x80\xa6AoSet chunk-&gt;volume to volume.BiSet the volume for any allocated channel.CnSet the volume on a scale of 0 to 128. Values greater than \xe2\x80\xa6CoFilter <code>ShiftLeft</code>: D = saturation255(S &lt;&lt; N).BnPerforms the <code>&lt;&lt;=</code> operation.00C`A short ASCII-only string identifying the codec.0AmShow or hide the mouse cursor0BnPerforms the <code>&gt;&gt;=</code> operation.00CdDetermines if the <code>-</code> flag was specified.AlSwaps bytes of each element.00BlRestrict each element to a certain interval.ClRestrict each element to a certain interval unless it is \xe2\x80\xa61010101010BjCounts the number of ones in each element.00Bj<code>T</code> must be a vector of floats.00000CnRounds down each element to the next lowest integer-valued \xe2\x80\xa600BfTakes the square root of each element.00ClRounds each element to the closest integer-valued float. \xe2\x80\xa600CbReturns the integer part of each element as an \xe2\x80\xa600CbThe sine calculated using Taylor series expansion.nPrivate fieldsmSize in bytesCnSets the approximate size limit, in bytes, of the compiled \xe2\x80\xa6E`Returns the ratio of a <code>usize</code> in respect to <code>other_size</code>.CmSkip processing alpha if supported by codec. Note that if \xe2\x80\xa6BnIndicate that a struct field has been skipped.CfIndicate that a struct variant field has been skipped.BbSkip decoding for selected frames.DhSkips all bytes until the delimiter <code>byte</code> or EOF is reached.0000DcCreates an iterator that <code>skip</code>s elements based on a \xe2\x80\xa6000000000000000000000CiApplies the <code>SlowBlink</code> attribute to the text.CiFires off a task into the Rayon thread pool in the \xe2\x80\x9c\xe2\x80\xa6DjSpawns a job into the fork-join scope <code>self</code>. This job will \xe2\x80\xa6CnSpawns an asynchronous task in this thread pool. This task \xe2\x80\xa6DcSets the <code>split</code> field to <code>SixelSplit::Auto</code>.CnReturns this tuple with the head element splitted from the \xe2\x80\xa60DcSets the <code>split</code> field to <code>SixelSplit::Norm</code>.CnReturns this tuple with the tail element splitted from the \xe2\x80\xa60BhReturns the floored integer square root.0AnLanewise <code>sqrt(a)</code>.0CeLanewise <code>sqrt</code> on <code>f64</code> lanes.0BhReturns the rounded integer square root.0Ah&lt; Source audio formatAnBlock size for filesystem I/O.0ChReturns the \xe2\x80\x9cpreferred\xe2\x80\x9d block size for efficient \xe2\x80\xa6BjAdd an element to the (back of the) stack.0CiSets the size of the stack (in bytes) for the new thread.BhGets the value that was specified by \xe2\x80\xa6BiSets the stack size of the worker threadsCnAttempts to force the child to exit, but does not wait for \xe2\x80\xa6CeAttempts to seek to an offset, in bytes, in a stream.CeDecoding: pts of the first frame of the stream in \xe2\x80\xa6CnAll fields below this line are not part of the public API. \xe2\x80\xa6CdPosition of the first frame of the component, in \xe2\x80\xa6AgWhen the motion starts.BiSets when the sound should start playing.0BdWhen the sound should start playing.110CfReturns the time where the process was started (in \xe2\x80\xa6CjGets a pinning mutable reference from a static mutable \xe2\x80\xa6DhGets a pinning reference from a <code>&amp;&#39;static</code> reference.DfReturns a mutable reference to the associated <code>StatusCode</code>.BhStores the value to the reference given.0BgStore data from a register into memory.0BkReturns the length of this file (in bytes).BmReturns the length of this stream (in bytes).0000CjStrict integer addition. Computes <code>self + rhs</code>.00000000000CmStrict integer substration. Computes <code>self - rhs</code>.00000000000BgPerforms the <code>-=</code> operation.EhModifies this set to contain the difference of <code>self</code> and <code>rhs</code>\xe2\x80\xa6fPanics222CeThe intersection of a source flags value with the \xe2\x80\xa600000000000000000000BfDisables all flags enabled in the set.00000004CcLow lane <code>a - b</code>, other lanes unchanged.0DiSubtracts <code>rhs</code> from the minimum and maximum values of the \xe2\x80\xa6DnAn array of length ndim. If <code>suboffsets[n] &gt;= 0</code>, the values \xe2\x80\xa6CnCreates an iterator where each successive item is computed \xe2\x80\xa6CmCreates an iterator which, starting from an initial item, \xe2\x80\xa6000FcReplaces the existing <code>state</code> and <code>value</code> with <code>new_state</code> and \xe2\x80\xa6CgNominal unaccelerated pixel format, see AV_PIX_FMT_xxx.CkSwaps the last two pairs of elements at the back of the \xe2\x80\xa6BkSwaps the front and back pairs of elements.BgReverses the byte order of the integer.00000000000000000000000000000000000BhReverses the byte order of each element.00000000000CjSwaps the first two elements at the front of the destaque.CgThis configures swap-greed mode for the entire pattern.EcSets a value <code>T</code> as the task-local value for the closure <code>F</code>.AjPerforms a getpid syscall.CkReturns an iterator over all non-overlapping matches of \xe2\x80\xa6DiReturns an iterator over the substrings of <code>self</code> that are \xe2\x80\xa6DbGets the value of the <code>SO_ERROR</code> option on this socket.00CfReturns the value of the <code>SO_ERROR</code> option.00CgReturns the first <code>n</code> elements of the slice.CmRecognize the input slice up to the first occurrence of a \xe2\x80\xa6CfReturns the value stored in the task local by this \xe2\x80\xa6CgCreates an iterator that yields elements based on a \xe2\x80\xa6000000000000000000000D`Recognize the longest (m &lt;= len &lt;= n) input slice that \xe2\x80\xa6CnComputes the tangent using Taylor series expansion of sine \xe2\x80\xa6DkDeclares a new task-local key of type <code>tokio::task::LocalKey</code>\xe2\x80\xa6Ee<code>core</code> Extracts the successful type of a [<code>TaskPoll&lt;T&gt;</code>].0CjSequence two parsers, only returning the output of the \xe2\x80\xa6DkCompute the bitwise of sign bit NOT of <code>a</code> and then AND with \xe2\x80\xa6000EhComputes the bitwise AND of 256 bits in <code>a</code> and <code>b</code>, returns 1 \xe2\x80\xa6000B`Returns the rendered text width.AoThe JavaScript event timestamp.0BjThe time stamp of when the event occurred.0AlThe time stamp of the event.Cb\xf0\x9f\x9b\xa1\xef\xb8\x8f The time stamp of when the event occurred.332210AnCreates a bitmask from a mask.CiReturns a new allocated C-compatible, nul-terminanted \xe2\x80\xa6000AlConverts radians to degrees.BnConverts each element from radians to degrees.00000CnReturns a JavaScript <code>KeyboardEvent</code> physical code.00DeReturns a JavaScript <code>KeyboardEvent</code> physical code and \xe2\x80\xa6DeReturns a JavaScript <code>KeyboardEvent</code> physical code + a \xe2\x80\xa6BmReturns a copy of this image as a Luma image.AlConverts degrees to radians.BnConverts each element from degrees to radians.00000EbComposes a fat pointer <code>*const T</code> from a <code>FatPtr</code> structure.CmCreates a reducer that can be used to combine the results \xe2\x80\xa6BgConvert to <code>Rgb&lt;f64&gt;</code>.0000000BnReturns a copy of this image as an RGBA image.AoReturns the SWAP size in bytes.CkTrack replay gain in microbels (divide by 100000 to get \xe2\x80\xa6CmPeak track amplitude, with 100000 representing full scale \xe2\x80\xa6B`See <code>.tree_reduce()</code>.000CjGet the number of frames to trim from the start of the \xe2\x80\xa6CjWhen gapless support is enabled, this is the number of \xe2\x80\xa60BfInserts a key-value pair into the map.CnImmutably borrows the wrapped value, returning an error if \xe2\x80\xa6DgAttempts to immutably borrow the value <code>T</code>, returning an \xe2\x80\xa60DgReturns <code>Ok(true)</code> if the path points at an existing entity.CnTries to insert a key-value pair into the map, and returns \xe2\x80\xa60DjInitializes the contents of the cell to <code>value</code> if the cell \xe2\x80\xa605B`Insert the value into the entry.2CkSet the number of months on this span. The value may be \xe2\x80\xa6DkAllocates memory in the given allocator then places <code>x</code> into \xe2\x80\xa6DhConstructs a new <code>Rc&lt;T&gt;</code> in the provided allocator, \xe2\x80\xa61DlConstructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, \xe2\x80\xa6EgConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, \xe2\x80\xa6CfReduces the elements to a single one by repeatedly \xe2\x80\xa6000000000000000000000CkReduces the items in the iterator into one item using a \xe2\x80\xa60CfReturns the system configured time zone, if available.DkReturns the inner value, if the <code>Arc</code> has exactly one strong \xe2\x80\xa6DjReturns the inner value, if the <code>Rc</code> has exactly one strong \xe2\x80\xa61ChFetches the value, and applies a function to it that \xe2\x80\xa600000000000CkDuplicates the back pair of elements, before the second \xe2\x80\xa6ChDuplicates the front element, after the second front \xe2\x80\xa6EhChecks if <code>object</code> is an instance of <code>Self</code>, which may include \xe2\x80\xa60DbTests (at compile-time) if two <code>crate::any::TypeId</code> \xe2\x80\xa600CjApplies the <code>Underlined</code> attribute to the text.CnReturns a \xe2\x80\x98unixy\xe2\x80\x99 version of the application\xe2\x80\x99s name, \xe2\x80\xa6CiUnpack and interleave low lanes of two <code>u8x16</code>EaA copy of <code>self</code> unsetting the bits that are set in <code>mask</code>.00FdAllows turning a <code>Box&lt;T: Sized, A&gt;</code> into a <code>Box&lt;U: ?Sized, A&gt;</code> \xe2\x80\xa6EdReturns the contained <code>Err</code> value, consuming the <code>self</code> value.CaWrap RNG with the <code>UnwrapErr</code> wrapper.CaWrap RNG with the <code>UnwrapMut</code> wrapper.ClUpdates a rectangle within a planar YV12 or IYUV texture \xe2\x80\xa6CgUpgrade the weakref to a direct Bound object reference.0ChUsage Page for this Device/Interface (Windows/Mac only).CdValue to use for the <code>User-Agent</code> header.0Chbase \xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A downcasted pointer-sized unsigned \xe2\x80\xa60DkFetch a <code>Utf8Error</code> to get more details about the conversion \xe2\x80\xa6CkAccess the underlying UTF-8 error that was the cause of \xe2\x80\xa61FbCalls <code>op</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> \xe2\x80\xa6FeReturns <code>None</code> if the value is <code>None</code>, otherwise calls <code>op</code> with \xe2\x80\xa6FkMaps an <code>Option&lt;V&gt;</code> to an <code>Option&lt;W&gt;</code> by applying the <code>op</code> \xe2\x80\xa6CeAdds the value part of a new entry to the map output.CkAn iterator visiting all values mutably in arbitrary order.CjGets a mutable iterator over the values of the map, in \xe2\x80\xa6BhAn iterator visiting all values mutably.2Bn&lt; variable values for the enable expressionDdApply both <code>Parser::verify</code> and <code>Parser::map</code>.0CmVersion ID of architectural performance monitoring. (Bits \xe2\x80\xa6AmThe input contains a boolean.BgThe input contains a <code>char</code>.AkThe input contains an enum.BgThe input contains a <code>i128</code>.BnThe input contains an optional that is absent.BoThe input contains an optional that is present.BgThe input contains a <code>u128</code>.BjThe input contains a unit <code>()</code>.C`Waits indefinitely for the next available event.CfBlocks the current thread until initialization has \xe2\x80\xa6CjBlocks the current thread until the provided condition \xe2\x80\xa6DaGets the number of <code>Weak</code> pointers to this allocation.DeGets an approximation of the number of <code>Weak</code> pointers \xe2\x80\xa61DbGets the number of <code>Weak</code> pointers pointing to this \xe2\x80\xa6CfReturns the number of <code>WeakSender</code> handles.0CoReturns the number of <code>WeakUnboundedSender</code> handles.01143EaReturn an iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator \xe2\x80\xa6000DjCreates an iterator over the <code>Some</code> items of this iterator, \xe2\x80\xa60ClGets a mutable reference to the associated window of the \xe2\x80\xa6CfAllows configuring this request behaviour, using a \xe2\x80\xa6CiReturns a new empty sixel builder with the given byte \xe2\x80\xa6DgIf playback should be repeated delay it for <code>with_delay</code> \xe2\x80\xa6BcProvide the number of delay frames.CgCreates an agent with a bespoke transport and resolver.ChChange the radix while keeping everything else the same.BjProduce the consumed input with the output0DdSets the value of the \xe2\x80\x9ctasks\xe2\x80\x9d refresh kind to <code>true</code>.Cbput back value <code>value</code> (builder method)Ad&lt; Wayland displayAd&lt; Wayland surfaceCiConvert a slice to the inner type into a slice to the \xe2\x80\xa6CmThe default is Word. Wrap style is a hint for how strings \xe2\x80\xa6CmWrite an ANSI representation of this command to the given \xe2\x80\xa6DfWrites a <code>char</code> into this writer, returning whether the \xe2\x80\xa60000000CgWrite the given character to this writer, returning \xe2\x80\xa6Am&lt; true if open for writingCcWrites a single <code>i128</code> into this hasher.00000CkWrites an signed 128-bit integer in big-endian order to theChSpecifies a bit mask to enable or disable writing of \xe2\x80\xa60CcWrites a single <code>u128</code> into this hasher.00000CmWrites an unsigned 128-bit integer in big-endian order to \xe2\x80\xa6C`Returns a mutable reference to the inner writer.CmThe size in bytes of the XSAVE area containing all states \xe2\x80\xa6DiAllocates a <code>Arc&lt;T&gt;</code> with all contents being zeroed out.0CdAs <code>try_zeroed_box</code>, but unwraps for you.0CbAs <code>try_zeroed_vec</code> but unwraps for you0CnReturns the secondary zodiac symbol, associated to the end \xe2\x80\xa6AmA reference to a data buffer.CnBytestream IO Context. New public fields can be added with \xe2\x80\xa6m&lt; completeCc@addtogroup lavu_media Media Type @brief Media TypeClThis structure contains the data a format has to probe a \xe2\x80\xa6Bo&lt; Bottom coded first, bottom displayed firstBl&lt; Bottom coded first, top displayed firstBl&lt; Top coded first, bottom displayed firstBi&lt; Top coded_first, top displayed firstAl&lt; Round toward +infinity.ChAn owned permission to abort a spawned task, without \xe2\x80\xa6CmType representing the absence of an entry, as returned by \xe2\x80\xa6CeAn error returned by <code>LocalKey::try_with</code>.fU+00060000BaANSI 3-bit color codes, 8 colors.0BcANSI 8-bit color codes, 256 colors.0DdAn <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.CmOn Apple platforms, choose the rendering API for creating \xe2\x80\xa6C`A raw binary data buffer backed by a byte slice.0DcAn iterator over <code>N</code> elements of the iterator at a time.000Cg\xf0\x9f\x97\x83\xef\xb8\x8f A static array allowing uninitialized elements.0ChAn async-aware version of the <code>FnOnce</code> trait.00000000000000000B`Temporary implementation detail.00Cl\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A thread-safe signed integer type.0CkAn integer type which can be safely shared between threads.000Cn\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A thread-safe unsigned integer type.01111Dj<code>AudioBuffer</code> is a container for multi-channel planar audio \xe2\x80\xa6DkWraps <code>SDL_AudioDeviceID</code> and owns the callback data used by \xe2\x80\xa6Dd<code>AudioPlanes</code> provides immutable slices to each audio \xe2\x80\xa6CnValue of axis has changed. Value can be in range [-1.0, 1.0\xe2\x80\xa60Bi502 Bad Gateway [RFC9110, Section 15.6.3]Bi400 Bad Request [RFC9110, Section 15.5.1]CfThe number of bytes in a bitmask with this many lanes.C`Code to set the foreground color to bright blue.C`Code to set the foreground color to bright cyan.AfBad argument detected.0De<code>core</code> The bitwise OR assignment operator <code>|=</code>.0CcThe bitwise OR assignment operator <code>|=</code>.00nBlend factors.0AoA blinking cursor bar shape (|)BeBuilder for creating a response body.CfAn error returned by <code>RefCell::try_borrow</code>.00ClA borrowed byte buffer which is incrementally filled and \xe2\x80\xa600C`Owned or borrowed gil-bound Python smart pointerCfA trait for creating instances of <code>Hasher</code>.00Aa1-Byte byte array00000000000000000Aa2-Byte byte array00000000000000000Aa4-Byte byte array00000000000000000Aa8-Byte byte array00000000000000000AoCommand invoked cannot execute.BdCharacter device (S_IFCHR in POSIX).CdThe number of color components (channels) in the \xe2\x80\xa60ChA string that can help to interpret the meaning each \xe2\x80\xa6AmCode to unset crossed effect.BiCode to move the cursor down by one line.CdCode to move the cursor to the home position (1, 1).BkCode to move the cursor left by one column.BaCode to save the cursor position.DiReturns a slice with the code to move the cursor up by <code>n</code> \xe2\x80\xa6AePixels per centimeterDhAn iterator over the <code>char</code>s of a string slice, and their \xe2\x80\xa600CkParallel iterator over the characters of a string, with \xe2\x80\xa611AiA <code>char</code> tokenAlType returned by char types.0000BoThe standard error stream for spawned children.BgA handle to a child process\xe2\x80\x99s stderr.C`The standard output stream for spawned children.CiA handle to a child process\xe2\x80\x99s standard output (stdout).CiAn iterator over a slice in (non-overlapping) chunks (\xe2\x80\xa600CnParallel iterator over immutable non-overlapping chunks of \xe2\x80\xa611AaControls a clock.BgAn iterator over the command arguments.CcAn iterator over the command environment variables.BbDepth and stencil compare function0Dh<code>Parser</code> implementation for <code>Parser::complete_err</code>Dc<code>Parser</code> implementation for <code>Parser::context</code>Df<code>core</code> Used to tell an operation whether it should exit \xe2\x80\xa60CmUsed to tell an operation whether it should exit early or \xe2\x80\xa600DiA managed dynamic collection of single-thread <code>CoroWorker</code> \xe2\x80\xa60DfA backend that uses cpal to connect a <code>Renderer</code> to the \xe2\x80\xa6CkImplements function to read/write cpuid. This allows to \xe2\x80\xa6CeLow-level data-structure to store result of cpuid \xe2\x80\xa6BmResult of the <code>cpuid</code> instruction.00Dk<code>Crc16AnsiLe</code> implements the CRC-16 algorithm using the ANSI \xe2\x80\xa6AlAll cells at the cursor row.AcDark magenta color.DeCommon unsafe trait for enumerating <code>Copy</code>-constrained \xe2\x80\xa60Ak64-bit data <em>value</em>.0AmA serialized date was invalidEb\xf0\x9f\x96\xb9 <code>core</code> A struct to help with [<code>Debug</code>] implementations.0CnA struct to help with <code>fmt::Debug</code> implementations.0000ChThe stream contained malformed data and could not be \xe2\x80\xa60ClAn iterator that decodes UTF-16 encoded code points from \xe2\x80\xa600AhControls a delay effect.BfA description of what was being parsedDlA <strong>data structure</strong> that can be deserialized from any data \xe2\x80\xa60CnUnix-specific extension methods for <code>fs::DirEntry</code>.0BaDevice is running on the battery.FcThe editable root TOML <code>Table</code>, containing <code>Key</code>/<code>Value</code> pairs \xe2\x80\xa6CoAn iterator produced by calling <code>Vec::drain_filter</code>.DcA draining iterator over the elements of a <code>BinaryHeap</code>.00Ck\xf0\x9f\x97\x83\xef\xb8\x8f A dynamically allocated buffer for storing DSTs \xe2\x80\xa60DfThe metadata for a <code>Dyn = dyn SomeTrait</code> trait object type.00Al\xe2\x80\x9cOperation would block.\xe2\x80\x9dBoRepresents the type of a Python buffer element.DbAn iterator of <code>u16</code> over the string encoded as UTF-16.00CaParallel iterator over a string encoded as UTF-1611fU+00190000BeThe ending time of a region of audio.CeAn iterator over the escaped version of a byte slice.0000DgAn iterator that yields the literal escape code of a <code>char</code>.CbThe return type of <code>str::escape_debug</code>.010100BhRepresents mouse, touch, or pen buttons.0Ce\xf0\x9f\x9b\xa1\xef\xb8\x8f An FFI-safe version of <code>EventKey</code>.0ChA sendible type that can push events to the event queue.BnAn example created with <code>enumset!</code>.AkExponential distance model.Ci\xf0\x9f\x8c\x90 Extension trait providing additional methods for \xe2\x80\xa60CfShader strings should never contains \\00 in the middle0De$ \xcf\x84/12 = \xcf\x80/6 = 30\\degree $ (A019673) <code>\xe2\x89\x88 0.52359877\xe2\x80\xa6</code>00000Dg$ \xcf\x84/16 = \xcf\x80/8 = 22.5\\degree $ (A019675) <code>\xe2\x89\x88 0.39269908\xe2\x80\xa6</code>00000Df$ \xcf\x84/24 = \xcf\x80/12 = 15\\degree $ (A019679) <code>\xe2\x89\x88 0.26179938\xe2\x80\xa6</code>00000Ck$ \xcf\x84/72 = \xcf\x80/36 = 5\\degree $ <code>\xe2\x89\x88 0.08726646\xe2\x80\xa6</code>00000AlFront-right (right) channel.AlFast-forwards through media.0AgFast-forward media key.ChProcessor and Processor Feature Identifiers (LEAF=0x01).CgUnix-specific extensions for <code>fs::FileType</code>.0ClAn iterator adapter to filter and apply a transformation \xe2\x80\xa60CiAn iterator over non-overlapping substring matches in \xe2\x80\xa6Di<code>FlatMapIter</code> maps each element to a serial iterator, then \xe2\x80\xa6BkA flat buffer over a (multi channel) image.0Dj<code>FlattenIter</code> turns each element to a serial iterator, then \xe2\x80\xa6AiThe terminal gained focusBfThe stream can only be seeked forward.Db<code>core</code> A future that is immediately ready with a value.0DlA write-once primitive similar to <code>std::sync::OnceLock&lt;T&gt;</code>.CkGroup has write permission (<code>S_IWGRP</code> in POSIX).BbAccess to device geolocation data.0Dg<code>alloc</code> A memory allocator that can be registered as the \xe2\x80\xa60CmA memory allocator that can be registered as the standard \xe2\x80\xa600000fU+00600000Dd<code>GroupingMap</code> is an intermediate struct for efficient \xe2\x80\xa60CiPermits generous deviation; suitable for less precise \xe2\x80\xa600000Dm\xf0\x9f\x94\x80 <code>core</code> A trait for creating instances of <code>Hasher</code>.0BoA fast 64-bit non-cryptographic hash algorithm.0BfRepresents an HTTP header field value.0fU+002D0000Cl418 I\xe2\x80\x99m a teapot [curiously not registered by IANA but \xe2\x80\xa6AiInvalid argument to exit.AmCode to unset inverse effect.Aiexterior gateway protocolAfIP6 Encap Sec. PayloadAfGeneral Routing Encap.gxns idpAiProtocol indep. multicastcpupmraw IP packetBjA type representing an ISO 8601 week date.EjIndicates whether <em>only</em> the 3 fields from <code>h</code> to <code>s</code> are \xe2\x80\xa6EjIndicates whether <em>only</em> the 3 fields from <code>y</code> to <code>d</code> are \xe2\x80\xa6EjIndicates whether <em>only</em> the 6 fields from <code>y</code> to <code>s</code> are \xe2\x80\xa6AdGeneric image bufferCnAn enumeration of supported image formats. Not all formats \xe2\x80\xa6BgEach pixel in this image is 16-bit LumaCaEach pixel in this image is 8-bit Luma with alphaAgAll samples are packed.AlA multi-format image reader.Ao\xe2\x9a\x96\xef\xb8\x8f An image-related result.00BlResult of an image decoding/encoding process0BlEach pixel in this image is 32-bit float RgbCaEach pixel in this image is 16-bit Rgb with alphaBmA DeserializeSeed helper for implementing \xe2\x80\xa6DkA view into a single location in an <code>InlineTable</code>, which may \xe2\x80\xa6FaA TOML <code>Value</code> that contains a collection of <code>Key</code>/<code>Value</code> pairsBcAn inline table of key/value pairs.Di<code>Instantiate</code> is an enumeration of instantiation functions \xe2\x80\xa6AaInstruction cacheCgData provided contains an interior nul byte at byte \xe2\x80\xa600000AoThis operation was interrupted.0000CkAn iterator adapter that places a separator between all \xe2\x80\xa60ClAn iterator adaptor to insert a particular value between \xe2\x80\xa601Dj<code>Intersperse</code> is an iterator that inserts a particular item \xe2\x80\xa62Bj\xf0\x9f\x9a\xa9 An invalid given character was found.000D`Gamepad does not have element referenced by <code>EvCode</code>.CbData not valid for the operation were encountered.0000AnName contains comma (\xe2\x80\x98,\xe2\x80\x99).Eh\xf0\x9f\x9a\xa9+ \xf0\x9d\x90\x93 An error composite of <code>InvalidChar</code> + <code>InvalidUtf8</code> \xe2\x80\xa6Cf\xf0\x9f\x9a\xa9 Invalid Utf-8 found while interpreting a byte \xe2\x80\xa6BiThe input was not a valid UTF-8 sequence.1011Bo<code>?std</code> Adds buffering to any reader.0Ch<code>?std</code> Wraps a writer and buffers its output.0Dg\xf0\x9f\x9a\xa9+ <code>?std</code> A list specifying general categories of I/O \xe2\x80\xa600Co\xf0\x9f\x94\x84 <code>std</code> Iterator over the entries in a directory.0Dc\xf0\x9f\x94\x84 <code>core</code> An iterator that maps each element to an \xe2\x80\xa60Di\xf0\x9f\x94\x84 <code>core</code> An iterator that flattens one level of nesting \xe2\x80\xa60DhA mutable iterator over the entries of a <code>HashTable</code> that \xe2\x80\xa6Dj\xf0\x9f\x94\x84 <code>core</code> An iterator that calls a fn with a reference to \xe2\x80\xa60CaIterate with the offset from the current location0Dg\xf0\x9f\x94\x84 <code>core</code> An iterator that repeats an element an exact \xe2\x80\xa60Dj\xf0\x9f\x94\x84 <code>core</code> Represents types that can be created by summing \xe2\x80\xa60AfThe job was not found.0lJPEG decoderBdThe representation of a JPEG encoderCgSize of the HPKE suite KEM ciphertext/encapsulated key.BiSize of the HPKE suite KEM shared secret.CkThe \xe2\x80\x9cBegin\xe2\x80\x9d key (often mapped to the 5 key when Num \xe2\x80\xa6Cl\xf0\x9f\x9a\xa9+ <code>Linux</code> <code>sys/errno.h</code> constants.De<code>Linux</code> File descriptor commands (for <code>fcntl</code>).BcLinux <code>ioctl</code> constants.BeLaunches a media-related application.0DiThe <code>LayoutError</code> is returned when the parameters given to \xe2\x80\xa600000AnDefault buffer implementation.BiLeft <strong>Control</strong> (Ctrl) key.0CfLeft Control key. (Control on macOS, Ctrl on other \xe2\x80\xa6CnAn enum representing the available verbosity level filters \xe2\x80\xa6BiMetrics associated with line positioning.Ck\xe2\x9a\x96\xef\xb8\x8f The return type for Linux-related functions that \xe2\x80\xa60AgA set of linux signals.0BnStatic method extensions for creating SurfacesCbMethod extensions for creating Textures from a \xe2\x80\xa6BcLoader trait for <code>RWops</code>gFreeBSDBn<code>log</code> Metadata about a log message.0AkDecreases the audio volume.0AgLower-volume media key.CmThe maximum number of permits which a semaphore can hold. \xe2\x80\xa6B`The duration of one microsecond.B`The duration of one millisecond.ChMarker trait for types that may be used as SIMD mask \xe2\x80\xa600Dg<code>MaybeDither</code> conditionally applies a dither to a sample \xe2\x80\xa6Di<code>core</code> A wrapper type to construct uninitialized instances \xe2\x80\xa60DfA wrapper type to construct uninitialized instances of <code>T</code>.00BkOpens the default media player application.0Ec<code>MediaSource</code> is a composite trait of <code>std::io::Read</code> and \xe2\x80\xa6CkAn iterator adaptor that merge-joins items from the two \xe2\x80\xa60CfUnix-specific extensions to <code>fs::Metadata</code>.0CdOS-specific extensions to <code>fs::Metadata</code>.Eb<code>MetadataLog</code> is a container for time-ordered <code>Metadata</code> \xe2\x80\xa6BjA microsecond is always 1,000 nanoseconds.ChThe smallest whole integer unit allowed is microseconds.BkA millisecond is always 1,000 microseconds.ChThe smallest whole integer unit allowed is milliseconds.ChThe output of the mixer. Implements <code>Source</code>.ClA backend that does not connect to any lower-level audio \xe2\x80\xa6DlTrait alias for <code>Parser</code> to be used with <code>ModalResult</code>0CiModal error reporting for <code>Parser::parse_next</code>00CiHPKE AuthPsk mode. Encrypt data to a public key, with \xe2\x80\xa6BdA unique identifier for a modulator.CdThis type allows to retrieve motherboard-related \xe2\x80\xa6AjRepresents a mouse button.Df\xf0\x9f\x94\x84 <code>std</code> Attempts to yield all pending values for an [\xe2\x80\xa60CgThe flavor that executes tasks across multiple threads.DjThe additive inverse of <code>ONE</code> (<code>-1</code>), if applicable.0CeInteger is too small to store in target integer type.0000C`Getting volume of received and transmitted data.BbThe system\xe2\x80\x99s networking is down.0000CiA pair of <code>Duration</code> and <code>Timeout</code>.C`Turns off the <code>Underlined</code> attribute.Ck\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f A signed integer that is known not to equal \xe2\x80\xa600000Cn\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f An unsigned integer that is known not to equal \xe2\x80\xa600000Df\xf0\x9d\x9f\x99\xe2\x9a\x97\xef\xb8\x8f <code>core</code> A signed integer that is known not to \xe2\x80\xa60CeAn <code>i128</code> that is known not to equal zero.00Di\xf0\x9d\x9f\x99\xe2\x9a\x97\xef\xb8\x8f <code>core</code> An unsigned integer that is known not to \xe2\x80\xa60CdA <code>u128</code> that is known not to equal zero.00AhSeek on unseekable file.0000CmOthers have write permission (<code>S_IWOTH</code> in POSIX).BgOptions for <code>Offset::round</code>.DjExtension trait for <code>std::sync::OnceLock</code> which helps avoid \xe2\x80\xa6CjOptions and flags which can be used to configure how a \xe2\x80\xa6Ck\xf0\x9f\x96\xb9 The type returned from <code>ExtOption::fmt_or</code>.0Dg\xf0\x9f\x93\x90 A unitless directional vector in <code>D</code>-dimensional space.0CmDescribes the transformations to be applied to the image. \xe2\x80\xa6BdRepresents orientation of a display.CfPlatform-specific extensions to <code>OsString</code>.0CmAn operation could not be completed, because it failed to \xe2\x80\xa60000C`Owned permit to send one value into the channel.B`Plug has ts that needs updating.lDumped core.BaAllocating memory to free memory.BaThis thread should not be frozen.AcKilled by a signal.BnThe basic <code>Parser</code> trait for errorsEf<code>std</code> Helper struct for safely printing paths with <code>format!</code> \xe2\x80\xa60ChAn iterator that allows peeking at an element before \xe2\x80\xa6fU+00250000CdRepresentation of the various permissions on a file.CkHelper trait for the <code>permutation()</code> combinator.Di<code>core</code> Zero-sized type used to mark things that \xe2\x80\x9cact like\xe2\x80\xa60CkZero-sized type used to mark things that \xe2\x80\x9cact like\xe2\x80\x9d \xe2\x80\xa600BaPixel format type of input image.0AkAt least pixels are packed.CeTrait for types which are Pod when wrapped in Option.BgFires when the pointer is pressed down.0B`Fires when the pointer is moved.0Dj\xf0\x9f\x9a\xa9 <code>std</code> A type of error which can be returned whenever a \xe2\x80\xa60ClA type of error which can be returned whenever a lock is \xe2\x80\xa60CeInteger is too large to store in target integer type.0000CkThe Y coordinate increases up relative to the window or \xe2\x80\xa6CeA POSIX locale implementation of <code>Custom</code>.AiPrefix is not an integer.AaPrint Screen key.00Db<code>ProbeResult</code> contains the result of a format probe \xe2\x80\xa6DeA wrapper around <code>str</code> where the storage is owned by a \xe2\x80\xa6BkRepresents a Python <code>bytearray</code>.F`This variant corresponds with <code>METH_VARARGS</code> <em>or</em> <code>METH_NOARGS</code> \xe2\x80\xa6BlRepresents a builtin Python function object.BlRepresents a Python <code>dict_items</code>.CgRepresents Python\xe2\x80\x99s <code>Exception</code> exception.BlRepresents a  Python <code>frozenset</code>.BeRepresents the PyGetSetDef structure.BeRepresents the PyMemberDef structure.0BeRepresents the PyMethodDef structure.CgRepresents Python\xe2\x80\x99s <code>NameError</code> exception.AnRepresents a Python traceback.ChImplemented by types which can be used as a concrete \xe2\x80\xa60CgRepresents Python\xe2\x80\x99s <code>TypeError</code> exception.Acbuilt-in \xe2\x80\x98type\xe2\x80\x99BkRear-centre (surround rear centre) channel.CkThe Retry-After response HTTP header indicates how long \xe2\x80\xa6AkIncreases the audio volume.0AgRaise-volume media key.Dh<code>RandomNoise</code> represents a sample of noise of a specified \xe2\x80\xa6Di\xf0\x9f\x94\x80 <code>std</code> The default state for [<code>HashMapStd</code>][\xe2\x80\xa60Dm<code>RandomState</code> is the default state for <code>HashMap</code> types.0Cn<code>core</code> Implemented by Rust\xe2\x80\x99s built-in range types0Df<code>RangeBounds</code> is implemented by Rust\xe2\x80\x99s built-in range \xe2\x80\xa600000CmAn iterator over non-overlapping splits of a string slice \xe2\x80\xa6ClA view into a single entry in a map, which may either be \xe2\x80\xa6D`<code>ReadBitsLtr</code> reads bits from most-significant to \xe2\x80\xa6Da<code>ReadBitsRtl</code> reads bits from least-significant to \xe2\x80\xa6D`<code>Rectangular</code> implements a dither using uniformly \xe2\x80\xa6DfApply rectangular dithering. See <code>Rectangular</code> for more \xe2\x80\xa6CnUsed to determine what you want to refresh specifically on \xe2\x80\xa6CcA by-reference adaptor for a <code>Replacer</code>.ClExtension trait for <code>http::Response&lt;Body&gt;</code>.CjAn image buffer for 32-bit float RGB pixels, where the \xe2\x80\xa6CaThe length of the salt used for password hashing.BaNot intended for application use.CgUse this function to allocate an empty, unpopulated \xe2\x80\xa6ChFree data previously allocated with SDL_LoadWAV() or \xe2\x80\xa6AhGet the value of a hint.CeGet RGBA values from a pixel in the specified format.BlDetermine whether the CPU has AVX2 features.CgDetermine whether the CPU has LASX (LOONGARCH SIMD) \xe2\x80\xa6CgDetermine whether the CPU has NEON (ARM SIMD) features.BlDetermine whether the CPU has SSE2 features.BlDetermine whether the CPU has SSE3 features.AnCallback used for hit-testing.A`&lt; Key pressedBj\\brief The SDL virtual key representation.BiLog a message with SDL_LOG_PRIORITY_INFO.BiLog a message with SDL_LOG_PRIORITY_WARN.ClMap an RGBA quadruple to a pixel value for a given pixel \xe2\x80\xa6Ah\\brief OS Specific eventCfOpen a URL/URI in the browser or other appropriate \xe2\x80\xa6C`Close and free an allocated SDL_RWops structure.BbWrite to an SDL_RWops data stream.CgAtomically increment a semaphore\xe2\x80\x99s value and wake \xe2\x80\xa6ChWait until a semaphore has a positive value and then \xe2\x80\xa6B`Set a hint with normal priority.Ch\\brief A collection of pixels used in software blitting.CiAn efficient driver-specific representation of pixel dataB`Definition of the timer ID type.CnGet a mask of the specified subsystems which are currently \xe2\x80\xa6CbUse this function to write a byte to an SDL_RWops.BlInformation about the version of SDL in use.Bfstring segment elements are i16 valuesBfstring segment elements are u16 valuesBoMethod extensions to Surface for saving to diskCiScrolled mouse wheel right (mostly on a laptop touchpad).AjGamepad uses SDL mappings.ChA random number generator that can be explicitly seeded.BjTimeout while sending the request headers.BkA unique identifier for a mixer send track.CkA set of shared secrets for either transmitting to this \xe2\x80\xa6CjMarker trait for types that may be used as SIMD vector \xe2\x80\xa600BgOptions for <code>Span::compare</code>.CfA printer for Jiff\xe2\x80\x99s \xe2\x80\x9cfriendly\xe2\x80\x9d duration format.BaA printer for Temporal durations.CnA sink that allows changing the position of the source and \xe2\x80\xa6fU+00020000DjAn adapter for using <code>std::fmt::Write</code> implementations with \xe2\x80\xa6DkA non blinking block cursor shape (inverse of <code>BlinkingBlock</code>\xe2\x80\xa6CiThe underlying storage (typically, a filesystem) is full.0000EeAssociated type for <code>&lt;&amp;str as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.0000Dh\xf0\x9d\x90\x93 A UTF-8 string with up to <code>u8::MAX</code> bytes, excluding \xe2\x80\xa60CmProvides extensions for string searching and manipulation \xe2\x80\xa6CjInformation about the SVM features that the processory \xe2\x80\xa6Dk<code>std</code> The default memory allocator provided by the operating \xe2\x80\xa60ClOpen and return a new file descriptor that refers to the \xe2\x80\xa6Cf<code>core</code> The context of an asynchronous task.0Di\xf0\x9f\x94\x84 <code>std</code> An iterator that infinitely accepts connections \xe2\x80\xa60D`<code>std</code> A TCP socket server, listening for connections.0BoA TCP socket server, listening for connections.Co<code>std</code> Possible values which can be passed to the \xe2\x80\xa60DkA trait for implementing arbitrary return types in the <code>main</code>\xe2\x80\xa6BdSets the wrap parameter for texture.0Cd<code>std</code> A scope to spawn scoped threads in.0ClThe protocol requires TLS (https), but the connector did \xe2\x80\xa6ClReturns an iterator that yields the lowercase equivalent \xe2\x80\xa600ClReturns an iterator that yields the uppercase equivalent \xe2\x80\xa600AgControls a mixer track.ChA type that upholds all invariants of <code>Step</code>.000Dk<code>TryFoldWith</code> is an iterator that applies a function over an \xe2\x80\xa6BdAn iterator over a incomplete tuple.0CgLeft and Right channels with a single low-frequency \xe2\x80\xa6AiA service is unavailable.ChAn IPv4 address representing an unspecified address: \xe2\x80\xa6DfAn IPv6 address representing the unspecified address: <code>::</code>.ClA <code>MacAddr</code> with all bytes set to <code>0</code>.CcExternal iterator for a string\xe2\x80\x99s word boundaries.AdSystem capabilities.0AdWindow capabilities.0CkThe offset for a particular civil datetime and time zone isAdUndercurls the text.AeUnderdashes the text.AcUnderdots the text.CiThe input contained a unit variant that was not expected.Cb\xf0\x9f\x95\x98 64-bit Unix time, supporting negative values.0Ck\xf0\x9f\x95\x98 32-bit Unix time, supporting only non-negative values.0AdAn unsigned integer.AbUnspecified error.00CfNo channel order. Only the channel count is specified.0ClCapturing a backtrace is not supported, likely because it\xe2\x80\xa6BoThis operation is unsupported on this platform.100CcAn operation can not be completed by the chosen \xe2\x80\xa60CjThe specified strict limits are not supported for this \xe2\x80\xa6ChAn unsupported container or codec feature was encounted.334DjConvert a <code>Stream</code> into an appropriate <code>Output</code> typeDjResult of calling <code>Pattern::as_utf8_pattern()</code>. Can be used \xe2\x80\xa60000DhA view into a vacant entry in a <code>BTreeMap</code>. It is part of \xe2\x80\xa6DhA view into a vacant entry in a <code>BTreeSet</code>. It is part of \xe2\x80\xa6DkA view into a vacant entry in a <code>HashMap</code>. It is part of the \xe2\x80\xa6DkA view into a vacant entry in a <code>HashSet</code>. It is part of the \xe2\x80\xa6DiA view into a vacant entry in a <code>HashTable</code>. It is part of \xe2\x80\xa6ClA view into a single empty location in a <code>Table</code>.D`A view into a single empty location in a <code>HeaderMap</code>.436565GgVerbatim prefix using Windows\xe2\x80\x99 <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>,00CgA Haar wavelet is a simple, piecewise-constant wavelet.0CdUse only the Wayland backend. Panics if unavailable.CiHandle to the brower\xe2\x80\x99s global Document associated APIs.0CnWhen something should start given the current state of the \xe2\x80\xa6AiAn enum of window events.ClTypestate when <code>RequestBuilder</code> has no send body.Bg\xf0\x9f\x8e\xb2 The <code>XorShift128</code> PRNG.0BbNot-equal (ordered, non-signaling)00AnNot-equal (ordered, signaling)00BdNot-equal (unordered, non-signaling)00B`Not-equal (unordered, signaling)00CdNot-greater-than-or-equal (unordered, non-signaling)00C`Not-greater-than-or-equal (unordered, signaling)00BkNot-greater-than (unordered, non-signaling)00BgNot-greater-than (unordered, signaling)00CaNot-less-than-or-equal (unordered, non-signaling)00BmNot-less-than-or-equal (unordered, signaling)00BhNot-less-than (unordered, non-signaling)00BdNot-less-than (unordered, signaling)00AnSee <code>_mm_prefetch</code>.00000000CkA utility function for creating masks to use with Intel \xe2\x80\xa600Ac\\typedef SDL_HapticAc\\brief SDL_sensor.hEdExtracts bits of <code>a</code> specified by <code>control</code> into the least \xe2\x80\xa600000000000DhSets the least significant zero bit of <code>x</code> and clears all \xe2\x80\xa600000AoGets mask up to lowest set bit.00000CeAdd 8-bit masks a and b, and store the result in dst.00ClBitwise AND of 8-bit masks a and b, and store the result \xe2\x80\xa600CiBitwise NOT of 8-bit mask a, and store the result in dst.00CmCompute the bitwise OR of 16-bit masks a and b, and store \xe2\x80\xa600CmCompute the bitwise OR of 32-bit masks a and b, and store \xe2\x80\xa600CmCompute the bitwise OR of 64-bit masks a and b, and store \xe2\x80\xa600ClBitwise XOR of 8-bit masks a and b, and store the result \xe2\x80\xa600AkLoad 8-bit mask from memory00CnCompute the bitwise AND of 16-bit masks a and b, and store \xe2\x80\xa600AhCopy 16-bit mask a to k.00CkCompute the bitwise NOT of 16-bit mask a, and store the \xe2\x80\xa600CnCompute the bitwise XOR of 16-bit masks a and b, and store \xe2\x80\xa600CmRound the packed double-precision (64-bit) floating-point \xe2\x80\xa600CmRound the packed single-precision (32-bit) floating-point \xe2\x80\xa600ClRound the lower double-precision (64-bit) floating-point \xe2\x80\xa600ClRound the lower single-precision (32-bit) floating-point \xe2\x80\xa600DgInvalidates and flushes the cache line that contains <code>p</code> \xe2\x80\xa600ClCompare the lower half-precision (16-bit) floating-point \xe2\x80\xa600CiCopy the lower half-precision (16-bit) floating-point \xe2\x80\xa600ChHorizontally adds adjacent pairs of double-precision \xe2\x80\xa600ChHorizontally adds adjacent pairs of single-precision \xe2\x80\xa600ClHorizontally subtract adjacent pairs of double-precision \xe2\x80\xa600111CiLoads 128-bits (composed of 2 packed double-precision \xe2\x80\xa600CfLoad 128-bits (composed of 8 packed half-precision \xe2\x80\xa600EoLoads four <code>f32</code> values from <em>aligned</em> memory into a <code>__m128</code>. \xe2\x80\xa600ClLoads a 64-bit double-precision value to the low element \xe2\x80\xa600CnLoad a half-precision (16-bit) floating-point element from \xe2\x80\xa600EhConstruct a <code>__m128</code> with the lowest element read from <code>p</code> and \xe2\x80\xa600DjConstructs a 128-bit floating-point vector of <code>[2 x double]</code>\xe2\x80\xa600CiMove the lower half-precision (16-bit) floating-point \xe2\x80\xa600EfReturns a <code>__m128</code> with the first component from <code>b</code> and the \xe2\x80\xa600CmMultiply packed complex numbers in a and b, and store the \xe2\x80\xa600ClMultiply the lower complex numbers in a and b, and store \xe2\x80\xa600CmBroadcasts double-precision (64-bit) floating-point value \xe2\x80\xa600CnBroadcast the half-precision (16-bit) floating-point value \xe2\x80\xa600DgConstruct a <code>__m128</code> with all element set to <code>a</code>.00222BbAlias for <code>_mm_set1_ps</code>00ChSets packed double-precision (64-bit) floating-point \xe2\x80\xa600CnSet packed half-precision (16-bit) floating-point elements \xe2\x80\xa600DjConstruct a <code>__m128</code> from four floating point values lowest \xe2\x80\xa600ClReturns a new vector with the square root of each of the \xe2\x80\xa600CmCompute the square root of packed half-precision (16-bit) \xe2\x80\xa600CfReturns the square root of packed single-precision \xe2\x80\xa600DkReturns a new vector with the low element of <code>a</code> replaced by \xe2\x80\xa600CgCompute the square root of the lower half-precision \xe2\x80\xa600CiReturns the square root of the first single-precision \xe2\x80\xa600DjClears all bits below the least significant zero of <code>x</code> and \xe2\x80\xa600000CmLoad tile rows from memory specifieid by base address and \xe2\x80\xa600ClPerforms a full or partial save of the enabled processor \xe2\x80\xa600ClSet the renderer to use hardware acceleration. This flag \xe2\x80\xa6AkReturns the time of access.ChComputes the arccosine using the Taylor expansion of \xe2\x80\xa6ClAdd which channel to group tag, or reset it\xe2\x80\x99s group to \xe2\x80\xa6BgAppend to an existing error custom dataChAdds gamepad to the list of gamepads associated with \xe2\x80\xa60CdLowest lane <code>a + b</code>, high lane unchanged.0CiAdd a new controller input mapping from a mapping string.CaAdds <code>n</code> new permits to the semaphore.CkAdds a function or a (sub)module to a module, using the \xe2\x80\xa60DjCreates a <code>mut</code> raw pointer to a place, without creating an \xe2\x80\xa600CmAlternately, from the top, add a lane and then subtract a \xe2\x80\xa60DjAlternately, from the top, add <code>f32</code> then sub <code>f32</code>.0CnAlpha blend function. If None - alpha will be blended with \xe2\x80\xa60CfConstructs a path inside your application\xe2\x80\x99s data \xe2\x80\xa600CaConstructs a path inside the temporary directory.00AkGets the runtime directory.0DlApplies dithering to a pixel array in <strong>15-bit color mode </strong>\xe2\x80\xa6Bo\xe2\x9a\xa0\xef\xb8\x8f Command line arguments by reference: \xe2\x80\xa6AjBorrow this smart pointer.EiCasts this <code>Bound&lt;T&gt;</code> to a <code>Borrowed&lt;T&gt;</code> smart pointer.BeCasts <code>self</code> to date-time.0DjReturns this timestamp as a <code>SignedDuration</code> since the Unix \xe2\x80\xa6BmReturns a mutable reference to the root item.BoReturn a mutable reference to an 8bit RGB imageDiReturns a <code>NonNull</code> pointer to the vector\xe2\x80\x99s buffer, or a \xe2\x80\xa6DiReturns the contents of this address if it is a <code>pathname</code> \xe2\x80\xa6DhGain a reference to the underlying <code>stat</code> structure which \xe2\x80\xa6CiConverts to seconds as <code>f32</code> for calculations.CmReturns the number of seconds, with a possible fractional \xe2\x80\xa6DiReturns the number of seconds contained by this <code>Duration</code> \xe2\x80\xa61BmReturns the time in <code>f64</code> seconds.212ClReturns <code>self</code> cast as a <code>PySequence</code>.0000CmRetrieves the underlying FFI pointer associated with this \xe2\x80\xa600BiInterpret this buffer as a mutable image.CcComputes the arcsine using Taylor series expansion.BfConverts to <code>Arc&lt;T&gt;</code>.BhConverts to <code>Arc&lt;[T]&gt;</code>.BiConverts to <code>Box&lt;T, A&gt;</code>.BkConverts to <code>Box&lt;[T], A&gt;</code>.BeConverts to <code>Rc&lt;T&gt;</code>.BgConverts to <code>Rc&lt;[T]&gt;</code>.EaExtracts the value from the <code>MaybeUninit&lt;T&gt;</code> container. This \xe2\x80\xa643DjAsserts that the first <code>n</code> unfilled bytes of the buffer are \xe2\x80\xa667DeIf the iterator yields no elements, <code>Ok(None)</code> will be \xe2\x80\xa6000CfComputes the arctangent using Taylor series expansion.DeLoads the current value of the pointer. <code>T</code> must be an \xe2\x80\xa600CfBitwise nand with the current value, returning the \xe2\x80\xa600CdMaximum with the current value using an unsigned \xe2\x80\xa600CdMinimum with the current value using an unsigned \xe2\x80\xa600DkAdds to the current value, returning the previous value. <code>T</code> \xe2\x80\xa600CfStores the value at the specified memory location, \xe2\x80\xa600CkSubtract from the current value, returning the previous \xe2\x80\xa600Ah&lt; default audio codecCfForced audio codec. This allows forcing a specific \xe2\x80\xa6AlInitialize an AVAES context.Bn@defgroup lavu_aes AES @ingroup lavu_crypto @{CkPrint arguments following specified format into a large \xe2\x80\xa6CmThread safe basename. @param path the string to parse, on \xe2\x80\xa6CjInitialize a CRC table. @param ctx must be an array of \xe2\x80\xa6kSet up DCT.BiGet a dictionary entry with matching key.CjSet the given entry in *pm, overwriting an existing entry.CcDo a complex FFT with the parameters defined in \xe2\x80\xa6ClSet up a complex FFT. @param nbits           log2 of the \xe2\x80\xa6CnRead the file with name filename, and put its content in a \xe2\x80\xa6CmSend a nice hexadecimal dump of a buffer to the specified \xe2\x80\xa6CgSend the specified message to the log once with the \xe2\x80\xa6AgInitialize MD5 hashing.Cf@defgroup lavu_md5 MD5 @ingroup lavu_hash MD5 hash \xe2\x80\xa6ChFind which of the two rationals is closer to another \xe2\x80\xa6BnCopy options from src object into dest object.CjLook for an option in an object. Consider only options \xe2\x80\xa6BbFree all allocated objects in obj.BlIterate over all AVOptions belonging to obj.CmAllocate, reallocate, or free a block of memory through a \xe2\x80\xa6BbInitialize SHA-1 or SHA-2 hashing.Cg@defgroup lavu_sha SHA @ingroup lavu_hash SHA-1 and \xe2\x80\xa6CnPut a description of the AVERROR code errnum in errbuf. In \xe2\x80\xa6CkAppend output to a string, according to a format. Never \xe2\x80\xa6CmReturn non-zero if pfx is a prefix of str. If it is, *ptr \xe2\x80\xa6CjWrapper to work around the lack of mkstemp() on mingw. \xe2\x80\xa6BlAppend a formatted string to a print buffer.CnAverage bitrate of the stream, in bits per second. Zero if \xe2\x80\xa6CmAccept and allocate a client context on a server context. \xe2\x80\xa6CnClose the resource accessed by the AVIOContext *s, free it \xe2\x80\xa6ClWrites a formatted string to the context. @return number \xe2\x80\xa6BcWait for input and fill the buffer.ChReturns a mutable reference to this manager\xe2\x80\x99s backend.DcSchedules a closure to be run just before the <code>exec</code> \xe2\x80\xa60BiSubmit a beginning of elapsed-time query.C`A priority queue implemented with a binary heap.CnThis module contains the parallel iterator types for heaps \xe2\x80\xa611BcBitwise <code>a &amp;amp; b</code>.AoBitwise <code>a &amp; b</code>.10AkBitwise <code>a | b</code>.00000AjBitwise <code>a | b</code>0AkBitwise <code>a ^ b</code>.000DbBlends the <code>f64</code> lanes according to the immediate mask.0CmPut a pixel at location (x, y), taking into account alpha \xe2\x80\xa60CbPerforms scaled surface bliting (surface copying).CjAudio only. The number of bytes per coded audio frame, \xe2\x80\xa6Cnnumber of bytes per packet if constant and known or 0 Used \xe2\x80\xa6jAudio only00CmUse this function to get the size of a window\xe2\x80\x99s borders \xe2\x80\xa6CaReturns the bottom-left corner of this rectangle.0kBrand IndexFcConverts the <code>ControlFlow</code> into an <code>Option</code> which is <code>Some</code> if \xe2\x80\xa6CjMaximum reached position before a backward seek in the \xe2\x80\xa6CkSize of buffer in bytes. For 1 element, u16 buffer this \xe2\x80\xa6BbSets the size of the pixel buffer.1CfThe size of the buffer to which the ratecontrol is \xe2\x80\xa6Ah&lt; Maximum buffer sizeCgThe buffer size used by the device. If it is set to \xe2\x80\xa64AgSize of buffer in bytes5Dm<strong>Gets</strong> the attribute: the minimum number of bits for frame \xe2\x80\xa6CkReturns <code>Code</code> associated with <code>btn</code>.BiReturns button state and when it changed.0Cn&lt; A mask of which buttons are valid for this controller \xe2\x80\xa6BnCalculates the offset from a pointer in bytes.ChThe byte offset into the original string used in the \xe2\x80\xa6DjThe byte offset of the <code>SeekPoint</code>s timestamp relative to a \xe2\x80\xa6AoThe perimeter of the 2d extent.00000000000EcEquivalent to C\xe2\x80\x99s <code>ptrdiff_t</code> type, from <code>stddef.h</code> (or \xe2\x80\xa600Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x9f\x99 <code>core</code> Equivalent to the corresponding C type.0CiEquivalent to C\xe2\x80\x99s <code>unsigned long long</code> type.000BeTranslation cache level (starts at 1)AmCalls a method on the object.00ChCancels a pending quit request, no matter who it was \xe2\x80\xa6CkCancels a pending quit request, either initiated by the \xe2\x80\xa6DkReturns the same as <code>Regex::captures</code>, but starts the search \xe2\x80\xa6DjReturns the bit pattern of <code>self</code> reinterpreted as a signed \xe2\x80\xa600000CeCasts from a type to its maybe-uninitialized version.DhRound the low lane of <code>b</code> toward positive infinity, other \xe2\x80\xa60BiCenters the rectangle on the given point.0DhChecks if a type <code>T</code> is a valid dynamically sized type (DST).CkChecked absolute value. Checks for overflow and returns \xe2\x80\xa600000ClAdds an unsigned integer to a non-zero value. Checks for \xe2\x80\xa600000G`Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> \xe2\x80\xa60DkAdd two time deltas together. If overflow occurs, then <code>None</code>\xe2\x80\xa6CkChecked integer addition. Computes <code>self + rhs</code>.00000000000DoChecked <code>Duration</code> addition. Computes <code>self + other</code>, \xe2\x80\xa6CjAdd two signed durations together. If overflow occurs, \xe2\x80\xa6CjAdds a span to this one and returns the sum as a new span.BmAdd the given span of time to this timestamp.CmAdd the given span of time to this zoned datetime. If the \xe2\x80\xa6CmAdd the given span of time to this date. If the sum would \xe2\x80\xa6CkAdd the given span of time to this datetime. If the sum \xe2\x80\xa6CnAdd the given span to this time and return an error if the \xe2\x80\xa6BkAdds the given span of time to this offset.CgDivide this duration by an integer. If the division \xe2\x80\xa6DoChecked <code>Duration</code> division. Computes <code>self / other</code>, \xe2\x80\xa61CiMultiplies two non-zero integers together. Checks for \xe2\x80\xa600000000000CbMultiply this time delta by an integer. If the \xe2\x80\xa6EeChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, \xe2\x80\xa6CgMultiply this signed duration by an integer. If the \xe2\x80\xa6CfMultiplies each field in this span by a given integer.EaChecked negation. Computes <code>-self</code>, returning <code>None</code> if \xe2\x80\xa600000BlReturns this duration with its sign flipped.0CiRaises non-zero value to an integer power. Checks for \xe2\x80\xa600000000000G`Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> \xe2\x80\xa60CmSubtract one time delta from another. If overflow occurs, \xe2\x80\xa6CnChecked integer substration. Computes <code>self - rhs</code>.00000000000EbChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, \xe2\x80\xa6CjSubtract one signed duration from another. If overflow \xe2\x80\xa6DhThis routine is identical to <code>Span::checked_add</code> with the \xe2\x80\xa6DiThis routine is identical to <code>Timestamp::checked_add</code> with \xe2\x80\xa6DiThis routine is identical to <code>Zoned::checked_add</code> with the \xe2\x80\xa6DhThis routine is identical to <code>Date::checked_add</code> with the \xe2\x80\xa6DhThis routine is identical to <code>DateTime::checked_add</code> with theDhThis routine is identical to <code>Time::checked_add</code> with the \xe2\x80\xa6DjThis routine is identical to <code>Offset::checked_add</code> with the \xe2\x80\xa6CfReturns the thickness of the window chrome (frame, \xe2\x80\xa6BeThe clamped value, using total order.0EeReturns itself clamped between <code>min</code> and <code>max</code>, using total \xe2\x80\xa6BcShutdown and cleanup the mixer API.EcCreates a half-open interval $[l, u)$ <code>lower..upper</code> <code>Range</code>.EhCreates a mismatch where <code>need</code> is an <code>Interval::closed_open</code>, \xe2\x80\xa6Dg<code>core</code> Expands to the column number at which it was invoked.0Di<code>core</code> Expands to a string representing the current module \xe2\x80\xa60CcBitstream width / height, may be different from \xe2\x80\xa6AnDimensions of the coded video.AmCollect an iterator as a map.0BbCollect an iterator as a sequence.0DkSerialize a string produced by an implementation of <code>Display</code>\xe2\x80\xa60Db<code>.collect_vec()</code> is simply a type specialization of \xe2\x80\xa6000D`Collection types that allocate inside a <code>Bump</code> arena.AaCollection types.C`Parallel iterator types for standard collections11Co&lt; ::SDL_MessageBoxColorScheme, can be NULL to use system \xe2\x80\xa6AhGet the alpha component.CnSince the color has no alpha, the maximum normalized value \xe2\x80\xa60000000000000001CjColor (RGB) blend function. If None - blending will be \xe2\x80\xa60CbReturns the number of color components (channels).00AhGet the green component.CgSince the color has no red, the luminosity is returned.000000000001AgMPEG vs JPEG YUV range.CbVideo only. Additional colorspace characteristics.1jVideo only00000DlCombinations of <code>n</code> items taken <code>r</code> at a time with \xe2\x80\xa60CoBuilds a new <code>Sink</code>, beginning playback on a stream.BfBuilds a new <code>SpatialSink</code>.CiCreate an iterator that maps for example iterators of \xe2\x80\xa6ClCreates a new I/O error from a known kind of error and a \xe2\x80\xa6CaThe largest integer less than or equal to itself.AdThe fractional part.eMAYBE0BoThe nearest integer to itself, default roundingBbThe integral and fractional parts.CnThe integral part. This means that non-integer numbers are \xe2\x80\xa6FeConverts the <code>ControlFlow</code> into an <code>Result</code> which is <code>Ok</code> if the \xe2\x80\xa6ClThis module contains functions that convert from one PCM \xe2\x80\xa6CnConverts a value from one prefix to another, returning the \xe2\x80\xa60CgConverts a value from one binary prefix to another, \xe2\x80\xa6CmConverts a value from one SI prefix to another, returning \xe2\x80\xa6ChCreates a wrapper future that makes the inner future \xe2\x80\xa6DiCopies all audio data from the source <code>AudioBuffer</code> to the \xe2\x80\xa6CkCopies all of the pixels from one part of this image to \xe2\x80\xa6EbCopies the sign from <code>y</code> to <code>x</code> for <code>f16</code> values.00EbCopies the sign from <code>y</code> to <code>x</code> for <code>f32</code> values.00EbCopies the sign from <code>y</code> to <code>x</code> for <code>f64</code> values.00CnIf the process was terminated by a signal, says whether it \xe2\x80\xa60ChThe hyperbolic cosine calculated using Taylor series \xe2\x80\xa6EfReturns the length of <code>self</code>. Like C\xe2\x80\x99s <code>strlen</code>, this does \xe2\x80\xa6Cm(countReset) Resets the counter used with <code>count</code>.ClReturns the number of zeros in the binary representation \xe2\x80\xa600000000000000000000000000000000000BkThe number of bits unset (number of zeros).00CjApplies the <code>CrossedOut</code> attribute to the text.CaSets the working directory for the child process.BfReturns the current working directory.1D`Returns the current working directory as a <code>PathBuf</code>.CkReturns the full filesystem path of the current running \xe2\x80\xa60CiCurrent timestamp of the link, as defined by the most \xe2\x80\xa6AoReturns the current seed value.BlReturns the current random <code>u16</code>.DhReturns the current random <code>u32</code>, without updating the state.BlReturns the current random <code>u32</code>.BlReturns the current random <code>u64</code>.00BfProvides a cursor at the back element.CeSets the foreground color to <code>DarkYellow</code>.CgReturns the ordinal day of the year that this zoned \xe2\x80\xa6DiSet the day field on a <code>Zoned</code> via the ordinal number of a \xe2\x80\xa6CiReturns the parsed day of the year (1-366), if available.CnReturns the ordinal day of the year that this date resides \xe2\x80\xa6DhSet the day field on a <code>Date</code> via the ordinal number of a \xe2\x80\xa6CjReturns the ordinal day of the year that this datetime \xe2\x80\xa6DjSet the day field on a <code>DateTime</code> via the ordinal number of \xe2\x80\xa6AhL1 data cache size in KBDeCreates a <code>DebugTuple</code> builder designed to assist with \xe2\x80\xa6DhDecodes the given <code>v</code>alue using the sRGB inverse transfer \xe2\x80\xa60ChReturns the required output buffer size for decoding \xe2\x80\xa6000000000CcGets the accept delay value (in seconds) of the \xe2\x80\xa6ClReturns the duration between this and an earlier instant \xe2\x80\xa6CeReturns the denominator (the second number of the \xe2\x80\xa6000CgAn unsigned integer which is the denominator of the \xe2\x80\xa6CdGet a human-readable string describing this channel.DjGet a human-readable <code>String</code> describing the channel layout \xe2\x80\xa6BiA description of the filter. May be NULL.CiDeserialize this value from the given Serde deserializer.DgEquivalent to the more common <code>Deserialize::deserialize</code> \xe2\x80\xa61DiReturns the determinant if the matrix is square, or <code>None</code> \xe2\x80\xa60000000DbGet the GUID for the joystick at index <code>joystick_index</code>Bj&lt; device name, format depends on deviceCbThe device type associated with the configuration.ClReturns the number of digits in the given <code>base</code>.DeReturns the number of digits in the given absolute <code>base</code>.CjReturns the number of digits in base 10, including the \xe2\x80\xa6B`An alias of <code>digits</code>.DcReturn a triplet <code>(ddpi, hdpi, vdpi)</code> containing the \xe2\x80\xa6CjStream disposition - a combination of AV_DISPOSITION_* \xe2\x80\xa6D`Sets the <code>dither</code> field to <code>Dither::Auto</code>.D`Sets the <code>dither</code> field to <code>Dither::None</code>.CdLowest lane <code>a / b</code>, high lane unchanged.0oDraws a circle.CnDraws a series of connected lines on the current rendering \xe2\x80\xa6ClDraws a point on the current rendering target. Errors if \xe2\x80\xa6ClDraws some number of rectangles on the current rendering \xe2\x80\xa6CjDraws multiple points on the current rendering target. \xe2\x80\xa6BlDrops <code>n</code> elements from the back.BoConvert the contained value into <code>T</code>DjLike <code>either</code>, but provide some context to whichever of the \xe2\x80\xa6AnCreate a new zero-sized slice.CbEncodes the value into a byte buffer for WASM FFI.DfEncodes the given <code>v</code>alue using the sRGB transfer function.0CkEncodes this scalar as UTF-8 into the provided byte buffer,0DjEncodes this string as a Python <code>bytes</code> object, using UTF-8 \xe2\x80\xa60ChReturns the required output buffer size for encoding \xe2\x80\xa6000000000BdInitializes all bytes in the cursor.Cc&lt; true if was unable to read due to error or eofBhReturns the epoch offset in nanoseconds.00CfFlags indicating events happening on the stream, a \xe2\x80\xa6CdFlags indicating events happening on the file, a \xe2\x80\xa6ClReturn <code>true</code> if controller events are processed.CjReturn <code>true</code> if joystick events are processed.ClIf the iterator yields exactly one element, that element \xe2\x80\xa6000CeCalculates $ 2^x $ using the Taylor series expansion.AfReturns the left valueCbExtends the back of the destaque from an iterator.CjReturns the multiplication factor for the prefix as an \xe2\x80\xa60CnReturns the multiplication factor for the binary prefix as \xe2\x80\xa6CmReturns the multiplication factor for the SI prefix as an \xe2\x80\xa6FoBorrows an <code>Either</code> of <code>Iterator</code>s to be an <code>Iterator</code> of <code>Either</code>sEaFactors out <code>None</code> from an <code>Either</code> of <code>Option</code>.DiWrites the factors in <code>fbuf</code>, and the unique prime factors \xe2\x80\xa60Aj&lt; Duration of the fade.000AkCalculate the FFT in-place.ChVideo only. The order of the fields in interlaced video.kField orderjVideo only00CcExtracts the prefix of <code>self.file_name</code>.DoThe source file containing the message, if it is a <code>&#39;static</code> \xe2\x80\xa6CkSet <code>file</code> to a <code>&#39;static</code> string.CnReturns the file system used on this disk (so for example: \xe2\x80\xa6ClFills some number of rectangles on the current rendering \xe2\x80\xa6DmFill all bytes of <code>slice</code> with zeroes (see <code>Zeroable</code>).B`Name of the AVFilter to be used.ClFind the newest, most recently started, actively playing \xe2\x80\xa6CaFind the oldest actively playing channel in groupCcReturns the first entry in the map for in-place \xe2\x80\xa6BfThe first char in <code>glyphs</code>.0CgRound each lane to a whole number, towards negative \xe2\x80\xa60CgRound <code>f64</code> lanes towards negative infinity.0ChRemoves all events in the event queue that match the \xe2\x80\xa6CnFormat some value, or run an alternative closure if it\xe2\x80\x99s \xe2\x80\xa60EfReturns <code>a * b + c</code> for <code>f128</code> values, non-deterministically \xe2\x80\xa600CkSplits an iterator into fixed-size chunks, performing a \xe2\x80\xa60BkThe topmost possible bounding box for text.0DeSets the <code>format</code> field to <code>PixelFormat::AG88</code>.Cn\xf0\x9f\x96\xb9 <code>core</code> Constructs parameters for the other \xe2\x80\xa60CiConstructs parameters for the other string-formatting \xe2\x80\xa600000000000000000D`Called when formatting a datetime with the <code>%x</code> flag.DeSets the <code>format</code> field to <code>PixelFormat::GA88</code>.CdReturns the image format associated with this error.CcReturn the image format associated with this error.1DeSets the <code>format</code> field to <code>PixelFormat::PAL1</code>.DeSets the <code>format</code> field to <code>PixelFormat::PAL2</code>.DeSets the <code>format</code> field to <code>PixelFormat::PAL4</code>.DeSets the <code>format</code> field to <code>PixelFormat::PAL8</code>.D`Called when formatting a datetime with the <code>%X</code> flag.ClFormat all iterator elements, separated by <code>sep</code>.000BhReturns the amount of free RAM in bytes.BnFree memory (in bytes) for the current cgroup.cWIPCgCreates a new rectangle centered on the given position.ClCreates a new rectangle with float precision centered on \xe2\x80\xa6DbCreates a new <code>StringNonul</code> from a <code>char16</code>.CoCreates a new <code>StringU8</code> from a <code>char16</code>.DdCreates a new <code>GraphemeNonul</code> from a <code>char16</code>.DaCreates a new <code>GraphemeU8</code> from a <code>char16</code>.DeCreates a new <code>GraphemeString</code> from a <code>char16</code>.CbLoads a cursor wrapping audio file data into a \xe2\x80\xa6DiCreates a <code>StreamingSoundData</code> for a cursor wrapping audio \xe2\x80\xa6EeCreates a new angle from a <code>value</code> in a <code>custom_unit</code> which \xe2\x80\xa600EdDetermines the <code>ElementType</code> from a Python <code>struct</code> module \xe2\x80\xa6dTODODcAttempts to construct a <code>KeyAlpha</code> from a JavaScript \xe2\x80\xa6DaAttempts to construct a <code>KeyPad</code> from a JavaScript \xe2\x80\xa6DbAtempts to construct a <code>KeyMedia</code> from a JavaScript \xe2\x80\xa6D`Atempts to construct a <code>KeyMod</code> from a JavaScript \xe2\x80\xa6DaAttempts to construct a <code>KeyMod</code> from a JavaScript \xe2\x80\xa6DgCreates a new <code>TimeDelta</code> from the given number of whole \xe2\x80\xa6DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6DhCreates a new <code>SignedDuration</code> from the given number of whole210EfReturns a <code>Month</code> from its counting number, from <code>January=1</code> \xe2\x80\xa6CiBuilds an iterator for an iterable Python object; the \xe2\x80\xa6CdAttempts to create a Python string from a Python \xe2\x80\xa6D`Creates an <code>Ipv4Addr</code> from a four element byte array.DcCreates an <code>Ipv6Addr</code> from a sixteen element byte array.CfConstructs the type from its <code>Output</code> type.00DhConstructs a new <code>ImageBuffer</code> by repeated application of \xe2\x80\xa6DjConstructs a new instance of <code>Self</code> from the given raw file \xe2\x80\xa6000CmWrap raw platform texture into a TextureId acceptable for \xe2\x80\xa6CkConstructs a box from a raw pointer in the given allocator.E`Constructs an <code>Rc&lt;T, A&gt;</code> from a raw pointer in the provided \xe2\x80\xa6DkConverts a raw pointer previously created by <code>into_raw</code> back \xe2\x80\xa62CnConstructs an <code>Arc&lt;T, A&gt;</code> from a raw pointer.1CdCreates a body from a shared <code>Read</code> impl.DfCreate from <code>Rgba&lt;u16&gt;</code> by scaling each component \xe2\x80\xa6BiCreate from <code>Rgba&lt;u16&gt;</code>.01ClCreates a new instant in time from the number of seconds \xe2\x80\xa6BoConverts a static string to a HTTP header name.CfConvert a static string to a <code>HeaderValue</code>.C`Convert a <code>Uri</code> from a static string.DbAttempt to convert an <code>Authority</code> from a static string.CiConvert a <code>PathAndQuery</code> from a static string.DiConstruct a new <code>String&lt;&#39;bump&gt;</code> from a string slice.CbThis is the inverse function of <code>name</code>.CcInitialize a channel layout from a given string \xe2\x80\xa6CiReturn the Axis from a string description in the same \xe2\x80\xa6CkReturn the Button from a string description in the same \xe2\x80\xa6BkCreate a GUID from a string representation.EgConstructs a <code>u128</code> from an array of <code>[u16; 8]</code> in big-endian \xe2\x80\xa6EfConstructs a <code>u64</code> from an array of <code>[u16; 4]</code> in big-endian \xe2\x80\xa6EfConstructs a <code>u32</code> from an array of <code>[u16; 2]</code> in big-endian \xe2\x80\xa6DkConstructs a <code>u32</code> from an array of <code>[u16; 2]</code> in \xe2\x80\xa6DkConstructs a <code>u64</code> from an array of <code>[u16; 4]</code> in \xe2\x80\xa6DlConstructs a <code>u128</code> from an array of <code>[u16; 8]</code> in \xe2\x80\xa6210EfConstructs a <code>u64</code> from an array of <code>[u32; 2]</code> in big-endian \xe2\x80\xa6EgConstructs a <code>u128</code> from an array of <code>[u32; 4]</code> in big-endian \xe2\x80\xa6DlConstructs a <code>u128</code> from an array of <code>[u32; 4]</code> in \xe2\x80\xa6DkConstructs a <code>u64</code> from an array of <code>[u32; 2]</code> in \xe2\x80\xa601EgConstructs a <code>u128</code> from an array of <code>[u64; 2]</code> in big-endian \xe2\x80\xa6DlConstructs a <code>u128</code> from an array of <code>[u64; 2]</code> in \xe2\x80\xa60ChCreates a <code>Point</code> from a <code>Vector</code>.ClReturns the gamma value of the image or None if no gamma \xe2\x80\xa6BlReturns the GCD and the B\xc3\xa9zout coeficients.0CmThis callback is called at the beginning of each frame to \xe2\x80\xa6BdReturns the font\xe2\x80\x99s freetype hints.BdReturns whether the font is kerning.C`Returns the number of minute units in this span.DiGets the contents of the cell, initializing it to <code>f()</code> if \xe2\x80\xa60CnGet a reference to the contained value, initializing it if \xe2\x80\xa6DkGets the value currently in the <code>OnceCell</code>, or initialize it \xe2\x80\xa6CeGets pinned exclusive access to the underlying value.CiGets a pinned mutable reference to the underlying reader.CiGets a pinned mutable reference to the underlying writer.CiGets a pinned mutable reference to the underlying I/O \xe2\x80\xa62CeReturns the path to the program that was given to \xe2\x80\xa6C`Returns the number of second units in this span.CkReturns the number of seconds, as an int from 0 through \xe2\x80\xa6CdReturns the size of the window, in cells and pixels.BhRetrieves an attribute value optionally.0BbGets the total glyphs in the font.CjThe glyph index represented by the glyph being positioned.CgThe GlyphPosition index of the first glyph in the line.BlReturns the granularity of this time source.0DjBehaves like <code>grow</code>, but also ensures that the new contents \xe2\x80\xa600000BjChecks if WebAssembly atomics are enabled.AaSupports AVX512F.A`Supports CET_SSSCgChecks if this channel contains a message that this \xe2\x80\xa6DeIndicates if the borrowed value is considered as <em>changed</em> \xe2\x80\xa6BdCLZERO instruction supported if set.CfCLFLUSH Instruction. CLFLUSH Instruction is supported.Ch64-bit DS Area. A value of 1 indicates the processor \xe2\x80\xa6CaINVLPGB and TLBSYNC instruction supported if set.CjINVPCID. If 1, supports INVPCID instruction for system \xe2\x80\xa6BeMCOMMIT instruction supported if set.CiSupports RDMSRLIST and WRMSRLIST Instructions and the \xe2\x80\xa6CmIndicates support of PTWRITE. Writes can set IA32_RTIT_CTL\xe2\x80\xa6BjSEV Secure Nested Paging supported if set.gWAITPKGCiComputes the FNV hash of the provided byte slice, xor \xe2\x80\xa6000BdGet headers on this request builder.CnReturns a mutable reference to the associated header field \xe2\x80\xa601CiGet header on this response builder. when builder has \xe2\x80\xa6BcGet header on this request builder.CnGet header on this request builder. when builder has error \xe2\x80\xa6BdGet header on this response builder.BkHighest COS number supported for this Leaf.00DeReturns the index of the highest bit set to one in <code>self</code>.00000000000AoL1 instruction cache size in KBCkReturns the ICC color profile embedded in the image, or \xe2\x80\xa6CmGet the raw ICC profile data for the screen the window is \xe2\x80\xa6Cnbase_macros Returns the total number of identifiers in its \xe2\x80\xa60CkIgnores the specified number of bits from the stream or \xe2\x80\xa60CjReturn the portion of the buffer that holds sample values.00AaMMX image filtersDa\xf0\x9d\x90\x93 <code>core</code> Includes a UTF-8 encoded file as a string.0BjIncludes a UTF-8 encoded file as a string.00000000000000000EfReturns <code>true</code> if the <code>OnceCell</code> currently contains a value, \xe2\x80\xa6EeReturns <code>true</code> if the <code>SetOnce</code> currently contains a value, \xe2\x80\xa6ClReturns a shared reference to the initialized portion of \xe2\x80\xa6CcReturns the PRNG\xe2\x80\x99s inner state as a raw snapshot.0000000000BcA range of values from a modulator.AiInserts new axis mapping.EeSet <code>self</code> to <code>Both(..)</code>, containing the specified left and \xe2\x80\xa6DdSets the <code>left</code> value of this instance, and returns a \xe2\x80\xa6BnInserts a key-value pair, consuming the value.AlSets the value of the entry.ClCalls a function with a reference to the contained value \xe2\x80\xa6CbReturn the joystick instance id of this controllerEhReturns the number of combinations of <code>n</code> items taken <code>r</code> at a \xe2\x80\xa600CaReturns the truncated quotient and the remainder.00BkReturns the factors (including 1 and self).00BlReturns the GCD and the B\xc3\xa9zout coeficients.00CgReturns <code>true</code> if <code>self</code> is even.00EhReturns the number of permutations of <code>n</code> items taken <code>r</code> at a \xe2\x80\xa600AkCalls `NumInt::int_ref_abs.00CmSimilar to int_abs, but operates on references instead of \xe2\x80\xa600AkCalls `NumInt::int_ref_gcd.00CmSimilar to int_gcd, but operates on references instead of \xe2\x80\xa600AkCalls `NumInt::int_ref_lcm.00CmSimilar to int_lcm, but operates on references instead of \xe2\x80\xa600CoCounts the number of integers $&lt;|n|$ that are relatively \xe2\x80\xa600EaReturns an linearly interpolated value between <code>a</code> and <code>b</code>.ClAn iterator adaptor to insert a particular value between \xe2\x80\xa60DhCreates a new iterator which places a copy of <code>separator</code> \xe2\x80\xa600000001100000000000000DjIterate <code>iterable</code> with a particular value inserted between \xe2\x80\xa6CkIntersperses clones of an element between items of this \xe2\x80\xa60CnReturns an interval representing the angle range using 256 \xe2\x80\xa6CmConvert this range into the start and end bounds. Returns \xe2\x80\xa600000AhReturns the image bufferChReturn a buffer with the produced items that was not \xe2\x80\xa6DkInitializes a new <code>CanvasBuilder</code>; a convenience method that \xe2\x80\xa6CgCreates a Software Canvas to allow rendering in the \xe2\x80\xa6EhGroups every <code>N</code> elements in the <code>Vec&lt;T&gt;</code> into chunks to \xe2\x80\xa6CkReturns a shared reference to the filled portion of the \xe2\x80\xa6CmConvert the consumer into a folder that can consume items \xe2\x80\xa6CaConsume the decoder producing a series of frames.AnCreates a future from a value.0000000BkConsume the image and returns a Luma image.ClConverts this <code>OwnedRwLockWriteGuard</code> into an \xe2\x80\xa6CgConverts this <code>RwLockWriteGuard</code> into an \xe2\x80\xa6Fe<code>into_option</code> creates an <code>Option</code> of type <code>(T, T)</code>. The returned \xe2\x80\xa6DiConverts <code>self</code> into an owned Python object, dropping type \xe2\x80\xa60CkConsumes this object, returning the raw underlying file \xe2\x80\xa600DdTurn this response into an owned <code>impl Read</code> of the body.BnTurn this <code>SendBody</code> into a reader.BjConsume the image and returns a RGB image.BkConsume the image and returns a RGBA image.CkViews the underlying data as a pair of subslices of the \xe2\x80\xa6DnConverts an <code>ExitStatusError</code> (back) to an <code>ExitStatus</code>.EfConverts the <code>OsString</code> into a <code>String</code> if it contains valid \xe2\x80\xa6EeConverts the <code>CString</code> into a <code>String</code> if it contains valid \xe2\x80\xa6DdConsumes the <code>IntoChars</code>, returning the remaining string.EeSplits a <code>u32</code> into an array of <code>[u16; 2]</code> in big-endian order.EcSplits a <code>u128</code> into an array of <code>[u16; 8]</code> in big-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u16; 4]</code> in big-endian order.EeSplits a <code>u32</code> into an array of <code>[u16; 2]</code> in little-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u16; 8]</code> in little-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u16; 4]</code> in little-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u16; 4]</code> in native-endian \xe2\x80\xa6EeSplits a <code>u32</code> into an array of <code>[u16; 2]</code> in native-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u16; 8]</code> in native-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u32; 2]</code> in big-endian order.EcSplits a <code>u128</code> into an array of <code>[u32; 4]</code> in big-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u32; 4]</code> in little-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u32; 2]</code> in little-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u32; 2]</code> in native-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u32; 4]</code> in native-endian \xe2\x80\xa6EcSplits a <code>u128</code> into an array of <code>[u64; 2]</code> in big-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u64; 2]</code> in little-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u64; 2]</code> in native-endian \xe2\x80\xa6CkCreates a consuming iterator visiting all the values in \xe2\x80\xa6ClCreates a consuming iterator visiting all the values, in \xe2\x80\xa61DlConsumes this <code>Point</code> and converts it into a <code>Vector</code>.CmGets the associated window of the Canvas and destroys the \xe2\x80\xa6BaReturns ordering characteristics.0ChReturns the Ip Networks associated to current interface.EbReturns <code>true</code> if the <code>Path</code> is absolute, i.e., if it is \xe2\x80\xa6AfIs this path absolute?CkTests that self is an alphabetic character or a decimal \xe2\x80\xa60DkReturns true if the data is borrowed, i.e. if <code>to_mut</code> would \xe2\x80\xa6CcReturns <code>true</code> if the value is borrowed.CfDetermine whether the current cursor location is a \xe2\x80\xa6C`Determines whether this object appears callable.0DeReturns <code>true</code> if this is a <code>Continue</code> variant.CmReturns true when this time zone is marked as \xe2\x80\x9ccritical.\xe2\x80\xa6CaReturns true if <code>self</code> is a date-time.0Cj&lt; the enabled state from the last expression evaluationFeReturns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. \xe2\x80\xa600BjReturns true if the file size equals zero.ClChecks if the associated thread has finished running its \xe2\x80\xa60DhChecks if the task associated with this <code>AbortHandle</code> has \xe2\x80\xa6DgChecks if the task associated with this <code>JoinHandle</code> has \xe2\x80\xa6CkWhether this proxy setting was created manually or from \xe2\x80\xa6BkChecks if the value is a hexadecimal digit:EjIndicates whether <em>only</em> the 3 fields from <code>h</code> to <code>s</code> are \xe2\x80\xa6CkIf a table has no key/value pairs and implicit, it will \xe2\x80\xa6EbReturns <code>true</code> if <code>self</code> is infinite (either negative or \xe2\x80\xa60CjReturns true for each element if its value is positive \xe2\x80\xa600000DdReturns true if the current exception is instance of <code>T</code>.DbChecks whether this object is an instance of type <code>ty</code>.0CfReturns <code>true</code> if this is a keyboard event.ChReturns <code>true</code> if this is a loopback address.EcReturns <code>true</code> if this is a loopback address (<code>127.0.0.0/8</code>).EdReturns <code>true</code> if this is the loopback address (<code>::1</code>), as \xe2\x80\xa6DkReturns the same as <code>Regex::is_match</code>, but starts the search \xe2\x80\xa6DdReturns <code>true</code> if the key code is the given modifier key.D`Returns <code>true</code> if <code>self</code> is sign negative.0FcReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number \xe2\x80\xa600000CnReturns true when this duration is negative. That is, less \xe2\x80\xa6111111111111CmReturns true for each negative element and false if it is \xe2\x80\xa60001CbReturns true if and only if this span is negative.CjReturns whether the sign of the offset is negative or not.CjReturns true if and only if this offset is less than zero.33ClWhether <code>self</code> is equal to <code>NUM_ZERO</code>.00CkChecks if the value is an octal digit: 0x30 \xe2\x80\x980\xe2\x80\x99 ..= \xe2\x80\xa6BiDetermines whether the mutex is poisoned.EgReturns <code>true</code> if the associated <code>Once</code> was poisoned prior to \xe2\x80\xa6BhDetermines whether the lock is poisoned.CmChecks if the window is in a portrait orientation (height \xe2\x80\xa6D`Returns <code>true</code> if <code>self</code> is sign positive.0FcReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number \xe2\x80\xa600000CiReturns true when this duration is positive. That is, \xe2\x80\xa6111111111111CmReturns true for each positive element and false if it is \xe2\x80\xa60001CbReturns true if and only if this span is positive.CdReturns true if and only if this offset is positive.22BfTells whether the raw mode is enabled.AiIs this a read-only file?EcReturns <code>true</code> if the <code>Path</code> is relative, i.e., not absolute.AfIs this path relative?DeReturns <code>true</code> if this address is reserved by IANA for \xe2\x80\xa6EeReturns if the <code>std::io::File</code> backing the <code>MediaSource</code> is \xe2\x80\xa6DkAlways returns true since a <code>io::Cursor&lt;u8&gt;</code> is always \xe2\x80\xa6CeReturns if the source is seekable. This may be an \xe2\x80\xa6EgReturns <code>true</code> if the option is a <code>Some</code> and the value inside \xe2\x80\xa6DeChecks whether <code>self</code> is a subclass of <code>other</code>.00DhReturns <code>true</code> if the set is a superset of another, i.e., \xe2\x80\xa600CjReturns <code>true</code> if we are in a terminal context.CkReturns <code>true</code> if we\xe2\x80\x99re in a terminal context.DbReturns <code>true</code> if the descriptor/handle refers to a \xe2\x80\xa6CkDetermines if the prefix is verbatim, i.e., begins with \xe2\x80\xa6EjIndicates whether <em>only</em> the 3 fields from <code>y</code> to <code>d</code> are \xe2\x80\xa6EjIndicates whether <em>only</em> the 6 fields from <code>y</code> to <code>s</code> are \xe2\x80\xa6CnIterator over generated IDs with <code>SeqCst</code> ordering.BiGet the position in the table to jump to.C`Filter the socket addresses to the family of IP.CnReturns the kind of the angle using a custom tolerance for \xe2\x80\xa6CjReturns the number of bytes needed to encode the given \xe2\x80\xa6BaGet a length-prefixed slice (TLV)BmConvenience function to create a limit error.EoRecognizes an end of line (both <code>&quot;\\n&quot;</code> and <code>&quot;\\r\\n&quot;</code>).CgThe height of each line as a multiplier of the default.BfA doubly-linked list with owned nodes.ChThis module contains the parallel iterator types for \xe2\x80\xa611CeDefines the program entry point and main function \xe2\x80\xa60ChReturns the load factor as a fraction of total capacity.DkReads contiguous elements from <code>slice</code>. Each element is read \xe2\x80\xa6BbLoads a WAVE from the data source.DhReturns a reference to the <code>LocalWaker</code> for the current task.CkSets the value for the local waker on <code>Context</code>.CmAcquire a shared (non-exclusive) lock on the file. Blocks \xe2\x80\xa6CjComputes the base-2 logarithm using the change of base \xe2\x80\xa6ClDetermines if a message logged at the specified level in \xe2\x80\xa6CmLog function which takes as priority VERBOSE and category \xe2\x80\xa6CdSets the portion of the sound that should be looped.0BoThe portion of the sound that should be looped.110DiReturns a <code>Cursor</code> pointing at the gap before the smallest \xe2\x80\xa60ChReturns the MAC address associated to current interface.CmSets the amount to change the volume after processing (in \xe2\x80\xa6CiThe amount to change the volume after processing (in dB).CnComputes a default function result (if none), or applies a \xe2\x80\xa6EjMaps a <code>Result&lt;T, E&gt;</code> to <code>U</code> by applying fallback function \xe2\x80\xa6DiCalls the given function <code>f</code> for each contiguous window of \xe2\x80\xa6000000000000000000000CaA SIMD mask with 16 elements for vectors with \xe2\x80\xa600000CaA SIMD mask with 32 elements for vectors with \xe2\x80\xa600000CaA SIMD mask with 64 elements for vectors with \xe2\x80\xa600000CjMaterializes a chunk by converting it into a collected \xe2\x80\xa6CdThe value of MAWAU used by the BNDLDX and BNDSTX \xe2\x80\xa6CnMaximum bitrate of the stream, in bits per second. Zero if \xe2\x80\xa6CgLow lane <code>max(a, b)</code>, other lanes unchanged.0CdThe number of samples per frame to maximally accept.CcMaximum number of samples to filter at once. If \xe2\x80\xa6AnThe maximum number of streams.DhReturns the maximum (IEEE 754-2019 maximum) of two <code>f128</code> \xe2\x80\xa600Ahmacroblock decision modeDcSets the <code>mean</code> field to <code>SixelMean::Center</code>.DcSets the <code>mean</code> field to <code>SixelMean::Colors</code>.DcSets the <code>mean</code> field to <code>SixelMean::Pixels</code>.Co&lt; array indicating what media types(s), if any, a device \xe2\x80\xa6DjReplaces <code>self</code> with other, returning the previous value of \xe2\x80\xa600BdReturns the size of a type in bytes.00CmReturns an iterator over all occurrences of the needle in \xe2\x80\xa6CeAttempts to grow the default linear memory by the \xe2\x80\xa6DdReturns the metadata that <em>optionally</em> traverses symbolic \xe2\x80\xa6DcEquivalent to <code>microseconds()</code>, but reads better for \xe2\x80\xa6CiReturns the \xe2\x80\x9cmicrosecond\xe2\x80\x9d component of this zoned \xe2\x80\xa6CbSet the microsecond field on a <code>Zoned</code>.CiReturns the \xe2\x80\x9cmicrosecond\xe2\x80\x9d component of this datetime.CeSet the microsecond field on a <code>DateTime</code>.CeReturns the \xe2\x80\x9cmicrosecond\xe2\x80\x9d component of this time.CaSet the microsecond field on a <code>Time</code>.DcEquivalent to <code>milliseconds()</code>, but reads better for \xe2\x80\xa6CiReturns the \xe2\x80\x9cmillisecond\xe2\x80\x9d component of this zoned \xe2\x80\xa6CbSet the millisecond field on a <code>Zoned</code>.CiReturns the \xe2\x80\x9cmillisecond\xe2\x80\x9d component of this datetime.CeSet the millisecond field on a <code>DateTime</code>.CeReturns the \xe2\x80\x9cmillisecond\xe2\x80\x9d component of this time.CaSet the millisecond field on a <code>Time</code>.CnMinimum bitrate of the stream, in bits per second. Zero if \xe2\x80\xa6CjThe lowest point that any glyph in the font extends to \xe2\x80\xa6CgLow lane <code>min(a, b)</code>, other lanes unchanged.0CcMinimum number of samples to filter at once. If \xe2\x80\xa6DhReturns the minimum (IEEE 754-2019 minimum) of two <code>f128</code> \xe2\x80\xa600BaReturns the time of modification.AoThe module path of the message.CjExpands to a string that represents the current module \xe2\x80\xa600000000000AlSet <code>module_path</code>111111DaReturns the mount point of the disk (<code>/</code> for example).DmMove the low lane of <code>b</code> to <code>a</code>, other lanes unchanged.0EeReturns the middle sub-<code>slice</code> with the given maximum <code>len</code> \xe2\x80\xa6CdLowest lane <code>a * b</code>, high lane unchanged.0CnRecognizes zero or more spaces, tabs, carriage returns and \xe2\x80\xa6CmRecognizes one or more spaces, tabs, carriage returns and \xe2\x80\xa6BcSets the bit at <code>index</code>.00CcCreate a new span from this integer in units of \xe2\x80\xa6CmSet the number of nanoseconds on this span. The value may \xe2\x80\xa6CcNumber of channels in this layout. Mandatory field.CgNumber of chapters in AVChapter array. When muxing, \xe2\x80\xa6DkCreates a new <code>Ratio&lt;N, D&gt;</code>, ensuring <code>d != 0</code>.BeCreate a new function from a closure.EjReturns a <code>&amp;str</code> backed by a <code>buffer</code>, where you always know \xe2\x80\xa6DjReturns a <code>String</code> where you always know each character\xe2\x80\x99s \xe2\x80\xa6110CmCreates a dynamic image backed by a buffer of gray pixels \xe2\x80\xa6CjCreates a dynamic image backed by a buffer of RGBA pixels.CjCreate a new source that never ends and produces total \xe2\x80\xa6E`Returns a new <code>LinuxSigaction</code> for a <code>SA_SIGINFO</code> handler.CjCreates unidirectional buffer that acts like in memory \xe2\x80\xa6DfReturns the appropriate variant from the given <code>value</code>, \xe2\x80\xa6BgGet the next packet from the container.0FaFinds the next <code>Reject</code> result. See <code>next()</code> and <code>next_match()</code>.0000CoCreates a new <code>PtrNonNull</code> that is dangling, but \xe2\x80\xa6CjConverts a mutable reference to a <code>PtrNonNull</code>.CbConverts a reference to a <code>PtrNonNull</code>.AoNotifies the last waiting task.Cenoise vs. sse weight for the nsse comparison functionCkReturns the \xe2\x80\x9cnth\xe2\x80\x9d weekday from this zoned datetime, \xe2\x80\xa6CeReturns the \xe2\x80\x9cnth\xe2\x80\x9d weekday from this date, not \xe2\x80\xa6CiReturns the \xe2\x80\x9cnth\xe2\x80\x9d weekday from this datetime, not \xe2\x80\xa6C`Retrieve the number of buttons for this joystickAgReturns the number one.00000CgReturns <code>true</code> if <code>self</code> is zero.00000ChReturns the number of permits held by <code>self</code>.0CfComputes the absolute value of <code>&amp;self</code>.00Dh<em>Like <code>num_abs</code> but takes the arguments by reference.</em>00BkComputes <code>&amp;self + &amp;rhs</code>.00Dh<em>Like <code>num_add</code> but takes the arguments by reference.</em>00BkComputes <code>&amp;self / &amp;rhs</code>.00Dh<em>Like <code>num_div</code> but takes the arguments by reference.</em>00BkComputes <code>&amp;self * &amp;rhs</code>.00Dh<em>Like <code>num_mul</code> but takes the arguments by reference.</em>00BbComputes <code>- &amp;self</code>.00Dh<em>Like <code>num_neg</code> but takes the arguments by reference.</em>00BkComputes <code>&amp;self % &amp;rhs</code>.00Dh<em>Like <code>num_rem</code> but takes the arguments by reference.</em>00BkComputes <code>&amp;self - &amp;rhs</code>.00Dh<em>Like <code>num_sub</code> but takes the arguments by reference.</em>00hFeatures0AgSets the number to one.00000CjSets <code>self</code> to a valid <code>&amp;value</code>.00DbSets <code>self</code> to the given valid <code>&amp;value</code>.00ChThe number of threads receiving the broadcast in the \xe2\x80\xa6CmSets the number of threads to be used in the rayon thread \xe2\x80\xa6CiReturns the number of worker threads used by the runtime.CkCalculates the distance between two pointers within the \xe2\x80\xa6DjOffset between the first byte of <code>start</code> and the first byte \xe2\x80\xa6CbSets the background color to <code>DarkRed</code>.DnCreates a half-open interval $(l, u]$ <em><code>lower..&lt;=upper</code></em>.BeReturns the orientation of the image.AmThe rotation of the listener.BmPrints to the standard error, with a newline.0CgConvert the parser\xe2\x80\x99s output to another type using \xe2\x80\xa60Ai&lt; array of output padsBlGets the output size of a rendering context.CkDuplicates the second front pair of elements, at the front.DaReturns both the next random state and the <code>u8</code> value.000CnRotates the top six stack elements, counter-clockwise, two \xe2\x80\xa6ClReturns a parallel iterator over substrings that match a \xe2\x80\xa60DdReturns a parallel iterator over at most <code>chunk_size</code> \xe2\x80\xa60CgSorts the slice in parallel with a comparator function.0CnReturns a parallel iterator over all contiguous windows of \xe2\x80\xa60BjParse an IP address from a slice of bytes.BlParse an IPv4 address from a slice of bytes.BlParse an IPv6 address from a slice of bytes.BmParse a socket address from a slice of bytes.CcParse an IPv4 socket address from a slice of bytes.CcParse an IPv6 socket address from a slice of bytes.BjSucceeds if <code>parse()</code> succeededChParse a datetime string into a <code>Zoned</code> value.CnParse a datetime string with a time zone annotation into a \xe2\x80\xa6EdThis method returns an ordering between <code>self</code> and <code>other</code> \xe2\x80\xa6CiCompare need first. If they are equal, then compare have.BmPartial comparison for two <code>Arc</code>s.CfState\xe2\x80\x99s ordering takes precedence over value\xe2\x80\x99s \xe2\x80\xa6EeCompare <code>value</code> first. If they are equal, then compare <code>quant</code>.BlPartial comparison for two <code>Rc</code>s.fPanicsDkLexicographically compares the <code>PartialOrd</code> elements of this \xe2\x80\xa60000000000000000000007777777BcCompares the logical preconditions.888888CcLexicographically compares the elements of this \xe2\x80\xa609999997CcPartial comparison for two <code>UniqueArc</code>s.CbPartial comparison for two <code>UniqueRc</code>s.CkReads the events at the front of the event queue, until \xe2\x80\xa6B`Advance to the end of the stream0CiReturns the permissions of the file this metadata is for.BdGet file permissions (lower 12 bits)BdReturns the permissions of the file.BgApplies a list of parsers in any order.CmTries to apply all parsers in the tuple in various orders \xe2\x80\xa6DlPermutations of <code>n</code> items taken <code>r</code> at a time with \xe2\x80\xa60CkA pointer to an array of admissible pixel formats delimitedCkReturns the name of the associated planet of Helenistic \xe2\x80\xa6DkChecks whether the <code>oneshot</code> channel has been closed, and if \xe2\x80\xa6CnRemoves and returns the last element from the deque if the \xe2\x80\xa6BkRetrieve the battery level of this joystickDfRaises itself to the <code>y</code> floating point power using the \xe2\x80\xa6DjFetches the cache line containing <code>addr</code> into all levels of \xe2\x80\xa60AkFetches into L2 and higher.0ClFetches into L3 and higher or an implementation-specific \xe2\x80\xa60CiWrites bytes to stdout. Returns error on syscall failure.DbThe most efficient print method, exclusive for <code>linux</code>.ChPrint a <code>Zoned</code> datetime to the given writer.0BoGet a reference to the <code>PrivateKey</code>.0ClAVBufferRef for internal use by a single libav* library. \xe2\x80\xa6Bnformat probing score. The maximal score is \xe2\x80\xa6DaProcesses a single <code>Frame</code>. Mostly useful for testing.CmProvides a reference. The referee type must be bounded by \xe2\x80\xa6CiPumps the event loop, gathering events from the input \xe2\x80\xa6DdPushes a set of items (cloning out of the input <code>slice</code>).0DdPushes a set of items (copying out of the input <code>slice</code>).0DfSets the <code>quality</code> field to <code>SixelQuality::Low</code>.AkSet multi query parameters.AmAdds data to the audio queue.DhSorts a <code>slice</code> using quick sort with the Hoare partition \xe2\x80\xa6CnGenerates a random <code>u128</code> value that may not be \xe2\x80\xa6CjApplies the <code>RapidBlink</code> attribute to the text.BlGets a mutable pointer to the wrapped value.omaximum bitrateominimum bitrateCmReads four bytes from the stream and interprets them as a \xe2\x80\xa60CmReads two bytes from the stream and interprets them as an \xe2\x80\xa6ClReads three bytes from the stream and interprets them as \xe2\x80\xa62ClReads eight bytes from the stream and interprets them as \xe2\x80\xa621CnReads four bytes from the stream and interprets them as an \xe2\x80\xa61CnReads an 32-bit floating point type in little-endian order \xe2\x80\xa6CnReads an 64-bit floating point type in little-endian order \xe2\x80\xa6CmRead the format header and initialize the AVFormatContext \xe2\x80\xa6CmReads a signed 16-bit integer in little-endian order from \xe2\x80\xa6CmReads a signed 32-bit integer in little-endian order from \xe2\x80\xa6CnReads an signed 64-bit integer in little-endian order from \xe2\x80\xa6CnRead one packet and put it in \xe2\x80\x98pkt\xe2\x80\x99. pts and flags are \xe2\x80\xa6BoReads pixels from the current rendering target.DfAllocates a <code>String</code> by calling a JS-backed FFI fn that \xe2\x80\xa6DkThis function is not supported by <code>io::Repeat</code>, because there\xe2\x80\xa6CjReads all bytes until EOF in this source, placing them \xe2\x80\xa600000AkRead the response to a vec.AaRead into vector.CkReads an unsigned 16-bit integer in little-endian order \xe2\x80\xa6CkReads an unsigned 32-bit integer in little-endian order \xe2\x80\xa6CkReads an unsigned 64-bit integer in little-endian order \xe2\x80\xa6CmReduces the given value to the most appropriate prefix as \xe2\x80\xa60CjReduces the given value to the most appropriate binary \xe2\x80\xa6CmReduces the given value to the most appropriate SI prefix \xe2\x80\xa6DjReduces the items in the iterator into one item using <code>op</code>. \xe2\x80\xa60BoRefreshes all system and processes information.CmRemoves axis and returns associated <code>NativEvCode</code>.BcRemoves a file from the filesystem.0ChRemoves the next element from the <code>BTreeMap</code>.0ChRemoves the next element from the <code>BTreeSet</code>.0CmRemoves the preceding element from the <code>BTreeMap</code>.0CmRemoves the preceding element from the <code>BTreeSet</code>.0ClStarts specifying a rendering of the given UTF-8-encoded \xe2\x80\xa6CnRepeats a string a given number of times into the provided \xe2\x80\xa6DkRepeats a <code>string</code> a given number of times into the provided \xe2\x80\xa61ClNumber of fields in this frame which should be repeated, \xe2\x80\xa6ClThis field is used for proper frame duration computation \xe2\x80\xa6Ef<code>Accumulate</code> the output of parser <code>f</code> into a container, like \xe2\x80\xa6CfCreates an iterator that endlessly repeats calling \xe2\x80\xa6DgCreates a new iterator that repeats elements of type <code>A</code> \xe2\x80\xa6000CmReplaces all non-overlapping matches in the haystack with \xe2\x80\xa6EcRequests a reference of type <code>T</code> from the given <code>impl Error</code>.00CkThe <code>TimeStamp</code> required for the requested seek.0CfConvenience function to create a reset required error.DfModifies the deque in-place so that <code>len()</code> is equal to \xe2\x80\xa6F`Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.0CjRe-subscribes to the channel starting from the current \xe2\x80\xa6Cn&lt; How fast to increase the force towards the positive side.DfRotates all the destaqued elements <code>n</code> places to the right.CkRotate an image 90 degrees clockwise and put the result \xe2\x80\xa6DfShifts the bits to the left by a specified amount, <code>n</code>, \xe2\x80\xa600000000000DaRotates the double-ended queue <code>n</code> places to the left.111111111111111111111111AePerforms rotate left.00CmRotates and zooms a surface with different horizontal and \xe2\x80\xa6BhRounds each lane in the style specified.000C`Run a simple rumble effect on the haptic device.BlStop the simple rumble on the haptic device.EnAsserts the <code>state</code> equals <code>expected</code> and returns <code>self</code>, \xe2\x80\xa6FbAsserts the <code>state</code> is <code>Ok</code> and returns <code>self</code>, otherwise panics.EgAsserts the <code>state</code> matches the <code>predicate</code>, otherwise panics \xe2\x80\xa6EbUnwraps the contained <code>Some(state)</code> or provides a <code>default</code>.E`Unwraps the contained <code>Ok(state)</code> or provides a <code>default</code>.CjWraps the <code>state</code> field into <code>Some</code>.Co&lt; array of supported sample formats, or NULL if unknown, \xe2\x80\xa6AnSample rate of the audio data.CcAudio only. The number of audio samples per second.Ag&lt; samples per second0CjAudio only, the audio sampling rate in samples per second.jAudio only00BeThe sample rate of the audio (in Hz).BmReturns the sample rate of the audio (in Hz).CmThe sample rate that the <code>Renderer</code> should run at.CmReturns the rate at which the source should be played. In \xe2\x80\xa60BlReturns the sample rate of the audio stream.BcThe sample rate of the audio in Hz.C`Lists of supported sample rates, only for audio.BlGets a mutable slice of all written samples.CjSaves the supplied buffer to a file at the path specified.BoWrites pointers elementwise into a SIMD vector.Cd(width) (height) The extent of the screen in pixels.0CiThe current framebuffer size in pixels NOTE: High DPI \xe2\x80\xa6CkReturns the other axis from same element of gamepad, if \xe2\x80\xa6AoChoose elements from two masks.BiSend a controller specific effect packet.BgSend a joystick specific effect packet.DiModifies the watched value <strong>unconditionally</strong> in-place, \xe2\x80\xa6BbSends a signal to a child process.0CgSetup a command line music player to use to play music.EcSet the <code>compact</code> flag of the <code>PyASCIIObject</code> state bitfield.BhSets the context pointer in the capsule.0ChSets how quickly high frequencies disappear from the \xe2\x80\xa6BaEnable or disable AGC processing.BaSets the font\xe2\x80\x99s freetype hints.BiSets whether the font should use kerning.ChSets the args into the low lane of a <code>m128d</code>.0ClSets gamepad\xe2\x80\x99s mapping and returns SDL2 representation \xe2\x80\xa6DeSets the value of the <code>TCP_NODELAY</code> option on this socket.ClSet the transparency of the window. The given value will \xe2\x80\xa6EhSets the panning of the sound, where <code>-1.0</code> is hard left, <code>0.0</code>\xe2\x80\xa60CdSets the panning adjustment to apply to input audio.CmSets a panning effect, where left and right is the volume \xe2\x80\xa6Cb(setTimeout) Calls a function after a delay in \xe2\x80\xa6AoSet a new value of the timeout.BiSet the weekday on this broken down time.DdFilter using <code>ShiftRight</code>: D = saturation0(S &gt;&gt; N).CdRegisters multiple signals using a handler function.Bj<code>T</code> must be a vector of floats.00AkReads a vector of pointers.00CkInserts an element into a vector, returning the updated \xe2\x80\xa600AmSelects elements from a mask.00CfThe hyperbolic sine calculated using Taylor series \xe2\x80\xa6CjReturns the size of the pointed-to value in bytes. See \xe2\x80\xa6BjThe size of the referenced value in bytes.CbReturns the size of the pointed-to value in bytes.0000010000001000000CjNumber of macroblock rows at the bottom which are skipped.ChPuts the current thread to sleep until the specified \xe2\x80\xa6kslice countkslice flagsCnThe length of the slice calculated from the original input \xe2\x80\xa6BoSorts the array with a key extraction function.BbSorts Key/Value-pairs of the table00DnSpawns a <code>!Send</code> future on the current <code>LocalSet</code> or \xe2\x80\xa6DjSpawn the provided task on the current <code>LocalSet</code> and store \xe2\x80\xa6CiSpawns a <code>!Send</code> task onto the local task set.ClSplits the list into two after the current element. This \xe2\x80\xa6BjReturns an array of the lines in a string.DkParses input according to platform conventions for the <code>PATH</code>\xe2\x80\xa6DhParses input according to platform conventions for the <code>PATH</code>Ch$ \\sqrt{x} $ The square root calculated calling both \xe2\x80\xa6CeLow lane <code>sqrt(a)</code>, other lanes unchanged.0AbStart index bound.0000000DfDetermines whether <code>base</code> is a prefix of <code>self</code>.DkReturns <code>true</code> if the given pattern matches a prefix of this \xe2\x80\xa6B`Version Information: Stepping IDBhStores the value to the reference given.000BgStore data from a register into memory.000DbGet the strides for indexing matrix-like <code>[(c, w, h)]</code>.0Bi(strokeRect) Draws a rectangular outline.Cj(strokeText) Draws text outline at the specified position.BoCharacter encoding of the input subtitles file.CdLowest lane <code>a - b</code>, high lane unchanged.0CmGets a mutable reference to the associated surface of the \xe2\x80\xa6CmSwaps the first two pairs of elements at the front of the \xe2\x80\xa6CbRemoves an element from the vector and returns it.00ClSwizzle a vector of bytes according to the index vector. \xe2\x80\xa6nConvert audio.CfPerforms a set of actions within a synchronous update.00000000000000000000CaPerforms a set of actions against the given type.1111111111111111CkReturns an iterator over all non-overlapping matches of \xe2\x80\xa6CgComputes the hyperbolic tangent using Taylor series \xe2\x80\xa6ChReturns the temperature of the component (in celsius \xe2\x80\xa6DkCompute the bitwise of sign bit NOT of <code>a</code> and then AND with \xe2\x80\xa60EgCompute the bitwise NOT of <code>a</code> and then AND with <code>b</code>, returns \xe2\x80\xa601100EgComputes the bitwise of sign bitAND of 256 bits in <code>a</code> and <code>b</code>\xe2\x80\xa60EhComputes the bitwise AND of 256 bits in <code>a</code> and <code>b</code>, returns 1 \xe2\x80\xa60EhComputes the bitwise of sign bit AND of 256 bits in <code>a</code> and <code>b</code>\xe2\x80\xa6000DiIf the process is a thread, it\xe2\x80\x99ll return <code>Some</code> with the \xe2\x80\xa6CmSets a closure which takes a thread index and returns the \xe2\x80\xa6DgSets name of threads spawned by the <code>Runtime</code>\xe2\x80\x99s thread \xe2\x80\xa6BoWhich multithreading methods to use. Use of \xe2\x80\xa6CkType of multithreading being allowed/used. A combination ofCmType of multithreading allowed for filters in this graph. \xe2\x80\xa6CiMakes the current path absolute without accessing the \xe2\x80\xa60CjReturns the memory representation of this integer as a \xe2\x80\xa600CeExtracts a civil datetime from this broken down time.EeGiven a <code>Time</code>, this constructs a <code>DateTime</code> value with its \xe2\x80\xa6EeGiven a <code>Date</code>, this constructs a <code>DateTime</code> value with its \xe2\x80\xa6CjConverts the given timestamp to a civil datetime using \xe2\x80\xa6CiReturns the civil datetime corresponding to the given \xe2\x80\xa6ChSerialize the given data structure into a TOML document.EgConverts a <code>TimeDelta</code> to a <code>Duration</code> if it is non-negative. \xe2\x80\xa6EfConverts a <code>Span</code> to a <code>SignedDuration</code> relative to the date \xe2\x80\xa6888CjModifies this filter so that it becomes a low-pass filter.99DgReturn the memory representation of this <code>u24</code> as a byte \xe2\x80\xa6DgReturn the memory representation of this <code>i24</code> as a byte \xe2\x80\xa6;CnConverts a <code>Path</code> to an owned <code>PathBuf</code>.BhConvert to <code>Rgba&lt;f64&gt;</code>.0000000ClConvenience method for quickly getting a string from the \xe2\x80\xa60ChShifts this rectangle to the top by <code>offset</code>.0CgReturns the total number of bytes in the decoded image.BfReturns the total disk size, in bytes.BlDefault implementation emulates mouse clicks000AoTouchscreen input capabilities.0CjReturns the number of transmitted bytes since the last \xe2\x80\xa6CjAccumulate the elements in the iterator in a tree-like \xe2\x80\xa6000DeGiven a <code>Packet</code>, the encoder delay in frames, and the \xe2\x80\xa6BmTries to acquire a permit from the semaphore.CgAttempts to cast the content type of a <code>Rc</code>.0Da<code>.try_collect()</code> is more convenient way of writing \xe2\x80\xa60ClFallibly transforms an iterator into a collection, short \xe2\x80\xa600000001100000000000000ChReturns a Handle view over the currently running RuntimeEhCreates an array <code>[T; N]</code> where each fallible array element <code>T</code>\xe2\x80\xa600EhTries to convert a <code>JsInstant</code> to an <code>EventTimestamp</code>. Returns \xe2\x80\xa6ClSet the number of minutes on this span. The value may be \xe2\x80\xa6DgTries to reserve capacity for at least <code>additional</code> more \xe2\x80\xa6DkTries to reserve capacity for at least <code>additional</code> elements \xe2\x80\xa6111EeInvokes <code>try_reserve</code> on the underlying instance of <code>OsString</code>.2DhTries to reserve capacity for at least <code>additional</code> bytes \xe2\x80\xa63DjAttempts to reserve capacity for at least <code>additional</code> more \xe2\x80\xa64CnTries to acquire a slot in the channel without waiting for \xe2\x80\xa6DjReserves capacity for at least <code>additional</code> more headers to \xe2\x80\xa666ClSet the number of seconds on this span. The value may be \xe2\x80\xa6CfTry to convert this into an image with mutable pixels.CkDuplicates the front pair of elements, after the second \xe2\x80\xa6CkDefines zero-cost, zero-sized, generic <em>marker</em> IDs.0AnPython type object informationCbReturns the safe abstraction over the type object.0CaDisambiguates this timestamp according to the \xe2\x80\xa6CfDisambiguates this zoned datetime according to the \xe2\x80\xa6CjUnpack and interleave high lanes of two <code>u8x16</code>Bm<code>core</code> Indicates unreachable code.0AkIndicates unreachable code.ClInforms the optimizer that this point in the code is not \xe2\x80\xa61010EbA copy of <code>self</code> unsetting the bits that are set in <code>other</code>.00EeUnsets the bits in <code>self</code> to 0, from the <code>[start..=end]</code> range.00000000000DeReturns a copy of <code>self</code> with unset bits to 0 from the \xe2\x80\xa600ChGet a new channel layout with an unspecified channel \xe2\x80\xa6BfAPI that does not (yet) follow semver.AfReturns the left valueEgAtomic combination of <code>take_hook</code> and <code>set_hook</code>. Use this to \xe2\x80\xa6DhReturns a <code>Cursor</code> pointing at the gap after the greatest keyDhReturns a <code>Cursor</code> pointing at the gap after the greatest \xe2\x80\xa6CaReturns the current URL as a <code>String</code>.BhReturns the amount of used RAM in bytes.CfArbitrary user data, to be used e.g. by the free() \xe2\x80\xa60EnAsserts the <code>value</code> equals <code>expected</code> and returns <code>self</code>, \xe2\x80\xa6FbAsserts the <code>value</code> is <code>Ok</code> and returns <code>self</code>, otherwise panics.EgAsserts the <code>value</code> matches the <code>predicate</code>, otherwise panics \xe2\x80\xa6E`Unwraps the contained <code>Ok(value)</code> or provides a <code>default</code>.EbUnwraps the contained <code>Some(value)</code> or provides a <code>default</code>.CjWraps the <code>value</code> field into <code>Some</code>.CmThe index in the given string up to which valid UTF-8 was \xe2\x80\xa6000CkReturns the index in the given string up to which valid \xe2\x80\xa6ClAnalogue to <code>std::str::Utf8Error::valid_up_to()</code>.DhGets an immutable slice to the <code>VendorData</code> in this revision.BdReturns the motherboard vendor name.B`Returns the product vendor name.DiAkin to <code>Repeat::fold</code>, but for containers that can reject \xe2\x80\xa6CfReturns a mutable reference to the associated version.0BeGet the HTTP version for this request0Ah&lt; default video codecCfForced video codec. This allows forcing a specific \xe2\x80\xa6BeVideo only. Number of delayed frames.jVideo only00CmThe input contains a byte array. The lifetime of the byte \xe2\x80\xa6CiThe intrinsic will return the size stored in that vtable.00BkWake this task without consuming the waker.0DeWakes up the task associated with this <code>Waker</code> without \xe2\x80\xa611DjWakes up the task associated with this <code>LocalWaker</code> without \xe2\x80\xa6222CaWake this task without consuming the local waker.00AeSets the window size.CdReturns the terminal size <code>[WindowSize]</code>.CnSets the attack time - how quickly the limiter responds to \xe2\x80\xa6BlAcquires a reference to the contained value.DcConstructs a new (empty) queue using the given <code>buffer</code>.DcConstructs a new (empty) stack using the given <code>buffer</code>.CiReturns an array, allocated in the stack, filled with \xe2\x80\xa6ChReturns an array, allocated in the heap, filled with \xe2\x80\xa6CnReturns a 2-dimensional grid, allocated in the heap, using \xe2\x80\xa6CiReturns a 2-dimensional grid, allocated in the stack, \xe2\x80\xa6BjCreates a palette from the provided colorsBfRead the body data with configuration.52BoAdds an effect to the track and returns the \xe2\x80\xa6CdAdds an effect to the send track and returns the \xe2\x80\xa6DfAdds an effect to the track and returns the <code>TrackBuilder</code>.2BiConstruct a reader with specified format.DgCreates an empty <code>HashMap</code> which will use the given hash \xe2\x80\xa6CiCreates a new empty hash set which will use the given \xe2\x80\xa610BcEnforce the use of a chosen header.DjCreates a new decoder that decodes from the stream <code>r</code> with \xe2\x80\xa6DeSets the value of the \xe2\x80\x9cmemory\xe2\x80\x9d refresh kind to <code>true</code>.CfSets the value of the \xe2\x80\x9cmemory\xe2\x80\x9d refresh kind to \xe2\x80\xa6ClSet the offset on this <code>Pieces</code> to the one given.CjCreate a new pair of offsets from the given needle and \xe2\x80\xa6CcSets the value of the \xe2\x80\x9ccmd\xe2\x80\x9d refresh kind to \xe2\x80\xa6DcSets the value of the \xe2\x80\x9ccpu\xe2\x80\x9d refresh kind to <code>false</code>.DbSets the value of the \xe2\x80\x9ccpu\xe2\x80\x9d refresh kind to <code>None</code>.CcSets the value of the \xe2\x80\x9ccwd\xe2\x80\x9d refresh kind to \xe2\x80\xa6CcSets the value of the \xe2\x80\x9cexe\xe2\x80\x9d refresh kind to \xe2\x80\xa6DcSets the value of the \xe2\x80\x9cram\xe2\x80\x9d refresh kind to <code>false</code>.CaRequests execution of JavaScript inside a worker.BfReturns the list of active worker IDs.CgPolls for the result of a JavaScript execution in a \xe2\x80\xa6BbStops a specific Web Worker by ID.BbWrap a type into an unsafe binder.00CdInvokes memset on the specified pointer, setting \xe2\x80\xa6EnSets <code>count * size_of::&lt;T&gt;()</code> bytes of memory starting at <code>dst</code>\xe2\x80\xa6DjThis is an accidentally-stable alias to <code>ptr::write_bytes</code>; \xe2\x80\xa610101C`Writes all the bytes in an image to the encoder.CkWrite a PNG image with the specified width, height, and \xe2\x80\xa6CdWrites a single <code>isize</code> into this hasher.00000DkLocks this <code>RwLock</code> with exclusive write access, causing the \xe2\x80\xa6CdWrites a single <code>usize</code> into this hasher.00000C`&lt; Wayland xdg surface (window manager handle)0CcCooperatively yields execution to local Rayon work.0oAll lanes zero.0AjA zeroed <code>m256</code>0ClCreate an iterator which iterates over both this and the \xe2\x80\xa6000Ad&lt; Not part of ABI00AkVisual content value range.ClYUV colorspace type. These values match the ones defined \xe2\x80\xa6CcStructure describes basic parameters of the device.CmA link between two filters. This contains pointers to the \xe2\x80\xa6BhDescribes single entry of the directory.Cg@defgroup avoptions AVOptions @ingroup lavu_data @{ \xe2\x80\xa6AoReplayGain information (see \xe2\x80\xa6Aj&lt; Round away from zero.DaError returned from the <code>Semaphore::acquire</code> function.ClWhen the offset and time zone are in conflict, this will \xe2\x80\xa6CdDefines the end of channel IDs when using Ambisonic.0oMagic number P7D`An iterator type over <code>Array</code>\xe2\x80\x99s <code>Value</code>sDjA windowed iterator over a slice in overlapping chunks (<code>N</code> \xe2\x80\xa60000CnA marker trait used to identify values that can be used as \xe2\x80\xa6AkReads bytes asynchronously.AjReads bytes from a source.DjAn extension trait that adds utility methods to <code>AsyncSeek</code> \xe2\x80\xa6BbControls audio from gameplay code.BdIterator over <code>AxisData</code>.B`Block device (S_IFBLK in POSIX).CaCode to set the foreground color to bright black.CaCode to set the foreground color to bright green.CaCode to set the foreground color to bright white.Ef\xf0\x9f\xa5\xa1 <code>Base32</code> encoding with padding (<code>=</code>) enabled, using LUT \xe2\x80\xa60Ef\xf0\x9f\xa5\xa1 <code>Base64</code> encoding with padding (<code>=</code>) enabled, using LUT \xe2\x80\xa60ClInserts one ASCII whitespace between the unit designator \xe2\x80\xa6Dj<code>core</code> The bitwise AND assignment operator <code>&amp;=</code>.0ChThe bitwise AND assignment operator <code>&amp;=</code>.00Da<code>BitReaderLtr</code> reads bits from most-significant to \xe2\x80\xa6Db<code>BitReaderRtl</code> reads bits from least-significant to \xe2\x80\xa6Da<code>BitStreamLtr</code> reads bits from most-significant to \xe2\x80\xa6Db<code>BitStreamRtl</code> reads bits from least-significant to \xe2\x80\xa6Df<code>core</code> The bitwise XOR assignment operator <code>^=</code>.0CdThe bitwise XOR assignment operator <code>^=</code>.00DcHeader produced by a <code>pbm</code> file (\xe2\x80\x9cPortable Bit Map\xe2\x80\x9d)CiA trait for RNGs which do not generate random numbers \xe2\x80\xa6B`Increases the screen brightness.0ChIndicates how caches have handled a response and its \xe2\x80\xa6BoContains memory limits for the current process.DjWhether the color components are integer types (e.g., <code>u8</code>, \xe2\x80\xa60C`Used to indicate the media type of the resource.CmCode to move the cursor down by 1-digit <code>n</code> lines.CmCode to move the cursor down by 2-digit <code>n</code> lines.CmCode to move the cursor down by 3-digit <code>n</code> lines.CmCode to move the cursor down by 4-digit <code>n</code> lines.CmCode to move the cursor left by 1-digit <code>n</code> lines.CmCode to move the cursor left by 3-digit <code>n</code> lines.0CmCode to move the cursor left by 4-digit <code>n</code> lines.CmCode to move the cursor to the specified 1-digit position \xe2\x80\xa6CmCode to move the cursor to the specified 2-digit position \xe2\x80\xa6CmCode to move the cursor to the specified 3-digit position \xe2\x80\xa6CmCode to move the cursor to the specified 4-digit position \xe2\x80\xa6BlCode to move the cursor right by one column.CiAn iterator over the names of all capture groups in a \xe2\x80\xa6BmEmits a <code>CastKind::PtrToPtr</code> cast.00AoNumber of channels in a stream.BfSpecifies an order for audio channels.0DgAn iterator over individual channels within a <code>Channels</code> \xe2\x80\xa6EaAssociated type for <code>&lt;char as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.0000ChAn iterator over raw pointers to chunks of allocated \xe2\x80\xa6DaIterator for <code>Vec</code> valued combinations returned by \xe2\x80\xa60fU+00400000CiAn error that can occur when trying to connect to a port.CgA trait for giving a type a useful default value in \xe2\x80\xa60DgDerive macro generating an impl of the trait <code>ConstParamTy</code>.00BeThe style that can be put on content.BlAccumulate context while backtracking errorsCnA guard that temporarily sets a global current pointer for \xe2\x80\xa60DfA cursor over a <code>BTreeMap</code> with editing operations, and \xe2\x80\xa6DfA cursor over a <code>BTreeSet</code> with editing operations, and \xe2\x80\xa61010Cb\xf0\x9f\x9a\xa9 The value has surpassed the bounds of the \xe2\x80\xa6Cg\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The value has surpassed the bounds of the \xe2\x80\xa611DoCommon trait for enumerating <code>Copy</code>-constrained <em>data types</em>.0ClA builder for setting the fields on a <code>DateTime</code>.BnErrors that can occur when creating a decoder.Di<code>Parser</code> implementation for <code>Parser::default_value</code>AjConfigures a delay effect.BePython objects that have a base type.DjA <strong>data format</strong> that can deserialize any data structure \xe2\x80\xa60CbThe type of the deserializer being converted into.BcDeserialization for TOML documents.Ce\xf0\x9f\x94\x84 An iterator over <code>Destaque</code> elements.0DeSealed Unix-specific extension methods for <code>fs::DirEntry</code>.DnThe <strong>channel</strong>\xe2\x80\x99s sending half has become disconnected, and \xe2\x80\xa60DjThis <code>sync_channel</code>\xe2\x80\x99s receiving half has disconnected, so \xe2\x80\xa6110CmAll channel receivers were dropped and so the message has \xe2\x80\xa60CkAll senders were dropped and no messages are waiting in \xe2\x80\xa600ClGamepad has been disconnected. Disconnected gamepad will \xe2\x80\xa6AgDevice is not connected15554ChThe message could not be sent because the channel is \xe2\x80\xa6665Dg<code>core</code> Opaque type representing the discriminant of an enum.0BaGets the discriminant of a place.CnThe type of the discriminant, which must satisfy the trait \xe2\x80\xa6CeOpaque type representing the discriminant of an enum.210210AjAn enum of display events.CnA trait representing a distribution of random values for a \xe2\x80\xa600BcFor drawing with rust-sdl2 RendererCn\xf0\x9f\x94\x84 An iterator over the elements of a <code>DstQueue</code>.0Cn\xf0\x9f\x94\x84 An iterator over the elements of a <code>DstStack</code>.0CgA bidirectional pipe to read and write bytes in memory.CeAn iterator adapter to filter for duplicate elements.0oA Dynamic ImageB`Code to erase the entire screen.CaValue that either holds a single A or B, or both.Dh<code>ElapsedQuery</code> is used to measure duration of GPU operations.0Cm\xf0\x9f\xa5\xa1 A type that can compute the size of its encoded form \xe2\x80\xa60BcThe primary mode for data encoding.0CfThe range is bounded inclusively from above and is \xe2\x80\xa600BlThe shape of the frequency adjustment curve.DkEquivalent of <code>From</code> implementation to avoid orphan rules in \xe2\x80\xa6BaA trait defining event callbacks.CbRepresents a pointer event (mouse, touch, or pen).0Cl$ 360/\xcf\x84 = 180/\xcf\x80 $ (A072097) <code>\xe2\x89\x88 57.2957795\xe2\x80\xa6</code>00000D`$ \xcf\x84/360 = \xcf\x80/180 = 1\\degree $ <em>arc degree</em> (A019685, \xe2\x80\xa60AnFront-centre (centre) channel.Cc<code>std</code> Metadata information about a file.0BfFile larger than allowed or supported.0000AiControls a filter effect.DfA <code>FiniteStream</code> is a stream that has a known length in \xe2\x80\xa6CkFront Left and Right, Rear Left and Right, and a single \xe2\x80\xa6BkFlip vertically. Can be performed in-place.Ee\xf0\x9f\x96\xb9 <code>core</code> Possible alignments returned by <code>Formatter::align</code>.0Dg\xf0\x9f\x96\xb9 <code>core</code> Represents a safely precompiled version of a \xe2\x80\xa60CkSettings for controlling specific font and layout behavior.DkA <code>FormatReader</code> is a container demuxer. It provides methods \xe2\x80\xa60BkAll cells from the cursor position upwards.BiConversion from an <code>Iterator</code>.000000000BdExtract a type from a Python object.00CiUsed to specify which residuals can be converted into \xe2\x80\xa600Ec<code>core</code> A Future that wraps a function returning [<code>TaskPoll</code>].0CbValue with concurrent access protected by the GIL.AeCached gamepad state.B`A trait for manipulating images.CnAllow to create <code>Gilrs </code> with customized behaviour.ClInformation about a specific glyph (character) in a font \xe2\x80\xa6Dh\xf0\x9f\x97\x83\xef\xb8\x8f <code>std?</code> A view into a single entry in a map, which \xe2\x80\xa60AiHierarchical organization0BfError when resolving a hostname fails.AiIP Payload Comp. ProtocoldDCCPAcgroup mgmt protocolAafor compatibilityAbIP6 no next headerAdresource reservationdSCTPEkIndicates whether <em>only</em> the 6 fields from <code>h</code> to <code>ns</code> are \xe2\x80\xa6EaIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6BeThe trait that all decoders implementB`The trait all encoders implementCbEach pixel in this image is 16-bit Luma with alphaCgEach pixel in this image is 32-bit float Rgb with alphaClEnum to store the various types of errors that can cause \xe2\x80\xa600CmA lazy iterator producing elements in the intersection of \xe2\x80\xa60000DeAn iterator that infinitely <code>accept</code>s connections on a \xe2\x80\xa6BiConversion into an <code>Iterator</code>.000000000000000000CmDefines a conversion from a Rust type to a Python object, \xe2\x80\xa600BiContains an invalid digit in its context.0000AjA parameter was incorrect.0000AdInvalid pixel value.00BaThe track ID provided is invalid.Cl\xf0\x9f\x9a\xa9 An invalid value was received for the given type or \xe2\x80\xa60Fd<code>?std</code> Like <code>BufWriter</code>, but flushing whenever a newline (<code>0x0a</code>\xe2\x80\xa60CdThe filesystem object is, unexpectedly, a directory.0000Dg\xf0\x9f\x94\x84 <code>core</code> An iterator that only accepts elements while \xe2\x80\xa60Ee\xf0\x9f\x94\x84 <code>core</code> An iterator that yields a single element <code>A</code> by \xe2\x80\xa60Ea\xf0\x9f\x94\x84 <code>core</code> An iterator with a <code>peek()</code> that returns an \xe2\x80\xa60D`\xf0\x9f\x94\x84 <code>core</code> Conversion from an <code>Iterator</code>.0D`\xf0\x9f\x94\x84 <code>core</code> Conversion into an <code>Iterator</code>.0BaRepresents a keyboard event kind.CeRepresents key modifiers (shift, control, alt, etc.).DfKey was not convertible to <code>String</code> for serializing to TOMLDeKeyboard utility functions. Access with <code>Sdl::keyboard()</code>.Cd<code>Linux</code> Standard file descriptor numbers.BaLinux standard signals constants.0Ca<code>Linux</code> File mode and permission bits.fU+003C0000BmSet of supported strict limits for a decoder.CaDeprecated re-export of <code>LimitSupport</code>B`Metrics about a positioned line.CfOn Linux, the backend used for windowing and event \xe2\x80\xa6BfAdditional information about a signal.0DdRepresents the <code>termios</code> structure from libc, used to \xe2\x80\xa60AmInformation about a listener.CjIndicates the max number of intermediaries the request \xe2\x80\xa6DiThe maximum number of bytes required to encode a <code>char</code> to \xe2\x80\xa600AoSmallest positive normal value.00000EgSmallest positive normal <code>f32</code> value. Use <code>f32::MIN_POSITIVE</code> \xe2\x80\xa6EgSmallest positive normal <code>f64</code> value. Use <code>f64::MIN_POSITIVE</code> \xe2\x80\xa61010Bh207 Multi-Status [RFC4918, Section 11.1]Df<code>core</code> A wrapper to inhibit compiler from automatically \xe2\x80\xa60ChA wrapper to inhibit the compiler from automatically \xe2\x80\xa600ChThe error type for functions related to gamepad mapping.CcCreated with the method <code>match_indices</code>.00CkParallel iterator over substrings that match a pattern, \xe2\x80\xa611D`Represents a media key (as part of <code>KeyCode::Media</code>).De<code>MinMaxResult</code> is an enum returned by <code>minmax</code>.Dg<code>miniquad</code> Describes a hardware and platform-specific setup.0CiA command that moves the terminal cursor to the given \xe2\x80\xa6Da\xf0\x9f\x94\x84 <code>std</code> An owning iterator over messages on an [\xe2\x80\xa60Fe<code>std</code> The receiving half of an [<code>Mpsc</code>][crate::Mpsc] [<code>channel</code>][\xe2\x80\xa60ChAn iterator adaptor that iterates over the cartesian \xe2\x80\xa60AiNegative infinity (-\xe2\x88\x9e).00000DgNegative infinity (\xe2\x88\x92\xe2\x88\x9e). Use <code>f32::NEG_INFINITY</code> instead.DgNegative infinity (\xe2\x88\x92\xe2\x88\x9e). Use <code>f64::NEG_INFINITY</code> instead.1010ChReturns the number of invalid values, as an unsigned \xe2\x80\xa6Be510 Not Extended [RFC2774, Section 7]Bj304 Not Modified [RFC9110, Section 15.4.5]CeWhether the number uses a fixed-point representation.0ChWhether the number uses a floating-point representation.0CcWhether the number has a memory niche optimization.0DkThe greatest normalized value (e.g. 1.0 for float, <code>MAX</code> for \xe2\x80\xa60DkThe smallest normalized value (e.g. 0.0 for float, <code>MIN</code> for \xe2\x80\xa60BcDo not perform any transformations.Ck\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f A signed integer that is known not to equal \xe2\x80\xa60Cn\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f An unsigned integer that is known not to equal \xe2\x80\xa601100Df\xf0\x9d\x9f\x99\xe2\x9a\x97\xef\xb8\x8f <code>core</code> A signed integer that is known not to \xe2\x80\xa60CfAn <code>isize</code> that is known not to equal zero.00Di\xf0\x9d\x9f\x99\xe2\x9a\x97\xef\xb8\x8f <code>core</code> An unsigned integer that is known not to \xe2\x80\xa60CeA <code>usize</code> that is known not to equal zero.00Da\xe2\x88\x85 \xf0\x9f\x9a\xa9+ An error composite of <code>NotImplemented</code> + \xe2\x80\xa60CmThe network operation failed because it was not connected \xe2\x80\xa600AiGamepad is not connected.11BlA time in the future that will never happen.BhA duration so long it will never happen.BoTurns off the <code>OverLined</code> attribute.Cl\xe2\x88\x85 \xf0\x9f\x9a\xa9 The requested functionality is not supported by \xe2\x80\xa60CgThe requested numerical functionality is not supported.ChThe requested functionality is not supported by this \xe2\x80\xa622110CfOne of the underlying sources does not support seekingCmOnly update the related information if it was not already \xe2\x80\xa6AeTask is an IO worker.BbEarly kill for mce process policy.B`Randomize virtual address space.AkUsed super-user privileges.C`If unset the fpu must be initialized before use.AiI\xe2\x80\x99m a workqueue worker.ClA message that was given to the <code>panic!()</code> macro.0Eh\xf0\x9f\x9a\xa9+ An error composite of <code>NotEnoughSpace</code> + <code>PartiallyAdded</code>\xe2\x80\xa6CcWhether the stream is currently partial or complete0DjA type to represent the <code>PasswordHash</code> that Argon2i returns \xe2\x80\xa6BfRepresents the path component of a URIDcAn iterator adaptor that iterates through all the <code>k</code>\xe2\x80\xa60CnAn offset parsed from a Temporal ISO 8601 datetime string, \xe2\x80\xa6BhRepresents the pixel density of an imageBjParallel iterator over mutable pixel refs.DeHeader produced by a <code>ppm</code> file (\xe2\x80\x9cPortable Pixel Map\xe2\x80\x9d)DgHow quickly a sound should be played, where <code>1.0</code> is the \xe2\x80\xa6DkThe things that can go wrong when casting between <code>Pod</code> data \xe2\x80\xa6CeAn error occurred during a true-<code>Pod</code> castBfTypes that may or may not have a size.00CmAlways attempt to use the offset to resolve a datetime to \xe2\x80\xa6Dh<code>std</code> A handle to a child process\xe2\x80\x99s standard input (stdin).0De<code>std</code> Specifies how to handle standard I/O streams in [\xe2\x80\xa60B`Builder for configuring a proxy.CmThis trait represents the Python APIs which are usable on \xe2\x80\xa60AeA Python code object.CgTrait for accessing the date components of a struct \xe2\x80\xa6AaType Check macrosBmRepresents a Python <code>dict_values</code>.ChRepresents Python\xe2\x80\x99s <code>IndexError</code> exception.BlRepresents a Python <code>memoryview</code>.CgImplementation of functionality for <code>PySet</code>.0CfRepresents raw data backing a Python <code>str</code>.Adbuilt-in \xe2\x80\x98super\xe2\x80\x99ChRepresents Python\xe2\x80\x99s <code>SystemExit</code> exception.CgTrait for accessing the time components of a struct \xe2\x80\xa6DmCheck if <code>op</code> is a <code>PyDateTimeAPI.TimeType</code> or subtype.ChRepresents Python\xe2\x80\x99s <code>ValueError</code> exception.fU+003F0000CiAn iterator over a slice in (non-overlapping) chunks (\xe2\x80\xa600CnParallel iterator over immutable non-overlapping chunks of \xe2\x80\xa611AgA source of randomness.00CnAn iterator over non-overlapping matches of a pattern in a \xe2\x80\xa6DjA trait implemented for integer types and <code>char</code>. Useful in \xe2\x80\xa60CmAn iterator over non-overlapping splits of a string slice \xe2\x80\xa6ClLike std::cell::Cell, but only provides read-only access \xe2\x80\xa6BmTimeout while receiving the response headers.C`A configurable builder for a <code>Regex</code>.AjCan be written to from GPU0CcRepresents structs which can be the target of a \xe2\x80\xa6CmA structure that contains information on the capabilities \xe2\x80\xa6EhTypestate for <code>Config</code> when configured on the <code>RequestBuilder</code> \xe2\x80\xa6AaResource is busy.0000AiControls a reverb effect.CkAn image buffer for 32-bit float RGBA pixels, where the \xe2\x80\xa6BjRight <strong>Control</strong> (Ctrl) key.0CgRight Control key. (Control on macOS, Ctrl on other \xe2\x80\xa6DgIf signum is <code>SIGCHLD</code>, do not receive notification when \xe2\x80\xa6DeIf signum is <code>SIGCHLD</code>, do not transform children into \xe2\x80\xa6CnRestore the signal action to the default upon entry to the \xe2\x80\xa6BjCall a callback function at a future time.BlWait until a condition variable is signaled.Bd&lt; The system requests a file openBc&lt; text/plain drag-and-drop eventCiPerform a fast fill of a rectangle with a specific color.ClRetrieve a message about the last error that occurred on \xe2\x80\xa6CdGet the number of milliseconds since SDL library \xe2\x80\xa6BnDetermine whether the CPU has 3DNow! features.CjCheck for the existence of a certain event type in the \xe2\x80\xa6CdDetermine whether the CPU has the RDTSC instruction.BnDetermine whether the CPU has SSE4.1 features.BnDetermine whether the CPU has SSE4.2 features.BhQuery if the current device is a tablet.BcLoad all the data from a file path.BjLog a message with SDL_LOG_PRIORITY_DEBUG.BjLog a message with SDL_LOG_PRIORITY_ERROR.C`This function is a legacy means of mixing audio.CmUse this function to create an SDL_RWops structure from a \xe2\x80\xa6CmUse this function to read 16 bits of big-endian data from \xe2\x80\xa6CmUse this function to read 32 bits of big-endian data from \xe2\x80\xa6CmUse this function to read 64 bits of big-endian data from \xe2\x80\xa6CkUse this function to read 16 bits of little-endian data \xe2\x80\xa6CkUse this function to read 32 bits of little-endian data \xe2\x80\xa6CkUse this function to read 64 bits of little-endian data \xe2\x80\xa6BhA structure representing rendering stateBmDeallocate memory obtained from SDL_SIMDAllocC`\\brief The SDL keyboard scancode representation.BeGet the current value of a semaphore.CgThis is a unique ID for a sensor for the time it is \xe2\x80\xa6CaSet the SDL error message for the current thread.AkThe custom event structure.CaGet the thread identifier for the current thread.Cn\\brief A type representing an atomic integer value.  It is \xe2\x80\xa6AlFinalize the HIDAPI library.AnInitialize the HIDAPI library.CiOpen a HID device using a Vendor ID (VID), Product ID \xe2\x80\xa6BgRead an Input report from a HID device.ClFormatted text, the ass field must be set by the decoder \xe2\x80\xa6DcA <code>SampleBuffer</code>, is a sample oriented buffer. It is \xe2\x80\xa6CiSampleFormat describes the data encoding for an audio \xe2\x80\xa6C`A ffi compatible description of a sample buffer.CjA command that saves the current terminal cursor position.CaAn infinite source that produces a sawtooth wave.DiA <code>ScopedStream</code> restricts the number of bytes that may be \xe2\x80\xa6Dj<code>SeekBuffered</code> provides methods to seek within the buffered \xe2\x80\xa6DeType returned from <code>serialize_map</code> for serializing the \xe2\x80\xa6CeReturned from <code>Serializer::serialize_map</code>.1DeType returned from <code>serialize_seq</code> for serializing the \xe2\x80\xa6CeReturned from <code>Serializer::serialize_seq</code>.1BaA command that sets an attribute.CjError that can be returned from <code>SetOnce::set</code>.DiA type to represent the <code>SharedSecret</code> that DH-KEM(X25519, \xe2\x80\xa6DiA type to represent the private <code>SharedSecret</code> that X-Wing \xe2\x80\xa6DfA type to represent the <code>SharedSecret</code> that ML-KEM-1024 \xe2\x80\xa6DeA type to represent the <code>SharedSecret</code> that ML-KEM-512 \xe2\x80\xa6DeA type to represent the <code>SharedSecret</code> that ML-KEM-768 \xe2\x80\xa6C`Operations on SIMD vectors of constant pointers.00000nQuality modes.0FhWhen casting an individual <code>T</code>, <code>&amp;T</code>, or <code>&amp;mut T</code> value the \xe2\x80\xa6Dj<code>SkipAnyWhile</code> is an iterator that skips over elements from \xe2\x80\xa6CnA source that skips specified duration of the given source \xe2\x80\xa6DjPatterns in slices - currently, only used by <code>strip_prefix</code> \xe2\x80\xa60Bi<code>core</code> An IPv4 socket address.0AgAn IPv4 socket address.00Bi<code>core</code> An IPv6 socket address.0AgAn IPv6 socket address.00BcStreaming authenticated decryption.BcStreaming authenticated encryption.BmRepresents a setting for vsync/swap interval.Ba(\xe2\x80\x9cGet software carrier flag\xe2\x80\x9d)Ba(\xe2\x80\x9cSet software carrier flag\xe2\x80\x9d)Dh<code>TakeAnyWhile</code> is an iterator that iterates over elements \xe2\x80\xa6CiA source that truncates the given source to a certain \xe2\x80\xa6DhAn iterator adaptor that borrows from a <code>Clone</code>-able iterator0Dk<code>core</code> Allows the implementor of a task executor to create a \xe2\x80\xa60BbConnector for regular TCP sockets.CaOs-specific extensions for <code>TcpStream</code>Dk\xe2\x9a\x96\xef\xb8\x8f <code>std</code> A specialized <code>Result</code> type for threads.0DeA name for a time zone yield by the <code>TimeZoneNameIter</code> \xe2\x80\xa6CkA Rust type representing an exception defined in Python \xe2\x80\xa6CdToo many (hard) links to the same filesystem object.0000CkWhat type of core we have at this level in the topology \xe2\x80\xa6AiConfigures a mixer track.CaAn infinite source that produces a triangle wave.DjA marker trait over <code>TryRngCore</code> for securely unpredictable \xe2\x80\xa6Dg\xf0\x9f\x9a\xa9+ <code>std</code> An enumeration of possible errors associated \xe2\x80\xa60EgError returned from the <code>Mutex::try_lock</code>, <code>RwLock::try_read</code> \xe2\x80\xa6CgAn enumeration of possible errors associated with a \xe2\x80\xa60CkAn enumeration of possible errors which can occur while \xe2\x80\xa6CkAn error that may be emitted when attempting to fetch a \xe2\x80\xa6BhError returned by <code>try_recv</code>.EeAn error returned from the <code>try_recv</code> function on a <code>Receiver</code>.DnError returned by the <code>try_recv</code> function on <code>Receiver</code>.CmThis enumeration is the list of the possible reasons that \xe2\x80\xa60CjAn error that may be emitted when attempting to send a \xe2\x80\xa6CfThis enumeration is the list of the possible error \xe2\x80\xa600BcAn element of a <code>Tuple</code>.0Cm\xf0\x9f\x94\x84 An iterator over exclusive references to elements of \xe2\x80\xa60Cl\xf0\x9f\x94\x84 An iterator over shared references to elements of a \xe2\x80\xa60CjThe input contained a tuple variant that was not expected.CiAn iterator over all contiguous windows that produces \xe2\x80\xa60CjA newtype-based ID that associates a resource with its \xe2\x80\xa60Bj401 Unauthorized [RFC9110, Section 15.5.2]Bk414 URI Too Long [RFC9110, Section 15.5.15]ClAn iterator over the substrings of a string which, after \xe2\x80\xa6AgA Unix datagram socket.CeA structure representing a Unix domain socket server.CkThis type provides a way to entirely opt-out of typical \xe2\x80\xa600BdFlash the window until it gets focusCfAll cells from the cursor position until the new line.BhA terminator that resumes the unwinding.00BcReturns the number of valid values.00000000000CfReturns the number of valid values, as an unsigned \xe2\x80\xa6CmA mutable iterator of all values associated with a single \xe2\x80\xa6C`Verbatim disk prefix, e.g., <code>\\\\?\\C:</code>.00fU+007C0000AdVirtual alarm clock.DiTrait that is implemented by <code>MidiInput</code> on platforms that \xe2\x80\xa6AeA web API Event kind.0BoOn the Web, specify which WebGL version to use.CiRepresents a job running inside a <code>WebWorker</code>.0DhAn iterator adaptor that wraps each element in an <code>Position</code>.0Bh\xf0\x9f\x8e\xb2 The <code>XorShift128+</code> PRNG.0AoTrue (unordered, non-signaling)00AkTrue (unordered, signaling)00AiUnordered (non-signaling)00AeUnordered (signaling)00AnSee <code>_mm_prefetch</code>.00000000AkSee <code>_mm_setcsr</code>00DgClears all bits below the least significant zero bit of <code>x</code>.00000D`Sets all bits of <code>x</code> below the least significant one.00000CfAdd 16-bit masks a and b, and store the result in dst.00CgAdd 32-bit masks in a and b, and store the result in k.00CgAdd 64-bit masks in a and b, and store the result in k.00CnCompute the bitwise AND of 16-bit masks a and b, and store \xe2\x80\xa600CnCompute the bitwise AND of 32-bit masks a and b, and store \xe2\x80\xa600CnCompute the bitwise AND of 64-bit masks a and b, and store \xe2\x80\xa600CiBitwise AND NOT of 8-bit masks a and b, and store the \xe2\x80\xa600CkCompute the bitwise NOT of 16-bit mask a, and store the \xe2\x80\xa600CkCompute the bitwise NOT of 32-bit mask a, and store the \xe2\x80\xa600CkCompute the bitwise NOT of 64-bit mask a, and store the \xe2\x80\xa600CmBitwise XNOR of 8-bit masks a and b, and store the result \xe2\x80\xa600CnCompute the bitwise XOR of 16-bit masks a and b, and store \xe2\x80\xa600CnCompute the bitwise XOR of 32-bit masks a and b, and store \xe2\x80\xa600CnCompute the bitwise XOR of 64-bit masks a and b, and store \xe2\x80\xa600AlLoad 16-bit mask from memory00BdLoad 32-bit mask from memory into k.00BdLoad 64-bit mask from memory into k.00ChConditionally multiplies the packed single-precision \xe2\x80\xa600ClComputes the bitwise OR packed double-precision (64-bit) \xe2\x80\xa600ClComputes the bitwise OR packed single-precision (32-bit) \xe2\x80\xa600CjCompute the bitwise NOT of 16-bit masks a and then AND \xe2\x80\xa600CiCompute the bitwise XNOR of 16-bit masks a and b, and \xe2\x80\xa600CnCompute the bitwise OR of packed double-precision (64-bit) \xe2\x80\xa600CnCompute the bitwise OR of packed single-precision (32-bit) \xe2\x80\xa600CfComputes the absolute value of packed 8-bit signed \xe2\x80\xa600D`Adds packed 8-bit integers in <code>a</code> and <code>b</code>.00DmAverages packed unsigned 8-bit integers in <code>a</code> and <code>b</code>.00CiBlend packed double-precision (64-bit) floating-point \xe2\x80\xa600CiBlend packed single-precision (32-bit) floating-point \xe2\x80\xa600EbCompares corresponding elements in <code>a</code> and <code>b</code> for equality.00DkCompares each of the four floats in <code>a</code> to the corresponding \xe2\x80\xa600DkReturns a new vector with the low element of <code>a</code> replaced by \xe2\x80\xa600DiCompares the lowest <code>f32</code> of both inputs for equality. The \xe2\x80\xa600GaCompares packed strings in <code>a</code> and <code>b</code> with lengths <code>la</code> and <code>lb</code> \xe2\x80\xa600000FnCompares packed strings <code>a</code> and <code>b</code> with lengths <code>la</code> and <code>lb</code> \xe2\x80\xa600111111111111DlCompares corresponding elements in <code>a</code> and <code>b</code> for \xe2\x80\xa600555444DkCompares the lowest <code>f32</code> of both inputs for greater than or \xe2\x80\xa600111666555DiCompares the lowest <code>f32</code> of both inputs for greater than. \xe2\x80\xa600EfCompares packed strings with implicit lengths in <code>a</code> and <code>b</code> \xe2\x80\xa600000000000000000000333888777DhCompares the lowest <code>f32</code> of both inputs for less than or \xe2\x80\xa600EcCompares corresponding elements in <code>a</code> and <code>b</code> for less-than.00:::999DjCompares the lowest <code>f32</code> of both inputs for less than. The \xe2\x80\xa600CgMultiply packed complex numbers in a by the complex \xe2\x80\xa600CjMultiply the lower complex numbers in a by the complex \xe2\x80\xa600CkCompute the complex conjugates of complex numbers in a, \xe2\x80\xa600DcStarting with the initial value in <code>crc</code>, return the \xe2\x80\xa600CkConvert packed double-precision (64-bit) floating-point \xe2\x80\xa600ClConverts packed double-precision (64-bit) floating-point \xe2\x80\xa600CiConvert packed half-precision (16-bit) floating-point \xe2\x80\xa600CnConverts the 4 x 16-bit half-precision float values in the \xe2\x80\xa600ClConverts packed single-precision (32-bit) floating-point \xe2\x80\xa600CnConverts the 4 x 32-bit float values in the 128-bit vector \xe2\x80\xa600CnConvert the lower double-precision (64-bit) floating-point \xe2\x80\xa600C`Converts the lower double-precision (64-bit) \xe2\x80\xa600ClConvert the lower half-precision (16-bit) floating-point \xe2\x80\xa600000C`Converts the lower single-precision (32-bit) \xe2\x80\xa600CnConvert the lower single-precision (32-bit) floating-point \xe2\x80\xa600CmRound the packed double-precision (64-bit) floating-point \xe2\x80\xa600CmRound the packed single-precision (32-bit) floating-point \xe2\x80\xa600ClRound the lower double-precision (64-bit) floating-point \xe2\x80\xa600ClRound the lower single-precision (32-bit) floating-point \xe2\x80\xa600CnMultiplies packed double-precision (64-bit) floating-point \xe2\x80\xa600CjMultiply packed half-precision (16-bit) floating-point \xe2\x80\xa600CnMultiplies packed single-precision (32-bit) floating-point \xe2\x80\xa600CbMultiplies the lower double-precision (64-bit) \xe2\x80\xa600CmMultiply the lower half-precision (16-bit) floating-point \xe2\x80\xa600CbMultiplies the lower single-precision (32-bit) \xe2\x80\xa600555444333222111000CmMultiply packed complex numbers in a and b, and store the \xe2\x80\xa600ClMultiply the lower complex numbers in a and b, and store \xe2\x80\xa600ClLoads a double-precision (64-bit) floating-point element \xe2\x80\xa600EeConstruct a <code>__m128</code> by duplicating the value read from <code>p</code> \xe2\x80\xa600111BcAlias for <code>_mm_load1_ps</code>00CnLoads a double-precision value into the high-order bits of \xe2\x80\xa600CmLoads a double-precision value into the low-order bits of \xe2\x80\xa600CmLoads 2 double-precision (64-bit) floating-point elements \xe2\x80\xa600EhLoads four <code>f32</code> values from aligned memory into a <code>__m128</code> in \xe2\x80\xa600CiLoads 128-bits (composed of 2 packed double-precision \xe2\x80\xa600CfLoad 128-bits (composed of 8 packed half-precision \xe2\x80\xa600EhLoads four <code>f32</code> values from memory into a <code>__m128</code>. There are \xe2\x80\xa600EcCompares packed 8-bit integers in <code>a</code> and <code>b</code> and returns \xe2\x80\xa600EeCompares packed unsigned 8-bit integers in <code>a</code> and <code>b</code>, and \xe2\x80\xa600111000CmCompute the bitwise OR of packed 32-bit integers in a and \xe2\x80\xa600CmCompute the bitwise OR of packed 64-bit integers in a and \xe2\x80\xa600CmComputes the bitwise OR of 128 bits (representing integer \xe2\x80\xa600DgFetch the cache line that contains address <code>p</code> using the \xe2\x80\xa600CiCalculate the max, min, absolute max, or absolute min \xe2\x80\xa600000C`Compute the approximate reciprocal of packed \xe2\x80\xa600000CcCompute the approximate reciprocal of the lower \xe2\x80\xa600000CmRound the packed double-precision (64-bit) floating-point \xe2\x80\xa600CmRound the packed single-precision (32-bit) floating-point \xe2\x80\xa600ClRound the lower double-precision (64-bit) floating-point \xe2\x80\xa600ClRound the lower single-precision (32-bit) floating-point \xe2\x80\xa600ClCompute the approximate reciprocal square root of packed \xe2\x80\xa600ClReturns the approximate reciprocal square root of packed \xe2\x80\xa600CiCompute the approximate reciprocal square root of the \xe2\x80\xa600CiReturns the approximate reciprocal square root of the \xe2\x80\xa600CiSum the absolute differences of packed unsigned 8-bit \xe2\x80\xa600CdSets packed 8-bit integers with the supplied values.00CjStores 128-bits (composed of 2 packed double-precision \xe2\x80\xa600CgStore 128-bits (composed of 8 packed half-precision \xe2\x80\xa600CgStores four 32-bit floats into <em>aligned</em> memory.00CcStores the lower 64 bits of a 128-bit vector of \xe2\x80\xa600CjStore the lower half-precision (16-bit) floating-point \xe2\x80\xa600CmStores the lowest 32 bit float of <code>a</code> into memory.00DgSubtracts packed 8-bit integers in <code>b</code> from packed 8-bit \xe2\x80\xa600CfComputes the bitwise AND of 128 bits (representing \xe2\x80\xa600000000000CjCounts the number of trailing least significant zero bits.00000AjStore 8-bit mask to memory00C`Compute dot-product of bytes in tiles with a \xe2\x80\xa600000000000CkStore the tile specified by src to memory specifieid by \xe2\x80\xa600EhRetrieves the parameter passed to <code>_xabort</code> when <code>_xbegin</code>\xe2\x80\x99s \xe2\x80\xa600ClReturns the time zone abbreviation corresponding to this \xe2\x80\xa60DgReturns a new <code>AbortHandle</code> that can be used to remotely \xe2\x80\xa6CcInvokes a closure, aborting if the closure unwinds.00DkReturns the absolute value of this time delta as a <code>Duration</code>\xe2\x80\xa6CfLanewise absolute value with lanes as <code>i8</code>.0BhAbsolute value of <code>i8</code> lanes.0ClComputes the inverse hyperbolic cosine using the natural \xe2\x80\xa6CcAcquires <code>n</code> permits from the semaphore.AkAdd a function to a module.0CjLanewise <code>a + b</code> with lanes as <code>i8</code>.000AcCreates a listener.CbAdds a fake listener at the given position and \xe2\x80\xa6AbAdds SDL mappings.ClConstructs a new initializer from an initializer for the \xe2\x80\xa6BlAdd the high lane and subtract the low lane.0DjAlternately, from the top, add <code>f64</code> then sub <code>f64</code>.0CgReturns the alignment of the pointed-to value in bytes.BoThe required alignment of the referenced value.CmReturns the ABI-required minimum alignment of the type of \xe2\x80\xa60000010000001000000CgComputes the offset that needs to be applied to the \xe2\x80\xa6D`Allocate space for an object with the given <code>Layout</code>.DkBehaves like <code>alloc</code>, but also ensures that the contents are \xe2\x80\xa600CeAllocates zero-initialized memory with the global \xe2\x80\xa6CnAllocates zeroed memory with the given layout. This is the \xe2\x80\xa62222221111CnMakes all future panics abort directly without running the \xe2\x80\xa6mAPIC ID size.CgConstructs a path inside your application\xe2\x80\x99s cache \xe2\x80\xa600CgConstructs a path inside your application\xe2\x80\x99s state \xe2\x80\xa600CkCalculates the offset from a pointer, potentially wrapping.00DiReturns an iterator over <code>N</code> elements of the iterator at a \xe2\x80\xa6000000000000000000000CcConverts decibels to amplitude, a linear volume \xe2\x80\xa6BoRetrieve the underlying arbitrary header if anyBiCasts <code>self</code> to mutable array.0CjReturns the instance\xe2\x80\x99s data as a mutable slice of bytes.0DmView any <code>T: Sync + Unpin + ?Sized</code> as <code>&amp;mut [u8]</code>.CgReturns a mutable byte slice of the inner string slice.CjReturns an exclusive byte slice of the inner string slice.DfReturns the contents of this <code>MaybeUninit</code> as a mutable \xe2\x80\xa6422DeExtracts a mutable slice of the <code>ByteArray</code>\xe2\x80\x99s entire \xe2\x80\xa60BcReturns a raw byte pointer to self.ElConverts from <code>Option&lt;T&gt;</code> (or <code>&amp;mut Option&lt;T&gt;</code>) to \xe2\x80\xa6EdGets <code>Pin&lt;&amp;mut T&gt;</code> to the underlying pinned value from this \xe2\x80\xa6FbConverts from <code>Result&lt;T, E&gt;</code> (or <code>&amp;mut Result&lt;T, E&gt;</code>) to \xe2\x80\xa6DcConverts from <code>&amp;mut EitherOrBoth&lt;A, B&gt;</code> to \xe2\x80\xa6CfReturns the key event if the event is a key event, \xe2\x80\xa6CkReturns a mutable array reference containing the entire \xe2\x80\xa6CeReturn a mutable reference to an 8bit Grayscale imageC`Return a mutable reference to an 16bit RGB imageC`Return a mutable reference to an 8bit RGBA imageCgReturns an exclusive slice containing the entire array.BhReturns the stack as an exclusive slice.0BnExtracts a mutable slice of the entire vector.CnReturns a mutable slice of all elements that have not been \xe2\x80\xa6CnReturns a mutable slice of the contained value, if any. If \xe2\x80\xa6CjViews the underlying data as a mutable subslice of the \xe2\x80\xa6AlView the samples as a slice.CmReturns the remaining items of this iterator as a mutable \xe2\x80\xa6550BbGets the buffer memory as a slice.1CcExtracts the raw pthread_t without taking ownership0CjReturns an exclusive reference to the distance as a slice.ChReturns an exclusive reference to the extent as a slice.CjReturns an exclusive reference to the position as a slice.CjReturns an exclusive reference to the orientation as a \xe2\x80\xa6ChReturns an exclusive reference to the stride as a slice.BnReturns a mutable reference to the root table.CeCasts <code>self</code> to mutable <code>Table</code>EaReturns a (3) tuple if the 3 fields from <code>h</code> to <code>s</code> are \xe2\x80\xa6EaReturns a (3) tuple if the 3 fields from <code>y</code> to <code>d</code> are \xe2\x80\xa6EaReturns a (6) tuple if the 6 fields from <code>y</code> to <code>s</code> are \xe2\x80\xa6CfCasts <code>self</code> to mutable <code>Value</code>.CjComputes the inverse hyperbolic sine using the natural \xe2\x80\xa6CkAssert that two iterables produce equal sequences, with \xe2\x80\xa6EeComputes the four quadrant arctangent of <code>self</code> and <code>other</code> \xe2\x80\xa6CmComputes the inverse hyperbolic tangent using the natural \xe2\x80\xa6DkStores a value if the current value is the same as the <code>old</code> \xe2\x80\xa600Bi\xe2\x9a\x9b\xef\xb8\x8f <code>core</code> An atomic fence.0A`An atomic fence.00DjStores the value at the specified memory location. <code>T</code> must \xe2\x80\xa600CmFor streams with AV_DISPOSITION_ATTACHED_PIC disposition, \xe2\x80\xa6Bf&lt; Level at the start of the attack.000CgAuthenticate a message using BLAKE2b-256 in keyed mode.DgOne-shot API for HPKE AuthPsk mode <code>Self::open()</code> operation.DgOne-shot API for HPKE AuthPsk mode <code>Self::seal()</code> operation.AjAllocate an AVAES context.CnEncrypt or decrypt a buffer using a previously initialized \xe2\x80\xa6Ce0th order modified bessel function of the first kind.C`@return the number of logical CPU cores present.CgCopy entries from one AVDictionary struct into another.ClFree all the memory allocated for an AVDictionary struct \xe2\x80\xa6BhEvaluate a previously parsed expression.CdFree a parsed expression previously created with \xe2\x80\xa6CgFree an AVFifoBuffer. @param f AVFifoBuffer to free \xe2\x80\xa6CmEnlarge an AVFifoBuffer. In case of reallocation failure, \xe2\x80\xa6CcRead data from a FIFO without modifying FIFO state.AfRead data from a FIFO.CkReturn the amount of data in bytes in the AVFifoBuffer, \xe2\x80\xa6CnSet up a new reference to the data described by the source \xe2\x80\xa6CmUnescape the given string until a non escaped terminating \xe2\x80\xa6BcInitialize or reset a hash context.ClHash an array of data with a key. @param ctx    The HMAC \xe2\x80\xa6CkFree an AVHMAC context. @param ctx The context to free, \xe2\x80\xa6ClInitialize an AVHMAC context with an authentication key. \xe2\x80\xa6ClReturn a positive value if the given filename has one of \xe2\x80\xa6ChSet the maximum size that may be allocated in one block.AjAllocate an AVMD5 context.BgFinish hashing and output digest value.Cn@deprecated use av_tx_init from libavutil/tx.h with a type \xe2\x80\xa6CjLook for an option in an object. Consider only options \xe2\x80\xa6AeShow the obj options.CjSend a nice dump of a packet to the specified file stream.CiSet up a real FFT. @param nbits           log2 of the \xe2\x80\xa6CnStart playing a network-based stream (e.g. RTSP stream) at \xe2\x80\xa6C`Allocate, reallocate, or free a block of memory.BoRescale a 64-bit integer by 2 rational numbers.AjAllocate an AVSHA context.9CnMultiply two <code>size_t</code> values checking for overflow.ClReturn non-zero if pfx is a prefix of str independent of \xe2\x80\xa6BcSplit a URL string into components.AmInitialize an AVXTEA context.CnRead a string from pb into buf. The reading will terminate \xe2\x80\xa6CkWrite a NULL-terminated string. @return number of bytes \xe2\x80\xa6CnWrites a formatted string to the context taking a va_list. \xe2\x80\xa6Bfencoding: Set by user.decoding: unusedBnFilter using <code>BitNegation</code>: D = !S.BcBitwise <code>a &amp;amp; b</code>.AoBitwise <code>a &amp; b</code>.101010BgPerforms the <code>|=</code> operation.EaModifies this set to contain the union of <code>self</code> and <code>rhs</code>.111D`The bitwise or (<code>|</code>) of the bits in two flags values.00000000000000000000AfAdds the set of flags.00000003AkBitwise <code>a ^ b</code>.0000000CbReturns the bottom-right corner of this rectangle.0DaRe-interprets <code>Box&lt;T&gt;</code> as <code>BoxBytes</code>.0C`Returns a copied sorted array using bubble sort.0000000000000CnInitializes the global thread pool. This initialization is \xe2\x80\xa6AeCreates a new hasher.0000CkCreates a new looped decoder with previously configured \xe2\x80\xa6DcCreates a scoped <code>ThreadPool</code> initialized using this \xe2\x80\xa6DdRe-interprets <code>&amp;mut T</code> as <code>&amp;mut [u8]</code>.AfAdds the given vector.0CfDivides each element of the vector by a scalar, in \xe2\x80\xa60CiMultiplies each element of the vector by a scalar, in \xe2\x80\xa60BoCalls a method on the object with no arguments.BoCalls a method on the object without arguments.0CeCalls a method on the object with only positional \xe2\x80\xa600CmReturns the canonical, absolute form of the path with all \xe2\x80\xa6CkReturns the canonical, absolute form of a path with all \xe2\x80\xa610BaReturns the service capabilities.0BfCodec capabilities. see AV_CODEC_CAP_*C`Hardware accelerated codec capabilities. see \xe2\x80\xa6BnCaptures the last token from a list of inputs.0CdReturns the number of captures groups in this regex.CmRust\xe2\x80\x99s \xe2\x80\x9ctry catch\xe2\x80\x9d construct for unwinding. Invokes \xe2\x80\xa600CjInvokes a closure, capturing the cause of an unwinding \xe2\x80\xa6DgRound the low lane of <code>b</code> toward positive infinity, high \xe2\x80\xa60BiReturns the components as a mutable sliceAfRemove any filter set.CcRemove the current information on the image format.BfClear the poisoned state from a mutex.BeClear the poisoned state from a lock.CaReports the exit code, if applicable, from an \xe2\x80\xa6BcThe codec parameters for the track.0DfGets a reference to an updated set of <code>CodecParameters</code> \xe2\x80\xa6CcBitstream width / height, may be different from \xe2\x80\xa6CjCollects all the items from an iterator into a collection.000000000000000000000EhReturns <code>true</code> if the color uses integer components (e.g., <code>u8</code>\xe2\x80\xa600DkReturn an iterator adaptor that iterates over the <code>k</code>-length \xe2\x80\xa6000Ckbase_macros Conditionally compiles the given attributes \xe2\x80\xa60CnTransforms <code>Incomplete</code> into <code>Backtrack</code>0CcComputes luma from R\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 using the given \xe2\x80\xa60BhConcatenates literals into a byte slice.00000000000BfConcatenates values into a byte slice.111111BbConnects the socket to an address.CiConnects to the socket specified by <code>address</code>.BiAsserts various comparisons on constants.0BaCompile-time <code>decode</code>.BaCompile-time <code>encode</code>.CnConsume items from the iterator until full, and return new \xe2\x80\xa6EgReturns <code>true</code> if the result is an <code>Err</code> value containing the \xe2\x80\xa60DkReturns <code>true</code> if the map contains a value for the specified \xe2\x80\xa60CmReturns true if the table contains an item with the given \xe2\x80\xa6BmReturns true if the table contains given key.1CnReturns true if the map contains a value for the specified \xe2\x80\xa63Cd(contentType) Returns the document\xe2\x80\x99s content type.AlSet the content-type header.CfIf parsing fails, dynamically add context to the error0CnConverts a value from one prefix to another, returning the \xe2\x80\xa60CgConverts a value from one binary prefix to another, \xe2\x80\xa6CmConverts a value from one SI prefix to another, returning \xe2\x80\xa6EcCopies the sign from <code>y</code> to <code>x</code> for <code>f128</code> values.00BdCounts the number of decimal digits.00000CeSorts a slice using counting sort, and writes the \xe2\x80\xa6EbSets whether a <code>PidFd</code> should be created for the <code>Child</code> \xe2\x80\xa6EhLike <code>ctlz</code>, but extra-unsafe as it returns <code>undef</code> when given \xe2\x80\xa600EhLike <code>cttz</code>, but extra-unsafe as it returns <code>undef</code> when given \xe2\x80\xa600BgProvides a cursor at the front element.DjPass custom flags to the <code>flags</code> argument of <code>open</code>.0ClCreates a new pointer that is dangling, but non-null and \xe2\x80\xa6000CfSets the foreground color to <code>DarkMagenta</code>.Bbdarkness masking (0-&gt; disabled)CmReturns the ordinal number of the last day in the year in \xe2\x80\xa6CmReturns the total number of days in the the year in which \xe2\x80\xa60ClReturns the total number of days in the year of this ISO \xe2\x80\xa6BlConverts decibels to linear amplitude scale.CmSpecifies whether the <code>Debug</code> trait should use \xe2\x80\xa6Dg<code>core</code> Asserts that a boolean expression is true at runtime.0DbAsserts that a boolean expression is <code>true</code> at runtime.00DfCreates a <code>DebugStruct</code> builder designed to assist with \xe2\x80\xa6BnConvenience function to create a decode error.CnCreates an iterator over the UTF-16 encoded code points in \xe2\x80\xa600ClRemoves all but the first of consecutive elements in the \xe2\x80\xa600BgReturns the default raw representation.00CiHelper for defining individual and composite error types.0AgDeinterleave two masks.AiDeinterleave two vectors.CcAttribute macro used to apply derive macros for \xe2\x80\xa600000000000000BdReturns the digital root in base 10.0ClDisambiguates this (possibly ambiguous) timestamp into a \xe2\x80\xa60CkReturns a value uniquely identifying the enum variant in v.DhReturns a value uniquely identifying the enum variant in <code>v</code>.00BnGet information about a specific display mode.CmQuery the display mode to use when a window is visible at \xe2\x80\xa6DcGet the name of the display at the index <code>display_name</code>.AmReturns a raw representation.00CkReturns the quotient, rounding ties to the nearest even \xe2\x80\xa6CjReturns the quotient, rounding ties to the nearest odd \xe2\x80\xa6CcReturns the surrounding whitespace for between dots0DbForwards to the method defined on the type <code>dyn Error</code>.0CnReturns some mutable reference to the inner value if it is \xe2\x80\xa6ClForwards to the method defined on the type <code>Any</code>.1D`Forwards to the method defined on the type <code>dyn Any</code>.CmReturns some exclusive reference to the inner value if it \xe2\x80\xa6004CnReturns some reference to the inner value if it is of type \xe2\x80\xa65302CmReturns some shared reference to the inner value if it is \xe2\x80\xa600CkCreates an iterator that removes the elements in the vectorCjClears the binary heap, returning an iterator over the \xe2\x80\xa6CjDraws multiple points on the current rendering target. \xe2\x80\xa6BmDrops <code>n</code> elements from the front.BhData TLB number of entries for 4K pages.BkL2 Data TLB number of entries for 4K pages.CgEnable an event type. Returns if the event type was \xe2\x80\xa6AoEnables receiving mouse events.AhEncodes the given image.ChEncodes this scalar as UTF-16 into the provided byte \xe2\x80\xa60CdComputes the size of <code>self</code> when encoded.0BeReturns the size of the payload data.1CkGets the given key\xe2\x80\x99s corresponding entry in the Table \xe2\x80\xa600BiReturns the epoch offset in microseconds.00BiReturns the epoch offset in milliseconds.00CiWrites bytes to stderr. Returns error on syscall failure.CmReturns an iterator that produces an escaped version of a \xe2\x80\xa6Cj(setTimeout) Executes JavaScript code after a delay in \xe2\x80\xa60CiCreate an event sender that can be sent to other threads.BmSets a callback to be invoked on thread exit.CnExit the current process with the given <code>ExitCode</code>.AgReturns the right valueCcExtends the front of the destaque from an iterator.BmFor planar audio which requires more than \xe2\x80\xa6AoA slice of extra paired glyphs.0CfFactor out a homogeneous type from an either of pairs.ChFetches the value, and applies a function to it that \xe2\x80\xa60000000000000000000000000000BbReturns the <code>FileType</code>.CgFills all elements of the array with the default value.Bf&lt; Current audio conversion functionClApplies the given predicate to the items in the parallel \xe2\x80\xa60CnFind the value of the first element satisfying a predicate \xe2\x80\xa6000ChEquivalent to <code>datetime.timezone</code> constructorDhAn adaptor that flattens serial-iterable <code>Item</code>s into one \xe2\x80\xa60DhRound the low lane of <code>b</code> toward negative infinity, other \xe2\x80\xa60ChRemoves all events in the event queue that match the \xe2\x80\xa6CnReturn the greater of two arguments or, if either argument \xe2\x80\xa6CmReturn the lesser of two arguments or, if either argument \xe2\x80\xa6CkFormat some value, or display an empty string if it\xe2\x80\x99s \xe2\x80\xa60CaFold <code>Option</code> values from an iterator.000BjThe lowest possible bounding box for text.0BaFrame counter, set by libavcodec.AnCreates a mask from a bitmask.BnDecodes an encoded image into a dynamic image.DeCreates a <code>StreamingSoundData</code> for a <code>Decoder</code>.DjCreates a new <code>PyComplex</code> from the given real and imaginary \xe2\x80\xa6BeConstruct from encoded password hash.CiBuilds a source that chains sources built from a factory.DiIf <code>value</code> is within the range for valid instances of this \xe2\x80\xa6EeTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no \xe2\x80\xa6DeSimilar to <code>FromIterator::from_iter</code>, but with a given \xe2\x80\xa6DcConstruct a new <code>Vec</code> from the given iterator\xe2\x80\x99s items.ElConstruct a new <code>String&lt;&#39;bump&gt;</code> from an iterator of <code>char</code>s.CgCreates a value from an iterator. This method is an \xe2\x80\xa6DcAttempts to construct a <code>KeyAlpha</code> from a JavaScript \xe2\x80\xa6DaAttempts to construct a <code>KeyPad</code> from a JavaScript \xe2\x80\xa6DbAtempts to construct a <code>KeyMedia</code> from a JavaScript \xe2\x80\xa6D`Atempts to construct a <code>KeyMod</code> from a JavaScript \xe2\x80\xa6DaAttempts to construct a <code>KeyMod</code> from a JavaScript \xe2\x80\xa6CiGets the scancode from a virtual key. Returns None if \xe2\x80\xa6EjBuild a <em>pinned mutable</em> reference to an <code>Exclusive&lt;T&gt;</code> from a \xe2\x80\xa6EdDecomposes a fat pointer <code>*const T</code> into a <code>FatPtr</code> structure.BhCreate from <code>Rgb&lt;f64&gt;</code>.0000000DiCreates a new time zone offset in a <code>const</code> context from a \xe2\x80\xa6CfCreates a 2D software rendering context for a surface.AnA convenience function for \xe2\x80\xa6EaDecode a UTF-16BE\xe2\x80\x93encoded vector <code>v</code> into a <code>String</code>, \xe2\x80\xa6EaDecode a UTF-16LE\xe2\x80\x93encoded vector <code>v</code> into a <code>String</code>, \xe2\x80\xa6ClCallback to return the category. available since version \xe2\x80\xa6DjAttempts to get mutable references to <code>N</code> values in the map \xe2\x80\xa60CnReturns an exclusive reference to the element at the given \xe2\x80\xa60AaGet platform nameAoGet the position of the window.BaGets a property of the JS object.CfReturns a reference to the element at the given 2D \xe2\x80\xa60CeInformation about secure enclave support (LEAF=0x12).CmThis function provides information about the SVM features \xe2\x80\xa6CeTime Stamp Counter/Core Crystal Clock Information \xe2\x80\xa6C`Returns the Python type pointer for this object.0CgBinds and unbinds an OpenGL/ES/ES2 texture from the \xe2\x80\xa6BgOpenGL provides an enumeration over \xe2\x80\xa60DjGNU version of <code>basename(3)</code>, defined in <code>string.h</code>.BdGuess image format from memory blockAbSupports AMX_BF16.AbSupports AMX_INT8.AbSupports AMX_TILE.hAVX512BWhAVX512CDAbSupports AVX512DQ.hAVX512ERhAVX512PFhAVX512VLAoSupports AVX-IFMA Instructions.AbSupports AVX_VNNI.CkSize of the frame reordering buffer in the decoder. For \xe2\x80\xa6CmFSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if \xe2\x80\xa6C`Checks if the <em>Num Lock</em> modifier is set.AoPerformance time-stamp counter.BfIndicates support for SVM-Lock if set.CmSupport for INVLPGB/TLBSYNC hypervisor enable in VMCB and \xe2\x80\xa6BfWBNOINVD instruction supported if set.AiCPU has xsaveopt feature.Ci(back) Moves the browser back one step in the session \xe2\x80\xa6Ddbase_macros Returns the number of <em>unique</em> identifiers in \xe2\x80\xa60BcCalculate the inverse FFT in-place.ClIgnores the specified number of bytes from the stream or \xe2\x80\xa6ClReturns true if and only if the year in which this zoned \xe2\x80\xa6CkReturns true if and only if the year in which this date \xe2\x80\xa6CfReturns true if and only if the year in which this \xe2\x80\xa6CmReturns true if and only if the year of this week date is \xe2\x80\xa6CkIncludes a Rust source file relative to the project\xe2\x80\x99s \xe2\x80\xa60CjIndex buffer which instructs the GPU in which order to \xe2\x80\xa60DdReduces the colors using the supplied <code>color_map</code> and \xe2\x80\xa60CmInserts a new key-value pair into the map in the gap that \xe2\x80\xa60CjInserts a new element into the set in the gap that the \xe2\x80\xa60DdInserts a new element into the <code>LinkedList</code> after the \xe2\x80\xa6DgSets the value of the entry, and returns an <code>OccupiedEntry</code>.DjSets the value of the entry with the <code>VacantEntry</code>\xe2\x80\x99s key, \xe2\x80\xa6DhSets the value of the entry with the <code>VacantEntryRef</code>\xe2\x80\x99s \xe2\x80\xa6B`Insert the value into the entry.322DiAdds <code>ev</code> at the end of internal event queue. It can later \xe2\x80\xa6DeSets the <code>right</code> value of this instance, and returns a \xe2\x80\xa6CnReturns the quotient, rounding the result towards positive \xe2\x80\xa600CeReturns <code>true</code> if <code>n</code> is prime.00DaReturns the midpoint of <code>self</code> and <code>other</code>.00CnCounts the number of primes upto and including <code>n</code>.00Ckcustom inter quantization matrix Must be allocated with \xe2\x80\xa6CnVisits the values representing the intersection, i.e., the \xe2\x80\xa6ClVisits the elements representing the intersection, i.e., \xe2\x80\xa6DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.00000000000000000000DgReturns the intersection between the flags in <code>self</code> and \xe2\x80\xa6000BnCalculates the intersection of two rectangles.011114CgReturns an interval representing the angle range in \xe2\x80\xa600DfConsumes this error, returning original <code>CString</code> which \xe2\x80\xa6BbConvert the reader into a decoder.DkPerform the conversion from <code>C</code> into the underlying integral \xe2\x80\xa6CkReturns <code>self</code> cast as a <code>PyMapping</code>.0DdConverts self into a <code>PyDict</code> object pointer. Whether \xe2\x80\xa6DaReturns an exclusive reference to the inner <code>PathBuf</code>.BkConsume the image and returns a RGBA image.CnGets the associated surface of the Canvas and destroys the \xe2\x80\xa6Ckcustom intra quantization matrix Must be allocated with \xe2\x80\xa6BbReturns structural classification.0AnReturns uniqueness properties.0DiRaised when a <code>Deserialize</code> receives a type different from \xe2\x80\xa6CmWhether the sound is advancing and outputting audio given \xe2\x80\xa6CkWhether the track is outputting audio given its current \xe2\x80\xa6CgReturns true if and only if this possibly ambiguous \xe2\x80\xa6CmReturns true if and only if this possibly ambiguous zoned \xe2\x80\xa6CmReturns true when this implementation is available in the \xe2\x80\xa60000000CkReports whenever result of submitted query is available \xe2\x80\xa6CfIs backtracking and trying new parse branches allowed?0EhChecks if all elements are <code>Some</code>, returning early if a <code>None</code> \xe2\x80\xa6CmReturns <code>true</code> if this is a broadcast address (\xe2\x80\xa6CjReturns true if the error was caused by the task being \xe2\x80\xa6DcReturns <code>true</code> if this unicode scalar is an abstract \xe2\x80\xa600000EaReturns <code>true</code> if some <code>call_once()</code> call has completed \xe2\x80\xa6C`Queries if a key event is composing (IME input).BeReturns true if gamepad is connected.BbTests that self is a decimal digit0D`Compare <code>n</code> bytes at the given pointers for equality.AoTests that self is an hex digit0EkIndicates whether <em>only</em> the 6 fields from <code>h</code> to <code>ns</code> are \xe2\x80\xa6F`Returns <code>true</code> if <code>self</code> is in bounds for <code>len</code> slice elements.0CmCache Inclusiveness (Bit 1) False: Cache is not inclusive \xe2\x80\xa6ClReturns <code>true</code> if the event is a key press event.E`\xf0\x9f\x95\x98 Returns <code>true</code> if the provided <code>year</code> is a leap year.0DaChecks if <code>Atomic</code> objects of this type are lock-free.DfReturns <code>true</code> if operations on values of this type are \xe2\x80\xa6000000000000000EcReturns <code>true</code> if this unicode scalar has the <code>Lowercase</code> \xe2\x80\xa60CnChecks if the value is a lowercase character: 0x61 \xe2\x80\x98a\xe2\x80\x99 \xe2\x80\xa6CnChecks if the window is approximately maximized (fills the \xe2\x80\xa6AhIs the window maximized?DaReturns <code>true</code> if the key code is the given media key.AhIs the window minimized?CiReturns <code>true</code> if this is a multicast address.EdReturns <code>true</code> if this is a multicast address (<code>224.0.0.0/4</code>).EaReturns <code>true</code> if this is a multicast address (<code>ff00::/8</code>).CmWhether <code>self</code> is equal to <code>NUM_THREE</code>.00BaTests that self is an octal digit0CjChecks whether the pattern matches at the front of the \xe2\x80\xa60000CcReturns <code>true</code> if the disk is read-only.CcReturns <code>true</code> if the disk is removable.BcQueries if a key event is a repeat.CaReturns <code>true</code> if button is repeating.DaReturns <code>true</code> if the value represents sensitive data.ClDetermines whether the character is one of the permitted \xe2\x80\xa6000ClChecks if the elements of this iterator are sorted using \xe2\x80\xa6000000000000000000000ClReturns <code>true</code> if <code>self</code> is subnormal.0ChReturns true for each element if its value is subnormal.00000CiChecks whether the pattern matches at the back of the \xe2\x80\xa60000CiReports whenever elapsed timer is supported and other \xe2\x80\xa6EcReturns <code>true</code> if this unicode scalar has the <code>Lowercase</code> \xe2\x80\xa60CnChecks if the value is an uppercase character: 0x41 \xe2\x80\x98A\xe2\x80\x99\xe2\x80\xa6EaIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6CaIterate with the offset from the current location0BoInstruction TLB number of entries for 4K pages.CbL2 Instruction TLB number of entries for 4K pages.DcIdentical to <code>join</code>, except that the closures have a \xe2\x80\xa6Cg\xe2\x9a\x99\xef\xb8\x8f \xe2\x88\x85 The JavaScript <code>undefined</code> value.0CmSort the k largest elements into a new iterator using the \xe2\x80\xa6000CkNote: you are not always guaranteed to receive a key_up \xe2\x80\xa6000DiControls whether a <code>kill</code> operation should be invoked on a \xe2\x80\xa6AaCache size in KB.BaSpecifies the L3 cache size rangeC`Allows read access to the internal audio buffer.ClReturns the ISO 8601 week date corresponding to the last \xe2\x80\xa6CnReturns the last date of the year that this zoned datetime \xe2\x80\xa6ClReturns the last date of the year that this date resides \xe2\x80\xa6ChReturns the last date of the year that this datetime \xe2\x80\xa63CdReturns the number of leading ones in the binary \xe2\x80\xa600000000000C`Returns left value or computes it from a closureCiShifts this rectangle to the left by <code>offset</code>.0BiReturns the level filter for this logger.0mLevel number.BlConverts linear amplitude scale to decibels.ClDetermines how to load an OpenGL context on X11 (via GLX \xe2\x80\xa600l&lt; PrivateDcComputes the natural logarithm of <code>1 + self</code> using a \xe2\x80\xa6BfReturns the system load average value.B`Loads an SDL Texture from a fileCkComputes the base-10 logarithm using the change of base \xe2\x80\xa6CnLog function which takes as priority CRITICAL and category \xe2\x80\xa6CaGets device independent resolution for rendering.CbComputes luma from R\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 using Rec. 601 \xe2\x80\xa60CbComputes luma from R\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 using Rec. 709 \xe2\x80\xa60Bcluminance masking (0-&gt; disabled)BoCalculates the squared magnitude of the vector.FcMaps <code>ControlFlow&lt;B, C&gt;</code> to <code>ControlFlow&lt;B, T&gt;</code> by applying a \xe2\x80\xa6AkMarks the state as changed.Cmmaximum number of B-frames between non-B-frames Note: The \xe2\x80\xa6CcReturns the maximum buffer capacity of the channel.0ClThe distance from a listener at which an emitter becomes \xe2\x80\xa6CnLanewise <code>max(a, b)</code> with lanes as <code>i8</code>.000CcMax duration to keep an idle connection in the pool0ClThe gap to leave between the descent of one line and the \xe2\x80\xa6BjThe maximum ECX value recognized by RDPRU.CkMaximum number of packets to read while waiting for the \xe2\x80\xa6CnLanewise <code>max(a, b)</code> with lanes as <code>u8</code>.000CaGet the maximum size of a window\xe2\x80\x99s client area.Ch(measureText) Measures the essential properties of text.CcReturns the minimum alignment of the type in bytes.00DmView a <code>Sync + Unpin</code> <code>self</code> as <code>&amp;[u8]</code>.00CnReturns an iterator over all occurrences of the needles in \xe2\x80\xa60BiReturns the current memory size in bytes.CbReturns the current memory size in units of pages.CmReturns an iterator over all occurrences of the needle in \xe2\x80\xa6CcCreate a new span from this integer in units of \xe2\x80\xa6CnSet the number of microseconds on this span. The value may \xe2\x80\xa61CnSet the number of milliseconds on this span. The value may \xe2\x80\xa6CkReturns the ABI-required minimum alignment of a type in \xe2\x80\xa600Da&lt; Minimum distance between this and the previous keyframe, \xe2\x80\xa6ClThe distance from a listener at which an emitter outputs \xe2\x80\xa6CnLanewise <code>min(a, b)</code> with lanes as <code>i8</code>.000CnLanewise <code>min(a, b)</code> with lanes as <code>u8</code>.000CaGet the minimum size of a window\xe2\x80\x99s client area.EeReturns the middle sub-<code>slice</code> with the given maximum <code>len</code> \xe2\x80\xa6BnLanewise <code>a * b</code> with 32-bit lanes.0CoFilter using <code>MultByByte</code>: D = saturation255(S * C).DcFilter using <code>MultDivby2</code>: D = saturation255(S1/2 * S2).DeFilter using <code>MultDivby4</code>: D = saturation255(S1/2 * S2/2).CgFlips the bit at <code>index</code>, unchecked version.00C`Sets the bits that are set in <code>mask</code>.00CnPack and saturate two <code>i16x8</code> to <code>u8x16</code>DlUses Rust\xe2\x80\x99s <code>cpuid</code> function from the <code>arch</code> module.CgThe number of elements in the AVStream.side_data array.EdGenerates some unique <code>ExampleIdSeqUsize</code> ID with <code>AcqRel</code> \xe2\x80\xa6B`Returns the associated full set.BlReturns a new <code>TimeSplitHourSec</code>.0CmCreates a dynamic image backed by a buffer of gray pixels \xe2\x80\xa6CgCreates a normalized straight positive angle at 180 \xe2\x80\xa600BlReturns a new <code>TimeSplitYearDay</code>.0BlReturns a new <code>TimeSplitYearSec</code>.0DgThis returns <code>Ok(Some(value))</code> for the next value in the \xe2\x80\xa6BgReturns the next segment in the stream.BmReturn a fixed unchanging replacement string.CjReturns the position of the nul byte in the slice that \xe2\x80\xa6DcReturns <code>Self</code> if given a valid <code>&amp;value</code>.00AhReturns the number zero.00000AoSets <code>self</code> to zero.00BiSets <code>self</code> to <code>0</code>.00DdReturns the owned version of <code>self</code>, if it can be cloned.00ClIndex of the object containing this plane in the objects \xe2\x80\xa6CcSets the background color to <code>DarkBlue</code>.CcSets the background color to <code>DarkCyan</code>.CcSets the background color to <code>DarkGrey</code>.CkOpens a new audio device for capture (given the desired \xe2\x80\xa60CcThe corresponding range of values of the parameter.CkReturns both the next state and the <code>u16</code> value.DbReturns both the next random state and the <code>u16</code> value.DjReturns both the next random state and the <code>u32</code> value in a \xe2\x80\xa6DbReturns both the next random state and the <code>u32</code> value.DbReturns both the next random state and the <code>u64</code> value.00CiPerforms the correct padding for an integer which has \xe2\x80\xa6CnCreates a layout by rounding the size of this layout up to \xe2\x80\xa6ChReturns a parallel iterator over the slice producing \xe2\x80\xa60CeCreates the parallel iterator from <code>self</code>.0CjBlocks unless or until the current thread\xe2\x80\x99s token is \xe2\x80\xa6000CjParse a Temporal datetime string into <code>Pieces</code>.DiParse a prefix of the given <code>input</code> according to the given \xe2\x80\xa6CjPartitioning (0: Soft partitioning between the logical \xe2\x80\xa6AgCreates a pattern type.00DeMutably peeks the <code>nth</code> element from the top of the stack.DeReturns a mutable reference to the <code>nth</code> value without \xe2\x80\xa6ChPass a reference to the next iterator element to the \xe2\x80\xa600CeReturn an iterator adaptor that iterates over all \xe2\x80\xa6000EeShuffle the <code>f32</code> lanes from <code>a</code> using an immediate control \xe2\x80\xa60EcShuffle the <code>f32</code> lanes in <code>a</code> using an immediate control \xe2\x80\xa60BmWhether pixel-accurate bitmaps are supported.0Cfduration of the corresponding packet, expressed in \xe2\x80\xa6CjTimebase in which pkt_dts/pts and AVPacket.dts/pts are \xe2\x80\xa6DiAs <code>align_to</code>, but safe because of the <code>Pod</code> bound.DhDecrements the task budget and returns <code>Poll::Pending</code> if \xe2\x80\xa6CkRemoves and returns the first element from the deque if \xe2\x80\xa6DiSearches for <strong>some</strong> item in the parallel iterator that \xe2\x80\xa60CkReturn the position of the maximum element in the iterator.000CkReturn the position of the minimum element in the iterator.000BcME prepass diamond size &amp; shapeDjFetches the cache line containing <code>addr</code> into all levels of \xe2\x80\xa60BoFetches into L2 and higher, anticipating write.BnFetches into L2 and higher, anticipating writeCdFetch data using the non-temporal access (NTA) hint.CkFetch data using the non-temporal access (NTA) hint. It \xe2\x80\xa6BlReturns the previous <code>nth</code> month.BnReturns the previous <code>nth</code> weekday.CePrint the <code>Pieces</code> of a Temporal datetime.EbLowers in MIR to <code>Rvalue::UnaryOp</code> with <code>UnOp::PtrMetadata</code>.00CnContains initialization utilities for <code>#[pyclass]</code>.DgSets the <code>quality</code> field to <code>SixelQuality::Auto</code>.DgSets the <code>quality</code> field to <code>SixelQuality::Full</code>.DgSets the <code>quality</code> field to <code>SixelQuality::High</code>.CnCallback to return the supported/allowed ranges. available \xe2\x80\xa6DiSorts a <code>slice</code> using quick sort with the Lomuto partition \xe2\x80\xa6CiReal base framerate of the stream. This is the lowest \xe2\x80\xa6DiFills the given <code>buffer</code> with random bytes that may not be \xe2\x80\xa6DeReturns an exclusive subslice up to the given <code>end</code> index.0CnNo fields below this line are part of the public API. They \xe2\x80\xa6CiReturns the OS error that this error represents (if any).EeReads a <code>ValueChangeCommand</code> from a <code>CommandReader</code>, and if \xe2\x80\xa6CjReads an signed 128-bit integer in little-endian order \xe2\x80\xa6BhReturns the read timeout of this socket.000ClReads an unsigned 128-bit integer in little-endian order \xe2\x80\xa6ClAttempts to wait for a value on this receiver, returning \xe2\x80\xa6CjWait for an incoming value from the channel associated \xe2\x80\xa61CnReduces the given value to a chain of appropriate prefixes \xe2\x80\xa60ClReduces the given value to a chain of appropriate binary \xe2\x80\xa6ChReduces the given value to a chain of appropriate SI \xe2\x80\xa6Bk&lt; refresh rate (or zero for unspecified)DhRegister all <code>Descriptor</code>s supported by the parameterized \xe2\x80\xa6DjRegisters all codecs supported by <code>Decoder</code>. If a supported \xe2\x80\xa6ClRemoves a key from the map, returning the stored key and \xe2\x80\xa60CiTake the ownership of the key and value from the map. \xe2\x80\xa6CeTake the ownership of the key and value from the map.22AnRemove the entry from the map.31CaTake ownership of the key and value from the map.DkReplaces the wrapped value with a new one computed from <code>f</code>, \xe2\x80\xa6ClRemoves and returns the value for a given key, replacing \xe2\x80\xa6BnTriggers the \xe2\x80\x9cquit_requested_event\xe2\x80\x9d event.CnCalling request_quit() will trigger \xe2\x80\x9cquit_requested_event\xe2\x80\xa6DdWaits for channel capacity. Once capacity to send <code>n</code> \xe2\x80\xa6CkResize this image using the specified filter algorithm. \xe2\x80\xa6DeResolve a potential conflict between an <code>Offset</code> and a \xe2\x80\xa6ChReverses the order of bits in the integer. The least \xe2\x80\xa600000000000BhReverses the bit pattern of the integer.00000000000000000000000CjReverses the order of bits in each elemnent. The least \xe2\x80\xa600000000000DeTests whether two Python objects obey a given <code>CompareOp</code>.0ClRotate an image 180 degrees clockwise and put the result \xe2\x80\xa6ClRotate an image 270 degrees clockwise and put the result \xe2\x80\xa6ChRotates a 8/16/24/32 bit surface in increments of 90 \xe2\x80\xa6DgShifts the bits to the right by a specified amount, <code>n</code>, \xe2\x80\xa600000000000DbRotates the double-ended queue <code>n</code> places to the right.111111111111111111111111AfPerforms rotate right.00DiRounds <code>$b</code> low as specified, other lanes use <code>$a</code>.0EoAsserts the <code>state</code> is <code>Err</code> and returns <code>self</code>, otherwise \xe2\x80\xa6CdReturns the <code>SA_SIGINFO</code> handler, if set.CkReturns whether the senders are belong to the same channel.ChReturns whether the receivers are belong to the same \xe2\x80\xa6D`Returns <code>true</code> if senders belong to the same channel.D`Returns <code>true</code> if permits belong to the same channel.11DbReturns <code>true</code> if receivers belong to the same channel.0220BnMSAA sample count. Defaults to <code>1</code>.0DjOnly used for render textures. <code>sample_count &gt; 1</code> allows \xe2\x80\xa610ClAnalogous to pixels, but delimited by AV_SAMPLE_FMT_NONE \xe2\x80\xa6CmCalculates the glyph\xe2\x80\x99s outline scale factor for a given \xe2\x80\xa6CaAudio only. Number of samples to skip after a \xe2\x80\xa6BoNumber of samples to skip after a discontinuityjAudio only00BcSends a message to this Web Worker.CnSends a new value via the channel, notifying all receivers \xe2\x80\xa6CmMax duration for sending the request, but not the request \xe2\x80\xa6ClSend a value into the channel, returning an error if all \xe2\x80\xa6CmWaits for a message to be sent into the channel, but only \xe2\x80\xa6CeSends data on the socket to the specified SocketAddr.CmGet the number of senders that currently exist, including \xe2\x80\xa6BoGet the number of senders that currently exist.CcReturns the number of senders that currently exist.BmBits 00-31 of 96 bit processor serial number.BmBits 64-96 of 96 bit processor serial number.BcSerialize an <code>i8</code> value.0BbSerialize a <code>u8</code> value.0BcSet the last access time of a file.DhSet the border state of a window - <code>true</code> adds border and \xe2\x80\xa6ClThis effect simulates a simple attenuation of volume due \xe2\x80\xa6AlSets the amount of feedback.ClSets how much the room reverberates. A higher value will \xe2\x80\xa6ClChanges the flow information associated with this socket \xe2\x80\xa6ClChanges gamepads that are associated with effect. Effect \xe2\x80\xa6DeSets the args into an <code>m128i</code>, first arg is the high lane.0CiSet <code>i8</code> args into an <code>m256i</code> lane.0CkIf a table has no key/value pairs and implicit, it will \xe2\x80\xa6EeSet the <code>interned</code> field of the <code>PyASCIIObject</code> state bitfield.Ch(setInterval) Calls a function repeatedly at a fixed \xe2\x80\xa6CjSet the ISO 8601 week-based number on this broken down \xe2\x80\xa6CeChanges the modification time of the underlying file.BeSet the last modified time of a file.AkSets the angle as negative.0C`Sets the angle as negative (no-op for unsigned).CiEnable or disable socket option <code>SO_PASSCRED</code>.BaSets the position of this cursor.AhSet the window position.BiChanges position of the source of effect.CgSets the location of the listener in the spatial scene.BnSets the position that audio is produced from.ChThis effect emulates a simple 3D audio effect. angle \xe2\x80\xa6E`Sets the position of the <code>Table</code> within the <code>DocumentMut</code>.C`Sets the angle as positive (no-op for unsigned).AkSets the angle as positive.0BcSet whitespace after before elementBlEnable or disable <code>TCP_QUICKACK</code>.CnModifies the readonly flag for this set of permissions. If \xe2\x80\xa6CmSets the read-only flag, returning the previous read-only \xe2\x80\xa6Do<strong>Sets</strong> the attribute: the minimum number of bits for the red \xe2\x80\xa6CiChanges the scope ID associated with this socket address.BaSet whitespace after last element0CjSets the drawing area for rendering on the current target.AmSets the oscillation pattern.EoShuffle the <code>f32</code> lanes from <code>a</code> and <code>b</code> together using an \xe2\x80\xa60DdReturns the <code>Sign</code> of <code>self</code>, except for zero.0DcReturns the <code>Sign</code>, returning <code>None</code> for zeroBiTruncates an integer vector to a bitmask.00BbExtracts an element from a vector.00AoWrites to a vector of pointers.00BfShuffles two vectors by const indices.00CiConstructs a new SIMD vector by copying elements from \xe2\x80\xa600000CgReturns the width and height of the given text when \xe2\x80\xa6BkReturns the size of an expression in bytes.0CaGets a pointer to the first element of the array.CnViews a slice of ASCII characters as a UTF-8 <code>str</code>.EhReturns a left subslice of <code>slice</code> with the given maximum <code>len</code>\xe2\x80\xa60Bcslice offsets in the frame in bytesDiReturns a right subslice of <code>slice</code> with the given maximum \xe2\x80\xa60CmSpawns a new scoped thread using the settings set through \xe2\x80\xa6DiInserts the elements from the given <code>LinkedList</code> after the \xe2\x80\xa6CmSplits the list into two before the current element. This \xe2\x80\xa6DkLow lane <code>sqrt(b)</code>, upper lane is unchanged from <code>a</code>.0DkReturns the beginning of the day, corresponding to <code>00:00:00</code>\xe2\x80\xa6CgReturns the beginning of the day that this datetime \xe2\x80\xa6ClPlayable chunks of audio that are loaded into memory all \xe2\x80\xa6Dj<strong>Gets</strong> the attribute: the minimum number of bits in the \xe2\x80\xa6CiSets the stereo width of the reverb effect (0.0 being \xe2\x80\xa6CjThe stereo width of the reverb effect (0.0 being fully \xe2\x80\xa6CaStores the low lane value to the reference given.0DfConditionally write contiguous elements to <code>slice</code>. The \xe2\x80\xa6EbReturns a path that, when joined onto <code>base</code>, yields <code>self</code>.BoReturns a string slice with the prefix removed.BoReturns a string slice with the suffix removed.C`(strokeStyle) Sets the color or style for lines.DaGets the number of strong (<code>Arc</code>) pointers to this \xe2\x80\xa6DjGets the number of strong (<code>Arc</code>) pointers pointing to this \xe2\x80\xa6DhGets the number of strong (<code>Rc</code>) pointers to this allocation.DiGets the number of strong (<code>Rc</code>) pointers pointing to this \xe2\x80\xa6CbReturns the number of <code>Sender</code> handles.0CkReturns the number of <code>UnboundedSender</code> handles.01154CjLanewise <code>a - b</code> with lanes as <code>i8</code>.000ChReturns the subfactorial, or the number of derangements.0CiReturns the fractional part of this duration in whole \xe2\x80\xa6DaReturns the fractional part of this <code>Duration</code>, in \xe2\x80\xa61BbThe surface area of the 3d extent.0EbAsserts the <code>state</code> and <code>value</code> equals the corresponding \xe2\x80\xa6EhAsserts both the <code>state</code> and <code>value</code> matches the corresponding \xe2\x80\xa6CnReturns a new vector with lanes selected from the lanes of \xe2\x80\xa60CjCreates a new mask from the elements of <code>mask</code>.00CnConvert the next timestamp from input to output timestamps \xe2\x80\xa6CkAllocate and return an uninitialized vector with length \xe2\x80\xa6CdScale all the coefficients of a by the scalar value.BgReturns the ASCII symbol of the prefix.000BkCreates a new synchronous, bounded channel.00AlPerforms a getdents syscall.EcReturns the duration from <code>time1</code> until <code>time2</code> where the \xe2\x80\xa6ClFills the implementing byte slice with random bytes from \xe2\x80\xa6CbRecognize the input slice with escaped characters.Cmthread count is used to decide how many independent tasks \xe2\x80\xa6Dd<code>std</code> Declare a new thread local storage key of type [\xe2\x80\xa60CbDeclare a new thread local storage key of type \xe2\x80\xa6D`&lt; The timestamp of the sensor reading in microseconds, if \xe2\x80\xa60C`Equivalent to <code>datetime.timezone.utc</code>FiReturns the ASCII representation as a <code>&amp;&#39;static str</code>, or <code>&quot;&quot;</code> \xe2\x80\xa6DcConverts this address to an <code>IpAddr::V4</code> if it is an \xe2\x80\xa60DfConvert the error to <code>LINUX_EXIT</code> with guaranteed valid \xe2\x80\xa6CjModifies this filter so that it becomes a high-pass filterCgMakes a copy of the value in its lower case equivalent.CdReturn the MIME type for this image format or \xe2\x80\x9c\xe2\x80\xa6CeCopies the slice into an owned <code>OsString</code>.CmDecompose a (possibly wide) pointer into its data pointer \xe2\x80\xa6CdA convenience routine for converting a time zone \xe2\x80\xa6CmA convenience routine for converting this annotation into \xe2\x80\xa6CbConverts this offset into a <code>TimeZone</code>.C`Extracts a timestamp from this broken down time.CjConverts the given civil datetime to a timestamp using \xe2\x80\xa6DhConverts a civil datetime to a <code>Timestamp</code> in this time zone.EaReturns a (3) tuple if the 3 fields from <code>h</code> to <code>s</code> are \xe2\x80\xa6CaReturns a reference to both bounds as a tuple \xe2\x80\xa6EaReturns a (3) tuple if the 3 fields from <code>y</code> to <code>d</code> are \xe2\x80\xa6EaReturns a (6) tuple if the 6 fields from <code>y</code> to <code>s</code> are \xe2\x80\xa6CgMakes a copy of the value in its upper case equivalent.AnReturns the RAM size in bytes.BoTotal memory (in bytes) for the current cgroup.CfEnables or disables tracing functionality used for \xe2\x80\xa600000000000000000ChAttempts to cast the content type of a <code>Arc</code>.0ChAttempts to cast the content type of a <code>Box</code>.0DfTry to convert a <code>&amp;mut A</code> into <code>&amp;mut B</code>.0CnTry to convert a <code>&amp;A</code> into <code>&amp;B</code>.0ChAttempts to cast the content type of a <code>Vec</code>.0CjAn iterator method that applies a fallible function to \xe2\x80\xa6000000000000000000000DdExecutes a fallible <code>OP</code> on each item produced by the \xe2\x80\xa60BoRead proxy settings from environment variables.DfCreate a new PRNG seeded from a potentially fallible <code>Rng</code>.CjAttempts to get a single byte from stdin without blocking.BhReturn the next random <code>u32</code>.BhReturn the next random <code>u64</code>.CnTries to append to the end the fitting characters from the \xe2\x80\xa6ClTries to append to the end the characters from the given \xe2\x80\xa6CoTries to convert this <code>char8</code> to <code>char7</code>.D`Tries to convert this <code>char16</code> to <code>char7</code>.D`Tries to convert this <code>char16</code> to <code>char8</code>.BiUnstable placeholder for type ascription.00000000000000CkReturns a mutable reference to the unfilled part of the \xe2\x80\xa6CcCalled when deserializing a variant with no values.AoGets the font\xe2\x80\x99s units per em.ClComputes the absolute value of self without any wrapping \xe2\x80\xa600000CkReturns the absolute value of this signed duration as a \xe2\x80\xa6AgReturns the right valueDeConvert an <code>Output</code> type to be used as <code>Stream</code>EoAsserts the <code>value</code> is <code>Err</code> and returns <code>self</code>, otherwise \xe2\x80\xa6BaReturns the current variant name.Dh<code>variant</code> is called to identify which variant to deserialize.GjConverts <code>Vec&lt;T&gt;</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements <code>From&lt;T&gt;</code>.0DfReturns <code>index</code> back if it\xe2\x80\x99s within the range already \xe2\x80\xa6CkGets the running Python interpreter version as a struct \xe2\x80\xa6CnThe input contains a string and ownership of the string is \xe2\x80\xa6CjThe intrinsic will return the alignment stored in that \xe2\x80\xa600ChWaits on this condition variable for a notification, \xe2\x80\xa6CeAdd this to an index to get to the next sample in \xe2\x80\xa6BaGets the underlying window flags.BjWindow title. Defaults to an empty string.00CnPreferred window width (ignored on WASM/Android). Defaults \xe2\x80\xa600CaSets the value of the \xe2\x80\x9cenviron\xe2\x80\x9d refresh kind.ClEnables or disables gapless playback. This is enabled by \xe2\x80\xa6ClCreate a new pair using the offsets given for the needle \xe2\x80\xa6CnSets the maximum length of iterators desired to process in \xe2\x80\xa60CnSets the minimum length of iterators desired to process in \xe2\x80\xa60ChCreates a new formatter based on this one with given \xe2\x80\xa6BeProvide the number of padding frames.ClSets the release time - how quickly the limiter recovers \xe2\x80\xa6DfSets the value of the \xe2\x80\x9cstorage\xe2\x80\x9d refresh kind to <code>true</code>.BdEncode a specific pnm subtype image.DdSets the value of the \xe2\x80\x9ckind\xe2\x80\x9d refresh kind to <code>false</code>.ClReturns the Surface\xe2\x80\x99s pixel buffer if the Surface doesn\xe2\x80\xa6CdSets the value of the \xe2\x80\x9croot\xe2\x80\x9d refresh kind to \xe2\x80\xa6DdSets the value of the \xe2\x80\x9cswap\xe2\x80\x9d refresh kind to <code>false</code>.CdSets the value of the \xe2\x80\x9cuser\xe2\x80\x9d refresh kind to \xe2\x80\xa6BgSpawns a Web Worker and returns its ID.CkGroup name of the codec implementation. This is a short \xe2\x80\xa6ClWrapping absolute value, see <code>i64::wrapping_abs</code>.CkWrapping absolute value, see <code>i8::wrapping_abs</code>.CmWrapping absolute value, see <code>i128::wrapping_abs</code>.ClWrapping absolute value, see <code>i32::wrapping_abs</code>.ClWrapping absolute value, see <code>i16::wrapping_abs</code>.CnWrapping absolute value, see <code>isize::wrapping_abs</code>.CkWraping integer addition. Computes <code>self + rhs</code>.00000000000CjReturns (a + b) mod 2N, where N is the width of T in bits.CgCalculates the offset from a pointer using wrapping \xe2\x80\xa600010000CfAdd the given span to this time and wrap around on \xe2\x80\xa6CgAdd the given number of days to this weekday, using \xe2\x80\xa632222CjReturns (a * b) mod 2N, where N is the width of T in bits.00DfWrapping (modular) negation. Computes <code>-self</code>, wrapping \xe2\x80\xa600000AbWrapping negation.00000CnWraping integer subtraction. Computes <code>self - rhs</code>.00000000000CjReturns (a - b) mod 2N, where N is the width of T in bits.777707777DiThis routine is identical to <code>Time::wrapping_add</code> with the \xe2\x80\xa6CnSubtract the given number of days from this weekday, using \xe2\x80\xa629999ClAttempts to write an entire buffer starting from a given \xe2\x80\xa60CiWrites an 32-bit floating point type in little-endian \xe2\x80\xa6CiWrites an 64-bit floating point type in little-endian \xe2\x80\xa6ClWrites a signed 16-bit integer in little-endian order to \xe2\x80\xa6ClWrites a signed 32-bit integer in little-endian order to \xe2\x80\xa6CmWrites an signed 64-bit integer in little-endian order to \xe2\x80\xa6ClWrites an unsigned 16-bit integer in little-endian order \xe2\x80\xa6ClWrites an unsigned 32-bit integer in little-endian order \xe2\x80\xa6ClWrites an unsigned 64-bit integer in little-endian order \xe2\x80\xa6DnFill all bytes of <code>target</code> with zeroes (see <code>Zeroable</code>).An&lt; Wayland xdg toplevel role0A`Both lanes zero.0oAll lanes zero.0AkA zeroed <code>m256d</code>0AkA zeroed <code>m256i</code>0CnReturns the main zodiac symbol, associated to the start of \xe2\x80\xa6CjMarker used by the server to advertise partial request \xe2\x80\xa6CnContains the credentials to authenticate a user agent with \xe2\x80\xa6Cl&lt; FCC Title 47 Code of Federal Regulations 73.682 (a)(20)Ch&lt; order of coefficients is actually GBR, also IEC \xe2\x80\xa6Cl&lt; \xe2\x80\x9cLogarithmic transfer characteristic (100:1 range)\xe2\x80\x9dA`&lt; discard allClThis structure describes optional metadata relevant to a \xe2\x80\xa6AgPossible downmix types.CaA filterchain is a list of filter specifications.ChA linked-list of the inputs/outputs of the filter chain.Ck@example ffhash.c This example is a simple command line \xe2\x80\xa6Al@addtogroup lavf_decoding @{A`&lt; not startedCiA single allowed range of values, or a single allowed \xe2\x80\xa6Bj@} @} @defgroup lavu_picture Image relatedmPixel format.D`&lt; number of pixel formats, DO NOT USE THIS if you want to \xe2\x80\xa6Al&lt; Round toward -infinity.Ag&lt; Round toward zero.Bi\xf0\x9f\xa7\xaa Access to accelerometer sensor data.0BgAn entity already exists, often a file.0000CfDefines the start of channel IDs when using Ambisonic.0CiThis enum represent one control message of variable type.CnMarker trait for \xe2\x80\x9cplain old data\xe2\x80\x9d types that are valid \xe2\x80\xa6Ca\xf0\x9f\x94\x84 <code>core</code> A by-value array iterator.0DfAn owned iterator type over <code>Array</code>\xe2\x80\x99s <code>Value</code>sDhA top-level sequence of <code>Table</code>s, each under their own headerBbType representing array of tables.AoInfo about cache Associativity.C`A trait for dealing with asynchronous iterators.00AgWrites bytes to a sink.BoCode to set the background color to bright red.CbCode to set the foreground color to bright yellow.D`<code>alloc</code> An entry of an ordered map based on a B-Tree.0BhPixels are either black (0) or white (1)BdA blinking block cursor shape (\xe2\x96\xa0).ClValue of button has changed. Value can be in range [0.0, \xe2\x80\xa60BhSome button on gamepad has been pressed.0CgSpecifies directives for caching mechanisms in both \xe2\x80\xa6BjThe number of channels of this pixel type.DfCode to set the foreground color to bright <code>fg</code> and the \xe2\x80\xa6ClIndicates where in a full body message a partial message \xe2\x80\xa6DkReturns a slice with the code to move the cursor down by <code>n</code> \xe2\x80\xa6DkReturns a slice with the code to move the cursor left by <code>n</code> \xe2\x80\xa6CkReturns a slice with the code to move the cursor to the \xe2\x80\xa6CnCode to move the cursor right by 1-digit <code>n</code> lines.CnCode to move the cursor right by 2-digit <code>n</code> lines.CnCode to move the cursor right by 3-digit <code>n</code> lines.CnCode to move the cursor right by 4-digit <code>n</code> lines.BlIterates over cache information (LEAF=0x02).BgWhat type of cache are we dealing with?DbFuture returned by <code>AsyncFnMut::async_call_mut</code> and \xe2\x80\xa600000000000000000CiThe type that allows you to build Window-based renderers.BnEmits a <code>CastKind::Transmute</code> cast.00BlWrapper around <code>AVChannelCustom</code>.0CnCombines channels in input into a single mono source, then \xe2\x80\xa6CiMiscellaneous metadata associated with a character to \xe2\x80\xa6C`\xf0\x9f\xa7\xaa \xe2\x9a\xa0\xef\xb8\x8f Read access to the system clipboard.0BlClipboard utility functions. Access with \xe2\x80\xa6DeA generalization of <code>Clone</code> to dynamically-sized types \xe2\x80\xa600Dk<code>CodebookEntry</code> provides the functions required for an entry \xe2\x80\xa6Cg\xf0\x9f\xa5\xa1 Encodes and decodes a length prefixed value (TLV).0DgA <code>CodecRegistry</code> allows the registration of codecs, and \xe2\x80\xa6CmDerive macro that makes a smart pointer usable with trait \xe2\x80\xa600ClTrait that indicates that this is a pointer or a wrapper \xe2\x80\xa600CoReads values that were written to a <code>CommandWriter</code>.CoWrites values that can be sent to a <code>CommandReader</code>.BgResult of <code>Compare::compare</code>CkOpenGL compatibility profile - deprecated functions are \xe2\x80\xa6AnBuilder of <code>Config</code>DgA marker for types which can be used as types of <code>const</code> \xe2\x80\xa600BoCheck if a token is in a set of possible tokensCcProvides color conversions for whole image buffers.CiThe flavor that executes all tasks on the current thread.CmSpecifies the file extension used for shared libraries on \xe2\x80\xa6CiSpecifies the file extension, if any, used for shared \xe2\x80\xa6B`Duplicate FD with CLOSE_ON_EXEC.D`\xf0\x9f\x9a\xa9+ An error composite of <code>NotEnoughElements</code> + \xe2\x80\xa6Dc64-bit <em>raw</em> data, restricted to <code>Copy</code> variants.0E`Common trait for enumerating <code>Copy</code>-constrained <em>data values</em>.0BiOptions for <code>DateTime::round</code>.CaAn error was encountered while decoding an image.ChThe default trait implementation of <code>Custom</code>.DaThe default <code>Hasher</code> used by <code>RandomState</code>.0ChUnix-specific extensions to <code>fs::DirBuilder</code>.CmSpecifies how distance between effect source and listener \xe2\x80\xa6CjError that indicates a failure to convert a PyAny to a \xe2\x80\xa6Cj\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated buffer for storing DSTs \xe2\x80\xa60Cj\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated FIFO queue of DSTs with \xe2\x80\xa60Cj\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated LIFO stack of DSTs with \xe2\x80\xa60Ci\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated DST value with pointer \xe2\x80\xa60BeReturns the total number of variants.CmSpecifies the file extension, if any, used for executable \xe2\x80\xa60CmExponent bias for representing both positive and negative \xe2\x80\xa600000BnNumber of bits used to represent the exponent.00000B`Creates new <code>Effect</code>.AeConfigures an effect.CaAn empty source that executes a callback functionBbArgument encoding/decoding failed.0CaAn error was encountered while encoding an image.AoEnumerate the rows of an image.DgAn iterator that yields the literal escape code of a <code>char</code>.CdThe return type of <code>str::escape_default</code>.BoAn iterator over the escaped version of a byte.12102101CkReturns an iterator that yields the hexadecimal Unicode \xe2\x80\xa6CdThe return type of <code>str::escape_unicode</code>.010100DdUnix-specific extensions to <code>process::ExitStatus</code> and \xe2\x80\xa60Ci\xf0\x9f\x8c\x90 Extension trait providing additional methods for \xe2\x80\xa60CnExtendedState subleaf structure for things that need to be \xe2\x80\xa6Al$ 1/\\sqrt[\\small 3]{3} = \xe2\x80\xa600000Cd$ 1/\\sqrt{2} = \\sqrt{1/2} $ (A010503, wikipedia) \xe2\x80\xa600000i1/sqrt(2)00000000000Dd$ 1/\\sqrt{3} = \\sqrt{1/3} $ (A020760, <code>\xe2\x89\x88 0.57735026\xe2\x80\xa6</code>00000i1/sqrt(3)00000000000CkRepeated an operation for which error that could not be \xe2\x80\xa6AkConfigures a filter effect.CmA builder for constructing non-default forward or reverse \xe2\x80\xa6CjThe index of the first non-matching element along with \xe2\x80\xa6Cm<code>core</code> A classification of floating point numbers.0Dk<code>FormatOptions</code> is a common set of options that all demuxers \xe2\x80\xa60ChAn iterator over the values yielded by an underlying \xe2\x80\xa6000ClErrors that can occur when loading or streaming an audio \xe2\x80\xa6BfThe value of a <code>modulator</code>.DgA possible error value when converting a <code>String</code> from a \xe2\x80\xa6000DeAn iterator that always continues to yield <code>None</code> when \xe2\x80\xa6000Dc<code>core</code> A future which never resolves, representing a \xe2\x80\xa60AjA positioned scaled glyph.Ca\xf0\x9d\x90\x93 An EGC backed by a <code>StringNonul</code>.0DdHeader produced by a <code>pgm</code> file (\xe2\x80\x9cPortable Gray Map\xe2\x80\x9d)Df<code>GroupingMapBy</code> is an intermediate struct for efficient \xe2\x80\xa60BaA builder for default Fx hashers.0BoMakes a request conditional based on the E-Tag.Adencapsulation headermMultipath TCPEcIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.BbThe type of the resulting iterator00CiSecond argument of the tuple (i32) corresponds to the \xe2\x80\xa6CdInvalid object handle (already released or never \xe2\x80\xa60DfA possible error value when converting <code>Method</code> from bytes.CkAn error returned when the chunk given does not contain \xe2\x80\xa6BgThe worker script provided was invalid.0Ch\xf0\x9f\x94\x84 \xe2\x9a\xa0\xef\xb8\x8f Iterator over references of command line \xe2\x80\xa60Dh\xf0\x9f\x94\x84 <code>core</code> An iterator that yields the current count and \xe2\x80\xa60Ef\xf0\x9f\x94\x84 <code>core</code> An iterator that uses <code>f</code> to both filter and map \xe2\x80\xa60BiBy-value <code>RangeFrom</code> iterator.00Eh\xf0\x9f\x94\x84 <code>core</code> An iterator that rejects elements while <code>predicate</code>\xe2\x80\xa60Dg\xf0\x9f\x94\x84 <code>core</code> An iterator that only accepts elements while \xe2\x80\xa60Eg\xf0\x9f\x94\x84 <code>core</code> An iterator that always continues to yield <code>None</code> \xe2\x80\xa60DhUsed by [<code>Itertools::get</code>] to know which iterator to turn \xe2\x80\xa6CdUnix-specific extensions to <code>JoinHandle</code>.0mText Metrics.0BkRepresents extra state about the key event.ClThe Last-Modified header contains the date and time when \xe2\x80\xa6Cb<code>Linux</code> file creation and status flags.CeTrue if the system\xe2\x80\x99s architecture is little-endian.Bh508 Loop Detected [RFC5842, Section 7.2]BjConfiguration settings for audio limiting.AnLinear distance clamped model.DeRepresents the <code>timespec</code> structure from libc. Time in \xe2\x80\xa60CjAllow collecting the span of a parsed token within a slice0CkSource of audio samples from decoding a file that never \xe2\x80\xa6CmThe maximum number of two-byte units required to encode a \xe2\x80\xa600CkAccommodates moderate deviation; balances precision and \xe2\x80\xa600000BgThe rounded up byte size for this type.00AkSource of gamepad mappings.CcPossible return values for <code>add_mapping</code>ClAn object representing a single input port. How the port \xe2\x80\xa6DfA <code>MonitorStream</code> is a passive stream that observes all \xe2\x80\xa6Ed\xf0\x9f\x9a\xa9 <code>std</code> An error returned from [<code>MpscSender::send</code>] or [\xe2\x80\xa60BeWhether the number includes the sign.0CkThe input contained a newtype struct that was not expected.Ck\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f A signed integer that is known not to equal \xe2\x80\xa600000Cn\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f An unsigned integer that is known not to equal \xe2\x80\xa6000001100CfA filesystem object is, unexpectedly, not a directory.0000C`Turns off the <code>CrossedOut</code> attribute.BkPermission to display system notifications.0DkA view into an occupied entry in a <code>BTreeMap</code>. It is part of \xe2\x80\xa6DkA view into an occupied entry in a <code>BTreeSet</code>. It is part of \xe2\x80\xa6DjA view into an occupied entry in a <code>HashMap</code>. It is part of \xe2\x80\xa6DjA view into an occupied entry in a <code>HashSet</code>. It is part of \xe2\x80\xa6DiA view into an occupied entry in a <code>HashTable</code>. It is part \xe2\x80\xa6CoA view into a single occupied location in a <code>Table</code>.DcA view into a single occupied location in a <code>HeaderMap</code>.436565DfThe error returned by <code>try_insert</code> when the key already \xe2\x80\xa60000Dk<code>OneSidedRange</code> is implemented for built-in range types that \xe2\x80\xa600000Eh\xf0\x9f\x94\x84 <code>core</code> An iterator over a mutable reference to the <code>Some</code> \xe2\x80\xa60CnDefines the bounds for a glyph\xe2\x80\x99s outline in subpixels. A \xe2\x80\xa6CkFuture returned from <code>Notify::notified_owned()</code>.AiForked but didn\xe2\x80\x99t exec.BbThe length of the hashed password.Fb<code>std</code> Passed to <code>std::panic::set_hook</code> in <code>std</code>, where panics \xe2\x80\xa60BmA struct providing information about a panic.Dk<code>core</code> A struct containing information about the location of \xe2\x80\xa60AoParallel extensions for slices.0Df\xf0\x9d\x90\x93\xf0\x9d\x9f\x99\xf0\x9f\x9a\xa9 <code>core</code> An error which can be returned when \xe2\x80\xa60CgAn error which can be returned when parsing an integer.00Bn<code>std</code> A single component of a path.0C`A common path extension for the format is known.Dl<code>core</code> A marker type which does not implement <code>Unpin</code>.0CjA marker type which does not implement <code>Unpin</code>.00AnThe playback state of a sound.CmAn error that can occur when retrieving information about \xe2\x80\xa6CmThe Y coordinate increases down relative to the window or \xe2\x80\xa6BnOffers methods for casting between primitives.0ClOffers methods to construct a primitive from an array or \xe2\x80\xa60Cb<code>std</code> The output of a finished process.0CbEnum describing the different status of a process.Ch<code>std</code> A handle to a child process\xe2\x80\x99s stderr.0Dd<code>std</code> A handle to a child process\xe2\x80\x99s standard output \xe2\x80\xa60nProxy protocolDkA wrapper around <code>[u8]</code> where the storage is either owned by \xe2\x80\xa6ChImplementation of functionality for <code>PyBool</code>.0CiAn error type returned by <code>Bound::try_borrow</code>.CiRepresents Python\xe2\x80\x99s <code>BufferError</code> exception.ClReturns a pointer to a <code>PyDateTime_CAPI</code> instanceCmTrait for accessing the components of a struct containing \xe2\x80\xa6DmCheck if <code>op</code> is a <code>PyDateTimeAPI.DetaType</code> or subtype.ChImplementation of functionality for <code>PyDict</code>.0CiRepresents Python\xe2\x80\x99s <code>ImportError</code> exception.ChImplementation of functionality for <code>PyList</code>.0CiRepresents Python\xe2\x80\x99s <code>LookupError</code> exception.CiRepresents Python\xe2\x80\x99s <code>MemoryError</code> exception.En<code>T: PySizedLayout&lt;U&gt;</code> represents that <code>T</code> is not a instance of \xe2\x80\xa6CiRepresents Python\xe2\x80\x99s <code>SyntaxError</code> exception.CiRepresents Python\xe2\x80\x99s <code>SystemError</code> exception.ChImplementation of functionality for <code>PyType</code>.0CiRepresents Python\xe2\x80\x99s <code>UserWarning</code> exception.CjFilesystem quota or some other kind of quota was exceeded.0000fU+00220000Bk205 Reset Content [RFC9110, Section 15.3.6]CdCreated with the method <code>rmatch_indices</code>.0000CnAn iterator over non-overlapping matches of a pattern in a \xe2\x80\xa6B`Builder for <code>Record</code>.BbA re-entrant mutual exclusion lockCnA marker trait representing types where a shared reference \xe2\x80\xa600Dn\xf0\x9f\x93\x90 A <code>Stride</code>d <code>Region</code> defining structured traversal.0CkThe demuxer or decoder needs to be reset before continuing.0Ef\xf0\x9f\x94\x84 <code>core</code> An iterator over a mutable reference to the <code>Ok</code> \xe2\x80\xa60AkConfigures a reverb effect.CkRGB+A color with 64-bit float components (linear space, \xe2\x80\xa60CeRotate by 90 degrees clockwise and flip horizontally.BeThe flavor of a <code>Runtime</code>.AjAdd to an atomic variable.ClSet an atomic variable to a new value if it is currently \xe2\x80\xa6BdGet the value of an atomic variable.BbSet an atomic variable to a value.CjUse this function to initialize a particular audio driver.CnUse this function to shut down audio if you initialized it \xe2\x80\xa6CmThe calculated values in this structure are calculated by \xe2\x80\xa6Cn\\brief The blend mode used in SDL_RenderCopy() and drawing \xe2\x80\xa6Cd&lt; A new set of drops is beginning (NULL filename)Cm\\brief An event used to request a file open by the system \xe2\x80\xa6BjThe types of events that can be delivered.A`&lt; Do not flipCnPerform a fast fill of a set of rectangles with a specific \xe2\x80\xa6Bm\\brief An opaque handle to an OpenGL context.AfGet the active cursor.CiCheck for the existence of certain event types in the \xe2\x80\xa6CdThis last event is only for bounding internal arraysChThis function is a legacy means of locking the audio \xe2\x80\xa6oLock the mutex.BhPerform low-level surface blitting only.Cn\\brief A handle to a CAMetalLayer-backed NSView (macOS) or \xe2\x80\xa6ChThis function is a legacy means of opening the audio \xe2\x80\xa6kPixel type.BbPoll for currently pending events.B`Add an event to the event queue.Be\\brief The \xe2\x80\x9cquit requested\xe2\x80\x9d eventCkUse this function to prepare a read-write memory buffer \xe2\x80\xa6BbReset a hint to the default value.BgAllocate memory in a SIMD-friendly way.AoThe scaling mode for a texture.AfSet the active cursor.Ab\\brief SDL_syswm.hAh&lt; Keyboard text inputBgCreate a piece of thread-local storage.CjEvents ::SDL_USEREVENT through ::SDL_LASTEVENT are for \xe2\x80\xa6BfCalculate the union of two rectangles.CfPerform a fast blit from the source surface to the \xe2\x80\xa6Bo\\brief A user-defined event type (event.user.*)CkInitialize the video subsystem, optionally specifying a \xe2\x80\xa6CfShut down the video subsystem, if initialized with \xe2\x80\xa6BoWait indefinitely for the next available event.ClUse this function to write 16 bits in native format to a \xe2\x80\xa6ClUse this function to write 32 bits in native format to a \xe2\x80\xa6ClUse this function to write 64 bits in native format to a \xe2\x80\xa6210AcClose a HID device.BgWrite an Output report to a HID device.CeThe prototype for the application\xe2\x80\x99s main() functionCcRate of SHA3-224 (equivalent to blocksize in SHA2).CcRate of SHA3-256 (equivalent to blocksize in SHA2).CcRate of SHA3-384 (equivalent to blocksize in SHA2).CcRate of SHA3-512 (equivalent to blocksize in SHA2).CmPlain text, the text field must be set by the decoder and \xe2\x80\xa6Ah&lt; not part of API/ABI00BhA buffer of samples treated as a source.Dj<code>SeekErrorKind</code> is a list of generic reasons why a seek may \xe2\x80\xa6BgA command that sets several attributes.AfA signed integer type.B`Parallel <code>PartialEq</code>.00000ChA unidirectional pipe to read and write bytes in memory.BlSoC vendor specific information (LEAF=0x17).ChPlatform-specific extensions to <code>SocketAddr</code>.EnA wrapper for <code>Span</code> that implements the <code>Hash</code>, <code>Eq</code> and \xe2\x80\xa6DfA guard that grants exclusive access to a <code>SpinLock</code> value.0CiAccess to storage that requires explicit user permission.0AmA <code>&amp;str</code> tokenBfType returned by String and str types.0000CkThe input contained a struct variant that was not expected.BhThe style with the content to be styled.DnAlias for a <code>Canvas</code> that was created out of a <code>Surface</code>AdDithering algorithmsAgResampling Filter TypesDh\xf0\x9f\x95\x98 <code>std</code> A measurement of a monotonically nondecreasing \xe2\x80\xa60AiGet line status register.AfTop rear-left channel.BmText input utility functions. Access with \xe2\x80\xa6CgList of all the possible formats of input data when \xe2\x80\xa60Dg<code>std</code> Thread factory, which can be used to configure the \xe2\x80\xa60BmThread builder used for customization via \xe2\x80\xa6Ck\xf0\x9f\x95\x98 A time split from years to nanoseconds, normalized \xe2\x80\xa60Di<code>std</code> Objects which can be converted or resolved to one or \xe2\x80\xa60ChConverts or resolves without blocking to one or more \xe2\x80\xa6CmA trait for objects which can be converted or resolved to \xe2\x80\xa6CfTracks the elapsed duration since the start of the \xe2\x80\xa6AiPrevious-track media key.DcMarks that <code>Src</code> is transmutable into <code>Self</code>.00DgSee <code>TreeErrorFrame::Kind</code>, <code>ParserError::append</code>Dh\xe2\x9a\x96\xef\xb8\x8f <code>std</code> A type alias for the result of a nonblocking \xe2\x80\xa60ChA type alias for the result of a nonblocking locking \xe2\x80\xa600AcControls a tweener.CnRepresents an association between a resource and its inner \xe2\x80\xa60AoCode to unset underline effect.CaFuture for the <code>unconstrained</code> method.0CnAn error returned when an operation could not be completed \xe2\x80\xa60000Bk\xf0\x9d\x90\x93 Common trait for unicode scalar types.0Dj<code>UniformBlocks</code> is a parallel iterator that consumes itself \xe2\x80\xa6DaLinux-specific functionality for <code>AF_UNIX</code> sockets \xe2\x80\xa6CnAn unwind action that continues execution in a given basic \xe2\x80\xa600Db<code>VariantAccess</code> is a visitor that is created by the \xe2\x80\xa6ClVertical alignment options for text when a max_height is \xe2\x80\xa6DjTrait that is implemented by <code>MidiOutput</code> on platforms that \xe2\x80\xa6AfA web API Mouse Event.0AcWeb API permissions0BjThe type that allows you to build windows.AoHolds a <code>SDL_Window</code>AnFalse (ordered, non-signaling)00AjFalse (ordered, signaling)00eEqual00AbLess-than-or-equal00iLess-than00iNot-equal00BgSee <code>_MM_GET_EXCEPTION_MASK</code>00DiThe <code>MM_PERM_ENUM</code> type used to specify shuffle operations \xe2\x80\xa600CgThe joystick structure used to identify an SDL joystickBfTransaction abort due to a debug trap.00AnTransaction retry is possible.00DhReturns the result of the <code>cpuid</code> instruction for a given \xe2\x80\xa600EgAdds unsigned 32-bit integers <code>a</code> and <code>b</code> with unsigned 8-bit \xe2\x80\xa600EgAdds unsigned 64-bit integers <code>a</code> and <code>b</code> with unsigned 8-bit \xe2\x80\xa600AiFlags for frame cropping.BaFlags to apply to frame mappings.Cn@defgroup lavfi_buffersrc Buffer source API @ingroup lavfi \xe2\x80\xa6Cc@file API-specific header for AV_HWDEVICE_TYPE_DRM.ClConvert 8-bit mask a to a 32-bit integer value and store \xe2\x80\xa600CmConvert 32-bit integer value a to an 8-bit mask and store \xe2\x80\xa600CjCompute the bitwise NOT of 16-bit masks a and then AND \xe2\x80\xa600CjCompute the bitwise NOT of 32-bit masks a and then AND \xe2\x80\xa600CjCompute the bitwise NOT of 64-bit masks a and then AND \xe2\x80\xa600CiCompute the bitwise XNOR of 16-bit masks a and b, and \xe2\x80\xa600CiCompute the bitwise XNOR of 32-bit masks a and b, and \xe2\x80\xa600CiCompute the bitwise XNOR of 64-bit masks a and b, and \xe2\x80\xa600CjFinds the absolute value of each packed half-precision \xe2\x80\xa600ChAdds packed double-precision (64-bit) floating-point \xe2\x80\xa600CnAdd packed half-precision (16-bit) floating-point elements \xe2\x80\xa600ChAdds packed single-precision (32-bit) floating-point \xe2\x80\xa600CiComputes the bitwise AND of a packed double-precision \xe2\x80\xa600CgComputes the bitwise AND of packed single-precision \xe2\x80\xa600ClCompares packed double-precision (64-bit) floating-point \xe2\x80\xa600ClCompares packed single-precision (32-bit) floating-point \xe2\x80\xa600ChComputes the division of each of the 4 packed 64-bit \xe2\x80\xa600ChDivide packed half-precision (16-bit) floating-point \xe2\x80\xa600ChComputes the division of each of the 8 packed 32-bit \xe2\x80\xa600444CiCompare packed half-precision (16-bit) floating-point \xe2\x80\xa600444555000444CnMultiplies packed double-precision (64-bit) floating-point \xe2\x80\xa600CjMultiply packed half-precision (16-bit) floating-point \xe2\x80\xa600CnMultiplies packed single-precision (32-bit) floating-point \xe2\x80\xa600CgCompute the approximate reciprocal of packed 16-bit \xe2\x80\xa600CaComputes the approximate reciprocal of packed \xe2\x80\xa600ChSets packed double-precision (64-bit) floating-point \xe2\x80\xa600CnSet packed half-precision (16-bit) floating-point elements \xe2\x80\xa600ChSets packed single-precision (32-bit) floating-point \xe2\x80\xa600CmSubtracts packed double-precision (64-bit) floating-point \xe2\x80\xa600CjSubtract packed half-precision (16-bit) floating-point \xe2\x80\xa600CmSubtracts packed single-precision (32-bit) floating-point \xe2\x80\xa600CgComputes the bitwise XOR of packed double-precision \xe2\x80\xa600CgComputes the bitwise XOR of packed single-precision \xe2\x80\xa600ClFinds the absolute value of each packed double-precision \xe2\x80\xa600CjFinds the absolute value of each packed half-precision \xe2\x80\xa600ClFinds the absolute value of each packed single-precision \xe2\x80\xa600CgAdd packed double-precision (64-bit) floating-point \xe2\x80\xa600CnAdd packed half-precision (16-bit) floating-point elements \xe2\x80\xa600CgAdd packed single-precision (32-bit) floating-point \xe2\x80\xa600CfCompute the bitwise AND of packed double-precision \xe2\x80\xa600CfCompute the bitwise AND of packed single-precision \xe2\x80\xa600CjDivide packed double-precision (64-bit) floating-point \xe2\x80\xa600ChDivide packed half-precision (16-bit) floating-point \xe2\x80\xa600CjDivide packed single-precision (32-bit) floating-point \xe2\x80\xa600CkCompare packed double-precision (64-bit) floating-point \xe2\x80\xa600CiCompare packed half-precision (16-bit) floating-point \xe2\x80\xa600CkCompare packed single-precision (32-bit) floating-point \xe2\x80\xa600222111000ClMultiply packed double-precision (64-bit) floating-point \xe2\x80\xa600CjMultiply packed half-precision (16-bit) floating-point \xe2\x80\xa600ClMultiply packed single-precision (32-bit) floating-point \xe2\x80\xa600CgCompute the approximate reciprocal of packed 16-bit \xe2\x80\xa600CgSet packed double-precision (64-bit) floating-point \xe2\x80\xa600CnSet packed half-precision (16-bit) floating-point elements \xe2\x80\xa600DeSets packed 32-bit integers in <code>dst</code> with the supplied \xe2\x80\xa600ClSubtract packed double-precision (64-bit) floating-point \xe2\x80\xa600CjSubtract packed half-precision (16-bit) floating-point \xe2\x80\xa600ClSubtract packed single-precision (32-bit) floating-point \xe2\x80\xa600CfCompute the bitwise XOR of packed double-precision \xe2\x80\xa600CfCompute the bitwise XOR of packed single-precision \xe2\x80\xa600ClComputes the absolute value of each of the packed 16-bit \xe2\x80\xa600ClComputes the absolute value of each of the packed 32-bit \xe2\x80\xa600CfCompute the absolute value of packed signed 64-bit \xe2\x80\xa600DaAdds packed 16-bit integers in <code>a</code> and <code>b</code>.00DaAdds packed 32-bit integers in <code>a</code> and <code>b</code>.00DaAdds packed 64-bit integers in <code>a</code> and <code>b</code>.00EaAdds packed 8-bit integers in <code>a</code> and <code>b</code> using saturation.00EbAdds packed unsigned 8-bit integers in <code>a</code> and <code>b</code> using \xe2\x80\xa600CjAlternatively add and subtract packed double-precision \xe2\x80\xa600CjAlternatively add and subtract packed single-precision \xe2\x80\xa600CnComputes the bitwise AND of 128 bits (representing integer \xe2\x80\xa600DlComputes the bitwise NOT of <code>a</code> and then AND with <code>b</code>.00CgBitwise AND-NOT of packed single-precision (32-bit) \xe2\x80\xa600DnAverages packed unsigned 16-bit integers in <code>a</code> and <code>b</code>.00CiBlend packed double-precision (64-bit) floating-point \xe2\x80\xa600CiBlend packed single-precision (32-bit) floating-point \xe2\x80\xa600DoCast vector of type <code>__m128d</code> to type <code>__m128h</code>. This \xe2\x80\xa600DkCasts a 128-bit floating-point vector of <code>[2 x double]</code> into \xe2\x80\xa600DoCast vector of type <code>__m128h</code> to type <code>__m128d</code>. This \xe2\x80\xa600EhCast vector of type <code>__m128h</code> to type <code>__m128</code>. This intrinsic \xe2\x80\xa600DjCasts a 128-bit floating-point vector of <code>[4 x float]</code> into \xe2\x80\xa600EhCast vector of type <code>__m128</code> to type <code>__m128h</code>. This intrinsic \xe2\x80\xa600EcCompares corresponding elements in <code>a</code> and <code>b</code> for not-equal.00DkCompares each of the four floats in <code>a</code> to the corresponding \xe2\x80\xa600DkReturns a new vector with the low element of <code>a</code> replaced by \xe2\x80\xa600DkCompares the lowest <code>f32</code> of both inputs for inequality. The \xe2\x80\xa600DlCompares corresponding elements in <code>a</code> and <code>b</code> for \xe2\x80\xa600333222CkCompares the lowest <code>f32</code> of both inputs for \xe2\x80\xa600111444333000111444333000111444333DjCompares the lowest <code>f32</code> of both inputs for not-less-than. \xe2\x80\xa600EbCompares corresponding elements in <code>a</code> and <code>b</code> to see if \xe2\x80\xa600666555DiChecks if the lowest <code>f32</code> of both inputs are ordered. The \xe2\x80\xa600DmCompares the lower element of <code>a</code> and <code>b</code> for equality.00ClCompare the lower half-precision (16-bit) floating-point \xe2\x80\xa600DhCompares two 32-bit floats from the low-order bits of <code>a</code> \xe2\x80\xa600DgCompares the lower element of <code>a</code> and <code>b</code> for \xe2\x80\xa600222111EaCompares the lower element of <code>a</code> and <code>b</code> for greater-than.00333222111333222DnCompares the lower element of <code>a</code> and <code>b</code> for less-than.00444333DcStarting with the initial value in <code>crc</code>, return the \xe2\x80\xa600000000BfAlias for <code>_mm_cvtsi32_ss</code>.00BfAlias for <code>_mm_cvtss_si32</code>.00CmConvert the signed 32-bit integer b to a double-precision \xe2\x80\xa600CkConvert the signed 32-bit integer b to a half-precision \xe2\x80\xa600CmConvert the signed 32-bit integer b to a single-precision \xe2\x80\xa600CmConvert the signed 64-bit integer b to a double-precision \xe2\x80\xa600CkConvert the signed 64-bit integer b to a half-precision \xe2\x80\xa600CmConvert the signed 64-bit integer b to a single-precision \xe2\x80\xa600CnConverts packed BF16 (16-bit) floating-point elements in a \xe2\x80\xa600CmConverts a single BF16 (16-bit) floating-point element in \xe2\x80\xa600CnReturns the lower double-precision (64-bit) floating-point \xe2\x80\xa600CnConvert the lower double-precision (64-bit) floating-point \xe2\x80\xa600000000000ClConvert the lower half-precision (16-bit) floating-point \xe2\x80\xa600000000000CgExtracts the lowest 32 bit float from the input vector.00CnConvert the lower single-precision (32-bit) floating-point \xe2\x80\xa600000000000BnConvert the unsigned 32-bit integer b to a \xe2\x80\xa600CmConvert the unsigned 32-bit integer b to a half-precision \xe2\x80\xa600111BnConvert the unsigned 64-bit integer b to a \xe2\x80\xa600CmConvert the unsigned 64-bit integer b to a half-precision \xe2\x80\xa600111CiConvert packed half-precision (16-bit) floating-point \xe2\x80\xa600CkConvert packed single-precision (32-bit) floating-point \xe2\x80\xa600CmCompute dot-product of BF16 (16-bit) floating-point pairs \xe2\x80\xa600CgMultiply packed complex numbers in a by the complex \xe2\x80\xa600CjMultiply the lower complex numbers in a by the complex \xe2\x80\xa600CmMultiply packed complex numbers in a and b, accumulate to \xe2\x80\xa600CmMultiply the lower complex numbers in a and b, accumulate \xe2\x80\xa600CnMultiplies packed double-precision (64-bit) floating-point \xe2\x80\xa600CjMultiply packed half-precision (16-bit) floating-point \xe2\x80\xa600CnMultiplies packed single-precision (32-bit) floating-point \xe2\x80\xa600CbMultiplies the lower double-precision (64-bit) \xe2\x80\xa600CmMultiply the lower half-precision (16-bit) floating-point \xe2\x80\xa600CbMultiplies the lower single-precision (32-bit) \xe2\x80\xa600555444333222111000ChConvert the exponent of each packed double-precision \xe2\x80\xa600CfConvert the exponent of each packed half-precision \xe2\x80\xa600ChConvert the exponent of each packed single-precision \xe2\x80\xa600CfConvert the exponent of the lower double-precision \xe2\x80\xa600CmConvert the exponent of the lower half-precision (16-bit) \xe2\x80\xa600CfConvert the exponent of the lower single-precision \xe2\x80\xa600EhSelect a single value in <code>b</code> to store at some position in <code>a</code>, \xe2\x80\xa600CkLoad internal wrapping key (IWKey). The 32-bit unsigned \xe2\x80\xa600EeCompares packed 16-bit integers in <code>a</code> and <code>b</code>, and returns \xe2\x80\xa600EeCompares packed 32-bit integers in <code>a</code> and <code>b</code>, and returns \xe2\x80\xa600CiCompare packed signed 64-bit integers in a and b, and \xe2\x80\xa600EfCompares packed unsigned 16-bit integers in <code>a</code> and <code>b</code>, and \xe2\x80\xa600EfCompares packed unsigned 32-bit integers in <code>a</code> and <code>b</code>, and \xe2\x80\xa600CkCompare packed unsigned 64-bit integers in a and b, and \xe2\x80\xa600555444333222111000EoCombine higher half of <code>a</code> and <code>b</code>. The higher half of <code>b</code> \xe2\x80\xa600EmCombine lower half of <code>a</code> and <code>b</code>. The lower half of <code>b</code> \xe2\x80\xa600CkSet each packed 8-bit integer in dst to all ones or all \xe2\x80\xa600CnMultiplies the low 32-bit integers from each packed 64-bit \xe2\x80\xa600CiMultiplies the low unsigned 32-bit integers from each \xe2\x80\xa600CkExtract the reduced argument of packed double-precision \xe2\x80\xa600CiExtract the reduced argument of packed half-precision \xe2\x80\xa600CkExtract the reduced argument of packed single-precision \xe2\x80\xa600CnExtract the reduced argument of the lower double-precision \xe2\x80\xa600ClExtract the reduced argument of the lower half-precision \xe2\x80\xa600CnExtract the reduced argument of the lower single-precision \xe2\x80\xa600CmRotate the bits in each packed 32-bit integer in a to the \xe2\x80\xa600CmRotate the bits in each packed 64-bit integer in a to the \xe2\x80\xa600111000CmScale the packed double-precision (64-bit) floating-point \xe2\x80\xa600CkScale the packed half-precision (16-bit) floating-point \xe2\x80\xa600CmScale the packed single-precision (32-bit) floating-point \xe2\x80\xa600222000000ChBroadcasts 8-bit integer <code>a</code> to all elements.00CeSets packed 16-bit integers with the supplied values.00CeSets packed 32-bit integers with the supplied values.00CjSets packed 8-bit integers with the supplied values in \xe2\x80\xa600DjNegates packed 8-bit integers in <code>a</code> when the corresponding \xe2\x80\xa600EdShifts packed 16-bit integers in <code>a</code> left by <code>count</code> while \xe2\x80\xa600EdShifts packed 32-bit integers in <code>a</code> left by <code>count</code> while \xe2\x80\xa600EdShifts packed 64-bit integers in <code>a</code> left by <code>count</code> while \xe2\x80\xa600EeShifts packed 16-bit integers in <code>a</code> right by <code>count</code> while \xe2\x80\xa600EeShifts packed 32-bit integers in <code>a</code> right by <code>count</code> while \xe2\x80\xa600CjShift packed 64-bit integers in a right by count while \xe2\x80\xa600222111EeShifts packed 64-bit integers in <code>a</code> right by <code>count</code> while \xe2\x80\xa600CmStores the lower double-precision (64-bit) floating-point \xe2\x80\xa600DhStores the lowest 32 bit float of <code>a</code> repeated four times \xe2\x80\xa600111BdAlias for <code>_mm_store1_ps</code>00CcStores the upper 64 bits of a 128-bit vector of \xe2\x80\xa600CcStores the lower 64 bits of a 128-bit vector of \xe2\x80\xa600CnStores 2 double-precision (64-bit) floating-point elements \xe2\x80\xa600DeStores four 32-bit floats into <em>aligned</em> memory in reverse \xe2\x80\xa600CjStores 128-bits (composed of 2 packed double-precision \xe2\x80\xa600CgStore 128-bits (composed of 8 packed half-precision \xe2\x80\xa600CgStores four 32-bit floats into memory. There are no \xe2\x80\xa600DjStores a 128-bit floating point vector of <code>[2 x double]</code> to \xe2\x80\xa600EgStores <code>a</code> into the memory at <code>mem_addr</code> using a non-temporal \xe2\x80\xa600CkNon-temporal store of <code>a.0</code> into <code>p</code>.00000DiSubtracts packed 16-bit integers in <code>b</code> from packed 16-bit \xe2\x80\xa600DhSubtract packed 32-bit integers in <code>b</code> from packed 32-bit \xe2\x80\xa600DhSubtract packed 64-bit integers in <code>b</code> from packed 64-bit \xe2\x80\xa600DfSubtract packed 8-bit integers in <code>b</code> from packed 8-bit \xe2\x80\xa600DiSubtract packed unsigned 8-bit integers in <code>b</code> from packed \xe2\x80\xa600CnCompute the bitwise XOR of packed 32-bit integers in a and \xe2\x80\xa600CnCompute the bitwise XOR of packed 64-bit integers in a and \xe2\x80\xa600CnComputes the bitwise XOR of 128 bits (representing integer \xe2\x80\xa600AkStore 16-bit mask to memory00BeStore 32-bit mask from a into memory.00BeStore 64-bit mask from a into memory.00ChRelease the tile configuration to return to the init \xe2\x80\xa600CgLanewise absolute value with lanes as <code>i16</code>.0BiAbsolute value of <code>i16</code> lanes.0CgLanewise absolute value with lanes as <code>i32</code>.0BiAbsolute value of <code>i32</code> lanes.0BeAcquires a permit from the semaphore.BlAdd two <code>u32</code> with a carry value.0BlAdd two <code>u64</code> with a carry value.0CoAppend <code>self.extension</code> with <code>extension</code>.CkLanewise <code>a + b</code> with lanes as <code>i16</code>.000CkLanewise <code>a + b</code> with lanes as <code>i32</code>.000CkLanewise <code>a + b</code> with lanes as <code>i64</code>.000AdCreates a modulator.CmAdds a fake modulator outputting the given value. Returns \xe2\x80\xa6AjCreates a mixer sub-track.BaAdds a child track to this track.0AmAdds a submodule to a module.0CdAdvance width of the glyph in subpixels. Used in \xe2\x80\xa6CoCreates the window in high-DPI mode if supported (&gt;= SDL \xe2\x80\xa6ClTemporarily releases the GIL, thus allowing other Python \xe2\x80\xa6CjRecognizes zero or more ASCII numerical and alphabetic \xe2\x80\xa6CiRecognizes one or more ASCII numerical and alphabetic \xe2\x80\xa6CcWindow should always above others (&gt;= SDL 2.0.5)Co<code>core</code> Returns the name of a type as a string slice.0CaConstructs a path inside your application\xe2\x80\x99s \xe2\x80\xa600CiDefines which rendering API to use on Apple platforms \xe2\x80\xa600F`\xf0\x9f\x97\x83\xef\xb8\x8f <code>core</code> Creates an array <code>[T; N]</code>, where each <code>T</code> is \xe2\x80\xa60CkReturns a mutable reference to the element at the given \xe2\x80\xa60ChReturns an immutable reference to the element at the \xe2\x80\xa60DeSets the element at the specified <code>index</code> to the given \xe2\x80\xa60CjReturns the values as an array, if all are of the same \xe2\x80\xa6CjReturns a slice containing the entire array in compile \xe2\x80\xa6CoGet a <code>BufStream</code> to read the packet data buffer \xe2\x80\xa6CiConverts to seconds as <code>f32</code> for calculations.CgReturns the number of milliseconds, with a possible \xe2\x80\xa6ChReturns the number of milliseconds contained by this \xe2\x80\xa61BaReturns the time in milliseconds.212CfReturn a mutable reference to an 16bit Grayscale imageDfYields a mutable reference to the underlying <code>OsStr</code> slice.C`Return a mutable reference to an 32bit RGB imageCaReturn a mutable reference to an 16bit RGBA imageCiReturns a pair of slices which contain, in order, the \xe2\x80\xa6CkViews the underlying data as a pair of subslices of the \xe2\x80\xa6CkReturns this timestamp as a number of nanoseconds since \xe2\x80\xa6CmCasts <code>self</code> to either a table or an inline table.BoReturns the values as a tuple, in compile-time.EbReturns a (6) tuple if the 6 fields from <code>h</code> to <code>ns</code> are \xe2\x80\xa6EbReturns a (9) tuple if the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6ClReturns a unique references to the value. In contrast to \xe2\x80\xa6ClReturns a shared references to the value. In contrast to \xe2\x80\xa6C`Asserts the equality of a series of expressions.0BbWays of associativity (Bits 31-22)ClReturns the last access time of the file, in nanoseconds \xe2\x80\xa6Al&lt; Duration of the attack.000ChAudio preload in microseconds. Note, not all formats \xe2\x80\xa6AkAdd a value to a timestamp.BfCreate a new reference to an AVBuffer.AnInitialize an AVCAST5 context.Cl@file @brief Public header for libavutil CAST5 algorithm \xe2\x80\xa6CaCompare two timestamps each in its own time base.BdGet number of entries in dictionary.AdParse an expression.CkInitialize an AVFifoBuffer. @param size of FIFO @return \xe2\x80\xa6CiRead and discard the specified amount of data from an \xe2\x80\xa6ClFree an AVFifoBuffer and reset pointer to NULL. @param f \xe2\x80\xa6AbEnlarge an AVFifo.CcReset the AVFifoBuffer to the state right after \xe2\x80\xa6ClReturn the amount of space in bytes in the AVFifoBuffer, \xe2\x80\xa6AgWrite data into a FIFO.CiUnmap or free the buffer bufptr created by av_file_map().CgOpen a file using a UTF-8 filename. The API of this \xe2\x80\xa6BdCopy the frame data from src to dst.CkFree the frame and any dynamically allocated objects in it,ClAllocate and read the payload of a packet and initialize \xe2\x80\xa6CjAllocate a hash context for the algorithm specified by \xe2\x80\xa6CjFinalize a hash context and compute the actual hash value.DdFree hash context and set hash context pointer to <code>NULL</code>.BkGet the names of available hash algorithms.CmAllocate an AVHMAC context. @param type The hash function \xe2\x80\xa6ClFinish hashing and output the HMAC digest. @param ctx    \xe2\x80\xa6BcCopy image in src_data to dst_data.CmCheck if a name is in a list. @returns 0 if not found, or \xe2\x80\xa6CjMatch instances of a name in a comma-separated list of \xe2\x80\xa6AbUpdate hash value.CnAllocate the payload of a packet and initialize its fields \xe2\x80\xa6CjSetup a new reference to the data described by a given \xe2\x80\xa6CkParse timestr and return in *time a corresponding number ofDjConvert an AVRational to a IEEE 32-bit <code>float</code> expressed in \xe2\x80\xa6ClReturn the next frame of a stream. This function returns \xe2\x80\xa6C`Pause a network-based stream (e.g. RTSP stream).BcGenerate an SDP for an RTP session.ClSeek to the keyframe at timestamp. \xe2\x80\x98timestamp\xe2\x80\x99 in \xe2\x80\x98\xe2\x80\xa68CkLocale-independent case-insensitive compare. @note This \xe2\x80\xa6CiEncode extradata length to a buffer. Used by xiph codecs.AkAllocate an AVXTEA context.CnEncrypt or decrypt a buffer using a previously initialized \xe2\x80\xa6CfClose a given AVCodecContext and free all the data \xe2\x80\xa6CkInitialize the AVCodecContext to use the given AVCodec. \xe2\x80\xa6CkFree a filter context. This will also remove the filter \xe2\x80\xa6AjLink two filters together.AkOpen directory for reading.AiGet next directory entry.CnTransforms an <code>ErrMode::Cut</code> (unrecoverable) to \xe2\x80\xa6AjVersion Information: ModelDjBinary searches this <code>VecDeque</code> for a given element. If the \xe2\x80\xa6EhSame as <code>bind</code> but produces a <code>Borrowed&lt;T&gt;</code> instead of a \xe2\x80\xa6DmGets the bits in <code>self</code> from the <code>[start..=end]</code> range.0EbSets the bits in <code>self</code> to 1 from the <code>[start..=end]</code> range.0BkPerforms the <code>&amp;=</code> operation.DjModifies this set to contain the intersection of <code>self</code> and \xe2\x80\xa6111DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.00000000000000000000BgDisables all flags disabled in the set.00000003CjBitwise <code>(!a) &amp;amp; b</code> for <code>u32</code>CfBitwise <code>(!a) &amp; b</code> for <code>u32</code>CjBitwise <code>(!a) &amp;amp; b</code> for <code>u64</code>CfBitwise <code>(!a) &amp; b</code> for <code>u64</code>CnSpecify the maximum number of bits that should be consumed \xe2\x80\xa6BgPerforms the <code>^=</code> operation.ClModifies this set to contain the symmetric difference of \xe2\x80\xa6111DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa600000000000000000000AiToggles the set of flags.00000003DdBlockingly locks this <code>Mutex</code>. When the lock has been \xe2\x80\xa6DbBlockingly locks this <code>RwLock</code> with shared read access.CjBlocking receive to call outside of asynchronous contexts.000CgBlocking send to call outside of asynchronous contexts.Dm<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute \xe2\x80\xa6CjBuild a forward finder using the given needle from the \xe2\x80\xa6CjBuild a reverse finder using the given needle from the \xe2\x80\xa6BcBus (Reference) Frequency (in MHz).BiSwap the bytes of the given 32-bit value.0BiSwap the bytes of the given 64-bit value.0CjRead-only statistic of bytes written for this AVIOContext.DoHelper to determine if the <code>&amp;input</code> already holds unconsumed \xe2\x80\xa6BoCaptures the first token from a list of inputs.0CiReturns an iterator over the capture names in this regex.CnReturns an iterator that yields successive non-overlapping \xe2\x80\xa6DjThis is like <code>Regex::captures</code>, but writes the byte offsets \xe2\x80\xa6CgAs <code>try_cast_slice_rc</code>, but unwraps for you.0DdReturns the bit pattern of <code>self</code> reinterpreted as an \xe2\x80\xa600000CiRetrieves the limits for the current cgroup (if any), \xe2\x80\xa6CfGets two mutable references to two different channels.BhChange the coordinates of this subimage.CjReturns the number of color channels that make up this \xe2\x80\xa6CcGet the number of channels for colors of this type.ClLets the Python interpreter check and handle any pending \xe2\x80\xa6CmThis function checks that all currently set strict limits \xe2\x80\xa6BkAdds a <code>TimeDelta</code> to an instantCg(clearTimeout) (clearInterval) Cancels a timeout or \xe2\x80\xa6EbFilter using <code>ClipToRange</code>: D = (S &gt;= Tmin) &amp; (S &lt;= Tmax) \xe2\x80\xa6AoGet current OS clipboard value.AnGet current OS clipboard valueAjSave value to OS clipboard0DgReturns the number of bytes required to encode <code>code</code> as \xe2\x80\xa6CkCollects all items from the iterator into an array of a \xe2\x80\xa6000CjCollects all items from the iterator into a tuple of a \xe2\x80\xa6000DcLexicographically compare <code>[left, left + bytes)</code> and \xe2\x80\xa600De<code>core</code> Causes compilation to fail with the given error \xe2\x80\xa60CkCauses compilation to fail with the given error message \xe2\x80\xa600000000000000000CmValue\xe2\x80\x99s component range. For string this represents the \xe2\x80\xa60EhConverts a <code>JsInstant</code> into a <code>TimeDelta</code> relative to the time \xe2\x80\xa6FeReturns <code>true</code> if the array contains <code>element</code>, from the <code>start</code> \xe2\x80\xa6DiWhether <code>self</code> contains all the same set bits that are set \xe2\x80\xa600CmChecks whether this rectangle completely contains another \xe2\x80\xa60De<strong>Gets</strong> the applied OpenGL context configuration flags.DeCopies all elements from <code>src</code> into a fixed-size array \xe2\x80\xa6DeWrites a SIMD vector to the first <code>N</code> elements of a slice.CmCopies the buffer elements to the specified slice. If the \xe2\x80\xa6CiReturns the value of the ftCreationTime field of this \xe2\x80\xa6CgReturns the last status change time of the file, in \xe2\x80\xa6AoPosition of the packet in file.ChStarting with this weekday, this returns an unending \xe2\x80\xa60BlForced Data codec_id. Demuxing: Set by user.CnReturns the ordinal number of the last day in the month in \xe2\x80\xa6CnReturns the total number of days in the the month in which \xe2\x80\xa60DiGets the default track. If the <code>FormatReader</code> has a method \xe2\x80\xa60B`Produce a type\xe2\x80\x99s default value0BlProvide a list of type aliases and other \xe2\x80\xa600000000000000BmDelete GPU buffer, leaving handle unmodified.0000BnDelete GPU program, leaving handle unmodified.000BkReturns the number of deleted (TOMB) slots.DhReturns the elapsed time since this instant as a <code>TimeDelta</code>.CmOperation to use when stencil test passes, but depth test \xe2\x80\xa60ChDisable an event type. Returns if the event type was \xe2\x80\xa6B`Disables receiving mouse events.CfGet the index of the display associated with a window.DbSets the <code>dither</code> field to <code>Dither::Burkes</code>.DbSets the <code>dither</code> field to <code>Dither::JaJuNi</code>.DbSets the <code>dither</code> field to <code>Dither::Stucki</code>.BnDivides this time delta by another time delta.0CcReturns the quotient, rounding ties away from zero.0CkReturns the quotient, rounding ties to the nearest even \xe2\x80\xa60Do<strong>Gets</strong> the attribute: whether the output is single or double \xe2\x80\xa6DdLike <code>downcast</code> but takes ownership of <code>self</code>.0DhMakes a new <code>OwnedRwLockReadGuard</code> for a component of the \xe2\x80\xa6DjMakes a new <code>RwLockReadGuard</code> for a component of the locked \xe2\x80\xa6CfGet the size of the window\xe2\x80\x99s underlying drawable \xe2\x80\xa6CiExecutes the destructor (if any) of the pointed-to value.0000DkConsume the last <code>n</code> elements from the iterator eagerly, and \xe2\x80\xa6000CjReturn an iterator adaptor that produces elements that \xe2\x80\xa6000CfComputes the Levenshtein edit distance between two \xe2\x80\xa6BeReturns the total number of variants.Cj(setInterval) Executes JavaScript code repeatedly at a \xe2\x80\xa60CcReturns the raw Exif chunk, if it is present. A \xe2\x80\xa6CiCalculates $ e^x - 1 $ using the Taylor series expansion.nExport secret.000DhCreates a layout describing the record for <code>self</code> followed byBepointers to the data planes/channels.DiExtracts <code>Self</code> from the bound smart pointer <code>obj</code>.DaExtracts <code>Self</code> from the source <code>PyObject</code>.011CfFactor out a homogeneous type from an either of pairs.AjReturns the prime factors.0CfSets the tween used to fade in the sound from silence.0BaAn optional fade-in from silence.CiSets the tween used to fade in the instance from silence.01DkOffsets the pointer\xe2\x80\x99s address by adding <code>val</code> (in units of \xe2\x80\xa60DgOffsets the pointer\xe2\x80\x99s address by subtracting <code>val</code> (in \xe2\x80\xa60CkReturns the name of the source file as a nul-terminated \xe2\x80\xa6DiReturns a reference to the underlying <code>OsStr</code> of this entry\xe2\x80\xa6CjReturn an iterator adaptor that filters and transforms \xe2\x80\xa6000ClApplies the given predicate to the items in the parallel \xe2\x80\xa60CnFind the value of the first element satisfying a predicate \xe2\x80\xa6000CdFind the position and value of the first element \xe2\x80\xa6000CmReturns the ISO 8601 week date corresponding to the first \xe2\x80\xa6CfReturns the first date of the year that this zoned \xe2\x80\xa6CmReturns the first date of the year that this date resides \xe2\x80\xa6CiReturns the first date of the year that this datetime \xe2\x80\xa63DkApplies <code>map_op</code> to each item of this iterator to get nested \xe2\x80\xa60AhFlip an image verticallyDgRound the low lane of <code>b</code> toward negative infinity, high \xe2\x80\xa60BhFlush the I/O context after each packet.CnReturn the greater of two arguments or, if either argument \xe2\x80\xa6CmReturn the lesser of two arguments or, if either argument \xe2\x80\xa6EdExecutes <code>OP</code> on a value returned by <code>init</code> with each item \xe2\x80\xa60E`Executes <code>OP</code> on the given <code>init</code> value with each item \xe2\x80\xa60CmProduces layout describing a record that could be used to \xe2\x80\xa6CeForcibly captures a full backtrace, regardless of \xe2\x80\xa6DgSets the <code>format</code> field to <code>PixelFormat::BGR555</code>.DgSets the <code>format</code> field to <code>PixelFormat::BGR565</code>.DgSets the <code>format</code> field to <code>PixelFormat::BGR888</code>.DgSets the <code>format</code> field to <code>PixelFormat::RGB555</code>.DgSets the <code>format</code> field to <code>PixelFormat::RGB565</code>.DgSets the <code>format</code> field to <code>PixelFormat::RGB888</code>.ClThis field determines the state of the formats union. It \xe2\x80\xa6EgConstructs a primitive <code>T</code> from an array of <code>U</code> in big-endian \xe2\x80\xa60DlConstructs a primitive <code>T</code> from an array of <code>U</code> in \xe2\x80\xa6000CnCreates an integer value from its representation as a byte \xe2\x80\xa600CkConstruct a pixel from the 4 channels a, b, c and d. If \xe2\x80\xa6CgConvert a <code>DocumentMut</code> into <code>T</code>.DdConverts a <code>Duration</code> into a full <code>TimeSplit</code>.DfConverts a <code>Duration</code> into a <code>TimeSplitYearDay</code>.DfConverts a <code>Duration</code> into a <code>TimeSplitYearSec</code>.DfConverts a <code>Duration</code> into a <code>TimeSplitHourSec</code>.DjConverts a <code>Duration</code> into a time split representation from \xe2\x80\xa6DdConverts a <code>Duration</code>\xe2\x80\x99s sub-second component into a \xe2\x80\xa6CmConverts a <code>Duration</code> to a <code>TimeDelta</code>.543162DgCreates a new timestamp from a <code>Duration</code> with the given \xe2\x80\xa6:::CiCreates a native endian integer value from its memory \xe2\x80\xa600CeConstructs a box from a <code>NonNull</code> pointer.0CkCreates an instance of the collection from the parallel \xe2\x80\xa60EjCreates a <code>Vec&lt;T, A&gt;</code> directly from a <code>NonNull</code> pointer, a \xe2\x80\xa6EcConstructs a <code>SockAddr</code> with the family <code>AF_UNIX</code> and the \xe2\x80\xa6DaConstructs the type from a compatible <code>Residual</code> type.00BiCreate from <code>Rgba&lt;f64&gt;</code>.0000000CiGets the virtual key from a scancode. Returns None if \xe2\x80\xa6CkCreates a timestamp from milliseconds, ensuring a valid \xe2\x80\xa6CgReturns a time delta corresponding to the number of \xe2\x80\xa6DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6ClReturns a signed duration corresponding to the number of \xe2\x80\xa6DfReturns a new <code>JsInstant</code> from a timestamp in milliseconds.321DdCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.CaCreates a new dictionary from the sequence given.EfConstructs a primitive <code>T</code> from a slice of <code>U</code> in big-endian \xe2\x80\xa60DkConstructs a primitive <code>T</code> from a slice of <code>U</code> in \xe2\x80\xa6000AnReturns a temporary directory.EfDecode a UTF-16 encoded slice <code>v</code> into a <code>String</code>, returning \xe2\x80\xa6CiConverts a mutable slice of bytes to a mutable string \xe2\x80\xa6000CcAnalogue to <code>std::str::from_utf8_mut()</code>.011C`Constructs itself from a tuple, in compile-time.DhReads from indices in <code>slice</code> to construct a SIMD vector. \xe2\x80\xa6BkReturns the number of IDs generated so far.BhReturns the current <code>#</code> flag.BjReturn the current target framerate in Hz.ClReturns the key-value pair corresponding to the supplied \xe2\x80\xa60CcGets a reference to the key and value in the entry.CnReturn references to the key-value pair stored for key, if \xe2\x80\xa6002DeGets non-atomic access to a <code>&amp;mut [AtomicBool]</code> slice.DdGets non-atomic access to a <code>&amp;mut [AtomicPtr]</code> slice.DaGet non-atomic access to a <code>&amp;mut [AtomicI8]</code> sliceDaGet non-atomic access to a <code>&amp;mut [AtomicU8]</code> sliceDbGet non-atomic access to a <code>&amp;mut [AtomicI16]</code> sliceDbGet non-atomic access to a <code>&amp;mut [AtomicU16]</code> sliceDbGet non-atomic access to a <code>&amp;mut [AtomicI32]</code> sliceDbGet non-atomic access to a <code>&amp;mut [AtomicU32]</code> sliceDbGet non-atomic access to a <code>&amp;mut [AtomicI64]</code> sliceDbGet non-atomic access to a <code>&amp;mut [AtomicU64]</code> sliceDdGet non-atomic access to a <code>&amp;mut [AtomicIsize]</code> sliceDdGet non-atomic access to a <code>&amp;mut [AtomicUsize]</code> sliceDkInserts the given <code>value</code> into the set if it is not present, \xe2\x80\xa60EgInserts <code>value</code> into the option if it is <code>None</code>, then returns \xe2\x80\xa6CnInserts a key/value pair if the table does not contain the \xe2\x80\xa6DjGet a mutable reference to a type, inserting <code>value</code> if not \xe2\x80\xa63DjGets a reference to the mutable pixel at location <code>(x, y)</code>. \xe2\x80\xa6DeGets a reference to the mutable pixel at location <code>(x, y)</code>BlDo not use is function: It is unimplemented!AnReturns the current precision.CfReturns the <code>timestamp</code> field of the event.CnReturns a clone of the element at the given 2D coordinates \xe2\x80\xa60CmReturns a pointer to the output at this location, without \xe2\x80\xa60000DkReturns the <code>window_id</code> field of the event if it\xe2\x80\x99s present \xe2\x80\xa6CaChecks if the <em>Caps Lock</em> modifier is set.CkCMPXCHG8B Instruction. The compare-and-exchange 8 bytes \xe2\x80\xa6CiChecks if there is any data left to be <code>read</code>.0000DlReturns <code>true</code> if the angle has the given <code>direction</code>.00AmHas Hardware P-state control?BfIs LAHF/SAHF available in 64-bit mode?ClPCLMULQDQ. A value of 1 indicates the processor supports \xe2\x80\xa6AbSupports PREFETCHIAgIs PREFETCHW available?BjSPEC_CTRL virtualization supported if set.C`SVM supervisor shadow stack restrictions if set.nHas THERMTRIP?AbSupports UIRET_UIFDiMaps the computed FNV hash to the given <code>range</code> using lazy \xe2\x80\xa6000AnHash a password using Argon2i.CeAdd this to an index to get to the next sample in \xe2\x80\xa6CjSets up a function to be called when music playback is \xe2\x80\xa6CjHelper to combine scheme host and port to a single string.CnA reference to the AVHWDeviceContext describing the device \xe2\x80\xa6CkFor filters which will create hardware frames, sets the \xe2\x80\xa6ClFor hwaccel-format frames, this should be a reference to \xe2\x80\xa6CmA reference to the AVHWFramesContext describing the input \xe2\x80\xa6ClFor hwaccel pixel formats, this should be a reference to \xe2\x80\xa6ClVideo with a hwaccel pixel format only. This should be a \xe2\x80\xa6CmBit set of AV_HWACCEL_FLAG_* flags, which affect hardware \xe2\x80\xa6Da<code>core</code> Includes a file as a reference to a byte array.0BoIncludes a file as a reference to a byte array.00000000000000000BaThe initial value of the tweener.CgConsume a number of bytes from <code>&amp;input</code>.BlSets the window to have grabbed input focus.CmInserts a new key-value pair into the map in the gap that \xe2\x80\xa60CjInserts a new element into the set in the gap that the \xe2\x80\xa60DeInserts a new element into the <code>LinkedList</code> before the \xe2\x80\xa6DjInserts an element into the <code>HashTable</code> with the given hash \xe2\x80\xa6BiName to be used for this filter instance.CnReturns the quotient, rounding the result towards negative \xe2\x80\xa600AfReturns the factorial.00CeReturns <code>true</code> if it\xe2\x80\x99s a perfect square.00CbFinds the 0-indexed <code>nth</code> prime number.00AmCalls `NumInt::int_ref_scale.00ClSimilar to int_scale, but operates on references instead \xe2\x80\xa600CaReturns the ceiled integer <code>nth</code> root.00BgReturns the ceiled integer square root.00BnGets whether integer scales are forced for \xe2\x80\xa6BjWhether it interpolates the scaled pixels.EbIf <code>linear == true</code> uses <code>FilterMode::Linear</code>, otherwise \xe2\x80\xa61DmSplits <code>self</code> into an array of <code>T</code> in big-endian order.0E`Splits <code>self</code> into an array of <code>T</code> in little-endian order.0E`Splits <code>self</code> into an array of <code>T</code> in native-endian order.0FeConvert this <code>String&lt;&#39;bump&gt;</code> into a <code>&amp;&#39;bump str</code>. This is \xe2\x80\xa6DmConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or \xe2\x80\xa6DmConverts a channel <code>Layout</code> into a <code>Channels</code> bit mask.CiTurn this into an iterator over the connections being \xe2\x80\xa6E`Consumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer.0BbConvert into <code>OwnedFd</code>.00CdConverts <code>self</code> into a parallel iterator.0EjConverts a <code>Box&lt;Path&gt;</code> into a <code>PathBuf</code> without copying or \xe2\x80\xa6FjTurns <code>Cow&lt;[u8]&gt;</code> into <code>PyBytes</code>, all other <code>T</code>s will be turned \xe2\x80\xa6FhTurns <code>Vec&lt;u8&gt;</code> into <code>PyBytes</code>, all other <code>T</code>s will be turned \xe2\x80\xa6AhPerforms the conversion.00DeConstructs the associated searcher from <code>self</code> and the \xe2\x80\xa60000ClReturns <code>self</code> cast as a <code>PySequence</code>.0000DhRaised when a <code>Deserialize</code> receives a value of the right \xe2\x80\xa6CmReturns whether the pointer is aligned to <code>align</code>.DeRuntime version of <code>MemAligned::is_compatible</code> for raw \xe2\x80\xa6EdReturns <code>true</code> if this unicode scalar has the <code>Alphabetic</code> \xe2\x80\xa60BoChecks if the value is an alphabetic character:EhChecks if all elements are <code>None</code>, returning early if a <code>Some</code> \xe2\x80\xa6DiChecks if the <code>Candidate</code>\xe2\x80\x99s alignment is compatible with \xe2\x80\xa60ChReturns <code>true</code> if the destaque is contiguous.ChReturns <code>true</code> if this is a controller event.ClWhether a method is considered \xe2\x80\x9cidempotent\xe2\x80\x9d, meaning \xe2\x80\xa6B`Is more data <code>Needed</code>0BaTests if the result is IncompleteCmReturns <code>true</code> if the event is a key repeat event.EeReturns <code>true</code> if the address is link-local (<code>169.254.0.0/16</code>).BmChecks if the lower bound is open (excluded).EcIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.DfAlways returns <code>true</code> since integer representations are \xe2\x80\xa6CnReturns <code>true</code> if the angle is between -1 and 1 \xe2\x80\xa61AhIs this a symbolic link?DhReturns true if <code>self</code> is either a table, or an inline table.BfChecks if this receiver is terminated.DfReturns <code>true</code> if the 3 dimensions of the extent are equal.DhReturns <code>true</code> if all dimensions of the extent are equal. \xe2\x80\xa60000BmChecks if the upper bound is open (excluded).EeReturns <code>true</code> if this unicode scalar has the <code>White_Space</code> \xe2\x80\xa60CnChecks if the value is a whitespace character: 0x20 SPACE, \xe2\x80\xa6ChMarks if the character is an ASCII whitespace character.ChConstruct a civil ISO 8601 week date from this zoned \xe2\x80\xa6CiConstruct an ISO 8601 week date from this Gregorian date.CcConstruct an ISO 8601 week date from this datetime.CjReturns the parsed ISO 8601 week-based year, if available.CnIterator over generated IDs with <code>AcqRel</code> ordering.DkLike <code>iter</code>, but produces an iterator which returns borrowed \xe2\x80\xa60CnA mutable iterator visiting all elements which may match a \xe2\x80\xa6CnSort the k smallest elements into a new iterator using the \xe2\x80\xa6000CkX25519 (Diffie-Hellman with Montgomery form of Curve25519).BoReturns whether the keyboard was grabbed by \xe2\x80\xa6DeSends <code>Signal::Kill</code> to the process then waits for its \xe2\x80\xa6AdL3 Cache Monitoring.CfReturns the last date of the month that this zoned \xe2\x80\xa6CmReturns the last date of the month that this date resides \xe2\x80\xa6CiReturns the last date of the month that this datetime \xe2\x80\xa6CiReturns an error representing the last OS error which \xe2\x80\xa6CeReturns the number of leading zeros in the binary \xe2\x80\xa600000000000000000000000000000000000000000000000EfApply the function <code>f</code> on the value in the <code>Left</code> variant if \xe2\x80\xa6ElApply the function <code>f</code> on the value <code>a</code> in <code>Left(a)</code> or \xe2\x80\xa6Db<code>Accumulate</code> a length-prefixed sequence of values (TLV)CmAbsolute scale factor representing the level at which the \xe2\x80\xa6DiReturns a mutable reference to the <strong>perceptual lightness</strong>.00DgReturns a mutable reference to the <strong>gamma-encoded luma</strong>.00101100CkSpecifies which Linux window system (X11 or Wayland) is \xe2\x80\xa600CmGets information about the listener linked to the current \xe2\x80\xa6BkLoad controller input mappings from a file.ClAmount to shift the luma height right to find the chroma \xe2\x80\xa6CkAmount to shift the luma width right to find the chroma \xe2\x80\xa6DdSplits the slice into a slice of arrays of size <code>LEN</code> \xe2\x80\xa6CcComputes luma from R\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 using Rec. 2020 \xe2\x80\xa60DeReturns a mutable reference to the <strong>linear luminance</strong>.00000DjSignals that the task that obtained this <code>RestoreOnPending</code> \xe2\x80\xa6CcConstructs a new pin by mapping the interior value.CgMasks all bits with an index less than or equal to idx.CjMasks all bits with an index greater than or equal to idx.CoLanewise <code>max(a, b)</code> with lanes as <code>i16</code>.000CoLanewise <code>max(a, b)</code> with lanes as <code>i32</code>.000CjThe maximal integer value that can be used for rectangles.CgThe max number of redirects to follow before giving up.0CoLanewise <code>max(a, b)</code> with lanes as <code>u16</code>.000CoLanewise <code>max(a, b)</code> with lanes as <code>u32</code>.000CnReturns an iterator over all occurrences of the needles in \xe2\x80\xa60CkCreate an iterator that merges items from both this and \xe2\x80\xa6000CnReturn an iterator adaptor that merge-joins items from the \xe2\x80\xa6BoReturns the rounded up byte size for this type.00CoLanewise <code>min(a, b)</code> with lanes as <code>i16</code>.000CoLanewise <code>min(a, b)</code> with lanes as <code>i32</code>.000ClThe minimal integer value that can be used for rectangle \xe2\x80\xa6CoLanewise <code>min(a, b)</code> with lanes as <code>u16</code>.000CoLanewise <code>min(a, b)</code> with lanes as <code>u32</code>.000CmReturn the minimum and maximum element of an iterator, as \xe2\x80\xa6000CjReturns minimum and maximum values with respect to the \xe2\x80\xa60DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa61DjRaised when a <code>Deserialize</code> struct type expected to receive \xe2\x80\xa6EfComputes the non-negative modulo of <code>self</code> over |<code>modulus</code>|, \xe2\x80\xa6EhComputes the non-negative modulo of <code>self</code> over <code>modulus</code>, and \xe2\x80\xa6ChReturns an iterator all mouse buttons with a boolean \xe2\x80\xa60CfReturns the last modification time of the file, in \xe2\x80\xa6D`Multiples two <code>i16x8</code> and return the high part of \xe2\x80\xa6D`Multiples two <code>u16x8</code> and return the high part of \xe2\x80\xa6CjMultiplies 32x32 bit to 64 bit and then only keeps the \xe2\x80\xa60EmConvert a <code>&amp;mut A</code> into <code>&amp;mut B</code> if infalliable, or fail to \xe2\x80\xa6EhConvert <code>&amp;A</code> into <code>&amp;B</code> if infalliable, or fail to compile.CaFlips the bits that are set in <code>mask</code>.00CaSets the bits that are set in <code>other</code>.00ChSets the bits from the <code>[start..=end]</code> range.00BeUnsets the bit at <code>index</code>.00CjNote: Value depends upon the compare function used for \xe2\x80\xa6Cc&lt; The number of components each pixel has, (1-4)AfNumber of componentes.DmConstructs a new <code>Rc&lt;T, A&gt;</code> in the given allocator while \xe2\x80\xa6DnConstructs a new <code>Arc&lt;T, A&gt;</code> in the given allocator while \xe2\x80\xa6BaReturns the associated empty set.BmReturns a new <code>TimeSplitHourNano</code>.0CmA precalculated value for the height or width of the line \xe2\x80\xa6AiHPKE Base mode recipient.AhHPKE Psk mode recipient.AiHPKE Auth mode recipient.AlHPKE AuthPsk mode recipient.DfReturns the appropriate variant from the given <code>value</code>, \xe2\x80\xa6ClCreates a non-zero without checking whether the value is \xe2\x80\xa6BcCreates a new <code>NonNull</code>.DgReturns a seeded <code>XorShift128p</code> generator from the given \xe2\x80\xa6CiCreates a new Xoroshiro128++ PRNG with the given seed \xe2\x80\xa6DfReturns a seeded <code>XorShift128</code> generator from the given \xe2\x80\xa6DkReturns a seeded <code>XorShift16</code> generator from the given 8-bit \xe2\x80\xa6DkReturns a seeded <code>XorShift32</code> generator from the given 8-bit \xe2\x80\xa6DkReturns a seeded <code>XorShift64</code> generator from the given 8-bit \xe2\x80\xa6DjReturns a seeded <code>XorShift8</code> generator from the given 8-bit \xe2\x80\xa6EeReturns a <code>NonValueUsize</code> if the given <code>value</code> if it is not \xe2\x80\xa6EeReturns a <code>NonValueIsize</code> if the given <code>value</code> if it is not \xe2\x80\xa6EdReturns a <code>NonValueI128</code> if the given <code>value</code> if it is not \xe2\x80\xa6EcReturns a <code>NonValueI64</code> if the given <code>value</code> if it is not \xe2\x80\xa6EcReturns a <code>NonValueI32</code> if the given <code>value</code> if it is not \xe2\x80\xa6EcReturns a <code>NonValueI16</code> if the given <code>value</code> if it is not \xe2\x80\xa6EhReturns a <code>NonValueI8</code> if the given <code>value</code> if it is not equal \xe2\x80\xa6EdReturns a <code>NonValueU128</code> if the given <code>value</code> if it is not \xe2\x80\xa6EcReturns a <code>NonValueU64</code> if the given <code>value</code> if it is not \xe2\x80\xa6EcReturns a <code>NonValueU32</code> if the given <code>value</code> if it is not \xe2\x80\xa6EcReturns a <code>NonValueU16</code> if the given <code>value</code> if it is not \xe2\x80\xa6EhReturns a <code>NonValueU8</code> if the given <code>value</code> if it is not equal \xe2\x80\xa6BnCreates an iterator over the elements in a \xe2\x80\xa6E`Constructs a new <code>Pin&lt;Ptr&gt;</code> around a reference to some data \xe2\x80\xa6DiCreates an <code>Alignment</code> from a power-of-two <code>usize</code>.CmCreate a new finder specific to SSE2 vectors and routines \xe2\x80\xa600CmCreate a new finder specific to AVX2 vectors and routines \xe2\x80\xa600DfReturns the appropriate variant if the given <code>value</code> is \xe2\x80\xa6ChGenerates some unique <code>ExampleIdSeqUsize</code> ID.CkConstructs a new box with uninitialized contents in the \xe2\x80\xa6DgConstructs a new <code>Rc</code> with uninitialized contents in the \xe2\x80\xa61DhConstructs a new <code>Arc</code> with uninitialized contents in the \xe2\x80\xa6EgAlternate constructor that takes a <code>fold</code> parameter. A <code>true</code> \xe2\x80\xa6DfAlternate constructor that takes a <code>fold</code> argument. See \xe2\x80\xa6DeCreates a <code>SipHasher</code> that is keyed off the provided keys.DeCreates a new Python <code>range</code> object with a specified step.DkConstructs a new <code>Box</code> with uninitialized contents, with the \xe2\x80\xa6DjConstructs a new <code>Rc</code> with uninitialized contents, with the \xe2\x80\xa61DkConstructs a new <code>Arc</code> with uninitialized contents, with the \xe2\x80\xa6CmFind the next boundary after the current cursor position. \xe2\x80\xa6DkThis returns <code>Ok(Some(key))</code> for the next key in the map, or \xe2\x80\xa6D`Retrieve the total number of attached joysticks <em>and</em> \xe2\x80\xa60CdSets the background color to <code>DarkGreen</code>.CiAttempts to open a file in read-only mode with buffering.CmOpens a new audio device given the desired parameters and \xe2\x80\xa6ClOpens a new audio device for playback (given the desired \xe2\x80\xa6ClEnsures a value is in the entry by inserting the default \xe2\x80\xa6ClWhether there\xe2\x80\x99s at least one set bit in common between \xe2\x80\xa600EaConverts the current stack index size <code>IDX</code> to a <code>NEW_IDX</code>.CiNormally, whenever Rayon catches a panic, it tries to \xe2\x80\xa6CfReturns a parallel iterator over mutable subslices \xe2\x80\xa60CmCollect all iterator elements into one of two partitions. \xe2\x80\xa6000CmPartitions and maps the items of a parallel iterator into \xe2\x80\xa60CcReturns an exclusive reference to the back element.D`Returns a shared reference to the <code>nth</code> back element.BnPerformance time-stamp counter size (in bits).EcShuffle the <code>f64</code> lanes in <code>a</code> using an immediate control \xe2\x80\xa60EfShuffle the <code>f64</code> lanes from <code>a</code> together using an immediate \xe2\x80\xa60CcThe physical address of the base of the EPC sectionCgReturns the physical size of the window in hardware \xe2\x80\xa6BdSets the playback rate of the sound.0AoThe playback rate of the sound.110BgWaits for a seek operation to complete.CkAttempts to return the contents of the internal buffer, \xe2\x80\xa6CmInitiates or attempts to shut down this writer, returning \xe2\x80\xa6CcReturns the oldest reported CPU usage in the queue.BjRemoves the last character and returns it.DlSearches for the sequentially <strong>last</strong> item in the parallel \xe2\x80\xa60DkSynchronize renderer <code>present</code> method calls with the refresh \xe2\x80\xa6CgFind the previous boundary after the current cursor \xe2\x80\xa6CjSets the process group ID (PGID) of the child process. \xe2\x80\xa600CjProvides a value or other type with only static lifetimes.CcPresentation delay of current frame in units of \xe2\x80\xa6ChNumber of bits in timestamps. Used for wrapping control.ChAdds an element to the back of the list, returning a \xe2\x80\xa6ClAppends an element to the back of the deque, returning a \xe2\x80\xa6DjPushes the contents of a <code>string</code> slice as an item onto the \xe2\x80\xa6DnReturns a subslice from <code>start</code> (inclusive) to <code>end</code> \xe2\x80\xa6CiCreates a raw entry builder for the <code>HashMap</code>.DdReads a codebook value from the <code>BitStream</code> using the \xe2\x80\xa6DjReads the exact number of bytes required to fill <code>buf</code> from \xe2\x80\xa60DkReads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.DkReads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.DeLike <code>read</code>, except that it reads into a slice of buffers.00000DiThis is an implementation detail of <code>crate::ptr::read</code> and \xe2\x80\xa600DhPerforms a volatile read of the value from <code>self</code> without \xe2\x80\xa6CjPerforms a volatile read of the value from src without \xe2\x80\xa6DgPerforms a volatile read of the value from <code>src</code> without \xe2\x80\xa600ClAttempts to wait for a value on this receiver, returning \xe2\x80\xa6CjWait for an incoming value from the channel associated \xe2\x80\xa61ClMax duration for receiving the response headers, but not \xe2\x80\xa6BdReturns the number of remaining IDs.CoRemoves button and returns associated <code>NativEvCode</code>.CnStarts specifying a rendering of the given Latin-1-encoded \xe2\x80\xa6DjCreates a layout describing the record for <code>n</code> instances of \xe2\x80\xa6CnRemoves the specified range in the string, and replaces it \xe2\x80\xa60BdWhether the config is request level.DoRequests a value of type <code>T</code> from the given <code>impl Error</code>.00DfReserves the minimum capacity for at least <code>additional</code> \xe2\x80\xa6DkReserves the minimum capacity for at least <code>additional</code> more \xe2\x80\xa60DdInvokes <code>reserve_exact</code> on the underlying instance of \xe2\x80\xa6121DjReserves the minimum capacity for exactly <code>additional</code> more \xe2\x80\xa6EgEnsures that this <code>String</code>\xe2\x80\x99s capacity is <code>additional</code> bytes \xe2\x80\xa6DbWaits for channel capacity, moving the <code>Sender</code> and \xe2\x80\xa6DgThis function acts identically to <code>reserve</code>, but takes a \xe2\x80\xa6AbSets counter to 0.CaTriggers a panic without invoking the panic hook.D`Reverses the order of the bits in <code>self</code> from the \xe2\x80\xa600000000000CaReturns right value or computes it from a closureCjShifts this rectangle to the right by <code>offset</code>.0DdRounds <code>$b</code> low as specified, keeps <code>$a</code> high.0DdSplits the slice into a slice of arrays of size <code>LEN</code> \xe2\x80\xa6AhRun the connector chain.EcAsserts the state is <code>None</code> and returns <code>self</code>, otherwise \xe2\x80\xa6EcAsserts the state is <code>Some</code> and returns <code>self</code>, otherwise \xe2\x80\xa6BeThe sample format of an audio sample.CkGet the format of the buffer when viewed as a matrix of \xe2\x80\xa6Cl(screenLeft) (screenTop) The window\xe2\x80\x99s offset in pixels \xe2\x80\xa60C`Create a new PRNG using a <code>u64</code> seed.ClSeek within the buffered data to an absolute position in \xe2\x80\xa6CfSeeks relative to the current position. If the new \xe2\x80\xa6BgSeeks relative to the current position.00000ClSend a value into the channel, returning an error if all \xe2\x80\xa6CmWaits for a message to be sent into the channel, but only \xe2\x80\xa6BmBits 32-63 of 96 bit processor serial number.mSerial NumberBfReturns the motherboard serial number.BbReturns the product serial number.BdSerialize an <code>f32</code> value.0BdSerialize an <code>f64</code> value.0BdSerialize an <code>i16</code> value.0BdSerialize an <code>i32</code> value.0BdSerialize an <code>i64</code> value.0AdSerialize a map key.CkBegin to serialize a map. This call must be followed by \xe2\x80\xa60CkBegin to serialize a variably sized sequence. This call \xe2\x80\xa60BbSerialize a <code>&amp;str</code>.0BcSerialize a <code>u16</code> value.0BcSerialize a <code>u32</code> value.0BcSerialize a <code>u64</code> value.0BlSet the activation state of the event watch.CnSets an additional alpha value multiplied into render copy \xe2\x80\xa6BcSets how much the value oscillates.Dk<strong>Sets</strong> the attribute: the minimum number of bits for the \xe2\x80\xa6DgSets the value of the <code>SO_BROADCAST</code> option for this socket.BhSets the clip rectangle for the surface.CjSets the clip rectangle for rendering on the specified \xe2\x80\xa6CnSets an additional color value multiplied into render copy \xe2\x80\xa6CcSets the angle to the given <code>direction</code>.DhReturns a version of the angle with the given <code>direction</code> \xe2\x80\xa6DeReturns a version of the angle with the given <code>direction</code>.FbUpdates <code>self.extension</code> to <code>Some(extension)</code> or to <code>None</code> if \xe2\x80\xa6CnUpdates <code>self.file_name</code> to <code>file_name</code>.AhSet the framerate in Hz.CjSets the \xe2\x80\x9ccenter\xe2\x80\x9d or \xe2\x80\x9ccorner\xe2\x80\x9d of the frequency \xe2\x80\xa6BfSets how quickly the value oscillates.DeSets the args into an <code>m128i</code>, first arg is the high lane.0CjSet <code>i16</code> args into an <code>m256i</code> lane.011CjSet <code>i32</code> args into an <code>m256i</code> lane.022CjSet <code>i64</code> args into an <code>m256i</code> lane.0CeSet <code>m128</code> args into an <code>m256</code>.0BbSets the global maximum log level.0CjSets the position of the emitter and ears in the 3D world.DiSet the user-resizable state of a window - <code>true</code> to allow \xe2\x80\xa6BaSets the resonance of the filter.CcMark that the header value represents sensitive \xe2\x80\xa6CgSets the volume above which volume will start to be \xe2\x80\xa6BbModifies the distortion threshold.CgSets the element at the given 2D coordinates in the \xe2\x80\xa60BhSets the value of the specified element.Cm&lt; DEPRECATED Wayland shell_surface (window manager handle)ClShow/hide onscreen keyboard. Only works on Android right \xe2\x80\xa60CkShrinks the capacity of the map as much as possible. It \xe2\x80\xa6CaDiscards as much additional capacity as possible.CkShrinks the capacity of the set as much as possible. It \xe2\x80\xa6DfShrinks the capacity of the <code>OsString</code> to match its length.CfShrinks the capacity of the deque as much as possible.DdInvokes <code>shrink_to_fit</code> on the underlying instance of \xe2\x80\xa6CgShrinks the capacity of the vector as much as possible.DeShrinks the capacity of this <code>String</code> to match its length.110CmShrinks the capacity of the table as much as possible. It \xe2\x80\xa686EoShuffle the <code>f64</code> lanes from <code>a</code> and <code>b</code> together using an \xe2\x80\xa60AkCasts a vector of pointers.00CdImmediately skips a certain duration of this source.0CeSort all iterator elements into a new iterator in \xe2\x80\xa6")