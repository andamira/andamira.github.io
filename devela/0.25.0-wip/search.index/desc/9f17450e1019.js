rd_("AdThe first transport.AeThe second transport.CfIndicates whether the <code>d</code> field is enabled.BiAlias of <code>Deca</code> (alternative).Do$ e $ (A001113) <code>\xe2\x89\x88 2.71828182\xe2\x80\xa6</code> <em>The Euler number or </em>\xe2\x80\xa600000AkAlias of <code>Exbi</code>.AjAlias of <code>Exa</code>.AdEuler\xe2\x80\x99s number (e)00000000000oA function key.AgFunction keys (F1-F48).10fF key.AkAlias of <code>Gibi</code>.AkAlias of <code>Giga</code>.CfIndicates whether the <code>h</code> field is enabled.BjAlias of <code>Hecto</code> (alternative).AkAlias of <code>Kibi</code>.BiAlias of <code>Kilo</code> (alternative).CfIndicates whether the <code>m</code> field is enabled.AkAlias of <code>Mebi</code>.AkAlias of <code>Mega</code>.AkAlias of <code>Pebi</code>.AkAlias of <code>Peta</code>.AmAlias of <code>Quetta</code>.AlAlias of <code>Ronna</code>.CfIndicates whether the <code>s</code> field is enabled.AkAlias of <code>Tebi</code>.AkAlias of <code>Tera</code>.CfIndicates whether the <code>y</code> field is enabled.AkAlias of <code>Yobi</code>.AlAlias of <code>Yotta</code>.AkAlias of <code>Zebi</code>.AlAlias of <code>Zetta</code>.CiA suffix which, when applied to a time, denotes a UTC \xe2\x80\xa6BfCore definition for parser input stateCgTransforms a token into a char for basic string parsingBnThe basic <code>Parser</code> trait for errorsCmMarks the input as being the complete buffer or a partial \xe2\x80\xa6BoCheck if a token is in a set of possible tokensC`Manipulate the how parsers respond to this errorBhGet a <code>Pin&lt;&amp;mut A&gt;</code>AkAlias of <code>Atto</code>.BhGet a <code>Pin&lt;&amp;mut B&gt;</code>BhGet a <code>Pin&lt;&amp;mut C&gt;</code>BaThe luminance-like channel value.000BlColor channels in order: [red, green, blue].CcColor channels in order: [red, green, blue, alpha].0100210100100nC interfacing.3333211211321211211AlAlias of <code>Centi</code>.BhGet a <code>Pin&lt;&amp;mut D&gt;</code>A`The denominator.eDays.00000000000AkAlias of <code>Deci</code>.2111111111111BhGet a <code>Pin&lt;&amp;mut E&gt;</code>BhGet a <code>Pin&lt;&amp;mut F&gt;</code>AlAlias of <code>Femto</code>.BhGet a <code>Pin&lt;&amp;mut G&gt;</code>BhGet a <code>Pin&lt;&amp;mut H&gt;</code>fHours.00000000000AlAlias of <code>Hecto</code>.111111111111Am&lt; agreed upon image heightAnWidth and height of the block.Cm&lt; height           of pict, undefined when pict is not setn&lt; Read-onlyBb&lt; height, in screen coordinatesClCreate a complex number with a value of <code>0 + j1</code>.AkAlias of <code>Kibi</code>.AkAlias of <code>Kilo</code>.C`Returns the raw channel value, regardless of \xe2\x80\xa600hMinutes.00000000000AlAlias of <code>Milli</code>.111111111111nThe numerator.AkAlias of <code>Nano</code>.1AkAlias of <code>Pico</code>.B`The quantification of the value.0AmAlias of <code>Quecto</code>.BkThe width of the frequency range to adjust.AlAlias of <code>Ronto</code>.BkThe <code>state</code> after the operation.hSeconds.000000000001000000000000C`Alias of <code>Micro</code> (alternative to \xc2\xb5).CdThe <code>value</code> resulting from the operation.oThe main value.10Al&lt; agreed upon image widthAnWidth and height of the block.Cm&lt; width            of pict, undefined when pict is not setn&lt; Read-onlyBa&lt; width, in screen coordinatesCeReturns a copy of the first dimension <code>x</code>.00000CgThe X-coordinate of the mouse event relative to the \xe2\x80\xa6CiThe X-coordinate of the pointer event relative to the \xe2\x80\xa6CaThe first B\xc3\xa9zout\xe2\x80\x99s coefficient <code>x</code>.BeThe x-coordinate of the mouse cursor.B`The x-coordinate of the pointer.CfThe x-coordinate of the mouse cursor during the event.AbHorizontal pixels.6540321BhThe x coordinate of the top left corner.Cm&lt; top left corner  of pict, undefined when pict is not setBd&lt; x coordinate of top left cornerBiThe leftmost boundary of the text region.CkThe xmin of the glyph bounding box. This represents the \xe2\x80\xa6Be&lt; X coordinate, relative to window0D`&lt; The amount scrolled horizontally, positive to the right \xe2\x80\xa6Ck&lt; Normalized in the range 0\xe2\x80\xa61 with 0 being on the leftBb&lt; Normalized in the range 0\xe2\x80\xa61Ba&lt; Normalized center of gestureCcHow much did we scroll in X, with integer precisionCfNormalized in the range 0\xe2\x80\xa61 with 0 being on the left00BeReturns the x coordinate of the state0BjThe horizontal position of this rectangle.BgReturns the x-coordinate of this point.10CfReturns a copy of the second dimension <code>y</code>.00000CgThe Y-coordinate of the mouse event relative to the \xe2\x80\xa6CiThe Y-coordinate of the pointer event relative to the \xe2\x80\xa6CbThe second B\xc3\xa9zout\xe2\x80\x99s coefficient <code>y</code>.BeThe y-coordinate of the mouse cursor.B`The y-coordinate of the pointer.CfThe y-coordinate of the mouse cursor during the event.A`Vertical pixels.fYears.00000000000765AlAlias of <code>Yocto</code>.1111111111112543BhThe y coordinate of the top left corner.Cm&lt; top left corner  of pict, undefined when pict is not setBd&lt; y coordinate of top left cornerBhThe topmost boundary of the text region.CjThe ymin of the glyph bounding box. If your coordinate \xe2\x80\xa6Be&lt; Y coordinate, relative to window0Co&lt; The amount scrolled vertically, positive away from the \xe2\x80\xa6Cj&lt; Normalized in the range 0\xe2\x80\xa61 with 0 being at the topBb&lt; Normalized in the range 0\xe2\x80\xa61Ba&lt; Normalized center of gestureCcHow much did we scroll in Y, with integer precisionCeNormalized in the range 0\xe2\x80\xa61 with 0 being at the top00BeReturns the y coordinate of the state0BhThe vertical position of this rectangle.BgReturns the y-coordinate of this point.10CeReturns a copy of the third dimension <code>z</code>.00AlAlias of <code>Zepto</code>.AdPixel is 8-bit alphaBk\xe2\x80\x9cante meridiem\xe2\x80\x9d or \xe2\x80\x9cbefore midday.\xe2\x80\x9dAiThe \xe2\x80\x9ccommon era\xe2\x80\x9d era.AkAlias of <code>Exbi</code>.Dh<code>core</code> Trait for comparisons corresponding to equivalence \xe2\x80\xa6Do<code>core</code> Derive macro generating an impl of the trait <code>Eq</code>.10CfTrait for comparisons corresponding to equivalence \xe2\x80\xa6CmDerive macro generating an impl of the trait <code>Eq</code>.1010101010101010101010AfThe equality operator.0212121212121BjFloyd-Steinberg error diffusion dithering.0Dd<code>core</code> The version of the call operator that takes an \xe2\x80\xa60ClThe version of the call operator that takes an immutable \xe2\x80\xa600000000000000000Bc\xf0\x9f\x8c\x90 Filesystem-related operations.0oGrayscale 1bpp.0oGrayscale 2bpp.0oGrayscale 4bpp.0oGrayscale 8bpp.0BoThe <em>greater than or equal to</em> operator.0AkAlias of <code>Gibi</code>.BcThe <em>greater than</em> operator.0Ad8-bit signed integer00000000000000000AaI/O now possible.ClAn opaque ID that uniquely identifies a task relative to \xe2\x80\xa6Al\xf0\x9f\x8c\x90 I/O-related operations.lAn io error.10BcError in io such as the TCP socket.Bc\xf0\x9f\x8c\x90 Javascript-related operations.0AkAlias of <code>Kibi</code>.AhPixel is 1-bit luminanceAhPixel is 2-bit luminanceAhPixel is 4-bit luminanceAhPixel is 8-bit luminance0BlThe <em>less than or equal to</em> operator.0B`The <em>less than</em> operator.0CgIndicates whether the <code>mo</code> field is enabled.CgIndicates whether the <code>ms</code> field is enabled.AkAlias of <code>Mebi</code>.BgOutput size for this suite\xe2\x80\x99s KDF (\xe2\x80\xa6BgNonce size for this suite\xe2\x80\x99s AEAD (\xe2\x80\xa6CgIndicates whether the <code>ns</code> field is enabled.BcThe <em>not equal to</em> operator.0AiNo uniqueness constraints0CmDST is not in effect. In other words, standard time is in \xe2\x80\xa6AnAlias of <code>SUCCESS</code>.B`200 OK [RFC9110, Section 15.3.1]Dj<code>?std</code> A string describing the specific operating system in \xe2\x80\xa6CmA string describing the specific operating system in use. \xe2\x80\xa6AjContains the success value00000000000000000000000000000000000000000000000000DcThe output type produced by this <code>Serializer</code> during \xe2\x80\xa60DcMust match the <code>Ok</code> type of our <code>Serializer</code>.00000022222222AiComparison was successful333333333333333Cb$ \xcf\x80 = \\frac{1}{2} \xcf\x84 = 180\\degree $ (A000796) \xe2\x80\xa600000AkArchimedes\xe2\x80\x99 constant (\xcf\x80)000000000000Bj\xe2\x80\x9cpost meridiem\xe2\x80\x9d or \xe2\x80\x9cafter midday.\xe2\x80\x9dAkAlias of <code>Pebi</code>.CmA GIL-independent reference to an object allocated on the \xe2\x80\xa60D`<code>alloc</code> A single-threaded reference-counting pointer.0CjA single-threaded reference-counting pointer. \xe2\x80\x98Rc\xe2\x80\x99 \xe2\x80\xa600AdSigned 8-bit samplesAeSigned 8-bit integer.CjInforms the server of transfer encodings willing to be \xe2\x80\xa6AkAlias of <code>Tebi</code>.Af8-bit unsigned integer00000000000000000AfUnsigned 8-bit samplesAo<code>u8</code> vertex indices.AgUnsigned 8-bit integer.CgIndicates whether the <code>us</code> field is enabled.mUp arrow key.0BcFilters based on the scanline aboveCgReleased mouse button. Contains the button that was \xe2\x80\xa62A`An IPv4 address.AgAn IPv4 socket address.10101010A`An IPv6 address.AgAn IPv6 socket address.10101010AkAlias of <code>Yobi</code>.AkAlias of <code>Zebi</code>.A`The 1st variant.CgAn exclusive reference to the tuple element at index 0.CcA shared reference to the tuple element at index 0.AmThe tuple element at index 0.BcThe type of the element at index 0.43210A`The 2nd variant.CgAn exclusive reference to the tuple element at index 1.CcA shared reference to the tuple element at index 1.AmThe tuple element at index 1.BcThe type of the element at index 1.43210A`The 3rd variant.CgAn exclusive reference to the tuple element at index 2.CcA shared reference to the tuple element at index 2.AmThe tuple element at index 2.BcThe type of the element at index 2.43210A`The 4th variant.CgAn exclusive reference to the tuple element at index 3.CcA shared reference to the tuple element at index 3.AmThe tuple element at index 3.BcThe type of the element at index 3.43210A`The 5th variant.CgAn exclusive reference to the tuple element at index 4.CcA shared reference to the tuple element at index 4.AmThe tuple element at index 4.BcThe type of the element at index 4.43210A`The 6th variant.CgAn exclusive reference to the tuple element at index 5.CcA shared reference to the tuple element at index 5.AmThe tuple element at index 5.BcThe type of the element at index 5.43210A`The 7th variant.CgAn exclusive reference to the tuple element at index 6.CcA shared reference to the tuple element at index 6.AmThe tuple element at index 6.BcThe type of the element at index 6.43210A`The 8th variant.CgAn exclusive reference to the tuple element at index 7.CcA shared reference to the tuple element at index 7.AmThe tuple element at index 7.BcThe type of the element at index 7.43210A`The 9th variant.CgAn exclusive reference to the tuple element at index 8.CcA shared reference to the tuple element at index 8.AmThe tuple element at index 8.BcThe type of the element at index 8.43210AaThe 10th variant.CgAn exclusive reference to the tuple element at index 9.CcA shared reference to the tuple element at index 9.AmThe tuple element at index 9.BcThe type of the element at index 9.43210EgReturns an immutable reference to the element at (<code>row</code>, <code>col</code>\xe2\x80\xa60000000DhA convenience function for constructing a <code>DateTime</code> from \xe2\x80\xa6AiCreates a new basic errorEgCreates a new <code>AnsiColor8b</code> from a 26-color grayscale <code>value</code> \xe2\x80\xa6AkAlias of <code>Deca</code>.CkReturns a copy of the global <code>TimeZoneDatabase</code>.CaGeneric data structure deserialization framework.BhDeserializing TOML into Rust structures.BhThe delta movement since the last event.0Bc&lt; Normalized in the range -1\xe2\x80\xa610EfTests for <code>self</code> and <code>other</code> values to be equal, and is used \xe2\x80\xa6DiNot a direct intrinsic, this is a <code>cmp_eq_mask</code> and then a \xe2\x80\xa6BcEquality for two <code>Arc</code>s.1DkNot a direct intrinsic, this is a <code>cmp_eq_mask_i8_m128i</code> and \xe2\x80\xa6ClPerforms a comparison to get a mask, then moves the mask \xe2\x80\xa60ChReturns <code>true</code> if <code>self == other</code>.0DjReturns <code>true</code> if <code>self == other</code> using total order.11111111101BbEquality for two <code>Rc</code>s.fPanicsBhEquality for two <code>OnceLock</code>s.DiDetermines if the elements of this <code>Iterator</code> are equal to \xe2\x80\xa60000000BcCompares raw pointers for equality.CfChecks the equality of two slices of primitives in \xe2\x80\xa600000000000000CiChecks the equality of two slices of string slices in \xe2\x80\xa6111CiChecks the equality of two string slices in compile-time.44444444444444>>>>>>>3>>>>>>3BnTests whether this object is equal to another.0DhDetermines if the elements of this <code>ParallelIterator</code> are \xe2\x80\xa60ChPerforms a case-insensitive comparison of the string \xe2\x80\xa60EfTests for <code>self</code> and <code>other</code> values to be equal, and is used \xe2\x80\xa6000007BcEquality for two <code>Arc</code>s.BiEquality for two <code>UniqueArc</code>s.BhEquality for two <code>UniqueRc</code>s.CdGamepad state and other event related functionality.AlDRM PRIME fd for the object.AnFile descriptor of DRM device.BnOwned and borrowed Unix-like file descriptors.AfForce feedback module.AhFilesystem abstractions.BcFilesystem manipulation operations.DfUnix-specific extensions to primitives in the <code>std::fs</code> \xe2\x80\xa6DgLinux-specific extensions to primitives in the <code>std::fs</code> \xe2\x80\xa6CmOld module which contained some implementation details of \xe2\x80\xa6Dd\xe2\x80\x98Greater than or equal to\xe2\x80\x99 comparison for two <code>Arc</code>s.CkReturns <code>true</code> if <code>self &gt;= other</code>.DmReturns <code>true</code> if <code>self &gt;= other</code> using total order.111111011111EhTests greater than or equal to (for <code>self</code> and <code>other</code>) and is \xe2\x80\xa60000000Dc\xe2\x80\x98Greater than or equal to\xe2\x80\x99 comparison for two <code>Rc</code>s.fPanicsD`Determines if the elements of this <code>Iterator</code> are \xe2\x80\xa60000000000000000000003333333333333CiTests whether this object is greater than or equal to \xe2\x80\xa60DhDetermines if the elements of this <code>ParallelIterator</code> are \xe2\x80\xa608Dk\xe2\x80\x98Greater than or equal to\xe2\x80\x99 comparison for two <code>UniqueArc</code>\xe2\x80\xa6Dj\xe2\x80\x98Greater than or equal to\xe2\x80\x99 comparison for two <code>UniqueRc</code>\xe2\x80\xa6CbGreater-than comparison for two <code>Arc</code>s.CjReturns <code>true</code> if <code>self &gt; other</code>.0DlReturns <code>true</code> if <code>self &gt; other</code> using total order.11111110111EhTests greater than (for <code>self</code> and <code>other</code>) and is used by the \xe2\x80\xa60000000CaGreater-than comparison for two <code>Rc</code>s.:99999999999999999999991111111111111CbTests whether this object is greater than another.0885ChGreater-than comparison for two <code>UniqueArc</code>s.CgGreater-than comparison for two <code>UniqueRc</code>s.DbRedundant constants module for the <code>i8</code> primitive type.0BbRecognizes a signed 1 byte integer1CnReturns the OS-assigned process identifier associated with \xe2\x80\xa6BfGets the thread\xe2\x80\x99s unique identifier.AjReturns the worker\xe2\x80\x99s ID.AgReturns the job\xe2\x80\x99s ID.BeReturns the numeric ID of the handle.44BiUnique identifier for the pointer device.CiUnique ID for touch and pen inputs (e.g., multi-touch \xe2\x80\xa6106bidBnCodec implemented by the hardware accelerator.CkFormat-specific stream ID. decoding: set by libavformat \xe2\x80\xa6Bf&lt; unique ID to identify the chapterAfReturns ID of gamepad.nId of gamepad.0AiThe modulator to link to.BlReturns the unique identifier for the clock.BmGets the unique identifier for this listener.C`Returns the unique identifier for the modulator.0C`Returns a unique identifier for this send track.CfGet a unique stable identifier for this port. This \xe2\x80\xa60AoGet the numeric ID of a window.BbA unique identifier for the track.0BhReturns the identifier of the component.AkReturns the ID of the user.AlReturns the ID of the group.CnReturns the OS-assigned process identifier associated with \xe2\x80\xa6CjReturns the <code>Id</code> of the currently running task.ChReturns a task ID that uniquely identifies this task \xe2\x80\xa6ClReturns a task ID that identifies the task which errored \xe2\x80\xa613AhThe imaginary component.AbI/O functionality.CbLinux-specific extensions to <code>std::io</code>.CfTraits, helpers, and type definitions for core I/O \xe2\x80\xa6Chdeprecated io module the original io module has been \xe2\x80\xa61DhThe <code>io</code> module implements composable bit- and byte-level \xe2\x80\xa6CnTraits, helpers, and type definitions for asynchronous I/O \xe2\x80\xa63CcUnix-specific extensions to general I/O primitives.CkReturns the IP address associated with this socket address.00DbForwards to the method defined on the type <code>dyn Error</code>.0DjReturns <code>true</code> if the inner type is the same as <code>T</code>.AgConditional evaluation.D`Forwards to the method defined on the type <code>dyn Any</code>.2ClForwards to the method defined on the type <code>Any</code>.2EfReturns whether <code>self</code> and <code>other</code> point to the same object. \xe2\x80\xa600CkReturn true if the underlying error has the same type as T.CbThe bessel function of the first kind, of order 0.0CiZeroth order of the Bessel function of the first kind \xe2\x80\xa6CbThe bessel function of the first kind, of order 1.0CkFirst order of the Bessel function of the first kind (f64).CkBessel function of the first kind, of order <code>n</code>.CjInteger order of the Bessel function of the first kind \xe2\x80\xa6AgJavaScript interfacing.Da\xe2\x80\x98Less than or equal to\xe2\x80\x99 comparison for two <code>Arc</code>s.CkReturns <code>true</code> if <code>self &lt;= other</code>.0DmReturns <code>true</code> if <code>self &lt;= other</code> using total order.11111111110EeTests less than or equal to (for <code>self</code> and <code>other</code>) and is \xe2\x80\xa60000000D`\xe2\x80\x98Less than or equal to\xe2\x80\x99 comparison for two <code>Rc</code>s.fPanicsD`Determines if the elements of this <code>Iterator</code> are \xe2\x80\xa60000000000000000000003333333333333CkTests whether this object is less than or equal to another.0AgLittle-Endian utilitiesDhDetermines if the elements of this <code>ParallelIterator</code> are \xe2\x80\xa609Dg\xe2\x80\x98Less than or equal to\xe2\x80\x99 comparison for two <code>UniqueArc</code>s.Df\xe2\x80\x98Less than or equal to\xe2\x80\x99 comparison for two <code>UniqueRc</code>s.BkThe natural logarithm of <code>self</code>.0AfThe natural logarithm.0AcNatural log (ln(x))00CiProduces a vector where every element has the natural \xe2\x80\xa6BoLess-than comparison for two <code>Arc</code>s.CjReturns <code>true</code> if <code>self &lt; other</code>.000000DlReturns <code>true</code> if <code>self &lt; other</code> using total order.101111FgTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> \xe2\x80\xa60000000BnLess-than comparison for two <code>Rc</code>s.?>>>>>>>>>>>>>>>>>>>>>>1111111111111BoTests whether this object is less than another.0<<5CeLess-than comparison for two <code>UniqueArc</code>s.CdLess-than comparison for two <code>UniqueRc</code>s.gMonths.00000000000000000000000CgMilliseconds since <code>performance.timeOrigin</code>.mMilliseconds.000000000001000000000000BeInequality for two <code>Arc</code>s.DjReturns <code>true</code> if <code>self != other</code> using total order.ChReturns <code>true</code> if <code>self != other</code>.000000010000DjTests for <code>!=</code>. The default implementation is almost always \xe2\x80\xa60000000BdInequality for two <code>Rc</code>s.DjDetermines if the elements of this <code>Iterator</code> are not equal \xe2\x80\xa60000000EaCreates a <code>NonExtreme*</code> <code>niche</code> value with compile-time \xe2\x80\xa61111111111111103333333333333CbTests whether this object is not equal to another.0DhDetermines if the elements of this <code>ParallelIterator</code> are \xe2\x80\xa608BjInequality for two <code>UniqueRc</code>s.lNanoseconds.00000000000000000000000EdCreates a <code>NonZero*</code> <code>niche</code> value with compile-time checking.0CnReturns the <code>TypeId</code> of the generic type parameter.BaReturns the alignment for a type.DnConverts from <code>Result&lt;T, E&gt;</code> to <code>Option&lt;T&gt;</code>.AjSets the background color.DhA convenience function for constructing a <code>DateTime</code> from \xe2\x80\xa6BfLogical \xe2\x80\x9cor\xe2\x80\x9d with a boolean value.BhBitwise \xe2\x80\x9cor\xe2\x80\x9d with the current value.00000000000EjApplies the <code>or</code> operation to <code>_other</code>, (returns <code>True</code>).EjApplies the <code>or</code> operation to <code>other</code>, (returns <code>other</code>).ChReturns the option if it contains a value, otherwise \xe2\x80\xa6FeReturns <code>res</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> \xe2\x80\xa6FcReturns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, \xe2\x80\xa6CbCombines errors from two different parse branches.0AiOS-specific. os::{linux} AjOS-specific functionality.lI/O context.CjThe scale of the text in pixel units. The units of the \xe2\x80\xa6BnThe scale of the glyph being positioned in px.CbReturns the GIL token associated with this object.DhReturns a <code>Python</code> token that is bound to the lifetime of \xe2\x80\xa60CiSingle-threaded reference-counting pointers. \xe2\x80\x98Rc\xe2\x80\x99 \xe2\x80\xa600AlReborrow with a new lifetimeAcThe real component.Ci<em><code>s</code>kip <code>f</code>ormatting</em> macro.0DbReturns both <code>state</code> and <code>value</code> as a tuple.DhThe <code>sz</code> module provides a collection of string searching \xe2\x80\xa6CoGet the timestamp of the packet in <code>TimeBase</code> units.ChThe timestamp of the packet. When gapless support is \xe2\x80\xa60BfThe <code>TimeStamp</code> to seek to.0CmRoutines for interacting with time zones and the zoneinfo \xe2\x80\xa6DbRedundant constants module for the <code>u8</code> primitive type.0BeRecognizes an unsigned 1 byte integer1CgUser interface functionality. ui::{back, front, layout}mMicroseconds.00000000000000000000000BfThe first version of the core prelude.0CiThe first version of the prelude of The Rust Standard \xe2\x80\xa6AoTransforms itself into a tuple.BiTests if the X1 mouse button was pressed.0BiTests if the X2 mouse button was pressed.0CcThe bessel function of the second kind, of order 0.0CjZeroth order of the Bessel function of the second kind \xe2\x80\xa6CcThe bessel function of the second kind, of order 1.0CiFirst order of the Bessel function of the second kind \xe2\x80\xa6ClBessel function of the second kind, of order <code>n</code>.CkInteger order of the Bessel function of the second kind \xe2\x80\xa6CjIndicates the time in seconds the object has been in a \xe2\x80\xa6ChUnwinding is just not possible given the ABI of this \xe2\x80\xa600Cg<code>core</code> The addition operator <code>+</code>.0BeThe addition operator <code>+</code>.0CkAdds source and destination. Source and destination are \xe2\x80\xa60AaAdditive blending2jAll cells.AiTo refresh all processes.BjAll failed branches of an <code>alt</code>CcHelper trait for the <code>alt()</code> combinator.Cd<code>core</code> A trait to emulate dynamic typing.0BbA trait to emulate dynamic typing.0BhType erased version of <code>Self</code>AbBoth Ipv4 and Ipv62Dd\xe2\x9a\x9b\xef\xb8\x8f <code>?alloc</code> A thread-safe reference-counting pointer.0CnA thread-safe reference-counting pointer. \xe2\x80\x98Arc\xe2\x80\x99 stands \xe2\x80\xa6000CiA vtable-erased generic argument. Basically, the same \xe2\x80\xa60CkFilters based on the average of left and right neighbor \xe2\x80\xa6B`The \xe2\x80\x9cbefore common era\xe2\x80\x9d era.AgBackspace-delay type 0.AgBackspace-delay type 1.jBig endianAfAn Image in BMP FormatDj<code>alloc</code> A pointer type that uniquely owns a heap allocation \xe2\x80\xa60BcA pointer type for heap allocation.DhAn owned pointer to a bump-allocated <code>T</code> value, that runs \xe2\x80\xa6CjA pointer type that uniquely owns a heap allocation of \xe2\x80\xa60000000BcReuse an existing exclusive buffer.0AnBus error (bad memory access).Ca<code>CRDLY</code>: Carriage-return delay type 0.Ca<code>CRDLY</code>: Carriage-return delay type 1.Ca<code>CRDLY</code>: Carriage-return delay type 2.Ca<code>CRDLY</code>: Carriage-return delay type 3.Bo<code>CSIZE</code>: Character size mask type 5.Bo<code>CSIZE</code>: Character size mask type 6.Bo<code>CSIZE</code>: Character size mask type 7.Bo<code>CSIZE</code>: Character size mask type 8.BbControl Sequence Introducer (CSI).AkSeek from current position.Cb<code>alloc</code> A clone-on-write smart pointer.0AoA clone-on-write smart pointer.00ChContains all the methods of the <code>Cpu</code> struct.DgA <code>Cue</code> is a designated point of time within a media stream.0BfThe parser had an unrecoverable error.AgCode to set dim effect.BmIndicates the client\xe2\x80\x99s tracking preference.AkOnly output the dry signal.CeA day is usually 24 hours, but some days may have \xe2\x80\xa6AfAn Image in DDS FormatAmAlias of <code>Delete</code>.AmDecreases the text intensity.Cg<code>core</code> The division operator <code>/</code>.0BeThe division operator <code>/</code>.00CkAn enum indicating whether a particular datetime  is in \xe2\x80\xa6Ai\xe2\x80\x9cInput/output error.\xe2\x80\x9dAfSeek from end of file.AnAlias of <code>FAILURE</code>.hEnd key.0CfThe range is bounded exclusively from above and is \xe2\x80\xa601CgSets the offset to the size of this object plus the \xe2\x80\xa610De\xf0\x9f\x8c\x90 A namespaced wrapper for <code>std::env</code> functions and \xe2\x80\xa60BkThe era corresponding to a particular year.AhContains the error value00000000000ChThe associated error which can be returned from parsing.11111111111101111111111110111011111110111111111111111111110111111110AmAlias of <code>Escape</code>.kEscape key.e10^180Al32-bit floating-point number00000000000000000BiSingle precision (32-bit) floating point.Al64-bit floating-point number00000000000000000BiDouble precision (64-bit) floating point.Bk<code>FFDLY</code>: Form-feed delay type 0.Bk<code>FFDLY</code>: Form-feed delay type 1.BiThe complex Fast Fourier Transform (FFT).Bh\xf0\x9d\x90\x93 \xf0\x9f\x8c\x90 A string formatting namespace.0AoPlay effect for specified time.cGETClThe offset for a particular civil datetime and time zone \xe2\x80\xa6BmA group id wrapping a platform specific type.AfAn Image in GIF FormatiHDD type.EaIndicates whether the 3 fields from <code>h</code> to <code>s</code> are enabled.AoAn Image in Radiance HDR FormatAe16-bit signed integer00000000000000000Ae32-bit signed integer00000000000000000Ae64-bit signed integer00000000000000000B`IOT trap. A synonym for SIGABRT.AfAn Image in ICO FormatAmAlias of <code>Insert</code>.Dj\xf0\x9d\x9f\x99 \xf0\x9f\x8c\x90 Provides comprehensive integer operations on <code>T</code>, \xe2\x80\xa60C`The primitive integer type with an identical \xe2\x80\xa6CnMetadata for parsing signed integers, see <code>dec_int</code>BnKeyboard codes, used in <code>EventKey</code>.0CeA single key event with additional pressed modifiers.EcFor Key/<code>Value</code> pairs under a <code>Table</code> header or inside an \xe2\x80\xa6AiPixel is 16-bit luminance0AiThe length of this array.CiThe number of active (non-<code>()</code> type) variants.1BbNumber of elements in this vector.BnPixel is 1-bit luminance with an alpha channelBnPixel is 2-bit luminance with an alpha channelBnPixel is 4-bit luminance with an alpha channelBnPixel is 8-bit luminance with an alpha channel0Al\xf0\x9f\x8c\x90 Log-related operations.0CjA trait encapsulating the operations required of a logger.BaLow quality palette construction.0BcA generic luminance-like component.CeTransforming into luminosities before the comparison.10CnThe largest value that can be represented by this non-zero \xe2\x80\xa600000000000CcThe highest unicode scalar that can be represented.AeLargest finite value.AhMaximum valid exit code.AhMax supported seek type.AnThe maximum possible duration.BcReturns the maximum possible value.00000000000CmReturns the largest value that can be represented by this \xe2\x80\xa600000000000000000000000AeThe maximum duration.666667EmThe highest unicode scalar a <code>char7</code> can represent, <code>&#39;\\u{7F}&#39;</code>.EmThe highest unicode scalar a <code>char8</code> can represent, <code>&#39;\\u{FF}&#39;</code>.DcThe highest unicode scalar a <code>char16</code> can represent, \xe2\x80\xa6EoThe highest valid code point a <code>char</code> can have, <code>&#39;\\u{10FFFF}&#39;</code>\xe2\x80\xa6DiLargest finite <code>f32</code> value. Use <code>f32::MAX</code> instead.DiLargest finite <code>f64</code> value. Use <code>f64::MAX</code> instead.CmThe largest value that can be represented by this integer \xe2\x80\xa600000CkTrait version of the inherent <code>MIN</code> assoc const.111111BjThe character with the highest ASCII code.5432222221222222<BdThe maximum representable timestamp.BiThe maximum representable Gregorian date.BmThe maximum representable Gregorian datetime.BhThe minimum representable ISO week date.BeThe maximum representable time value.BfThe maximum possible time zone offset.88;:9888888888888BcReturns the maximum possible value.CnThe mid-point value between the maximum and minimum sample \xe2\x80\xa6CkThe smallest value that can be represented by this non-zero00000000000CbThe lowest unicode scalar that can be represented.AfSmallest finite value.CmThe minimum possible duration. Or the \xe2\x80\x9cmost negative\xe2\x80\x9d \xe2\x80\xa6BcReturns the minimum possible value.00000000000CnReturns the smallest value that can be represented by this \xe2\x80\xa600000000000000000000000333334ElThe lowest unicode scalar a <code>char7</code> can represent, <code>&#39;\\u{00}&#39;</code>.ElThe lowest unicode scalar a <code>char8</code> can represent, <code>&#39;\\u{00}&#39;</code>.EmThe lowest unicode scalar a <code>char16</code> can represent, <code>&#39;\\u{00}&#39;</code>.DjSmallest finite <code>f32</code> value. Use <code>f32::MIN</code> instead.DjSmallest finite <code>f64</code> value. Use <code>f64::MIN</code> instead.CnThe smallest value that can be represented by this integer \xe2\x80\xa600000CkTrait version of the inherent <code>MIN</code> assoc const.BcThe smallest possible alignment, 1.222222BiThe character with the lowest ASCII code.543333332333333;BdThe minimum representable timestamp.BiThe minimum representable Gregorian date.BmThe minimum representable Gregorian datetime.BhThe maximum representable ISO week date.BeThe minimum representable time value.BfThe minimum possible time zone offset.99;:999999999999BcReturns the minimum possible value.DjAn iterator that maps the values of <code>iter</code> with <code>f</code>.00Df<code>Map</code> is an iterator that transforms the elements of an \xe2\x80\xa6C`The input contained a map that was not expected.Co<code>Parser</code> implementation for <code>Parser::map</code>3Cf<code>Md5</code> implements the MD5 hashing algorithm.BeMD5 of interleaved PCM audio samples.Ao\xf0\x9f\x8c\x90 Memory-related operations.0CjAn amount to blend the \xe2\x80\x9cdry\xe2\x80\x9d and \xe2\x80\x9cwet\xe2\x80\x9d outputs \xe2\x80\xa6CbFilter that modifies each sample by a given value.nA modifer key.oA modifier key.10nColor modulateCm<code>core</code> The multiplication operator <code>*</code>.0BkThe multiplication operator <code>*</code>.0nColor multiply1AcNot a Number (NaN).00000CfNot a Number (NaN). Use <code>f32::NAN</code> instead.CfNot a Number (NaN). Use <code>f64::NAN</code> instead.1010Bd<code>NLDLY</code>: Newline type 0_.Bc<code>NLDLY</code>: Newline type 1.ClNaN (not a number): this value results from calculations \xe2\x80\xa60000Cm<code>core</code> The unary negation operator <code>-</code>.0BkThe unary negation operator <code>-</code>.00De<code>core</code> The unary logical negation operator <code>!</code>.0CcThe unary logical negation operator <code>!</code>.00AkThe thing should start now.Bd\xf0\x9d\x9f\x99 Common trait for numeric types.CdThe underlying numeric type implementing this trait.10BdA <code>Vector</code> with all ones.00AnThe multiplicative identity 1.00000BbA level lower than all log levels.00BmDisable collecting and displaying backtraces.CeFinds all occurrences of a single byte in a haystack.00Cj<code>core</code> Trait for types that form a total order.Eh<code>core</code> Derive macro generating an impl of the trait <code>Ord</code>. The \xe2\x80\xa610BhTrait for types that form a total order.DfDerive macro generating an impl of the trait <code>Ord</code>. The \xe2\x80\xa61010101010101010101010101010101010AoThe output type for operations.0CaThe type of transport produced by this connector.Ek\xe2\x9a\x96\xef\xb8\x8f A return type encapsulating an owned <strong>state</strong> <code>S</code> and a \xe2\x80\xa6BgThe owned version of this numeric type.10Eb$ \xcf\x86  = (1+\\sqrt{5})/2 $ (A001622) <code>\xe2\x89\x88 1.61803398\xe2\x80\xa6</code> <em>The </em>\xe2\x80\xa600000AeThe golden ratio (\xcf\x86)00000000000cPUTmA keypad key.000AfAn Image in PCX FormatnA pen pointer.0kProcess ID.Cl<code>core</code> A pointer which pins its pointee in place.0BjA pointer which pins its pointee in place.00AfAn Image in PNG FormatCn\xf0\x9f\x8c\x90 A collection of methods for encoding and decoding PNM \xe2\x80\xa60AnAn Image in general PNM FormatBfMarker trait for \xe2\x80\x9cplain old data\xe2\x80\x9d.B`\xf0\x9f\x8c\x90 Pointer-related operations.0AfAn Image in QOI FormatBhCode to set the foreground color to red.DjCode to set the foreground color to <code>fg: [r, g, b]</code> values, \xe2\x80\xa6B`Three channels: Red, Green, Bluee1 Red0A`Light red color.Dk<code>core</code> A wrapper type for an inmutably borrowed value from a \xe2\x80\xa600DjWraps a borrowed reference to a value in a <code>RefCell</code> box. A \xe2\x80\xa60BgReturns a reference to the inner value.1Ch<code>core</code> The remainder operator <code>%</code>.0BfThe remainder operator <code>%</code>.00CdA double-ended iterator with the direction inverted.00De<code>Rev</code> is an iterator that produces elements in reverse \xe2\x80\xa61AlRGB color with 3 components.0kRGB colors.C`An RGB color. See RGB color model for more info.BhThe right hand side type for operations.0hRunning.AfSigned 16-bit integer.AfSigned 24-bit integer.AfSigned 32-bit integer.AhSeek from start of file.BjHyper-thread (Simultaneous multithreading)iSSD type.CmThe value moves gradually in one direction, then abruptly \xe2\x80\xa6D`The SDL context type. Initialize with <code>sdl2::init()</code>.CeThe input contained a sequence that was not expected.DoThe left shift operator <code>&lt;&lt;</code>. Note that because this trait \xe2\x80\xa600E`The right shift operator <code>&gt;&gt;</code>. Note that because this trait \xe2\x80\xa600Bc\xf0\x9d\x90\x93 \xf0\x9f\x8c\x90 A string slice namespace.lString slice01EiThe input contained a <code>&amp;str</code> or <code>String</code> that was not expected.lUTF-8 Stream0Cj<code>core</code> The subtraction operator <code>-</code>.0BhThe subtraction operator <code>-</code>.CdFilters based on previous pixel in the same scanline11CnTrait to represent types that can be created by summing up \xe2\x80\xa6000DjAn error reported by the system, containing a <code>LINUX_ERRNO</code> \xe2\x80\xa60AoBad argument to routine (SVr4).Ec$ \xcf\x84 = 2\xcf\x80 = 360\\degree $ (A019692) <code>\xe2\x89\x88 6.28318530\xe2\x80\xa6</code> <em>The </em>\xe2\x80\xa600000AmThe full circle constant (\xcf\x84)00000000000hTab key.00CnA type to represent the <code>Tag</code> that BLAKE2b returns.CkA type to represent the <code>Tag</code> that HMAC returns.001000CoA type to represent the <code>Tag</code> that Poly1305 returns.CmA <code>Tag</code> encapsulates a key-value pair of metadata.CkOne half of an iterator pair where both return the same \xe2\x80\xa60AfAn Image in TGA FormatAdSome error with TLS.CgAligns text to the top of the region defined by the \xe2\x80\xa6CkThe <code>?</code> operator and <code>try {}</code> blocks.00CaFinds all occurrences of two bytes in a haystack.00Ag16-bit unsigned integer00000000000000000B`<code>u16</code> vertex indices.AhUnsigned 16-bit integer.AhUnsigned 24-bit integer.Ag32-bit unsigned integer00000000000000000Eg<code>u32</code> vertex indices. If any index is larger than <code>i32::MAX</code>, \xe2\x80\xa6AhUnsigned 32-bit integer.Ag64-bit unsigned integer00000000000000000GgPrefix using Windows\xe2\x80\x99 <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>, e.g. \xe2\x80\xa600CkThe offset corresponding to UTC. That is, no offset at all.AbThe UTC time zone.BlA user id wrapping a platform specific type.AoThe URI component of a request.0BbAdded by proxies to track routing.Bn<code>VTDLY</code>: Vertical-tab delay type 0.Bn<code>VTDLY</code>: Vertical-tab delay type 1.Cg\xf0\x9f\x97\x83\xef\xb8\x8f <code>alloc</code> A contiguous growable array.AlAn array backed by a vector.01EaA contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short \xe2\x80\xa6EbA contiguous growable array type, written <code>Vec&lt;&#39;bump, T&gt;</code> \xe2\x80\xa6011111111AkOnly output the wet signal.Ai\xf0\x9f\x8c\x90 A Web API namespace.0EaIndicates whether the 3 fields from <code>y</code> to <code>d</code> are enabled.EaIndicates whether the 6 fields from <code>y</code> to <code>s</code> are enabled.AaDST is in effect.CaAn iterator that iterates two other iterators \xe2\x80\xa60BoSee <code>multizip</code> for more information.01F`<code>Zip</code> is an iterator that zips up <code>a</code> and <code>b</code> into a single \xe2\x80\xa62AaThe 11th variant.ChAn exclusive reference to the tuple element at index 10.CdA shared reference to the tuple element at index 10.AnThe tuple element at index 10.BdThe type of the element at index 10.43210AaThe 12th variant.ChAn exclusive reference to the tuple element at index 11.CdA shared reference to the tuple element at index 11.AnThe tuple element at index 11.BdThe type of the element at index 11.43210C`Build an ioctl number for an argumentless ioctl.BhThe absolute value of <code>self</code>.DfComputes the absolute value of self. See <code>i64::abs</code> for \xe2\x80\xa6DeComputes the absolute value of self. See <code>i8::abs</code> for \xe2\x80\xa6DhComputes the absolute value of self. See <code>isize::abs</code> for \xe2\x80\xa6DgComputes the absolute value of self. See <code>i128::abs</code> for \xe2\x80\xa6DfComputes the absolute value of self. See <code>i32::abs</code> for \xe2\x80\xa6DfComputes the absolute value of self. See <code>i16::abs</code> for \xe2\x80\xa6BnReturns the absolute value of this time delta.DjSaturating absolute value. Computes <code>self.abs()</code>, returning \xe2\x80\xa600000DhComputes the absolute value of <code>self</code>, wrapping around at \xe2\x80\xa60000099ChReturns the absolute value of <code>self</code> (no-op).C`Returns the absolute value of <code>self</code>.CjProduces a vector where every element has the absolute \xe2\x80\xa6CgLanewise absolute value, implemented in Rust. Every \xe2\x80\xa6101010CcReturns the absolute value of this signed duration.CkReturns a new span that is the absolute value of this span.AnComputes the absolute of self.AlReturns <code>|self|</code>.105454BfPerforms the <code>+</code> operation.AjAdds to the current value.00000000000C`Adds an offset to a pointer (convenience for \xe2\x80\xa6AjAdds two vectors together.fPanics0BmReturns the element-wise sum of two matrices.00000005AcAdds two fractions.00066BcComputes <code>self + other</code>.0B`Adds an attribute to the module.AkAdds an element to the set.2100BnAdds a new source to mix to the existing ones.BmFilter using Add: D = saturation255(S1 + S2).;BjAll the crate\xe2\x80\x99s items flat re-exported. CkTests if every element of the iterator matches a predicate.000000000000000000000CiReturns true if all elements are set, or false otherwise.BdReturn all <code>ImageFormat</code>sBjGet a flags value with all known bits set.00000000000000000000ClTest whether the predicate holds for all elements in the \xe2\x80\xa6BkContains architecture independent routines.CnTests that every item in the parallel iterator matches the \xe2\x80\xa60BeReturns the set containing all flags.000AoRepresent for all channels (-1)1111Cktrue if all high bits are set for every value in the vector0B`Pick the first successful parserBgLogical \xe2\x80\x9cand\xe2\x80\x9d with a boolean value.BiBitwise \xe2\x80\x9cand\xe2\x80\x9d with the current value.00000000000EkApplies the <code>and</code> operation to <code>other</code>, (returns <code>other</code>).ElApplies the <code>and</code> operation to <code>_other</code>, (returns <code>False</code>).FbReturns <code>None</code> if the option is <code>None</code>, otherwise returns <code>optb</code>.FeReturns <code>res</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> \xe2\x80\xa6E`Combine the assumptions of <code>self</code> and <code>other_assumptions</code>.CjPanic the current thread with the given message as the \xe2\x80\xa6CiTests if any element of the iterator matches a predicate.000000000000000000000C`Utilities for dynamic typing or type reflection.CgReturns true if any element is set, or false otherwise.1ClTest whether the predicate holds for any elements in the \xe2\x80\xa6DiSearches for <strong>some</strong> item in the parallel iterator that \xe2\x80\xa60Citrue if any high bits are set for any value in the vector0AaMatches one token5BhAdds an argument to pass to the program.AhAdvance to the next arg.1AeArtificial languages.Bb<code>core</code> Inline assembly.0A`Inline assembly.00Cc0 terminated ASS/SSA compatible event line. The \xe2\x80\xa6Ck64 x 64 image of RGBA pixels (each 4 * u8) in row-major \xe2\x80\xa6BlBilogy-related abstractions, bio-algorithms.Ck(colorDepth) The screen color depth, in bits per single \xe2\x80\xa60BeBits per pixel; usually 15, 16, or 32ClAVBuffer references backing the data for this frame. All \xe2\x80\xa6CiA reference to the reference-counted buffer where the \xe2\x80\xa6Da&lt; Buffer must have AVPROBE_PADDING_SIZE of extra allocated \xe2\x80\xa6Be&lt; Buffer to hold entire audio dataBlGet an immutable slice to the packet buffer.Dk<code>core</code> Evaluates boolean combinations of configuration flags \xe2\x80\xa60ClEvaluates boolean combinations of configuration flags at \xe2\x80\xa600000000000000000Eebase_macros Evaluates to either a <code>true</code> of <code>false</code> literal \xe2\x80\xa60AiReturns the command line.C`Returns the value of the \xe2\x80\x9ccmd\xe2\x80\x9d refresh kind.EnThis method returns an <code>Ordering</code> between <code>self</code> and <code>other</code>.CiCompare need first. If they are equal, then compare have.BeComparison for two <code>Arc</code>s.CfState\xe2\x80\x99s ordering takes precedence over value\xe2\x80\x99s \xe2\x80\xa6EeCompare <code>value</code> first. If they are equal, then compare <code>quant</code>.BdComparison for two <code>Rc</code>s.fPanicsDiLexicographically compares the elements of this <code>Iterator</code> \xe2\x80\xa60000000000000000000007BlUtilities for comparing and ordering values.888888BjTraits for comparing and ordering vectors.19999990CcLexicographically compares the elements of this \xe2\x80\xa602::::::18BkComparison for two <code>UniqueArc</code>s.BjComparison for two <code>UniqueRc</code>s.kThe cosine.000BcThe cosine of <code>x</code> (f64).CkProduces a vector where every element has the cosine of \xe2\x80\xa6ClReturns the value of the \xe2\x80\x9ccpu\xe2\x80\x9d refresh kind. It will \xe2\x80\xa6C`Returns the value of the \xe2\x80\x9ccpu\xe2\x80\x9d refresh kind.AiReturns the computed CRC.000CfPrevent backtracking, bubbling the error up to the top00BfReturns the current working directory.C`Returns the value of the \xe2\x80\x9ccwd\xe2\x80\x9d refresh kind.DgEquivalent to <code>days()</code>, but reads better for singular units.BhReturns the day for this zoned datetime.BjSet the day field on a <code>Zoned</code>.BeReturns the parsed day, if available.AnReturns the day for this date.BiSet the day field on a <code>Date</code>.BbReturns the day for this datetime.BmSet the day field on a <code>DateTime</code>.C`Day: 1 to {28, 29, 30, 31} (based on month/year)CjPrints and returns the value of a given expression for \xe2\x80\xa6BbAlias of <code>denominator</code>.0A`&lt; DenominatorCaReturns the ID of the device containing the file.00DbThe component-wise separation in <code>D</code>-dimensional space.CdThe size values in <code>D</code>-dimensional space.CjThe coordinate values in <code>D</code>-dimensional space.CoThe directional components in <code>D</code>-dimensional space.AmThe step sizes per dimension.43210CcApplies the <code>Dim</code> attribute to the text.BnReturns the list of attributes of this object.0Ak&lt; The encoded direction.BfPerforms the <code>/</code> operation.000BcComputes <code>self / other</code>.00AnFilter using Div: D = S1 / S2.2BhComputes the dot product of two vectors.ClCalculates partial dot product. Multiplies packed signed \xe2\x80\xa60CnCreates the most common pixel density type: the horizontal \xe2\x80\xa6Cd(devicePixelRatio) The device pixel ratio of the \xe2\x80\xa60CiCustom DSLs, parsers, interpreters, and virtual machines.DeThe <code>dsp</code> module provides efficient implementations of \xe2\x80\xa6Cn\xe2\x9a\xa0\xef\xb8\x8f Dynamically-sized types stored without need of heap \xe2\x80\xa6A`&lt; dest filterClReturns whether daylight saving time is enabled for this \xe2\x80\xa60D`Decompression timestamp in AVStream-&gt;time_base units; the \xe2\x80\xa6BaDuplicates the top stack element.BlReturns duration of effect calculated as \xe2\x80\xa6CnGet the duration of the packet in <code>TimeBase</code> units.CgThe duration of the packet. When gapless support is \xe2\x80\xa60mEAX register.0AiReturn value EAX register1mEBX register.0AiReturn value EBX register1AlElliptic-Curve Cryptography.mECX register.0AiReturn value ECX register1mEDX register.0AiReturn value EDX register1CaReturns the upper bound of the range (inclusive).BiThe upper bound of the range (exclusive).0BhThe upper bound of the range (inclusive)110110101BiThe upper bound of the range (inclusive).222121202Bn&lt; chapter start/end time in time_base unitsBjThe (exclusive) ending time of the region.CjReturns the byte offset of the end of the match in the \xe2\x80\xa6Ak&lt; Ending strength level.C`Check for remaining elements after passing a \xe2\x80\xa60AnFinish serializing a sequence.AkFinish serializing a tuple.BbFinish serializing a tuple struct.BcFinish serializing a tuple variant.AiFinish serializing a map.AlFinish serializing a struct.BdFinish serializing a struct variant.>>=>=><>CgInserts or updates an explicit environment variable \xe2\x80\xa6CkInspection and manipulation of the process\xe2\x80\x99s environment.CaInspects an environment variable at compile time.00000000000CcInserts or updates an environment variable mapping.2111111BhMatch the end of the <code>Stream</code>AcThe error function.0AdError function (f64)DnConverts from <code>Result&lt;T, E&gt;</code> to <code>Option&lt;E&gt;</code>.B`Returns the path to the process.C`Returns the value of the \xe2\x80\x9cexe\xe2\x80\x9d refresh kind.Ba$e^x$ (the exponential function).DfThe gamma exponent (<code>\xce\xb3</code>) used in the encoding/decoding \xe2\x80\xa60111CfReturns the exponent corresponding to the unit prefix.00CiReturns the exponent corresponding to the binary unit \xe2\x80\xa6ChReturns the exponent associated with the SI unit prefix.BbExponential, base <em>e</em> (f64)CeCalculate the exponent of a packed <code>f32x8</code>CeCalculate the exponent of a packed <code>f32x4</code>CeCalculate the exponent of a packed <code>f64x4</code>CeCalculate the exponent of a packed <code>f64x2</code>CmProduces a vector where every element has the exponential \xe2\x80\xa6CmReturns a reference to the extension data for the current \xe2\x80\xa6CnSets the value for the extension data on <code>Context</code>.DfConstants for the <code>f16</code> half-precision floating point type.00DhConstants for the <code>f32</code> single-precision floating point type.0BiRecognizes a 4 byte floating point number1DhConstants for the <code>f64</code> double-precision floating point type.0BjRecognizes an 8 byte floating point number1BaFFIbindings and interoperability.BiPlatform-specific types, as defined by C.BbUtilities related to FFI bindings.1BjRaw FFI declarations for Python\xe2\x80\x99s C API.1DgUnix-specific extensions to primitives in the <code>std::ffi</code> \xe2\x80\xa62DhThe <code>fft</code> module implements the Fast Fourier Transform (FFT).AbCalculate the FFT.AhFused multiply add (f64)BlFormats the value using the given formatter.00000000DkBinary formats each float\xe2\x80\x99s bit pattern (via <code>f32::to_bits</code>\xe2\x80\xa6DjOctal formats each float\xe2\x80\x99s bit pattern (via <code>f32::to_bits</code>\xe2\x80\xa6AlUpperExp formats each float.AlLowerExp formats each float.CdUpperHex formats each float\xe2\x80\x99s bit pattern (via \xe2\x80\xa6ClDisplay formats each float, and leaves the type name off \xe2\x80\xa6AiDebug formats each float.CdLowerHex formats each float\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AmUpperExp formats each double.DkOctal formats each double\xe2\x80\x99s bit pattern (via <code>f64::to_bits</code>\xe2\x80\xa6CmDisplay formats each double, and leaves the type name off \xe2\x80\xa6CeUpperHex formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AjDebug formats each double.AmLowerExp formats each double.CcBinary formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6CeLowerHex formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6BgLowerExp formats each <code>i32</code>.BdOctal formats each <code>i32</code>.BgUpperExp formats each <code>i32</code>.BgUpperHex formats each <code>i32</code>.DjDisplay formats each <code>i32</code>, and leaves the type name off of \xe2\x80\xa6BgLowerHex formats each <code>i32</code>.BeBinary formats each <code>i32</code>.BdDebug formats each <code>i32</code>.DjOctal formats each float\xe2\x80\x99s bit pattern (via <code>f32::to_bits</code>\xe2\x80\xa6DkBinary formats each float\xe2\x80\x99s bit pattern (via <code>f32::to_bits</code>\xe2\x80\xa6AlUpperExp formats each float.CdUpperHex formats each float\xe2\x80\x99s bit pattern (via \xe2\x80\xa6CdLowerHex formats each float\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AiDebug formats each float.AlLowerExp formats each float.ClDisplay formats each float, and leaves the type name off \xe2\x80\xa6AmLowerExp formats each double.CeLowerHex formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6CmDisplay formats each double, and leaves the type name off \xe2\x80\xa6CcBinary formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AmUpperExp formats each double.DkOctal formats each double\xe2\x80\x99s bit pattern (via <code>f64::to_bits</code>\xe2\x80\xa6AjDebug formats each double.CeUpperHex formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6BgLowerHex formats each <code>i32</code>.BdOctal formats each <code>i32</code>.BgUpperHex formats each <code>i32</code>.BeBinary formats each <code>i32</code>.BgLowerExp formats each <code>i32</code>.DjDisplay formats each <code>i32</code>, and leaves the type name off of \xe2\x80\xa6BgUpperExp formats each <code>i32</code>.BdDebug formats each <code>i32</code>.DdWraps the array in an <code>ArrayFmt</code> for formatting purposes.0CnFormat the program and arguments of a Command for display. \xe2\x80\xa6DaShows a human-readable description of the <code>ErrorKind</code>.DcWraps the tuple in a <code>TupleFmt</code> for formatting purposes.030AcStrings formatting.BlFormats the value using the given formatter.00000000BnUtilities for formatting and printing strings.111111111EeA <code>Simd&lt;T, N&gt;</code> has a debug format like the one for <code>[T]</code>:CkUtilities for formatting and printing <code>String</code>s.3333333332333333333CdFormats the key modifiers using the given formatter.CcFormats the modifier key using the given formatter.CkFormats the <code>KeyCode</code> using the given formatter.CkConfigurable support for printing and parsing datetimes \xe2\x80\xa6BfShows the original regular expression.0CdUpperHex formats each float\xe2\x80\x99s bit pattern (via \xe2\x80\xa6DkBinary formats each float\xe2\x80\x99s bit pattern (via <code>f32::to_bits</code>\xe2\x80\xa6ClDisplay formats each float, and leaves the type name off \xe2\x80\xa6AlLowerExp formats each float.AlUpperExp formats each float.CdLowerHex formats each float\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AiDebug formats each float.DjOctal formats each float\xe2\x80\x99s bit pattern (via <code>f32::to_bits</code>\xe2\x80\xa6CmDisplay formats each double, and leaves the type name off \xe2\x80\xa6DkOctal formats each double\xe2\x80\x99s bit pattern (via <code>f64::to_bits</code>\xe2\x80\xa6CcBinary formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AmLowerExp formats each double.AmUpperExp formats each double.CeLowerHex formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6CeUpperHex formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AjDebug formats each double.BgUpperExp formats each <code>i32</code>.BdDebug formats each <code>i32</code>.BdOctal formats each <code>i32</code>.BgLowerHex formats each <code>i32</code>.BgLowerExp formats each <code>i32</code>.BeBinary formats each <code>i32</code>.DjDisplay formats each <code>i32</code>, and leaves the type name off of \xe2\x80\xa6BgUpperHex formats each <code>i32</code>.BfShows the original regular expression.CjFormat an explanation of what data was being expected. \xe2\x80\xa6AgAuto formats the table.AgAuto formats the array.1AeAuto formats the key.0AgAuto formats the value.3CkUtilities for formatting and printing <code>String</code>s.BlFormats the value using the given formatter.000000001000000000Cm&lt; frame per second; must be consistent with the rate fieldAlThe greatest common divisor.CjReturns the GCD between the numerator and the denominator.000A`Returns the GCD.02B`Gets a reference to the ID data.CjReturns a reference to the value corresponding to the key.BfReturns a copy of the contained value.CnGets a reference to the item at the provided index in this \xe2\x80\xa6C`Returns the contained value as a primitive type.CjReturns a shared reference to the element at the given \xe2\x80\xa6CnReturns a clone of the element at the given 2D coordinates \xe2\x80\xa60CmReturns a reference to the value in the set, if any, that \xe2\x80\xa66CfReturns an iterator over a subsection of the iterator.0CjReturns a reference to the element in the set, if any, \xe2\x80\xa6CgProvides a reference to the element at the given index.CnReturns a reference to the value if initialized. Otherwise \xe2\x80\xa6BkGets the reference to the underlying value.:BlGets a mutable pointer to the wrapped value.21AiRetrieves a value by key.CmReturns a shared reference to an initialized element at a \xe2\x80\xa6CiRetrieves the value at <code>(row, col)</code>, if valid.00000000000BfReturns the value as a primitive type.00000000000AoReturns the current hash value.000::CmReturns the value that was used to construct this divisor \xe2\x80\xa60DkGet mutable access to the contents of a shared <code>UnsafePinned</code>\xe2\x80\xa6CnReturns a shared reference to the output at this location, \xe2\x80\xa6800BnCreate a resampler with the given definitions.BkGets a reference to the value in the entry.0BlReturns a reference to this entry\xe2\x80\x99s value.1CiGets a reference to the value that would be used when \xe2\x80\xa62DgReturns a <code>TimeZone</code> corresponding to the IANA time zone \xe2\x80\xa6CnA convenience function for performing a time zone database \xe2\x80\xa6DcProvide an immutable borrow of the value <code>T</code> without \xe2\x80\xa60ClGain access to the inner value by giving proof of having \xe2\x80\xa6DgGet a reference to the contained value, or <code>None</code> if the \xe2\x80\xa6BiReturns the <code>Ellipsis</code> object.BeReturns the <code>None</code> object.BoReturns the <code>NotImplemented</code> object.ChGets the underlying buffer from the specified python \xe2\x80\xa6BdReturns a copy of the current value.DgReturns the <code>Match</code> associated with the capture group at \xe2\x80\xa6CiReturns the start and end byte offsets of the capture \xe2\x80\xa6CcReturns the metadata that was found during probing.ClReturns a reference to the value currently stored in the \xe2\x80\xa60ClReturns a copy of the task-local value if the task-local \xe2\x80\xa6CgReturns an optional reference to an item given the key.BkGets a reference to the value in the entry.0CkReturns a reference to the value at the given index, or \xe2\x80\xa6BkReturns an optional reference to the table.CnReturn an optional reference to the value at the given the \xe2\x80\xa6CnIndex into a TOML array or map. A string index can be used \xe2\x80\xa6AmReturns the parsed key value.06AcMake a GET request.BdMake a GET request using this agent.CiReturns a reference to the value associated with the key.DhCreates a new <code>Builder</code> initialized with a GET method and \xe2\x80\xa6CiGet a reference to a type previously inserted on this \xe2\x80\xa6C`Get a reference to the first value in the entry.CnReturns a shared reference to the output at this location, \xe2\x80\xa6CjReturns a reference to the value corresponding to the key.CmReturns a reference to the value in the set, if any, that \xe2\x80\xa6>BlReturns a reference to this entry\xe2\x80\x99s value.?CiGets a reference to the value that would be used when \xe2\x80\xa64BkGets a reference to the value in the entry.201BoCast the enum to its underlying representation.BoA binding for the library <code>SDL2_gfx</code>BoReturns the group ID of the owner of this file.DkSimilar to <code>uid</code> but sets the group ID of the child process. \xe2\x80\xa61DcSimilar to <code>uid</code>, but sets the group ID of the child \xe2\x80\xa602CnThe GID part of the peer credential. This is the effective \xe2\x80\xa6BeReturns whether the attribute is set.Ak&lt; The joystick hat indexCiReturn the position of <code>hat</code> for this joystickCcConverts hexadecimal string slices to a byte array.DcRedundant constants module for the <code>i16</code> primitive type.0BbRecognizes a signed 2 byte integer1CjA signed 24-bit integer sample with an internal signed \xe2\x80\xa6BbRecognizes a signed 3 byte integerDcRedundant constants module for the <code>i32</code> primitive type.0BbRecognizes a signed 4 byte integer1DcRedundant constants module for the <code>i64</code> primitive type.0BbRecognizes a signed 8 byte integer1CmIncreases internal counter by one. Counter data is stored \xe2\x80\xa6AiReturns the inode number.0EhReturns the underlying <code>d_ino</code> field in the contained <code>dirent</code> \xe2\x80\xa610CiZeroth order of the Bessel function of the first kind \xe2\x80\xa6CkFirst order of the Bessel function of the first kind (f32).CjInteger order of the Bessel function of the first kind \xe2\x80\xa6oKey derivation.CmKDFs (Key Derivation Function) and PBKDFs (Password-Based \xe2\x80\xa6BdKey Encapsulation Mechanisms (KEMs).AgEphemeral key exchange.BjReturns a reference to this entry\xe2\x80\x99s key.0CcAdds the key part of a new entry to the map output.BeImplementations of key-based storage.ChHashable key that can be used to uniquely identify a \xe2\x80\xa6BiGets a reference to the key in the entry.CgGets a reference to the key that would be used when \xe2\x80\xa6501Ah&lt; Keyboard event dataClA key string indicating the type, meaning, or purpose of \xe2\x80\xa6BkReturns an accessor to a key\xe2\x80\x99s formattingAeReturns the entry keyBaGets a reference to the entry key010022BhReturns a reference to the entry\xe2\x80\x99s key0BiReturns a reference to the entry\xe2\x80\x99s key.<8778CjReturns the LCM between the numerator and the denominator.000A`Returns the LCM.0BjReturns the number of elements in the map.BcDetermines the length of this list.BfReturns the length of the binary heap.BjReturns the number of elements in the set.BiReturns the number of destaqued elements.4BgReturns the number of stacked elements.BnReturns the length of this <code>OsStr</code>.BkReturns the length of a non-null raw slice.4CbReturns the length of the <code>LinkedList</code>.BlReturns the number of elements in the deque.CfReturns the number of elements in the vector, also \xe2\x80\xa6EgReturns the length of this <code>String</code>, in bytes, not <code>char</code>s or \xe2\x80\xa6ClReturns the size of the file, in bytes, this metadata is \xe2\x80\xa6CdReturns the number of occupied slots in the hashmap.CcReturns the exact remaining length of the iterator.0000000BjReturns the count of initialized elements.BcReturns total length of all slices.AeReturns array length.BbReturns 1 (length of single byte).AeReturns slice length.AiReturns L (array length).AdReturns byte length.BjReturns total length of all string slices.AkReturns the current length.BkReturns the current string length in bytes.BgReturns the size of the file, in bytes.CkReturns the length in days of the current month, taking \xe2\x80\xa6<<<<<<<<<<<<<<AlReturns the length in bytes.00CcReturns the number of elements in this SIMD vector.CdReturns the length of the filled part of the buffer.CfReturns the number of elements in the vector, also \xe2\x80\xa60CiReturns the length of this <code>String</code>, in bytes.BmReturns the number of messages in the channelBnReturns the number of messages in the channel.BlReturns the number of elements in the table.B`Return the length of the object.0000000000000000000000000000000000000BgReturn the length of the password hash.1111AoReturns the length of the list.BnReturns the length of the sequence or mapping.BaGets the length of the bytearray.BmReturn the number of items in the dictionary.BgReturns the number of items in the set.4BmReturns the number of objects in the mapping.BjReturns the number of objects in sequence.2AmGets the length of the tuple.654372130CkProduces an exact count of how many items this iterator \xe2\x80\xa60CmReturns the total number of capture groups. This includes \xe2\x80\xa6BlReturns the length, in bytes, of this match.ClReturns the total number of capture groups (even if they \xe2\x80\xa6CdReturns the number of sounds currently in the queue.0Bd&lt; Length of original audio bufferBhGets the stream\xe2\x80\x99s total size in bytes.BcGets the number of written samples.0BnReturns the number of messages in the channel.0BdReturns the number of queued values.CjReturns the number of messages that were sent into the \xe2\x80\xa6DbReturns the number of tasks currently in the <code>JoinSet</code>.BeReturns the number of nonempty items.BiReturns the length of the underlying Vec.ChReturns the length of the underlying Vec. To get the \xe2\x80\xa6BfReturns the number of key/value pairs.CcReturns the number of non-empty items in the table.C`Returns the number of headers stored in the map.BhReturns the length of <code>self</code>.BgGet the number of extensions available.AnGets the len in bytes for self0<<BjReturns the number of elements in the map.BjReturns the number of elements in the set.BaReturns the number of used bytes.AjOscillates back and forth.AmLogs the <code>Record</code>.EbThe logarithm of <code>self</code> with respect to an arbitrary <code>base</code>.Bg(log) Outputs a message to the console.Cg<code>log</code> Logs a message at the indicated level.2ClThe logarithm of the number with respect to an arbitrary \xe2\x80\xa6AfLogging functionality.52BnThe natural logarithm of <code>x</code> (f64).6AkThe standard logging macro.CmStandard log function which takes as priority INFO and as \xe2\x80\xa6CkProduces a vector where every element has the logarithm \xe2\x80\xa6BcMACs (Message Authentication Code).CkMaps the inner value to another type using the provided \xe2\x80\xa6DbMakes a new <code>Ref</code> for a component of the borrowed data.DiMakes a new <code>RefMut</code> for a component of the borrowed data, \xe2\x80\xa6ClTakes a closure and creates an iterator which calls that \xe2\x80\xa60000000DiMakes a <code>MappedMutexGuard</code> for a component of the borrowed \xe2\x80\xa6DeMakes a <code>MappedRwLockReadGuard</code> for a component of the \xe2\x80\xa6DfMakes a <code>MappedRwLockWriteGuard</code> for a component of the \xe2\x80\xa6FaMaps a <code>Bound&lt;T&gt;</code> to a <code>Bound&lt;U&gt;</code> by applying a function to \xe2\x80\xa6FdMaps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a \xe2\x80\xa6FdMaps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;U, E&gt;</code> by applying a function \xe2\x80\xa6EoMaps a <code>Poll&lt;T&gt;</code> to <code>Poll&lt;U&gt;</code> by applying a function to a \xe2\x80\xa677777777777777jGame maps.D`Apply the function <code>f</code> to each channel of this pixel.BoReturns the custom channel map for this layout.CfThis member must be used when the channel order is \xe2\x80\xa6DhMap <code>f</code> over the contained value and return the result in theCkTransforms an input value to an output value using this \xe2\x80\xa6DjApplies <code>map_op</code> to each item of this iterator, producing a \xe2\x80\xa60l&lt; PrivateDkMakes a new <code>MappedMutexGuard</code> for a component of the locked \xe2\x80\xa6DiMakes a new <code>OwnedMappedMutexGuard</code> for a component of the \xe2\x80\xa610DhMakes a new <code>OwnedRwLockReadGuard</code> for a component of the \xe2\x80\xa6DkMakes a new <code>OwnedRwLockMappedWriteGuard</code> for a component of \xe2\x80\xa60DjMakes a new <code>RwLockReadGuard</code> for a component of the locked \xe2\x80\xa6DjMakes a new <code>RwLockMappedWriteGuard</code> for a component of the \xe2\x80\xa60CjConsumes the request returning a new request with body \xe2\x80\xa6ClConsumes the response returning a new response with body \xe2\x80\xa6BkMaps a function over the output of a parser0EaMaps a <code>Needed</code> to <code>Needed</code> by applying a function to a \xe2\x80\xa6BmApplies the given function to the inner errorDiMakes a <code>MappedMutexGuard</code> for a component of the borrowed \xe2\x80\xa6DeMakes a <code>MappedRwLockReadGuard</code> for a component of the \xe2\x80\xa6DfMakes a <code>MappedRwLockWriteGuard</code> for a component of the \xe2\x80\xa6221010BgReturns the most verbose logging level.BnReturns the most verbose logging level filter.EbCompares and returns the maximum between <code>self</code> and <code>other</code>.0000000EdCompares and returns the <em>total ordered</em> maximum between <code>self</code>\xe2\x80\xa611110BoCompares and returns the maximum of two values.0000000BkReturns the maximum element of an iterator.000000000000000000000DmThe maximum between itself and <code>other</code>, ignoring <code>NaN</code>.222222222222222Bg&lt; maximum valid value for the optionBiReturn the maximum value of the iterable.DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6CmComputes the maximum of all the items in the iterator. If \xe2\x80\xa60ChReturns the maximum temperature of the component (in \xe2\x80\xa6CnCalculates the lanewise maximum of both vectors. This doesn\xe2\x80\xa6CnCalculates the lanewise maximum of both vectors. If either \xe2\x80\xa6009BlFinalizes and returns the computed MD5 hash.AbMemory management.BhBasic functions for dealing with memory.00EbCompares and returns the minimum between <code>self</code> and <code>other</code>.00000EdCompares and returns the <em>total ordered</em> minimum between <code>self</code>\xe2\x80\xa61111011BoCompares and returns the minimum of two values.0000000BkReturns the minimum element of an iterator.000000000000000000000D`The minimum between itself and other, ignoring <code>NaN</code>.222222222222222Bg&lt; minimum valid value for the optionBiReturn the minimum value of the iterable.>CmComputes the minimum of all the items in the iterator. If \xe2\x80\xa60CnCalculates the lanewise minimum of both vectors. If either \xe2\x80\xa60006BlRustc internal tooling for hand-writing MIR.B`Macro for generating custom MIR.1010ClSets how much dry (unprocessed) signal should be blended \xe2\x80\xa6ClHow much dry (unprocessed) signal should be blended with \xe2\x80\xa61101010BcMixes this source with another one.0CaReturn the method resolution order for this type.0Cb&lt; driver dependent data, defined in SDL_syswm.hCiReturns the Maximum Transfer Unit (MTU) of the interface.BfPerforms the <code>*</code> operation.ClComputes the matrix product (R \xc3\x97 C) * (C \xc3\x97 C2) = (R \xc3\x97 \xe2\x80\xa60000000111BcComputes <code>self * other</code>.002AbNatural languages.BlPerforms the unary <code>-</code> operation.ClNegates the current value, and sets the new value to the \xe2\x80\xa600000000000111AnComputes the negative of self.02AiNetworking functionality.BkNetworking primitives for IP communication.0BmTCP/UDP/Unix bindings for <code>tokio</code>.C`Networking primitives for TCP/UDP communication.BgUnix-specific networking functionality.BhLinux-specific networking functionality.EoCreates a new <code>Mismatch</code> with the specified <code>need</code> and <code>have</code>.BkConstructs a new <code>Arc&lt;T&gt;</code>.DoConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. \xe2\x80\xa6DiCreates a new <code>TypeResource</code> instance with the given inner \xe2\x80\xa6BbCreates a new <code>Atomic</code>.DgA constructor with the given <code>state</code> and <code>value</code>.DgA constructor with the given <code>value</code> and <code>quant</code>.BfCreates an empty <code>HashMap</code>.DdAllocates memory on the heap and then places <code>x</code> into it.BfCreates a new <code>AtomicBool</code>.BeCreates a new <code>AtomicPtr</code>.AmCreates a new atomic integer.0000AjCreates a new, empty list.CgCreates an empty <code>BinaryHeap</code> as a max-heap.2CbCreates a non-zero if the given value is not zero.33DmReturns a new <code>Array</code> from the given primitive <code>array</code>.AkCreates a new atomic float.55055EcCreates a new interval with the given <code>lower</code> and <code>upper</code> \xe2\x80\xa6BfCreates an empty <code>HashSet</code>.CnReturns an empty destaque, allocated in the stack, cloning \xe2\x80\xa6CmReturns an empty destaque, allocated in the heap, cloning \xe2\x80\xa6BiMakes a new, empty <code>BTreeMap</code>.CkReturns an empty stack, allocated in the stack, cloning \xe2\x80\xa6CjReturns an empty stack, allocated in the heap, cloning \xe2\x80\xa6DdCreates a new <code>IdPin</code> with a unique stack memory address.BmConstructs a new empty <code>OsString</code>.AoConstructs a new (empty) queue.BiCoerces into an <code>OsStr</code> slice.AoConstructs a new (empty) stack.AlConstruct a stack-based DST.DcCreates a new <code>NonNull</code> if <code>ptr</code> is non-null.AoNew <code>Rgb&lt;u8&gt;</code>.AgNew <code>Rgba8</code>.B`New <code>Rgb&lt;u16&gt;</code>.BaNew <code>Rgba&lt;u16&gt;</code>.EaCreates a new <code>BufReader&lt;R&gt;</code> with a default buffer capacity. \xe2\x80\xa6EaCreates a new <code>BufWriter&lt;W&gt;</code> with a default buffer capacity. \xe2\x80\xa6BfCreates a new <code>LineWriter</code>.CnCreates a new I/O error from a known kind of error as well \xe2\x80\xa6BiMakes a new, empty <code>BTreeSet</code>.CdConstructs a new Distance from the given dimensions.CbConstructs a new Extent from the given dimensions.CdConstructs a new Position from the given dimensions.ClCreates a new <code>IoSliceMut</code> wrapping a byte slice.DkReturns a new <code>Vector</code> from the given <code>coords</code> array.DoReturns a new <code>VecVector</code> from the given <code>coords</code> vector.DjReturns a new <code>Point</code> from the given <code>coords</code> array.BiCreates an empty <code>LinkedList</code>.AgCreates an empty deque.DhCreates a new <code>BareBox</code> storage for the given <code>t</code>.ChCreates a new lazy value with the given initializing \xe2\x80\xa6BaCreates a new uninitialized cell.CkCreates a new <code>Cell</code> containing the given value.BjConstructs a new <code>Rc&lt;T&gt;</code>.DaCreates a new <code>RefCell</code> containing <code>value</code>.CoReturns a new <code>LinuxSigaction</code> for a simple handler.BhAllocates an empty <code>PathBuf</code>.DhConstructs a new instance of <code>UnsafeCell</code> which will wrap \xe2\x80\xa6CkDirectly wraps a string slice as a <code>Path</code> slice.DoConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. \xe2\x80\xa6DkConstructs a new <code>Command</code> for launching the program at path \xe2\x80\xa6CiCreates a new condition variable which is ready to be \xe2\x80\xa6CgCreates a new mutex in an unlocked state ready for use.BfCreates a new <code>Once</code> value.DlCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.BcCreates a <code>PoisonError</code>.CjCreates a new barrier that can block a given number of \xe2\x80\xa6ChCreates a new lazy value with the given initializing \xe2\x80\xa6BaCreates a new uninitialized cell.BnCreates a new <code>CodecBe</code> combinator.BnCreates a new <code>CodecLe</code> combinator.CbConstructs a new, empty <code>Vec&lt;T&gt;</code>.BnCreates a new <code>CodecIf</code> combinator.DkCreates a new <code>CodecFlags</code> combinator from 8 <code>bool</code>s.DeCreates a new <code>CodecJoin</code> combinator, without a separator.CkGenerates the base configuration for spawning a thread, \xe2\x80\xa6CiCreates a new C-compatible string from a container of \xe2\x80\xa6BdCreates a new <code>CodecLen</code>.AmCreates a new TLV combinator.BhCreates a new empty <code>String</code>.CiReturns a new <code>Base</code> with the chosen generics.CkCreates a blank new set of options ready for configuration.CgCreates a new <code>FileTimes</code> with no times set.CkCreates a new set of options with default mode/security \xe2\x80\xa6DfConstructs a new <code>RandomState</code> that is initialized with \xe2\x80\xa6AlReturns a default Fx hasher.00CiCreates a new cursor wrapping the provided underlying \xe2\x80\xa6CkConstructs a new static map with runtime EMPTY and TOMB \xe2\x80\xa6CiCreates a new <code>IoSlice</code> wrapping a byte slice.BhReturns a new uninitialized empty array.C`Creates a new chunk containing a single element.DaCreates a new <code>IdPinBox</code> with a unique memory address.CeReturns a new up-to-date <code>WebWindowState</code>.DbCreates a new formatter with given <code>FormattingOptions</code>.CeConstructs a new gamma curve with the given exponent.CbNew <code>Luminance</code> with the given channel.00CkCreates a new BuildHasherDefault for Hasher <code>H</code>.B`New <code>Rgb&lt;u16&gt;</code>.AhNew <code>RgbF64</code>.AoNew <code>Rgb&lt;u8&gt;</code>.AgNew <code>Rgba8</code>.2BaNew <code>Rgba&lt;u16&gt;</code>.BaInitializes a line-drawing state.BbReturns a new empty sixel builder.CfReturns a new matrix with the given <code>data</code>.0000000DiReturns new <code>Points</code> from the given <code>coords</code> array.BmCreates a new <code>Ratio&lt;N, D&gt;</code>.DiReturns a seeded <code>XorShift128+</code> generator from the given 2 \xe2\x80\xa6EdCreates a new <code>Waker</code> from the provided <code>data</code> pointer and \xe2\x80\xa6ChCreates a new wavelet component of a specified type, \xe2\x80\xa6CmCreates a new <code>AppConfig</code> if all fields are valid.BhCreates a new Xdg directory environment.BiCreates a new Unix directory environment.BjCreates a new Apple directory environment.BlCreates a new Windows directory environment.DlCreates a new <code>BumpAlloc</code> from <code>start..end</code> addresses.CfPads and aligns a value to the length of a cache line.DcCreates a new <code>FatPtr</code> from a data pointer and metadata.CiCreates a new <em>current guard</em> for the given value.CjCreates a new <code>Current&lt;T&gt;</code> marker object.EdReturns a new <code>LinuxTimespec</code> with the given <code>seconds</code> and \xe2\x80\xa6BmCreates a new empty <code>StringNonul</code>.cWIPDhCreates a new <code>AnsiColor8b</code> from an <code>AnsiColor3b</code>.AlReturns a new empty manager.BlCreates a new spinlock with the given value.CiReturns an uninitialized pixel-? stage with the given \xe2\x80\xa6BlCreates a new <code>CrosstermService</code>.EdCreates a new empty <code>StringU8</code> with a capacity of <code>CAP</code> bytes.AkReturns a new empty struct.DlReturns a <code>FsPath</code> from what could\xe2\x80\x99ve been a <code>Path</code>.DgCreates a new <code>TimeDelta</code> from the given number of whole \xe2\x80\xa6BeReturns a new <code>TimeSplit</code>.DhReturns a new <code>UnixTimeI64</code> from the given amount of seconds.DhReturns a new <code>UnixTimeU32</code> from the given amount of seconds.CnCreates a new <code>Lgc16</code> instance with the given seed.DcCreates a new Xoroshiro128++ PRNG with the given <code>seed</code>.DfReturns a seeded <code>Xyza8a</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DfReturns a seeded <code>Xyza8b</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DjReturns a seeded <code>Xabc</code> generator from the given 3 \xc3\x97 8-bit \xe2\x80\xa6DkReturns a seeded <code>XorShift128</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DeReturns a seeded <code>XorShift16</code> generator from the given \xe2\x80\xa6DeReturns a seeded <code>XorShift32</code> generator from the given \xe2\x80\xa6DeReturns a seeded <code>XorShift64</code> generator from the given \xe2\x80\xa6DjReturns a seeded <code>XorShift8</code> generator from the given 8-bit \xe2\x80\xa6EhReturns a <code>NonValueUsize</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EhReturns a <code>NonValueIsize</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EgReturns a <code>NonValueI128</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EfReturns a <code>NonValueI64</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EfReturns a <code>NonValueI32</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EfReturns a <code>NonValueI16</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EeReturns a <code>NonValueI8</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EgReturns a <code>NonValueU128</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EfReturns a <code>NonValueU64</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EfReturns a <code>NonValueU32</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EfReturns a <code>NonValueU16</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EeReturns a <code>NonValueU8</code> with the given <code>value</code>, if it is not \xe2\x80\xa6AdCreates a new angle.CgConstructs a new Orientation from the given dimensions.CbConstructs a new Stride from the given dimensions.EgReturns a new <code>Region</code> from a <code>pos</code>ition and a <code>size</code>.AhNew <code>RgbF64</code>.0AoReturns a default pengy hasher.AmReturns a default FNV hasher.000BdWrap a value to be manually dropped.DnCreates a new <code>MaybeUninit&lt;T&gt;</code> initialized with the given \xe2\x80\xa6ChCreates a new inclusive range. Equivalent to writing \xe2\x80\xa6CiCreates a new iterator over the given <code>array</code>.CfCreates a new IPv4 address from four eight-bit octets.CfCreates a new IPv6 address from eight 16-bit segments.CnCreates a new socket address from an IP address and a port \xe2\x80\xa6DhCreates a new socket address from an <code>IPv4</code> address and a \xe2\x80\xa6DeCreates a new socket address from an <code>IPv6</code> address, a \xe2\x80\xa6EaConstructs a new <code>Pin&lt;Ptr&gt;</code> around a pointer to some data of \xe2\x80\xa6DjCreates a new <code>Duration</code> from the specified number of whole \xe2\x80\xa6EgCreates a new <code>RawWaker</code> from the provided <code>data</code> pointer and \xe2\x80\xa6FbCreates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>,EeConstructs a <code>Layout</code> suitable for holding a value of type <code>T</code>.CmConstructs a scope guard with a boolean state (defaulting \xe2\x80\xa6BhConstructs a new <code>GcdReturn</code>.CnCreates a divisor which can be used for faster computation \xe2\x80\xa60BoCreates a new empty <code>GraphemeNonul</code>.BlCreates a new empty <code>GraphemeU8</code>.BnCreates a new empty extended grapheme cluster.AlInitializes internal buffer.EfConstruct a new <code>FormatterBuilder</code> with the supplied <code>Write</code> \xe2\x80\xa6DhCreates a new <code>SipHasher</code> with the two initial keys set to 0.CaConstructs a new instance of the variance marker.00000DjConstructs a new instance of <code>UnsafePinned</code> which will wrap \xe2\x80\xa6FeCreates an <code>Alignment</code> from a <code>usize</code>, or returns <code>None</code> if it\xe2\x80\x99\xe2\x80\xa6BiWrap a value in an <code>Exclusive</code>BfCreates a new <code>AtomicBool</code>.BeCreates a new <code>AtomicPtr</code>.AmCreates a new atomic integer.000000000C`Create a new instance of <code>DropGuard</code>.DgConstructs a new instance of <code>SyncUnsafeCell</code> which will \xe2\x80\xa6EeCreates a new <code>LocalWaker</code> from the provided <code>data</code> pointer \xe2\x80\xa6DbCreates a <code>ByteStr</code> slice from anything that can be \xe2\x80\xa6DeCreates a new <code>Frames</code> from an implementation specific \xe2\x80\xa6BiConstructs a new frame without any delay.CbCreate a new image reader without a preset format.DjCreates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.CkCreates a dynamic image backed by a buffer depending on \xe2\x80\xa6CmConstruct a new subimage The coordinates set the position \xe2\x80\xa6DkCreate an <code>EncodingError</code> that stems from an arbitrary error \xe2\x80\xa6DjCreate a <code>DecodingError</code> that stems from an arbitrary error \xe2\x80\xa6DcCreate a new decoder that decodes from the stream <code>read</code>D`Create new <code>PnmEncoder</code> from the <code>writer</code>.DaCreates a new decoder that decodes from the stream <code>r</code>CmCreate a new encoder that writes its output to <code>w</code>D`Create a new decoder that decodes from the stream <code>r</code>1CbConstructs a new, empty <code>Vec&lt;T&gt;</code>.DdAllocates memory on the heap and then places <code>x</code> into it.BlConstruct a new arena to bump allocate into.BhCreates a new <code>ContentStyle</code>.BiCreates a new <code>StyledContent</code>.CjAllocates a new set of codec parameters set to default \xe2\x80\xa6CjCreates a layout instance. This requires the direction \xe2\x80\xa6DeCreate builder with default settings. Use <code>build()</code> to \xe2\x80\xa6EgCreates new <code>Gilrs</code> with default settings. See <code>GilrsBuilder</code> \xe2\x80\xa6BaCreates new <code>Mapping</code>.BdCreates new event with current time.CmCreates new builder with following defaults: no gamepads, \xe2\x80\xa6DbCreates new <code>Repeat</code> filter with threshold set to 0.01.FeCreates new <code>Repeat</code> filter with <code>after</code> set to 500ms and <code>every</code>\xe2\x80\xa6BhCreates an empty <code>HashTable</code>.DfCreates a new <code>SignedDuration</code> from the given number of \xe2\x80\xa6ClCreate a new default configuration for rounding a signed \xe2\x80\xa6CmCreates a new span representing a zero duration. That is, \xe2\x80\xa6CnCreate a new default configuration for rounding a span via \xe2\x80\xa6CiCreates a new instant in time represented as a timestamp.CmCreate a new default configuration for computing the span \xe2\x80\xa6DkCreate a new default configuration for rounding a <code>Timestamp</code>\xe2\x80\xa6DgCreates a new <code>Zoned</code> value from a specific instant in a \xe2\x80\xa62DeCreate a new default configuration for rounding a <code>Zoned</code>.ChCreates a new parser for the \xe2\x80\x9cfriendly\xe2\x80\x9d duration \xe2\x80\xa6CiCreates a new printer for the \xe2\x80\x9cfriendly\xe2\x80\x9d duration \xe2\x80\xa6CjCreate a new RFC 2822 datetime parser with the default \xe2\x80\xa6CkCreate a new RFC 2822 datetime printer with the default \xe2\x80\xa6DnCreate a new default <code>Config</code> that uses <code>DefaultCustom</code>.CdCreate a new instance of this default customization.CbCreate a new instance of this POSIX customization.CjCreate a new Temporal datetime parser with the default \xe2\x80\xa6CkCreate a new Temporal datetime printer with the default \xe2\x80\xa60CgCreate a new Temporal span printer with the default \xe2\x80\xa6DhCreates a new <code>Date</code> value from its component year, month \xe2\x80\xa6>DfCreates a new <code>DateTime</code> value from its component year, \xe2\x80\xa6?DhCreate a new default configuration for rounding a <code>DateTime</code>.CeCreate a new ISO week date from it constituent parts.DjCreates a new <code>Time</code> value from its component hour, minute, \xe2\x80\xa6CmCreate a new default configuration for computing the span \xe2\x80\xa6DdCreate a new default configuration for rounding a <code>Time</code>.CjCreate a new default configuration for rounding a time \xe2\x80\xa6BhCreates a new <code>AudioManager</code>.CeCreates a frame with the given left and right values.DhCreates a new <code>Parameter</code> with an initial <code>Value</code>.BkCreates a new <code>MockInfoBuilder</code>.DcCreates a new <code>StaticSoundSettings</code> with the default \xe2\x80\xa6DfCreates a new <code>StreamingSoundSettings</code> with the default \xe2\x80\xa6DcCreates a new <code>FilterBuilder</code> with the default settings.DbCreates a new <code>DelayBuilder</code> with the default settings.DgCreates a new <code>CompressorBuilder</code> with the default settings.DgCreates a new <code>DistortionBuilder</code> with the default settings.BkCreates a new <code>EqFilterBuilder</code>.DcCreates a new <code>ReverbBuilder</code> with the default settings.C`Creates a new <code>VolumeControlBuilder</code>.D`Creates a new <code>LfoBuilder</code> with the default settings.DfCreates a new <code>MainTrackBuilder</code> with the default settings.DfCreates a new <code>SendTrackBuilder</code> with the default settings.DbCreates a new <code>TrackBuilder</code> with the default settings.DcCreates a new <code>SpatialTrackBuilder</code> with the default \xe2\x80\xa6BiConstruct new <code>RecordBuilder</code>.BmConstruct a new <code>MetadataBuilder</code>.CjReturns an iterator over all occurrences of the needle \xe2\x80\xa600ClCreate a new searcher that finds occurrences of the byte \xe2\x80\xa6CkCreate a new searcher that finds occurrences of the two \xe2\x80\xa6CmCreate a new searcher that finds occurrences of the three \xe2\x80\xa6CjCreate a new Rabin-Karp forward searcher for the given \xe2\x80\xa6CjCreate a new Rabin-Karp reverse searcher for the given \xe2\x80\xa6CjCreate a new prefilter that reports possible locations \xe2\x80\xa6CcCreate a new pair of offsets from the given needle.CiCreate a searcher that finds occurrences of the given \xe2\x80\xa60DkCreate a new Shift-Or forward searcher for the given <code>needle</code>\xe2\x80\xa6CnCreate a new searcher that finds occurrences of the needle \xe2\x80\xa600CiCreate a new pair searcher. The searcher returned can \xe2\x80\xa61110BiCreate a new finder for the given needle.CaCreate a new reverse finder for the given needle.CbCreate a new finder builder with default settings.DhCreates a new <code>MidiInput</code> object that is required for any \xe2\x80\xa6DiCreates a new <code>MidiOutput</code> object that is required for any \xe2\x80\xa6BhInitialize a <code>Sha512</code> struct.BhInitialize a <code>Sha256</code> struct.BhInitialize a <code>Sha384</code> struct.BjInitialize a <code>Sha3_224</code> struct.BjInitialize a <code>Sha3_256</code> struct.BjInitialize a <code>Sha3_384</code> struct.BjInitialize a <code>Sha3_512</code> struct.BjInitialize a <code>Shake128</code> struct.BjInitialize a <code>Shake256</code> struct.DfInitialize a <code>Blake2b</code> struct with a given size (in bytes).DiInitialize a <code>StreamXChaCha20Poly1305</code> struct with a given \xe2\x80\xa6DiInitialize a <code>Blake2b</code> struct with a given size (in bytes) \xe2\x80\xa6CkInitialize <code>HmacSha512</code> struct with a given key.CkInitialize <code>HmacSha256</code> struct with a given key.CkInitialize <code>HmacSha384</code> struct with a given key.DdInitialize a <code>Poly1305</code> struct with a given one-time key.CoInitialize a <code>StreamSealer</code> struct with a given key.DfInitialize a <code>StreamOpener</code> struct with a given key and \xe2\x80\xa6AoGenerate a new random key pair.0BkCreates a new PyErr of type <code>T</code>.EjCreates a new instance <code>Bound&lt;T&gt;</code> of a <code>#[pyclass]</code> on the \xe2\x80\xa6EnCreates a new instance <code>Py&lt;T&gt;</code> of a <code>#[pyclass]</code> on the Python \xe2\x80\xa6DkConstructs a new initializer from value <code>T</code> and base class\xe2\x80\x99\xe2\x80\xa6DgCreate a new <code>PyDowncastError</code> representing a failure to \xe2\x80\xa6DiCreate a new <code>DowncastIntoError</code> representing a failure to \xe2\x80\xa6CfPlace the given value under the protection of the GIL.DeCreate a <code>GILOnceCell</code> which does not yet contain a value.DoDepending on <code>val</code>, returns <code>true</code> or <code>false</code>.BfCreates a new Python bytearray object.CmCreates a new Python bytestring object. The bytestring is \xe2\x80\xa6DcConstructs a new capsule whose contents are <code>value</code>, \xe2\x80\xa6BiCreates a new <code>datetime.date</code>.CdCreates a new <code>datetime.datetime</code> object.C`Creates a new <code>datetime.time</code> object.BeCreates a new <code>timedelta</code>.AoCreates a new empty dictionary.BoCreates a new Python <code>float</code> object.DfCreate a new <code>FrozenSetBuilder</code>. Since this allocates a \xe2\x80\xa6AhCreates a new frozenset.ChCreate a new built-in function which takes no arguments.BiCreates a new Python GenericAlias object.BnConstructs a new list with the given elements.BfCreates a mappingproxy from an object.DhCreates a new module object with the <code>__name__</code> attribute \xe2\x80\xa6B`Creates a new Python int object.ChConstructs a new super object. More read about super \xe2\x80\xa6DhCreates a new Python <code>range</code> object with a default step of 1.CeCreates a new set with elements from the given slice.BoConstructs a new slice with the given elements.BcCreates a new Python string object.BoConstructs a new tuple with the given elements.AjCreates a new type object.CoConstructs a new Weak Reference (<code>weakref.proxy</code>/\xe2\x80\xa6CmConstructs a new Weak Reference (<code>weakref.ref</code>/\xe2\x80\xa6BjCreates a new <code>PySliceIndices</code>.CaCreates a Python <code>UnicodeDecodeError</code>.DhCreate a new <code>BlockRng</code> from an existing RNG implementing \xe2\x80\xa60BiCreate a new <code>CpuId</code> instance.CmDeprecated in favor of <code>ThreadPoolBuilder::build</code>.CnCreates and returns a valid rayon thread pool builder, but \xe2\x80\xa6CkCompiles a regular expression. Once compiled, it can be \xe2\x80\xa6CmCreate a new builder with a default configuration for the \xe2\x80\xa6AoBuilds a new <code>Sink</code>.BkBuilds a new decoder with default settings.BhBuilds a new <code>SamplesBuffer</code>.CmCreate an empty source that executes a callback function. \xe2\x80\xa6CjWrap the input source and make it mono. Play that mono \xe2\x80\xa6ClWhen the inner source is empty the AtomicUsize passed in \xe2\x80\xa6CfAn empty source that immediately ends without ever \xe2\x80\xa6BoCreates new limit settings with default values.AjThe frequency of the sine.DfCreate a new <code>SignalGenerator</code> object that generates an \xe2\x80\xa61DfBuilds a new <code>SpatialSink</code>, beginning playback on a stream.22DkWrap a <code>Source</code> and lazily convert its samples to a specific \xe2\x80\xa6CjCreate a new source that never ends and produces total \xe2\x80\xa6AiInitializes the iterator.AgBuilds a new converter.BaCreate new sample rate converter.CdCreates a new decoder builder with default settings.BnBuilds a new <code>StaticSamplesBuffer</code>.BmInitializes a new <code>WindowBuilder</code>.CkCreate a palette structure with the specified number of \xe2\x80\xa6BkCreates a new surface using a pixel format.CiCreates a new rectangle from the given values with an \xe2\x80\xa6BoCreates a new point from the given coordinates.CiCreates a new rectangle with float precision from the \xe2\x80\xa61BmInitializes a new <code>CanvasBuilder</code>.AmCreate the framerate manager.CiCreate a new borrowed deserializer from the given string.BoCreate a new deserializer from the given bytes.CnCreate a new borrowed deserializer from the given borrowed \xe2\x80\xa6CiConstruct a new <code>MapDeserializer&lt;I, E&gt;</code>.CiConstruct a new <code>SeqDeserializer&lt;I, E&gt;</code>.ClConstruct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.ClConstruct a new <code>MapAccessDeserializer&lt;A&gt;</code>.CmConstruct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.DbInstantiates the <code>MetadataReader</code> with the provided \xe2\x80\xa6AnCreate a new <code>Tag</code>.BoInstantiate a new <code>MetadataBuilder</code>.DjInstantiate a new <code>SampleBuffer</code> using the specified signal \xe2\x80\xa6DfInstantiate a new <code>RawSampleBuffer</code> using the specified \xe2\x80\xa6DiInstantiate a new <code>AudioBuffer</code> using the specified signal \xe2\x80\xa6DbInstantiate a new <code>BitStreamLtr</code> with the given source.DbInstantiate a new <code>BitReaderLtr</code> with the given buffer.DbInstantiate a new <code>BitStreamRtl</code> with the given buffer.DbInstantiate a new <code>BitReaderRtl</code> with the given buffer.DbInstantiate a new <code>BufReader</code> with a given byte buffer.DkInstantiates a new <code>ScopedStream</code> with an upper limit on the \xe2\x80\xa6DoInstantiates a new <code>ReadOnlySource&lt;R&gt;</code> by taking ownership \xe2\x80\xa6C`Instantiates a new <code>CodebookBuilder</code>.AlCreate a new complex number.BlInstantiate a N-point IMDCT with no scaling.BgInstantiate an empty <code>Hint</code>.DjCreates a new <code>TimeBase</code>. Panics if either the numerator or \xe2\x80\xa6DdInstantiate a <code>Crc16Ansi</code> instance with an initial state.DfInstantiate a <code>Crc16AnsiLe</code> instance with an initial state.DaInstantiates a <code>Crc32</code> instance with an initial state.DdInstantiate a <code>Crc8Ccitt</code> instance with an initial state.BfCreate an empty <code>SeekIndex</code>BmInstantiate a new <code>CodecRegistry</code>.CaCreates a new empty <code>Components</code> type.BlCreates a new empty <code>Disks</code> type.BoCreates a new empty <code>Networks</code> type.CoCreates a new <code>System</code> instance with nothing loaded.ClCreates a new instance of the <code>Motherboard</code> type.BlCreates a new empty <code>Users</code> type.BmCreates a new empty <code>Groups</code> type.CmCreates a new runtime instance with default configuration \xe2\x80\xa6CfCreates a new lock in an unlocked state ready for use.DlCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.CcCreates a new empty <code>OnceCell</code> instance.CbCreates a new empty <code>SetOnce</code> instance.CjCreates a new barrier that can block a given number of \xe2\x80\xa6CoCreate a new <code>Notify</code>, initialized without a permit.CkCreates a new semaphore with the initial number of permits.CoCreates the sending-half of the <code>broadcast</code> channel.CkCreates the sending-half of the <code>watch</code> channel.DcCreates a new <code>ReadBuf</code> from a fully initialized buffer.DhCreates a new <code>BufWriter</code> with a default buffer capacity. \xe2\x80\xa6DgWraps a type in both <code>BufWriter</code> and <code>BufReader</code>.DhCreates a new <code>BufReader</code> with a default buffer capacity. \xe2\x80\xa6DkConstructs a new <code>Command</code> for launching the program at path \xe2\x80\xa6BbCreate a new <code>JoinSet</code>.AmReturns a new local task set.BbCreate an empty <code>Array</code>BaCreates an empty array of tables.AiCreates an empty document0AgCreates an empty table.AfCreate a new table keyAgDefault-formatted valueCeCreates a new decor from the given prefix and suffix.3CbCreates a new serializer generate a TOML document.CjCreate a new cursor. The string and initial offset are \xe2\x80\xa6AjCreate a proxy from a uri.BgCreate an empty <code>HeaderMap</code>.CfCreates a new blank <code>Request</code> with the bodyCgCreates a new blank <code>Response</code> with the bodyBhCreate an empty <code>Extensions</code>.DiCreates a new default instance of <code>Builder</code> to construct a \xe2\x80\xa60DgCreates a new default instance of <code>Builder</code> to construct \xe2\x80\xa6AeCreates a new adapterAdCreate a new buffer.AlCreates a default connector.BgMake a stream out of a byte slice-like.0BfWrap another Stream with span trackingAfCreate a partial inputEeCreates <code>Needed</code> instance, returns <code>Needed::Unknown</code> if the \xe2\x80\xa6AeCreate an empty errorAmMake a stream to parse tokensBiCreates a new <code>DefaultHasher</code>.ClCreates a new re-entrant lock in an unlocked state ready \xe2\x80\xa6CgCreates a new mutex in an unlocked state ready for use.DlCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.CfCreates a new <code>Report</code> from an input error.BfCreates an empty <code>HashMap</code>.BfCreates an empty <code>HashSet</code>.BaCreates a Unix credential struct.C`Creates an ancillary data with the given buffer.BkConstructs a new <code>Arc&lt;T&gt;</code>.DoConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. \xe2\x80\xa6BeCreates a new <code>UniqueArc</code>.DiMoves a type to the heap with its <code>Metadata</code> stored in the \xe2\x80\xa6BdCreates a new <code>UniqueRc</code>.DbReturns the appropriate variant from the given <code>value</code>.ChGenerates some unique <code>ExampleIdSeqUsize</code> ID.B`Drops the next of stack element.BlPerforms the unary <code>!</code> operation.CjNot a direct intrinsic, but it\xe2\x80\x99s very useful and the \xe2\x80\xa600000BgLogical \xe2\x80\x9cnot\xe2\x80\x9d with a boolean value.CmLogical negates the current value, and sets the new value \xe2\x80\xa600000000000DeApplies the <code>not</code> operation, (returns <code>False</code>).DdApplies the <code>not</code> operation, (returns <code>True</code>).555DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa600000000000000000000BlReturns the complement of this set of flags.0000000BnSucceeds if the child parser returns an error.8BnReturns an instant corresponding to \xe2\x80\x9cnow\xe2\x80\x9d.CcReturns the system time corresponding to \xe2\x80\x9cnow\xe2\x80\x9d.DaReturns the current instant using <code>performance.now()</code>.DfReturns a new <code>UnixTimeI64</code> anchored to the current second.DfReturns a new <code>UnixTimeU32</code> anchored to the current second.BoReturns the current system time as a timestamp.CkReturns the current system time in this system\xe2\x80\x99s time \xe2\x80\xa6mCurrent time.0EkReturns the <code>nth</code> element, or <code>None</code> if <code>nth &gt;= ARITY</code>.CeReturns the <code>n</code>th element of the iterator.0000000000000000000001CkNumerical types and math operations. num::{geom, logic, \xe2\x80\xa6B`Alias of <code>numerator</code>.0CiNumeric traits and functions for the built-in numeric \xe2\x80\xa6BiTraits for vectors with numeric elements.10n&lt; NumeratorAnNumber as retrieved from cpuidBfAdditional functionality for numerics.3oOwned referenceAoAverage load within one minute.AgOverloadable operators.000ElApply a <code>Parser</code>, producing <code>None</code> on <code>ErrMode::Backtrack</code>.AnComparing and ordering values.ClTakes a string slice and emits it to the internal buffer \xe2\x80\xa6CoHelper module for exporting the <code>pattern_type</code> macro00AkReturns the sender\xe2\x80\x99s PID.AoReturns the PID of the process.CfThe PID part of the peer credential. This field is \xe2\x80\xa6GaConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>\xe2\x80\xa6GaConstructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>\xe2\x80\xa6G`Constructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>\xe2\x80\xa6El<code>core</code> Constructs a Pin&lt;&amp;mut T&gt;, by pinning a <code>value: T</code> \xe2\x80\xa60BlTypes that pin data to a location in memory.DoConstructs a Pin&lt;&amp;mut T&gt;, by pinning a <code>value: T</code> locally.410AjPins a value on the stack.216BcDecoding and Encoding of PNG ImagesCiDecoding of netpbm image formats (pbm, pgm, ppm and pam).CgRemoves the first item (if any) from this list, and \xe2\x80\xa6CnRemoves the greatest item from the binary heap and returns \xe2\x80\xa6AkPops the top stack element.B`Pops the top item off the stack.BdRemove the last item from the slice.ChTruncates <code>self</code> to <code>self.parent</code>.CmRemoves the last element from a vector and returns it, or \xe2\x80\xa6CiRemoves the last character from the string buffer and \xe2\x80\xa6DjRemoves the last character and returns it, or <code>None</code> if the \xe2\x80\xa603221CfRemoves and returns an arbitrary element from the set.0DdIf there are newer <code>Metadata</code> revisions, advances the \xe2\x80\xa6ChRemoves the peeked value from the vector and returns it.CfRemoves the peeked value from the heap and returns it.Bk&lt; byte position in stream, -1 if unknownCbByte position of currently parsed frame in stream.Bo&lt; position in the file of the current bufferChReturns the swscale (x, y) chroma positions for this \xe2\x80\xa6AnComputes the positive of self.0B`Gets the position of the stream.DiRaises self to the power of <code>exp</code>, using exponentiation by \xe2\x80\xa600000000000000000000000ClReturns <code>x</code> to the power of <code>y</code> (f64).EhComputes <code>self ** other % modulus</code> (<code>pow(self, other, modulus)</code>\xe2\x80\xa60DdReturns <code>self</code> raised to the power of <code>other</code>.10C`Returns the raw pointer part of the fat pointer.BlManually manage memory through raw pointers.AoTraits for vectors of pointers.1010CnPresentation timestamp in time_base units (time when frame \xe2\x80\xa6CoPresentation timestamp in AVStream-&gt;time_base units; the \xe2\x80\xa6Bh&lt; Same as packet pts, in AV_TIME_BASEAcMake a PUT request.BdMake a PUT request using this agent.DhCreates a new <code>Builder</code> initialized with a PUT method and \xe2\x80\xa6C`Returns the value of the \xe2\x80\x9cram\xe2\x80\x9d refresh kind.AnReturns the underlying C Rect.AoReturns the underlying C FRect.BnReturn a copy of the internal SDL_JoystickGUIDBhGets the raw pointer to the SDL_RendererBeReturns the underlying C font object.BaAccess the raw, unparsed documentCeDeprecated for callers as of 0.7.10, instead call \xe2\x80\xa60CkCompatibility module for C platform-specific types. Use \xe2\x80\xa6CiUnix-specific primitives available on all unix platforms.BdLinux-specific raw type definitions.AbThe red component.00000000000BnSets the foreground color to <code>Red</code>.BfPerforms the <code>%</code> operation.000BcComputes <code>self % other</code>.001BcReverses an iterator\xe2\x80\x99s direction.000000000000000000000BiIterate <code>iterable</code> in reverse.CnProduces a new iterator with the elements of this iterator \xe2\x80\xa60BnWhether it\xe2\x80\x99s possible to specify rgb values.0C`Rotates the top three stack elements, clockwise.BcThe row that the event occurred on.CjResident Set Size (RSS) (in bytes) for the current cgroup.BfRuns all the coroutines to completion.CkRun the resampler from the given input to the given output.CgExecutes one or more Python statements in the given \xe2\x80\xa6CiExecutes the main loop for this thread. This will not \xe2\x80\xa6ChRun a <code>http::Request&lt;impl AsSendBody&gt;</code>.0CcRun the request with the agent in the ConfigBuilderAfObtain an SDL context.0000000BoGeneric data structure serialization framework.BfSerializing Rust structures into TOML.BhSets or initializes the contained value.0CgSets the element at the given 2D coordinates in the \xe2\x80\xa60CkInitializes the contents of the cell to <code>value</code>.AiSets the contained value.001ClAssigns a new value to the memory location pointed to by \xe2\x80\xa6BhSets the value of the specified element.GkCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is \xe2\x80\xa600ChSets the attribute. If it\xe2\x80\x99s already set, this does \xe2\x80\xa6111111111111111111ClStarts a transition from the current value to the target \xe2\x80\xa6CjStarts a transition from the current value to a target \xe2\x80\xa6AjSet the value in the cell.CkInserts or removes the specified flags depending on the \xe2\x80\xa6ClFinishes the builder and applies the GL context flags to \xe2\x80\xa61111111DiSets the value of the <code>OnceCell</code> to the given value if the \xe2\x80\xa6DhSets the value of the <code>SetOnce</code> to the given value if the \xe2\x80\xa6;;B`Returns the SGR attribute value.BmPerforms the <code>&lt;&lt;</code> operation.0BdShifts all lanes by the value given.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001BmPerforms the <code>&gt;&gt;</code> operation.01111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110AdAn array of signals.0iThe sine.000BaThe sine of <code>x</code> (f64).CmProduces a vector where every element has the sine of the \xe2\x80\xa6Hg\xe2\x9a\x96\xef\xb8\x8f Wraps the given <code>OptRes</code> <code>value</code> in a <code>Some</code><code>(</code><code>Ok</code><code>(value))</code>.0Ab&lt; source filterDk\xf0\x9d\x90\x93 <code>&amp;str</code> compile-time operations, namespaced from the \xe2\x80\xa6BgString types and related functionality.1AdString manipulation.CbUtilities for the <code>str</code> primitive type.1BnComputes the \xe2\x80\x9cstr\xe2\x80\x9d representation of self.0BcParallel iterator types for strings22BfPerforms the <code>-</code> operation.BaSubtracts from the current value.00000000000DmReturns the difference of <code>self</code> and <code>rhs</code> as a new \xe2\x80\xa6CgSubtracts an offset from a pointer (convenience for \xe2\x80\xa6FkReturns the difference of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>\xe2\x80\xa6BjSubtracts another vector from this vector.CnReturns the amount of time elapsed from another instant to \xe2\x80\xa6666CeThe intersection of a source flags value with the \xe2\x80\xa600000000000000000000BcComputes <code>self - other</code>.00CdReturns the set difference of the two sets of flags.00000BkFilter using Sub: D = saturation0(S1 - S2).11:8DjTakes an iterator and generates <code>Self</code> from the elements by \xe2\x80\xa6BaSums the elements of an iterator.0000000EeTakes each element in the <code>Iterator</code>: if it is a <code>None</code>, no \xe2\x80\xa6EeTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no \xe2\x80\xa632222222222222233DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa64BbSums up the items in the iterator.05Ci&lt; SDL virtual key code - see ::SDL_Keycode for detailsClSystem interfaces and hardware abstractions. sys::{arch, \xe2\x80\xa6CbMatches a tab character <code>&#39;\\t&#39;</code>.lThe tangent.000BdThe tangent of <code>x</code> (f64).ClSplit into an iterator pair that both yield all elements \xe2\x80\xa6000EcGets the <em>Top Level Domain</em> of the application (e.g. <code>com</code> or \xe2\x80\xa6DiConverts a <code>Value&lt;T&gt;</code> to a <code>Value&lt;T2&gt;</code>.DmConverts a <code>Mapping&lt;T&gt;</code> to a <code>Mapping&lt;T2&gt;</code>.ChReturns a shared reference to the top item on the stack.AdReturns the y offsetClDistance in pixels from the top edge of the frame to the \xe2\x80\xa6CiReturns the y-position of the top side of this rectangle.0BiUnwraps a result or propagates its error.00BoA binding for the library <code>SDL2_ttf</code>DaGets the value of the <code>IP_TTL</code> option for this socket.00CnA module to query if the current instance is a tty. Making \xe2\x80\xa6jCache typeDcRedundant constants module for the <code>u16</code> primitive type.0BfRecognizes an unsigned 2 bytes integer1CfAn unsigned 24-bit integer sample with an internal \xe2\x80\xa6BeRecognizes an unsigned 3 byte integerDcRedundant constants module for the <code>u32</code> primitive type.0BeRecognizes an unsigned 4 byte integer1DcRedundant constants module for the <code>u64</code> primitive type.0BeRecognizes an unsigned 8 byte integer1AkReturns the sender\xe2\x80\x99s UID.BnReturns the user ID of the owner of this file.BkAbstractions for uniquely identifying data.ClSets the child process\xe2\x80\x99s user ID. This translates to a \xe2\x80\xa62002CnThe UID part of the peer credential. This is the effective \xe2\x80\xa6BcOverrides the URI for this request.mThe proxy uriBkURI component of request and response linesBjReturns a reference to the associated URI.AmSet the URI for this request.AcThe request\xe2\x80\x99s URIBaFull uri that is being requested.Clinput or output URL. Unlike the old filename field, this \xe2\x80\xa6BgOpening URLs in default system handlersC`Equivalent to <code>datetime.timezone.utc</code>CiFetches the environment variable key from the current \xe2\x80\xa6DfFetches the environment variable <code>key</code> from the current \xe2\x80\xa6AbThe vec of points.0ChA contiguous growable array type with heap-allocated \xe2\x80\xa6CdCreates a <code>Vec</code> containing the arguments.0110CoParallel iterator types for vectors (<code>Vec&lt;T&gt;</code>)2121CmThe <code>vlc</code> module provides support for decoding \xe2\x80\xa6AeWeb APIs interfacing.BgLogical \xe2\x80\x9cxor\xe2\x80\x9d with a boolean value.BiBitwise \xe2\x80\x9cxor\xe2\x80\x9d with the current value.00000000000FjReturns <code>Some</code> if exactly one of <code>self</code>, <code>optb</code> is <code>Some</code>, \xe2\x80\xa6CjZeroth order of the Bessel function of the second kind \xe2\x80\xa6CiFirst order of the Bessel function of the second kind \xe2\x80\xa6CkInteger order of the Bessel function of the second kind \xe2\x80\xa6CbConverts the arguments to iterators and zips them.Ci\xe2\x80\x98Zips up\xe2\x80\x99 two iterators into a single iterator of \xe2\x80\xa60000000ChZips <code>self</code> with another <code>Option</code>.111111111111112222EeIterates over tuples <code>(A, B)</code>, where the items <code>A</code> are from \xe2\x80\xa60CjIterates tuples, repeating the element with items from \xe2\x80\xa64AcAG grayscale 16bpp.0Dj<code>?std</code> A string describing the architecture of the CPU that \xe2\x80\xa6CkA string describing the architecture of the CPU that is \xe2\x80\xa6AbANSI escape codes.0B`\xf0\x9f\x8c\x90 Arch-related functionality.0CkAn iterator over the arguments of a process, yielding a \xe2\x80\xa6ClA trait to borrow the file descriptor from an underlying \xe2\x80\xa600f10^-180BnChoose diffusion type automatically. (Default)CkChoose automatically the method for finding the largest \xe2\x80\xa6CaChoose automatically the method for selecting \xe2\x80\xa6BbChoose quality mode automatically.3210CjSets the sign format based on other configuration options.CmAutomatically detect whether a heuristic prefilter should \xe2\x80\xa6AgAn Image in AVIF FormatCjGamepad\xe2\x80\x99s elements which state can be represented by \xe2\x80\xa60BaThe base value for unit prefixes.00BhThe base value for binary unit prefixes.BdThe base value for SI unit prefixes.BoThe size of this non-zero integer type in bits.00000000000ChThe size of a pointer in bits, for the current platform.BnReturns the size of this integer type in bits.00000000000000000000000BdThe size of an IPv4 address in bits.BdThe size of an IPv6 address in bits.AaThe size in bits.00000000000BeThe size of this SIMD vector in bits.000000000000000BiCode to set the foreground color to blue.AhCode to set bold effect.EcImproved <code>Debug</code> experience for <code>&amp;[u8]</code> UTF-8-ish streams0Eh<code>core</code> A zero-sized marker for a <code>Storage</code> type that wraps its \xe2\x80\xa60Ci\xf0\x9f\xa5\xa1 A compile-time configurable radix-based encoding \xe2\x80\xa60BdInitial error that kicked things offfU+0007000CkFrequencies around the user-defined frequency are adjusted.1AfHigh compression levelAeanisotropic filteringBhPixel contains 8-bit B, G and R channelsBlBit representation of this SIMD vector type.0Ek<code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> \xe2\x80\xa601111f4 Blue0AaLight blue color.DdA response body returned as <code>http::Response&lt;Body&gt;</code>.AmIncreases the text intensity.mBoolean value00000000000000000oA boolean type.CjThe input contained a boolean value that was not expected.DkBoth the reading and the writing portions of the <code>TcpStream</code> \xe2\x80\xa60AhBoth values are present.1AoAn arena to bump allocate into.De\xf0\x9d\x90\x93 <code>core</code> Representation of a borrowed C string (See \xe2\x80\xa600BfRepresentation of a borrowed C string.00000BiCode to set the foreground color to cyan.A`Call a function.00Co\xf0\x9f\x8c\x90 Provides <em>const</em> casting, joining and splitting \xe2\x80\xa60BlA SIMD vector with a different element type.00000000000000000B`Rounds toward positive infinity.Bl<code>core</code> A mutable memory location.00AjA mutable memory location.00Bh\xf0\x9f\x8c\x90 Unicode scalars-related operations.k32-bit charCkA Unicode character (text input, international layouts, \xe2\x80\xa6Dc\xf0\x9f\x9b\xa1\xef\xb8\x8f A unicode character (FFI-safe, stored as <code>u32</code>).222222222222222223Bj\xf0\x9f\x9a\xa9 An invalid given character was found.21CiOne of the 128 Unicode characters from U+0000 through \xe2\x80\xa60lA character.CnThe input contained a <code>char</code> that was not expected.2AmPlatform specific event code.CaDescribes a hardware and platform-specific setup.CnFuture wrapper to ensure cooperative scheduling created by \xe2\x80\xa6Dd<code>core</code> Types whose values can be duplicated simply by \xe2\x80\xa6Ea<code>core</code> Derive macro generating an impl of the trait <code>Copy</code>.10CjTypes whose values can be duplicated simply by copying \xe2\x80\xa6CoDerive macro generating an impl of the trait <code>Copy</code>.1010101010101010101010101010101010CgOpenGL core profile - deprecated functions are disabledBfCRC8 of interleaved PCM audio samples.f6 Cyan0AaLight cyan color.BeSeek to next data (for sparse files).CgContains the date and time at which the message was \xe2\x80\xa6jData cacheCkA representation of a civil date in the Gregorian calendar.AhA parsed TOML date valueeLinuxd10^10e10^-10CgA type returned by the <code>diff_with</code> function.C`Prefix <code>C:</code> for the given disk drive.0BeStruct containing a disk information.1CfExpresses that every byte of the haystack has been \xe2\x80\xa600BkFold is complete and will return this valueCdWhen the inner source is empty this decrements a \xe2\x80\xa622oDown arrow key.0CkPressed mouse button. Contains the button that was pressed.1CmMoved the mouse cursor while pressing the contained mouse \xe2\x80\xa6Cd<code>core</code> Custom code within the destructor.0AmDrop the contents of a place.BbCustom code within the destructor.0000010000001000000AfEcho input characters.Bg\xe2\x80\x9cNumerical argument out of domain.\xe2\x80\x9dC`Identifier for a specific version of a resource.BkFail if file exists (when used with CREAT).CbThe input contained an enum that was not expected.e2^60.0AmFIFO/pipe (S_IFIFO in POSIX).B`Regular file (S_IFREG in POSIX).CkContains an Internet email address for a human user who \xe2\x80\xa6AiFast, minimal compressionDf<code>std</code> An object providing access to an open file on the \xe2\x80\xa60CeAn object providing access to an open file on the \xe2\x80\xa6ChA flag or indicator. A flag carries no data, but the \xe2\x80\xa6ClThe offset for a particular civil datetime and time zone \xe2\x80\xa6Dd<code>Fold</code> is an iterator that applies a function over an \xe2\x80\xa6CmRepresents a font. Fonts are immutable after creation and \xe2\x80\xa6AbA loaded TTF font.Dk\xf0\x9d\x9f\x99 \xf0\x9f\x8c\x90 Provides comprehensive fractional operations on <code>T</code>\xe2\x80\xa60Dk<code>core</code> Used to do value-to-value conversions while consuming \xe2\x80\xa60CmUsed to do value-to-value conversions while consuming the \xe2\x80\xa6DcDerive macro generating an impl of the trait <code>From</code>. \xe2\x80\xa61111110111111011111DjThe data could not be sent on the <code>sync_channel</code> because it \xe2\x80\xa6BbFull quality palette construction.Cc= 0\xc2\xba = 360\xc2\xba (1\xcf\x84 = 2\xcf\x80), a full turn, or no turn.102ClThe channel the message is sent on has a finite capacity \xe2\x80\xa6CiThe data could not be sent on the channel because the \xe2\x80\xa6CaPrints a backtrace with all possible information.55DjAn iterator that yields <code>None</code> forever after the underlying \xe2\x80\xa6000AcGA grayscale 16bpp.0ChOpenGL ES profile - only a subset of the base OpenGL \xe2\x80\xa6Bc410 Gone [RFC9110, Section 15.5.11]CiCode to set the foreground and background to 24-point \xe2\x80\xa6e2^30.0d10^90kGrey color.DeWrapper around a <code>SDL_JoystickGUID</code>, a globally unique \xe2\x80\xa6dHEADBeSeek to next hole (for sparse files).ClSpecifies the domain name of the server and (optionally) \xe2\x80\xa6AdHTTP protocol schemeEbIndicates whether the 6 fields from <code>h</code> to <code>ns</code> are enabled.Bg\xf0\x9f\x94\x80 <code>core</code> A hashable type.Eh\xf0\x9f\x94\x80 <code>core</code> Derive macro generating an impl of the trait <code>Hash</code>\xe2\x80\xa610A`A hashable type.CoDerive macro generating an impl of the trait <code>Hash</code>.0000010000001000000BkThe first element of the tuple, at index 0.0BiA command that hides the terminal cursor.BbHigh quality palette construction.0DhA <code>Hint</code> provides additional information and context when \xe2\x80\xa6iHome key.00CjAllows attaching operations or side effects to a value \xe2\x80\xa60AmAn hour is always 60 minutes.CaThe smallest whole integer unit allowed is hours.BcErrors arising from the http-crate.AgCONNECT proxy over HTTPBiInitial value for <code>WasmAlloc</code>.oEnable signals.BgEnable XON/XOFF flow control on output.BeIcon image in three levels of detail.AlNo available work was found.eLinuxAeThe \xe2\x80\x9cinfo\xe2\x80\x9d level.BoCorresponds to the <code>Info</code> log level.10CbProvides info about resources on the audio thread.212ClIndicates that the initializer failed with the contained \xe2\x80\xa6DbOne unsigned 32-bit integers (equivalent to <code>[u32; 1]</code>)000DbTwo unsigned 32-bit integers (equivalent to <code>[u32; 2]</code>)000DdThree unsigned 32-bit integers (equivalent to <code>[u32; 3]</code>)000DcFour unsigned 32-bit integers (equivalent to <code>[u32; 4]</code>)000Di<code>core</code> A value-to-value conversion that consumes the input \xe2\x80\xa60CnA value-to-value conversion that consumes the input value. \xe2\x80\xa600000000000000000BmThe type of the elements being iterated over.000000000000000BoThe element type of the slice being matched on.C`The type of items yielded by the async iterator.BlThe type of the item yielded by the iterator33333333333321033BlResults element type, e.g. <code>u32</code>.CiThe type of item that the parallel iterator will produce.CmThe type of item that the parallel iterator will produce. \xe2\x80\xa6CmThe type of item that will be produced; this is typically \xe2\x80\xa6CnThe type of item that this parallel iterator produces. For \xe2\x80\xa622CkThe type of item that will be produced by this producer \xe2\x80\xa6BkThe type of item returned by this producer.543244CjType representing either a value, a table, an array of \xe2\x80\xa6;;;;;;;;;;;;98Ca\xf0\x9f\x8c\x90 \xf0\x9f\x94\x84 Iterator-related namespaced operations.CkReturned iterator over socket addresses which this type \xe2\x80\xa610DgAn iterator over a reference to the <code>Some</code> variant of an \xe2\x80\xa6EeAn iterator over a reference to the <code>Ok</code> variant of a <code>Result</code>.AhImmutable slice iterator0CkAn iterator over the elements of a <code>BinaryHeap</code>.ChAn iterator over the entries of a <code>BTreeMap</code>.CfAn iterator over the items of a <code>BTreeSet</code>.CkAn iterator over the elements of a <code>LinkedList</code>.CiAn iterator over the elements of a <code>VecDeque</code>.765CbAn iterator over the msgs received from a channel.DgAn iterator over the entries of a <code>HashMap</code> in arbitrary \xe2\x80\xa6CeAn iterator over the items of a <code>HashSet</code>.DiAn iterator over the entries of a <code>HashTable</code> in arbitrary \xe2\x80\xa6C`The parallel iterator type that will be created.ChThe type of the parallel iterator that will be returned.BjThe type of iterator that will be created.CiThe draining parallel iterator type that will be created.0DiA parallel iterator over a reference to the <code>Some</code> variant \xe2\x80\xa643211CiParallel iterator over an immutable reference to a resultCaParallel iterator over immutable items in a sliceCkParallel iterator over an immutable reference to a hash mapCkParallel iterator over an immutable reference to a hash setCmParallel iterator over an immutable reference to a binary \xe2\x80\xa6CmParallel iterator over an immutable reference to a B-Tree \xe2\x80\xa60CmParallel iterator over an immutable reference to a linked \xe2\x80\xa6CfParallel iterator over an immutable reference to a \xe2\x80\xa6CgParallel iterator over a range, implemented for all \xe2\x80\xa6CnParallel iterator over an inclusive range, implemented for \xe2\x80\xa6EeAn iterator type over <code>Table</code>\xe2\x80\x99s <code>Key</code>/<code>Item</code> pairsBf<code>HeaderMap</code> entry iterator.DgAn iterator over a reference to the <code>Some</code> variant of an \xe2\x80\xa6FbAn iterator over the <code>Component</code>s of a <code>Path</code>, as <code>OsStr</code> slices.EeAn iterator over a reference to the <code>Ok</code> variant of a <code>Result</code>.AhImmutable slice iteratorEcAn iterator over messages on a <code>Receiver</code>, created by <code>iter</code>.0CgAn iterator over the entries of a <code>HashMap</code>.CeAn iterator over the items of a <code>HashSet</code>.CkAn iterator over the elements of a <code>BinaryHeap</code>.ChAn iterator over the entries of a <code>BTreeMap</code>.CfAn iterator over the items of a <code>BTreeSet</code>.CkAn iterator over the elements of a <code>LinkedList</code>.CiAn iterator over the elements of a <code>VecDeque</code>.CkReturned iterator over socket addresses which this type \xe2\x80\xa6954321BgHelper trait for <code>[T]::join</code>EdJoins two values implementing <code>AsyncRead</code> and <code>AsyncWrite</code> \xe2\x80\xa611AgAn Image in JPEG FormatmDefault value0CeAn iterator over the keys of a <code>BTreeMap</code>.DkAn iterator over the keys of a <code>HashMap</code> in arbitrary order. \xe2\x80\xa6BmAn iterator over <code>HeaderMap</code> keys.CdAn iterator over the keys of a <code>HashMap</code>.33e2^10.0lKill signal.d10^30CbA type representing the kind of <code>Self</code>.0BdSee <code>ParserError::append</code>BjPlay the sound from the left speaker only.AhLow frequency channel 1.AhLow frequency channel 2.CnAllows the server to point an interested client to another \xe2\x80\xa6Bnln(2) (A002162) <code>\xe2\x89\x88 0.69314718\xe2\x80\xa6</code>00000eln(2)00000000000BoPixel is 16-bit luminance with an alpha channel0AiThis is the last element.BaOn the left side of the keyboard.oLeft arrow key.AbLeft mouse button.C`Indication that contents should be left-aligned.302100012ChAligns text to the left of the region defined by the \xe2\x80\xa6AoA value of type <code>L</code>.CfOnly the left value of type <code>A</code> is present.133ChAn ordering where a compared value is less than another.0000CkGeneric helper for libm functions, abstracting over f32 \xe2\x80\xa6AjGamma-encoded luma (Y\xe2\x80\xb2).0AaGrayscale colors.DhA SIMD vector mask for <code>N</code> elements of width specified by \xe2\x80\xa6CiThe mask element type corresponding to this element type.BjThe mask type returned by each comparison.2CfMask type used for manipulating this SIMD vector type.0001000032130000100003213000010000BdFour by four matrix of 32-bit floats000e2^20.0d10^60iMenu key.00CgMIDI device access (without system exclusive messages).0AfSingle centre channel.Ch\xf0\x9f\x8c\x90 Multi-producer, single-consumer channel operations.0kClass name.CjName of self. This is used in error messages, for example.10BgThe format can be identified by a name.e10^-90AnSkips to the next media track.0BhRepresents the absence of <em>data</em>.iNo value.CgAn absence of sign, associated with Zero. (The default)CjNo dithering is applied. Pixels are directly quantized \xe2\x80\xa6A`2^0 (no prefix).A`10^0 (no prefix)55555555444555555555210344444444444444444CmGamepad does not use any mappings and most gamepad events \xe2\x80\xa6BeEffect is not attenuated by distance.BeDoes not insert any ASCII whitespace.BkNever used a prefilter in substring search.888C`Gets the Python builtin value <code>None</code>.999999999999999999999999999Bnno blending (replace destination with source).Anthe absence of a clipping rectAhDo not impose any limit.AgType representing none.AdNo automatic header.>>>>>>BhSimply comparing the range in RGB space.0AkExplicit <code>null</code>.AhU+0000 (Default variant)10AlU+0000 (The default variant)0eNull.AeNull - No more cachesBlNull (indicates this sub-leaf is not valid).3Dd<code>std</code> A synchronization primitive for one-time global \xe2\x80\xa60C`An iterator that yields an element exactly once.00CfIterator adaptor for the <code>once()</code> function.1CmA low-level synchronization primitive for one-time global \xe2\x80\xa60AiThis is the only element.ClSpecifically signed output type for some operations (\xe2\x96\xb6 \xe2\x80\xa60mPalette 1bpp.0mPalette 2bpp.0mPalette 4bpp.0mPalette 8bpp.0CdObtain fd for path resolution only (no file access).dPOSTCkA pair of byte offsets into a needle to use as a predicate.Cn<code>std</code> A slice of a path (akin to <code>str</code>).0BmA slice of a path (akin to <code>str</code>).e2^50.0e10^150f10^-120BkBroken pipe: write to pipe with no readers.AfStarts media playback.0oPlay media key.BcRepresents the <code>+</code> flag.0000ClIndicates whether a value is available or if the current \xe2\x80\xa60BfPollable event (Sys V). Synonym for IO1BjType of an input or output port structure.AlThe port component of a URI.BiPermission to receive push notifications.0CkMarks that the message is the end of a set of messages. \xe2\x80\xa60CmQEMU is the hypervisor identity when QEMU is used without \xe2\x80\xa6AcQuit from keyboard.AmOpen for reading and writing.DfThe reading portion of the <code>TcpStream</code> should be shut down.0DcThe <code>Read</code> trait allows for reading bytes from a source.01CiA Rectangle defined by its top left corner, width and \xe2\x80\xa6AhA (non-empty) rectangle.ClA TOML <code>Value</code> encoded as a <code>&amp;str</code>BhPixel contains 1-bit R, G and B channelsBhPixel contains 2-bit R, G and B channelsBhPixel contains 4-bit R, G and B channelsCkRGB color with 8-bit integer components (sRGB gamma space).0BhPixel contains 8-bit R, G and B channels0AnRGB+A color with 4 components.0AjRGB colors + alpha channelBfThe role for an instance of HPKE mode.AmIterate over rows of an imageCnR\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 coefficients for computing sRGB luma (same as \xe2\x80\xa60A`Synchronous I/O.DjA type to represent the <code>Salt</code> that Argon2i uses during key \xe2\x80\xa6CiAn iterator to maintain state while iterating another \xe2\x80\xa6000DcA type to represent the private <code>Seed</code> that X-Wing uses.DhA type to represent the <code>d||z</code> seed used by ML-KEM to produce00BkSeed type, which is restricted to types \xe2\x80\xa6DkThe <code>Seek</code> trait provides a cursor which can be moved within \xe2\x80\xa60AiInvalid memory reference.Da<code>core</code> Types that can be transferred across thread \xe2\x80\xa60CgTypes that can be transferred across thread boundaries.00000000000000000BiA command that shows the terminal cursor.Be\xf0\x9f\x93\x8f Represents the sign of a number.0EdThe signedness of a <code>Formatter</code> (or of a <code>FormattingOptions</code>).00CnWhen set, a sign is only written when the span or duration \xe2\x80\xa611DjA SIMD vector with the shape of <code>[T; N]</code> but the operations \xe2\x80\xa600000BhThe value moves back and forth smoothly.AfA sinusoidal waveform.BgHandle to a device that outputs sounds.CcAn async writer which will move data into the void.BlA writer which will move data into the void.BmA 2 dimensional (width and height) size type.CiContains a lower bound on the buffer offset needed to \xe2\x80\xa6DiAn iterator that skips over <code>n</code> elements of <code>iter</code>.00Eg<code>Skip</code> is an iterator that skips over the first <code>n</code> elements. \xe2\x80\xa61BbSome value of type <code>T</code>.00000000000000000000000000000000000000000000000000Ama non-zero area clipping rectCoTo refresh only the processes with the listed <code>Pid</code>.222222Df\xf0\x9f\x8c\x90 Provides sorting methods for arrays and slices of <code>T</code>.0ClA span of time represented via a mixture of calendar and \xe2\x80\xa6D`<code>Parser</code> implementation for <code>Parser::span</code>DmObjects that have a notion of <em>successor</em> and <em>predecessor</em> \xe2\x80\xa6000000AeStops media playback.0oStop media key.mStop process.eLinuxDd<code>core</code> Types for which it is safe to share references \xe2\x80\xa60CjTypes for which it is safe to share references between \xe2\x80\xa600000000000000000Ca<code>TABDLY</code>: Horizontal-tab delay type 0.Ca<code>TABDLY</code>: Horizontal-tab delay type 1.Ca<code>TABDLY</code>: Horizontal-tab delay type 2.Ca<code>TABDLY</code>: Horizontal-tab delay type 3.AgStop typed at terminal.BfTerminal input for background process.BgTerminal output for background process.CmThe last element of the tuple, at index <code>ARITY-1</code>.0DkAn iterator that only iterates over the first <code>n</code> iterations \xe2\x80\xa600E`<code>Take</code> is an iterator that iterates over the first <code>n</code> \xe2\x80\xa6BhStream for the <code>take</code> method.D`<code>Parser</code> implementation for <code>Parser::take</code>3CfReader adapter which limits the bytes read from an \xe2\x80\xa6e2^40.0e10^120AcTermination signal.CgPointers to types implementing this trait alias are \xe2\x80\xa600AgAn Image in TIFF FormatC`A representation of civil \xe2\x80\x9cwall clock\xe2\x80\x9d time.Df<code>Time</code> represents a duration of time in seconds, or the \xe2\x80\xa6CbSeek to a <code>Time</code> in regular time units.0AhA parsed TOML time valueAfTrace/breakpoint trap.BcA type-level logical <em>true</em>.0DkThe <code>DataType</code> type that pairs with this <code>DataValue</code>.0AdUCS1 representation.AdUCS2 representation.AdUCS4 representation.DaMetadata for parsing unsigned integers, see <code>dec_uint</code>AoCommon trait for unit prefixes.0CbA way to refer to a single calendar or clock unit.DaThe input contained a unit <code>()</code> that was not expected.BaType containing user information.Cf\xf0\x9f\x9a\xa9 Invalid Utf-8 found while interpreting a byte \xe2\x80\xa6CgDetermines how to match future requests with cached \xe2\x80\xa6ClAn iterator over a snapshot of the environment variables \xe2\x80\xa6C`A flat buffer that can be used as an image view.D`<code>Parser</code> implementation for <code>Parser::void</code>BaWakes the system from sleep mode.0CcThe implementation of waking a task on an executor.000AeThe \xe2\x80\x9cwarn\xe2\x80\x9d level.BoCorresponds to the <code>Warn</code> log level.10101Af\xf0\x9f\x8c\x90 A Wasm namespace.0Eh<code>Weak</code> is a version of <code>Arc</code> that holds a non-owning reference \xe2\x80\xa6Eg<code>Weak</code> is a version of <code>Rc</code> that holds a non-owning reference \xe2\x80\xa611010AgAn Image in WEBP FormatChA week is 7 days that either begins on Sunday or Monday.CfWord will break lines by the Unicode line breaking \xe2\x80\xa6AhCPU time limit exceeded.AiFile size limit exceeded.Bb\xf0\x9f\x8e\xb2 X ABC PRNG for 8-bit devices.0EaIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6CjA Gregorian calendar year. It usually has 365 days for \xe2\x80\xa6EcImplement <code>FromResidual&lt;Yeet&lt;T&gt;&gt;</code> on your type to enable \xe2\x80\xa600e2^80.0BeA <code>Vector</code> with all zeros.00AhThe additive identity 0.AhA duration of zero time.0111110BaThe first day of the zeroth year.00BmThe offset corresponding to no offset at all.EbA <code>Frame</code> with both the left and right samples set to <code>0.0</code>.e2^70.0nValue was ZeroAjPositive or negative zero.011010CnAn source that produces samples with value zero (silence). \xe2\x80\xa6Ana clipping rect with zero area32ClThe \xe2\x80\x9cZulu\xe2\x80\x9d offset, corresponding to UTC in a context \xe2\x80\xa6BmBuild an ioctl number for an read-only ioctl.BnBuild an ioctl number for an write-only ioctl.BbRe-exported optional dependencies.oThe arc cosine.000oArccosine (f64)BnGets the \xe2\x80\x9caddress\xe2\x80\x9d portion of the pointer.CaReturns the faulting address (e.g., for SIGSEGV).BlReturns the address of the function pointer.222202222B`The IP of the network interface.13333BdAuthenticated secret-key encryption.CfAEADs (Authenticated Encryption with Associated Data).CfConcatenates or prints <code>Ansi</code> escape codes.0CeTurn this into an iterator over the animation frames.BaArchitecture-specific intrinsics.BbSIMD and vendor intrinsics module.0ChA module with low-level architecture dependent routines.1AjThe area of the 2d extent.0AiSets executable argument.AgSet executable argument0AaThe message body.BoAdds multiple arguments to pass to the program.CiReturns the arguments that this program was started with.AfSet <code>args</code>.2ClReturns the arguments that this program was started with \xe2\x80\xa6Ao<code>argv</code> modificationsmThe arc sine.000mArcsine (f64)A`The arc tangent.000A`Arctangent (f64)AgMessage authentication.DkAlgorithms for the <code>x86_64</code> target using 256-bit vectors via \xe2\x80\xa6AgIterate over axes data.CgReturns <code>EvCode</code> associated with axis index.Al&lt; The joystick axis indexCa&lt; The controller axis (SDL_GameControllerAxis)BoGet the position of the given <code>axis</code>CaGets the position of the given <code>axis</code>.DiProvides a reference to the back element, or <code>None</code> if the \xe2\x80\xa60BhUI backends. back::{miniquad, crossterm}CnProvides a reference to the back element of the cursor\xe2\x80\x99s \xe2\x80\xa60Ba&lt; The joystick trackball indexDiReturn a pair <code>(dx, dy)</code> containing the difference in axis \xe2\x80\xa6BeReturns the band event (for SIGPOLL).BdInitial error that kicked things offBmThe BFloat16 type used in AVX-512 intrinsics.00DeCreates a new <code>TcpListener</code> which will be bound to the \xe2\x80\xa6BlCreates a UDP socket from the given address.DgAttaches this <code>Py</code> to the given Python context, allowing \xe2\x80\xa6CgCreates a Unix datagram socket bound to the given path.DfCreates a new <code>UnixListener</code> bound to the specified socket.AnGet the underlying bits value.00000000000000000000CdReturns the raw value of the flags currently stored.0000000AoUtilities for bit manipulation.AaBit level parsersC`Converts a byte-level input to a bit-level inputAgReturns the inner bits.00BlPerforms surface blitting (surface copying).AcThe blue component.00000000000BoSets the foreground color to <code>Blue</code>.DkPerforms a Gaussian blur on this image. <code>sigma</code> is a measure \xe2\x80\xa6DkPerforms a Gaussian blur on the supplied image. <code>sigma</code> is a \xe2\x80\xa6C`Returns a reference to the associated HTTP body.0Dh\xe2\x80\x9cConsumes\xe2\x80\x9d this builder, using the provided <code>body</code> to \xe2\x80\xa60CdApplies the <code>Bold</code> attribute to the text.BbParses one specific bit as a bool.EhIf <code>Both</code>, return <code>Some</code> containing the left and right values. \xe2\x80\xa6ChThe <code>ByteStr</code> type and trait implementations.EeThe <code>ByteStr</code> and <code>ByteString</code> types and trait implementations.100ClReturns a shared reference to the allocator backing this \xe2\x80\xa60c\xe2\x80\xa60AlPerforms the call operation.0000000000000DgDefines how Python calls are dispatched, see <code>PyCallArgs</code>\xe2\x80\xa6AaCalls the object.AgVisit <code>obj</code>.11CnSends the request and blocks the caller until we receive a \xe2\x80\xa6444444BcCasts to a pointer of another type.CfConverts the mask to a mask of any other element size.CfPerforms elementwise conversion of this vector\xe2\x80\x99s \xe2\x80\xa6002222000BgCast <code>A</code> into <code>B</code>011133331111113333111oThe cubic root.000FbExperimental version of <code>cbrt</code> in <code>core</code>. See <code>f32::cbrt</code> for \xe2\x80\xa6FbExperimental version of <code>cbrt</code> in <code>core</code>. See <code>f64::cbrt</code> for \xe2\x80\xa610BfCompute the cube root of the argument.Ck<em><code>c</code>ustomizable <code>dbg!</code></em> macro.0D`The smallest integer greater than or equal to <code>self</code>.0DkThe smallest integer greater than or equal to <code>x</code>. $$ \\lceil \xe2\x80\xa60FbExperimental version of <code>ceil</code> in <code>core</code>. See <code>f32::ceil</code> for \xe2\x80\xa6FbExperimental version of <code>ceil</code> in <code>core</code>. See <code>f64::ceil</code> for \xe2\x80\xa610jCeil (f64)CnReturns the smallest integer greater than or equal to each \xe2\x80\xa6AmShareable mutable containers.000ClA for loop that is usable in <em>compile-time</em> contexts.0CmGets an immutable reference to all the written samples in \xe2\x80\xa6Cf\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x90\x93 <code>core</code> A 32-bit unicode scalar.0CcUtilities for the <code>char</code> primitive type.00AoChemistry-related abstractions.CnCode reflective synthesis. code::{error, marker, ops, panic\xe2\x80\xa6AhReturns the signal code.BmReturns the exit code of the process, if any.oThe key itself.Al&lt; User defined event codeCaReports the exit code, if applicable, from an \xe2\x80\xa6AaColumns of cells.0CjParameters that describe how pixels are packed. If the \xe2\x80\xa6BiCalls the parser if the condition is met.BfSets the given miniquad configuration.AnContext creation configurationC`Take the complex conjugate of <code>self</code>.DdThe <code>conv</code> module provides methods to convert samples \xe2\x80\xa6BnUtilities for improved cooperative scheduling.CeCopies the entire contents of a reader into a writer.AgBitwise-copies a value.FiCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>dst</code>. Can \xe2\x80\xa6CmCopies the contents of one file to another. This function \xe2\x80\xa6DgThis is an accidentally-stable alias to <code>ptr::copy</code>; use \xe2\x80\xa6FiCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>dst</code>. The \xe2\x80\xa64104CmReturns a new dictionary that contains the same key-value \xe2\x80\xa60ClCopies a portion of the texture to the current rendering \xe2\x80\xa6CnAsynchronously copies the entire contents of a reader into \xe2\x80\xa643875DmThe <em>core</em> part of the RNG, implementing the <code>generate</code> \xe2\x80\xa60BcThe cosine of <code>x</code> (f32).AfThe hyperbolic cosine.000AgHyperbolic cosine (f64)AgPlays audio using cpal.AmReturns the list of the CPUs.CaThis configures CRLF mode for the entire pattern.CdRecognizes the string <code>&quot;\\r\\n&quot;</code>.ClReturn a cut-out of this image delimited by the bounding \xe2\x80\xa6CkReturn a mutable view into an image The coordinates set \xe2\x80\xa6CbConverts a string slice to <code>&amp;CStr</code>.CkReturns the number of leading unset bits (zeroes) in an \xe2\x80\xa600ClReturns the number of trailing unset bits (zeroes) in an \xe2\x80\xa600DkCreates a new <code>AnsiColor8b</code> from a 216-color 6x6x6 RGB cube. \xe2\x80\xa6BeGets a list of all <code>Cue</code>s.0BoSets the foreground color to <code>Cyan</code>.ClData handling and manipulation. data::{codec, iter, key, \xe2\x80\xa6DjGets the <code>data</code> pointer used to create this <code>Waker</code>.CjInternal storage of matrix elements in a fixed-size array.0DoGets the <code>data</code> pointer used to create this <code>LocalWaker</code>.Chpointer to the picture/channel planes. This might be \xe2\x80\xa6CmThe data buffer. It is considered writable if and only if \xe2\x80\xa6Cmdata+linesize for the bitmap of this subtitle. Can be set \xe2\x80\xa6CkGets the start of the buffer containing the contents of \xe2\x80\xa6BoObtains the raw data backing the Python string.10Cf&lt; Up to 3 values from the sensor, as defined in \xe2\x80\xa6Co&lt; Up to 6 values from the sensor - additional values can \xe2\x80\xa6Bk&lt; Should contain channels*samples items.DlThe data of the <code>Visual</code>, encoded as per <code>media_type</code>.A`The vendor data.AbThe packet buffer.0BhCreates the body data turned into bytes.ChReturns the civil date component of this zoned datetime.DcSet the year, month and day fields via the <code>Date</code> given.CcReturns the civil date in this <code>Pieces</code>.DfCreates a new <code>Date</code> value in a <code>const</code> context.BlReturns the date component of this datetime.3CmConverts this ISO week date to a Gregorian <code>Date</code>.DjOptional date. Required for: <em>Offset Date-Time</em>, <em>Local </em>\xe2\x80\xa6CeCreate a new span from this integer in units of days.CiSet the number of days on this span. The value may be \xe2\x80\xa6BlDescription of the cache (from Intel Manual)DjReturns the module\xe2\x80\x99s <code>__dict__</code> attribute, which contains \xe2\x80\xa60CfDraw elements using currently applied bindings and \xe2\x80\xa6AfDrawing functionality.111BfExecutes the destructor for this type.AkDrops the <code>Arc</code>.BdDrops the <code>Weak</code> pointer.AlDrops the top stack element.AjDrops the <code>Rc</code>.2BlReleases the lock when the guard is dropped.AdDisposes of a value.BcManually drops the contained value.CnOn drop, invokes the callback with the guarded value and a \xe2\x80\xa68BlExecutes the async destructor for this type.9393939393930939393939393D`Returns <code>Event</code> with <code>EventType::Dropped</code>.Am&lt; Drag and drop event data2;5;5;5;5;5;5:9BdRemoves heap elements in heap order.BjDuplicates the top stack pair of elements.Al&lt; Text editing event dataBgElectrical and electronic abstractions.Dc<code>core</code> Inspects an environment variable at compile time.0CmInserts or updates multiple explicit environment variable \xe2\x80\xa6CgAdds or updates multiple environment variable mappings.BkThe complementary error function (1 - erf).0BbComplementary error function (f64)AdError function (f32)BeExecutes JavaScript code immediately.CgExecutes JavaScript inside this worker, returning a \xe2\x80\xa61CjEvaluates a Python expression in the given context and \xe2\x80\xa6DjPerforms all the required setup by this <code>Command</code>, followed \xe2\x80\xa60CjTerminates the current process with the specified exit \xe2\x80\xa6000f$2^x$.000AiExponential, base 2 (f64)CmProduces a vector where every element has the exponential \xe2\x80\xa6BbExponential, base <em>e</em> (f32)DjConstants for the <code>f128</code> quadruple-precision floating point \xe2\x80\xa600B`Absolute value (magnitude) (f64)AlA parser which always fails.AiPositive difference (f64)BgThe source file containing the message.ClReturns the name of the source file from which the panic \xe2\x80\xa6CaExpands to the file name in which it was invoked.00000000000AeSet <code>file</code>Da&lt; The file name, which should be freed with SDL_free(), is \xe2\x80\xa6222222DdFills all elements of the array with the given <code>element</code>.DcFills all elements of the grid with the given <code>element</code>.CnReturns the character used as \xe2\x80\x98fill\xe2\x80\x99 whenever there is \xe2\x80\xa6AhSets the fill character.CmClears, and then renders the entire buffer using the fill \xe2\x80\xa6CmRepeats the embedded parser, filling the given slice with \xe2\x80\xa6CkSearches for an element of an iterator that satisfies a \xe2\x80\xa6000000000000000000000CiReturns a reference to an entry in the table with the \xe2\x80\xa6CjReturn the first occurrence of the needle in the given \xe2\x80\xa6CmReturn the first occurrence of one of the needle bytes in \xe2\x80\xa60EgReturn the first occurrence of the <code>needle</code> in the <code>haystack</code> \xe2\x80\xa6DdReturns the first occurrence of <code>needle</code> in the given \xe2\x80\xa6CfReturn the first occurrence of the needle given to \xe2\x80\xa6333CaExecute a search using SSE2 vectors and routines.444CaExecute a search using AVX2 vectors and routines.CjReturns the index of the first occurrence of the given \xe2\x80\xa6ClReturns the index of the first occurrence of this needle \xe2\x80\xa6CnThis routine searches for the first match of this regex in \xe2\x80\xa6DjLocates the first matching substring within <code>haystack</code> that \xe2\x80\xa6Ch$ 1 / \\sqrt{x} $ the fast inverse square root algorithm.00CmCheck if a buffer of length <code>len</code> is large enough.0BaAverage load within five minutes.AnImage representations for ffi.BoGet a reference on the inner sample descriptor.C`Get a reference on the sample buffer descriptor.DkConvert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.EgConvert <code>EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;B, A&gt;</code>.CnReturns a copy of <code>self</code> with all its bits flipped.00AkFloating multiply add (f32)CnReturn the greater of two arguments or, if either argument \xe2\x80\xa6CmReturn the lesser of two arguments or, if either argument \xe2\x80\xa6DhCalculate the remainder of <code>x / y</code>, the precise result of \xe2\x80\xa6CjFolds every element into an accumulator by applying an \xe2\x80\xa6000000000000000000000BkPerform a fold operation over the iterable.DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6CkParallel fold is similar to sequential fold except that the0DfRepeats the embedded parser, calling <code>op</code> to gather the \xe2\x80\xa6AcFont functionality.DiThis function increases the <code>max_alloc</code> limit with amount. \xe2\x80\xa6CfThis field may be set by the caller before calling \xe2\x80\xa60CkDSP frequency (samples per second). Set to None for the \xe2\x80\xa6Bi&lt; DSP frequency \xe2\x80\x93 samples per secondBjConverts to this type from the input type.AoReturns the argument unchanged.0EaAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.DjAllocates a reference-counted slice and moves <code>v</code>\xe2\x80\x99s items \xe2\x80\xa6CnConverts an atomically reference-counted string slice into \xe2\x80\xa6CjCreates an atomically reference-counted pointer from a \xe2\x80\xa64CkConverts a <code>T</code> into an <code>Arc&lt;T&gt;</code>DcConverts a <code>[T; N]</code> into an <code>Arc&lt;[T]&gt;</code>.CgAllocates a reference-counted slice and fills it by \xe2\x80\xa66CkMove a boxed object to a new, reference-counted allocation.88888DiCreates a <code>Borrowed</code> variant of <code>Cow</code> from a slice.D`Converts the string reference into a <code>Cow::Borrowed</code>.:DiConverts a string slice into a <code>Borrowed</code> variant. No heap \xe2\x80\xa61FaCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to <code>Vec</code>.EeConverts a <code>CString</code> into an owned <code>Cow</code> without copying or \xe2\x80\xa6DgCreates a clone-on-write pointer from a reference to <code>Path</code>.DnConverts a <code>String</code> into an <code>Owned</code> variant. No heap \xe2\x80\xa6CnCreates a clone-on-write pointer from an owned instance of \xe2\x80\xa6ChCreates a clone-on-write pointer from a reference to \xe2\x80\xa6EfCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to an \xe2\x80\xa6EeConverts a <code>String</code> reference into a <code>Borrowed</code> variant. No \xe2\x80\xa6EgCreates an <code>Owned</code> variant of <code>Cow</code> from an owned instance of \xe2\x80\xa6C`Moves the string into a <code>Cow::Owned</code>.FiConverts a <code>&amp;</code><code>CString</code> into a borrowed <code>Cow</code> without copying or \xe2\x80\xa6EdConverts a <code>CStr</code> into a borrowed <code>Cow</code> without copying or \xe2\x80\xa6AoReturns the argument unchanged.00000000000000000hExamples1EaConverts a <code>Cow&lt;&#39;_, [T]&gt;</code> into a <code>Box&lt;[T]&gt;</code>FiConverts a <code>Cow</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.DmConverts a <code>CString</code> into a Box&lt;CStr&gt; without copying or \xe2\x80\xa6FgConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>Box&lt;CStr&gt;</code>, by copying the \xe2\x80\xa6CjConverts a <code>T</code> into a <code>Box&lt;T&gt;</code>DcConverts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>DgConverts a <code>&amp;mut [T]</code> into a <code>Box&lt;[T]&gt;</code>BeConverts a vector into a boxed slice.DcConverts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>EmConverts a <code>&amp;mut CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the \xe2\x80\xa6FbConverts a <code>&amp;CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the contents \xe2\x80\xa6CjCopies the string into a newly allocated Box&lt;OsStr&gt;.CcCreates a boxed <code>Path</code> from a reference.DgConverts a <code>&amp;mut str</code> into a <code>Box&lt;str&gt;</code>2EaConverts a <code>Cow&lt;&#39;_, str&gt;</code> into a <code>Box&lt;str&gt;</code>EdConverts the given <code>String</code> to a boxed <code>str</code> slice that is \xe2\x80\xa63D`Creates a boxed <code>Path</code> from a clone-on-write pointer.DjConverts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>EhConverts a <code>Cow&lt;&#39;a, OsStr&gt;</code> into a Box&lt;OsStr&gt;, by copying \xe2\x80\xa6DaConverts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>DkConverts a type of <code>Error</code> into a box of dyn <code>Error</code>.FcConverts a type of <code>Error</code> + <code>Send</code> + <code>Sync</code> into a box of dyn \xe2\x80\xa6FlConverts a <code>String</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.CgConverts a <code>PathBuf</code> into a Box&lt;Path&gt;.DdConverts a <code>String</code> into a box of dyn <code>Error</code>.E`Converts an <code>OsString</code> into a Box&lt;OsStr&gt; without copying or \xe2\x80\xa6FiConverts a <code>str</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.DaConverts a <code>Cow</code> into a box of dyn <code>Error</code>.AoReturns the argument unchanged.DaConverts a <code>str</code> into a box of dyn <code>Error</code>.1CmConverts a <code>bool</code> into an <code>AtomicBool</code>.22222222222DmConverts a <code>Vec&lt;T&gt;</code> into a <code>BinaryHeap&lt;T&gt;</code>.3ClConverts NonZero&lt;u8&gt; to NonZero&lt;i16&gt; losslessly.CmConverts NonZero&lt;u32&gt; to NonZero&lt;u64&gt; losslessly.CmConverts NonZero&lt;u16&gt; to NonZero&lt;i64&gt; losslessly.CnConverts NonZero&lt;u16&gt; to NonZero&lt;i128&gt; losslessly.CmConverts NonZero&lt;u32&gt; to NonZero&lt;i64&gt; losslessly.CnConverts NonZero&lt;u32&gt; to NonZero&lt;i128&gt; losslessly.CnConverts NonZero&lt;u64&gt; to NonZero&lt;i128&gt; losslessly.CnConverts NonZero&lt;u8&gt; to NonZero&lt;isize&gt; losslessly.CmConverts NonZero&lt;u8&gt; to NonZero&lt;i128&gt; losslessly.ClConverts NonZero&lt;u8&gt; to NonZero&lt;i64&gt; losslessly.ClConverts NonZero&lt;u8&gt; to NonZero&lt;i32&gt; losslessly.CnConverts NonZero&lt;i64&gt; to NonZero&lt;i128&gt; losslessly.CnConverts NonZero&lt;i32&gt; to NonZero&lt;i128&gt; losslessly.CmConverts NonZero&lt;i32&gt; to NonZero&lt;i64&gt; losslessly.AoReturns the argument unchanged.CoConverts NonZero&lt;i16&gt; to NonZero&lt;isize&gt; losslessly.CnConverts NonZero&lt;u32&gt; to NonZero&lt;u128&gt; losslessly.CnConverts NonZero&lt;i16&gt; to NonZero&lt;i128&gt; losslessly.ClConverts NonZero&lt;u8&gt; to NonZero&lt;u32&gt; losslessly.ClConverts NonZero&lt;u8&gt; to NonZero&lt;u64&gt; losslessly.CmConverts NonZero&lt;u8&gt; to NonZero&lt;u128&gt; losslessly.CnConverts NonZero&lt;u8&gt; to NonZero&lt;usize&gt; losslessly.CmConverts NonZero&lt;u16&gt; to NonZero&lt;u32&gt; losslessly.CmConverts NonZero&lt;i16&gt; to NonZero&lt;i64&gt; losslessly.CmConverts NonZero&lt;i16&gt; to NonZero&lt;i32&gt; losslessly.CmConverts NonZero&lt;u16&gt; to NonZero&lt;u64&gt; losslessly.CnConverts NonZero&lt;u16&gt; to NonZero&lt;u128&gt; losslessly.CmConverts NonZero&lt;u16&gt; to NonZero&lt;i32&gt; losslessly.CnConverts NonZero&lt;i8&gt; to NonZero&lt;isize&gt; losslessly.CmConverts NonZero&lt;i8&gt; to NonZero&lt;i128&gt; losslessly.ClConverts NonZero&lt;i8&gt; to NonZero&lt;i64&gt; losslessly.ClConverts NonZero&lt;i8&gt; to NonZero&lt;i32&gt; losslessly.ClConverts NonZero&lt;i8&gt; to NonZero&lt;i16&gt; losslessly.CnConverts NonZero&lt;u64&gt; to NonZero&lt;u128&gt; losslessly.CoConverts NonZero&lt;u16&gt; to NonZero&lt;usize&gt; losslessly.ClConverts NonZero&lt;u8&gt; to NonZero&lt;u16&gt; losslessly.AoReturns the argument unchanged.0CeReturns a array filled with an iterator, in the heap.CfReturns a array filled with an iterator, in the stack.22222222222222hExamplesCeReturns a queue filled with an iterator, in the heap.4CfReturns a queue filled with an iterator, in the stack.55FfReturns <code>None</code> if 0.0, <code>Positive</code> if &gt; 0 and <code>Negative</code> if &lt; 0.FdReturns <code>None</code> if 0, <code>Positive</code> if &gt; 0 and <code>Negative</code> if &lt; 0.000000000001FcReturns <code>Positive</code> if <code>true</code> and <code>Negative</code> if <code>false</code>.DmConverts a <code>[(K, V); N]</code> into a <code>BTreeMap&lt;K, V&gt;</code>.9CfReturns a stack filled with an iterator, in the stack.:CeReturns a stack filled with an iterator, in the heap.;;;;;;;;;;;CmConverts a <code>String</code> into an <code>OsString</code>.<CmConverts a <code>PathBuf</code> into an <code>OsString</code>E`Converts a Box&lt;OsStr&gt; into an <code>OsString</code> without copying or \xe2\x80\xa6DaCopies any value implementing AsRef&lt;OsStr&gt; into a newly \xe2\x80\xa6FbConverts a <code>Cow&lt;&#39;a, OsStr&gt;</code> into an <code>OsString</code>, by copying the \xe2\x80\xa6AoReturns the argument unchanged.0000DfReturns a <code>File</code> that takes ownership of the given file \xe2\x80\xa611DfConverts a <code>&amp;mut T</code> to a <code>NonNull&lt;T&gt;</code>.2DbConverts a <code>&amp;T</code> to a <code>NonNull&lt;T&gt;</code>.333CnConverts an <code>ErrorKind</code> into an <code>Error</code>.DgConverts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.CjConverts <code>TryReserveError</code> to an error with \xe2\x80\xa66DeConverts a <code>[T; N]</code> into a <code>BTreeSet&lt;T&gt;</code>.77777777777777777DgConverts a <code>[T; N]</code> into a <code>LinkedList&lt;T&gt;</code>.888888DeConverts a <code>[T; N]</code> into a <code>VecDeque&lt;T&gt;</code>.DgTurn a <code>Vec&lt;T&gt;</code> into a <code>VecDeque&lt;T&gt;</code>.::::::EaCreates a new <code>OnceCell&lt;T&gt;</code> which already contains the given \xe2\x80\xa6DdCreates a new <code>Cell&lt;T&gt;</code> containing the given value.<DhAllocates a reference-counted string slice and copies <code>v</code> \xe2\x80\xa60ElConverts a <code>&amp;mut CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the \xe2\x80\xa6CmCreates a reference-counted pointer from a clone-on-write \xe2\x80\xa6FaConverts a <code>&amp;CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the contents \xe2\x80\xa6EmConverts a <code>CString</code> into an Rc&lt;CStr&gt; by moving the <code>CString</code> \xe2\x80\xa6DgConverts a generic type <code>T</code> into an <code>Rc&lt;T&gt;</code>DkConverts an <code>OsString</code> into an Rc&lt;OsStr&gt; by moving the \xe2\x80\xa6CiCopies the string into a newly allocated Rc&lt;OsStr&gt;.DbConverts a <code>[T; N]</code> into an <code>Rc&lt;[T]&gt;</code>.CgAllocates a reference-counted slice and fills it by \xe2\x80\xa6FeConverts a <code>Path</code> into an <code>Rc</code> by copying the <code>Path</code> data into a \xe2\x80\xa61DjAllocates a reference-counted slice and moves <code>v</code>\xe2\x80\x99s items \xe2\x80\xa64CdMove a boxed object to a new, reference counted, \xe2\x80\xa6<EmConverts a <code>PathBuf</code> into an Rc&lt;Path&gt; by moving the <code>PathBuf</code> \xe2\x80\xa63CiConverts a reference-counted string slice into a byte \xe2\x80\xa6AoReturns the argument unchanged.DgCreates a new <code>RefCell&lt;T&gt;</code> containing the given value.11111CgConverts a Box&lt;Path&gt; into a <code>PathBuf</code>.2CcConverts a clone-on-write pointer to an owned path.CjConverts a <code>String</code> into a <code>PathBuf</code>CnConverts an <code>OsString</code> into a <code>PathBuf</code>.DaConverts a borrowed <code>OsStr</code> to a <code>PathBuf</code>.6DjCreates a new <code>UnsafeCell&lt;T&gt;</code> containing the given value.77777777CgConverts a <code>File</code> into a <code>Stdio</code>.CnConverts a <code>ChildStderr</code> into a <code>Stdio</code>.BlRedirect command stdout/stderr to our stdoutCnConverts a <code>ChildStdout</code> into a <code>Stdio</code>.DiTakes ownership of a file descriptor and returns a <code>Stdio</code> \xe2\x80\xa6CmConverts a <code>ChildStdin</code> into a <code>Stdio</code>.=BlRedirect command stdout/stderr to our stderr>>>>>>>>>>>>>>>>>CkCreates a new mutex in an unlocked state ready for use. \xe2\x80\xa6???E`Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked. \xe2\x80\xa6AoReturns the argument unchanged.00000CoCreates a new cell with its contents set to <code>value</code>.11DhAllocates a <code>Vec&lt;u8&gt;</code> and fills it with a UTF-8 string.2DgTurn a <code>VecDeque&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.EgAllocates a <code>Vec&lt;T&gt;</code> and fills it by cloning <code>s</code>\xe2\x80\x99s items.EaAllocates a <code>Vec&lt;T&gt;</code> and moves <code>s</code>\xe2\x80\x99s items into it.CeConverts a <code>CString</code> into a Vec&lt;u8&gt;.DmConverts a <code>BinaryHeap&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.BnConverts a clone-on-write slice into a vector.44EbConverts the given <code>String</code> to a vector <code>Vec</code> that holds \xe2\x80\xa6ChConverts a boxed slice into a vector by transferring \xe2\x80\xa66:::::::EgConverts a Vec&lt;NonZero&lt;u8&gt;&gt; into a <code>CString</code> without copying \xe2\x80\xa6;DmConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or \xe2\x80\xa6DlConverts a &amp;CStr into a <code>CString</code> by copying the contents \xe2\x80\xa6EoConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the \xe2\x80\xa6>>>>>D`Converts a <code>&amp;mut str</code> into a <code>String</code>.ClConverts a <code>&amp;str</code> into a <code>String</code>.ClConverts a clone-on-write string to an owned instance of \xe2\x80\xa6EcConverts the given boxed <code>str</code> slice to a <code>String</code>. It is \xe2\x80\xa6CoAllocates an owned <code>String</code> from a single character.AoReturns the argument unchanged.CoConverts a <code>&amp;String</code> into a <code>String</code>.11111111111111111111111111111111111111111111111CoConstructs an <code>ExitCode</code> from an arbitrary u8 value.222222DcConverts a <code>RecvError</code> into a <code>TryRecvError</code>.3DgConverts a <code>RecvError</code> into a <code>RecvTimeoutError</code>.EeConverts a <code>SendError&lt;T&gt;</code> into a <code>TrySendError&lt;T&gt;</code>.55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555CjUse a <code>Wake</code>-able type as a <code>Waker</code>.066666666666666666BmConvert <code>..</code> into allocation mode.BoConvert an exclusive slice into borrowing mode.CmConvert an exclusive reference to an array into borrowing \xe2\x80\xa699999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999DbCreates an <code>IpAddr::V4</code> from a four element byte array.CeCopies this address to a new <code>IpAddr::V6</code>.;DfCreates an <code>IpAddr::V6</code> from an eight element 16-bit array.CeCopies this address to a new <code>IpAddr::V4</code>.DeCreates an <code>IpAddr::V6</code> from a sixteen element byte array.D`Creates an <code>Ipv4Addr</code> from a four element byte array.?EgUses <code>Ipv4Addr::from_bits</code> to convert a host byte order <code>u32</code> \xe2\x80\xa6EhUses <code>Ipv6Addr::from_bits</code> to convert a host byte order <code>u128</code> \xe2\x80\xa6DcCreates an <code>Ipv6Addr</code> from a sixteen element byte array.DdCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.AoReturns the argument unchanged.0EfConverts a tuple struct (Into&lt;<code>IpAddr</code>&gt;, <code>u16</code>) into a \xe2\x80\xa6DhConverts a <code>SocketAddrV4</code> into a <code>SocketAddr::V4</code>.2DhConverts a <code>SocketAddrV6</code> into a <code>SocketAddr::V6</code>.333ElConverts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>CdMoves <code>val</code> into a new <code>Some</code>.EeConverts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.ElConvert the <code>CtOption&lt;T&gt;</code> wrapper into an <code>Option&lt;T&gt;</code>, \xe2\x80\xa677777EaConverts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>.8G`Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not \xe2\x80\xa60099999999999EeMoves the value into a <code>Poll::Ready</code> to make a <code>Poll&lt;T&gt;</code>.:CmUse a <code>Wake</code>-able type as a <code>RawWaker</code>.0;0;;;BjConverts to this type from the input type.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<DgUnstable module containing the unstable <code>From</code> derive macro.============1===============================DlCreates a new <code>UnsafePinned&lt;T&gt;</code> containing the given value.22222>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CmConverts a <code>bool</code> into an <code>AtomicBool</code>.?DgConverts a <code>*mut T</code> into an <code>AtomicPtr&lt;T&gt;</code>.AoReturns the argument unchanged.CjConverts an <code>i8</code> into an <code>AtomicI8</code>.1CjConverts an <code>u8</code> into an <code>AtomicU8</code>.2ClConverts an <code>i16</code> into an <code>AtomicI16</code>.ClConverts an <code>u16</code> into an <code>AtomicU16</code>.44ClConverts an <code>i32</code> into an <code>AtomicI32</code>.ClConverts an <code>u32</code> into an <code>AtomicU32</code>.6ClConverts an <code>i64</code> into an <code>AtomicI64</code>.7ClConverts an <code>u64</code> into an <code>AtomicU64</code>.88D`Converts an <code>isize</code> into an <code>AtomicIsize</code>.D`Converts an <code>usize</code> into an <code>AtomicUsize</code>.:::::::::DnCreates a new <code>SyncUnsafeCell&lt;T&gt;</code> containing the given value.;;;;;;;;;;;;;;;;;;CoUse a <code>Wake</code>-able type as a <code>LocalWaker</code>.CbCreates a ContextBuilder from an existing Context.=================================================================================DfAllocate a <code>Vec&lt;u8&gt;</code> and fill it with a UTF-8 string.>CgConvert a boxed slice into a vector by transferring \xe2\x80\xa6CgConvert a boxed array into a vector by transferring \xe2\x80\xa6EeAllocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>\xe2\x80\x99s items.0AoReturns the argument unchanged.000DgAlways evaluates to <code>TryReserveErrorKind::CapacityOverflow</code>.FcConverts a type of <code>Error</code> + <code>Send</code> + <code>Sync</code> into a box of dyn \xe2\x80\xa62DkConverts a type of <code>Error</code> into a box of dyn <code>Error</code>.DjConverts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>DcConverts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>DcConverts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>FbConverts a <code>&amp;CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the contents \xe2\x80\xa6DaConverts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>BdConvert a vector into a boxed slice.CjConverts a <code>T</code> into a <code>Box&lt;T&gt;</code>:::::::::::::::::::DgUnstable module containing the unstable <code>From</code> derive macro.BjConverts to this type from the input type.00000<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<CdCreates a \xe2\x80\x98Color\xe2\x80\x99 from the tuple representationaMake an object from a byte array.>>0>0>>0>>0>>0>>0>>>>>>>>00>>>>>>>0>>>0>>>>0>>0>0>0>>>>00>0>0>>>>>0>0>>>>>>0>0>>>>0>0>>>>>>>>>>>>>0>>>>>>>>>>>>>AhCreate borrow on a Bound???????????????????????????????????????????????????????????????????????????????????????????????????DjCreates a new Python <code>bytearray</code> object from another Python \xe2\x80\xa6AoReturns the argument unchanged.0000000000000000000000000DkCreates a new Python <code>memoryview</code> object from another Python \xe2\x80\xa611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111CgInstantiate a noise sample from a random 32-bit source.22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222BoSplats the single value given across all lanes.03033EdConverts the lower two <code>i32</code> lanes to two <code>f64</code> lanes (and \xe2\x80\xa6114Bewiden with zero extend from u8 to i162Bewiden with sign extend from i8 to i166636336363636366336Bawidens and sign extends to u16x164747B`widens and zero extends to u32x8858558888888888888888888888888888888888888888888888>=8888=====888888888888CkCreates a new mutex in an unlocked state ready for use. \xe2\x80\xa699E`Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked. \xe2\x80\xa6::::::::::::::DlConverts a <code>[(K, V); N]</code> into a <code>HashMap&lt;K, V&gt;</code>.;DdConverts a <code>[T; N]</code> into a <code>HashSet&lt;T&gt;</code>.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<DaTakes ownership of a <code>TcpListener</code>\xe2\x80\x99s socket file \xe2\x80\xa6DaTakes ownership of a <code>ChildStdin</code>\xe2\x80\x99s file descriptor.DfTakes ownership of a <code>File</code>\xe2\x80\x99s underlying file descriptor.DgTakes ownership of a <code>TcpStream</code>\xe2\x80\x99s socket file descriptor.AoReturns the argument unchanged.DhTakes ownership of a <code>UnixStream</code>\xe2\x80\x99s socket file descriptor.DbTakes ownership of a <code>ChildStderr</code>\xe2\x80\x99s file descriptor.DbTakes ownership of a <code>UnixListener</code>\xe2\x80\x99s socket file \xe2\x80\xa6DbTakes ownership of a <code>ChildStdout</code>\xe2\x80\x99s file descriptor.DbTakes ownership of a <code>UnixDatagram</code>\xe2\x80\x99s socket file \xe2\x80\xa6D`Takes ownership of a <code>UdpSocket</code>\xe2\x80\x99s file descriptor.666666FdConverts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into \xe2\x80\xa6CkMove a boxed object to a new, reference-counted allocation.EnConverts a <code>PathBuf</code> into an Arc&lt;Path&gt; by moving the <code>PathBuf</code> \xe2\x80\xa62CnConverts an atomically reference-counted string slice into \xe2\x80\xa6CjCreates an atomically reference-counted pointer from a \xe2\x80\xa6DlConverts an <code>OsString</code> into an Arc&lt;OsStr&gt; by moving the \xe2\x80\xa6DjAllocates a reference-counted slice and moves <code>v</code>\xe2\x80\x99s items \xe2\x80\xa6EnConverts a <code>CString</code> into an Arc&lt;CStr&gt; by moving the <code>CString</code> \xe2\x80\xa6FbConverts a <code>&amp;CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the contents \xe2\x80\xa6EmConverts a <code>&amp;mut CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the \xe2\x80\xa6CjCopies the string into a newly allocated Arc&lt;OsStr&gt;.DcConverts a <code>[T; N]</code> into an <code>Arc&lt;[T]&gt;</code>.1CgAllocates a reference-counted slice and fills it by \xe2\x80\xa60EaAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.AoReturns the argument unchanged.11CkConverts a <code>T</code> into an <code>Arc&lt;T&gt;</code>11111111DgAlways evaluates to <code>TryReserveErrorKind::CapacityOverflow</code>.222222222222222222222222222222222222222222222222222222222222222DbConstructs a new full slice that is equivalent to <code>::</code>.DiHint whether this <code>Consumer</code> would like to stop processing \xe2\x80\xa6DgHint whether this <code>Folder</code> would like to stop processing \xe2\x80\xa6DaCreates an iterator which ends after the first <code>None</code>.000000000000000000000DjChanges gain of the effect. <code>gain</code> will be clamped to [0.0, \xe2\x80\xa6CjThe volume adjustment for frequencies in the specified \xe2\x80\xa6CmGame-development and interactive applications. game::{loop\xe2\x80\xa6CjGeometric types and operations, spatial constructs and \xe2\x80\xa6BnCreate a resampler with the given definitions.Ab GLSL interfacing.DgReturns whether the window was grabbed by <code>set_grab</code> or not.EhCreates a new <code>AnsiColor8b</code> from a 24-color grayscale <code>value</code>, \xe2\x80\xa6BoSets the foreground color to <code>Grey</code>.BdAttempts to extend the memory block.00000AnRetrieve the joystick\xe2\x80\x99s GUIDAeHalt channel playbackBgHalt playback on all channels in group.AgHalt playback of music.CdFeeds this value into the given <code>Hasher</code>.CdA convenience method for when you need a quick hash.00AcHash a raw pointer.CaComputes the FNV hash of the provided byte slice.000AhGeneric hashing support.4042042hHashing.AmCryptographic hash functions.B`Retrieves the hash code of self.0375ClInformation about something that was obtained, observed, \xe2\x80\xa60CeReturns a shared reference to the head of this tuple.0AdMake a HEAD request.BeMake a HEAD request using this agent.DiCreates a new <code>Builder</code> initialized with a HEAD method and \xe2\x80\xa6Cishort English help text @todo What about other languages?CiHides the window, so it won\xe2\x80\x99t even show in the taskbar.CmHints to compiler that affects how code should be emitted \xe2\x80\xa60C`Re-export of the <code>core::hint</code> module.1CfHKDF (HMAC-based Extract-and-Expand Key Derivation \xe2\x80\xa6CnHMAC (Hash-based Message Authentication Code) as specified \xe2\x80\xa6DkOne-shot function for generating an HMAC-SHA512 tag of <code>data</code>\xe2\x80\xa6DkOne-shot function for generating an HMAC-SHA256 tag of <code>data</code>\xe2\x80\xa6DkOne-shot function for generating an HMAC-SHA384 tag of <code>data</code>\xe2\x80\xa6AfSet the proxy hostnameAnThe host part of the proxy uriBfGet the host of this <code>Uri</code>.BlGet the host of this <code>Authority</code>.DhEquivalent to <code>hours()</code>, but reads better for singular units.ChReturns the \xe2\x80\x9chour\xe2\x80\x9d component of this zoned datetime.BkSet the hour field on a <code>Zoned</code>.BfReturns the parsed hour, if available.CbReturns the \xe2\x80\x9chour\xe2\x80\x9d component of this datetime.BnSet the hour field on a <code>DateTime</code>.BnReturns the \xe2\x80\x9chour\xe2\x80\x9d component of this time.BjSet the hour field on a <code>Time</code>.mHour: 0 to 23BdHybrid Public Key Encryption (HPKE).DdRedundant constants module for the <code>i128</code> primitive type.0BcRecognizes a signed 16 byte integer1BnInternationalization and localization support.CgA SIMD vector with one element of type <code>i8</code>.00000ChA SIMD vector with two elements of type <code>i8</code>.00000CiA SIMD vector with four elements of type <code>i8</code>.00000CjA SIMD vector with eight elements of type <code>i8</code>.00000CcOptional icon data used by the OS where applicable:00AjCalculate the inverse FFT.CaReturns the imaginary part of the complex number.0Cm(info) Outputs a message to the console with the info log \xe2\x80\xa6CaContextual static information about the mismatch.Cg<code>log</code> Logs a message at the indicated level.10CeTypes for providing info about resources to trait \xe2\x80\xa6BaLogs a message at the info level.BmGets information about the rendering context.BfReturns the event handler initialized.BbInitialize the pixel buffer stage.CjInitialize the miniquad rendering context, opening the \xe2\x80\xa62AoFilter initialization function.CeCalled when the effect is first sent to the renderer.DeReturn a <code>Blake2b</code> state selected by the given Blake2b \xe2\x80\xa6CkInitializes the SDL library. This must be called before \xe2\x80\xa6EeInitializes <code>SDL2_image</code> with <code>InitFlags</code>. Returns error if \xe2\x80\xa6CmLoads dynamic libraries and prepares them for use.  Flags \xe2\x80\xa6CkInitializes the truetype font API and returns a context \xe2\x80\xa6AjAn instantiation function.CjConverts this type into the (usually inferred) input type.BaCalls <code>U::from(self)</codedReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_0</code> (The 1st).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_1</code> (The 2nd).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_2</code> (The 3rd).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_3</code> (The 4th).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_4</code> (The 5th).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_5</code> (The 6th).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_6</code> (The 7th).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_7</code> (The 8th).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_8</code> (The 9th).EeReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_9</code> (The 10th).BmIterate through all supported logging levels.BoIterate through all supported filtering levels.CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6CbCreates an iterator over the contents of the list.CmReturns an iterator visiting all values in the underlying \xe2\x80\xa6CmAn iterator visiting all elements in arbitrary order. The \xe2\x80\xa6AdReturns an iterator.CkGets an iterator over the entries of the map, sorted by \xe2\x80\xa61CnReturns an immutable iterator (yields references to items, \xe2\x80\xa60DjGets an iterator that visits the elements in the <code>BTreeSet</code> \xe2\x80\xa6AlProvides a forward iterator.BaReturns a front-to-back iterator.ClProduces an iterator over the path\xe2\x80\x99s components viewed \xe2\x80\xa6CmReturns an iterator that will block waiting for messages, \xe2\x80\xa6CfReturns an iterator over the possibly contained value.0AnComposable external iteration.0CmCreates a new closure that returns an iterator where each \xe2\x80\xa6ChCreates an iterator over the elements within this range.0021BfYield a set of contained flags values.00000000000000000000CnCreate a blocking iterator over the values received on the \xe2\x80\xa6>BfBorrow the inner value as an iterator.4CjReturns an iterator over all occurrences of the needle \xe2\x80\xa6CjReturns an iterator over all occurrences of one of the \xe2\x80\xa60111111BmReturns an iterator over this list\xe2\x80\x99s items.DbReturns an iterator of <code>(key, value)</code> pairs in this \xe2\x80\xa6BjReturns an iterator of values in this set.20BiReturns an iterator over the tuple items.BbIteration over Python collections.32421ChIterator over extended state enumeration levels &gt;= 2.AlIterator over SGX sub-leafs.CaTraits for writing parallel programs using an \xe2\x80\xa6CnReturns an iterator over all capture groups. This includes \xe2\x80\xa6BjGets an iterator over individual channels.BiReturns an iterator over key/value pairs.BdReturns an iterator over all values.B`Returns an iterator over tables.BhReturns an iterator over the root table.03CkReturns an iterator over all key/value pairs, including \xe2\x80\xa6BiAn iterator visiting all key-value pairs.CkReturns an iterator visiting all values associated with \xe2\x80\xa60AnComposable external iteration.CmCreates a new closure that returns an iterator where each \xe2\x80\xa6CmReturns an iterator that will block waiting for messages, \xe2\x80\xa6CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6CmAn iterator visiting all elements in arbitrary order. The \xe2\x80\xa6CjCreate an iterator running multiple iterators in lockstep.Al&lt; Joystick hat event dataEdConversions to and from jiff\xe2\x80\x99s <code>Span</code>, <code>SignedDuration</code>, \xe2\x80\xa6Ao<code>jiff</code> modificationsBjWaits for the associated thread to finish.0DiCombine all iterator elements into one <code>String</code>, separated \xe2\x80\xa60EkCreates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.Cg\xf0\x9d\x90\x93 Joins multiple byte slices or string slices in \xe2\x80\xa6220ClPolls multiple futures simultaneously, returning a tuple \xe2\x80\xa6BhImplementation of <code>[T]::join</code>1CmConcatenates string slices into a string slice, separated \xe2\x80\xa65DfTakes two closures and <em>potentially</em> runs them in parallel. \xe2\x80\xa6EeExecute <code>oper_a</code> and <code>oper_b</code> in the thread pool and return \xe2\x80\xa6EhJoin two values implementing <code>AsyncRead</code> and <code>AsyncWrite</code> into \xe2\x80\xa6544BdDecoding and Encoding of JPEG ImagesCkThe jump function for the generator, equivalent to 2^64 \xe2\x80\xa6CiAn iterator visiting all keys in arbitrary order. The \xe2\x80\xa6CkGets an iterator over the keys of the map, in sorted order.AlReturns a list of dict keys.CbReturns a list containing all keys in the mapping.010AnAn iterator visiting all keys.4CnForces the child process to exit. If the child has already \xe2\x80\xa6DeSends <code>Signal::Kill</code> to the process (which is the only \xe2\x80\xa6AiForces the child to exit.BaForces the child process to exit.D`Returns the corresponding <code>ErrorKind</code> for this error.AoReturns the parsed prefix data.CiOutputs the detailed cause of parsing an integer failing.BiReturns the kind of the normalized angle.00BhThe type of pointer (mouse, touch, pen).0DfReturns the corresponding <code>UnsupportedErrorKind</code> of the \xe2\x80\xa6DgReturns the corresponding <code>ParameterErrorKind</code> of the error.DcReturns the corresponding <code>LimitErrorKind</code> of the error.CbDetails about the allocation that caused the errorBhThe kind of mouse event that was caused.nKind of event.AdType of base effect.CjReturns the \xe2\x80\x9ckind\xe2\x80\x9d of this annotation. The kind is \xe2\x80\xa6BcSets the kind of distortion to use.AnThe kind of distortion to use.BlThe shape of the frequency adjustment curve.EaGet the <code>kind</code> field of the <code>PyASCIIObject</code> state bitfield.AiReturns the kind of disk.CaReturns the value of the \xe2\x80\x9ckind\xe2\x80\x9d refresh kind.:CkLanguage functionality, DSLs and FFIs. lang::{dsl, ffi, \xe2\x80\xa6CkReturns a reference to the last element in the set, if any.CbConsumes the iterator, returning the last element.000000000000000000000DkConsumes and leaks the <code>Box</code>, returning a mutable reference, \xe2\x80\xa6DeConsumes and leaks the <code>OsString</code>, returning a mutable \xe2\x80\xa6CaConverts into a reference to the underlying data.CiConverts into a mutable reference to the underlying data.DdConsumes and leaks the <code>PathBuf</code>, returning a mutable \xe2\x80\xa6DjConsumes and leaks the <code>Vec</code>, returning a mutable reference \xe2\x80\xa6DcConsumes and leaks the <code>String</code>, returning a mutable \xe2\x80\xa6166CkDistance from the alignment point to the leftmost glyph \xe2\x80\xa60AdReturns the x offsetElConvert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.EmIf <code>Left</code>, or <code>Both</code>, return <code>Some</code> with the left value. \xe2\x80\xa6B`The sample for the left channel.CaReturns true if the left mouse button is pressed.0CjReturns the x-position of the left side of this rectangle.0DgCalculates a linearly interpolated value between <code>u..=v</code> \xe2\x80\xa600B`The line containing the message.ChReturns the line number from which the panic originated.CcExpands to the line number on which it was invoked.00000000000AeSet <code>line</code>111111CiLinguistics and languge theory. ling::{art, grammar, nat}BjImplementations of sequential collections.AlReturns the components list.AgReturns the disks list.BcReturns the network interfaces map.AgReturns the users list.AhReturns the groups list.BkLoads a value from the <code>Atomic</code>.AlLoads a value from the bool.AoLoads a value from the pointer.BfLoads a value from the atomic integer.0000000BdLoads a value from the atomic float.11011321111111111BaCreate a new image from a Reader.Amload as a surface. except TGACkAcquire an exclusive lock on the file. Blocks until the \xe2\x80\xa6CmLocks this handle to the standard input stream, returning \xe2\x80\xa6CnLocks this handle to the standard output stream, returning \xe2\x80\xa6CmLocks this handle to the standard error stream, returning \xe2\x80\xa6CmAcquires a mutex, blocking the current thread until it is \xe2\x80\xa6CbAcquires the lock, spinning until it is available.CnLocks the audio device using <code>SDL_LockAudioDevice</code>.CmLocks this mutex, causing the current task to yield until \xe2\x80\xa6CnAcquires the lock, blocking the current thread until it is \xe2\x80\xa64BjThe base 2 logarithm of <code>self</code>.0AeThe base 2 logarithm.0BnReturns the base-2 logarithm of the alignment.BmThe base 2 logarithm of <code>x</code> (f64).ChProduces a vector where every element has the base-2 \xe2\x80\xa6BnThe natural logarithm of <code>x</code> (f32).AbGame loop, timing.Eg<code>safe_arch</code> The data for a 128-bit SSE register of four <code>f32</code> \xe2\x80\xa60DcThe data for a 128-bit SSE register of four <code>f32</code> lanes.Eh<code>safe_arch</code> The data for a 256-bit AVX register of eight <code>f32</code> \xe2\x80\xa60DdThe data for a 256-bit AVX register of eight <code>f32</code> lanes.DgThe data for a 512-bit AVX-512 register of sixteen <code>f32</code> \xe2\x80\xa6DfConstruct a <code>Codebook</code> using the given codewords, their \xe2\x80\xa6DfSearches the registry for a <code>Decoder</code> that supports the \xe2\x80\xa6DgApply the function <code>f</code> to each channel of this pixel and \xe2\x80\xa6CeReturns a bit mask that can be used to match this \xe2\x80\xa6FaIf <code>order</code> is <code>Native</code>: A <code>ChannelLayoutMask</code> containing the \xe2\x80\xa6CmThis member must be used for AV_CHANNEL_ORDER_NATIVE, and \xe2\x80\xa6ClExperimental implementations of floating point functions \xe2\x80\xa60BhMathematical helper functions and types.11BdMath utilities for audio processing.DhThe <code>mdct</code> module implements the Modified Discrete Cosine \xe2\x80\xa6AiSets the method for mean.CkMethod for choosing a representative mean color for the \xe2\x80\xa60BcFilter using Mean: D = S1/2 + S2/2.AoMechanics-related abstractions.DeThe <code>meta</code> module defines basic metadata elements, and \xe2\x80\xa6AgMidi input capabilitiesAcMidi functionality.1BdUseful for testing and benchmarking.Aj&lt; current key modifiersBhReturns the rights applied to this file.AfSet the rounding mode.00000000000CaSets the frequencies that the filter will remove.BlThe frequencies that the filter will remove.Ca\\brief The mode of these window-shape parameters.B`Returns the mode permission bitsChSets the mode bits that a new file will be created with.6106CmSets the mode to create new directories with. This option \xe2\x80\xa6CdThe active modifiers of the key (e.g., Shift, Ctrl).000CkMulti-producer, multi-consumer FIFO queue communication \xe2\x80\xa6BhMulti-producer, single-consumer channel.CnA multi-producer, single-consumer queue for sending values \xe2\x80\xa6ClMulti-producer, single-consumer FIFO queue communication \xe2\x80\xa6BnFilter using Mult: D = saturation255(S1 * S2).AoReturns the name of the prefix.CfReturns the static name of the storage implementation.CjNames the thread-to-be. Currently the name is used for \xe2\x80\xa6AiGets the thread\xe2\x80\x99s name.Al(name) Gets the window name.4443CmGet an abbreviated, human-readable string describing this \xe2\x80\xa6Ao&lt; short name for the profileCjName of the codec implementation. The name is globally \xe2\x80\xa6CiName of the codec described by this descriptor. It is \xe2\x80\xa6CgName of the hardware accelerated codec. The name is \xe2\x80\xa6m&lt; FilenameCmA comma separated list of short names for the format. New \xe2\x80\xa6CgFilter name. Must be non-NULL and unique among filters.Ba&lt; name of this filter instanceBmunique name for this input/output in the listClReturns the name of this location. Should usually return \xe2\x80\xa6ClReturns the font\xe2\x80\x99s face name if it has one. It is from \xe2\x80\xa6CkReturns the mapping name if it exists otherwise returns \xe2\x80\xa6BiGets the name of the <code>PyType</code>.BkRetrieves the name of this capsule, if set.DeReturns the name (the <code>__name__</code> attribute) of the module.EfGets the name of the <code>PyType</code>. Equivalent to <code>self.__name__</code> \xe2\x80\xa6210BiGets the string that was specified by \xe2\x80\xa6DjReturns the <code>Match</code> associated with the capture group named \xe2\x80\xa6Am&lt; the name of the joystickAm&lt; The name of the rendererCnReturn the name of the controller or an empty string if no \xe2\x80\xa6ClReturn the name of the joystick or an empty string if no \xe2\x80\xa6AfReturns the disk name.AhReturns the system name.AmReturns the motherboard name.AiReturns the product name.B`Returns the name of the process.AjReturns this CPU\xe2\x80\x99s name.AmReturns the name of the user.AnReturns the name of the group.ClInformation about something that was needed, expected or \xe2\x80\xa60CaAdvances the iterator and returns the next value.B`Iterates over shared references.0AgReturns the next month.AiReturns the next weekday,AaOverflow Behavior4444444CfPerforms the next search step starting from the front.05555550Cfnext input/input in the list, NULL if this is the last6CkReturns the next weekday, wrapping around at the end of \xe2\x80\xa6BiRetrieves the next item from an iterator.88C`Iterate over all SoC vendor specific attributes.BcIterate over all cache information.CbIterate over all cache info subleafs for this CPU.CjIterate over each sub-leaf with an address translation \xe2\x80\xa6BaProvides the next limited sample.BlReturns the next sample in the audio stream.AjPointer to the next deviceDjSearches the provided <code>MediaSourceStream</code> for metadata or a \xe2\x80\xa6CaAdvances the iterator and returns the next value.00000<<CnAdvances the cursor to the next gap, returning the key and \xe2\x80\xa600CnAdvances the cursor to the next gap, returning the element \xe2\x80\xa6CgAdvances the cursor to the next gap, returning the  \xe2\x80\xa61BfDrops the pair of next stack elements.AiReturns the empty bitset.ChReturns a database for which all time zone lookups fail.AfCreates an empty body.Citrue if no high bits are set for any values of the vector0DhReturns a reference to a <code>Waker</code> that does nothing when used.DkReturns a reference to a <code>LocalWaker</code> that does nothing when \xe2\x80\xa6CjThis stream will be ignored. This is the equivalent of \xe2\x80\xa6AkCreates a null raw pointer.000ChCreates an iterator that yields an element exactly once.000ChCreates a parallel iterator that produces an element \xe2\x80\xa61DiCreates an open interval $(l, u)$ <em><code>lower..&lt;upper</code></em>.BjAttempts to open a file in read-only mode.EbOpens a file at <code>path</code> with the options specified by <code>self</code>.CmOpen the image located at the path specified. The image\xe2\x80\x99\xe2\x80\xa6CfOpen a file to read, format will be guessed from path.CjAEAD ChaCha20Poly1305 decryption and authentication as \xe2\x80\xa6CiAEAD XChaCha20Poly1305 decryption as specified in the \xe2\x80\xa6BaContext-aware opening operations.000CaAuthenticated decryption using XChaCha20Poly1305.DkAttempt to open the controller at index <code>joystick_index</code> and \xe2\x80\xa6DiAttempt to open the joystick at index <code>joystick_index</code> and \xe2\x80\xa6BdOptions to be apllied to the filter.C`Duplicates the next of stack element to the top.CiReturns the pair of offsets (into the needle) used to \xe2\x80\xa600BmCreates an unnamed pair of connected sockets.0CjBlocks unless or until the current thread\xe2\x80\x99s token is \xe2\x80\xa6000CeReturns the full path to the file that this entry \xe2\x80\xa6AoThe inner <code>PathBuf</code>.0AmPlatform-specific device pathBfGet the path of this <code>Uri</code>.AjReturns the path componentBaCross-platform path manipulation.DiReturns the greatest item in the binary heap, or <code>None</code> if \xe2\x80\xa6AlPeeks the top stack element.BkAttempt to look ahead <code>n</code> bytes.CjReceives data on the socket from the remote address to \xe2\x80\xa6CjReceives single datagram on the socket from the remote \xe2\x80\xa6CmReturns a reference to the next() value without advancing \xe2\x80\xa6DiWorks exactly like <code>.next()</code> with the only difference that \xe2\x80\xa6EdWorks exactly like the <code>peek</code> method in <code>std::iter::Peekable</code>.BmApply the parser without advancing the input.55BmConvert the wrapper type into the inner type.ClPhysical units and measurements. phys::{bio, chem, elec, \xe2\x80\xa6AjCreates an anonymous pipe.AlSound playback capabilities.0BhPlays effect on all associated gamepads.nPlays a sound.000BbResumes playback of a paused sink.BcResumes playback of a paused sound.CnPlay chunk on channel, or if channel is -1, pick the first \xe2\x80\xa6CjPlay the loaded music loop times through from start to \xe2\x80\xa6DgCompares and returns the maximum of two <code>PartialOrd</code>ered \xe2\x80\xa6DgCompares and returns the minimum of two <code>PartialOrd</code>ered \xe2\x80\xa6CdAttempts to resolve the future to a final value, \xe2\x80\xa6DdPolls the result of this job and writes it into <code>buffer</code>.11111CcChecks if there is an <code>Event</code> available.22CaA pool from which the frames are allocated by \xe2\x80\xa6CgReturns the port number associated with this socket \xe2\x80\xa600AbSet the proxy portAiThe port of the proxy uriBkGet the port part of this <code>Uri</code>.CaGet the port part of this <code>Authority</code>.BaThis is the MIX_CHANNEL_POST (-2)AdMake a POST request.BeMake a POST request using this agent.DiCreates a new <code>Builder</code> initialized with a POST method and \xe2\x80\xa6DdRaises <code>self</code> to the <code>y</code> floating point power.0CiRaises itself to the <code>p</code> floating point power.0ClReturns <code>x</code> to the power of <code>y</code> (f32).CmRaises <code>self</code> to the <code>p</code> integer power.0CjRaises <code>x</code> to the <code>p</code> integer power.FbExperimental version of <code>powi</code> in <code>core</code>. See <code>f32::powi</code> for \xe2\x80\xa6FbExperimental version of <code>powi</code> in <code>core</code>. See <code>f64::powi</code> for \xe2\x80\xa610CnAdvances the cursor to the previous gap, returning the key \xe2\x80\xa600CjAdvances the cursor to the previous gap, returning the \xe2\x80\xa600CfPushes a new item onto the beginning of this list, \xe2\x80\xa6BdPushes an item onto the binary heap.CjPushes a new <code>element</code> to the top of the stack.CcExtends the string with the given &amp;OsStr slice.BgPushes a value at the top of the stack.CaExtends <code>self</code> with <code>path</code>.BoAppends an element to the back of a collection.DkAppends the given <code>char</code> to the end of this <code>String</code>.DbAppends to the end of the string the given <code>character</code>.AnAdds a closure to the manager.143BkAppends an element to the back of a vector.3CiPushes a new <code>Metadata</code> revision onto the log.CiAppends a new value to the end of the array, applying \xe2\x80\xa6AmAppends a table to the array.nAdd a value T.A`Add more contextAamaximum quantizerAaminimum quantizerCmThis function simply quits the application without giving \xe2\x80\xa6DhShortcut for <code>order_quit</code>. Will add a legacy attribute at \xe2\x80\xa6Al&lt; Quit request event dataAa&lt; Ramp effect.AiRandom number generation.ClReturn the heuristic frequency rank of the given byte. A \xe2\x80\xa6B`&lt; frame rate in rational formBgThe signal sampling rate in hertz (Hz).CjReturns the device ID of this file (if it is a special \xe2\x80\xa600CgPull some bytes from this source into the specified \xe2\x80\xa6AoReads some bytes from the file.DiReads the value from <code>self</code> without moving it. This leaves \xe2\x80\xa6DgFill <code>buf</code> with the contents of the \xe2\x80\x9cfront\xe2\x80\x9d slice as \xe2\x80\xa6DhLocks this <code>RwLock</code> with shared read access, blocking the \xe2\x80\xa6B`Sets the option for read access.BkReads the value from src without moving it.ChReads the entire contents of a file into a bytes vector.7DhReads the value from <code>src</code> without moving it. This leaves the0BbReads a single <code>Event</code>.CdReturns the latest value that was written to the \xe2\x80\xa6CnRead up to \\c maxnum objects each of size \\c size from the \xe2\x80\xa6DgLocks this <code>RwLock</code> with shared read access, causing the \xe2\x80\xa6ChPulls some bytes from this source into the specified \xe2\x80\xa659==6BlReturns the real part of the complex number.0AfRectangles and points.AmGets the rect of the surface.CmReceives a single datagram message on the socket from the \xe2\x80\xa6ClAttempts to wait for a value on this receiver, returning \xe2\x80\xa6CjWait for an incoming value from the channel associated \xe2\x80\xa6BjReceives the next value for this receiver.002AnReceives data from the socket.Ajnumber of reference framesBoComputes the \xe2\x80\x9crepr\xe2\x80\x9d representation of self.0AkReturn the remaining input.DgRound <code>x</code> to the nearest integer, breaking ties toward even.BgReturns the path of the root directory.CaReturns the value of the \xe2\x80\x9croot\xe2\x80\x9d refresh kind.CiRotates the top six stack elements, clockwise, two times.nRows of cells.0C`Returns an iterator over the rows of this image.FeReturns <code>true</code> if the current <code>state</code> equals the given <code>expected</code>\xe2\x80\xa6CaSaves the buffer to a file at the path specified.0AnSaves an SDL Surface to a fileDeAn iterator adapter which, like <code>fold</code>, holds internal \xe2\x80\xa6000000000000000000000CjAEAD ChaCha20Poly1305 encryption and authentication as \xe2\x80\xa6CiAEAD XChaCha20Poly1305 encryption as specified in the \xe2\x80\xa6BaContext-aware sealing operations.000CaAuthenticated encryption using XChaCha20Poly1305.ChGet the Seed used to generate this keypair. Use this \xe2\x80\xa600BiSeek to an offset, in bytes, in a stream.BfSeek to an offset, in bytes in a file.CfSeek to an offset, in bytes, in the underlying reader.CgSeek to the offset, in bytes, in the underlying writer.3AiSeeks to an audio sample.CmSeek to \\c offset relative to \\c whence, one of stdio\xe2\x80\x99s \xe2\x80\xa6ClSeek, as precisely as possible depending on the mode, to \xe2\x80\xa60CkCreates a future which will seek an IO object, and then \xe2\x80\xa677CnSends data on the socket to the remote address to which it \xe2\x80\xa6CjAttempts to send a value on this channel, returning it \xe2\x80\xa6BjSends a value on this synchronous channel.ClSend a value into the channel, returning an error if all \xe2\x80\xa6CmSend a message to the port that this output connection is \xe2\x80\xa6CfSends a value into a python generator. This is the \xe2\x80\xa6BoSends a value, waiting until there is capacity.BjSends a value using the reserved capacity.0DkAttempts to send a message on this <code>UnboundedSender</code> without \xe2\x80\xa6DiAttempts to send a value to all active <code>Receiver</code> handles, \xe2\x80\xa68CkSends a new value via the channel, notifying all receivers.CiSend body data and blocks the caller until we receive \xe2\x80\xa6:C`Sends data on the socket to the socket\xe2\x80\x99s peer.Hh\xe2\x9a\x96\xef\xb8\x8f Wraps the given <code>OptRes</code> <code>value</code> in a <code>Some</code><code>(</code><code>Err</code><code>(error))</code>.0oNumber of Sets.AkNumber of Sets (Bits 31-00)BhSHA2 as specified in the FIPS PUB 180-4.CbSHA3 &amp; SHAKE as specified in the FIPS PUB 202.CfShows the window that was hidden by <code>hide</code>.CcReturns the <code>Sign</code> of <code>self</code>.DfReturns the sign of this formatter (<code>+</code> or <code>-</code>).1AnReturns the <code>Sign</code>.DiSets or removes the sign (the <code>+</code> or the <code>-</code> flag).AePortable SIMD module.AiSIMD compiler intrinsics.1010BaThe sine of <code>x</code> (f32).AdThe hyperbolic sine.000BlThe hyperbolic sine of <code>x</code> (f64).CkCreates an instance of a writer which will successfully \xe2\x80\xa6CeCreates an instance of an async writer which will \xe2\x80\xa61BlReturns the size of the interval, if finite.BbReturns the computed encoded size.AnSets the size (width, height).BmReturns the total size of this file in bytes.CfReturns the size in bytes of <code>LinuxSigset</code>.ChThe minimum size in bytes for a memory block of this \xe2\x80\xa6CgReturns the terminal size <code>(columns, rows)</code>.AfSize of data in bytes.Bg&lt; File size in bytes, -1 if unknown.AiTotal size of the object.BaByte size for a given UniformTypeDbReturns the size in bytes of texture with <code>dimensions</code>.CkThe size in bytes (from the offset specified in EBX) of \xe2\x80\xa6CnSize of the corresponding EPC section within the Processor \xe2\x80\xa6CkReturn the size of the file in this rwops, or -1 if unknownBl&lt; Audio buffer size in bytes (calculated)BiGet the size of a window\xe2\x80\x99s client area.BoReturns the width and height of this rectangle.0AhGet the size of the FFT.??DaCreates an iterator that skips the first <code>n</code> elements.00000000000000000000000AhSkips the current sourcelfield1 docs.CeSorts the list in-place. Equivalent to the Python \xe2\x80\xa600BiThe location within the original document0ClThe start/end index into the original document where the \xe2\x80\xa6111111110CjProduce the location of the consumed input as produced \xe2\x80\xa60BmGets the signal specification for the buffer.0A`The square root.0lSquare root.0FbExperimental version of <code>sqrt</code> in <code>core</code>. See <code>f32::sqrt</code> for \xe2\x80\xa6FbExperimental version of <code>sqrt</code> in <code>core</code>. See <code>f64::sqrt</code> for \xe2\x80\xa610BhThe square root of <code>x</code> (f64).CmProduces a vector where every element has the square root \xe2\x80\xa6DkAlgorithms for the <code>x86_64</code> target using 128-bit vectors via \xe2\x80\xa6CiNumber of elements between 2 horizontally consecutive \xe2\x80\xa6AnReturns the step of the range.DhIncrement to use when iterating the slice from <code>start</code> to \xe2\x80\xa6AfStops this Web Worker.CkFades out the sound to silence with the given tween and \xe2\x80\xa60AkStops and resets the clock.BgReturns the exclusive end of the range.A`End of the sliceBeStops the sink by emptying the queue.0A`Stops the sound.CjIterate over the entire iterator and add all the elements.000DeStores a value into the <code>Atomic</code>, returning the old value.CkStores a value into the bool, returning the previous value.CkStores a value into the pointer, returning the previous \xe2\x80\xa6CiStores a value into the atomic integer, returning the \xe2\x80\xa60000000CgStores a value into the atomic float, returning the \xe2\x80\xa611011BaSwaps the top two stack elements.CiSwaps the values at two mutable locations of the same \xe2\x80\xa6ClSwaps elements at indices <code>i</code> and <code>j</code>.BkSwaps the values of two <code>Cell</code>s.DjSwaps the wrapped value of <code>self</code> with the wrapped value of \xe2\x80\xa6B`Swaps the values at two indices.CmSwaps the values at two locations, without deinitializing \xe2\x80\xa655:98888888888CfSwaps the values at two mutable locations, without \xe2\x80\xa660CaReturns the value of the \xe2\x80\x9cswap\xe2\x80\x9d refresh kind.71AkSynchronization primitives.AjSynchronization primitivesBhThread-safe reference-counting pointers.1CcSynchronization mechanisms based on the Python GIL.CfSynchronization primitives for use in asynchronous \xe2\x80\xa6BbUseful synchronization primitives.3DbGets an immutable slice to the <code>Tag</code>s in this revision.CaAny tags associated with the <code>Visual</code>.DaA list of <code>Tag</code>s associated with the <code>Cue</code>.DfA list of <code>Tag</code>s associated with the <code>CuePoint</code>.1CeReturns a shared reference to the tail of this tuple.DkConsumes the iterator and return an iterator of the last <code>n</code> \xe2\x80\xa60001AoTakes ownership of the ID data.DiTakes the contained value, leaving <code>Default::default()</code> in \xe2\x80\xa60EeTakes out some element at <code>index</code>, leaving <code>None</code> in its place.CmRemoves and returns the value in the set, if any, that is \xe2\x80\xa6ClRemoves and returns the element in the set, if any, that \xe2\x80\xa6DgCreates an adapter which will read at most <code>limit</code> bytes \xe2\x80\xa60DkTakes the value out of this <code>OnceCell</code>, moving it back to an \xe2\x80\xa6DkTakes the value of the cell, leaving <code>Default::default()</code> in \xe2\x80\xa6DkTakes the wrapped value, leaving <code>Default::default()</code> in its \xe2\x80\xa6DkTakes the value out of this <code>OnceLock</code>, moving it back to an \xe2\x80\xa6DiCreates an iterator that yields the first <code>n</code> elements, or \xe2\x80\xa60000000EeReplaces <code>dest</code> with <code>T::default()</code>, returning the previous \xe2\x80\xa6DjTakes the value from the <code>ManuallyDrop&lt;T&gt;</code> container out.DiTakes the value out of the option, leaving a <code>None</code> in its \xe2\x80\xa633333333333333888EfReplaces <code>dest</code> with the default value of <code>T</code>, returning the \xe2\x80\xa60CkTakes the current error from the Python interpreter\xe2\x80\x99s \xe2\x80\xa6CiTakes the value out of the cell, moving it back to an \xe2\x80\xa6DbCreates an iterator that yields the first <code>n</code> elements.0DhTakes only <code>n</code> repeats of the element, similar to the generalCjTakes ownership of the current value, leaving the cell \xe2\x80\xa6DkReturns a new <code>ReadBuf</code> comprised of the unfilled section up \xe2\x80\xa6DhCreates an adaptor which reads at most <code>limit</code> bytes from it.BmProduce the consumed input as produced value.0CiRecognize an input slice containing the first N input \xe2\x80\xa6BdParse taking <code>count</code> bits:CmRemoves and returns the value in the set, if any, that is \xe2\x80\xa6BdThe tangent of <code>x</code> (f32).AgThe hyperbolic tangent.000BoThe hyperbolic tangent of <code>x</code> (f64).CeTypes and Traits for working with asynchronous tasks.000AkAsynchronous green-threads.11AgTerminal functionality.CkAttribute macro applied to a function to turn it into a \xe2\x80\xa60000BiTests the value of the specified element.1111111111CkText types and operations, text processing. text::{fmt, \xe2\x80\xa6Bb&lt; 0 terminated plain UTF-8 textAcThe text to layout.Ae&lt; The editing textDa&lt; The editing text, which should be freed with SDL_free(), \xe2\x80\xa6Ac&lt; The input textAj&lt; Text input event dataAj&lt; The UTF-8 button textAeChains two orderings.DfReturns a new <code>Color</code> which, when applied, has the same \xe2\x80\xa6BlTile an image by repeating it multiple timesCg(time) Starts a timer with the given <code>name</code>.BgTime and calendar types and operations.AhTemporal quantification.0AlTime when event was emitted.0ChReturns the civil time component of this zoned datetime.CnSet the hour, minute, second, millisecond, microsecond and \xe2\x80\xa6CcReturns the civil time in this <code>Pieces</code>.DfCreates a new <code>Time</code> value in a <code>const</code> context.BlReturns the time component of this datetime.3AnThe current time of the clock.BfReturns the current time of the clock.BaThe <code>Time</code> to seek to.0DjOptional time. Required for: <em>Offset Date-Time</em>, <em>Local </em>\xe2\x80\xa6AfInternal time wrappers;Bl<code>core</code> Indicates unfinished code.0AjIndicates unfinished code.0CkA placeholder for a not-yet-implemented <code>Parser</code>1CaReturns the key value used to mark deleted slots.CcTrims samples from the start and end of the buffer.CgDuplicates the top element before the next of stack \xe2\x80\xa6Ao<code>tupl</code> modificationsAiA unit-agnostic rotation.0CnCreates a time zone from TZif binary data, whose format is \xe2\x80\xa6DdRedundant constants module for the <code>u128</code> primitive type.0BfRecognizes an unsigned 16 byte integer1CgA SIMD vector with one element of type <code>u8</code>.00000ChA SIMD vector with two elements of type <code>u8</code>.00000CiA SIMD vector with four elements of type <code>u8</code>.00000CjA SIMD vector with eight elements of type <code>u8</code>.00000AjPhysical units of measure.BiThe unit in which the density is measuredCnThe logical unit to which the option belongs. Non-constant \xe2\x80\xa6DdPlatform-specific extensions to <code>std</code> for Unix platforms.Af&lt; Custom event dataCmReturns the value of the \xe2\x80\x9cuser\xe2\x80\x9d refresh kind. It will \xe2\x80\xa6Co&lt; Set to 1 when name is encoded with UTF-8, 0 otherwise. \xe2\x80\xa6BbUtility macros and hint functions.BkUtilities such as constant-time comparison.DgThe <code>util</code> module provides a repository of commonly used \xe2\x80\xa6CmHelper utilities for implementing <code>FormatReader</code>s.AiReturns gamepad\xe2\x80\x99s UUID.AiReturns the product UUID.FeReturns <code>true</code> if the current <code>value</code> equals the given <code>expected</code>\xe2\x80\xa6CnReturns an iterator of (variable, value) pairs of strings, \xe2\x80\xa60Dg<code>alloc</code> Creates a <code>Vec</code> containing the arguments.0CjReturns a subimage that is an immutable view into this \xe2\x80\xa6AoCreate a sub-view of the image.BbDetermines which views are packed.BnDiscards the output of the <code>Parser</code>0CiWaits for the child to exit completely, returning the \xe2\x80\xa6CkBlocks the current thread until this condition variable \xe2\x80\xa6CfBlocks the current thread until initialization has \xe2\x80\xa6CdBlocks the current thread until all threads have \xe2\x80\xa6ChBlocks the current thread until the cell is initialized.DiWaits for process termination and returns its <code>ExitStatus</code> \xe2\x80\xa6ClWaits until set is called. The future returned will keep \xe2\x80\xa6ChDoes not resolve until all tasks have rendezvoused here.77oWake this task.CjWakes up the task associated with this <code>Waker</code>.1CoWakes up the task associated with this <code>LocalWaker</code>.2222222Cl(warn) Outputs a message to the console with the warning \xe2\x80\xa6Cg<code>log</code> Logs a message at the indicated level.0BaLogs a message at the warn level.AiIssues a warning message.iWavelets.AfWays of associativity.DhEquivalent to <code>weeks()</code>, but reads better for singular units.CfReturns the week component of this ISO 8601 week date.CbAcquires a reference to the value in this TLS key.DnCreates a new <code>CodecJoin</code> combinator with a <code>separator</code>.DnReturns a new <code>LinuxTimespec</code> with the given <code>duration</code>.EcReturns a default <code>MiniquadService</code> with the given <code>handler</code>,CmReturns an FNV hasher with the given <code>input</code> data.000BjCreates a scope guard with a custom state.AjSets the foreground color.CnReturns a copy of the bitset with the given attribute set. \xe2\x80\xa6DjCreate a builder for constructing a new <code>DateTime</code> from the \xe2\x80\xa6DiCreate a builder for constructing a <code>Date</code> from the fields \xe2\x80\xa61DiCreate a builder for constructing a <code>Time</code> from the fields \xe2\x80\xa6CiAccesses the current task-local and runs the provided \xe2\x80\xa6CiWork management, concurrency handling. work::{future, \xe2\x80\xa6BmConvert the inner type into the wrapper type.CjSubpixel offset of the left-most edge of the glyph\xe2\x80\x99s \xe2\x80\xa6CkWhole pixel offset of the left-most edge of the bitmap. \xe2\x80\xa6Bk&lt; The relative motion in the X direction0DhEquivalent to <code>years()</code>, but reads better for singular units.BiReturns the year for this zoned datetime.BkSet the year field on a <code>Zoned</code>.BfReturns the parsed year, if available.AoReturns the year for this date.BjSet the year field on a <code>Date</code>.BcReturns the year for this datetime.BnSet the year field on a <code>DateTime</code>.CfReturns the year component of this ISO 8601 week date.AaYear: four digitsClSubpixel offset of the bottom-most edge of the glyph\xe2\x80\x99s \xe2\x80\xa6CmWhole pixel offset of the bottom-most edge of the bitmap. \xe2\x80\xa6Bk&lt; The relative motion in the Y direction0CiZoom a surface by independent horizontal and vertical \xe2\x80\xa6CfThe alignment of a cache line in the current platform.BoLists the set of methods support by a resource.CjThe arity of this tuple (the number of contained elements)0CbEnable signal-driven I/O (SIGIO on file activity).Ck@defgroup lavu_crc32 CRC @ingroup lavu_hash CRC (Cyclic \xe2\x80\xa6CnContext structure for the Lagged Fibonacci PRNG. The exact \xe2\x80\xa6CgThe maximum size of the associated data (see RFC 8439).BcAbort signal from C abort function.Aa0\xc2\xb0 and &lt; 90\xc2\xb00BcAgents keep state between requests.BcTimer signal from C alarm function.Bj\xf0\x9f\x8c\x90 Memory-allocation-related operations.BmAllocate new memory via the global allocator.10BmIndicates that the initial allocation failed.AbThe allocator typeAoAn alphanumeric key (A-Z, 0-9).000jAltGr key.Cg\xf0\x9f\x93\x90 An angle represents a fraction of a full rotation.0Ck\xf0\x9f\x97\x83\xef\xb8\x8f A static 1-dimensional array backed by the core \xe2\x80\xa6AkAn array backed by a slice.01CiArray of <code>[cubemap_face][mipmap_level][bytes]</code>0DiA TOML <code>Value</code> that contains a sequence of <code>Value</code>sAjAn inline array of values.De<code>core</code> Used to do a cheap mutable-to-mutable reference \xe2\x80\xa60CkUsed to do a cheap mutable-to-mutable reference conversion.00000000000000000Dg<code>core</code> Used to do a cheap reference-to-reference conversion.0CeUsed to do a cheap reference-to-reference conversion.00000000000000000Dn\xf0\x9f\x8c\x90 Provides ASCII operations on <code>T</code>, most of them <em>const</em>.0CmSamples are encoded as decimal ascii strings separated by \xe2\x80\xa6BjCode to set the foreground color to black.AiCode to set blink effect.DfBackspace delay mask. Values are <code>BS0</code> or <code>BS1</code>.CiThe size of a pointer in bytes, for the current platform.BhPixel is 8-bit BGR with an alpha channelCi<code>core</code> The bitwise OR operator <code>|</code>.0BgThe bitwise OR operator <code>|</code>.00g0 Black0lBlack color.nAlpha blendingCf\xf0\x9f\x93\x8f <code>core</code> An endpoint of a range of keys.0AoAn endpoint of a range of keys.000CfA GIL-attached equivalent to <code>Py&lt;T&gt;</code>.0111DkA zero-sized marker for a <code>Storage</code> type that wraps its data \xe2\x80\xa60CeExit the operation without running subsequent phases.0000Db<code>Parser</code> implementation for <code>Parser::by_ref</code>CjOne unsigned 8-bit integer (equivalent to <code>u8</code>)0D`Two unsigned 8-bit integers (equivalent to <code>[u8; 2]</code>)0DbThree unsigned 8-bit integers (equivalent to <code>[u8; 3]</code>)0DaFour unsigned 8-bit integers (equivalent to <code>[u8; 4]</code>)0DfAn iterator over the bytes of a <code>CStr</code>, without the nul \xe2\x80\xa6BbThis type, reinterpreted as bytes.BmAn iterator over the bytes of a string slice.0210BlParallel iterator over the bytes of a stringEkThe input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not \xe2\x80\xa6DnImproved <code>Debug</code> experience for <code>&amp;[u8]</code> byte streams043CdAn iterator over <code>u8</code> values of a reader.4CgCIE lightness transition point (216/24389 \xe2\x89\x88 0.008856)0CeCIE lightness linear coefficient (24389/27 \xe2\x89\x88 903.3)0BjA helper for constructing macro constants.0AoThe number of months in a year.BaThe number of weekdays in a week.FcCarriage return delay mask. Values are <code>CR0</code>, <code>CR1</code>, <code>CR2</code>, or \xe2\x80\xa6A`Enable receiver.BbCreate file if it doesn\xe2\x80\x99t exist.FjCharacter size mask. Values are <code>CS5</code>, <code>CS6</code>, <code>CS7</code>, or <code>CS8</code>.CbThe maximum size of the ciphertext (see RFC 8439).e10^-20CmAllows chaining transformations by passing values through \xe2\x80\xa60CjAn iterator that links two iterators together, in a chain.00Ek<code>Chain</code> is an iterator that joins <code>b</code> after <code>a</code> in one \xe2\x80\xa61BfAdapter to chain together two readers.CjAn iterator over the <code>char</code>s of a string slice.00CaParallel iterator over the characters of a string11AlChild stopped or terminated.CkRepresentation of a child process spawned onto an event \xe2\x80\xa6CdRepresentation of a running or exited child process.CmGenerate a sine wave with an instantaneous frequency that \xe2\x80\xa6BoAn iterator for the elements in a single chunk.0BgThe internal format for an audio chunk.BfSamples at coord x + 1 map to coord 1.0CaA command that clears the terminal screen buffer.BaFires when an element is clicked.0Dg<code>core</code> A common trait that allows explicit creation of a \xe2\x80\xa6Eb<code>core</code> Derive macro generating an impl of the trait <code>Clone</code>.10CeA common trait that allows explicit creation of a \xe2\x80\xa6D`Derive macro generating an impl of the trait <code>Clone</code>.1010101010101010101010101010101010AcPixel is 8-bit CMYKfU+003A0000CaBase trait for general color data representation.0BkThe required color type can not be handled.BkThe color type on which the map operates on0AcRepresents a color.fU+002C0000CnThe main type used to query information about the CPU we\xe2\x80\x99\xe2\x80\xa6BgCRC16 of interleaved PCM audio samples.Di<code>Crc32</code> implements the CRC-32 checksum algorithm using the \xe2\x80\xa6BgCRC32 of interleaved PCM audio samples.Cg\xf0\x9f\x93\x8f A repeating cycle defined by a fundamental period.0BcAn iterator that repeats endlessly.000CiSynchronized I/O data integrity (wait for data writes \xe2\x80\xa6AjDuplicate file descriptor.Ca\xf0\x9f\x96\xb9 <code>core</code> <code>?</code> formatting.AfThe \xe2\x80\x9cdebug\xe2\x80\x9d level.C`Corresponds to the <code>Debug</code> log level.21022Aj<code>?</code> formatting.D`Derive macro generating an impl of the trait <code>Debug</code>.00000101000000323100000010AdA prefix and suffix,CeAn iterator adaptor that removes repeated duplicates.0CbThe delay of a frame relative to the previous one.CjA source that delays the given source by a certain amount.Ed<code>core</code> Used for immutable dereferencing operations, like <code>*v</code>.0DbUsed for immutable dereferencing operations, like <code>*v</code>.00CiDHKEM(X25519, HKDF-SHA256) as specified in HPKE RFC 9180.A`Disks interface.CbA draining iterator for <code>Vec&lt;T&gt;</code>.CmA draining iterator for <code>Vec&lt;&#39;bump, T&gt;</code>.BlA draining iterator for <code>String</code>.2DcA draining iterator over the elements of a <code>BinaryHeap</code>.DaA draining iterator over the elements of a <code>VecDeque</code>.2ChAn fixed-sized iterator over the msgs drained from a \xe2\x80\xa6DeA draining iterator over the entries of a <code>HashMap</code> in \xe2\x80\xa6CmA draining iterator over the items of a <code>HashSet</code>.CoA draining iterator over the items of a <code>HashTable</code>.CjDraining parallel iterator that moves a range out of a \xe2\x80\xa6ClDraining parallel iterator that moves out of a hash map, \xe2\x80\xa6ClDraining parallel iterator that moves out of a hash set, \xe2\x80\xa6CkDraining parallel iterator that moves out of a binary heap,3CdDraining parallel iterator that moves a range of \xe2\x80\xa6BlA drain iterator for <code>HeaderMap</code>.>CoA draining iterator over the entries of a <code>HashMap</code>.8<;=?<;=Am\xe2\x80\x9cArgument list too long.\xe2\x80\x9dAj\xe2\x80\x9cBad file descriptor.\xe2\x80\x9dAn\xe2\x80\x9cDevice or resource busy.\xe2\x80\x9dEcIf <code>ICANON</code> is also set, the <code>ERASE</code> character erases the \xe2\x80\xa6EbIf <code>ICANON</code> is also set, the <code>KILL</code> character erases the \xe2\x80\xa6Ae\xe2\x80\x9cFile too large.\xe2\x80\x9dAn\xe2\x80\x9cInterrupted system call.\xe2\x80\x9dB`\xe2\x80\x9cNo such device or address.\xe2\x80\x9dAn\xe2\x80\x9cOperation not permitted.\xe2\x80\x9dAb\xe2\x80\x9cBroken pipe.\xe2\x80\x9dAl\xe2\x80\x9cRead-only file system.\xe2\x80\x9dAf\xe2\x80\x9cNo such process.\xe2\x80\x9dB`\xe2\x80\x9cInvalid cross-device link.\xe2\x80\x9dCkEjects a removable media disk (found on some keyboards, \xe2\x80\xa60BjRepresents an empty chunk with no elementsEmThis <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have \xe2\x80\xa6AlValue being parsed is empty.201B`An iterator that yields nothing.101CeThe channel was empty when the receive was attempted.1CgIterator adaptor for the <code>empty()</code> function.A`An empty source.5CjThe channel is currently empty. There are still active \xe2\x80\xa6CfThe send half of the channel has not yet sent a value.Ee<code>Empty</code> ignores any data written via <code>AsyncWrite</code>, and will \xe2\x80\xa6688Eg<code>Empty</code> ignores any data written via <code>Write</code>, and will always \xe2\x80\xa68jEnter key.00ClA view into a single entry in a map, which may either be \xe2\x80\xa6ClA view into a single entry in a set, which may either be \xe2\x80\xa610CnA view into a single entry in a table, which may either be \xe2\x80\xa6DgA view into a single location in a <code>Table</code>, which may be \xe2\x80\xa6DkA view into a single location in a <code>HeaderMap</code>, which may be \xe2\x80\xa6434343CgAn ordering where a compared value is equal to another.0000Dk<code>core</code> A trait representing the basic expectations for error \xe2\x80\xa6AfThe \xe2\x80\x9cerror\xe2\x80\x9d level.C`Corresponds to the <code>Error</code> log level.CfAn error occurred while querying the permission state.CeThe type returned in the event of a conversion error.010043200CnThe error type which is returned from formatting a message \xe2\x80\xa61111Di<code>Error</code> is a trait representing the basic expectations for \xe2\x80\xa6CnDenotes invalid flat sample buffers when trying to convert \xe2\x80\xa6233233331DbError type which can be returned when creating <code>Gilrs</code>.BjBasic error type in force feedback module.BfAn error that can occur in this crate.BnErrors that can occur when starting the sound.BjErrors that can occur when decoding audio.BnErrors that can occur when using this backend.CbErrors that can occur when using the cpal backend.=<=:::BnThe type returned in the event of a RNG error.ChAn error that occurred during parsing or compiling a \xe2\x80\xa6ClThe error type that can be returned if some error occurs \xe2\x80\xa6CkThe error type when some error occurs during serialization.EcThe <code>Error</code> trait allows <code>Deserialize</code> implementations to \xe2\x80\xa622222ClA minimal representation of all possible errors that can \xe2\x80\xa6DgTrait used by <code>Serialize</code> implementations to generically \xe2\x80\xa63DfMust match the <code>Error</code> type of our <code>Serializer</code>.000000De<code>Error</code> provides an enumeration of all possible errors \xe2\x80\xa6FdThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>\xe2\x80\xa6C`Errors that can occur when deserializing a type.0AaErrors from ureq.BjA generic \xe2\x80\x9cerror\xe2\x80\x9d for HTTP connectionsAaComparison failedCeThe type returned in the event of a conversion error.0CnThe error type which is returned from formatting a message \xe2\x80\xa611116Di<code>Error</code> is a trait representing the basic expectations for \xe2\x80\xa6CmThe lock could not be acquired due to an I/O error on the \xe2\x80\xa62AdRepresents an event.BfHolds information about gamepad event.0AfDifferent event types.AlThe format is known exactly.AaAn exact instant.AbAn exact duration.AkExtra <em>data values</em>.000BfA custom <em>data type</em> extension.00011110000DfForm feed delay mask. Values are <code>FF0</code> or <code>FF1</code>.BbDocumentation for the first field.0BcDocumentation for the second field.0Bc302 Found [RFC9110, Section 15.4.3]BmA (non-empty) rectangle with float precision.BdA type-level logical <em>false</em>.0f10^-150CdAccess the field with the given index of some place.00AjThis is the first element.nA fixed value.Cn\xf0\x9d\x9f\x99 \xf0\x9f\x8c\x90 Provides comprehensive floating-point operations \xe2\x80\xa60mA float type.EfThe input contained a floating point <code>f32</code> or <code>f64</code> that was \xe2\x80\xa6AhA floating point number.AeA 64-bit float value.B`Rounds toward negative infinity.Dk<code>core</code> The version of the call operator that takes a mutable \xe2\x80\xa60CiThe version of the call operator that takes a mutable \xe2\x80\xa600000000000000000CdA common trait implemented by all function pointers.00AhA single animation frameAfA stereo audio sample.AjGet file descriptor flags.AfGet file status flags.AhGet record locking info.ChANSI gray foreground 0/23 8-bit color (4% white, 96% \xe2\x80\xa6ChANSI gray foreground 1/23 8-bit color (8% white, 92% \xe2\x80\xa6CiANSI gray foreground 2/23 8-bit color (12% white, 88% \xe2\x80\xa6CiANSI gray foreground 3/23 8-bit color (16% white, 84% \xe2\x80\xa6CiANSI gray foreground 4/23 8-bit color (20% white, 80% \xe2\x80\xa6CiANSI gray foreground 5/23 8-bit color (24% white, 76% \xe2\x80\xa6CiANSI gray foreground 6/23 8-bit color (28% white, 72% \xe2\x80\xa6CiANSI gray foreground 7/23 8-bit color (32% white, 68% \xe2\x80\xa6CiANSI gray foreground 8/23 8-bit color (36% white, 64% \xe2\x80\xa6CiANSI gray foreground 9/23 8-bit color (40% white, 60% \xe2\x80\xa6BjCode to set the foreground color to green.AhGamma correction curves.0BmMain object responsible of managing gamepads.g2 Green0AbLight green color.BoAn iterator for the elements in a single group.0AnSound effect channel grouping.BbType containing group information.AgHTTP protocol over TLS.CkLower modem control lines after last process closes the \xe2\x80\xa6d10^20AhCONNECT proxy over HTTPSClTranslate CR to NL (carriage return to newline) on input \xe2\x80\xa6CbIgnore <code>CR</code> (carriage return) on input.CkMap from the elements of the input vector to the output \xe2\x80\xa600CfTranslate <code>NL</code> to <code>CR</code> on input.AmEnable input parity checking.BoAn error occurred while doing I/O on some file.CjMap uppercase characters to lowercase on input (not in \xe2\x80\xa6AmInput is UTF8. (not in POSIX)Cg(XSI) Typing any character will restart stopped output.BfEnable XON/XOFF flow control on input.CiA unique identifier based on a pinned stack-allocated \xe2\x80\xa60C`The Inverse Modified Discrete Transform (IMDCT).Ee<code>core</code> Used for indexing operations (<code>container[index]</code>) in \xe2\x80\xa60DcUsed for indexing operations (<code>container[index]</code>) in \xe2\x80\xa600BjThe inner type for the bit representation.AhInner type of the bufferCaThe internal representation of this numeric type.210AlGenerally, <code>Self</code>0DgAdds the <code>is_tty</code> method to types that might represent a \xe2\x80\xa6l64-bit isize000000000000000CnVector of <code>isize</code> with the same number of elements.00000000000AmFires when a key is released.0BhThe number of lanes in this SIMD vector.000000000000000Boln(10) (A002392) <code>\xe2\x89\x88 2.30258509\xe2\x80\xa6</code>00000fln(10)00000000000BmDescription of what is currently being parsedBbThe later time is always selected.CnThe thing should start later because the appropriate clock \xe2\x80\xa6CnAn enum representing the available verbosity levels of the \xe2\x80\xa6Ag\xf0\x9f\x8e\xb2 A 16-bit LCG PRNG.0CjA source filter that applies audio limiting to prevent \xe2\x80\xa6Dg<code>Limit</code> defines an upper-bound on how much of a resource \xe2\x80\xa6CiAn iterator over the lines of a string, as string slices.00BhParallel iterator over lines in a stringBnReads lines from an <code>AsyncBufRead</code>.2DbAn iterator over the lines of an instance of <code>BufRead</code>.3An\xf0\x9f\x8c\x90 Linux-related operations.0CnCompression that sacrifices some data accuracy for reduced \xe2\x80\xa60DhUse lower-case hexadecimal integers for the <code>Debug</code> trait \xe2\x80\xa600ChThe desired timestamp can be found at, or after, the \xe2\x80\xa611B`Grayscale colors + alpha channelEcIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.CjAn iterator adapter to apply a transformation within a \xe2\x80\xa60CkExpresses that a match of the pattern has been found at \xe2\x80\xa600CcRepresents a single match of a regex in a haystack.11BdA type-level logical <em>maybe</em>.0AaA multimedia key.000lA media key.CmAn iterator adaptor that merges the two base iterators in \xe2\x80\xa60AnUse Metal for Apple platforms.e10^-60e10^-30BcRepresents the <code>-</code> flag.0000AgThe input of the mixer.Al\xf0\x9f\x95\x98 The months of the year.0CmA Gregorian calendar month. It usually has one of 28, 29, \xe2\x80\xa6A`A mouse pointer.0CgA single mouse event with additional pressed modifiers.CaThe pointer moved without a button press/release.0CiMoved the mouse cursor while not pressing a mouse button.C`This is an opaque data type used for Music data.Dg<code>std</code> A mutual exclusion primitive useful for protecting \xe2\x80\xa60BmAn asynchronous <code>Mutex</code>-like type.CmA mutual exclusion primitive useful for protecting shared \xe2\x80\xa600DeNewline delay mask. Values are <code>NL0</code> and <code>NL1</code>.ClThe time zone annotation is a name, usually an IANA time \xe2\x80\xa6BcAlias for <code>Nanoseconds</code>.CnThe thing will never start because the clock it depends on \xe2\x80\xa6BeNever update the related information.DjNever preserve the <code>authorization</code> header on redirect. This \xe2\x80\xa6Bl\xe2\x88\x85 \xf0\x9d\x9f\x99 Represents the absence of a number.0DaA type that represents a <code>Nonce</code> that ChaCha20 and \xe2\x80\xa6CoA type that represents a <code>Nonce</code> that XChaCha20, \xe2\x80\xa60100C`Removes frequencies around the cutoff frequency.AgMap CR to NL on output.C`Fill character is ASCII <code>DEL</code> (0177).CiSend fill characters for a delay, rather than using a \xe2\x80\xa6ClMap lowercase characters to uppercase on output. (not in \xe2\x80\xa6B`(XSI) Map NL to CR-NL on output.AnDon\xe2\x80\x99t output CR at column 0.C`Enable implementation-defined output processing.BlAn operating system error has been detected.Ca\xf0\x9f\x96\xb9 <code>core</code> <code>o</code> formatting.0Aj<code>o</code> formatting.0000DdA generic, parameterized <em>enum</em> for expressing structured \xe2\x80\xa60Ee\xf0\x9d\x90\x93 <code>std</code> Borrowed reference to an OS string (See <code>OsString</code>).0CoBorrowed reference to an OS string (see <code>OsString</code>).0CiA custom error that does not fall under any other I/O \xe2\x80\xa6CiAdditional buttons (e.g., side buttons on advanced mice).110CcFor AVERROR(e) wrapping POSIX error codes, e.g. \xe2\x80\xa60AhPlatform specific error.AmUnexpected error has occurredBkAny other error probably in a custom SourceChA message stating what uncategorized thing the input \xe2\x80\xa6BbCodec defined, up-to 16-byte code.7AiSome other error occured.8kOwned data.AoAn owned, heap-allocated value.BmThe resulting type after obtaining ownership.2102000000BkContainer type for copied ASCII characters.3131ePATCHCaThe maximum size of the plaintext (see RFC 8439).CkAlgorithm that takes into account the left, upper left, \xe2\x80\xa6An\xf0\x9f\x8c\x90 Panic-related operations.0BoComponent parts of an HTTP <code>Request</code>AkThe various parts of a URI.C`Component parts of an HTTP <code>Response</code>ClA string that was pasted into the terminal. Only emitted \xe2\x80\xa6jPause key.AfPauses media playback.10A`Pause media key.2CkThis type represents a file descriptor that refers to a \xe2\x80\xa6AdA generalized pixel.AbThe type of pixel.Db\xf0\x9f\x93\x90 A coordinate position in <code>D</code>-space without extent.0BlImmutable point type, consisting of x and y.CiPowers the system off or performs a power-related action.0AiPower failure (System V).AdThe key was pressed.0CaA command that prints the given displayable type.Eh<code>Probe</code> scans a <code>MediaSourceStream</code> for metadata and container \xe2\x80\xa6AeProxy server settingsCbThe value jumps back and forth between two values.A`All plus historyAmRepresents any Python object.00AnRepresents a Python exception.0BlRepresents a Python <code>int</code> object.CiA wrapper type for an immutably borrowed value from a \xe2\x80\xa600BeRepresents a Python <code>set</code>.CaThe radix or base of the internal representation.00000DiThe radix or base of the internal representation of <code>f32</code>. \xe2\x80\xa6DiThe radix or base of the internal representation of <code>f64</code>. \xe2\x80\xa61010CkIndicates the part of a document that the server should \xe2\x80\xa6BhCode to turn off all effects and colors.BkPlay the sound from the right speaker only.CmA structure that provides an abstract interface to stream \xe2\x80\xa6D`\xf0\x9f\x93\x8f <code>core</code> A range bounded inclusively below and \xe2\x80\xa60CeA (half-open) range bounded inclusively below and \xe2\x80\xa600DcAn iterator over a sub-range of entries in a <code>BTreeMap</code>.DaAn iterator over a sub-range of items in a <code>BTreeSet</code>.222ClThe desired timestamp can be found within the range. The \xe2\x80\xa6CiA range bounded inclusively for counting parses performed4324432Cd\xf0\x9f\x93\x8f A generic ratio representing a proportional \xe2\x80\xa60AeRaw file descriptors.00BmRepresents that a value is immediately ready.0C`A future that is immediately ready with a value.10101CgA compiled regular expression for searching Unicode \xe2\x80\xa6CiDerives a new secret key and forgets the one used for \xe2\x80\xa60AjResets all the attributes.AjResets the terminal color.ChRGB color with 16-bit integer components (sRGB gamma \xe2\x80\xa60AcPixel is 16-bit RGBBiPixel contains 16-bit R, G and B channelsBhPixel is 1-bit RGB with an alpha channelBhPixel is 2-bit RGB with an alpha channelBhPixel is 4-bit RGB with an alpha channelCiRGB+A color with 8-bit integer components (sRGB gamma \xe2\x80\xa60BhPixel is 8-bit RGB with an alpha channel0BbOnt he right side of the keyboard.A`Right arrow key.AcRight mouse button.An= 90\xc2\xb0 (\xc2\xbc\xcf\x84), a quarter turn.CaIndication that contents should be right-aligned.4103200023CiAligns text to the right of the region defined by the \xe2\x80\xa6AoA value of type <code>R</code>.CgOnly the right value of type <code>B</code> is present.133e10^270f10^-270AjSet file descriptor flags.AfSet file status flags.AhSet record locking info.AjI/O now possible (4.2BSD).oStandard input.CkRepresents a fork-join scope which can be used to spawn \xe2\x80\xa6BcA scope to spawn scoped threads in.CjThis writes out a short but not minimal label for each \xe2\x80\xa6CiPrints a terser backtrace which ideally only contains \xe2\x80\xa6CmA configurable sixel string builder from a slice of pixel \xe2\x80\xa60Dc<code>core</code> Types with a constant size known at compile time.00CaTypes with a constant size known at compile time.00000000000000000B`Puts the system into sleep mode.0eLinuxCk\xf0\x9f\x8c\x90 Slice-related operations, most of them <em>const</em>.0AoSequence of <code>Token</code>s0AjAn actively playing sound.fU+0020Cf\xf0\x9f\x9a\xa9 There is not enough free space for the operation.1111CbFilter that modifies each sample by a given value.CiAn iterator over subslices separated by elements that \xe2\x80\xa6BkCreated with the method <code>split</code>.1010Dh<code>Split</code> is a parallel iterator using arbitrary data and a \xe2\x80\xa6CfParallel iterator over slices separated by a predicateChParallel iterator over substrings separated by a patternCkAn iterator over all substrings delimited by a regex match.BkSplitter for the <code>split</code> method.65DhAn iterator over the contents of an instance of <code>BufRead</code> \xe2\x80\xa676Cg\xf0\x9f\x97\x83\xef\xb8\x8f A static stack backed by an <code>Array</code>.0CiTraces added to the error while walking back up the stackC`Sets the offset to the provided number of bytes.0Dd<code>std</code> A handle to the standard input stream of a process.0CcA handle to the standard input stream of a process.0CiDescribes what to do with a standard I/O stream for a \xe2\x80\xa6ChSends a START character to the terminal, to tell the \xe2\x80\xa6AiResumes suspended output.eTRACEAhTruncate file upon open.DhA TOML table, a top-level collection of key/<code>Value</code> pairs \xe2\x80\xa6AhType representing table.CcFinds all occurrences of three bytes in a haystack.00AdRepresents duration.fU+007E0000AnThe smallest unit being parsed0A`A touch pointer.0AfThe \xe2\x80\x9ctrace\xe2\x80\x9d level.C`Corresponds to the <code>Trace</code> log level.10101DkA <code>Track</code> is an independently coded media bitstream. A media \xe2\x80\xa60CmRounds toward zero, chopping off any fractional part of a \xe2\x80\xa6Cm\xf0\x9f\x97\x83\xef\xb8\x8f Extension trait providing convenience methods for \xe2\x80\xa60AiA marker for tuple types.00BmDescribes a smooth transition between values.CgCredentials for a UNIX process for credentials passing.B`The command was used incorrectlyCgThe capabilities supported by a <code>UiService</code>.0ChTypes that are safe to access while the GIL is not held.DkA lazy iterator producing elements in the union of <code>BTreeSet</code>\xe2\x80\xa6DjA lazy iterator producing elements in the union of <code>HashSet</code>\xe2\x80\xa6011Dc<code>core</code> Types that do not require any pinning guarantees.0CaTypes that do not require any pinning guarantees.00000000000000000DhUse upper-case hexadecimal integers for the <code>Debug</code> trait \xe2\x80\xa600DjThe desired timestamp can be found before, the <code>SeekPoint</code>. \xe2\x80\xa611AfUser-defined signal 1.AfUser-defined signal 2.AgInteracting with users.l64-bit usize000000000000000CnVector of <code>usize</code> with the same number of elements.00000000000BmThe constant value of the type-level boolean.000DiVertical tab delay mask. Values are <code>VT0</code> or <code>VT1</code>.DkThe <code>DataValue</code> type that pairs with this <code>DataType</code>.DkThe resulting type-level boolean (<code>True</code> or <code>False</code>).0100BjA value that a parameter can be linked to.BeThe type produced by using this seed.BcThe value produced by this visitor.AiA <code>Tag</code> value.EhFor <code>Key</code>/Value pairs under a <code>Table</code> header or inside another \xe2\x80\xa6AhType representing value.Da<code>Parser</code> implementation for <code>Parser::value</code>CnDocument tree traversal to mutate an exclusive borrow of a \xe2\x80\xa6BjCode to set the foreground color to white.DjA <code>Waker</code> is a handle for waking up a task by notifying its \xe2\x80\xa600g7 White0lWhite color.AfWindows resize signal.AnDevice doesn\xe2\x80\x99t have battery.DfThe writing portion of the <code>TcpStream</code> should be shut down.0ClA trait for writing or formatting into Unicode-accepting \xe2\x80\xa600C`A trait for printing datetimes or spans into \xe2\x80\xa61CbA trait for objects which are byte-oriented sinks.032CnIf ICANON is also set, terminal is uppercase only. (not in \xe2\x80\xa6AfSee: <code>TAB3</code>AbX-Wing hybrid KEM.BhThe type of value this coroutine yields.000DaResult of <code>yield_now()</code> or <code>yield_local()</code>.1f10^-240e10^240f10^-210e10^210CbAn iterator which iterates two other iterators \xe2\x80\xa60DkAn <code>IndexedParallelIterator</code> that iterates over two parallel \xe2\x80\xa6BbA time zone aware instant in time.BmBuild an ioctl number for a read-write ioctl.BdExtra information about the library.CjSpecifies the end of a restricted transactional memory \xe2\x80\xa600CjReturns the 1-letter abbreviated month name, in ASCII, \xe2\x80\xa6ClReturns the 1-letter abbreviated weekday name, in ASCII, \xe2\x80\xa6CjReturns the 2-letter abbreviated month name, in ASCII, \xe2\x80\xa6ClReturns the 2-letter abbreviated weekday name, in ASCII, \xe2\x80\xa6CjReturns the 3-letter abbreviated month name, in ASCII, \xe2\x80\xa6ClReturns the 3-letter abbreviated weekday name, in ASCII, \xe2\x80\xa6CfTerminates the current process in an abnormal fashion.00BdAborts the execution of the process.0BjAbort the task associated with the handle.01BnTerminates the process in an abnormal fashion.oArccosine (f32)CcThe inverse hyperbolic cosine of <code>self</code>.0AnThe inverse hyperbolic cosine.0AoInverse hyperbolic cosine (f64)CdThe resolved IP address + port for the uri being \xe2\x80\xa6DkAdds a <code>TimeDelta</code> to an instant, moving forward or backward \xe2\x80\xa6EdStart playback <code>after</code> ticks after <code>Effect::play()</code> is called.CdThe offset corresponding to the later time in a gap.CgThe offset corresponding to the earlier time in a fold.AlDuration until next timeout.BfA new Agent with default configurationBbAlternative comma-separated names.ChReturns a flag indicating what form of alignment was \xe2\x80\xa6CiThe minimum byte alignment for a memory block of this \xe2\x80\xa6AnSets or removes the alignment.CoAllocates memory as described by the given <code>layout</code>.BkAllocates memory with the global allocator.BgAllocates memory with the given layout.2AfMemory allocation APIs3023DhAllocate an object in this <code>Bump</code> and return an exclusive \xe2\x80\xa613414AgMemory allocation APIs.45245AdThe alpha component.00000nThe alpha maskD`Apply the function <code>f</code> to each channel of this pixel.DkCreates a <code>StyledContent</code> by applying the style to the given \xe2\x80\xa6CeReturns the arity (number of elements) of this tuple.00DaCreates a layout describing the record for a <code>[T; n]</code>.AdThe array of points.0CbHomogeneous data structures, random-access and \xe2\x80\xa611BgUtilities for the array primitive type.0ChParallel iterator types for arrays (<code>[T; N]</code>)BaReturns an empty array of tables.2AlBorrows the file descriptor.00BdGets this ASCII character as a byte.BkOperations on ASCII strings and characters.0EbGet the <code>ascii</code> field of the <code>PyASCIIObject</code> state bitfield.BjCharacter specific parsers and combinators2mArcsine (f32)CaThe inverse hyperbolic sine of <code>self</code>.0AlThe inverse hyperbolic sine.0AmInverse hyperbolic sine (f64)BaThe arc tangent of two variables.000AgArctangent of y/x (f64)A`Arctangent (f32)CdThe inverse hyperbolic tangent of <code>self</code>.0AoThe inverse hyperbolic tangent.0B`Inverse hyperbolic tangent (f64)CnReturns the last access time of the file, in seconds since \xe2\x80\xa600AdAudio functionality.oAudio FunctionsB`Initializes the audio subsystem.DfThe <code>audio</code> module provides primitives for working with \xe2\x80\xa6AcReturn Python bases0CmOld module which contained some implementation details of \xe2\x80\xa6DjThe <code>basic</code> API flavor provides barebones UTF-8 checking at \xe2\x80\xa6BcRecognizes a signed 1 byte integer.BfRecognizes an unsigned 1 byte integer.CkAttribute macro applied to a function to turn it into a \xe2\x80\xa600000000000000BfPerforms the <code>|</code> operation.FfReturns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.FdReturns the union of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>.222D`The bitwise or (<code>|</code>) of the bits in two flags values.00000000000000000000BcComputes <code>self | other</code>.00BkReturns the union of the two sets of flags.000000054C`Sets the foreground color to <code>Black</code>.CnBlend the color of a given pixel into ourself, taking into \xe2\x80\xa6CnThe <code>BlockRngCore</code> trait and implementation helpersmThe blue maskDcAn internal-only helper function for <code>split_off</code> and \xe2\x80\xa600000CgThe <code>Box&lt;T&gt;</code> type for heap allocation.BcA pointer type for bump allocation.111AjReturns the CPU\xe2\x80\x99s brand.CeReverses the bytes in an integer type <code>T</code>.00CgBuilds a sixel formatted string with the configured \xe2\x80\xa6B`Builds the <code>Context</code>.AkCreates <code>Gilrs</code>.CoCreate a new <code>Zoned</code> from the fields set on this \xe2\x80\xa6CnCreate a new <code>Date</code> from the fields set on this \xe2\x80\xa6DbCreate a new <code>DateTime</code> from the fields set on this \xe2\x80\xa6CnCreate a new <code>Time</code> from the fields set on this \xe2\x80\xa6E`Consumes the <code>MockInfoProvider</code> and returns a fake <code>Info</code>.BnCreates the effect and a handle to the effect.CdCreates the modulator and a handle to the modulator.CcInvoke the builder and return a <code>Record</code>BgReturns a <code>Metadata</code> object.D`Creates a new <code>ThreadPool</code> initialized using this \xe2\x80\xa6DiCompiles the pattern given to <code>RegexBuilder::new</code> with the \xe2\x80\xa6CjCreates a new decoder with previously configured settings.AbBuilds the window.AdBuilds the renderer.BlCreates the configured <code>Runtime</code>.B`Construct the <code>Proxy</code>AcFinalize the config000DjConsumes this builder, and tries to construct a valid <code>Uri</code> \xe2\x80\xa6CiBuild-time metaprogramming and code generation utilities.EgCreates a new <code>AnsiColor8b</code> from a 26-color grayscale <code>value</code> \xe2\x80\xa6EcTransforms this <code>Read</code> instance to an <code>Iterator</code> over its \xe2\x80\xa60BbSets the byte slice of image data.BiIterates over the bytes in this C string.222CmReturns a u32 with one bit set, which is the signature of \xe2\x80\xa6BiThe width of the signed integer in bytes.BkThe width of the unsigned integer in bytes.B`The width of the float in bytes.CjConvert a <code>bits</code> stream back into a byte streamBkAdds two vectors together, in compile-time.0CiComputes the dot product of two vectors, in compile-time.0Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x9f\x99 <code>core</code> Equivalent to the corresponding C type.0DdEquivalent to C\xe2\x80\x99s <code>signed int</code> (<code>int</code>) type.000Bh<code>CStr</code> and its related types.Bk<code>CString</code> and its related types.1DfThis is a helper macro to create a <code>&amp;&#39;static CStr</code>.Ck<code>CStr</code>, <code>CString</code>, and related types.2CkSubtracts another vector from this vector, in compile-time.0BcCalls the object without arguments.00C`Calls the object with only positional arguments.00CjInvokes a closure, capturing the cause of an unwinding \xe2\x80\xa6ClReturn the cause (either an exception instance, or None, \xe2\x80\xa6BjOriginating <code>std::error::Error</code>CgSee <code>FromExternalError::from_external_error</code>Bd&lt; Game Controller axis event dataoCube root (f32)jCeil (f32)ClReturns the number of <code>(columns, rows)</code> of cells.CdChain a function which takes the parameter by value.0ChCreates an adapter which will chain this stream with \xe2\x80\xa60ClTakes two iterators and creates a new iterator over both \xe2\x80\xa60000000200000000000000111CfConverts the arguments to iterators and links them \xe2\x80\xa60BeChains multiple macro calls together.ClTakes two iterables and creates a new iterator over both \xe2\x80\xa6ChChain zero or more iterators together into one sequence.3CiTakes two iterators and creates a new iterator over both.0DiCreates a new <code>AsyncRead</code> instance that chains this stream \xe2\x80\xa6BjChain this connector to another connector.6Cn\xf0\x9d\x90\x93 A 7-bit unicode scalar, limited to basic latin subset \xe2\x80\xa60Cl\xf0\x9d\x90\x93 An 8-bit unicode scalar, limited to basic latin and \xe2\x80\xa60DdReturns an iterator over the <code>chars</code> of this grapheme \xe2\x80\xa60000CnReturns all valid unicode codepoints that have mappings to \xe2\x80\xa6CoConvenience function to create a new <code>Chirp</code> source.CaChange the owner and group of the specified path.CdFacilities for dealing with inexact dates and times.EmCompares and returns <code>self</code> clamped between <code>min</code> and <code>max</code>.EcCompares and returns a clamped <em>total ordered</em> <code>self</code> between \xe2\x80\xa6011111111111BgRestrict a value to a certain interval.0000000F`Returns itself clamped between <code>min</code> and <code>max</code>, ignoring <code>NaN</code>.1111111111111CiUtilities for clamping numeric values to a defined range.CmOld module which contained some implementation details of \xe2\x80\xa6CkClears the map, removing all key-value pairs. Keeps the \xe2\x80\xa6BeDrops all items from the binary heap.CnClears the array by setting all elements to <code>None</code>.BdClears the set, removing all values.AdClears the destaque.BfClears the map, removing all elements.AaClears the stack.CcTruncates the <code>OsString</code> to zero length.BfClears the set, removing all elements.CfRemoves all elements from the <code>LinkedList</code>.BfClears the deque, removing all values.DoInvokes <code>clear</code> on the underlying instance of <code>OsString</code>.BgClears the vector, removing all values.CjTruncates this <code>String</code>, removing all contents.Bg(clear) Clears the console if possible.Cg(clearTimeout) (clearInterval) Cancels a timeout or \xe2\x80\xa6CbSets the length to 0, by resetting all bytes to 0.AeSets the length to 0.CiResets both the state and seed for full reinitialization.222ChClears the buffer, resetting the filled region to empty.776CkKeeps current layout settings but clears all appended text.BfClears the table, removing all values.CfEmpties an existing dictionary of all key-value pairs.BbRemoves all elements from the set.10EeRemoves all currently loaded <code>Source</code>s from the <code>Sink</code>, and \xe2\x80\xa6EgRemoves all currently loaded <code>Source</code>s from the <code>SpatialSink</code> \xe2\x80\xa6CmRemoves all the sounds from the queue. Returns the number \xe2\x80\xa6BmClears all data from the current audio queue.CkClears the current rendering target with the drawing color.CnClears all written frames from the buffer. This is a cheap \xe2\x80\xa6AkClears all written samples.0;CmClears the table, removing all key-value pairs. Keeps the \xe2\x80\xa6CnClears the array, removing all values. Keeps the allocated \xe2\x80\xa6AgRemoves all the tables.2AhGo back to default decor3CkClears the map, removing all key-value pairs. Keeps the \xe2\x80\xa6CmClear the <code>Extensions</code> of all inserted extensions.1BdClears the set, removing all values.BoClears the ancillary data, removing all values.B`Precise timing for audio events.BgThe clock this time is associated with.BaReturns a duplicate of the value.BnMakes a clone of the <code>Arc</code> pointer.DjMakes a clone of the <code>Weak</code> pointer that points to the same \xe2\x80\xa6DgReturns a new box with a <code>clone()</code> of this box\xe2\x80\x99s contents.BmMakes a clone of the <code>Rc</code> pointer.fPanicsAjCopies a <code>Ref</code>.4BhClone a sender to send to other threads.7DgThe <code>Clone</code> trait for types that cannot be \xe2\x80\x98implicitly \xe2\x80\xa688888850888888DkClone this sender. <code>Sender</code> acts as a handle to the ending a \xe2\x80\xa6BdClones this <code>WeakSender</code>.DfClone this receiver. <code>Receiver</code> acts as a handle to the \xe2\x80\xa6DjReturns a cloned <code>AbortHandle</code> that can be used to remotely \xe2\x80\xa64<<<<<<;:CkCloses the connection. The returned values allow you to \xe2\x80\xa6CkCloses the connection. The returned value allows you to \xe2\x80\xa6C`Close and free an allocated SDL_RWops structure.AeCloses the semaphore.CkCloses the receiving half of a channel without dropping it.ClCloses the receiving half of a channel, without dropping \xe2\x80\xa6DhPrevents the associated <code>Sender</code> handle from sending a value.CkAbstractions for encoding and decoding data. codec::{hash} oThe codec type.BfThe <code>CodecType</code> identifier.Bh&lt; pointer to the list of coefficientsAhChromatic functionality.BaReturn this image\xe2\x80\x99s color type.Aa&lt; Vertex colorAgHyperbolic cosine (f64)ClConsumes the iterator, counting the number of iterations \xe2\x80\xa60000000Cn(count) Logs the number of times that this particular call \xe2\x80\xa6B`The total number of repetitions.222222222222220CjCounts all occurrences of this byte in the given haystack.00DiReturns the number of occurrences of <code>value</code> in self, that \xe2\x80\xa60CeCounts the number of items in this parallel iterator.0BeCount the number of channels in groupAlGets the number of channels.BcMacro which queries cpuid directly.BjComputes the cross product of two vectors.0DcSwaps two mutable variables in a <em>compile-time</em> friendly \xe2\x80\xa60CgReturns the last status change time of the file, in \xe2\x80\xa600D`Returns the number of bits set in an integer type <code>T</code>00AnRepeats an iterator endlessly.0000000AoThe underlying repeating cycle.111111111111110Ai&lt; event dependent data0An&lt; User defined data pointer10Ck(debug) Outputs a message to the console with the debug \xe2\x80\xa6Cg<code>log</code> Logs a message at the indicated level.0edebugAjFlags to enable debugging.BbLogs a message at the debug level.BgSets the context into \xe2\x80\x9cdebug\xe2\x80\x9d mode.DcDecapsulate <code>public_ephemeral</code> and return the shared \xe2\x80\xa6ClGiven the DecapsulationKey, produce a SharedSecret using \xe2\x80\xa6BfPerform decapsulation of a Ciphertext.10101BbReturns the surrounding whitespace00CkReturns the decor associated with a given key of the table.B`Get the decoration of the value.ClRemove duplicates from sections of consecutive identical \xe2\x80\xa60CgRemoves consecutive repeated elements in the vector \xe2\x80\xa61100AcDelay of this framelCodec delay.AhGet the remaining delay.AgAdds echoes to a sound.BgDelays the sound by a certain duration.0CiSleeps the current thread for the specified amount of \xe2\x80\xa6Bf&lt; Delay before starting the effect.0000ChDelay execution to maintain a constant framerate and \xe2\x80\xa6CmThe number of leading frames inserted by the encoder that \xe2\x80\xa6A`The denominator.0AhNumber of color channelsB`Number of bits in the component.AgDereferences the value.fPanicsBbAllows access to the locked value.222BhUnstable placeholder for deref patterns.0000300000gExample000411111GgWhen passed the <em>number</em> <code>0</code>, <code>1</code>, \xe2\x80\xa6, <code>9</code>, returns the <em>character</em> \xe2\x80\xa60CgClears the map, returning all key-value pairs as an \xe2\x80\xa6CjClears the binary heap, returning an iterator over the \xe2\x80\xa6CfClears the set, returning all elements in an iterator.CgRemoves the specified range from the deque in bulk, \xe2\x80\xa6CnRemoves the subslice indicated by the given range from the \xe2\x80\xa6ChRemoves the specified range from the string in bulk, \xe2\x80\xa6ChRemoves the specified range from the vector in bulk, \xe2\x80\xa6CjCreates a draining iterator that removes the specified \xe2\x80\xa60CnTake all msgs currently sitting in the channel and produce \xe2\x80\xa66CeClears the map, returning all entries as an iterator.9CjClears the set, returning all elements as an iterator. \xe2\x80\xa6CmSets the factor to multiply the signal by before applying \xe2\x80\xa6ClThe factor to multiply the signal by before applying the \xe2\x80\xa6CgInternal method used to define the behavior of this \xe2\x80\xa60CkAbsolute destination position. Can be outside the frame \xe2\x80\xa60CjSerialize an object to bytes using the Python built-in \xe2\x80\xa6BjReturns an emoji associated to each month.BlReturns the emoji associated to the weekday.DcA constructor with the given <code>state</code> and an empty value.DfCreates a canonical empty interval, equivalent to <code>open</code>\xe2\x80\xa6C`Returns <code>true</code> if the queue is empty.BhCreates an iterator that yields nothing.BoReturns the key value used to mark empty slots.ChCreates a value that is always at EOF for reads, and \xe2\x80\xa6B`Returns an empty set of signals.DbCreates an iterator over <code>T</code> which returns no elements.44BfGet a flags value with all bits unset.000000000000000000005ClEmpty buffer of <code>size * size_of::&lt;T&gt;</code> bytesAnCreates a new empty frozen setAlConstructs a new empty list.AhCreates a new empty set.CnConstructs an empty tuple (on the Python side, a singleton \xe2\x80\xa6CbCreates a parallel iterator that produces nothing.CeReturns true if this sink has no more sounds to play.0AnReturns an empty set of flags.0000000;BdProduce an empty array of addresses.AkSucceed, consuming no input?=CmDerive ephemeral shared secret and encapsulation thereof, \xe2\x80\xa6CkGiven the EncapsulationKey, generate a SharedSecret and \xe2\x80\xa6000000ClEnters the runtime context. This allows you to construct \xe2\x80\xa6AkEnters the runtime context.CaEnters the context of this <code>LocalSet</code>.CmGets the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa6CkGets the given value\xe2\x80\x99s corresponding entry in the set \xe2\x80\xa610BcRetrieves an entry for a given key.BcAdds a new entry to the set output.BdAdds a new entry to the list output.BcAdds a new entry to the map output.BoThe entry in the map that was already occupied.DjReturns an <code>Entry</code> for an entry in the table with the given \xe2\x80\xa61CkGets the given key\xe2\x80\x99s corresponding entry in the Table \xe2\x80\xa600887222DiDetermines if the elements of this <code>Iterator</code> are equal to \xe2\x80\xa6000000000000000000000BbChecks that two strings are equal.DfReturn <code>true</code> if both iterables produce equal sequences \xe2\x80\xa6BbComplementary error function (f32)BiReturns the error number (if applicable).BnReturns the error which caused the call to \xe2\x80\xa6Ck(error) Outputs a message to the console with the error \xe2\x80\xa6Cg<code>log</code> Logs a message at the indicated level.BhErrors, backtraces, structured handling.1BcInterfaces for working with Errors.BgContains detailed error representation.1eerrorCf&lt; contains the error code or 0 if no error happenedBbLogs a message at the error level.AdChannel error types.AeBroadcast error typesBa<code>Oneshot</code> error types.AbWatch error types.A`Error management9CiThe type of mouse event (Click, MouseDown, MouseMove, \xe2\x80\xa6CkThe type of pointer event (PointerDown, PointerMove, etc.).10BlUser interface events-related functionality.AhA module to read events.oEvent\xe2\x80\x99s data.0nEvent HandlingB`Initializes the event subsystem.Ai&lt; ::SDL_DisplayEventIDAh&lt; ::SDL_WindowEventIDAb<code>10^x</code>.0CjCalculates 10 raised to the power of <code>x</code> (f64).AiExponential, base 2 (f32)BjExponential, base <em>e</em>, of x-1 (f64)ChA SIMD vector with one element of type <code>f32</code>.00000CiA SIMD vector with two elements of type <code>f32</code>.00000CjA SIMD vector with four elements of type <code>f32</code>.00000CkA SIMD vector with eight elements of type <code>f32</code>.00000ChA SIMD vector with one element of type <code>f64</code>.00000CiA SIMD vector with two elements of type <code>f64</code>.00000CjA SIMD vector with four elements of type <code>f64</code>.00000CkA SIMD vector with eight elements of type <code>f64</code>.00000B`Absolute value (magnitude) (f32)AiPositive difference (f32)A`An atomic fence.0000CdEquivalent to PyErr::take, but when no error is set:C`Adds a new field to the generated struct output.CfAdds a new field to the generated tuple struct output.CkReturns a reference to the first element in the set, if \xe2\x80\xa6BhReturns a time zone with a fixed offset.AmReturns flags for formatting.CcFrame flags, a combination of @ref lavu_frame_flagsA`AV_CODEC_FLAG_*.BiCombination of AV_PIX_FMT_FLAG_\xe2\x80\xa6 flags.BiExtra flag information. Currently unused.BoAdditional information about the frame packing.Ce&lt; flags such as drop frame, +24 hours support, \xe2\x80\xa6BcA combination of AV_PKT_FLAG valuesCbcan use flags: AVFMT_NOFILE, AVFMT_NEEDNUMBER, \xe2\x80\xa6CbCan use flags: AVFMT_NOFILE, AVFMT_NEEDNUMBER, \xe2\x80\xa6CmFlags modifying the (de)muxer behaviour. A combination of \xe2\x80\xa6B`A combination of AVFILTER_FLAG_*n&lt; Read-onlyB`&lt; ::SDL_MessageBoxButtonFlagsAj&lt; ::SDL_MessageBoxFlagsBb&lt; Supported ::SDL_RendererFlagsCdRequests a window to demand attention from the user.AlFlip this image horizontallyAjFlip this image verticallyCgRecognizes floating point number in text format and \xe2\x80\xa6ClThe largest integer less than or equal to <code>self</code>.0DjThe largest integer less than or equal to <code>x</code>. $$ \\lfloor x \xe2\x80\xa60FdExperimental version of <code>floor</code> in <code>core</code>. See <code>f32::floor</code> for \xe2\x80\xa6FdExperimental version of <code>floor</code> in <code>core</code>. See <code>f64::floor</code> for \xe2\x80\xa610kFloor (f64)CkReturns the largest integer value less than or equal to \xe2\x80\xa6AmFlushes any buffered records.CaFlushes this output stream, ensuring that all \xe2\x80\xa6CfFlushes the file, ensuring that all intermediately \xe2\x80\xa612BmConvert one of the remaining internal frames.3CjThis type doesn\xe2\x80\x99t buffer writes, so flushing is a no-op.000000000333CnReturn the greater of two arguments or, if either argument \xe2\x80\xa6CmReturn the lesser of two arguments or, if either argument \xe2\x80\xa6DhCalculate the remainder of <code>x / y</code>, the precise result of \xe2\x80\xa6BlAccumulator of the elements in the iterator.000CjForces the evaluation of this lazy value and returns a \xe2\x80\xa60BiThe fractional part of <code>self</code>.0AdThe fractional part.FdExperimental version of <code>fract</code> in <code>core</code>. See <code>f32::fract</code> for \xe2\x80\xa6FdExperimental version of <code>fract</code> in <code>core</code>. See <code>f64::fract</code> for \xe2\x80\xa610CmReturns the floating point\xe2\x80\x99s fractional value, with its \xe2\x80\xa6C`Returns a shared reference to the front element.DjProvides a reference to the front element, or <code>None</code> if the \xe2\x80\xa60mUI frontends.CmProvides a reference to the front element of the cursor\xe2\x80\x99\xe2\x80\xa60Cjbase \xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A pointer-sized floating-point primitive.0Bi\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A GLSL signed 32-bit integer.0CmThe gamma function. Generalizes the factorial function to \xe2\x80\xa60nThe green maskAlGraph the filter belongs to.Bg&lt; filtergraph this filter belongs toCkThe filtergraph this segment is associated with. Set by \xe2\x80\xa6AdThe green component.00000000000C`Sets the foreground color to <code>Green</code>.Ce(group) Creates a new inline group, indenting all \xe2\x80\xa6CfIndicates whether the <code>d</code> field is enabled.CfIndicates whether the <code>h</code> field is enabled.CfIndicates whether the <code>s</code> field is enabled.CfIndicates whether the <code>y</code> field is enabled.CfCreate a new span from this integer in units of hours.CjSet the number of hours on this span. The value may be \xe2\x80\xa6CnThe format-specific data, allocated and freed by libavutil \xe2\x80\xa6CaThe format-specific data, allocated and freed \xe2\x80\xa6BiThe hypothenuse (the euclidean distance).000ChA SIMD vector with one element of type <code>i16</code>.00000CiA SIMD vector with two elements of type <code>i16</code>.00000CjA SIMD vector with four elements of type <code>i16</code>.00000CkA SIMD vector with eight elements of type <code>i16</code>.00000ChA SIMD vector with one element of type <code>i32</code>.00000CiA SIMD vector with two elements of type <code>i32</code>.00000CjA SIMD vector with four elements of type <code>i32</code>.00000CkA SIMD vector with eight elements of type <code>i32</code>.00000ChA SIMD vector with one element of type <code>i64</code>.00000CiA SIMD vector with two elements of type <code>i64</code>.00000CjA SIMD vector with four elements of type <code>i64</code>.00000CkA SIMD vector with eight elements of type <code>i64</code>.00000CgA SIMD vector with 16 elements of type <code>i8</code>.00000CgA SIMD vector with 32 elements of type <code>i8</code>.00000CgA SIMD vector with 64 elements of type <code>i8</code>.00000CgA text representation of the vendor\xe2\x80\x99s application \xe2\x80\xa6dTODOCiReturns the base 2 logarithm of the number, rounded down.00000AcImage capabilities.BbImage manipulation. image::{sixel}1CaA binding for the library <code>SDL2_image</code>CmPerforms the the N-point Inverse Modified Discrete Cosine \xe2\x80\xa6DaHelper functions for implementing <code>RngCore</code> functions.BmOpaque implementations of <code>Parser</code>DgCreates a <code>Zoned</code> value by attaching a time zone for the \xe2\x80\xa6CgReturn a new zoned datetime with precisely the same \xe2\x80\xa6DhConverts a civil date to a <code>Zoned</code> datetime by adding the \xe2\x80\xa6DhConverts a civil datetime to a <code>Zoned</code> datetime by adding \xe2\x80\xa6ClLists of supported formats / etc. supported by the input \xe2\x80\xa6D`Performs the indexing (<code>container[index]</code>) operation.CiReturns a reference to the value corresponding to the \xe2\x80\xa60E`Returns the Month index from <code>January=0</code> to <code>December=11</code>.22CnReturns a shared reference to the output at this location, \xe2\x80\xa6BiResolve the index of a particular sample.CfReturn a reference to a single sample at specified \xe2\x80\xa61252Bd&lt; stream index in AVFormatContextCbReturns an adapted iterator for the current index.DoReturns the first index <code>i</code> for which <code>self[i] == value</code>.0DiReturns the index (the <code>__all__</code> attribute) of the module, \xe2\x80\xa6111011BeGet the index into the result buffer.0ChOur index amongst the broadcast threads (ranges from \xe2\x80\xa6CeGets the index of this thread in the pool, within \xe2\x80\xa6ClSets the index of the rendering driver to initialize. If \xe2\x80\xa6BhA unique index for the <code>Cue</code>.0fPanics?<><DeReturns the cursor position index within the <code>LinkedList</code>.0BhGet a reference to the underlying image.C`Returns a mutable reference to the inner source.BhReturns a reference to the inner source.0000000BnReturns a reference to the inner audio source.BiReturns a reference to the innner source.22222222CcReturns an immutable reference to the inner stream.DbGet the underlying <code>u32</code> backing this <code>u24</code>.DbGet the underlying <code>i32</code> backing this <code>i24</code>.BaReference to the inner transport.BeThe original <code>ParserError</code>AcInput capabilities.0AiGet the input definition.CbUnconsumed bytes in the input buffer as read only.BbInner input being wrapped in stateDdThe <code>Stream</code> at the initial location when parsing startedCnThe input stream, pointing to the location where the error \xe2\x80\xa6CfParsed input, at the location where the error occurred03nIntrospection.EcReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_10</code> (The \xe2\x80\xa6EcReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_11</code> (The \xe2\x80\xa6DlReturns <code>true</code> if the ordering is the <code>Equal</code> variant.FeReturns <code>true</code> if the ordering is either the <code>Greater</code> or <code>Equal</code>\xe2\x80\xa6DnReturns <code>true</code> if the ordering is the <code>Greater</code> variant.FcReturns <code>true</code> if the ordering is either the <code>Less</code> or <code>Equal</code> \xe2\x80\xa6DkReturns <code>true</code> if the ordering is the <code>Less</code> variant.E`Returns <code>true</code> if the ordering is not the <code>Equal</code> variant.CkReturns <code>true</code> if the result is <code>Ok</code>.DeRedundant constants module for the <code>isize</code> primitive type.00CdReturns the square root of the number, rounded down.00000E`Groups <em><code>items</code></em> together and expands them as if they were \xe2\x80\xa60AmReturns a list of dict items.ChReturns a list of all (key, value) pairs in the mapping.CmReturns a list of tuples of all (key, value) pairs in the \xe2\x80\xa621Am&lt; Joystick axis event dataAm&lt; Joystick ball event dataCeReturns a mutable reference to the raw channel value.00CdAn av_malloc()\xe2\x80\x99ed string containing the pad label.BcReturns the label of the component.CdSearch for the last occurrence of a byte in a slice.CmSearch for the last occurrence of two possible bytes in a \xe2\x80\xa6CmSearch for the last occurrence of three possible bytes in \xe2\x80\xa6CaDisambiguates this timestamp according to the \xe2\x80\xa6CfDisambiguates this zoned datetime according to the \xe2\x80\xa6BcRecognizes a signed 1 byte integer.BfRecognizes an unsigned 1 byte integer.BcThe verbosity level of the message.0CnResolution level of the component, indicating its level of \xe2\x80\xa60AjEncoding level descriptor.BaSet <code>Metadata::level</code>.AnSetter for <code>level</code>.AiCache Level (starts at 1)Ao&lt; The joystick battery levelBe&lt; Strength of the constant effect.ClReturns the number of bytes that can be read before this \xe2\x80\xa6ClApplies limiting to prevent audio peaks from exceeding a \xe2\x80\xa60CjReturns the remaining number of bytes that can be read \xe2\x80\xa6CdLimit how much data is to be released from the body.AhLimit the response body.CkConsumes this handle and returns an iterator over input \xe2\x80\xa6CbReturns an iterator over the lines of this reader.0000CnGets the currently positioned lines. If there are no lines \xe2\x80\xa6ChReturns a stream over the lines of this reader. This \xe2\x80\xa6AjLinux-specific definitionsAkLinux-specific definitions.DcThe natural logarithm of <code>self</code> plus 1, more accurately.0BnThe natural logarithm plus 1, more accurately.0CnDeserialize an object from bytes using the Python built-in \xe2\x80\xa6BkThe base 10 logarithm of <code>self</code>.0AfThe base 10 logarithm.0BnThe base 10 logarithm of <code>x</code> (f64).CiProduces a vector where every element has the base-10 \xe2\x80\xa6C`The natural logarithm of 1+<code>x</code> (f64).BmThe base 2 logarithm of <code>x</code> (f32).BfLogic related types and functionality.E`The lower bound (also known as the <em>start</em> bound, or the <em>left</em>\xe2\x80\xa60Ef<code>safe_arch</code> The data for a 128-bit SSE register of two <code>f64</code> \xe2\x80\xa60DcThe data for a 128-bit SSE register of two <code>f64</code> values.Di<code>safe_arch</code> The data for a 128-bit SSE register of integer \xe2\x80\xa60CdThe data for a 128-bit SSE register of integer data.Eg<code>safe_arch</code> The data for a 256-bit AVX register of four <code>f64</code> \xe2\x80\xa60DdThe data for a 256-bit AVX register of four <code>f64</code> values.Di<code>safe_arch</code> The data for a 256-bit AVX register of integer \xe2\x80\xa60CdThe data for a 256-bit AVX register of integer data.DeThe data for a 512-bit AVX-512 register of eight <code>f64</code> \xe2\x80\xa6ChThe data for a 512-bit AVX-512 register of integer data.BkPython major version (e.g. <code>3</code>).mmajor versionAb&lt; major versionEfTransforms the inner value in variant<code>_0</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_1</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_2</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_3</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_4</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_5</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_6</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_7</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_8</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_9</code> using <code>f</code>, leaving \xe2\x80\xa6ChHelper for using optionally implemented traits, like \xe2\x80\xa60CmMultimedia functionality. media::{audio, color, draw, font\xe2\x80\xa6CgReturn an iterator adaptor that merges the two base \xe2\x80\xa6000DmCreate an iterator that merges elements in <code>i</code> and <code>j</code>.DhMerge two <code>SemaphorePermit</code> instances together, consuming \xe2\x80\xa6DcMerge two <code>OwnedSemaphorePermit</code> instances together, \xe2\x80\xa6BlPython minor version (e.g. <code>11</code>).mminor versionAb&lt; minor versionCbMixer that plays multiple sounds at the same time.AcBuilds a new mixer.CaA binding for the library <code>SDL2_mixer</code>DfEquivalent to <code>months()</code>, but reads better for singular \xe2\x80\xa6BjReturns the month for this zoned datetime.BlSet the month field on a <code>Zoned</code>.BgReturns the parsed month, if available.B`Returns the month for this date.BkSet the month field on a <code>Date</code>.BdReturns the month for this datetime.BoSet the month field on a <code>DateTime</code>.nMonth: 1 to 12AiMouse input capabilities.0CnReturns the last modification time of the file, in seconds \xe2\x80\xa600BgWhether multiple windows are supported.0CgReturns a reference to the original <code>Mutex</code>.DbReturns a reference to the original <code>Arc&lt;Mutex&gt;</code>.DjNaive line algorithm (static <code>Points</code> version). Precomputes \xe2\x80\xa6Bh&lt; the number of axes on this joystickCdGenerates the next 2 random <code>u32</code> values.CdGenerates the next 4 random <code>u32</code> values.Bh&lt; the number of hats on this joystickBhSpecialized numeric types and behaviors.CgReturns the number of hard links pointing to this file.00nThe numerator.0EoTransforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping \xe2\x80\xa6CbThe <code>ChannelOrder</code> used in this layout.CjChannel order used in this layout. This is a mandatory \xe2\x80\xa6ChCreates a new I/O error from an arbitrary error payload.")