rd_("Cabase_macros Returns the first non-empty argument.CnReturn an iterator adaptor that uses the passed-in closure \xe2\x80\xa60CcSpecific type of the encoded data (the codec used).CkCodec parameters associated with this stream. Allocated \xe2\x80\xa6CfFunctions for altering and converting the color of \xe2\x80\xa6BmFinish consuming items, produce final result.AkMark the stream is complete0CiCompresses wavelet coefficients by thresholding small \xe2\x80\xa60DkCreates a new <code>Timestamp</code> value in a <code>const</code> context.DfCreates a new <code>Date</code> value in a <code>const</code> context.DjCreates a new <code>DateTime</code> value in a <code>const</code> context.DfCreates a new <code>Time</code> value in a <code>const</code> context.DiCreates a new time zone offset in a <code>const</code> context from a \xe2\x80\xa6Ae&lt; Constant effect.EgReturns <code>true</code> if the option is a <code>Some</code> value containing the \xe2\x80\xa6EfReturns <code>true</code> if the result is an <code>Ok</code> value containing the \xe2\x80\xa6DeReturns <code>true</code> if the array contains <code>element</code>.ChReturns true if the array contains <code>element</code>.CfReturns <code>true</code> if the set contains a value.CkReturns true if the destaque contains <code>element</code>.C`Checks if the interval contains the given value.ChReturns true if the stack contains <code>element</code>.DhReturns <code>true</code> if the given item is present in this iterator.0DiReturns <code>true</code> if the set contains an element equal to the \xe2\x80\xa6DiReturns <code>true</code> if <code>item</code> is contained in the range.000EfReturns <code>true</code> if the <code>LinkedList</code> contains an element equal \xe2\x80\xa6DkReturns <code>true</code> if the deque contains an element equal to the \xe2\x80\xa62222222222<;44222DiReturns <code>true</code> if the given pattern matches a sub-slice of \xe2\x80\xa6CmWhether all set bits in a source flags value are also set \xe2\x80\xa600000000000000000000BoDetermines if self contains <code>value</code>.0ChDetermines if the dictionary contains the specified key.CaDetermines if the set contains the specified key.2CeDetermines if the mapping contains the specified key.31332130313EeReturns <code>true</code> if all of the flags in <code>other</code> are contained \xe2\x80\xa60000000?DkAdjust the contrast of the supplied image. <code>contrast</code> is the \xe2\x80\xa60CnAsynchronously copies the entire contents of a reader into \xe2\x80\xa6DiA number composed of a magnitude of <code>self</code> and the sign of \xe2\x80\xa60DjA number composed of the magnitude of itself and the <code>sign</code> \xe2\x80\xa6DhReturns each element with the magnitude of <code>self</code> and the \xe2\x80\xa6000AoSign of Y, magnitude of X (f64)11CmReturns the CPU architecture (eg. x86, amd64, aarch64, \xe2\x80\xa6\xe2\x80\xa6CkAccumulates the <code>u8</code> into a running CRC32 value.0CnReturns the highest temperature before the component halts \xe2\x80\xa6ClReturn a cut-out of this image delimited by the bounding \xe2\x80\xa6CnReturn an immutable view into an image The coordinates set \xe2\x80\xa6Cj@anchor cropping @name Cropping Video frames only. The \xe2\x80\xa6CgReturns the last status change time of the file, in \xe2\x80\xa6DfCreates a new <code>NonNull</code> that is dangling, but well-aligned.ClCreates a new pointer that is dangling, but non-null and \xe2\x80\xa6DiCreates a <code>NonNull</code> that is dangling, but well-aligned for \xe2\x80\xa6111CbSets the foreground color to <code>DarkRed</code>.BmReturns a raw pointer to the underlying data.0000CfReturns the civil datetime component of this zoned \xe2\x80\xa6DjCreates a new <code>DateTime</code> value in a <code>const</code> context.CkReturns the civil datetime that was used to create this \xe2\x80\xa60BaDCT algorithm, see FF_DCT_* belowDa&lt; Size of the dead zone; max 0xFFFF: whole axis-range when \xe2\x80\xa6CdReturns area in which axis events should be ignored.ClDrops events in dead zone and remaps value to keep it in \xe2\x80\xa6CiDecode a decimal unsigned integer (e.g. <code>u32</code>)ClRemove duplicates from sections of consecutive identical \xe2\x80\xa60ClRemoves all but the first of consecutive elements in the \xe2\x80\xa61100CaDeletes the <code>index</code>th element of self.BdDeletes an item from the collection.A`Deletes an item.2BkDeletes the item with key <code>key</code>.BmDeletes the <code>i</code>th element of self.32410Ag&lt; Gesture event dataAkME diamond size &amp; shapeDiConverts a one-digit number to the corresponding <code>1</code> ASCII \xe2\x80\xa6DiConverts a two-digit number to the corresponding <code>2</code> ASCII \xe2\x80\xa6DkConverts a three-digit number to the corresponding <code>3</code> ASCII \xe2\x80\xa6DjConverts a four-digit number to the corresponding <code>4</code> ASCII \xe2\x80\xa6CiForcibly captures a disabled backtrace, regardless of \xe2\x80\xa6EcCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the \xe2\x80\xa600000CnReturns the quotient, rounding the result towards positive \xe2\x80\xa60AlLanewise <code>a / b</code>.0CbLanewise <code>a / b</code> with <code>f32</code>.0Cg(Document) Handle to the brower\xe2\x80\x99s global Document \xe2\x80\xa6Cd(document) Returns the <code>document</code> object.DoAttempts to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a \xe2\x80\xa6C`Attempts to downcast the box to a concrete type.00CnAttempts to downcast the custom boxed error to <code>E</code>.111DkAttempts to downcast the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.BoAttempt to downcast the box to a concrete type.0000DfDowncast this <code>PyAny</code> to a concrete Python type or pyclass.05DfDrops <code>self</code> and immediately decreases its reference count.DhConsume the first <code>n</code> elements from the iterator eagerly, \xe2\x80\xa6000BgDuplicates the back element at the backCjReturns the positive duration which represents how far \xe2\x80\xa6CiDuration of the frame, in the same units as pts. 0 if \xe2\x80\xa6DaDuration of this packet in AVStream-&gt;time_base units, 0 if \xe2\x80\xa6CnDuration of the current frame. For audio, this is in units \xe2\x80\xa6CmDecoding: duration of the stream, in stream time base. If \xe2\x80\xa6CfDuration of the stream, in AV_TIME_BASE fractional \xe2\x80\xa6AkThe duration of the motion.BbReturns the duration of the audio.0CnEncode a string slice with a specified encoding and append \xe2\x80\xa6AlBinary or Ascii encoded file00AkBasic attenuation function.CjWrites string + newline to stderr. Optimized for small \xe2\x80\xa6BmPrints to the standard error, with a newline.AmReturns the year and its era.ChSet the year of a zoned datetime via its era and its \xe2\x80\xa61CgSet year of a date via its era and its non-negative \xe2\x80\xa62CkSet year of a datetime via its era and its non-negative \xe2\x80\xa6CfConvert the parser\xe2\x80\x99s error to another type using \xe2\x80\xa60Bc<code>etcetera</code> modificationsAdDocumented examples.CjThe codec may call this to execute several independent \xe2\x80\xa6CfReturns 2 raised to the power of an <code>f128</code>.00DeHelper to extend during construction (See <code>Self::extend</code>).CcReturns the absolute value of an <code>f128</code>.00AdFades out the sound.0CiGradually fade out which channel over ms milliseconds \xe2\x80\xa6CbGradually fade out channels in group over some \xe2\x80\xa6CnGradually fade out the music over ms milliseconds starting \xe2\x80\xa6CnCalculates the lanewise maximum of both vectors. This is a \xe2\x80\xa6000CnCalculates the lanewise minimum of both vectors. This is a \xe2\x80\xa6000ClList of platform-dependent features that miniquad failed \xe2\x80\xa60AaLibrary features.AlSets the amount of feedback.ClSets how much the room reverberates. A higher value will \xe2\x80\xa6CnHow much the room reverberates. A higher value will result \xe2\x80\xa6CmBitwise or with the current value, returning the previous \xe2\x80\xa600000000000BfLogical \xe2\x80\x9cor\xe2\x80\x9d with a boolean value.0CkPerforms a bitwise \xe2\x80\x9cor\xe2\x80\x9d operation on the address of \xe2\x80\xa6BhBitwise \xe2\x80\x9cor\xe2\x80\x9d with the current value.00000000000210000000000Cmbase_macros Generates an expression for accessing a field \xe2\x80\xa60Bc&lt; Unix file mode, -1 if unknown.DeReturns the filename (the <code>__file__</code> attribute) of the \xe2\x80\xa60CkReturns the contents of the internal buffer, filling it \xe2\x80\xa6CmReturns the contents of the \xe2\x80\x9cfront\xe2\x80\x9d slice as returned \xe2\x80\xa61111AgReturn a SHA512 digest.AgReturn a SHA256 digest.AgReturn a SHA384 digest.AiReturn a SHA3-224 digest.AiReturn a SHA3-256 digest.AiReturn a SHA3-384 digest.AiReturn a SHA3-512 digest.AhReturn a BLAKE2b digest.AeReturn a BLAKE2b tag.AiReturn a HMAC-SHA512 tag.AiReturn a HMAC-SHA256 tag.AiReturn a HMAC-SHA384 tag.AfReturn a Poly1305 tag.CmFinish building the set and take ownership of its current \xe2\x80\xa6CjOptionally, obtain post-decode information such as the \xe2\x80\xa6DiSearches for <strong>some</strong> item in the parallel iterator that \xe2\x80\xa60ClApplies function to the elements of iterator and returns \xe2\x80\xa6000000000000000000000CmReturns a mutable reference to an entry in the table with \xe2\x80\xa6CmLike <code>find</code>, but accepts and returns raw pointers.000000000DgReturns <code>true</code> if the sound is finished and can be unloaded.CgWhether the modulator can be removed from the audio \xe2\x80\xa6CiCreates an iterator that works like map, but flattens \xe2\x80\xa6000000000000000000000DkApplies <code>map_op</code> to each item of this iterator to get nested \xe2\x80\xa60BlCreates a parser from the output of this one0DkReturns a copy of <code>self</code> flipping the bit at <code>index</code>.00DfReturns the largest integer less than or equal to an <code>f16</code>.00DfReturns the largest integer less than or equal to an <code>f32</code>.00DfReturns the largest integer less than or equal to an <code>f64</code>.00CjReturns the flow information associated with this address.CnReturn the greater of two arguments or, if either argument \xe2\x80\xa6CmReturn the lesser of two arguments or, if either argument \xe2\x80\xa6BoCalls a closure on each element of an iterator.000000000000000000000DfExecutes <code>OP</code> on each item produced by the iterator, in \xe2\x80\xa60CmThe amount of time since the last tick as a fraction of a \xe2\x80\xa6ClThe frame or sample timestamp of the <code>SeekPoint</code>.CoA bespoke but easy to read format for <code>Span</code> and \xe2\x80\xa6CfCreates a new angle from a <code>degrees</code> value.DeCreates a new angle from a floating-point <code>degrees</code> value.0CkReturns a time zone database initialized from the given \xe2\x80\xa6CmReturns a time zone database initialized from the current \xe2\x80\xa6CaConverts <code>KeyFfi</code> to <code>Key</code>.CkConverts <code>EventKeyFfi</code> to <code>EventKey</code>.CdConverts a vector of integers to a mask, where 0 \xe2\x80\xa6CkConverts a reference to a non-zero mutable reference if \xe2\x80\xa6CoConverts a mutable reference to a <code>NonNull</code> pointer.DhReturns a <code>&amp;Cell&lt;T&gt;</code> from a <code>&amp;mut T</code>EcConverts from <code>&amp;mut T</code> to <code>&amp;mut UnsafeCell&lt;T&gt;</code>.C`Convert an exclusive reference to a raw pointer.DcConverts a reference to <code>T</code> into a slice of length 1 \xe2\x80\xa6DkConverts a mutable reference to <code>T</code> into a mutable reference \xe2\x80\xa6BnConverts a mutable reference to a raw pointer.CfConverts a reference to T into a slice of length 1 \xe2\x80\xa6FcBuild a <em>mutable</em> reference to an <code>Exclusive&lt;T&gt;</code> from a <em>mutable</em>\xe2\x80\xa6CcGets atomic access to a <code>&amp;mut bool</code>.B`Gets atomic access to a pointer.C`Get atomic access to a <code>&amp;mut i8</code>.C`Get atomic access to a <code>&amp;mut u8</code>.CaGet atomic access to a <code>&amp;mut i16</code>.CaGet atomic access to a <code>&amp;mut u16</code>.CaGet atomic access to a <code>&amp;mut i32</code>.CaGet atomic access to a <code>&amp;mut u32</code>.CaGet atomic access to a <code>&amp;mut i64</code>.CaGet atomic access to a <code>&amp;mut u64</code>.CcGet atomic access to a <code>&amp;mut isize</code>.CcGet atomic access to a <code>&amp;mut usize</code>.=?>=?>==CjReturns a chroma location for the given swscale chroma \xe2\x80\xa6CeCreates a new <code>AtomicBool</code> from a pointer.CdCreates a new <code>AtomicPtr</code> from a pointer.CgCreates a new reference to an atomic integer from a \xe2\x80\xa60000000CjCreates a new reference to an atomic float from a pointer.11011CbWraps a raw C string with a safe C string wrapper.432222222222EhConstructs a new <code>Borrowed&lt;&#39;a, &#39;py, PyAny&gt;</code> from a pointer. \xe2\x80\xa6CnCreates a new Python byte string object from a raw pointer \xe2\x80\xa6CfCreates a new angle from a <code>radians</code> value.DeCreates a new angle from a floating-point <code>radians</code> value.0CkConstructs an <code>Arc&lt;T&gt;</code> from a raw pointer.DkConverts a raw pointer previously created by <code>into_raw</code> back \xe2\x80\xa6BdConstructs a box from a raw pointer.CjConstructs an <code>Rc&lt;T&gt;</code> from a raw pointer.2CdConstructs a <code>Thread</code> from a raw pointer.DiRetakes ownership of a <code>CString</code> that was transferred to C \xe2\x80\xa6ClCreates a new <code>Waker</code> from <code>RawWaker</code>.DaCreates a new <code>LocalWaker</code> from <code>RawWaker</code>.CmConstructs a buffer from a generic container (for example \xe2\x80\xa666CeCreate a new reference to a codec from a raw pointer.fSafety00AkConversion from the C enum.EfCreates a new <code>ExitStatus</code> or <code>ExitStatusError</code> from the raw \xe2\x80\xa60<;CgConverts a reference to a <code>NonNull</code> pointer.BlConvert a shared reference to a raw pointer.DcConverts a reference to <code>T</code> into a slice of length 1 \xe2\x80\xa6DjConverts a reference to <code>T</code> into a reference to an array of \xe2\x80\xa6BfConverts a reference to a raw pointer.CfConverts a reference to T into a slice of length 1 \xe2\x80\xa60210DdCreate a new <code>Window</code> without taking ownership of the \xe2\x80\xa63211CmCreate a new PRNG seeded from an infallible <code>Rng</code>.DgCreates an asynchronous <code>ChildStdin</code> from a synchronous one.DhCreates an asynchronous <code>ChildStdout</code> from a synchronous one.DhCreates an asynchronous <code>ChildStderr</code> from a synchronous one.CnParses a string <code>s</code> to return a value of this type.CmConverts a string <code>s</code> into a <code>CString</code>.1111ClCreates a <code>Color</code> from the string representation.CdAttempts to parse a string into a regular expressionBaParses a document from a &amp;str0AnParses a value from a &amp;strDbTries to parse a key from a &amp;str, if fails, tries as basic \xe2\x80\xa61BbDeserializes a string into a type.23CjAttempt to convert a string to a <code>HeaderValue</code>.88B`Converts a u16 to a status code.ElConverts a <code>u32</code> to a <code>char</code>. Use <code>char::from_u32</code> instead.0CkAllows to convert a <code>u32</code> into <code>Pid</code>.1CnCreates an image buffer out of an existing buffer. Returns \xe2\x80\xa6CdCreates an <code>OsString</code> from a byte vector.0Cj\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A GLSL double-precision floating-point number.0Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat2x3</code>, a column-major 2\xc3\x973 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat2x4</code>, a column-major 2\xc3\x974 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat3x2</code>, a column-major 3\xc3\x972 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat3x4</code>, a column-major 3\xc3\x974 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat4x2</code>, a column-major 4\xc3\x972 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat4x3</code>, a column-major 4\xc3\x973 matrix \xe2\x80\xa60CkA Rust type representing an exception defined in Python \xe2\x80\xa6CkReturns iterator over all connected gamepads and their ids.ClChanges gamepads that are associated with effect. Effect \xe2\x80\xa6DjRandomly generate using a CSPRNG. Not available in <code>no_std</code> \xe2\x80\xa6000000000AiGenerate a fresh KeyPair.010011111B`Generate a new block of results.ClReturns an iterator of the arguments that will be passed \xe2\x80\xa6BgGets a single byte from <em>stdin</em>.CdGets a single <code>char</code> from <em>stdin</em>.CnReturns a clone of the element at the given 2D coordinates \xe2\x80\xa6BmReturns the number of day units in this span.ClReturns the number of days, as an int from -999999999 to \xe2\x80\xa6CdReturns an iterator of the environment variables \xe2\x80\xa6BcReturns the current fill character.CnReturns whether this date is the later of two moments with \xe2\x80\xa6BnReturns the hour, as an int from 0 through 23.BjGets the list item at the specified index.BaGets an item from the collection.BaGets an item from the dictionary.2C`Gets the item in self with key <code>key</code>.CiReturns the <code>index</code>th element of the Sequence.BkGets the tuple item at the specified index.435210DnGets a string from <em>stdin</em> backed by a <code>buffer</code>, until a \xe2\x80\xa6=DiReturns the current sign (the <code>+</code> or the <code>-</code> flag).BgThe current framebuffer size in pixels.BcReturns the type of this exception.CdGets the Python type object for type <code>T</code>.ChReturns the Python type object for this object\xe2\x80\x99s type.0BfThe file format encoding of the music.ClCreate a resampler with the given definitions and custom \xe2\x80\xa6BdReturns the year, as a positive int.ClDeclare whether or not this module supports running with \xe2\x80\xa60Ckthe number of pictures in a group of pictures, or 0 for \xe2\x80\xa6AmSee <code>.chunk_by()</code>.000Bf&lt; Group ID of owner, -1 if unknown.BlReturns the process group ID of the process.BaReturns the group ID of the user.CmThermal Monitor and Software Controlled Clock Facilities. \xe2\x80\xa6CdAPIC On-Chip. The processor contains an Advanced \xe2\x80\xa6CkARAT. APIC-Timer-always-running feature is supported if \xe2\x80\xa6CmSupport for the AMD advanced virtual interrupt controller \xe2\x80\xa6dAVX2dBMI1dBMI2dCLWBCgConditional Move Instructions. The conditional move \xe2\x80\xa6BoChecks if the <em>Control</em> modifier is set.ClECMD. Clock modulation duty cycle extension is supported \xe2\x80\xa6CgEnhanced Intel SpeedStep\xc2\xae technology. A value of 1 \xe2\x80\xa6CiA value of 1 indicates that processor supports 16-bit \xe2\x80\xa6BeFour-operand FMA instruction support.AmSupports Fast Short REP STOSBBcSupports Fast zero-length REP MOVSBdGFNIBkGuest Mode Execution Trap supported if set.EbIndicates whether the 6 fields from <code>h</code> to <code>ns</code> are enabled.CmSupports 57-bit linear addresses and five-level paging if \xe2\x80\xa6EaIf <code>Left</code>, or <code>Both</code>, return true. Otherwise, return false.BlChecks if the <em>Meta</em> modifier is set.CmMOVU (Move Unaligned) SSE instructions are efficient more \xe2\x80\xa6CiMemory Type Range Registers. MTRRs are supported. The \xe2\x80\xa6CbIndicates support for NRIP save on #VMEXIT if set.BgIndicates OS-visible workaround supportClProcess-context identifiers. A value of 1 indicates that \xe2\x80\xa6ClPerfmon and Debug Capability: A value of 1 indicates the \xe2\x80\xa6CeSupports Intel Resource Director Technology (RDT) \xe2\x80\xa60CnReturns <code>true</code> if the <code>Path</code> has a root.AaHas SGX1 support.AaHas SGX2 support.AlChecks if SIMD is available.CmSMAP. Supports Supervisor-Mode Access Prevention (and the \xe2\x80\xa6CiSMEP. Supports Supervisor-Mode Execution Prevention if 1.CaSSE2. The processor supports the SSE2 extensions.CnStreaming SIMD Extensions 3 (SSE3). A value of 1 indicates \xe2\x80\xa6CmIf true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = \xe2\x80\xa6BoSupports user-mode instruction prevention if 1.dVAESBfVM Permission Levels supported if set.EaIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6CjA hash map implemented with quadratic probing and SIMD \xe2\x80\xa6CmThis module contains the parallel iterator types for hash \xe2\x80\xa6ChCreates a <code>HashMap</code> containing the arguments.2BfCalculates the hash of a single value.00000EdA hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.30CbGetter for the underlying string to be searched in0000CiReturns an exclusive reference to the head of this tuple.0DcDecode a variable-width hexadecimal integer (e.g. <code>u32</code>)EgReturns <code>true</code> if <code>high_dpi</code> was requested and it\xe2\x80\x99s running \xe2\x80\xa6DdIf <code>true</code>, the rendering canvas is scaled for HighDPI \xe2\x80\xa60CnTrue when high_dpi was requested and actually running in a \xe2\x80\xa61CnReturns the path of the current user\xe2\x80\x99s home directory if \xe2\x80\xa60CmApplies a function which takes the parameter by exclusive \xe2\x80\xa600CjApplies a function which takes the parameter by shared \xe2\x80\xa600CfThe hypothenuse (the euclidean distance) using the \xe2\x80\xa6CdReturns the identity of the <code>Hypervisor</code>.Df\xe2\x88\x85 <code>core</code> The identity function. Just returns back its \xe2\x80\xa6DjReturns the identity matrix, or <code>None</code> if the matrix is not \xe2\x80\xa600000001AfThe identity function.00Aninterface name, e.g. \xe2\x80\x9cen0\xe2\x80\x9dAjImage Processing FunctionsEeReturns <code>true</code> if it\xe2\x80\x99s probable the given <code>address</code> is in \xe2\x80\xa6CnReturns an iterator over the connections being received on \xe2\x80\xa6BnReturns an iterator over incoming connections.DgReturns the index of the closest match of <code>color</code> in the \xe2\x80\xa60CiReturns the length of the initialized part of the buffer.CmReturns a mutable reference to the initialized portion of \xe2\x80\xa6BgPrivate context used for internal data.CjPrivate data used internally by libavutil. Must not be \xe2\x80\xa60BnAn opaque struct for libavfilter internal use.BkOpaque object for libavfilter internal use.EeGet the <code>interned</code> field of the <code>PyASCIIObject</code> state bitfield.Ch(setInterval) Calls a function repeatedly at a fixed \xe2\x80\xa6Dd\xf0\x9f\x93\x8f Creates an <code>Interval</code> using extended range notation.0Ce&lt; How soon it can be triggered again after button.0000BlUpcast the target type of this smart pointerDlHelper to cast to <code>Bound&lt;&#39;py, PyAny&gt;</code>, transferring \xe2\x80\xa6DgHelper to cast to <code>Py&lt;PyAny&gt;</code>, transferring ownership.DdConverts the <code>UniqueArc</code> into a regular <code>Arc</code>.CoReturns the contained <code>Err</code> value, but never panics.DbGet the underlying <code>i32</code> backing this <code>i24</code>.AjTake ownership of the key.AiTake ownership of the key11DkConverts the <code>OccupiedEntry</code> into a mutable reference to the \xe2\x80\xa6000BmAllow editing of the <code>DocumentMut</code>11CiConverts the entry into a mutable reference to its value.G`Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not \xe2\x80\xa60CgTurn this smart pointer into a strong reference pointerCeReturns an owned raw FFI pointer represented by self.000CmConsumes the <code>Arc</code>, returning the wrapped pointer.DhConsumes the <code>Weak&lt;T&gt;</code> and turns it into a raw pointer.CoConsumes the <code>Box</code>, returning a wrapped raw pointer.ClConsumes the <code>Rc</code>, returning the wrapped pointer.2CjConsumes the <code>Thread</code>, returning a raw pointer.DkConsumes the <code>CString</code> and transfers ownership of the string \xe2\x80\xa6BaReturns the underlying raw buffer44CdReturns the underlying raw <code>wait</code> status.076FhConverts this <code>Pin&lt;&amp;mut T&gt;</code> into a <code>Pin&lt;&amp;T&gt;</code> with the same \xe2\x80\xa6CjCheaply convert into a <code>std::process::Command</code>.DbGet the underlying <code>u32</code> backing this <code>u24</code>.DjConsumes the <code>BinaryHeap</code> and returns the underlying vector \xe2\x80\xa6DkReturns the inner <code>Box</code>ed primitive array as a <code>Vec</code>.0CmConsumes the image buffer and returns the underlying data \xe2\x80\xa6DfConverts <code>self</code> into a vector without clones or allocation.D`Yields the underlying byte vector of this <code>OsString</code>.0CkConsumes this error, returning the underlying vector of \xe2\x80\xa6CbA callback for closing the streams opened with \xe2\x80\xa6CeReturns the value of the \xe2\x80\x9cio_usage\xe2\x80\x9d refresh kind.BhHelper to use as pymethod ffi definitionCjCreate an iterator over the \xe2\x80\x9ccartesian product\xe2\x80\x9d of \xe2\x80\xa6ClReturns <code>true</code> if this mode uses existing memory.BjTests that self is an alphabetic character0BnReturns true if <code>self</code> is an array.0BnChecks if the value is within the ASCII range.CjChecks if all characters in this string are within the \xe2\x80\xa61111CnChecks if all characters in this (string) slice are within \xe2\x80\xa62CdReturns <code>true</code> if this is an audio event.DbReturns <code>true</code> if this is a <code>Break</code> variant.CkChecks if the unicode scalar is a digit in the given radix.0000ClChecks if the value is a decimal digit: 0x30 \xe2\x80\x980\xe2\x80\x99 ..= \xe2\x80\xa6CjReturns <code>true</code> if the map contains no elements.BcChecks if the binary heap is empty.AjWhether the list is empty.CnReturns the number of <code>None</code> elements in the array.CjReturns <code>true</code> if the set contains no elements.CcReturns <code>true</code> if the destaque is empty.CeChecks if the interval is empty (contains no values).6C`Returns <code>true</code> if the stack is empty.BoChecks whether the <code>OsStr</code> is empty.1DfReturns <code>true</code> if the non-null raw slice has a length of 0.5DgReturns <code>true</code> if the range contains no items. One-sided \xe2\x80\xa6000DbReturns <code>true</code> if the <code>LinkedList</code> is empty.C`Returns <code>true</code> if the deque is empty.CmReturns <code>true</code> if the vector contains no elements.FeReturns <code>true</code> if this <code>String</code> has a length of zero, and <code>false</code>\xe2\x80\xa6CmReturns <code>true</code> if the hashmap contains no entries.CcReturns <code>true</code> if the iterator is empty.0000000CmReturns <code>true</code> if no elements are yet initialized.CeReturns <code>true</code> if the current length is 0.0BjReturns true if the file size equals zero.CiChecks whether the current state is uninitialized (or \xe2\x80\xa6CiReturns <code>true</code> if the range contains no items.0DlReturns <code>true</code> if <code>self.to_bytes()</code> has a length of 0.<<<<<666666666666664441199DkReturns <code>true</code> if this <code>String</code> has a length of zero.BoWhether all bits in this flags value are unset.00BjReturns whether there is no attribute set.111111111111111111CmReturns true if the channel is empty. Note: Zero-capacity \xe2\x80\xa60CjReturns <code>true</code> if the set contains no elements.EfReturn <code>true</code> if this object does not hold any data, <code>false</code> \xe2\x80\xa60000000000000000000000000000000000000EeReturn <code>true</code> if the password hash is empty, <code>false</code> otherwise.1111AlChecks if the list is empty.CjReturns true if the sequence or mapping has a length of 0.BaChecks if the bytearray is empty.CnChecks if the dict is empty, i.e. <code>len(self) == 0</code>.3BeReturns whether the mapping is empty.DfChecks if the mappingproxy is empty, i.e. <code>len(self) == 0</code>.BfReturns whether the sequence is empty.AmChecks if the tuple is empty.6547310AgChecks if set is empty.000CjReturns true if and only if this match has a length of \xe2\x80\xa6CkReturns <code>true</code> if no flags are currently stored.000000DdReturns <code>true</code> if the buffer contains no written samples.01D`Returns <code>true</code> if the <code>Codebook</code> is empty.AmChecks if a channel is empty.0BkReturns true if there are no queued values.CnReturns true if there aren\xe2\x80\x99t any messages in the channel \xe2\x80\xa62CbReturns whether the <code>JoinSet</code> is empty.BcReturns true if the table is empty.BlReturn true if <code>self.len() == 0</code>.BmReturns true if <code>self.len() == 0</code>.22BmReturns true if the map contains no elements.DhReturns true if the <code>HeaderValue</code> has a length of zero bytes.C`Check whether the extension set is empty or not.CbReturns <code>true</code> if the channel is empty.0CjReturns <code>true</code> if the map contains no elements.CjReturns <code>true</code> if the set contains no elements.CiReturns <code>true</code> if the ancillary data is empty.AmWether all bits are set to 0.00DnCompare corresponding bytes in <code>x</code> and <code>y</code> for equality.BmReturns true if <code>self</code> is a float.0DjReturns true if the <code>Tag</code>\xe2\x80\x99s key string was recognized and \xe2\x80\xa6BkIndicates if we know how many bytes we needCnReturns true if and only if there is a match for the regex \xe2\x80\xa6CcReturns <code>true</code> if this is a mouse event.DkReturns true if the data is owned, i.e. if <code>to_mut</code> would be \xe2\x80\xa6C`Returns <code>true</code> if the value is owned.CkReturns true if the error was caused by the task panicking.Cc(locationbar) Whether the window is a popup or not.BoReturns whether the key event is a press event.CeReturns <code>true</code> if <code>n</code> is prime.0CnRange flag. If set to 1 the struct encodes a range, if set \xe2\x80\xa6DjReturns <code>true</code> if the poll is a <code>Poll::Ready</code> value.CkReturn true if the value is the <code>Right</code> variant.DjIf <code>Right</code>, return true. Otherwise, return false. Exclusive \xe2\x80\xa6BeTests that self is ASCII space or tab0FeReturns true if axis is <code>LeftStickX</code>, <code>LeftStickY</code>, <code>RightStickX</code>\xe2\x80\xa6CiReturns true if <code>self</code> is a <code>Table</code>DcReturns <code>true</code> if this mouse event is coming from touch.CeValidates the internal consistency of window metrics.EbRetuns <code>true</code> if the fraction is valid <code>(denominator != 0)</code>.000CiChecks if <code>code</code> is a valid Unicode scalar \xe2\x80\xa6CiCheck whether this layout is valid (i.e. can describe \xe2\x80\xa6BbChecks if this is a valid capsule.0CiReturns <code>true</code> if this entry is a value entry.CiReturns true if <code>self</code> is a <code>Value</code>ClReturns whether the ratio is effectively a whole number (\xe2\x80\xa6Cmbase \xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 An upcasted pointer-sized signed integer \xe2\x80\xa60CjA SIMD vector with 16 elements of type <code>isize</code>.00000CjA SIMD vector with 32 elements of type <code>isize</code>.00000CjA SIMD vector with 64 elements of type <code>isize</code>.00000CeReturns the parsed ISO 8601 week-based number, if \xe2\x80\xa6ClReturns an iterator over exclusive reference to elements \xe2\x80\xa6CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6ChGets a mutable iterator over the entries of the map, \xe2\x80\xa6AkReturns a mutable iterator.0CdProvides a forward iterator with mutable references.CiReturns a front-to-back iterator that returns mutable \xe2\x80\xa6CjReturns a mutable iterator over the possibly contained \xe2\x80\xa606CnAn iterator visiting all elements in arbitrary order, with \xe2\x80\xa6BnMutably borrow the inner value as an iterator.CiReturns an mutable iterator over all key/value pairs, \xe2\x80\xa6BdReturns an iterator over all values.B`Returns an iterator over tables.BiReturns an iterator over key/value pairs.3CjAn iterator visiting all key-value pairs, with mutable \xe2\x80\xa6CnReturns an iterator mutably visiting all values associated \xe2\x80\xa6=CmReturns an iterator over shared references to elements of \xe2\x80\xa60CeIterates over all the variants of the Attribute enum.CiRepeats the embedded parser, lazily returning the resultsB`&lt; Joystick battery event dataDdAwaits the completion of all tasks in this <code>JoinSet</code>, \xe2\x80\xa6BcInitializes the joystick subsystem.Bo\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A JavaScript signed 32-bit integer.0CjGet the number of bits to read after jumping in the table.CcAdds the key part of a new entry to the map output.AlKeyboard input capabilities.0BmReturns the number of keys stored in the map.C`&lt; A language name, like \xe2\x80\x9cen\xe2\x80\x9d for English.BjThe language of the track. May be unknown.0AmPrevious frame byte position.Cm&lt; Level when joystick is to the negative side; max 0xFFFF.Bd&lt; buffer must be len*len_mult bigCfReturns the number of bytes needed to encode in UTF-8.0000CjReturns the number of bytes needed to encode the given \xe2\x80\xa6ClThe natural logarithm of the absolute value of the gamma \xe2\x80\xa6ClThe gap to leave between the descent of one line and the \xe2\x80\xa6CeFor video, a positive or negative value, which is \xe2\x80\xa6AlReturns the components list.AgReturns the disks list.AgReturns the users list.AhReturns the groups list.BcTypes related to spatial listeners.B`Loads a WAVE from the file path.AmLoad src for use as a sample.0CiReturns information about the location from which the \xe2\x80\xa60CeReturns the base 10 logarithm of an <code>f16</code>.00CeReturns the base 10 logarithm of an <code>f32</code>.00CeReturns the base 10 logarithm of an <code>f64</code>.00CeReturns the base 2 logarithm of an <code>f128</code>.00CjLog function which takes as priority INFO and category \xe2\x80\xa6CjLog function which takes as priority WARN and category \xe2\x80\xa6DoApplies a low-pass filter to the source. <strong>Warning</strong>: Probably \xe2\x80\xa60CjMakes a mutable reference into the given <code>Arc</code>.CiMakes a mutable reference into the given <code>Rc</code>.1DkCreates a new pointer by mapping <code>self</code>\xe2\x80\x99s address to a new \xe2\x80\xa6EgApplies <code>map_op</code> to a value returned by <code>init</code> with each item \xe2\x80\xa60DdConvert each item of the iterator using the <code>Into</code> trait.000EfApply the function <code>f</code> on the value in the <code>Left</code> variant if \xe2\x80\xa6ElApply the function <code>f</code> on the value <code>a</code> in <code>Left(a)</code> or \xe2\x80\xa6Ehif <code>mapping_source()</code> is <code>SdlMappings</code> returns the name of the \xe2\x80\xa6EfApplies <code>map_op</code> to the given <code>init</code> value with each item of \xe2\x80\xa60ChA SIMD mask with one element for vectors with 16-bit \xe2\x80\xa600000CiA SIMD mask with two elements for vectors with 16-bit \xe2\x80\xa600000CjA SIMD mask with four elements for vectors with 16-bit \xe2\x80\xa600000CkA SIMD mask with eight elements for vectors with 16-bit \xe2\x80\xa600000ChA SIMD mask with one element for vectors with 32-bit \xe2\x80\xa600000CiA SIMD mask with two elements for vectors with 32-bit \xe2\x80\xa600000CjA SIMD mask with four elements for vectors with 32-bit \xe2\x80\xa600000CkA SIMD mask with eight elements for vectors with 32-bit \xe2\x80\xa600000ChA SIMD mask with one element for vectors with 64-bit \xe2\x80\xa600000CiA SIMD mask with two elements for vectors with 64-bit \xe2\x80\xa600000CjA SIMD mask with four elements for vectors with 64-bit \xe2\x80\xa600000CkA SIMD mask with eight elements for vectors with 64-bit \xe2\x80\xa600000CgA SIMD mask with 16 elements for vectors with 8-bit \xe2\x80\xa600000CgA SIMD mask with 32 elements for vectors with 8-bit \xe2\x80\xa600000CgA SIMD mask with 64 elements for vectors with 8-bit \xe2\x80\xa600000B`Lanewise <code>max(a, b)</code>.000BlSets window size to be as large as possible.BeMaximum sample value within the imageCmmaximum motion estimation search range in subpel units If \xe2\x80\xa6AgBitwise-copies a value.00CbDrops <code>self</code> by running its destructor.00EfSwaps the value of <code>self</code> and <code>other</code> without deinitializing \xe2\x80\xa600DdReplaces <code>self</code> with its default value, returning the \xe2\x80\xa600CmSearch for the last occurrence of two possible bytes in a \xe2\x80\xa6CmSearch for the last occurrence of three possible bytes in \xe2\x80\xa6CgReturn an iterator adaptor that merges the two base \xe2\x80\xa6000BjReturns the parsed meridiem, if available.BmReturns the iterator of the control messages.BaMetadata about the log directive.BkQueries metadata about the underlying file.ClReturns the metadata for the file that this entry points \xe2\x80\xa6ClQueries the file system to get information about a file, \xe2\x80\xa6BmReturns the metadata part of the fat pointer.ClGiven a path, queries the file system to get information \xe2\x80\xa6AeReturns the metadata.BmExtracts the metadata component of a pointer.AoTypes describing image metadata1imetadata.BhMetadata that applies to the whole file.DlSet <code>metadata</code>. Construct a <code>Metadata</code> object with \xe2\x80\xa6CeYield the constructed <code>Metadata</code> revision.ClReturns a reducable reference to the metadata inside the \xe2\x80\xa6DbA log of <code>Metadata</code> revisions read during the probe \xe2\x80\xa6AoGets the metadata revision log.08:Ag&lt; Gesture event dataBjReturns the first moment of time in a day.EaCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.00000DhCalculates the middle point of <code>self</code> and <code>other</code>.0DhReturns <code>true</code> if the closure was called from a different \xe2\x80\xa6B`Lanewise <code>min(a, b)</code>.000ClMinimize a window to an iconic representation (will show \xe2\x80\xa6ChA macro for namespaced <code>miniquad</code> operations.Bb<code>miniquad</code> UI backends.1BdML-KEM-512 as specified in FIPS-203.BdML-KEM-768 as specified in FIPS-203.CnDeclares a module by including a Rust source file relative \xe2\x80\xa60C`A macro helper to define a module name and path.0CkReturns the last modification time listed in this metadata.BaReturns the time of modification.CiMotion vector src_x = dst_x + motion_x / motion_scale \xe2\x80\xa60CnReturns the last modification time of the file, in seconds \xe2\x80\xa6AlLanewise <code>a * b</code>.0ChLanewise <code>a * b</code> with <code>f32</code> lanes.0BoFilter using <code>MultNor</code>: D = S1 * S2.DgAn iterator that generalizes <code>.zip()</code> and allows running \xe2\x80\xa6DdAn identity function that causes an <code>unused_must_use</code> \xe2\x80\xa6000BhFlips all the bits of <code>self</code>.00CgThe number of frames the <code>SeekPoint</code> covers.BmThe length of the stream in number of frames.Bk&lt; the number of buttons on this joystickBjReturns the negative version of the angle.ChReturns the negative version of the angle (no-op for \xe2\x80\xa61CgApplies the <code>Reverse</code> attribute to the text.DkReturns a seeded <code>XorShift128</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DiReturns a seeded <code>Xoroshiro128pp</code> generator from the given \xe2\x80\xa6DiReturns a seeded <code>XorShift128</code> generator from the given 16 \xe2\x80\xa6DgReturns a seeded <code>Lgc16</code> generator from the given 16-bit \xe2\x80\xa6DeReturns a seeded <code>XorShift16</code> generator from the given \xe2\x80\xa6DhReturns a seeded <code>Xyza8a</code> generator from the given 32-bit \xe2\x80\xa60DeReturns a seeded <code>XorShift32</code> generator from the given \xe2\x80\xa6DeReturns a seeded <code>XorShift64</code> generator from the given \xe2\x80\xa6DfReturns a seeded <code>Xyza8a</code> generator from the given 2 \xc3\x97 \xe2\x80\xa60DjReturns a seeded <code>XorShift32</code> generator from the given 2 \xc3\x97 \xe2\x80\xa6DjReturns a seeded <code>XorShift64</code> generator from the given 2 \xc3\x97 \xe2\x80\xa6DiReturns a seeded <code>XorShift128+</code> generator from the given 2 \xe2\x80\xa6DkReturns a seeded <code>Xoroshiro128pp</code> generator from the given 2 \xe2\x80\xa6DkReturns a seeded <code>XorShift128</code> generator from the given 2 \xc3\x97 \xe2\x80\xa6DjReturns a seeded <code>XorShift64</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DiReturns a seeded <code>XorShift128+</code> generator from the given 4 \xe2\x80\xa6DkReturns a seeded <code>Xoroshiro128pp</code> generator from the given 4 \xe2\x80\xa6DkReturns a seeded <code>XorShift128</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DiReturns a seeded <code>XorShift128+</code> generator from the given 8 \xe2\x80\xa6DkReturns a seeded <code>Xoroshiro128pp</code> generator from the given 8 \xe2\x80\xa6DkReturns a seeded <code>XorShift128</code> generator from the given 8 \xc3\x97 \xe2\x80\xa6DkReturns a new <code>Array</code> allocated in the stack, from the given \xe2\x80\xa6EeGenerates some unique <code>ExampleIdSeqUsize</code> ID with <code>Relaxed</code> \xe2\x80\xa6CfCreates a normalized full positive angle at 0 degrees.00AhCreate a new jump entry.BdReturns self with all bits set to 1.00CiCreates a dynamic image backed by a buffer of RGB pixels.ChCreates a new exception type with the given name and \xe2\x80\xa6DfCreates a Python <code>UnicodeDecodeError</code> from a Rust UTF-8 \xe2\x80\xa6EhCreates a new Python <code>bytearray</code> object with an <code>init</code> closure \xe2\x80\xa6EgCreates a new Python <code>bytes</code> object with an <code>init</code> closure to \xe2\x80\xa6CoConstructs a new Weak Reference (<code>weakref.proxy</code>/\xe2\x80\xa6CmConstructs a new Weak Reference (<code>weakref.ref</code>/\xe2\x80\xa6DiCreates a new <code>OnceCell</code> that contains the provided value, \xe2\x80\xa6DkCreates a new <code>SetOnce</code> that contains the provided value, if \xe2\x80\xa6CgGenerates the next random value split into 4 u8 values.DkThis returns <code>Ok(Some(key))</code> for the next key in the map, or \xe2\x80\xa6BhReturns the next <code>nth</code> month.BjReturns the next <code>nth</code> weekday.CcAdvances to the next random <code>u16</code> value.BiReturns the next random <code>u16</code>.DgReturns the next random <code>u32</code>, from the first 32-bits of \xe2\x80\xa6EdReturns the next 2 \xc3\x97 random <code>u16</code> combined as a single <code>u32</code>.CaGenerates the next random <code>u32</code> value.BiReturns the next random <code>u32</code>.EcReturns the next 4 \xc3\x97 random <code>u8</code> combined as a single <code>u32</code>.00431140BhReturn the next random <code>u32</code>.BiReturns the next random <code>u64</code>.0EdReturns the next 4 \xc3\x97 random <code>u16</code> combined as a single <code>u64</code>.1CbReturns the next u64, advancing the state 2 times.EcReturns the next 8 \xc3\x97 random <code>u8</code> combined as a single <code>u64</code>.00332EdReturns the next 2 \xc3\x97 random <code>u32</code> combined as a single <code>u64</code>.441BhReturn the next random <code>u64</code>.CgReturns the number of hard links pointing to this file.AkDisable Nagle\xe2\x80\x99s algorithm0BlDisables running and inheriting spawn hooks.CkReturns the duration of the timeout if the timeout must \xe2\x80\xa6AhWait for a notification.DbReturns the <code>n</code>th element from the end of the iterator.000000000000000000000BcCreates a null mutable raw pointer.0000BmRetrieve the number of axes for this joystickEdReturns the number of columns, equivalent to <code>cap_row</code> == <code>C</code>.CnReturns <code>Self</code> if given a valid <code>value</code>.00BnRetrieve the number of balls for this joystickCcReturns the inner <code>self</code> representation.0EaReturns the number of rows, equivalent to <code>cap_col</code> == <code>R</code>.CmGets whether an error is present in the Python interpreter\xe2\x80\xa6C`Sets the background color to <code>Black</code>.C`Sets the background color to <code>Green</code>.C`Sets the background color to <code>White</code>.CkOpens a URL/URI in the default system-provided application.AnPrints to the standard output.0BlDrops the top stack element in compile-time.BjDuplicates the top stack pair of elements.BfDrops the pair of next stack elements.C`Duplicates the next of stack element to the top.BlPeeks the top stack element in compile-time.D`Pushes a new <code>element</code> to the top of the stack in \xe2\x80\xa6CiRotates the top six stack elements, clockwise, two times.CaSwaps the top two stack elements in compile-time.CgDuplicates the top element before the next of stack \xe2\x80\xa6CdConverts <code>self</code> into a parallel iterator.0AlSorts the slice in parallel.0D`Apply <code>std::str::FromStr</code> to the output of the parser0DdQuery the current setting of socket option <code>SO_PASSCRED</code>.A`Set the passwordAmThe password of the proxy uriAiMakes the sound pausable.0CkReturns a mutable reference to the greatest item in the \xe2\x80\xa6BdMutably peeks the top stack element.CgReturns a mutable reference to the last item in the \xe2\x80\xa6CkReturns a mutable reference to the next() value without \xe2\x80\xa6CjWorks exactly like the <code>peek_mut</code> method in \xe2\x80\xa6CmPeeks the <code>nth</code> element from the top of the stack.DkA drop-in replacement for <code>std::iter::Peekable</code> which adds a \xe2\x80\xa6DkReturns a reference to the <code>nth</code> value without advancing the \xe2\x80\xa6EeCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> \xe2\x80\xa6000000000000000000000EcConvert an <code>Arc</code> to the wrapper type into an <code>Arc</code> to the \xe2\x80\xa60CmConvert a box to the wrapper type into a box to the inner \xe2\x80\xa60CjConvert a mutable reference to the wrapper type into a \xe2\x80\xa6ClConvert a reference to the wrapper type into a reference \xe2\x80\xa6CmConvert a vec of the wrapper type into a vec of the inner \xe2\x80\xa60CaTimeout for call-by-call when following redirectsAe&lt; Periodic effect.BlThe key representing the hardware scan code.Cd\xf0\x9f\x9b\xa1\xef\xb8\x8f The key representing the hardware scan code.10Cn&lt; array of supported pixel formats, or NULL if unknown, \xe2\x80\xa6AlReturns package type on AMD.Cnsize of the corresponding packet containing the compressed \xe2\x80\xa6CkPlatform-specific hints (e.g., context creation, driver \xe2\x80\xa60A`Platform support1AbPlayback duration.CnTraits and functions used to implement parallel iteration. \xe2\x80\xa6Bc<code>pollster</code> modificationsBfPoly1305 as specified in the RFC 8439.DeOne-shot function for generating a Poly1305 tag of <code>data</code>.AfPops the back element.CkRemoves the last element from a list and returns it, or \xe2\x80\xa6CnRemoves the last element from the deque and returns it, or \xe2\x80\xa6ClRemoves the last element from the cursor\xe2\x80\x99s parent list \xe2\x80\xa6ClRemoves and returns the last element in the map. The key \xe2\x80\xa6ClRemoves the last element from the set and returns it, if \xe2\x80\xa6ClGet the port of this <code>Uri</code> as a <code>u16</code>.DbGet the port of this <code>Authority</code> as a <code>u16</code>.BlReturns the current position of this cursor.BhReturns the number of bytes read so far.CiSearches for an element in an iterator, returning its \xe2\x80\xa60000000CiPosition index of the component within the resolution \xe2\x80\xa6111111111111110BfThe position of the interior nul byte.000BjReturns the cursor position (column, row).Ckposition of the top left corner in 1/16 pel for up to 3 \xe2\x80\xa6BiChanges position of the source of effect.AmThe position of the listener.CjReturns the current playback position of the sound (in \xe2\x80\xa60Ca&lt; Vertex position, in SDL_Renderer coordinatesAmGet the position of a window.AiSets the window position.DkThe position of the <code>Table</code> within the <code>DocumentMut</code>.99ChReturns the positive version of the angle (no-op for \xe2\x80\xa6BjReturns the positive version of the angle.0ClReturn an iterator that iterates through the powerset of \xe2\x80\xa6000C`Raises an <code>f128</code> to an integer power.00DcSchedules a closure to be run just before the <code>exec</code> \xe2\x80\xa600AoWhitespace after before elementClSequence two parsers, only returning the output from the \xe2\x80\xa6D`&lt; The amount scrolled horizontally, positive to the right \xe2\x80\xa6Co&lt; The amount scrolled vertically, positive away from the \xe2\x80\xa6ClThe pressure applied to the pointer (0.0 to 1.0 for most \xe2\x80\xa6CeThe pressure applied (0.0 to 1.0), applicable for \xe2\x80\xa610Bb&lt; Normalized in the range 0\xe2\x80\xa610AmNormalized in the range 0\xe2\x80\xa6100AkReturns the previous month.AmReturns the previous weekday.ChReturns the previous weekday, wrapping around at the \xe2\x80\xa6CnCounts the number of primes upto and including <code>n</code>.0CiIterate over the entire iterator and multiply all the \xe2\x80\xa6000D`&lt; array of recognized profiles, or NULL if unknown, array \xe2\x80\xa6CiIf non-NULL, an array of profiles recognized for this \xe2\x80\xa6AhThe configured protocol.DcOne-shot API for HPKE Psk mode <code>Self::open()</code> operation.DcOne-shot API for HPKE Psk mode <code>Self::seal()</code> operation.CbMasks out bits of the pointer according to a mask.00CmAppends an element to the back of a collection, returning \xe2\x80\xa6DjPushes the contents of a <code>string</code> slice as an item onto the \xe2\x80\xa6DfAppends a given string slice onto the end of this <code>String</code>.ClAppends to the end the fitting characters from the given \xe2\x80\xa601CgCreate an iterator where you can put back a single itemCePut back a single value to the front of the iterator.BmPuts <code>x</code> in front of the iterator.CjReturn a proxy object that delegates method calls to a \xe2\x80\xa60CkContains types for working with Python objects that own \xe2\x80\xa6CcGets the qualified name of the <code>PyType</code>.DeGets the qualified name of the <code>PyType</code>. Equivalent to \xe2\x80\xa60DfGets the value of the <code>TCP_QUICKACK</code> option on this socket.Bc<code>quickdiv</code> modificationsCjReturns a subslice up to the given <code>end</code> index.0CfConverts a string slice to <code>*const c_char</code>.BnRead all metadata and return it if successful.CcReads and returns a single bit or returns an error.0CkPull some bytes from this source into the specified buffer.0000CkReads up-to the number of bytes required to fill buf or \xe2\x80\xa6ChPulls some bytes from this source into the specified \xe2\x80\xa6ChReturns an iterator over the entries within a directory.00CmReads four bytes from the stream and interprets them as a \xe2\x80\xa6CkReads an 32-bit floating point type in big-endian order \xe2\x80\xa61CkReads an 64-bit floating point type in big-endian order \xe2\x80\xa6CmReads two bytes from the stream and interprets them as an \xe2\x80\xa6CnReads a signed 16-bit integer in big-endian order from the \xe2\x80\xa6ClReads three bytes from the stream and interprets them as \xe2\x80\xa6CnReads four bytes from the stream and interprets them as an \xe2\x80\xa6CnReads a signed 32-bit integer in big-endian order from the \xe2\x80\xa6ClReads eight bytes from the stream and interprets them as \xe2\x80\xa6CkReads an signed 64-bit integer in big-endian order from theDkReads a JS string into a Rust <code>&amp;str</code> backed by the given \xe2\x80\xa67CmReads an unsigned 16-bit integer in big-endian order from \xe2\x80\xa665CmReads an unsigned 32-bit integer in big-endian order from \xe2\x80\xa64CmReads an unsigned 64-bit integer in big-endian order from \xe2\x80\xa6DfReturns <code>true</code> if these permissions describe a readonly \xe2\x80\xa6C`Gets whether the underlying buffer is read-only.CfReborrows this cursor by cloning it with a smaller \xe2\x80\xa6CgReturns the number of received bytes since the last \xe2\x80\xa6Do<strong>Gets</strong> the attribute: the minimum number of bits for the red \xe2\x80\xa6A`&lt; Read-mostlyDkRegister a pyclass as a subclass of <code>collections.abc.Mapping</code>\xe2\x80\xa6BgRegister a pyclass as a subclass of \xe2\x80\xa6CiReturns which register this specific extended subleaf \xe2\x80\xa6BjRegister a single <code>Descriptor</code>.ChRegister a single codec. If the codec was previously \xe2\x80\xa6CfSet the relative datetime to use when rounding a span.CjCreates a new iterator that repeats a single element a \xe2\x80\xa600EdCreate an iterator that produces <code>n</code> repetitions of <code>element</code>.1DgCreates a parallel iterator that produces <code>n</code> repeats of \xe2\x80\xa62DfReplaces at most <code>limit</code> non-overlapping matches in the \xe2\x80\xa6CfAttribute macro applied to a function to give it a \xe2\x80\xa60CkInternal structure members. The fields below this limit \xe2\x80\xa6oName resolvers.BnThe resolver configured on <code>Agent</code>.AdHTTP response types.BiReturn the length of the remaining input.AdSVM revision number.ClGet the code revision of SDL that is linked against your \xe2\x80\xa6BaReturn right value or given valueCiRotates all the destaqued elements one place to the left.BgRotate this image 90 degrees clockwise.BeRotate an image 90 degrees clockwise.AbSurface RotozoomerCgRotates and zooms a surface and optional anti-aliasing.CkTurns a round operator token to the correct constant value.DgReturns the nearest integer to an <code>f16</code>. Rounds half-way \xe2\x80\xa600DgReturns the nearest integer to an <code>f32</code>. Rounds half-way \xe2\x80\xa600DgReturns the nearest integer to an <code>f64</code>. Rounds half-way \xe2\x80\xa600ChReturns an iterator over the mutable rows of this image.CnReturns for how much time the process has been running (in \xe2\x80\xa6EdAsserts the <code>state</code> matches the <code>predicate</code>, otherwise panics.EcUnwraps the contained <code>Ok(state)</code> or panics with a <code>message</code>.DkUnwraps the contained <code>Some(state)</code> or panics with the given \xe2\x80\xa6FnMaps a <code>Result&lt;S&gt;</code> to a <code>Result&lt;T&gt;</code> by applying the <code>op</code> functionCiUnwraps the contained <code>Some(state)</code> or panics.CgUnwraps the contained <code>Ok(state)</code> or panics.Ck&lt; SDL physical key code - see ::SDL_Scancode for detailsCbReturns the scope ID associated with this address.DmReturns the time code as <code>HH:MM:SS:MIL</code> or <code>MM:SS:MIL</code>.BkForce seeking to any (also non key) frames.CnA combination of AVIO_SEEKABLE_ flags or 0 when the stream \xe2\x80\xa6CgReturns the eight 16-bit segments that make up this \xe2\x80\xa6BmThe key representing the human-readable code.Ce\xf0\x9f\x9b\xa1\xef\xb8\x8f The key representing the human-readable code.10CnSends a NULL packet to the encoder to signal end of stream \xe2\x80\xa6CnSends a NULL packet to the decoder to signal end of stream \xe2\x80\xa6CgSets the element at the given 2D coordinates in the \xe2\x80\xa6BlSets or resets the current global font data.EfAssign to each reference in <code>self</code> from the <code>from</code> iterator, \xe2\x80\xa6000DjChanges gain of the effect. <code>gain</code> will be clamped to [0.0, \xe2\x80\xa6CeSets the volume adjustment for frequencies in the \xe2\x80\xa6AmModifies the distortion gain.CkWhen input is grabbed, the mouse is confined to the window.CkRegisters a custom panic hook, replacing the previously \xe2\x80\xa60BfSet the hour on this broken down time.BoUse this function to set the icon for a window.DaAsserts that the first <code>n</code> bytes of the buffer are \xe2\x80\xa6DjAsserts that the first <code>n</code> unfilled bytes of the cursor are \xe2\x80\xa6BeSets the item at the specified index.AmSets a collection item value.AcSets an item value.2C`Sets the item in self with key <code>key</code>.DiAssigns object <code>item</code> to the <code>i</code>th element of self.32410BcSets the kind of distortion to use.CaSets the shape of the frequency adjustment curve.EaSet the <code>kind</code> field of the <code>PyASCIIObject</code> state bitfield.DdSets the args into an <code>m128</code>, first arg is the high lane.0CiSet <code>f32</code> args into an <code>m256</code> lane.0CfSet the id of the socket for network filtering purpose0DoA copy of <code>self</code> setting the bits that are set in <code>mask</code>.00CaSets the frequencies that the filter will remove.AnSets the mode permission bits.0Ca(name) Sets the current window <code>name</code>.CgChanges the port number associated with this socket \xe2\x80\xa600CgSets the element at the given 2D coordinates in the \xe2\x80\xa6ChSets the volume of this track\xe2\x80\x99s route to a send track.0BdSet the application\xe2\x80\x99s window size.BiSet the size of a window\xe2\x80\x99s client area.BfSet the year on this broken down time.CbGets the settings currently being used for layout.AgSettings for the sound.BaSettings for the streaming sound.BjSHA3-224 as specified in the FIPS PUB 202.BjSHA3-256 as specified in the FIPS PUB 202.BjSHA3-384 as specified in the FIPS PUB 202.BjSHA3-512 as specified in the FIPS PUB 202.BoSHAKE-128 XOF as specified in the FIPS PUB 202.BoSHAKE-256 XOF as specified in the FIPS PUB 202.CfShuts down the read, write, or both halves of this \xe2\x80\xa6CmShuts down the output stream, ensuring that the value can \xe2\x80\xa6CjAborts all tasks and waits for them to finish shutting \xe2\x80\xa6CeShut down the read, write, or both halves of this \xe2\x80\xa63BbAdds two simd vectors elementwise.00Ao\xe2\x80\x9cAnd\xe2\x80\x9cs vectors elementwise.00CiDivides <code>lhs</code> by <code>rhs</code> elementwise.00DeComputes <code>(x*y) + z</code> for each element, but without any \xe2\x80\xa600CiReturns the element-wise maximum with <code>other</code>.BdReturns the maximum of each element.1010101010CiReturns the element-wise minimum with <code>other</code>.BdReturns the minimum of each element.1010101010BhMultiplies two simd vectors elementwise.00AmNegates a vector elementwise.00BmReturns remainder of two vectors elementwise.00CdShifts vector left elementwise, with UB on overflow.00CeShifts vector right elementwise, with UB on overflow.00CmSubtracts <code>rhs</code> from <code>lhs</code> elementwise.00Bh\xe2\x80\x9cExclusive ors\xe2\x80\x9d vectors elementwise.00EdCreates an iterator that skips <code>n</code> elements from <em>anywhere</em> in \xe2\x80\xa60CnSkips to the next <code>Source</code> in the <code>Sink</code>CgNumber of macroblock rows at the top which are skipped.CfSuspends execution of calling thread for the given \xe2\x80\xa6CePuts the current thread to sleep for at least the \xe2\x80\xa600AhUses <code>sleep</code>.111111ClSet the smallest units allowed in the duration returned. \xe2\x80\xa6CnSet the smallest units allowed in the span returned. These \xe2\x80\xa6CdSet the smallest units allowed in the span returned.ClSet the smallest units allowed in the timestamp returned \xe2\x80\xa61ChSet the smallest units allowed in the zoned datetime \xe2\x80\xa622CkSet the smallest units allowed in the datetime returned \xe2\x80\xa63CmSet the smallest units allowed in the time returned after \xe2\x80\xa6CjSet the smallest units allowed in the offset returned. \xe2\x80\xa6CiSet the renderer to a software fallback. This flag is \xe2\x80\xa6CmSpawn the provided task on the provided runtime and store \xe2\x80\xa6DkSplit into two producers; one produces items <code>0..index</code>, the \xe2\x80\xa6CjDivide the consumer into two consumers, one processing \xe2\x80\xa6BoReturns the square root of an <code>f128</code>00AoLast access time (nanoseconds).0CnReturns the last access time of the file, in seconds since \xe2\x80\xa6AhLast status change time.0CgReturns the last status change time of the file, in \xe2\x80\xa6AgLast modification time.0CnReturns the last modification time of the file, in seconds \xe2\x80\xa6A`Hard link count.0BiReturns the number of hard links to file.CmThe starting timestamp in number of frames from the start \xe2\x80\xa60BaThe timestamp of the first frame.Cmpass2 encoding statistics input buffer Concatenated stuff \xe2\x80\xa6DbFormats this timestamp according to the given <code>format</code>.DgFormats this zoned datetime according to the given <code>format</code>.DcFormats this civil date according to the given <code>format</code>.DgFormats this civil datetime according to the given <code>format</code>.DcFormats this civil time according to the given <code>format</code>.DkParses a timestamp (expressed as broken down time) in <code>input</code>\xe2\x80\xa6EeParses a zoned datetime in <code>input</code> matching the given <code>format</code>.EaParses a civil date in <code>input</code> matching the given <code>format</code>.EeParses a civil datetime in <code>input</code> matching the given <code>format</code>.EaParses a civil time in <code>input</code> matching the given <code>format</code>.CjFilter using <code>SubByte</code>: D = saturation0(S - C).AlLanewise <code>a - b</code>.0ChLanewise <code>a - b</code> with <code>f32</code> lanes.0DiFilter using <code>SubUint</code>: D = saturation0(S[i] - Cs[i % 4]), \xe2\x80\xa6C`Transforms itself into a tuple, in compile-time.CfFree the given SwrContext and set the pointer to NULL.CkInitialize context after user parameters have been set. \xe2\x80\xa6CnAttempts to sync all OS-internal file content and metadata \xe2\x80\xa6AhPerforms a dup2 syscall.AiPerforms an exit syscall.AiPerforms an open syscall.AhPerforms a pipe syscall.AhPerforms a read syscall.AhPerforms a stat syscall.DmSearches for the last occurrence of <code>needle</code> in <code>self</code>.CiReturns an exclusive reference to the tail of this tuple.0EbCreates an iterator that yields <code>n</code> elements from <em>anywhere</em> \xe2\x80\xa60BjReturns the path of a temporary directory.0CkA hybrid format derived from RFC 3339, RFC 9557 and ISO \xe2\x80\xa6BcA module to work with the terminal.A`Default value: 00Cm(timeEnd) Stops a timer with the given name, started with \xe2\x80\xa6Cl(timeLog) Logs a timer with the given name, started with \xe2\x80\xa6AhAll configured timeouts.ChEquivalent to <code>zoneinfo.ZoneInfo</code> constructorBmTransmutes the <code>m128</code> to an array.BnTransmutes the <code>m128d</code> to an array.BmTransmutes the <code>m256</code> to an array.BnTransmutes the <code>m256d</code> to an array.EfReturns some <code>LEN</code> destaqued elements as an array, or <code>None</code> \xe2\x80\xa6EgReturns some <code>LEN</code> stacked elements as an array, or <code>None</code> if \xe2\x80\xa6CdConverts to <code>[u8; N]</code> (must have N == 1).ChConverts to <code>[u8; N]</code> (must have N == len()).00CnConcatenates into <code>[u8; N]</code> (must have N == len()).CdConverts to <code>[u8; N]</code> (must have N == L).1DfCopies all elements from <code>src</code> into a new fixed-size array.BjConverts a SIMD mask to an array of bools.BcConverts a SIMD vector to an array.BmTransmutes the <code>m512</code> to an array.BnTransmutes the <code>m512d</code> to an array.BnTransmutes the <code>m512i</code> to an array.ClReturns the ASCII byte representation of the 8-bit color \xe2\x80\xa60BgConverts this C string to a byte slice.CbConvert this PublicKey to its byte-representation.CgConverts this <code>char7</code> to <code>char8</code>.CbConverts the scalar to a digit in the given radix.0000CdConvert this subimage to an <code>ImageBuffer</code>CeConverts <code>(row, col)</code> into a linear index.00000000000D`Converts <code>self</code> to the equivalent <code>Level</code>.BmReturns a copy of this image as a Luma image.CjCreates owned data from borrowed data, usually by cloning.00E`Creates a new owned <code>Bound&lt;T&gt;</code> from this borrowed reference \xe2\x80\xa61111111DeCreate from <code>Rgb&lt;u16&gt;</code> by scaling each component \xe2\x80\xa6BgConvert to <code>Rgb&lt;u16&gt;</code>.10BmReturns a copy of this image as an RGB image.BgConvert to <code>Rgba&lt;u8&gt;</code>.0BnReturns a copy of this image as an RGBA image.DeReturns a copy of both bounds as a tuple <code>(lower, upper)</code>.AcConvert to a tuple.0000000BjReturns a (9) tuple with all the elements.CkReturn a new tuple containing the contents of the list; \xe2\x80\xa60BlReturns a fresh tuple based on the Sequence.10Afconverts self to usizeDjCreates a <code>Zoned</code> value by attaching the given time zone to \xe2\x80\xa6CeExtracts a zoned datetime from this broken down time.DhConverts a civil datetime to a <code>Zoned</code> datetime by adding \xe2\x80\xa60DdConverts a civil datetime to a <code>Zoned</code> in this time zone.CfReturns the zoned datetime with a date immediately \xe2\x80\xa6C`Returns the date immediately following this one.CjReturns the datetime with a date immediately following \xe2\x80\xa6CiReturns the ISO 8601 date immediately following this one.BnReturns the top-left corner of this rectangle.0An&lt; The index of the touchpadAiThe index of the touchpad00CiThe track identifier of the track this packet belongs to.BcThe track the seek was relative to.0DgIf <code>Some</code>, specifies which track\xe2\x80\x99s timestamp should be \xe2\x80\xa6CeSpecifies which track <code>ts</code> is relative to.10AmWhitespace after last element00CgGain access to the inner value by giving proof that \xe2\x80\xa6ChGet the number of frames to trim from the end of the \xe2\x80\xa6CjWhen gapless support is enabled, this is the number of \xe2\x80\xa60CkTruncate the <code>OsString</code> to the specified length.BlResize the string (discarding trailing data)DgShortens the deque, keeping the first <code>len</code> elements and \xe2\x80\xa6DhShortens the vector, keeping the first <code>len</code> elements and \xe2\x80\xa6CjShortens this <code>String</code> to the specified length.BoSets the option for truncating a previous file.221CnTruncates the buffer to the number of frames specified. If \xe2\x80\xa6A`Shorten the vec.C`Returns the integer part of an <code>f16</code>.00C`Returns the integer part of an <code>f32</code>.00C`Returns the integer part of an <code>f64</code>.00BoTry to cast <code>A</code> into <code>B</code>.0CiSet the number of days on this span. The value may be \xe2\x80\xa6ClApplies function to the elements of iterator and returns \xe2\x80\xa6000000000000000000000ClAn iterator method that applies a function as long as it \xe2\x80\xa6000000000000000000000BbPerforms a fallible parallel fold.0DhAkin to <code>Repeat::fold</code>, but for containers that can error \xe2\x80\xa6AhPerforms the conversion.EhAttempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.EfAttempts to convert a <code>Vec&lt;T&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.CmAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u64&gt;.CmAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;i32&gt;.D`Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i128&gt;.ClAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;u8&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i64&gt;.CmAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;u16&gt;.CmAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;u32&gt;.CoAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;usize&gt;.CmAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u8&gt;.CkAttempts to convert <code>u32</code> to NonZero&lt;u32&gt;.CkAttempts to convert <code>u64</code> to NonZero&lt;u64&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u16&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u32&gt;.CkAttempts to convert NonZero&lt;u8&gt; to NonZero&lt;i8&gt;.CmAttempts to convert <code>u128</code> to NonZero&lt;u128&gt;.CoAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;usize&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i32&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u64&gt;.ClAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;i8&gt;.CoAttempts to convert <code>usize</code> to NonZero&lt;usize&gt;.D`Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;usize&gt;.CiAttempts to convert <code>u8</code> to NonZero&lt;u8&gt;.CmAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;i16&gt;.CoAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;isize&gt;.ClAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;i8&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i16&gt;.CiAttempts to convert <code>i8</code> to NonZero&lt;i8&gt;.CnAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u8&gt;.CnAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i8&gt;.CmAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;i16&gt;.CmAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;i32&gt;.CoAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;isize&gt;.D`Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;isize&gt;.ClAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i8&gt;.CmAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i16&gt;.CmAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i32&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u16&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i64&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i32&gt;.CmAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i64&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u32&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u64&gt;.CoAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;isize&gt;.D`Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u128&gt;.CmAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i8&gt;.CmAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;u16&gt;.ClAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;i8&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i16&gt;.ClAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;u8&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i32&gt;.ClAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;i8&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i64&gt;.DaAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;usize&gt;.D`Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u128&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u64&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u32&gt;.CoAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i128&gt;.D`Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;isize&gt;.CmAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;i16&gt;.CnAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i8&gt;.ClAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;i8&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i16&gt;.CnAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u8&gt;.D`Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;usize&gt;.CkAttempts to convert <code>i16</code> to NonZero&lt;i16&gt;.CoAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u128&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u64&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u32&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u16&gt;.CoAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;isize&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i32&gt;.CmAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u8&gt;.CoAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;usize&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i64&gt;.D`Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i128&gt;.CmAttempts to convert <code>i128</code> to NonZero&lt;i128&gt;.CkAttempts to convert <code>i32</code> to NonZero&lt;i32&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i16&gt;.CnAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u128&gt;.DaAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;isize&gt;.CmAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u64&gt;.CmAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u32&gt;.CmAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u16&gt;.ClAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;u8&gt;.ClAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u8&gt;.CkAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u8&gt;.CoAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;usize&gt;.CnAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u128&gt;.CoAttempts to convert <code>isize</code> to NonZero&lt;isize&gt;.ClAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u16&gt;.CkAttempts to convert <code>i64</code> to NonZero&lt;i64&gt;.ClAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u32&gt;.ClAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u64&gt;.CmAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;i16&gt;.CmAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u64&gt;.CmAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u32&gt;.CmAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u128&gt;.CnAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;usize&gt;.CmAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u16&gt;.ClAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u8&gt;.CoAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;usize&gt;.ClAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u8&gt;.CmAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i8&gt;.CnAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u128&gt;.CoAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;isize&gt;.CmAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u16&gt;.CkAttempts to convert <code>u16</code> to NonZero&lt;u16&gt;.CmAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u32&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u16&gt;.ElConverts the given <code>Vec&lt;u8&gt;</code> into a  <code>String</code> if it contains \xe2\x80\xa6EcConverts a <code>CString</code> into a <code>String</code> if it contains valid \xe2\x80\xa6DhTries to create a new <code>StringNonul</code> from the given string \xe2\x80\xa6DjTries to create a new <code>StringNonul</code> from the given slice of \xe2\x80\xa6DfTries to create a new <code>StringU8</code> from the given slice of\xe2\x80\xa6EeTries to create a new <code>StringU8</code> from the given <code>string</code> slice.hFeatures00000000000AhPerforms the conversion.000EhAttempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.111DkTry to create a <code>Color</code> from the string representation. This \xe2\x80\xa6DkCreates a new Python <code>memoryview</code> object from another Python \xe2\x80\xa6DjCreates a new Python <code>bytearray</code> object from another Python \xe2\x80\xa6CdAttempts to parse a string into a regular expression055555555555555CnReturns an iterator that will attempt to yield all pending \xe2\x80\xa6CkA non-blocking iterator over the values received on the \xe2\x80\xa6CnTakes an object and returns an iterator for it. Returns an \xe2\x80\xa6002BmTry to acquire an exclusive lock on the file.AnAttempts to acquire this lock.BnAttempts to acquire the lock without blocking.DjAttempts to acquire the lock, and returns <code>TryLockError</code> if \xe2\x80\xa62CfTries to append to the end of the string the given \xe2\x80\xa60DeAttempts to acquire this <code>RwLock</code> with shared read access.00CgAttempts to return a pending value on this receiver \xe2\x80\xa6CgAttempt to fetch an incoming value from the channel \xe2\x80\xa6CbTries to receive the next value for this receiver.02AlAttempts to receive a value.CjAttempts to receive a message from the channel without \xe2\x80\xa6CkAttempts to seek to a given position in the current source.00CjThis jumps in memory till the sample for <code>pos</code>.BeOnly seeks within the current source.CfCan not support seek, in the end state we lose the \xe2\x80\xa63CaPos is seen from the perspective of the api user.CgWill only attempt a seek if both underlying sources \xe2\x80\xa6ChAttempts to seek to a specific position in the audio \xe2\x80\xa6CjAttempts to send a value on this channel without blocking.ClAttempt to send a value into the channel. If the channel \xe2\x80\xa6DbAttempts to immediately send a message on this <code>Sender</code>CgAttempts to send a message into the channel without \xe2\x80\xa6CnAttempts to collect the exit status of the child if it has \xe2\x80\xa600CbAcquires a reference to the value in this TLS key.CiAccesses the current task-local and runs the provided \xe2\x80\xa6BdColor interpretation of image pixelsCkReturns the number tag associated with the current variant.CfReturns a cursor over the unfilled part of the buffer.CmHints to the compiler that a branch condition is unlikely \xe2\x80\xa6ClHints to the compiler that branch condition is likely to \xe2\x80\xa610110Cn&lt; Userdata passed to callback (ignored for NULL callbacks).o&lt; Read-writeBj&lt; User data pointer passed to callbacksA`Set the usernameAmThe username of the proxy uriCgbase \xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 An upcasted pointer-sized unsigned \xe2\x80\xa60CjA SIMD vector with 16 elements of type <code>usize</code>.00000CjA SIMD vector with 32 elements of type <code>usize</code>.00000CjA SIMD vector with 64 elements of type <code>usize</code>.00000CmReturns the expected UTF-8 byte length based on the first \xe2\x80\xa6EdAsserts the <code>value</code> matches the <code>predicate</code>, otherwise panics.EcUnwraps the contained <code>Ok(value)</code> or panics with a <code>message</code>.DkUnwraps the contained <code>Some(value)</code> or panics with the given \xe2\x80\xa6FnMaps a <code>Result&lt;V&gt;</code> to a <code>Result&lt;W&gt;</code> by applying the <code>op</code> functionCgUnwraps the contained <code>Ok(value)</code> or panics.CiUnwraps the contained <code>Some(value)</code> or panics.DhValidates that inactive <code>()</code> variants only appear at the end,DnWhen <code>false</code>, <code>TransmuteFrom</code> is not implemented for \xe2\x80\xa600DkConstruct a variance marker; equivalent to <code>Default::default</code>\xe2\x80\xa600nVendored work.BaReturns the current viewport sizeBmGets the drawing area for the current target.BfThe input contains an <code>i8</code>.BeThe input contains a <code>u8</code>.C`Transforms itself into a tuple, in compile-time.ChWaits for a value that satisfies the provided condition.AmSets the oscillation pattern.AhThe oscillation pattern.Aj&lt; The associated windowBk&lt; The window with keyboard focus, if any000Bh&lt; The window with mouse focus, if any00Bm&lt; The window underneath the finger, if anyBk&lt; The window that was dropped on, if anyBa&lt; The associated window if anyBmSets the value of the \xe2\x80\x9ccmd\xe2\x80\x9d refresh kind.DbSets the value of the \xe2\x80\x9ccpu\xe2\x80\x9d refresh kind to <code>true</code>.DgSets the value of the \xe2\x80\x9ccpu\xe2\x80\x9d refresh kind to <code>Some(...)</code>.BmSets the value of the \xe2\x80\x9ccwd\xe2\x80\x9d refresh kind.BmSets the value of the \xe2\x80\x9cexe\xe2\x80\x9d refresh kind.AbSee Python::attachChToggle LUT usage while keeping everything else the same.CfToggle padding while keeping everything else the same.DbSets the value of the \xe2\x80\x9cram\xe2\x80\x9d refresh kind to <code>true</code>.EaConvert an <code>Arc</code> to the inner type into an <code>Arc</code> to the \xe2\x80\xa60CmConvert a box to the inner type into a box to the wrapper \xe2\x80\xa60ChConvert a mutable reference to the inner type into a \xe2\x80\xa6CmConvert a reference to the inner type into a reference to \xe2\x80\xa6CmConvert a vec of the inner type into a vec of the wrapper \xe2\x80\xa60CfWrites a number of bytes starting from a given offset.0CaWrites a single <code>i8</code> into this hasher.00000CgWrites a signed 8-bit integer to the underlying writer.CfWrites the buffer to a writer in the specified format.CaEncode this image and write it to <code>w</code>.CaWrites a single <code>u8</code> into this hasher.00000CjWrites an unsigned 8-bit integer to the underlying writer.ElYields an <code>Ok</code> <code>value</code> and returns an awaitable <code>CoroWork</code>.EdZips <code>self</code> and another <code>Option</code> with function <code>f</code>.AbAdd seals to file.DdWith this, <code>TransmuteFrom</code> assumes only that you have \xe2\x80\xa6Ci@defgroup lavu_audio_channels Audio channels @ingroup \xe2\x80\xa6Af@ingroup lavc_decodingB`@defgroup lavc_hwaccel AVHWAccelCjPan Scan area. This specifies the area which should be \xe2\x80\xa6jAVProfile.CiNew fields can be added to the end with minor version \xe2\x80\xa6Dc<code>core</code> The addition assignment operator <code>+=</code>.0CaThe addition assignment operator <code>+=</code>.00CnA socket address could not be bound because the address is \xe2\x80\xa60000CmPossible alignments returned by <code>Formatter::align</code>DiA type storing a <code>usize</code> which is a power of two, and thus \xe2\x80\xa6110101DkAn implementation of <code>Allocator</code> can allocate, grow, shrink, \xe2\x80\xa600000CnThe audio is represented as the decomposition of the sound \xe2\x80\xa60fU+00260000CeAn iterator over <code>Path</code> and its ancestors.Db\xf0\x9f\x93\x90 The kind of <code>Angle</code>, based on its normalized turn.0CjAn ANSI color. See 256 colors - cheat sheet for more info.AnApplication specific metadata.0CmThis structure represents a safely precompiled version of \xe2\x80\xa60000ChCompile-time conversion from slice-like types to arrays.0D`An iterator type over <code>Array</code>\xe2\x80\x99s <code>Value</code>sEcOne of 128 Unicode characters (<code>U+0000</code> to <code>U+007F</code>), the \xe2\x80\xa60AlAsync version of Drop trait.00AjReads bytes from a source.AjSeek bytes asynchronously.Df\xe2\x9a\x9b\xef\xb8\x8f <code>portable-atomic</code> A thread-safe floating-point type.0ClA floating point type which can be safely shared between \xe2\x80\xa6110Cl\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A thread-safe signed integer type.0CkAn integer type which can be safely shared between threads.000110000110000Dk\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A raw pointer type which can be safely shared \xe2\x80\xa60CiA raw pointer type which can be safely shared between \xe2\x80\xa6000Cn\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A thread-safe unsigned integer type.03333003333003333AhRepresents an attribute.BlRepresents the authority component of a URI.CdRepresents <code>Axis</code> or <code>Button</code>.AkCode to unset blink effect.CgAn IPv4 address representing the broadcast address: \xe2\x80\xa6AoThe size of this type in bytes.00fU+0008nBackspace key.1011CfBackspace key (Delete on macOS, Backspace on other \xe2\x80\xa62Cf<code>std</code> A captured OS thread stack backtrace.0BeA captured OS thread stack backtrace.CiThe parser failed with a recoverable error (the default).Eh\xf0\x9f\xa5\xa1 <code>Base32Hex</code> uses RFC 4648 hex-encoding (<code>0-9 A-V</code> instead \xe2\x80\xa60AhToggles bass boost mode.0EaBlend mode for <code>Canvas</code>, <code>Texture</code> or <code>Surface</code>.CnThis applies an audio filter, it can be a high or low pass \xe2\x80\xa6Ce<code>core</code> A trait for mutably borrowing data.0BcA trait for mutably borrowing data.0000ChA <code>BufReader</code> reads bytes from a byte buffer.CoThe <code>BufReader</code> struct adds buffering to any reader.DhThe <code>BufReader&lt;R&gt;</code> struct adds buffering to any reader.EhWraps a type that is <code>AsyncWrite</code> and <code>AsyncRead</code>, and buffers \xe2\x80\xa6BfWraps a writer and buffers its output.0Bn\xf0\x9f\xa7\xba A simple, single-threaded bump allocator.0AoType size information in bytes.0CaA (user specified) output file cannot be created.BiCaps Lock was enabled for this key event.CdCode to set the background color to <code>bg</code>.CdCode to set the foreground color to <code>fg</code>.BgCode to move the cursor up by one line.CjDescribes any kind of cache (TLB, Data and Instruction \xe2\x80\xa6CiInfo about a what a given cache caches (instructions, \xe2\x80\xa6CkAn iterator over each chunk of allocated memory that an \xe2\x80\xa6CiAn iterator over a slice in (non-overlapping) mutable \xe2\x80\xa600CnParallel iterator over mutable non-overlapping chunks of a \xe2\x80\xa611BlDifferent ways to clear the terminal buffer.BoInformation about the current state of a clock.CkThe action should occur when a clock reaches a specific \xe2\x80\xa6BkAn instant in time associated with a clock.CcAlias of <strong>negative</strong> angle direction.Cn\xf0\x9f\xa5\xa1 Encodes and decodes an iterator as a sequence with an \xe2\x80\xa60DfA <code>CodecType</code> is a unique identifier used to identify a \xe2\x80\xa6CdExtension trait for iterators, in order to allow \xe2\x80\xa6Dk<code>ColorMode</code> indicates how the color of a pixel is encoded in \xe2\x80\xa6ChAn enumeration over supported color types and bit depthsCaOperators for the <code>__richcmp__</code> method0DoThe type of a single color component (e.g., <code>u8</code>, <code>f32</code>).0BlGetting a component temperature information.AmA single component of a path.CmGamepad has been connected. If gamepad\xe2\x80\x99s UUID doesn\xe2\x80\x99t \xe2\x80\xa60CiTrait for components providing some aspect of connecting.ClAllows to convert compile-time constants into type-level \xe2\x80\xa60Cj\xf0\x9f\x97\x83\xef\xb8\x8f An immutable, append-only, linear, functional, \xe2\x80\xa60Dc<code>core</code> The trait implemented by builtin coroutine types.0CaThe trait implemented by builtin coroutine types.00Di<code>Crc16Ansi</code> implements the CRC-16 algorithm using the ANSI \xe2\x80\xa6Di<code>Crc8Ccitt</code> implements the CRC-8 algorithm using the CCITT \xe2\x80\xa6Ec\xf0\x9f\xa5\xa1 The <code>Crockford</code> <code>Base32</code> encoding, case-insensitive, \xe2\x80\xa60CkMixes one sound fading out with another sound fading in \xe2\x80\xa6DhA marker trait over <code>RngCore</code> for securely unpredictable RNGsCnA cursor over a <code>BTreeMap</code> with editing operations.CnA cursor over a <code>BTreeSet</code> with editing operations.D`A cursor over a <code>LinkedList</code> with editing operations.210210BjCreate a directory if one doesn\xe2\x80\x99t exist.AmDirectory (S_IFDIR in POSIX).AaDark green color.Bm\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>array</em> data type.0Cj\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>double-ended queue</em> data type.0Cj\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>double-ended stack</em> data type.0Bm\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>queue</em> data type.0Bm\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>stack</em> data type.0CbCommon trait for enumerating <em>data values</em>.0Eb\xf0\x9f\x96\xb9 <code>core</code> A struct to help with [<code>Debug</code>] implementations.0CnA struct to help with <code>fmt::Debug</code> implementations.0000Cc\xf0\x9f\xa5\xa1 A type that can be decoded from an I/O reader.0CnPerma-unstable marker trait. Indicates that the type has a \xe2\x80\xa600CfConfiguration for <code>SpanPrinter::direction</code>.BgType containing read and written bytes.Dc<code>core</code> The division assignment operator <code>/=</code>.0CaThe division assignment operator <code>/=</code>.00BlWrap a value and run a closure when dropped.00AiMakes the text encircled.Cc\xf0\x9f\xa5\xa1 A type that can be encoded into an I/O writer.0fU+00030000Dk<code>Entry16x8</code> is a codebook entry for 16-bit values with codes \xe2\x80\xa6Dk<code>Entry32x8</code> is a codebook entry for 32-bit values with codes \xe2\x80\xa6Dj<code>Entry8x16</code> is a codebook entry for 8-bit values with codes \xe2\x80\xa6Dj<code>Entry8x32</code> is a codebook entry for 8-bit values with codes \xe2\x80\xa6CmAn iterator that yields the current count and the element \xe2\x80\xa600Dh<code>Enumerate</code> is an iterator that returns the current count \xe2\x80\xa61CbA list specifying general categories of I/O error.0CeA type that encapsulates SDL event-pumping functions.nGamepad event.0BfTypes of events that can be delivered.AnJavaScript exception occurred.0Eb<code>Exclusive</code> provides only <em>mutable</em> access, also referred to \xe2\x80\xa600DfExtension trait providing additional methods for <code>Future</code>s.0Ci\xf0\x9f\x8c\x90 Extension trait providing additional methods for \xe2\x80\xa60Ck\xe2\x9a\x96\xef\xb8\x8f Extension trait providing additional methods for \xe2\x80\xa600000Ci\xf0\x9d\x90\x93 Extension trait providing additional methods for \xe2\x80\xa6022DdThese are \xe2\x80\x9cextensions\xe2\x80\x9d to the standard <code>strftime</code> \xe2\x80\xa6CgAn iterator which uses a closure to determine if an \xe2\x80\xa6DdAn iterator produced by calling <code>extract_if</code> on BTreeMap.DdAn iterator produced by calling <code>extract_if</code> on BTreeSet.DfAn iterator produced by calling <code>extract_if</code> on LinkedList.DjA draining iterator over entries of a <code>HashMap</code> which don\xe2\x80\x99\xe2\x80\xa6DjA draining iterator over entries of a <code>HashSet</code> which don\xe2\x80\x99\xe2\x80\xa6DiA draining iterator over entries of a <code>HashTable</code> which don\xe2\x80\xa66ChA draining, filtering iterator over the entries of a \xe2\x80\xa6DhA draining, filtering iterator over the items of a <code>HashSet</code>.7658765Cc@defgroup lavc_fft FFT functions @ingroup lavc_miscBg403 Forbidden [RFC9110, Section 15.5.4]CmContains information from the client-facing side of proxy \xe2\x80\xa6Ch$ 1/\xcf\x80 = 2/\xcf\x84 $ (A049541) <code>\xe2\x89\x88 0.31830988\xe2\x80\xa6</code>00000d1/\xcf\x8000000000000Do$ 2/\xcf\x80 $ (A060294) <code>\xe2\x89\x88 0.63661977\xe2\x80\xa6</code> <em>Buffon\xe2\x80\x99s constant</em>.00000d2/\xcf\x8000000000000Dd$ \xcf\x80/2 = \xcf\x84/4 = 90\\degree $ (A019669) <code>\xe2\x89\x88 1.57079632\xe2\x80\xa6</code>00000d\xcf\x80/200000000000Dd$ \xcf\x80/3 = \xcf\x84/6 = 60\\degree $ (A019670) <code>\xe2\x89\x88 1.04719755\xe2\x80\xa6</code>00000d\xcf\x80/300000000000Dd$ \xcf\x80/4 = \xcf\x84/8 = 45\\degree $ (A003881) <code>\xe2\x89\x88 0.78539816\xe2\x80\xa6</code>00000d\xcf\x80/400000000000De$ \xcf\x80/6 = \xcf\x84/12 = 30\\degree $ (A019673) <code>\xe2\x89\x88 0.52359877\xe2\x80\xa6</code>00000d\xcf\x80/600000000000Dg$ \xcf\x80/8 = \xcf\x84/16 = 22.5\\degree $ (A019675) <code>\xe2\x89\x88 0.39269908\xe2\x80\xa6</code>00000d\xcf\x80/800000000000Dd<code>std</code> Representation of the various timestamps on a file.0CcRepresentation of the various timestamps on a file.DhAn iterator that uses <code>f</code> to both filter and map elements \xe2\x80\xa600Eg<code>FilterMap</code> creates an iterator that uses <code>filter_op</code> to both \xe2\x80\xa61AhLook for a slice in selfCeA reverse substring searcher using the Rabin-Karp \xe2\x80\xa6CfA reverse substring searcher that uses the Two-Way \xe2\x80\xa6CmA single substring reverse searcher fixed to a particular \xe2\x80\xa6DhAn iterator adaptor that flattens <code>Result::Ok</code> values and \xe2\x80\xa60Cc\xe2\x9a\x96\xef\xb8\x8f \xf0\x9f\x96\xb9 The type returned by formatter methods.0CgProvides the calling context to a closure called by \xe2\x80\xa6AgThe terminal lost focusDfAn enum used for controlling the execution of <code>fold_while</code>.AeA font-related error.AfThe styling of a font.EgA sign is always written, with <code>-</code> for negative spans and <code>+</code> \xe2\x80\xa6CnA scalar TOML <code>Value</code>\xe2\x80\x99s logical value and its \xe2\x80\xa6Cd\xf0\x9f\x96\xb9 <code>core</code> Configuration for formatting.0AmConfiguration for formatting.0000CnA trait to express the ability to construct an object from \xe2\x80\xa600AdGet seals from file.CjANSI gray background 10/23 8-bit color (44% white, 56% \xe2\x80\xa6CjANSI gray background 11/23 8-bit color (48% white, 52% \xe2\x80\xa6CjANSI gray background 12/23 8-bit color (52% white, 48% \xe2\x80\xa6CjANSI gray background 13/23 8-bit color (56% white, 44% \xe2\x80\xa6CjANSI gray background 14/23 8-bit color (60% white, 40% \xe2\x80\xa6CjANSI gray background 15/23 8-bit color (64% white, 36% \xe2\x80\xa6CjANSI gray background 16/23 8-bit color (68% white, 32% \xe2\x80\xa6CjANSI gray background 17/23 8-bit color (72% white, 28% \xe2\x80\xa6CjANSI gray background 18/23 8-bit color (76% white, 24% \xe2\x80\xa6CjANSI gray background 19/23 8-bit color (80% white, 20% \xe2\x80\xa6CjANSI gray background 20/23 8-bit color (84% white, 16% \xe2\x80\xa6CjANSI gray background 21/23 8-bit color (88% white, 12% \xe2\x80\xa6CiANSI gray background 22/23 8-bit color (92% white, 8% \xe2\x80\xa6CiANSI gray background 23/23 8-bit color (96% white, 4% \xe2\x80\xa6kGamepad ID.Cl\xf0\x9d\x9f\x99 \xe2\x9a\x96\xef\xb8\x8f A return type for the calculated GCD and the \xe2\x80\xa60CeExternal iterator for a string\xe2\x80\x99s grapheme clusters.AoSendable grayscale image bufferBdPixels represent the amount of whiteBe\xf0\x9f\xa7\xaa Access to gyroscope sensor data.0DiRounds to the nearest allowed value like <code>HalfExpand</code>, but \xe2\x80\xa60CaA <code>HashMap</code> using a default Fx hasher.0CaA <code>HashSet</code> using a default Fx hasher.0BkLow-level hash table with explicit hashing.0CnA Fowler\xe2\x80\x93Noll\xe2\x80\x93Vo hasher, implemented for u32, u64, u128\xe2\x80\xa60AeA set of HTTP headers0kHigh color.0CgFrequencies around and higher than the user-defined \xe2\x80\xa6CmA special mode that uses designator labels that are known \xe2\x80\xa6BeEach pixel in this image is 8-bit RgbBdThe action should occur immediately.ClWe were already cleaning up for an ongoing unwind, and a \xe2\x80\xa600DhCauses the <code>Tween</code> to start slow, speed up, and then slow \xe2\x80\xa60CnAn error that can occur during initialization (i.e., while \xe2\x80\xa6AiInsertion-order preserved0AhInterrupt from keyboard.CdAn iterator over the <code>char</code>s of a string.00CkA trait to express the ability to consume an object and \xe2\x80\xa600Dm<code>?std</code> A type of <code>Read</code>er which has an internal buffer.0BjIP networks address for network interface.Di\xf0\x9f\x94\x84 <code>core</code> An iterator that links two iterators together, \xe2\x80\xa60Ea\xf0\x9f\x94\x84 <code>core</code> An iterator over the <code>char</code>s of a string slice.0Cj\xf0\x9f\x94\x84 <code>core</code> An iterator that repeats endlessly.0Cg\xf0\x9f\x94\x84 <code>core</code> An iterator that yields nothing.0BeBy-value <code>Range</code> iterator.00Ee\xf0\x9f\x94\x84 <code>itertools</code> An <code>Iterator</code> blanket impl providing extra \xe2\x80\xa60DgAn <code>Iterator</code> blanket implementation that provides extra \xe2\x80\xa6BeTask failed to execute to completion.Ah\xf0\x9f\x8c\x90 Javascript Console.0CgA high-resolution timestamp based on JavaScript\xe2\x80\x99s \xe2\x80\xa60BaA handle to a JavaScript timeout.0DdEnum describing possible <code>Process::kill_and_wait</code> errors.CgL2 Cache Allocation Technology Enumeration Sub-leaf \xe2\x80\xa6CgL3 Cache Allocation Technology Enumeration Sub-leaf \xe2\x80\xa6AcLarge file support.DdWith this, <code>TransmuteFrom</code> assumes only that you have \xe2\x80\xa6DjLinux <code>sys/syscall.h</code> constants for the current compilation \xe2\x80\xa60CkAn IPv4 address with the address pointing to localhost: \xe2\x80\xa6CiAn IPv6 address representing localhost: <code>::1</code>.CmThe display is in landscape mode, with the right side up, \xe2\x80\xa6CiSpecifies the number of lanes in a SIMD vector as a type.00DiLeft <strong>Hyper</strong> key (historically used in some Unix systems).0oLeft Hyper key.B`Left <strong>Shift</strong> key.0oLeft Shift key.DkLeft <strong>Super</strong> key (Windows key on Windows, Command \xe2\x8c\x98 on \xe2\x80\xa60CjLeft Super key. (Command on macOS, Windows on Windows, \xe2\x80\xa6AjControls an LFO modulator.AjPerceptual lightness (L*).0BcBresenham\xe2\x80\x99s line algorithm state,0AaLink-Local scope.00CiFile status structure matching libc\xe2\x80\x99s stat (man 2 stat)0DcAn analogous trait to <code>Wake</code> but used to construct a \xe2\x80\xa600AkConfiguration for a logger.0Cd<code>log</code> The \xe2\x80\x9cpayload\xe2\x80\x9d of a log message.0AcPhysical luminance.0CjThe maximum arity supported by the current compilation \xe2\x80\xa60CkThe maximum number of generic type parameters in this enum.1BjThe statically resolved maximum log level.AnMaximum possible memory pages.DdThe upper <em>inclusive</em> bound for valid instances of this type.DdThe lower <em>inclusive</em> bound for valid instances of this type.DhProvides a <code>Visitor</code> access to each entry of a map in the \xe2\x80\xa6Bo<code>alloc</code> Layout of a block of memory.0CiTypes with a size that can be determined from pointer \xe2\x80\xa600DjAn instance of <code>MidiInput</code> is required for anything related \xe2\x80\xa6lML-KEM-1024.CnProduces a stream of values that a parameter can be linked \xe2\x80\xa6BlFires when the mouse button is pressed down.0BkFires when the mouse moves over an element.0CoMouse utility functions. Access with <code>Sdl::mouse()</code>.CnA command that moves the terminal cursor a given number of \xe2\x80\xa6CmA command that moves the terminal cursor to the given row \xe2\x80\xa6Di<code>core</code> The multiplication assignment operator <code>*=</code>.0CgThe multiplication assignment operator <code>*=</code>.00CbSee <code>multipeek()</code> for more information.0AgMusic type enumerationsAbCommand not found.Bg404 Not Found [RFC9110, Section 15.5.5]DjThe smallest odd prime and the first nontrivial divisor (<code>3</code>\xe2\x80\xa60DiWhen requesting <code>next_boundary</code>, the cursor is moving past \xe2\x80\xa6Be\xf0\x9d\x9f\x99 \xf0\x9f\x9a\xa9 An inverse doesn\xe2\x80\x99t exist.AkAn inverse doesn\xe2\x80\x99t exist.010BgThe semaphore has no available permits.BmTurns off the <code>Reverse</code> attribute.BeNo streams were found by the decoder.Al\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The node is empty.0Df\xf0\x9d\x9f\x99\xe2\x9a\x97\xef\xb8\x8f <code>core</code> A signed integer that is known not to \xe2\x80\xa60CcAn <code>i8</code> that is known not to equal zero.00Di\xf0\x9d\x9f\x99\xe2\x9a\x97\xef\xb8\x8f <code>core</code> An unsigned integer that is known not to \xe2\x80\xa60CbA <code>u8</code> that is known not to equal zero.00CkA buffer wrapper of which the internal size is based on \xe2\x80\xa60Cd\xf0\x9d\x9f\x99 Common auto-trait for referenced integer types.0Be\xf0\x9d\x9f\x99 \xe2\x9a\x96\xef\xb8\x8f A numeric-related result.00Bd\xf0\x9f\x93\x90 A common trait for all vectors.0CiInitialization value for static <code>Once</code> values.0Ef<code>std</code> State yielded to <code>Once::call_once_force()</code>\xe2\x80\x99s closure \xe2\x80\xa60AnThe state of <code>Once</code>DeState yielded to <code>Once::call_once_force()</code>\xe2\x80\x99s closure \xe2\x80\xa60Da\xf0\x9f\x96\xb9 The type returned from <code>ExtOption::fmt_or_empty</code>.0BdDraws a line at the top of the text.ClDefines the relationship between a borrowed type and its \xe2\x80\xa60AiI am <code>kswapd</code>.Dk<code>PanicFuse</code> is an adaptor that wraps an iterator with a fuse \xe2\x80\xa6Fe<code>core</code> Passed to <code>#[panic_handler]</code> in <code>no_std</code>, always carrying \xe2\x80\xa60BmA struct providing information about a panic.00BlAn error was encountered in input arguments.0CdManages and updates a value that can be smoothly \xe2\x80\xa6CkA reference to the parent directory, i.e., <code>..</code>.00Dd<code>core</code> Trait for comparisons using the equality operator.Eh<code>core</code> Derive macro generating an impl of the trait <code>PartialEq</code>\xe2\x80\xa610CbTrait for comparisons using the equality operator.DhDerive macro generating an impl of the trait <code>PartialEq</code>. \xe2\x80\xa61010101010101010101010101010101010B`Iterate over mutable pixel refs.BbParallel iterator over pixel refs.BjToggles between playing and pausing media.0AePlay/Pause media key.BjStores the complete header data of a file.BcFires when the pointer is released.0ClAn iterator adapter to get the positions of each element \xe2\x80\xa60Ec<code>Positions</code> takes a predicate <code>predicate</code> and filters out \xe2\x80\xa6BaState of device\xe2\x80\x99s power supply.CePrefilter controls whether heuristics are used to \xe2\x80\xa6DiWhen requesting <code>prev_boundary</code>, the cursor is moving past \xe2\x80\xa6CnThe type of each channel in a pixel. For example, this can \xe2\x80\xa6AgProfiling time expired.AhOrdering characteristics0DaA type that represents a <code>PublicKey</code> that X25519 uses.00EgThis variant corresponds with <code>METH_METHOD</code> | <code>METH_FASTCALL</code> \xe2\x80\xa6CeRepresents a Python Capsule as described in Capsules:C`Represents a Python <code>complex</code> object.CeRepresents Python\xe2\x80\x99s <code>IOError</code> exception.ClRepresents a reference to a Python object supporting the \xe2\x80\xa6CeRepresents Python\xe2\x80\x99s <code>OSError</code> exception.CeRepresents Python\xe2\x80\x99s <code>Warning</code> exception.CeRepresents any Python <code>weakref</code> reference.CkA Rust type representing an exception defined in Python \xe2\x80\xa6BgRear-left (surround rear left) channel.CjAn iterator over the subslices of the vector which are \xe2\x80\xa60000Ee\xf0\x9f\x93\x8f <code>core</code> A range only bounded inclusively below (<code>start..</code>).0CnA range only bounded inclusively below (<code>start..</code>).00000000Cl\xf0\x9f\x93\x8f <code>core</code> An unbounded range (<code>..</code>).0BeAn unbounded range (<code>..</code>).00000Df<code>RawSample</code> provides a typed interface for converting a \xe2\x80\xa6DfOpaque string storage for raw TOML; internal to <code>toml_edit</code>Dg<code>ReadBytes</code> provides methods to read bytes and interpret \xe2\x80\xa6BbHPKE instance for decrypting data.CnAn error that may be emitted when attempting to wait for a \xe2\x80\xa6EaAn error returned from the <code>recv</code> function on a <code>Receiver</code>.EcError returned by the <code>Future</code> implementation for <code>Receiver</code>.CdError produced when receiving a change notification.22Dd<code>core</code> The remainder assignment operator <code>%=</code>.0CbThe remainder assignment operator <code>%=</code>.00CfRGB color with 64-bit float components (linear space).0BiSendable Rgb + alpha channel image bufferCjRGB+A color with 16-bit integer components (sRGB gamma \xe2\x80\xa60DnRight <strong>Meta</strong> key (used in some Unix-based systems, overlaps \xe2\x80\xa60oRight Meta key.CaRotate by 180 degrees. Can be performed in-place.CnRotate by 270 degrees clockwise. Equivalent to rotating by \xe2\x80\xa6CiThe mode for dealing with the remainder when rounding \xe2\x80\xa6ClThe bits of this structure can be directly reinterpreted \xe2\x80\xa6CiWait a specified number of milliseconds before returning.An\\brief General event structureClA rectangle, with the origin at the upper left (floating \xe2\x80\xa6Aa&lt; Key releasedBlThe structure that defines a point (integer)CjThis is the read/write operation structure \xe2\x80\x93 very basic.Bg303 See Other [RFC9110, Section 15.4.4]CkThe primary separator string of path components for the \xe2\x80\xa600BbSide left (surround left) channel.BdStack fault on coprocessor (unused).BdSynonymous with <code>SIGSYS</code>.AmVirtual alarm clock (4.2BSD).BoThis control message contains file descriptors.CkRepresents a fork-join scope which can be used to spawn \xe2\x80\xa6BaA type to represent a secret key.DaA type to represent the <code>SecretKey</code> that Chacha20, \xe2\x80\xa60000ClA type to represent the secret key that BLAKE2b uses for \xe2\x80\xa6DeA type to represent the <code>SecretKey</code> that HMAC uses for \xe2\x80\xa600333DjOccurs when <code>try_seek</code> fails because the underlying decoder \xe2\x80\xa6CjError returned when the try_seek implementation of the \xe2\x80\xa6AoThe stream could not be seeked.EhA <code>SeekIndex</code> stores <code>SeekPoint</code>s (generally a sample or frame \xe2\x80\xa6DjA <code>SeekPoint</code> is a mapping between a sample or frame number \xe2\x80\xa6CeCounting semaphore performing asynchronous permit \xe2\x80\xa6fU+003B0000AoA change in pitch in semitones.CjAn error that may be emitted when attempting to send a \xe2\x80\xa6CcAn error that can occur when sending MIDI messages.BjError returned by the <code>Sender</code>.DjError returned by the <code>send</code> function on a <code>Sender</code>.BjError produced when sending a value fails.EeAn error returned from the <code>Sender::send</code> or <code>SyncSender::send</code>0DkProvides a <code>Visitor</code> access to each element of a sequence in \xe2\x80\xa6DjA <strong>data structure</strong> that can be serialized into any data \xe2\x80\xa60ChA command that optionally sets the foreground and/or \xe2\x80\xa6DdA type to represent the <code>SharedKey</code> that X25519 produces.CjThe left shift assignment operator <code>&lt;&lt;=</code>.00CkThe right shift assignment operator <code>&gt;&gt;=</code>.00AaA signed integer.BeOperations on SIMD vectors of floats.00000BaAn implementation of SipHash 2-4.00AaSite-Local scope.00ClMethod for selecting a representative color from a color \xe2\x80\xa60DjAn iterator that rejects elements while <code>predicate</code> returns \xe2\x80\xa6000ChWrap the source in a skippable. It allows ending the \xe2\x80\xa6BnMakes the text blinking (&lt; 150 per minute).CfA source of audio that is loaded, but not yet playing.BeOptions for <code>Span::round</code>.BeOptions for <code>Span::total</code>.CiAn iterator over subslices separated by elements that \xe2\x80\xa60000Cb\xf0\x9f\x94\x84 An iterator over <code>Stack</code> elements.0BfDescribes when an action should occur.De<code>std</code> A locked reference to the <code>Stdin</code> handle.0CdA locked reference to the <code>Stdin</code> handle.D`A steady cursor bar shape (inverse of <code>BlinkingBar</code>).CfOperations performed on current stencil value when \xe2\x80\xa60CgThis is the same as <code>Skippable</code> see its docsBgTag that indicates the type of message.0Df<code>core</code> The subtraction assignment operator <code>-=</code>.0CdThe subtraction assignment operator <code>-=</code>.00Cd\xe2\x80\x9cSubnormal\xe2\x80\x9d or \xe2\x80\x9cdenormal\xe2\x80\x9d floating point \xe2\x80\xa60000AbResampling EnginesCe(since Linux 3.8) If the terminal is currently in \xe2\x80\xa6ClGet the process group ID of the foreground process group \xe2\x80\xa6AfLinux-specific ioctls.AiDCD (data carrier detect)AcCTS (clear to send)AdDSR (data set ready)AiDTR (data terminal ready)jRNG (ring)AeRTS (request to send)BbGive up this controlling terminal.CkMake the given terminal the controlling terminal of the \xe2\x80\xa6CeSet the foreground process group ID of this terminal.Bd425 Too early [RFC8470, Section 5.2]BaFile type mask (S_IFMT in POSIX).EbThis trait represents either a <code>Table</code>, or an <code>InlineTable</code>.DgAn iterator that only accepts elements while <code>predicate</code> \xe2\x80\xa6000Dd<code>core</code> A handle for waking up a task by notifying its \xe2\x80\xa60Db<code>std</code> A TCP stream between a local and a remote socket.0CaA TCP stream between a local and a remote socket.Be\xf0\x9f\x9a\xa9+ A text-related composite error.000BjA style description for a segment of text.ClAn iterator over all occurrences of three possible bytes \xe2\x80\xa600Dh\xf0\x9f\x95\x98 A signed duration of time, stored as an <code>(i64, i32)</code> \xe2\x80\xa60Bj\xf0\x9f\x9a\xa9+ \xf0\x9f\x95\x98 A time-related composite error.0BeOptions for <code>Time::round</code>.Ca\xf0\x9f\x95\x98 A full time split from years to nanoseconds.0DgA <code>TimeStamp</code> represents an instantenous instant in time \xe2\x80\xa6DiSeek to a track\xe2\x80\x99s <code>TimeStamp</code> in that track\xe2\x80\x99s timebase \xe2\x80\xa610CcAn instant in time represented as the number of \xe2\x80\xa6AbA TOML parse errorAeNext-track media key.CmTransport of HTTP/1.1 as created by a <code>Connector</code>.BmTrace all error paths, particularly for testsCg\xf0\x9f\x94\x84 An iterator over elements of a <code>Tuple</code>.0CdA trait for types that can be smoothly interpolated.AmCode to set underline effect.ClUser has execute permission (<code>S_IXUSR</code> in POSIX).CiUser has read permission (<code>S_IRUSR</code> in POSIX).Bg305 Use Proxy [RFC9110, Section 15.4.6]An<code>std</code> A UDP socket.0mA UDP socket.BaCommon trait for all UI services.0AiNo pixel aliases another.CmAn infinite endpoint. Indicates that there is no bound in \xe2\x80\xa600000000B`Explicit <code>undefined</code>.CnAn undefined direction can occur when a full-turn angle is \xe2\x80\xa610BbA uniquely owned <code>Arc</code>.00AdNo inherent ordering0DjWrapper around <code>TryRngCore</code> implementation which implements \xe2\x80\xa60DhTrait for objects whose <code>Clone</code> impl is lightweight (e.g. \xe2\x80\xa600CiAn item returned by the <code>Utf8Chunks</code> iterator.0000CiErrors which can occur when attempting to interpret a \xe2\x80\xa600DkUTF-8 error information compatible with <code>std::str::Utf8Error</code>\xe2\x80\xa6AnSimple zero-sized UTF-8 error.22CiTrait which permits the allowed types to be used with \xe2\x80\xa60000CmAn iterator of all values associated with a single header \xe2\x80\xa6BbThe type of a value in this entry.CnA mutable iterator over the values of a <code>BTreeMap</code>.DcA mutable iterator over the values of a <code>HashMap</code> in \xe2\x80\xa6Bm<code>HeaderMap</code> mutable value iteratorCmA mutable iterator over the values of a <code>HashMap</code>.33CaA raw binary data buffer backed by a byte vector.0Dj\xf0\x9f\x93\x90 A dynamic sequence of <code>D</code>-dimensional <code>Point</code>s.0Cn\xf0\x9f\x93\x90 A dynamic vector, backed by a primitive <code>Vec</code>.0Df<code>Parser</code> implementation for <code>Parser::verify_map</code>Cj\xf0\x9f\xa7\xba A WebAssembly global memory allocator that uses a \xe2\x80\xa60CfHandle to the browser\xe2\x80\x99s global Window and Screen \xe2\x80\xa60BdA handle to a JavaScript Web Worker.0iEtymology0DjAn iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator \xe2\x80\xa60Eg<code>WhileSome</code> is an iterator that yields the <code>Some</code> elements of \xe2\x80\xa6Df<code>Parser</code> implementation for <code>Parser::with_taken</code>CjWrap style is a hint for how strings of text should be \xe2\x80\xa6CnThe writable half of a value returned from <code>split</code>.CnAn error returned when an operation could not be completed \xe2\x80\xa60000Be\xf0\x9f\x8e\xb2 The <code>XorShift8</code> PRNG.0BkCode to set the background color to yellow.CiA builder for setting the fields on a <code>Zoned</code>.DhThe <code>__mmask16</code> type used in AVX-512 intrinsics, a 16-bit \xe2\x80\xa600DhThe <code>__mmask32</code> type used in AVX-512 intrinsics, a 32-bit \xe2\x80\xa600DhThe <code>__mmask64</code> type used in AVX-512 intrinsics, a 64-bit \xe2\x80\xa600E`Bitwise logical <code>AND</code> of inverted <code>a</code> with <code>b</code>.00000DiSets all bits of <code>x</code> to 1 except for the least significant \xe2\x80\xa600000CfSets the least significant zero bit of <code>x</code>.00000BaExtracts lowest set isolated bit.00000BlResets the lowest set bit of <code>x</code>.00000CnZeroes higher bits of <code>a</code> &gt;= <code>index</code>.00000FiSaves the <code>x87</code> FPU, <code>MMX</code> technology, <code>XMM</code>, and <code>MXCSR</code> \xe2\x80\xa600BoReturns the dot product of two __m128d vectors.00BnReturns the dot product of two __m128 vectors.00CmComputes the bitwise OR of <code>a</code> and <code>b</code>.00CbBitwise OR of packed single-precision (32-bit) \xe2\x80\xa600CnProvides a hint to the processor that the code sequence is \xe2\x80\xa600BjUnsigned multiply without affecting flags.00000DhScatter contiguous low order bits of <code>a</code> to the result at \xe2\x80\xa600000EbGathers the bits of <code>x</code> specified by the <code>mask</code> into the \xe2\x80\xa600000AmCounts the bits that are set.00000CePerforms a full or partial restore of the enabled \xe2\x80\xa600ClPerforms a full or partial save of the enabled processor \xe2\x80\xa600000000BnAborts all tasks on this <code>JoinSet</code>.BhReturns if the event watch is activated.BnThe <code>TimeStamp</code> that was seeked to.0AoAdds a new class to the module.0A`Creates a clock.ClAdds a fake clock with the given ticking state and time. \xe2\x80\xa6BfAdd credentials to the ancillary data.AlLanewise <code>a + b</code>.0ChLanewise <code>a + b</code> with <code>f64</code> lanes.0DeConstructs a new timer using the boxed closure <code>callback</code>.BmHorizontal space to advance after each glyph.0BnVertical space to advance after each new line.0FbWARNING: The <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of thisAgIndex in the age array.CiThis is the generic way to perform any operation on a \xe2\x80\xa6DnWhen <code>false</code>, <code>TransmuteFrom</code> is not implemented for \xe2\x80\xa600BiCheck whether all elements compare equal.000Eh<code>Copy</code> a string slice into this <code>Bump</code> and return an exclusive \xe2\x80\xa6C`Returns a reference to the underlying allocator.000000000000000000000CjGets the additional alpha value multiplied into render \xe2\x80\xa6CdDetermines if the <code>#</code> flag was specified.BgSets or unsets the <code>#</code> flag.BcSets how much the value oscillates.AnHow much the value oscillates.CnProduces an iterator over <code>Path</code> and its ancestors.AiGets the cache directory.0AiGets the state directory.0AgArguments for exceptionEeSets the element at the specified <code>index</code> to the given <code>value</code>.0BlRetrieve the underlying bitmap header if anyClReturns a read-only cursor pointing to the same location \xe2\x80\xa6000CkReturns a read-only cursor pointing to the current element.CiReturns the logger as a <code>Logger</code> trait object.0BnReturn a reference to an 16bit Grayscale imageCjReturns the total duration in units of whole microseconds.ClReturns the total number of whole microseconds contained \xe2\x80\xa61CjReturns the total duration in units of whole milliseconds.ClReturns the total number of whole milliseconds contained \xe2\x80\xa61DiReturns a reference to the inner value in variant<code>_10</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant<code>_11</code>, if \xe2\x80\xa6CnReturns the eight-bit integers this address consists of as \xe2\x80\xa6CiReturns the four eight-bit integers that make up this \xe2\x80\xa6CkReturns the sixteen eight-bit integers the IPv6 address \xe2\x80\xa6BhConverts to an <code>OsStr</code> slice.BoYields the underlying <code>OsStr</code> slice.CiReturns the raw <code>OsStr</code> slice for this prefix.CaExtracts the underlying <code>OsStr</code> slice.BlRetrieve the underlying pixmap header if anyBaExtracts the raw file descriptor.00D`Handle this body as a shared <code>impl Read</code> of the body.DjReturns a reference to the inner value in variant <code>_10</code>, if \xe2\x80\xa6DjReturns a reference to the inner value in variant <code>_11</code>, if \xe2\x80\xa6BhReturn a reference to an 32bit RGB imageBiReturn a reference to an 16bit RGBA imageCkReturns this timestamp as a number of seconds since the \xe2\x80\xa6ChReturns the destaque as pair of shared slices, which \xe2\x80\xa6CiReturns a pair of slices which contain, in order, the \xe2\x80\xa6CkViews the underlying data as a pair of subslices of the \xe2\x80\xa60Dg<code>core</code> Asserts that two expressions are equal to each other.0ChAsserts that two expressions are equal to each other \xe2\x80\xa600Dh<code>core</code> Asserts that two expressions are not equal to each \xe2\x80\xa60ClAsserts that two expressions are not equal to each other \xe2\x80\xa600BbReturns the motherboard asset tag.CmBitwise or with the current value, returning the previous \xe2\x80\xa600BfStyles the content with the attribute.DdOne-shot API for HPKE Auth mode <code>Self::open()</code> operation.DdOne-shot API for HPKE Auth mode <code>Self::seal()</code> operation.BkGet the authority of this <code>Uri</code>.BlSet the <code>Authority</code> for this URI.B`The authority component of a URICgAllocate a memory block for an array with av_mallocz().CjEscape string in src, and put the escaped string in an \xe2\x80\xa6CkAllocate a memory block with alignment suitable for all \xe2\x80\xa6BdDuplicate a buffer with av_malloc().AbReduce a fraction.C`See libc sscanf manual for more information. \xe2\x80\xa6AcDuplicate a string.ChParse the string in numstr and return its value as a \xe2\x80\xa6CnSplit the string into several tokens which can be accessed \xe2\x80\xa6ChConvert the decomposed UTC time in tm to a time_t value.CiSleep for a period of time.  Although the duration is \xe2\x80\xa6CnReturns a list of all available time zone identifiers from \xe2\x80\xa6CnSimilar to feof() but also returns nonzero on read errors. \xe2\x80\xa6CiCreate and initialize a AVIOContext for accessing the \xe2\x80\xa6CmRead size bytes from AVIOContext into buf. @return number \xe2\x80\xa6Clfseek() equivalent for AVIOContext. @return new position \xe2\x80\xa6BmGet the filesize. @return filesize or AVERRORCnSkip given number of bytes forward @return new position or \xe2\x80\xa6CbMax duration for awaiting a 100-continue response.ClReturns <code>Code</code> associated with <code>axis</code>.BgReturns axis state and when it changed.0D`&lt; A mask of which axes are valid for this controller e.g. \xe2\x80\xa6CgSupport for capturing a stack backtrace of an OS threadAkEnable backtracking support00DdOne-shot API for HPKE Base mode <code>Self::open()</code> operation.DdOne-shot API for HPKE Base mode <code>Self::seal()</code> operation.CcCreates a Unix datagram socket bound to an address.DbCreates a new <code>UnixListener</code> bound to the specified \xe2\x80\xa6CbClears the bit at the specified bit-position to 1.000000000000BdGets the number of bits left unread.Dj<code>core</code> Hints the compiler to be maximally pessimistic about \xe2\x80\xa60EcAn identity function that <em><strong>hints</strong></em> to the compiler to be \xe2\x80\xa6DcSee documentation of <code>std::hint::black_box</code> for details.10110DgGet the duration of the packet in <code>TimeBase</code> units if no \xe2\x80\xa6CjReturns the number of blocks allocated to the file, in \xe2\x80\xa6Dk<strong>Gets</strong> the attribute: the minimum number of bits for the \xe2\x80\xa6CnReturns the time (in seconds) when the system booted since \xe2\x80\xa6DgGets the value of the <code>SO_BROADCAST</code> option for this socket.DfExecutes <code>op</code> within every thread in the current thread \xe2\x80\xa6DhExecutes <code>op</code> within every thread in the thread pool. Any \xe2\x80\xa6CjCreates settings optimized for broadcast and streaming \xe2\x80\xa6CjA multi-producer, multi-consumer broadcast queue. Each \xe2\x80\xa6BaAn ordered map based on a B-Tree.ChThis module contains the parallel iterator types for \xe2\x80\xa611BaAn ordered set based on a B-Tree.100BcReturns an Apple bundle identifier.BgReturns the size of this type in bytes.00CiReturns the internal measure, the product of the extents.00000000000EcEquivalent to C\xe2\x80\x99s <code>ssize_t</code> (on POSIX) or <code>SSIZE_T</code> (on \xe2\x80\xa600EeAccurately calculates a <code>Time</code> using the <code>TimeBase</code> and the \xe2\x80\xa6AlPerforms the call operation.CnPerforms an initialization routine once and only once. The \xe2\x80\xa61111111111111111111DaReturn if the <code>ImageFormat</code> can be encoded by the lib.CnReturns the capacity per item in the major dimension based \xe2\x80\xa60CnReturns the capacity per item in the minor dimension based \xe2\x80\xa60ClCasts from a maybe-uninitialized type to its initialized \xe2\x80\xa6D`Like <code>cast</code> but takes ownership of <code>self</code>.CgRound each lane to a whole number, towards positive \xe2\x80\xa60CgRound <code>f32</code> lanes towards positive infinity.0CdCenters the rectangle on the given point (in place).0BaChannel layout of the audio data.CfAudio only. The channel layout and number of channels.AeAudio channel layout.Bn&lt; channel layout of current buffer (see \xe2\x80\xa6BdAudio only, the audio channel layoutjAudio only00CkChain a function which takes the parameter by exclusive \xe2\x80\xa600ChChain a function which takes the parameter by shared \xe2\x80\xa600iCHANGELOGCkReturns the channels of this pixel as a 4 tuple. If the \xe2\x80\xa6CmAdditional metadata associated with the character used to \xe2\x80\xa6DmThe byte indices for the <code>char</code> at <code>ParseError::offset</code>C`Clamps the given value to the [-1.0, 1.0] range.0CfClamps the given value to the [-32_767, 32_768] range.CiClamps the given value to the [-8_388_608, 8_388_607] \xe2\x80\xa6CbClamps the given value to the [-2_147_483_648, \xe2\x80\xa6C`The clamped value, propagating <code>NaN</code>.0FeReturns itself clamped between <code>min</code> and <code>max</code>, propagating <code>NaN</code>\xe2\x80\xa6C`Clamps the given value to the [0, 65_535] range.CdClamps the given value to the [0, 16_777_215] range.CgClamps the given value to the [0, 4_294_967_295] range.n&lt; Read-onlyBhGets the clip rectangle for the surface.BoGets the clip rectangle for the current target.AiAdds two vectors together0CnClone the PyErr. This requires the GIL, which is why PyErr \xe2\x80\xa6BcMakes a clone of <code>self</code>.CnCreates a new cell that contains a new Python reference to \xe2\x80\xa60AoSubtracts two vectors together.0Dc<code>core</code> Expands to the file name at which it was invoked.0De<code>core</code> Expands to the line number at which it was invoked.0CnAdditional information about the codec (corresponds to the \xe2\x80\xa6Defourcc (LSB first, so \xe2\x80\x9cABCD\xe2\x80\x9d -&gt; (\xe2\x80\x98D\xe2\x80\x99&lt;&lt;24) + (\xe2\x80\x98C\xe2\x80\xa6CmList of supported codec_id-codec_tag pairs, ordered by \xe2\x80\x9c\xe2\x80\xa6ChHints to the compiler that given path is cold, i.e., \xe2\x80\xa6CeHints to the compiler that current code path is cold.10110CnThe function will fail if the surface doesn\xe2\x80\x99t have color \xe2\x80\xa6CjGets the additional color value multiplied into render \xe2\x80\xa6AfGet the red component.CgSince the color has no red, the luminosity is returned.000000000001AnColor Transfer Characteristic.Af&lt; Condition effect.CfCreates a new lock in an unlocked state ready for use.DlCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.CcCreates a new empty <code>OnceCell</code> instance.CbCreates a new empty <code>SetOnce</code> instance.CoCreate a new <code>Notify</code>, initialized without a permit.CkCreates a new semaphore with the initial number of permits.ChWhether the process was continued from a stopped status.0CjUnstable module containing the unstable contracts lang \xe2\x80\xa60ClCopies a portion of the texture to the current rendering \xe2\x80\xa6FjCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>self</code>. The \xe2\x80\xa6CiCopies all of the pixels from another image into this \xe2\x80\xa6CgReturns a copy of the state jumped ahead by 2^64 steps.AoSign of Y, magnitude of X (f32)CmCounts all occurrences of this byte in the given haystack \xe2\x80\xa600DhCollect the items in this iterator and return a <code>HashMap</code> \xe2\x80\xa6000ClReturns the total CPU usage (in %). Notice that it might \xe2\x80\xa6AkReturns this CPU\xe2\x80\x99s usage.CfReturns the value of the \xe2\x80\x9ccpu_usage\xe2\x80\x9d refresh kind.ClAccumulates the <code>u16</code> into a running CRC32 value.0ClAccumulates the <code>u32</code> into a running CRC32 value.0ClAccumulates the <code>u64</code> into a running CRC32 value.0Bc<code>crossterm</code> UI backends.Bh&lt; Game Controller touchpad event dataChFlags signalling stream properties. A combination of \xe2\x80\xa6DjCreates a new <code>AnsiColor8b</code> from a 216-color 6x6x6 RGB cube \xe2\x80\xa6CcSets the foreground color to <code>DarkBlue</code>.CcSets the foreground color to <code>DarkCyan</code>.CcSets the foreground color to <code>DarkGrey</code>.BdReturns the data type of this value.0DcCreates a <code>DebugMap</code> builder designed to assist with \xe2\x80\xa6DcCreates a <code>DebugSet</code> builder designed to assist with \xe2\x80\xa6BbReturns the surrounding whitespace000B`Get the decoration of the value.BiSets the prefix and the suffix for value.EdDeletes the slice from <code>low</code> to <code>high</code> from <code>self</code>.0EaDeletes the slice from <code>i1</code> to <code>i2</code> from <code>self</code>.10ClSequence three parsers, only returning the output of the \xe2\x80\xa6AoMutably dereferences the value.fPanicsBlAllows exclusive access to the locked value.1222gExample0003CeReturns an iterator in descending order of magnitude.000EeCompares every element yielded by both <code>i</code> and <code>j</code> with the \xe2\x80\xa6AlReturns the angle direction.00ChConfigures how and when the sign for the duration is \xe2\x80\xa6Da&lt; Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED \xe2\x80\xa6Am&lt; Direction of the effect.0Bl&lt; Direction of the effect - Not used ATM.11CnSets the distances from a listener at which the emitter is \xe2\x80\xa6CnSets the <code>dither</code> field to <code>Dither::FS</code>.CnReturns the quotient, rounding the result towards negative \xe2\x80\xa60AlLanewise <code>a / b</code>.0CbLanewise <code>a / b</code> with <code>f64</code>.0CkCreates a new <code>Weak</code> pointer to this allocation.0DbDowngrades a write-locked <code>RwLockWriteGuard</code> into a \xe2\x80\xa6DfCreates a <code>WeakSender</code> that does not keep the channel open.CgAtomically downgrades a write lock into a read lock \xe2\x80\xa60EeConverts the <code>Sender</code> to a <code>WeakSender</code> that does not count \xe2\x80\xa6EhConverts the <code>UnboundedSender</code> to a <code>WeakUnboundedSender</code> that \xe2\x80\xa6145CkCreates a new weak reference to the <code>UniqueArc</code>.CjCreates a new weak reference to the <code>UniqueRc</code>.ChThe dpi scaling factor (window pixels to framebuffer \xe2\x80\xa60mDraws a line.CkDraws a line on the current rendering target. Errors if \xe2\x80\xa6CfDraws grayscale text into a one-byte-per-pixel buffer.CmDraws a rectangle on the current rendering target. Errors \xe2\x80\xa6C`Draws RGBA text into a 4-bytes-per-pixel buffer.AgDrops the back element.CbDuplicates the back pair of elements, at the back.BjDuplicates the front element at the front.DbHeight from the baseline to the top of the <code>em</code> square.0BoCreate a new empty string with a default bufferAgEnables the I/O driver.A`End index bound.0000000CnSubmit an end of elapsed-time query that can be read later \xe2\x80\xa6DgDetermines whether <code>child</code> is a suffix of <code>self</code>.DkReturns <code>true</code> if the given pattern matches a suffix of this \xe2\x80\xa6CnGets the given key\xe2\x80\x99s corresponding entry by reference in \xe2\x80\xa6CiCreates an iterator which gives the current iteration \xe2\x80\xa6000000000000000000000CcIterate <code>iterable</code> with a running index.BeYields an index along with each item.0CgClears all explicitly set environment variables and \xe2\x80\xa6ChClears the entire environment map for the child process.CcAdjusts the volume of a frequency range of a sound.BkThe length of the error in bytes, if known.00000BlProvides more information about the failure:CjAnalogue to <code>std::str::Utf8Error::error_len()</code>.DfEvaluates a polynomial at the <code>self</code> point value, using \xe2\x80\xa600CfPerforms an exact division, resulting in undefined \xe2\x80\xa600AeDoes this path exist?CnFormat a message stating what data this Visitor expects to \xe2\x80\xa6CgExtracts the extension (without the leading dot) of \xe2\x80\xa6BaAdds an extension to this builder00CjExtra binary data needed for initializing the decoder, \xe2\x80\xa6Cmsome codecs need / can use extradata like Huffman tables. \xe2\x80\xa6EaFactors out a homogenous type from an <code>Either</code> of <code>Result</code>.nThe factorial.0CbThe factorial of the integer value <code>x</code>.AfReturns the factorial.0CeFloat addition that allows optimizations based on \xe2\x80\xa600DjPerforms a fast blur on this image. <code>sigma</code> is the standard \xe2\x80\xa6CjApproximation of Gaussian blur after Kovesi, P.:  Fast \xe2\x80\xa6CeFloat division that allows optimizations based on \xe2\x80\xa600CnComputes the absolute value of the current value, and sets \xe2\x80\xa60CgAdd to the current value, returning the previous value.00000000000ChAdds to the current value, returning the previous value.00000000000000000000000CnBitwise and with the current value, returning the previous \xe2\x80\xa6BgLogical \xe2\x80\x9cand\xe2\x80\x9d with a boolean value.111111111110ClPerforms a bitwise \xe2\x80\x9cand\xe2\x80\x9d operation on the address of \xe2\x80\xa6BiBitwise \xe2\x80\x9cand\xe2\x80\x9d with the current value.00000000000210000000000AoMaximum with the current value.00000000000000000000000000000000000AoMinimum with the current value.00000000000000000000000000000000000ClNegates the current value, and sets the new value to the \xe2\x80\xa60000000000000BgLogical \xe2\x80\x9cnot\xe2\x80\x9d with a boolean value.CmLogical negates the current value, and sets the new value \xe2\x80\xa6000000000001CkSubtract from the current value, returning the previous \xe2\x80\xa600000000000ClSubtracts from the current value, returning the previous \xe2\x80\xa600000000000000000000000CnBitwise xor with the current value, returning the previous \xe2\x80\xa60BgLogical \xe2\x80\x9cxor\xe2\x80\x9d with a boolean value.11111111110ClPerforms a bitwise \xe2\x80\x9cxor\xe2\x80\x9d operation on the address of \xe2\x80\xa6BiBitwise \xe2\x80\x9cxor\xe2\x80\x9d with the current value.00000000000210000000000DiReturns this <code>Span</code> as a value with a type that implements \xe2\x80\xa6BmReturns a precomputed hash for the font file.CmReturns the file name of this directory entry without any \xe2\x80\xa6DfReturns the final component of the <code>Path</code>, if there is one.CjReturns the value of the nFileSize{High,Low} fields of \xe2\x80\xa6DkExtracts the stem (non-extension) portion of <code>self.file_name</code>\xe2\x80\xa6CmReturns the file type for the file that this entry points \xe2\x80\xa6BhReturns the file type for this metadata.BbReturns the <code>FileType</code>.DkFills all <code>None</code> elements of the array with the given cloned \xe2\x80\xa6Bd(fillRect) Draws a filled rectangle.CnFills a rectangle on the current rendering target with the \xe2\x80\xa6Cg(fillText) Draws filled text at the specified position.CaFilters this image with the specified 3x3 kernel.DjPerform a 3x3 box filter on the supplied image. <code>kernel</code> is \xe2\x80\xa6DiReturn an iterator adaptor that filters every <code>Result::Ok</code> \xe2\x80\xa6000ClReturns an iterator over all non-overlapping occurrences \xe2\x80\xa6CnReturns an iterator over all occurrences of a substring in \xe2\x80\xa6CnReturns an iterator that yields successive non-overlapping \xe2\x80\xa6DlSearches for the sequentially <strong>last</strong> item in the parallel \xe2\x80\xa60BiFinds the index of the first set element.E`A copy of <code>self</code> flipping the bits that are set in <code>mask</code>.00BdFlips the sign of <code>self</code>.0oFlips its sign.BdComputes <code>self // other</code>.00DgReturns the largest integer less than or equal to an <code>f128</code>.00CnReturn the greater of two arguments or, if either argument \xe2\x80\xa6CmReturn the lesser of two arguments or, if either argument \xe2\x80\xa6CkFloat multiplication that allows optimizations based on \xe2\x80\xa600ChReduces a hash to <code>n</code> bits using xor folding.000DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6EgApplies <code>fold_op</code> to the given <code>init</code> value with each item of \xe2\x80\xa60DjIterate the producer, feeding each element to <code>folder</code>, and \xe2\x80\xa60CnReturns an iterator of time zone transitions following the \xe2\x80\xa6ChThe hash of the font used in layout to raster the glyph.BcProvide the <code>CodecType</code>.CmProduces layout describing a record that could be used to \xe2\x80\xa6CjForces the evaluation of this lazy value and returns a \xe2\x80\xa60DcSets the <code>format</code> field to <code>PixelFormat::G1</code>.DcSets the <code>format</code> field to <code>PixelFormat::G2</code>.DcSets the <code>format</code> field to <code>PixelFormat::G4</code>.DcSets the <code>format</code> field to <code>PixelFormat::G8</code>.BaFrame counter, set by libavcodec.CmVideo only. Number of frames per second, for streams with \xe2\x80\xa6Cldecoding: For codecs that store a framerate value in the \xe2\x80\xa6jVideo only00AaFramerate controlBiReturns the amount of free SWAP in bytes.BlFree swap (in bytes) for the current cgroup.CfFloat remainder that allows optimizations based on \xe2\x80\xa600CnThe \xe2\x80\x9ccenter\xe2\x80\x9d or \xe2\x80\x9ccorner\xe2\x80\x9d of the frequency range to \xe2\x80\xa6BfSets how quickly the value oscillates.BaHow quickly the value oscillates.AnReturns the CPU\xe2\x80\x99s frequency.CfReturns the value of the \xe2\x80\x9cfrequency\xe2\x80\x9d refresh kind.DaCreates a new error value from <code>core::fmt::Arguments</code>.DfConverts from the bit patterns of these floats (<code>[u32;4]</code>).DgConverts from the bit patterns of these doubles (<code>[u64;2]</code>).DfConverts from the bit patterns of these floats (<code>[u32;8]</code>).DgConverts from the bit patterns of these doubles (<code>[u64;4]</code>).DaConstructs a <code>KeyMods</code> from a bitfield representation.DcConverts a native byte order <code>u32</code> into an IPv4 address.DdConverts a native byte order <code>u128</code> into an IPv6 address.CjRaw transmutation from an unsigned integer vector type \xe2\x80\xa60BgRaw transmutation from <code>u16</code>11AjConvert from a bits value.00000000000000000000DgConverts from the bit patterns of these floats (<code>[u32;16]</code>).DgConverts from the bit patterns of these doubles (<code>[u64;8]</code>).0CkConvert from underlying bit representation, unless that \xe2\x80\xa6000000055D`Creates a new <code>StringNonul</code> from a <code>char</code>.CmCreates a new <code>StringU8</code> from a <code>char</code>.DbCreates a new <code>GraphemeNonul</code> from a <code>char</code>.CoCreates a new <code>GraphemeU8</code> from a <code>char</code>.DcCreates a new <code>GraphemeString</code> from a <code>char</code>.DiCreates and loads a module named <code>module_name</code>, containing \xe2\x80\xa6CjCreates a new surface from an existing buffer, using a \xe2\x80\xa6BnConverts a Gregorian date to an ISO week date.DfCreates a new <code>Duration</code> from the specified number of days.AnConverts from Exif orientationChLoads an audio file into a <code>StaticSoundData</code>.ClCreates a <code>StreamingSoundData</code> for an audio file.AkCreates an SDL file stream.B`Loads an SDL Surface from a fileAnLoad file for use as a sample.AgLoad music file to use.DcCreates a new <code>XoroShift128p</code> generator, seeded from \xe2\x80\xa6ClCreates a new Xoroshiro128++ PRNG, seeded from addresses \xe2\x80\xa6BaCreates a value from an iterator.DkTakes each element in the <code>Iterator</code> and collects it into an \xe2\x80\xa6E`Constructs a <code>BTreeMap&lt;K, V&gt;</code> from an iterator of key-value \xe2\x80\xa61E`Creates a new <code>PathBuf</code> from the <code>Path</code> elements of an \xe2\x80\xa6DfCreates a new <code>CodecFlags</code> from a slice of arbitrary types.BaCreates a chunk from an iterator.EcTakes each element in the <code>Iterator</code>: if it is <code>None</code>, no \xe2\x80\xa6EeTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no \xe2\x80\xa67777BlConverts an iterator into an async iterator.8880D`The bitwise or (<code>|</code>) of the bits in each flags value.000000000000000000009CfBuilds a source that chains sources provided by an \xe2\x80\xa6:::DoConstructs a <code>HashMap&lt;K, V&gt;</code> from an iterator of key-value \xe2\x80\xa63:DaConverts <code>SignedDuration</code> into <code>TimeDelta</code>.CiInstantiate a KeyPair with all key validation checks, \xe2\x80\xa600DiConstruct a <code>ParameterError</code> directly from a corresponding \xe2\x80\xa6CoConstruct a generic <code>LimitError</code> directly from a \xe2\x80\xa6CeInitialize a native channel layout from a bitmask \xe2\x80\xa6DjCreates a new <code>TimeDelta</code> from the given number of minutes. \xe2\x80\xa6DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6DfCreates a new <code>SignedDuration</code> from the given number of \xe2\x80\xa6CkCreates a new instance from the given mode permission bits.0CmCreates a frame with both the left and right channels set \xe2\x80\xa6ClGet a flags value with the bits of a flag with the given \xe2\x80\xa600000000ClReturns a chroma location for the given name or an error \xe2\x80\xa6111111111111BhConverts a HeaderName into a HeaderValueCjReturn the image format specified by the path\xe2\x80\x99s file \xe2\x80\xa6DhReads a <code>Read</code> object into a buffer and then passes it to \xe2\x80\xa6CoConstructs a <code>WebEventKind</code> from its representation.ClConstructs a keyboard location from the numeric value of \xe2\x80\xa6BgCreate from <code>Rgb&lt;u8&gt;</code>.0DgCreates a new <code>TimeDelta</code> from the given number of whole \xe2\x80\xa6DjCreates a new <code>Duration</code> from the specified number of whole \xe2\x80\xa6<B`Creates a duration from seconds.CnWhen seeded with zero this implementation uses the default \xe2\x80\xa60000000BgCreate a new PRNG using the given seed.CiConstructs a new PyErr from the given Python type and \xe2\x80\xa6CdConverts a vector of bytes to a <code>String</code>.BlConverts a slice of bytes to a string slice.0100BhConverts a byte string to a string sliceBoAnalogue to <code>std::str::from_utf8()</code>.022CdReturns an exclusive reference to the front element.DkProvides a mutable reference to the front element, or <code>None</code> \xe2\x80\xa60ClProvides a mutable reference to the front element of the \xe2\x80\xa6ChFloat subtraction that allows optimizations based on \xe2\x80\xa600Ch\xf0\x9f\x93\x90 A convenient 2D GLSL vertex representation with \xe2\x80\xa60Ch\xf0\x9f\x93\x90 A convenient 3D GLSL vertex representation with \xe2\x80\xa60DiReads from potentially discontiguous indices in <code>slice</code> to \xe2\x80\xa6AnReturns the current alignment.CkGet the most recent sample chunk pointer played on channel.CmGets the <code>CodecDescriptor</code> for a registered codec.BnReturns the number of hour units in this span.CkCalculates the 1D array index from the given 2D coordinates0BoReturns the month, as an int from 1 through 12.CkReturns the pixel located at (x, y). Indexed from top left.CmGets a reference to the pixel at location <code>(x, y)</code>DhGets the default <code>Probe</code>. This registry pre-registers all \xe2\x80\xa6DmGets the bits in <code>self</code> from the <code>[start..=end]</code> range.00000000000D`Gets a copy of <code>self</code> with only the bits from the \xe2\x80\xa600DgTakes the slice <code>self[low:high]</code> and returns it as a new \xe2\x80\xa60EeReturns the slice of sequence object between <code>begin</code> and <code>end</code>.1101CgGets the current termios state into <code>state</code>.BaReturns the font\xe2\x80\x99s style flags.BnReturns the number of week units in this span.AjReturns the current width.ClCreate a resampler with the given definitions and custom \xe2\x80\xa6BnReturns the number of year units in this span.CfThe GlyphPosition index of the last glyph in the line.DdReturns an iterator over the grapheme clusters of <code>self</code>.DoCreates a grayscale color by wrapping <code>value</code> via <code>% 24</code>.DgReturn a grayscale version of this image. Returns <code>Luma</code> \xe2\x80\xa6CmConvert the supplied image to grayscale. Alpha channel is \xe2\x80\xa60Bj(groupEnd) Exits the current inline group.BjCreates a new hard link on the filesystem.0Aa3DNow extensions.CjA value of 1 indicates that the processor supports the \xe2\x80\xa6BeReturns if there is an alpha channel.nSupports AVX10ChReturns false if the color scheme is grayscale, true \xe2\x80\xa6ClThe internal FP/SIMD execution datapath is 128 bits wide \xe2\x80\xa6ClThe internal FP/SIMD execution datapath is 256 bits wide \xe2\x80\xa6CgChecks if the font has a glyph for the given character.CfChecks if there is input available to read from stdin.AcIs LZCNT available?ClA value of 1 indicates that the processor supports MOVBE \xe2\x80\xa6EcIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.CiOS has set CR4.PKE to enable protection keys (and the \xe2\x80\xa6Ch36-Bit Page Size Extension. 4-MByte pages addressing \xe2\x80\xa6BeRDPID and IA32_TSC_AUX are available.BcRDPRU instruction supported if set.EbIf <code>Right</code>, or <code>Both</code>, return true, otherwise, return false.BmChecks if the <em>Shift</em> modifier is set.CjA value of 1 indicates that the processor supports SSE4.1.CjA value of 1 indicates that the processor supports SSE4.2.ChXTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.CkA value of 1 indicates the presence of the Supplemental \xe2\x80\xa6CjA value of 1 indicates that the processor supports the \xe2\x80\xa6EdConversions to and from hashbrown\xe2\x80\x99s <code>HashMap</code> and <code>HashSet</code>.Cj[<strong><strong>Caution</strong></strong>] Low-level API.DjReturns the starting address of the WASM heap (<code>__heap_base</code>\xe2\x80\xa6BiApplies a high-pass filter to the source.0AmThe name of the current host.0BjReturns the system hostname based off DNS.DgHue rotate the supplied image. <code>value</code> is the degrees to \xe2\x80\xa600CiWhen this time zone was loaded from an IANA time zone \xe2\x80\xa6Bd<code>icy_sixel</code> modificationsBdIDCT algorithm, see FF_IDCT_* below.Bbinterlaced DCT comparison functionClReturns true if this x, y coordinate is contained inside \xe2\x80\xa6CiCheck that the pixel and the channel index are in bounds.0D`Construct a stack-based DST using the given <code>buffer</code>.CaSet the rounding increment for the smallest unit.00000000000DhPerforms the mutable indexing (<code>container[index]</code>) operation.00CeReturns a mutable reference to the output at this \xe2\x80\xa6CnReturn a mutable reference to a single sample at specified \xe2\x80\xa6121211CgInitializes the next uninitialized element with the \xe2\x80\xa6C`Get a mutable reference to the underlying image.AiReturns the inner source.C`Returns a mutable reference to the inner source.0000000CfReturns a mutable reference to the inner audio source.111111111BbGet mutable access to the iteratorBbget mutable access to the iterator0C`Returns a mutable reference to the inner stream.CmReturns a mutable reference to the entire buffer, without \xe2\x80\xa6BcSorts a slice using insertion sort.DeReturns a scaled value in <code>[min..=max]</code> to a new range \xe2\x80\xa600DhApproximates the integral of the 1D function <code>f</code> over the \xe2\x80\xa600DfCompute the intersection of  <code>self</code> and <code>other</code>.00000BnConsumes the request, returning just the body.BoConsumes the response, returning just the body.AfReturns the root item.0BaCreates an iterator from a value.BoReturns an iterator over elements of the tuple.CnCreates a consuming iterator, that is, one that moves each \xe2\x80\xa6DeCreates an iterator over the entries of a <code>HashMap</code> in \xe2\x80\xa6011ChGets an owning iterator over the entries of the map, \xe2\x80\xa6DjGets an iterator for moving out the <code>BTreeSet</code>\xe2\x80\x99s contents \xe2\x80\xa6CkConsumes the list into an iterator yielding elements by \xe2\x80\xa6CmConsumes the deque into a front-to-back iterator yielding \xe2\x80\xa65ClReturns a consuming iterator over the possibly contained \xe2\x80\xa608788888866888888CdCreates a self-owned but semantically equivalent \xe2\x80\xa6BgConvert the inner value to an iterator.:BjReturns an iterator of values in this set.000DfConvert <code>self</code> into an iterator; at this point, no more \xe2\x80\xa6CnCreates a consuming iterator, that is, one that moves keys \xe2\x80\xa6======;;CiCreates a consuming iterator visiting all the keys in \xe2\x80\xa6CjCreates a consuming iterator visiting all the keys, in \xe2\x80\xa61EhIf <code>Left</code> or <code>Both</code>, return the left value. Otherwise, convert \xe2\x80\xa6BjConsume the image and returns a RGB image.CbA callback for closing the streams opened with \xe2\x80\xa6AkConfiguration of IPv4/IPv6.0CeChecks if this worker is still active by querying \xe2\x80\xa6Ce(closed) Whether the current window is closed or not.BgReturns true if the semaphore is closedClChecks if the channel has been closed. This happens when \xe2\x80\xa6AnChecks if a channel is closed.100EeReturns <code>true</code> if the associated <code>Receiver</code> handle has been \xe2\x80\xa62AdIs this a directory?CdReturns <code>true</code> if this is a dollar event.CmCheck if this is a wrapper for dotted keys, rather than a \xe2\x80\xa600CdReturns <code>true</code> if this is a finger event.DjReturns <code>true</code> if <code>self</code> is nether infinite nor NaN.0CiReturns true for each element if its value is neither \xe2\x80\xa600000DcReturns <code>true</code> if the address appears to be globally \xe2\x80\xa600C`(hidden) Whether the current document is hidden.DeReturns <code>true</code> if the current metadata revision is the \xe2\x80\xa6DkReturns <code>true</code> if this thread is the \xe2\x80\x9cleader thread\xe2\x80\x9d for \xe2\x80\xa6DiReturns <code>true</code> if this task from wait is the \xe2\x80\x9cleader task\xe2\x80\xa6CdReturns <code>true</code> if this is a locale event.BeChecks if the lock is currently held.EhReturns <code>true</code> if <code>self</code> is neither zero, infinite, subnormal, \xe2\x80\xa6088CkCheck if a buffer fulfills the requirements of a normal \xe2\x80\xa609999EfReturns <code>true</code> if the result is <code>Ok</code> and the value inside of \xe2\x80\xa6AhGets if a sink is pausedAiGets if a sound is pausedCbIndicates if the data source is in a paused state.Amif channel is paused, or not.AkIf music is paused, or not.EeReturns true if and only if <code>needle</code> is a prefix of <code>haystack</code>.CgReturns <code>true</code> if the fraction is proper \xe2\x80\xa6000CdReturns <code>true</code> if this is a render event.C`Returns whether the key event is a repeat event.Ch(isSecureContext) Whether the current context is secure.DkReturns <code>true</code> if this address is part of the Shared Address \xe2\x80\xa6ChReturns <code>true</code> if this file type is a socket.0CcChecks if the elements of this iterator are sorted.000000000000000000000CeReturns <code>true</code> if it\xe2\x80\x99s a perfect square.DfReturns <code>true</code> if it\xe2\x80\x99s a perfect square, false otherwise.EhReturns <code>true</code> if the set is a subset of another, i.e., <code>other</code>\xe2\x80\xa600EeReturns true if and only if <code>needle</code> is a suffix of <code>haystack</code>.CdReturns whether the object is considered to be true.00CiDetermine whether this is the unique reference to the \xe2\x80\xa6DdReturns <code>true</code> if the <code>AudioBuffer</code> is unused.CdReturns <code>true</code> if this is a window event.Cl&lt; zero if an output device, non-zero if a capture device.CkA pointer to a function which returns the name of a contextCjGets the size of a single element, in bytes. Important \xe2\x80\xa6CoIterator over generated IDs with <code>Relaxed</code> ordering.CmAn iterator visiting all elements which may match a hash. \xe2\x80\xa6CiWaits until one of the tasks in the set completes and \xe2\x80\xa6B`\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A JavaScript Number.0Ca\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A JavaScript unsigned 32-bit integer.0GaIf <code>Left</code>, return <code>Some</code> with the left value. If <code>Right</code> or <code>Both</code>\xe2\x80\xa6CgSort the k largest elements into a new iterator, in \xe2\x80\xa6000CgKeep unyielded elements in the source <code>Vec</code>.0Al1 -&gt; keyframe, 0-&gt; notCkSet by parser to 1 for key frames and 0 for non-key frames.DjSends the given <code>signal</code> to the process. If the signal doesn\xe2\x80\xa6CkReturn an iterator adaptor that flattens an iterator of \xe2\x80\xa6000ClCreate an iterator that merges elements of the contained \xe2\x80\xa6Ag&lt; Left/Right effect.Dk<code>item_size() * item_count()</code>. For contiguous arrays, this is \xe2\x80\xa6Bk&lt; Given len, final size is len*len_ratioCgReturns the number of bytes needed to encode in UTF-16.0000DnWhen <code>false</code>, <code>TransmuteFrom</code> is not implemented for \xe2\x80\xa600CkReturns the <strong>perceptual lightness</strong> (CIE L*).00DbReturns the <strong>gamma-encoded luma</strong> (non-linear Y\xe2\x80\xb2).00011001CoComputes the natural logarithm of <code>self</code> using a \xe2\x80\xa6BoFilesystem path on desktops or HTTP URL in WASMCkLoads a font from the given file with the given size in \xe2\x80\xa6BdLoads the reference into a register.0BfLoad data from memory into a register.0CfReturns the base 10 logarithm of an <code>f128</code>.00CkLog function which takes as priority DEBUG and category \xe2\x80\xa6CkLog function which takes as priority ERROR and category \xe2\x80\xa6CkThe long jump function for the generator, equivalent to \xe2\x80\xa6CjDescriptive name for the codec, meant to be more human \xe2\x80\xa6CdA more descriptive name for this codec. May be NULL.CeDescriptive name for the format, meant to be more \xe2\x80\xa60CiA longer, more descriptive, string identifying the codec.0BgReturns a reference to the lower bound.DjUse lowercase for the datetime separator and the <code>Z</code> (Zulu) \xe2\x80\xa6BiUse lowercase for unit designator labels.CbComputes luma from R\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 using Rec. 709 \xe2\x80\xa60DlReturns the <strong>linear luminance</strong> (physical light intensity, Y).00000BgCalculates the magnitude of the vector.Da&lt; Peak value; if negative, equivalent to 180 degrees extra \xe2\x80\xa6FcMaps <code>ControlFlow&lt;B, C&gt;</code> to <code>ControlFlow&lt;T, C&gt;</code> by applying a \xe2\x80\xa6CnMaps <code>color</code> to the closest color in the color map.0G`Maps <code>ErrMode&lt;InputError&lt;T&gt;&gt;</code> to <code>ErrMode&lt;InputError&lt;U&gt;&gt;</code> with \xe2\x80\xa6AhTranslate the input type0EgApply the function <code>f</code> on the value in the <code>Right</code> variant if \xe2\x80\xa6EmApply the function <code>f</code> on the value <code>b</code> in <code>Right(b)</code> or \xe2\x80\xa6EfSplits a <code>Ref</code> into multiple <code>Ref</code>s for different components \xe2\x80\xa6EaSplits a <code>RefMut</code> into multiple <code>RefMut</code>s for different \xe2\x80\xa6ClCreates an iterator that both yields elements based on a \xe2\x80\xa6000000000000000000000ChA SIMD mask with 16 elements for vectors with 16-bit \xe2\x80\xa600000ChA SIMD mask with 32 elements for vectors with 16-bit \xe2\x80\xa600000ChA SIMD mask with 64 elements for vectors with 16-bit \xe2\x80\xa600000ChA SIMD mask with 16 elements for vectors with 32-bit \xe2\x80\xa600000ChA SIMD mask with 32 elements for vectors with 32-bit \xe2\x80\xa600000ChA SIMD mask with 64 elements for vectors with 32-bit \xe2\x80\xa600000ChA SIMD mask with 16 elements for vectors with 64-bit \xe2\x80\xa600000ChA SIMD mask with 32 elements for vectors with 64-bit \xe2\x80\xa600000ChA SIMD mask with 64 elements for vectors with 64-bit \xe2\x80\xa600000ClCreates settings optimized for mastering and final audio \xe2\x80\xa6CkThe maximum allowed sum of allocations allocated by the \xe2\x80\xa60BfReturns the current maximum log level.0B`Lanewise <code>max(a, b)</code>.000Bkmaximum quantizer difference between framesBmThe maximum of two numbers using total order.0DjReturns the maximum between itself and <code>other</code>, using total \xe2\x80\xa6CnThe maximum size of frames in this hw_frames_ctx. (INT_MAX \xe2\x80\xa6CmAn optional rightmost boundary on the text region. A line \xe2\x80\xa6AeMaximizes the window.DfReturns the maximum (IEEE 754-2008 maxNum) of two <code>f16</code> \xe2\x80\xa600DfReturns the maximum (IEEE 754-2008 maxNum) of two <code>f32</code> \xe2\x80\xa600DfReturns the maximum (IEEE 754-2008 maxNum) of two <code>f64</code> \xe2\x80\xa600DaSets the <code>mean</code> field to <code>SixelMean::Auto</code>.Ak&lt; mime_type, when known.ClComma-separated list of mime types. It is used check for \xe2\x80\xa6BhAdd a MIME/Media-type <code>Hint</code>.AnSet the mime type of the body.CfThe mime-type of the <code>content-type</code> header.BjGet this bump arena\xe2\x80\x99s minimum alignment.B`Lanewise <code>min(a, b)</code>.000BmThe minimum of two numbers using total order.0DjReturns the minimum between itself and <code>other</code>, using total \xe2\x80\xa6CnThe minimum size of frames in this hw_frames_ctx. (Zero if \xe2\x80\xa6ClMinimizes the window (minimizes the window to its iconic \xe2\x80\xa6CmReturn the minimum and maximum element of an iterator, as \xe2\x80\xa6000CjReturns minimum and maximum values with respect to the \xe2\x80\xa60DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa61DfReturns the minimum (IEEE 754-2008 minNum) of two <code>f16</code> \xe2\x80\xa600DfReturns the minimum (IEEE 754-2008 minNum) of two <code>f32</code> \xe2\x80\xa600DfReturns the minimum (IEEE 754-2008 minNum) of two <code>f64</code> \xe2\x80\xa600BeML-KEM-1024 as specified in FIPS-203.CaThe key modifiers active when the event occurred.AiAdditional key modifiers.CkGlobal values that parameters (like volume and playback \xe2\x80\xa6Clreturns the bit mask for each high bit set in the vector \xe2\x80\xa60DdMoves the cursor to the next element of the <code>LinkedList</code>.0DhMoves the cursor to the previous element of the <code>LinkedList</code>.0AlLanewise <code>a * b</code>.0ChLanewise <code>a * b</code> with <code>f64</code> lanes.0Dimultiplies two <code>i16x8</code> and returns the result as a widened \xe2\x80\xa6ClMultiplies corresponding 32 bit lanes and returns the 64 \xe2\x80\xa6Clmultiplies two u16x8 and returns the result as a widened \xe2\x80\xa61CgAn iterator adaptor that allows the user to peek at \xe2\x80\xa60000DkCast <code>A</code> into <code>B</code> if infalliable, or fail to compile.CiReturns true if the Surface needs to be locked before \xe2\x80\xa6DbInline assembly used in combination with <code>#[naked]</code> \xe2\x80\xa600BlReturns the time code, up to seconds, as \xe2\x80\xa6Cm&lt; number of colors in pict, undefined when pict is not setCb&lt; number of frames in this stream if known or 0BlThe number of entries in the list of inputs.Ai&lt; number of input padsAnNumber of layers in the frame.AnNumber of planes in the layer.AoNumber of ranges per component.BoTell if the requested socket need TLS wrapping.DgReturns a seeded <code>XorShift128+</code> generator from the given \xe2\x80\xa6DiReturns a seeded <code>Xoroshiro128pp</code> generator from the given \xe2\x80\xa6DfReturns a seeded <code>XorShift128</code> generator from the given \xe2\x80\xa6BkCreates a new agent by cloning this config.DiReturns a new <code>Array</code> from the given <code>boxed_array</code>.C`Constructs a new (empty) stack, in compile-time.CmCreates a non-value integer, automatically converting the \xe2\x80\xa600000000000CjCreates a dynamic image backed by a buffer of gray pixels.CiCreates a dynamic image backed by a buffer of RGB pixels.CjCreates a dynamic image backed by a buffer of RGBA pixels.CkCreates a normalized right positive angle at 90 degrees \xe2\x80\xa6ChCreates a normalized right positive angle at 90 degrees.0AjCreates a new value entry.ChGenerates the next random value split into 2 u16 values.CfRemoves and returns an element from the end of the \xe2\x80\xa6B`Iterates over shared references.1111111CePerforms the next search step starting from the back.02222220222222200BkReturns the least number smaller than self.BdReturns the next line in the stream.CcReturns the next u128, advancing the state 4 times.AlDisable all decoding limits.AcDisable all limits.Bd<code>no_std_io</code> modificationsB`Non-poisoning synchronous locks.CiReturns the normalized vector, as a <em>unit vector</em>.CcReturns the angle normalized (no-op for integer \xe2\x80\xa6CnReturns the angle normalized to the non-inclusive range -1 \xe2\x80\xa61BmReturns the current timestamp in nanoseconds.00BnRetrieve the number of balls for this joystickClReturns the number of items in the major dimension based \xe2\x80\xa60ClReturns the number of items in the minor dimension based \xe2\x80\xa60CiReturns the numerator (the first number of the sequence).000CeAn unsigned integer which is the numerator of the \xe2\x80\xa6Bd<code>object-id</code> modificationsDdGet the offset for the number of <code>tokens</code> into the stream0Dh<code>core</code> Expands to the offset in bytes of a field from the \xe2\x80\xa60CfExpands to the offset in bytes of a field from the \xe2\x80\xa6EdFind the offset in bytes of the given <code>$field</code> of <code>$Type</code>. \xe2\x80\xa611CaSets the background color to <code>Yellow</code>.CmCreates an iterator that lazily generates a value exactly \xe2\x80\xa60000ClEnsures a value is in the entry by inserting the default \xe2\x80\xa600CjEnsures a value is in the entry by inserting if it was \xe2\x80\xa6011EgSets <code>self</code> to the given item if <code>self</code> is none and returns a \xe2\x80\xa62211AmPrints to the standard error.0C`Duplicates the second back element, at the back.BaClears the stack in compile-time.CiDuplicates the next of stack pair of elements to the top.CfSwaps the top two pair stack elements in compile-time.CjDuplicates the top pair of elements before the next of \xe2\x80\xa6Bap block masking (0-&gt; disabled)CjReturn an iterator adaptor that pads the sequence to a \xe2\x80\xa6000CkPanics the current thread with the given message as the \xe2\x80\xa6CgThe entry point for panicking with a formatted message.0CnDetermines whether the current thread is unwinding because \xe2\x80\xa600AfPanic support for core01CgReturns a parallel iterator over the bytes of a string.0ChReturns a parallel iterator over the characters of a \xe2\x80\xa60CgReturns a draining parallel iterator over an entire \xe2\x80\xa6ClReturns a draining parallel iterator over a range of the \xe2\x80\xa610CkReturns a parallel iterator over the lines of a string, \xe2\x80\xa60CkReturns a parallel iterator over subslices separated by \xe2\x80\xa60CnReturns a parallel iterator over substrings separated by a \xe2\x80\xa60CnReturns the OS-assigned process identifier associated with \xe2\x80\xa6CgConsumes an iterator, creating two collections from it.000000000000000000000DkPartition a sequence using predicate <code>pred</code> so that elements \xe2\x80\xa6CnPartitions the items of a parallel iterator into a pair of \xe2\x80\xa60BoReturns a shared reference to the back element.CmReceives a single datagram message on the socket, without \xe2\x80\xa60ChReturns a reference to the key and value of the next \xe2\x80\xa600CnReturns a reference to the next element without moving the \xe2\x80\xa60CjReturns a reference to next element without moving the \xe2\x80\xa6BhReturns a reference to the next element.0ClReturns a reference to the key and value of the previous \xe2\x80\xa600CnReturns a reference to the previous element without moving \xe2\x80\xa600BlReturns a reference to the previous element.0CmReturns the socket address of the remote peer of this TCP \xe2\x80\xa6CmReturns the socket address of the remote peer this socket \xe2\x80\xa6BlReturns the address of this socket\xe2\x80\x99s peer.CiReturns the socket address of the remote half of this \xe2\x80\xa6CfGets the peer credentials for this Unix domain socket.Bd<code>pengyhash</code> modificationsAoThe perimeter of the 2d extent.0AjPicture type of the frame.DhReturns a polling iterator that calls <code>poll_event()</code>. The \xe2\x80\xa6CeAttempts to pull out the next value of this async \xe2\x80\xa600DgAttempts to read from the <code>AsyncRead</code> into <code>buf</code>.CbPolls to receive the next message on this channel.0CkReturns an error that occurred while decoding audio, if \xe2\x80\xa6CgReturns the oldest available stream error in the queue.CmRemoves and returns the first element in the map. The key \xe2\x80\xa6CmRemoves the first element from the set and returns it, if \xe2\x80\xa6AgPops the front element.BlRemoves an item from the front of the queue.DiRemoves the first element and returns it, or <code>None</code> if the \xe2\x80\xa60CmRemoves the first element from the cursor\xe2\x80\x99s parent list \xe2\x80\xa6CfGet the name of a specified MIDI input or output port.BlGet the name of a specified MIDI input port.BmGet the name of a specified MIDI output port.CmReturn an iterator adaptor that yields the indices of all \xe2\x80\xa6000CnSearches for items in the parallel iterator that match the \xe2\x80\xa60CnReturns an iterator of time zone transitions preceding the \xe2\x80\xa6ChHow much did we scroll in X, with floating precision \xe2\x80\xa6ChHow much did we scroll in Y, with floating precision \xe2\x80\xa6CjReturns the optionally specified precision for numeric \xe2\x80\xa6AnSets or removes the precision.CiThe precision to use when writing fractional unit values.CjSet the precision to use for formatting the fractional \xe2\x80\xa6CiReturn the preferred directory for the application to \xe2\x80\xa6BoConfigure the prefilter setting for the finder.CbFinds the 0-indexed <code>nth</code> prime number.0ClThis module reexports the primitive types to allow usage \xe2\x80\xa600D`The most efficient print method, exclusive for <code>std</code>.ClFormat private data. This is an AVOptions-enabled struct \xe2\x80\xa6Cd&lt; size of private data to allocate for the filterCgMaximum number of bytes read from input in order to \xe2\x80\xa6AiReturns the process list.CfReturns the value of the \xe2\x80\x9cprocesses\xe2\x80\x9d refresh kind.CnPushes a new <code>element</code> to the back of the destaque.BgPushes a value to the end of the queue.BhAdds an element to the back of the list.BlAppends an element to the back of the deque.CkAppends an element to the back of the cursor\xe2\x80\x99s parent \xe2\x80\xa6CfPut a pixel at location (x, y). Indexed from top left.BlPuts a pixel at location <code>(x, y)</code>CnAppends data to the buffer, advancing the written position \xe2\x80\xa6Co&lt; amount of qscale change between easy &amp; hard scenes \xe2\x80\xa6CjAdd a query parameter to the URL without percent-encoding.C`Remove an element from the (front of the) queue.0ChAn implementation of the Rabin-Karp substring search \xe2\x80\xa6ClGenerates a random <code>u8</code> value that may not be \xe2\x80\xa6DiRandomizes the contents of a given byte slice <code>text</code> using \xe2\x80\xa6CeConstructs a mutable double-ended iterator over a \xe2\x80\xa6CiCreates an iterator that covers the specified mutable \xe2\x80\xa6EhReturns an exclusive subslice from <code>start</code> (inclusive) to <code>end</code>\xe2\x80\xa6CnRetrieves the layout metrics and rasterized bitmap for the \xe2\x80\xa6CiA heuristic for if the glpyh this was classified from \xe2\x80\xa6An&lt; Rate conversion incrementCiRead a single bit as a boolean value or returns an error.0ClReads a single byte from the stream and returns it or an \xe2\x80\xa6ClReads an signed 128-bit integer in big-endian order from \xe2\x80\xa6CmLocks this handle and reads a line of input, appending it \xe2\x80\xa6DkReads all bytes until a newline (the <code>0xA</code> byte) is reached, \xe2\x80\xa60000CnReads all bytes until a newline (the 0xA byte) is reached, \xe2\x80\xa6CkReads a symbolic link, returning the file that the link \xe2\x80\xa6000CeStart/resume playing - only meaningful if using a \xe2\x80\xa6BjDecode a rectangular section of the image.CjSeek to a given timestamp in stream with the specified \xe2\x80\xa6CnSeek to a given timestamp relative to the frames in stream \xe2\x80\xa6CnReads an unsigned 128-bit integer in big-endian order from \xe2\x80\xa6CnThe 64-bit libc on Solaris and illumos only has readdir_r. \xe2\x80\xa6CkGet the shared secret intended to be used for receiving \xe2\x80\xa6CmIndicates that directories should be created recursively, \xe2\x80\xa6BlMax duration for receving the response body.ChReceives a single datagram message on the socket. On \xe2\x80\xa6AnReceives data from the socket.CjReceives the next values for this receiver and extends \xe2\x80\xa60CfReturns the cumulative bitwise \xe2\x80\x9cor\xe2\x80\x9d across the \xe2\x80\xa600000000000CaObtains a reference to the value of this capsule.0CkReturns the remainder of the original slice that is not \xe2\x80\xa60BfReturns remainder of the split string.000000C`Returns the remaining lines of the split string.BeReturns remainder of the split string2CgReturns the remainder of the range being iterated over.00CjReturn the remainder of the original slice that is not \xe2\x80\xa6000BoReturns the remaining elements in the iterator.00ClReturns the number of bytes at the end of the slice that \xe2\x80\xa6B`Sets the window to be resizable.BaSets the resonance of the filter.AlThe resonance of the filter.CmResumes playback at the given start time and fades in the \xe2\x80\xa6000CnLike <code>rfind</code>, but accepts and returns raw pointers.000000000Cm&lt; Level when joystick is to the positive side; max 0xFFFF.CaReturns the ceiled integer <code>nth</code> root.0CjRotates all the destaqued elements one place to the right.AnRotate this image 180 degrees.BfRotate an image 180 degrees clockwise.BhRotate this image 270 degrees clockwise.BfRotate an image 270 degrees clockwise.CkRounds each lane into an integer. This saturates out of \xe2\x80\xa60DkRound <code>x</code> to the nearest integer, breaking ties toward even. \xe2\x80\xa6DhReturns the nearest integer to an <code>f128</code>. Rounds half-way \xe2\x80\xa600CjSearches for an element in an iterator from the right, \xe2\x80\xa6000000000000000000000CkRuns a future to completion on the local set, returning \xe2\x80\xa6BeThe 2015 version of the core prelude.0ChThe 2015 version of the prelude of The Rust Standard \xe2\x80\xa6BeThe 2018 version of the core prelude.0ChThe 2018 version of the prelude of The Rust Standard \xe2\x80\xa6BeThe 2021 version of the core prelude.0ChThe 2021 version of the prelude of The Rust Standard \xe2\x80\xa6BeThe 2024 version of the core prelude.0ChThe 2024 version of the prelude of The Rust Standard \xe2\x80\xa6FoMaps a <code>Result&lt;S, E&gt;</code> to a <code>Result&lt;S, F&gt;</code> by applying the <code>op</code> \xe2\x80\xa6DgReplaces the existing <code>state</code> with a <code>new_state</code>.ChWraps the <code>state</code> field into <code>Ok</code>.CdReturns an iterator all scancodes with a boolean \xe2\x80\xa6BcSorts a slice using selection sort.ClMust be set to the size of this data structure (that is, \xe2\x80\xa6DgReturns the <code>Semaphore</code> from which this permit was acquired.CiMax duration for sending a request body (if there is one)AgSend form encoded data.Ea<code>Accumulate</code> the output of a parser, interleaved with <code>sep</code>CjUse the given ASCII character to separate the date and \xe2\x80\xa6CeSerialize this value into the given Serde serializer.0EaSet the <code>ascii</code> flag of the <code>PyASCIIObject</code> state bitfield.DjSet the cause associated with the exception, pass <code>None</code> to \xe2\x80\xa6BkSets how much distortion should be applied.BmProvide the encoded TOML the error applies toCiSets the number of bytes that can be read before this \xe2\x80\xa60DeSets the args into an <code>m128d</code>, first arg is the high lane.0CjSet <code>f64</code> args into an <code>m256d</code> lane.0BgSet the month on this broken down time.E`A copy of <code>self</code> setting the bits that are set in <code>other</code>.00BgSets the phase of the LFO (in radians).EcSets the bits in <code>self</code> to 1, from the <code>[start..=end]</code> range.00000000000CoGet a copy of <code>self</code> with bits set to 1 from the \xe2\x80\xa600BlSets how much the signal will be compressed.EaSet the <code>ready</code> flag of the <code>PyASCIIObject</code> state bitfield.ClSets the position of the right side of this rectangle to \xe2\x80\xa60CkSets the drawing scale for rendering on the current target.FdAssigns the sequence <code>seq</code> to the slice of <code>self</code> from <code>low</code> to \xe2\x80\xa60FnAssigns the sequence <code>v</code> to the slice of <code>self</code> from <code>i1</code> to <code>i2</code>.10AlSets the speed of the clock.ClChanges the play speed of the sound. Does not adjust the \xe2\x80\xa6AoChanges the speed of the sound.BlSets the current termios <code>state</code>.AjUpdates the current state.AnSets the font\xe2\x80\x99s style flags.BnChanges the timestamps of the underlying file.AjSet the title of a window.ChSets the width of this rectangle to the given value, \xe2\x80\xa60CjShrinks the capacity of the map with a lower limit. It \xe2\x80\xa6BeDiscards capacity with a lower bound.CjShrinks the capacity of the set with a lower limit. It \xe2\x80\xa6DeShrinks the capacity of the <code>OsString</code> with a lower bound.CeShrinks the capacity of the deque with a lower bound.EcInvokes <code>shrink_to</code> on the underlying instance of <code>OsString</code>.CfShrinks the capacity of the vector with a lower bound.DdShrinks the capacity of this <code>String</code> with a lower bound.ChShrink the image to the minimum of current and given \xe2\x80\xa60AgShrink the inner image.03ClShrinks the capacity of the table with a lower limit. It \xe2\x80\xa6:8CfAdditional packet data that can be provided by the \xe2\x80\xa6CjAn array of side data that applies to the whole stream \xe2\x80\xa6CdDetermines if the <code>+</code> flag was specified.BhNumerically casts a vector, elementwise.00CmRounds up each element to the next highest integer-valued \xe2\x80\xa600BiCounts the leading zeros of each element.00BjCounts the trailing zeros of each element.00C`Returns absolute value of a vector, elementwise.00Bj<code>T</code> must be a vector of floats.00000000C`Returns the maximum of two vectors, elementwise.00C`Returns the minimum of two vectors, elementwise.00222CkReturns the bounds on the remaining length of the iterator.000000000000000000000CkReturns the bounds on the remaining length of the async \xe2\x80\xa6BkProvides size hints from the inner limiter.BhReturns the size hint for this iterator.CmReturns the number of elements remaining in the sequence, \xe2\x80\xa6CjReturns the number of entries remaining in the map, if \xe2\x80\xa644BmSkip IDCT/dequantization for selected frames.DhAdds a method <code>Skippable::skip</code> for skipping this source. \xe2\x80\xa60CnCalculates the input length, as indicated by its name, and \xe2\x80\xa6BnCreates a new symbolic link on the filesystem.CeSort all iterator elements into a new iterator in \xe2\x80\xa6000Dc<code>core</code> Signals the processor that it is running in a \xe2\x80\xa60ClEmits a machine instruction to signal the processor that \xe2\x80\xa6000DbSets the <code>split</code> field to <code>SixelSplit::Lum</code>.CjSplits the underlying slice at the cursor position and \xe2\x80\xa6ClSplits the collection into two at the given key. Returns \xe2\x80\xa6CnSplits the collection into two at the value. Returns a new \xe2\x80\xa6ChSplits the list into two at the given index. Returns \xe2\x80\xa6BmSplits the deque into two at the given index.CbSplits the collection into two at the given index.CcSplits the string into two at the given byte index.11BnSplits the string into two at the given index.BgReturns the ceiled integer square root.0ClThe square root calculated using the fast inverse square \xe2\x80\xa60Cj$ \\sqrt{x} $ the square root calculated using the fast \xe2\x80\xa6AnLanewise <code>sqrt(a)</code>.0CeLanewise <code>sqrt</code> on <code>f64</code> lanes.CeLanewise <code>sqrt</code> on <code>f32</code> lanes.B`Number of 512B blocks allocated.0CgReturns the number of blocks allocated to the file, \xe2\x80\xa6Bd<code>stack_dst</code> modificationsBoRemove an element from the (back of the) stack.0Bgpass1 encoding statistics output bufferAjMakes the sound stoppable.0BjDecodes data gradually from an audio file.BjStreaming AEAD based on XChaCha20Poly1305.0Bl<code>core</code> Stringifies its arguments.0AjStringifies its arguments.00000000000000000ClReturns a mutable reference to the style, so that it can \xe2\x80\xa6CnReturns a mutable subimage that is a view into this image. \xe2\x80\xa6BgCreate a mutable sub-view of the image.AlLanewise <code>a - b</code>.0ChLanewise <code>a - b</code> with <code>f64</code> lanes.0DkExtracts a <code>(D-1)x(D-1)</code> submatrix by removing the given row \xe2\x80\xa60000000DgCreates a new <code>Receiver</code> handle that will receive values \xe2\x80\xa6DjCreates a new <code>Receiver</code> connected to this <code>Sender</code>.BfReturns this context\xe2\x80\x99s video system.AkThe supported strict limitsEhAsserts both the <code>state</code> and <code>value</code> matches the corresponding \xe2\x80\xa6CnThe pixel format identifying the actual data layout of the \xe2\x80\xa6ChSwaps the last two elements at the back of the destaque.BbSwaps the front and back elements.AdAllocate SwrContext.CjCloses the context so that swr_is_initialized() returns 0.CkScale the image slice in srcSlice and put the resulting \xe2\x80\xa6AhSymphonia decoders typesDkThis function is similar to <code>sync_all</code>, except that it might \xe2\x80\xa6AiPerforms a close syscall.AiPerforms a fcntl syscall.AjPerforms an fstat syscall.AjPerforms an ioctl syscall.AjPerforms an lseek syscall.AiPerforms a pipe2 syscall.AiPerforms a write syscall.DiReturns an iterator over the substrings of <code>self</code> that are \xe2\x80\xa6CfUnregisters the current panic hook, returns it and \xe2\x80\xa6CfUnregisters the current panic hook and returns it, \xe2\x80\xa6CfReturns the last <code>n</code> elements of the slice.ClRecognize the longest input slice (if any) till a member \xe2\x80\xa6EbAn implementation detail of the <code>#[test]</code> and <code>#[bench]</code> \xe2\x80\xa600000000000000ClUsed for stencil testing with test_ref and test_mask: if \xe2\x80\xa60AeDefault value: all 1s0Bn&lt; Normalized texture coordinates, if neededBlChains the ordering with the given function.CgSets the volume above which volume will start to be \xe2\x80\xa6ClThe volume above which volume will start to be decreased \xe2\x80\xa6CeLevel where limiting begins (dBFS, must be negative).ChScale this image down to fit within a specific size. \xe2\x80\xa6CeResize the supplied image to the specific dimensions.CnTime base for the timestamps in this frame. In the future, \xe2\x80\xa6CnThis is the fundamental unit of time (in seconds) in terms \xe2\x80\xa6CnDefine the time base used by the PTS of the frames/samples \xe2\x80\xa6CkThe timebase to be used for the timestamps on the input \xe2\x80\xa6CjTime base of the packet\xe2\x80\x99s timestamps. In the future, \xe2\x80\xa63Cn&lt; time base in which the start/end timestamps are specifiedAkThe timebase of the stream.D`Returns the time zone attached to this <code>Zoned</code> value.CiReturns a reference to the time zone that was used to \xe2\x80\xa6DbReturns <code>true</code> if the wait was known to have timed out.BiThe timestamp of when the event occurred.0Cn&lt; Timestamp in AVStream.time_base units, preferably the \xe2\x80\xa6BgReturns when button state last changed.BeReturns when axis value last changed.CkReturns the precise instant in time referred to by this \xe2\x80\xa6CeReturns the timestamp at which this transition began.Cd&lt; In milliseconds, populated using SDL_GetTicks()000000000000000000000000000000ChConverts this <code>char7</code> to <code>char16</code>.ChConverts this <code>char8</code> to <code>char16</code>.DgConverts the angle to a <code>custom_unit</code> which represents a \xe2\x80\xa600EaConverts the current stack index size <code>IDX</code> to a <code>NEW_IDX</code>.0CmReturns a JavaScript <code>KeyboardEvent</code> semantic key.00DdReturns a JavaScript <code>KeyboardEvent</code> semantic key and \xe2\x80\xa6DdReturns a JavaScript <code>KeyboardEvent</code> semantic key + a \xe2\x80\xa6BmReturns a copy of this image as a Luma image.CnReturns the offset corresponding to the given timestamp in \xe2\x80\xa6BmReturns a copy of this image as an RGB image.CkConvert to Rgba16 by scaling each component proportionally.BhConvert to <code>Rgba&lt;u16&gt;</code>.01BnReturns a copy of this image as an RGBA image.CbConverts the given value to a <code>String</code>.00ClConvert a <code>Zoned</code> to an RFC 2822 datetime string.CnFormat this broken down time using the format string given \xe2\x80\xa6BfConvert the raw data to a Rust string.CgSerialize the given data structure as a String of TOML.4444444DgCopies <code>self</code> into a new <code>Vec</code> with an allocator.ElConverts this <code>Point</code> to a <code>Vector</code>, keeping <code>self</code> intact.BoReturns the top-right corner of this rectangle.0DhA (<code>const</code>) port of <code>f64::</code><code>total_cmp</code>.DhA (<code>const</code>) port of <code>f32::</code><code>total_cmp</code>.BoReturns the traceback of this exception object.CkTransforms each element in the chunk using the provided \xe2\x80\xa6CkTransforms every written sample in the signal using the \xe2\x80\xa6De<code>core</code> Reinterprets the bits of a value of one type as \xe2\x80\xa60CkReinterprets the bits of a value of one type as another \xe2\x80\xa60CmTransmutes a <code>Src</code> value into a <code>Self</code>.111100CnGet the shared secret intended to be used for transporting \xe2\x80\xa6AhHTTP/1.1 data transport.BgReturns the transposed matrix (C \xc3\x97 R).FdTransposes a <code>MaybeUninit&lt;[T; N]&gt;</code> into a <code>[MaybeUninit&lt;T&gt;; N]</code>\xe2\x80\xa6GbTransposes an <code>Option</code> of a <code>Result</code> into a <code>Result</code> of an <code>Option</code>\xe2\x80\xa6GbTransposes a <code>Result</code> of an <code>Option</code> into an <code>Option</code> of a <code>Result</code>\xe2\x80\xa6DcTranspose matrix of 8x8 <code>f32</code> matrix. Currently only \xe2\x80\xa6DcTranspose matrix of 4x4 <code>f32</code> matrix. Currently only \xe2\x80\xa6Bbtranspose matrix of 8x8 i16 matrixDcTranspose matrix of 4x4 <code>i32</code> matrix. Currently only \xe2\x80\xa6DcTranspose matrix of 8x8 <code>i32</code> matrix. Currently only \xe2\x80\xa6DcTranspose matrix of 4x4 <code>u32</code> matrix. Currently only \xe2\x80\xa6CnTruncates each lane into an integer. This saturates out of \xe2\x80\xa60DeIs <code>true</code> if during a recv operation the ancillary was \xe2\x80\xa6CaReturns the integer part of an <code>f128</code>.00DeTry to allocate an object in this <code>Bump</code> and return an \xe2\x80\xa6DaCreates a new <code>File</code> instance that shares the same \xe2\x80\xa6CnCreates a new independently owned handle to the underlying \xe2\x80\xa600DgCreates a new <code>PipeReader</code> instance that shares the same \xe2\x80\xa6DgCreates a new <code>PipeWriter</code> instance that shares the same \xe2\x80\xa6222DdCreates a new <code>OwnedFd</code> instance that shares the same \xe2\x80\xa6CmGets the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa6CjSet the number of hours on this span. The value may be \xe2\x80\xa6CfPerforms bounds checking of a range without panicking.0000DhThis is the reverse version of <code>Iterator::try_fold()</code>: it \xe2\x80\xa6000000000000000000000CjSet the number of weeks on this span. The value may be \xe2\x80\xa6DfAttempts to lock this <code>RwLock</code> with exclusive write access.DeAttempts to acquire this <code>RwLock</code> with exclusive write \xe2\x80\xa61CjSet the number of years on this span. The value may be \xe2\x80\xa6CgDuplicates the back element, before the second back \xe2\x80\xa6DmReturns a deterministic hash of the <code>TypeId</code> of <code>Self</code>.00BkReturns the type name of <code>self</code>.00BmReturns the name of a type as a string slice.CiGets a static string slice containing the name of a type.10AnText description of value type021AdTypestate variables.DiProvides the <code>assert_unsafe_precondition</code> macro as well as \xe2\x80\xa6CiReturns whether we should perform some UB-checking at \xe2\x80\xa6100EcCreates an unbounded interval $(-\xe2\x88\x9e, \xe2\x88\x9e)$ <code>..</code> <code>RangeFull</code>.BjCreate a channel with no maximum capacity.AiSets the underline color.CkUndo the effect of leaked guards on the borrow state of \xe2\x80\xa6CmReturn an iterator adaptor that filters out elements that \xe2\x80\xa6000DjReturns a copy of <code>self</code> setting the bit at <code>index</code>.00DgPerforms an unsharpen mask on this image. <code>sigma</code> is the \xe2\x80\xa6DkPerforms an unsharpen mask on the supplied image. <code>sigma</code> is \xe2\x80\xa6DdReturns the contained <code>Some</code> value or a provided default.DbReturns the contained <code>Ok</code> value or a provided default.BgReturns a reference to the upper bound.BiReturns the amount of used SWAP in bytes.CmAdditional user data to associate with glyphs produced by \xe2\x80\xa6ClCustom user data associated with the text styled used to \xe2\x80\xa6AmThe name of the current user.0FoMaps a <code>Result&lt;V, E&gt;</code> to a <code>Result&lt;V, F&gt;</code> by applying the <code>op</code> \xe2\x80\xa6CnReplaces the <code>value</code> with a <code>new_value</code>.ChWraps the <code>value</code> field into <code>Ok</code>.BgReturns the signal value as an integer.BdGet the length of the value in bits.CnValue range. For string ranges this represents the min/max \xe2\x80\xa60BfReturns the signal value as a pointer.DcReturns the value as <code>bool</code> (returns <code>true</code>).DdReturns the value as <code>bool</code> (returns <code>false</code>).CkThe delay between the time the packet this structure is \xe2\x80\xa6ClA double-ended queue (deque) implemented with a growable \xe2\x80\xa6ChThis module contains the parallel iterator types for \xe2\x80\xa611CjReturns the vendor ID, as assigned by the USB-IF, when \xe2\x80\xa6Bg&lt; the USB vendor ID of this joystickA`Device Vendor IDChReturn the USB vendor ID of an opened controller, if \xe2\x80\xa6AnReturns the CPU\xe2\x80\x99s vendor id.ClIf verification is enabled and supported by the decoder, \xe2\x80\xa6BgThe input contains an <code>f32</code>.BgThe input contains an <code>f64</code>.BgThe input contains an <code>i16</code>.BgThe input contains an <code>i32</code>.BgThe input contains an <code>i64</code>.BcThe input contains a key-value map.CnDocument tree traversal to mutate an exclusive borrow of a \xe2\x80\xa6BjThe input contains a sequence of elements.CnThe input contains a string. The lifetime of the string is \xe2\x80\xa6BfThe input contains a <code>u16</code>.BfThe input contains a <code>u32</code>.BfThe input contains a <code>u64</code>.D`Returns a waiting iterator that calls <code>wait_event()</code>.CmCreate a tree like parallel iterator from an initial root \xe2\x80\xa6ClA UTC timestamp, in microseconds, since Unix epoch (e.g, \xe2\x80\xa6FcReturns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> would awake \xe2\x80\xa6FaReturns <code>true</code> if this <code>LocalWaker</code> and another <code>LocalWaker</code> \xe2\x80\xa6ChCreates a new pointer with the given address and the \xe2\x80\xa6BmCreates a new pointer with the given address.00000000000CdReturns self with the given inner <code>bits</code>.00CmChange the case sensitivity while keeping everything else \xe2\x80\xa6ChCopies the <code>va_list</code> at the current location.BeSets the input data source to decode.CjSet the date on this <code>Pieces</code> to the one given.BcSets a format hint for the decoder.FdCreates a new <code>Mismatch</code> with the specified <code>need</code>, <code>have</code>, and \xe2\x80\xa6DcSets the value of the \xe2\x80\x9ckind\xe2\x80\x9d refresh kind to <code>true</code>.CfLocks a surface so that the pixels can be directly \xe2\x80\xa6DoLocks the texture for <strong>write-only</strong> pixel access. The texture \xe2\x80\xa6BlCreate a new prefilter using the pair given.CkCreate a new \xe2\x80\x9cpacked pair\xe2\x80\x9d finder using the pair of \xe2\x80\xa60BnSets the value of the \xe2\x80\x9croot\xe2\x80\x9d refresh kind.CiReturns a new Fx hasher with the given <code>seed</code>.00ClReturns a new pengy hasher with the given <code>seed</code>.ClRoutes this track to the given send track with the given \xe2\x80\xa60CfReturns a new empty sixel builder with the given size.CfProduce the location of consumed input with the output0DcSets the value of the \xe2\x80\x9cswap\xe2\x80\x9d refresh kind to <code>true</code>.CjSet the time on this <code>Pieces</code> to the one given.BnSets the value of the \xe2\x80\x9cuser\xe2\x80\x9d refresh kind.CdAttempts to write an entire buffer into this writer.00000CnWrites a buffer into this writer, advancing the buffer\xe2\x80\x99s \xe2\x80\xa6ClWrites an 32-bit floating point type in big-endian order \xe2\x80\xa6ClWrites an 64-bit floating point type in big-endian order \xe2\x80\xa6CmWrites a formatted string into this writer, returning any \xe2\x80\xa60DhGlue for usage of the <code>write!</code> macro with implementors of \xe2\x80\xa600011100000CbWrites a single <code>i16</code> into this hasher.00000CmWrites a signed 16-bit integer in big-endian order to the \xe2\x80\xa6CbWrites a single <code>i32</code> into this hasher.00000CmWrites a signed 32-bit integer in big-endian order to the \xe2\x80\xa6CbWrites a single <code>i64</code> into this hasher.00000CnWrites an signed 64-bit integer in big-endian order to the \xe2\x80\xa6CmWrites a string slice into this writer, returning whether \xe2\x80\xa6CnWrites some data to the underlying buffer contained within \xe2\x80\xa6CbWrites a single <code>str</code> into this hasher.000002222ClWrite the given string to this writer, returning whether \xe2\x80\xa633CbWrites a single <code>u16</code> into this hasher.00000ClWrites an unsigned 16-bit integer in big-endian order to \xe2\x80\xa6CbWrites a single <code>u32</code> into this hasher.00000ClWrites an unsigned 32-bit integer in big-endian order to \xe2\x80\xa6CbWrites a single <code>u64</code> into this hasher.00000ClWrites an unsigned 64-bit integer in big-endian order to \xe2\x80\xa6ix2APIC IDCex2APIC ID the current logical processor. (Bits 31-00)CiXChaCha20 as specified in the draft-irtf-cfrg-xchacha-03.Ak&lt; Wayland xdg popup role0CfReturns the zoned datetime with a date immediately \xe2\x80\xa6C`Returns the date immediately preceding this one.CjReturns the datetime with a date immediately preceding \xe2\x80\xa6CmReturns the ISO 8601 week date immediately preceding this \xe2\x80\xa6DjYields an <code>Err</code> and returns an awaitable <code>CoroWork</code>.CgCooperatively gives up a timeslice to the OS scheduler.00BhCooperatively yields execution to Rayon.0BkYields execution back to the Tokio runtime.2CkSets the unit to use when printing a duration that is zero.DhAllocates a <code>Rc&lt;T&gt;</code> with all contents being zeroed out.0D`$ \xcf\x84/360 = \xcf\x80/180 = 1\\degree $ <em>arc degree</em> (A019685, \xe2\x80\xa600000D`$ \xcf\x84/(360*60) = 1^{\\prime} $ <em>arc minute</em> (wikipedia) \xe2\x80\xa600000Db$ \xcf\x84/(360 * 60 * 60) = 1^{\\prime\\prime} $ <em>arc second</em> (\xe2\x80\xa600000C`@defgroup lavu_hmac HMAC @ingroup lavu_crypto @{CdRational number (pair of numerator and denominator).AaRounding methods.CkStereo 3D type: this structure describes how two videos \xe2\x80\xa6DhAbstracts something which can extend an <code>Extend</code>. Used to \xe2\x80\xa6DjUsed by <code>Parser::context</code> to add custom data to error while \xe2\x80\xa6AbAdmin-Local scope.00DlTypestate for <code>Config</code> when configured for an <code>Agent</code>.DjThe <code>AllocError</code> error indicates an allocation failure that \xe2\x80\xa60BfThe memory allocator returned an error10101010fU+00270000BcWindows enviroment for directories.0CeTrait for common types to send in POST, PUT or PATCH.CgAn async-aware version of the <code>FnMut</code> trait.00000000000000000AlWrites bytes asynchronously.Dg\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A boolean type which can be safely shared \xe2\x80\xa60CjA boolean type which can be safely shared between threads.000Df\xe2\x9a\x9b\xef\xb8\x8f <code>portable-atomic</code> A thread-safe signed integer type.0CkAn integer type which can be safely shared between threads.Dh\xe2\x9a\x9b\xef\xb8\x8f <code>portable-atomic</code> A thread-safe unsigned integer type.01Bda bitset for all possible attributesDkWraps <code>SDL_AudioDeviceID</code> and owns the callback data used by \xe2\x80\xa6CbTrue if the system\xe2\x80\x99s architecture is big-endian.BoCode to set the foreground color to bright red.BdThe alignment of this type in bytes.00CjBasic building block used to create more complex force \xe2\x80\xa6AoType representing basic blocks.00Di\xf0\x9f\x97\x83\xef\xb8\x8f <code>alloc</code> A priority queue implemented with a binary \xe2\x80\xa60C`A priority queue implemented with a binary heap.00000CaIterator for bit stream (<code>(I, usize)</code>)Cj\xf0\x9f\x85\xb5 A simple bitmap font for rendering fixed-size glyphs.0CbBlake2b with <code>32</code> as <code>size</code>.CbBlake2b with <code>48</code> as <code>size</code>.CbBlake2b with <code>64</code> as <code>size</code>.CnPixel arithmetic description for blending operations. Will \xe2\x80\xa60mBlend values.0DbA wrapper type implementing <code>RngCore</code> for some type \xe2\x80\xa6AnA reader of the response data.AkA borrowed file descriptor.00BoThe operation failed because a pipe was closed.0000CfInformation about button stored in <code>State</code>.Db<code>button_id</code> is the integer that will be returned by \xe2\x80\xa6EbLike <code>Iterator::by_ref</code>, but requiring <code>Sized</code> so it can \xe2\x80\xa6000Cd\xf0\x9f\x8c\x90 A utility struct for searching bytes in slices.0EaA wrapper for <code>Vec&lt;u8&gt;</code> representing a human-readable string \xe2\x80\xa600FdThe bit depth of each color component (e.g., <code>8</code> for <code>u8</code>, <code>32</code> \xe2\x80\xa60CfThis pixel has the format of one of the predefined \xe2\x80\xa6CmControls whether or not the network connection stays open \xe2\x80\xa6CkCode to move the cursor up by 1-digit <code>n</code> lines.CkCode to move the cursor up by 2-digit <code>n</code> lines.CkCode to move the cursor up by 3-digit <code>n</code> lines.CkCode to move the cursor up by 4-digit <code>n</code> lines.CfAligns and pads a value to the length of a cache line.0CmSpecifies how many of each resource type an audio context \xe2\x80\xa6lCubic FilterBbA parse location within the streamBjEnsure checkpoint details are kept private1BoThe standard input stream for spawned children.CgA handle to a child process\xe2\x80\x99s standard input (stdin).CnAn iterator over slice in (non-overlapping) mutable chunks \xe2\x80\xa600CmParallel iterator over slice in (non-overlapping) mutable \xe2\x80\xa611DhA type to represent the KEM <code>Ciphertext</code> that X-Wing returns.DhA type to represent the KEM <code>Ciphertext</code> that ML-KEM-1024 \xe2\x80\xa6DgA type to represent the KEM <code>Ciphertext</code> that ML-KEM-512 \xe2\x80\xa6DgA type to represent the KEM <code>Ciphertext</code> that ML-KEM-768 \xe2\x80\xa6AoThe rate that a clock ticks at.Cl\xf0\x9f\xa5\xa1 Encodes and decodes a sequence of flags as a single \xe2\x80\xa60BaUnordered collection (sets, bags)0DfUnix-specific extensions to the <code>process::Command</code> builder.0BoOs-specific extensions for <code>Command</code>BaA pixel-wise comparison function.0CnIn a backward transition, the earlier time is selected. In \xe2\x80\xa6AlInteracting with components.DdAn iterator over the <code>Component</code>s of a <code>Path</code>.CdAn iterator that maps an iterator of tuples like \xe2\x80\xa60fMAYBE?0ClAllows to convert compile-time constants into type-level \xe2\x80\xa60AhA trait indicating that:CfRepresents a single-thread stackless coroutine worker.0AaCrosses the text.Cb\xf0\x9f\x93\x8f A cycle that repeats a fixed number of times.0CnSpecifies the filename prefix used for shared libraries on \xe2\x80\xa6CjSpecifies the filename prefix, if any, used for shared \xe2\x80\xa6CnSpecifies the filename suffix used for shared libraries on \xe2\x80\xa6CjSpecifies the filename suffix, if any, used for shared \xe2\x80\xa6AbDark yellow color.Ai64-bit data <em>type</em>0DfAn iterator over periodic dates, created by <code>Date::series</code>.CmSpecifies whether the <code>Debug</code> trait should use \xe2\x80\xa60000Eb\xf0\x9f\x96\xb9 <code>core</code> A struct to help with [<code>Debug</code>] implementations.0CnA struct to help with <code>fmt::Debug</code> implementations.0000Db<code>Descriptor</code> provides declarative information about \xe2\x80\xa6CgConfiguration for <code>SpanPrinter::designator</code>.Ci\xf0\x9f\x97\x83\xef\xb8\x8f A <code>Destaque</code> with an 8-bit index size.0CkA lazy iterator producing elements in the difference of \xe2\x80\xa60000Dd<code>std</code> A builder used to create directories in various \xe2\x80\xa60ChA builder used to create directories in various manners.CfFilter that applies a distortion effect to the source.BaEnumeration of dither algorithms.fU+00240000CeAn iterator adapter to filter out duplicate elements.0AnCode to erase the entire line.CnSpecifies the filename suffix used for executable binaries \xe2\x80\xa6CnSpecifies the filename suffix, if any, used for executable \xe2\x80\xa6DaTrack an error occurred without any other <code>StrContext</code>AjThe end of the audio data.AgConfigurable endiannessAfRuntime context guard.Df<code>Entry16x16</code> is a codebook entry for 16-bit values with \xe2\x80\xa6Df<code>Entry16x32</code> is a codebook entry for 16-bit values with \xe2\x80\xa6Df<code>Entry32x16</code> is a codebook entry for 32-bit values with \xe2\x80\xa6Df<code>Entry32x32</code> is a codebook entry for 32-bit values with \xe2\x80\xa6DhProvides a <code>Visitor</code> access to the data of an enum in the \xe2\x80\xa6CjEBX:EAX and EDX:ECX provide information on the Enclave \xe2\x80\xa6fU+003D0000AfKey equivalence trait.AoRepresents a basic mouse event.0CjAn handler for the event watch callback. One must bind \xe2\x80\xa6AoRepresents a mouse wheel event.0CjDescribes the result of a process after it has terminated.Ci\xf0\x9f\x8c\x90 Extension trait providing additional methods for \xe2\x80\xa60BbA type map of protocol extensions.CmStructure holding the state and timing information of the \xe2\x80\xa6Ed$ 1/\xcf\x86 = \xcf\x86-1 $ (A094214) <code>\xe2\x89\x88 0.61803398\xe2\x80\xa6</code> <em>The reciprocal </em>\xe2\x80\xa600000Ci$ 1/\xcf\x84 = 1/2\xcf\x80 $ (A086201) <code>\xe2\x89\x88 0.15915494\xe2\x80\xa6</code>00000Ch$ 2/\xcf\x84 = 1/\xcf\x80 $ (A049541) <code>\xe2\x89\x88 0.31830988\xe2\x80\xa6</code>00000Dc$ \xcf\x84/2 = \xcf\x80 = 180\\degree $ (A000796) <code>\xe2\x89\x88 3.14159265\xe2\x80\xa6</code>00000Dg$ \xcf\x84/3  = 2\xcf\x80/3 = 120\\degree $ (A019693) <code>\xe2\x89\x88 2.09439510\xe2\x80\xa6</code>00000Dd$ \xcf\x84/4 = \xcf\x80/2 = 90\\degree $ (A019693) <code>\xe2\x89\x88 1.57079632\xe2\x80\xa6</code>00000De$ \xcf\x84/5 = 2\xcf\x80/5 = 72\\degree $ (A019694) <code>\xe2\x89\x88 1.25663706\xe2\x80\xa6</code>00000Dd$ \xcf\x84/6 = \xcf\x80/3 = 60\\degree $ (A019670) <code>\xe2\x89\x88 1.04719755\xe2\x80\xa6</code>00000Dd$ \xcf\x84/8 = \xcf\x80/4 = 45\\degree $ (A003881) <code>\xe2\x89\x88 0.78539816\xe2\x80\xa6</code>00000De$ \xcf\x84/9 = 2\xcf\x80/9 = 40\\degree $ (A019696) <code>\xe2\x89\x88 0.69813170\xe2\x80\xa6</code>00000BfFront-left (left) or the Mono channel.BlThe frequencies that the filter will remove.CkFilter algorithms used to process image data to improve \xe2\x80\xa6AkAvailable Sampling Filters.Cg\xf0\x9d\x9f\x99 \xf0\x9f\x8c\x90 Extension trait for floating-point types. \xe2\x80\xa60EgSupporting trait for inherent methods of <code>f32</code> and <code>f64</code> such \xe2\x80\xa600De<code>FoldChunks</code> is an iterator that groups elements of an \xe2\x80\xa6BnAlias for Result&lt;T, &amp;\xe2\x80\x99static str&gt;.CfThe result of an <code>SDL2_TTF</code> font operation.DcFormat all iterator elements lazily, separated by <code>sep</code>.0BkA classification of floating point numbers.00Fc<code>FromSample</code> implements a conversion from <code>Sample</code> type <code>F</code> to \xe2\x80\xa6AeGet pipe buffer size.CmGroup has execute permission (<code>S_IXGRP</code> in POSIX).CjGroup has read permission (<code>S_IRGRP</code> in POSIX).BjAn EGC backed by an <code>StringU8</code>.0CgRounds to the nearest value allowed by the rounding \xe2\x80\xa6CaThe <code>HashMap</code> in the standard library.0CaThe <code>HashSet</code> in the standard library.0BdRepresents an HTTP header field name0AlHMAC-SHA256 streaming state.AlHMAC-SHA384 streaming state.AlHMAC-SHA512 streaming state.BmIdentifies the different Hypervisor products.Cf<code>offset</code> must point to two consecutive intsoIP6 Auth HeaderAitp-4 w/ class negotiationBiCode to unset italic and fraktur effects.ChAn efficient way of discarding data from a deserializer.BhType representing a parsed TOML documentAm\xf0\x9f\x9a\xa9+ An image-related error.00BlThe generic error type for image operations.0BfEach pixel in this image is 8-bit LumaBfEach pixel in this image is 16-bit RgbC`Each pixel in this image is 8-bit Rgb with alphaDhHelper type for implementing a <code>Serializer</code> that does not \xe2\x80\xa6CjThe operation was partially successful and needs to be \xe2\x80\xa60000CjThere was not enough data to determine the appropriate \xe2\x80\xa6AlWe need more data to be sureDg\xf0\x9f\x9a\xa9 <code>core</code> The error type for errors that can never happen.0C`The error type for errors that can never happen.00BcPlay effect until stop() is called.AfCapture input on errorCiAn iterator adaptor that alternates elements from two \xe2\x80\xa60Dg<code>Interleave</code> is an iterator that interleaves elements of \xe2\x80\xa6CfUsed to convert a range into start and end bounds, \xe2\x80\xa600000Dd<code>ChunkLazy</code> is the storage for a lazy chunking operation.0Ch<code>core</code> Conversion into a <code>Future</code>.BnWhich kind of future are we turning this into?10BfConversion into a <code>Future</code>.10101010101CkConversion trait that allows a sequence of tuples to be \xe2\x80\xa6Fa<code>IntoSample</code> implements a conversion from <code>Self</code> to <code>Sample</code> \xe2\x80\xa6CnAn owning iterator over the values of a <code>BTreeMap</code>.DcAn owning iterator over the values of a <code>HashMap</code> in \xe2\x80\xa6CmAn owning iterator over the values of a <code>HashMap</code>.22AhIntrospection core trait0CkAn error resulting from a failed attempt to construct a \xe2\x80\xa6Dl<code>std</code> A buffer type used with <code>IoRead::read_vectored</code>.0CiA buffer type used with <code>Read::read_vectored</code>.CiTrait to determine if a descriptor/handle refers to a \xe2\x80\xa6Dc\xf0\x9f\x94\x84 <code>std</code> Iterates over the arguments of a process, \xe2\x80\xa60Dj<code>IterBridge</code> is a parallel iterator that wraps a sequential \xe2\x80\xa6De\xf0\x9f\x94\x84 <code>core</code> An iterator that clones the elements of an \xe2\x80\xa60De\xf0\x9f\x94\x84 <code>core</code> An iterator that copies the elements of an \xe2\x80\xa60Ee\xf0\x9f\x94\x84 <code>core</code> An iterator that filters the elements of <code>iter</code> \xe2\x80\xa60Dk\xf0\x9f\x94\x84 <code>core</code> An iterator where each iteration calls a closure \xe2\x80\xa60De\xf0\x9f\x94\x84 <code>core</code> An iterator that repeats an element endlessly.0Di\xf0\x9f\x94\x84 <code>core</code> An iterator for stepping iterators by a custom \xe2\x80\xa60Dh\xf0\x9f\x94\x84 <code>std</code> An iterator over a snapshot of the environment \xe2\x80\xa60CdAn owned permission to join on a task (await its \xe2\x80\xa6CiAn owned permission to join on a thread (block on its \xe2\x80\xa6Bn\xe2\x9a\x96\xef\xb8\x8f Standard exit codes for Linux processesCj<code>Linux</code> Seek commands (for <code>lseek</code>).ChAllows for minimal deviation; use for high precision \xe2\x80\xa600000AlConfigures an LFO modulator.CeCompleting the operation would have required more \xe2\x80\xa6CnA default or user-defined limit was reached while decoding \xe2\x80\xa60CnWraps a writer and buffers output to it, flushing whenever \xe2\x80\xa6Da\xf0\x9f\x97\x83\xef\xb8\x8f <code>alloc</code> A doubly-linked list with owned nodes.0BfA doubly-linked list with owned nodes.00000Bg\xf0\x9f\x9a\xa9+ Represents a Linux-related error.0ChSpecifies how to load an OpenGL context on X11 in Linux.BcA unique identifier for a listener.EcA <code>LocalWaker</code> is analogous to a <code>Waker</code>, but it does not \xe2\x80\xa600Dh\xe2\x9a\x96\xef\xb8\x8f <code>std</code> A type alias for the result of a lock method \xe2\x80\xa60DeThe result type returned by the <code>lock_py_attached</code> method.CmA type alias for the result of a lock method which can be \xe2\x80\xa60BlCode to set the background color to magenta.CdMaximum <em>x</em> for which 10<em>x</em> is normal.00000DkMaximum possible power of 10 exponent. Use <code>f32::MAX_10_EXP</code> \xe2\x80\xa6DkMaximum possible power of 10 exponent. Use <code>f64::MAX_10_EXP</code> \xe2\x80\xa61010DfThe maximum number of decimal digits a <code>u64</code> can represent.DkThe maximum number of decimal digits a <code>usize</code> can represent \xe2\x80\xa6DfThe maximum number of decimal digits a <code>u32</code> can represent.DeThe maximum number of decimal digits a <code>u8</code> can represent.DgThe maximum number of decimal digits a <code>u128</code> can represent.DfThe maximum number of decimal digits a <code>u16</code> can represent.BdMaximum addressable memory in bytes.BeMaximum value for any volume setting.CdMinimum <em>x</em> for which 10<em>x</em> is normal.00000CeMinimum possible normal power of 10 exponent. Use \xe2\x80\xa600000ChAn iterator over the mapped windows of another iterator.000CkA container that may hold either a borrowed or owned value.0CjMarker trait to verify memory alignment between two types.0B`Access to the device microphone.0BmChained processing of request (and response).DkAn instance of <code>MidiOutput</code> is required for anything related \xe2\x80\xa6C`Manipulate the how parsers respond to this errorAiRepresents a mouse event.Ea<code>std</code> The sending half of an <em>async</em> <code>Mpsc</code> channel.0CkAn iterator that can be unzipped into multiple collections.AkMutes or unmutes the audio.0oMute media key.Dg<code>std</code> An RAII implementation of a \xe2\x80\x9cscoped lock\xe2\x80\x9d of a \xe2\x80\xa60DkA handle to a held <code>Mutex</code>. The guard can be held across any \xe2\x80\xa6CmAn RAII implementation of a \xe2\x80\x9cscoped lock\xe2\x80\x9d of a mutex. \xe2\x80\xa600AoThe duration of one nanosecond.CiKnow whether dropping values of this type matters, in \xe2\x80\xa600Bh204 No Content [RFC9110, Section 15.3.5]C`Whether the number can represent big quantities.0CbWhether the number uses an integer representation.0CnA nanosecond is the smallest granularity of time supported \xe2\x80\xa6nEmpty iteratorBfThe end of the image has been reached.Ck\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f A signed integer that is known not to equal \xe2\x80\xa60Cn\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f An unsigned integer that is known not to equal \xe2\x80\xa60Df\xf0\x9d\x9f\x99\xe2\x9a\x97\xef\xb8\x8f <code>core</code> A signed integer that is known not to \xe2\x80\xa60CdAn <code>i16</code> that is known not to equal zero.0011CdAn <code>i32</code> that is known not to equal zero.0022CdAn <code>i64</code> that is known not to equal zero.00Di\xf0\x9d\x9f\x99\xe2\x9a\x97\xef\xb8\x8f <code>core</code> An unsigned integer that is known not to \xe2\x80\xa60CcA <code>u16</code> that is known not to equal zero.0011CcA <code>u32</code> that is known not to equal zero.0022CcA <code>u64</code> that is known not to equal zero.00BbDifferent normal forms of buffers.CmThe specified environment variable was not present in the \xe2\x80\xa600ClThe specified environment variable was found, but it did \xe2\x80\xa600fU+00230000CoOthers have execute permission (<code>S_IXOTH</code> in POSIX).ClOthers have read permission (<code>S_IROTH</code> in POSIX).BhThe type of a jump offset in this entry.CmIterator with one element, so the minimum and maximum are \xe2\x80\xa6DjA type to represent the <code>OneTimeKey</code> that Poly1305 uses for \xe2\x80\xa6Eh\xf0\x9f\x94\x84 <code>core</code> An iterator over a reference to the <code>Some</code> variant \xe2\x80\xa60BiThe timestamp to seek to is out of range.BiValue was out of range for the given typeDg<code>Parser</code> implementation for <code>Parser::output_into</code>B`Number of bytes per memory page.AbGetting shut down.AeI am a kernel thread.Bf102 Processing [RFC2518, Section 10.1]BiA type alias for <code>Infallible</code>.AnSee <code>Parser::parse</code>11DbUsed to integrate <code>str</code>\xe2\x80\x99s <code>parse()</code> methodCl<code>core</code> Trait for types that form a partial order.Db<code>core</code> Derive macro generating an impl of the trait \xe2\x80\xa610BjTrait for types that form a partial order.DiDerive macro generating an impl of the trait <code>PartialOrd</code>. \xe2\x80\xa61010101010101010101010101010101010Em<code>std</code> Windows path prefixes, e.g., <code>C:</code> or <code>\\\\server\\share.</code>0AnRead end of an anonymous pipe.AoWrite end of an anonymous pipe.kPNG decoderkPNG encoderkPNM decoderClEncodes images to any of the <code>pnm</code> image formats.BhDenotes the category of the magic numberCfMore pre-context is needed. The caller should call \xe2\x80\xa6DaA type to represent the <code>PrivateKey</code> that X25519 uses.00AoFundamental structural property0AjUniqueness characteristics0Dj<code>core</code> <code>*mut T</code> but non-zero and <em>covariant</em>.0CkThis trait marks types that can be used as arguments to \xe2\x80\xa6BlBindings for <code>datetime.datetime</code>.BkRepresents a Python <code>dict_keys</code>.CfRepresents Python\xe2\x80\x99s <code>EOFError</code> exception.CcRepresents the Python <code>Ellipsis</code> object.BdRepresents a Python function object.AiA Python iterator object.CfRepresents Python\xe2\x80\x99s <code>KeyError</code> exception.DfAn equivalent to <code>std::sync::OnceLock</code> for initializing \xe2\x80\xa6ClRepresents a reference to a Python object supporting the \xe2\x80\xa6CkPython type information. All Python native types (e.g., \xe2\x80\xa60CkA Rust type representing an exception defined in Python \xe2\x80\xa6CiAn iterator over a slice in (non-overlapping) mutable \xe2\x80\xa600CnParallel iterator over mutable non-overlapping chunks of a \xe2\x80\xa611BiRear-right (surround rear right) channel.CiAn iterator over subslices separated by elements that \xe2\x80\xa60000BoMakes the text blinking (&gt;= 150 per minute).BnThe type of raw OS error codes returned by \xe2\x80\xa6Af@ingroup lavc_encodingAbRealm-Local scope.00AgNetworked relationships0DiAn iterator that repeats elements of type <code>A</code> endlessly by \xe2\x80\xa6000DfExtension trait for <code>http::Request&lt;impl AsSendBody&gt;</code>.CaA command that resets the colors back to default.Ef\xf0\x9f\x94\x84 <code>core</code> An iterator over a reference to the <code>Ok</code> variant \xe2\x80\xa60Dh\xf0\x9f\xa5\xa1 The <code>RFC 4648</code> hexadecimal-variant encoding, used in \xe2\x80\xa60CkRGB+A color with 64-bit float components (linear space, \xe2\x80\xa60ChRGB+A color with 64-bit float components (sRGB gamma \xe2\x80\xa60DjRight <strong>Hyper</strong> key (historically used in some Unix systems).0A`Right Hyper key.BaRight <strong>Shift</strong> key.0A`Right Shift key.DlRight <strong>Super</strong> key (Windows key on Windows, Command \xe2\x8c\x98 on \xe2\x80\xa60CkRight Super key. (Command on macOS, Windows on Windows, \xe2\x80\xa6DdIf the <code>SA_NOCLDWAIT</code> flag is set when establishing a \xe2\x80\xa6ChCall the signal handler on an alternate signal stack \xe2\x80\xa6ClProvide behavior compatible with BSD signal semantics by \xe2\x80\xa6CbThe signal handler takes three arguments, not one.CcThe structure that defines a point (floating point)CnUse this function to free an SDL_RWops structure allocated \xe2\x80\xa6Bf\\brief OpenGL configuration attributesCdGet RGB values from a pixel in the specified format.BkDetermine whether the CPU has AVX features.CfDetermine whether the CPU has LSX (LOONGARCH SIMD) \xe2\x80\xa6BkDetermine whether the CPU has MMX features.BkDetermine whether the CPU has SSE features.Ci\\brief Enumeration of valid key mods (possibly OR\xe2\x80\x99d \xe2\x80\xa6Cd\\brief The SDL keysym structure, used in key events.CjMap an RGB triple to an opaque pixel value for a given \xe2\x80\xa6AhRead from a data source.BeSeek within an SDL_RWops data stream.CnUse this function to get the size of the data stream in an \xe2\x80\xa6CkDetermine the current read/write offset in an SDL_RWops \xe2\x80\xa6CcUse this function to read a byte from an SDL_RWops.CmGet the current thread\xe2\x80\x99s value associated with a thread \xe2\x80\xa6CmSet the current thread\xe2\x80\x99s value associated with a thread \xe2\x80\xa6A`Vertex structureAeSet pipe buffer size.CgUsed to send cookies from the server to the user agent.BdSide right (surround right) channel.BmTypical gamma value for sRGB/Rec.709 (\xe2\x89\x882.2)0DaSticky bit - restricted deletion (<code>S_ISVTX</code> in POSIX).Bestring segment elements are i8 valuesBestring segment elements are u8 valuesCnStream sample rate (a frame rate or samples per second per \xe2\x80\xa6Ea<code>core</code> Provides intentionally-saturating arithmetic on <code>T</code>.0CoProvides intentionally-saturating arithmetic on <code>T</code>.00ClA general-purpose RAII guard that executes a callback on \xe2\x80\xa60CbScrolled mouse wheel downwards (towards the user).CmA command that scrolls the terminal screen a given number \xe2\x80\xa6ChScrolled mouse wheel left (mostly on a laptop touchpad).A`Scroll Lock key.00CfResult of calling <code>Searcher::next()</code> or \xe2\x80\xa60000Bh&lt; Implements SDL_JoystickSendEffect()BeThe other end of channel was dropped.BjVertices are rendered in sequential order.DhA <strong>data format</strong> that can serialize any data structure \xe2\x80\xa60BnIf SSD is not supported, no CSD will be drawn.Db<code>SignalSpec</code> describes the characteristics of a Signal.BoOperations on SIMD vectors of mutable pointers.00000AfA sixel-related error.0CkMethod for finding the largest dimension for splitting, \xe2\x80\xa60BlA helper trait used for indexing operations.0000Db<code>core</code> An internet socket address, either IPv4 or IPv6.0C`An internet socket address, either IPv4 or IPv6.00BiAn address associated with a Unix socket.A`Unix credential.CeA parser for Jiff\xe2\x80\x99s \xe2\x80\x9cfriendly\xe2\x80\x9d duration format.B`A parser for Temporal durations.CnAn iterator that splits an environment variable into paths \xe2\x80\xa6BoAn infinite source that produces a square wave.DjWhen <code>http_status_as_error()</code> is true, 4xx and 5xx response \xe2\x80\xa6DbAn HTTP status code (<code>status-code</code> in RFC 9110 et al.).0DiAn adapter for using <code>std::io::Write</code> implementations with \xe2\x80\xa6Df<code>std</code> A locked reference to the <code>Stderr</code> handle.0CeA locked reference to the <code>Stderr</code> handle.Df<code>std</code> A locked reference to the <code>Stdout</code> handle.0CeA locked reference to the <code>Stdout</code> handle.DdAdditional parse context for <code>ContextError</code> added via \xe2\x80\xa6fU+001A0000CnAn iterator which, starting from an initial item, computes \xe2\x80\xa6000AmAn unsized Surface reference.DhThe sending-half of Rust\xe2\x80\x99s synchronous <code>sync_channel</code> type.Ch\xf0\x9f\x95\x98 <code>std</code> A measurement of the system clock.Eg\xf0\x9f\x9a\xa9 Returned from the <code>duration_since</code> and <code>elapsed</code> methods \xe2\x80\xa610ClA measurement of the system clock, useful for talking to \xe2\x80\xa6ClPlace the current lock state of the pseudoterminal slave \xe2\x80\xa6A`Get window size.CnSet (if *argp is nonzero) or remove (if *argp is zero) the \xe2\x80\xa6A`Set window size.AcTop centre channel.Dj(A058265) <code>\xe2\x89\x88 1.83928675\xe2\x80\xa6</code> <em>The tribonacci constant</em>.00000Am\xe2\x9a\x96\xef\xb8\x8f A text-related result.000BnEnum describing the different kind of threads.BfRepresents a user-created thread pool.DfAn iterator over periodic times, created by <code>Time::series</code>.Cl\xf0\x9f\x95\x98 A source of timestamps with a known granularity and \xe2\x80\xa60DkA possible error when converting a <code>HeaderValue</code> to a string \xe2\x80\xa6BjSpecialized input for parsing lexed tokensAhDecreases treble levels.0Db<code>Triangular</code> implements a dither using a triangular \xe2\x80\xa6DdApply triangular dithering. See <code>Triangular</code> for more \xe2\x80\xa6CeAn iterator that reports an accurate length using \xe2\x80\xa6000CfA potentially fallible variant of <code>RngCore</code>Ef\xf0\x9f\x95\x98 <code>std</code> A <code>SystemTime</code> anchored to \xe2\x80\x9c1970-01-01 00:00:00 \xe2\x80\xa6CeAn anchor in time which can be used to create new \xe2\x80\xa61BjThe Unix epoch represented as a timestamp.1ClContains a string that allows identifying the requesting \xe2\x80\xa6CjUser has write permission (<code>S_IWUSR</code> in POSIX).AcImage capabilities.0AcInput capabilities.0AcSound capabilities.0AdUnderlines the text.Dj<code>Unexpected</code> represents an unexpected invocation of any one \xe2\x80\xa6CnSome unified TLBs will allow a single TLB entry to satisfy \xe2\x80\xa6AeA Unix stream socket.De<code>core</code> The core primitive for interior mutability in Rust.0CcThe core primitive for interior mutability in Rust.00BbThe stream is not seekable at all.CmA marker trait which represents \xe2\x80\x9cpanic safe\xe2\x80\x9d types in \xe2\x80\xa600CmThis enum allows you to specify when you want the related \xe2\x80\xa6ClAn iterator used to decode a slice of mostly UTF-8 bytes \xe2\x80\xa60000BhVersion identifier for this HPKE scheme.Bl<code>offset</code> must point to AVRationalCdx86_64 ABI implementation of a <code>va_list</code>.0000ClAn drain iterator of all values associated with a single \xe2\x80\xa6Bn\xe2\x9a\x96\xef\xb8\x8f A value with associated quantification.0Dk<code>VendorData</code> is any binary metadata that is proprietary to a \xe2\x80\xa6AmVendor Info String (LEAF=0x0)CiA sender that does not prevent the channel from being \xe2\x80\xa600AhHandle to a DOM Element.0CkThe lock could not be acquired at this time because the \xe2\x80\xa6CnThe operation needs to block to complete, but the blocking \xe2\x80\xa600101CiA lock could not be acquired at this time because the \xe2\x80\xa621CmThe lock could not be acquired at this time because it is \xe2\x80\xa6CnDeprecated - <code>ChannelCountMismatch</code> is used insteadBf\xf0\x9f\x8e\xb2 The <code>XorShift16</code> PRNG.0Bf\xf0\x9f\x8e\xb2 The <code>XorShift32</code> PRNG.0Bf\xf0\x9f\x8e\xb2 The <code>XorShift64</code> PRNG.0CbAn iterator which iterates two other iterators \xe2\x80\xa60BfOptions for <code>Zoned::round</code>.AnEqual (ordered, non-signaling)00AjEqual (ordered, signaling)00B`Equal (unordered, non-signaling)00AlEqual (unordered, signaling)00BnGreater-than-or-equal (ordered, non-signaling)00BjGreater-than-or-equal (ordered, signaling)00BeGreater-than (ordered, non-signaling)00BaGreater-than (ordered, signaling)00BkLess-than-or-equal (ordered, non-signaling)00BgLess-than-or-equal (ordered, signaling)00BbLess-than (ordered, non-signaling)00AnLess-than (ordered, signaling)00AgOrdered (non-signaling)00AcOrdered (signaling)00AnComposable external iteration.GbExtracts bits in range [<code>start</code>, <code>start</code> + <code>length</code>) from <code>a</code> into \xe2\x80\xa600000EeReturns the bit in position <code>b</code> of the memory addressed by <code>p</code>.00DhSets the least significant zero bit of <code>x</code> and clears all \xe2\x80\xa600000CeClears least significant bit and sets all other bits.00000G`Restores the <code>XMM</code>, <code>MMX</code>, <code>MXCSR</code>, and <code>x87</code> FPU registers from \xe2\x80\xa600CnBitwise OR of 8-bit masks a and b, and store the result in \xe2\x80\xa600BnCounts the leading most significant zero bits.00000CmCompute the bitwise OR of 16-bit masks a and b, and store \xe2\x80\xa600CjFinds the absolute value of each packed half-precision \xe2\x80\xa600ChAdds packed double-precision (64-bit) floating-point \xe2\x80\xa600CnAdd packed half-precision (16-bit) floating-point elements \xe2\x80\xa600ChAdds packed single-precision (32-bit) floating-point \xe2\x80\xa600DkReturns a new vector with the low element of <code>a</code> replaced by \xe2\x80\xa600ChAdd the lower half-precision (16-bit) floating-point \xe2\x80\xa600EgAdds the first component of <code>a</code> and <code>b</code>, the other components \xe2\x80\xa600CgComputes the bitwise AND of packed double-precision \xe2\x80\xa600CcBitwise AND of packed single-precision (32-bit) \xe2\x80\xa600ClCompares packed double-precision (64-bit) floating-point \xe2\x80\xa600ClCompares packed single-precision (32-bit) floating-point \xe2\x80\xa600C`Compares the lower double-precision (64-bit) \xe2\x80\xa600C`Compares the lower single-precision (32-bit) \xe2\x80\xa600CjDivide packed double-precision (64-bit) floating-point \xe2\x80\xa600ChDivide packed half-precision (16-bit) floating-point \xe2\x80\xa600CkDivides packed single-precision (32-bit) floating-point \xe2\x80\xa600;;;CkDivide the lower half-precision (16-bit) floating-point \xe2\x80\xa600DnDivides the first component of <code>b</code> by <code>a</code>, the other \xe2\x80\xa600CkGets the unsigned 32-bit value of the MXCSR control and \xe2\x80\xa600ClPerforms a serializing operation on all load-from-memory \xe2\x80\xa600CeReturns a new vector with the maximum values from \xe2\x80\xa600CiCompare packed half-precision (16-bit) floating-point \xe2\x80\xa600;;;DkReturns a new vector with the low element of <code>a</code> replaced by \xe2\x80\xa600ClCompare the lower half-precision (16-bit) floating-point \xe2\x80\xa600C`Compares the first single-precision (32-bit) \xe2\x80\xa600555CeReturns a new vector with the minimum values from \xe2\x80\xa600444???333222111CnMultiplies packed double-precision (64-bit) floating-point \xe2\x80\xa600CjMultiply packed half-precision (16-bit) floating-point \xe2\x80\xa600CnMultiplies packed single-precision (32-bit) floating-point \xe2\x80\xa600666CmMultiply the lower half-precision (16-bit) floating-point \xe2\x80\xa600EbMultiplies the first component of <code>a</code> and <code>b</code>, the other \xe2\x80\xa600CgCompute the approximate reciprocal of packed 16-bit \xe2\x80\xa600C`Returns the approximate reciprocal of packed \xe2\x80\xa600CcCompute the approximate reciprocal of the lower \xe2\x80\xa600CcReturns the approximate reciprocal of the first \xe2\x80\xa600ChSets packed double-precision (64-bit) floating-point \xe2\x80\xa600CnSet packed half-precision (16-bit) floating-point elements \xe2\x80\xa600DkConstruct a <code>__m128</code> from four floating point values highest \xe2\x80\xa600DjCopies double-precision (64-bit) floating-point element <code>a</code> \xe2\x80\xa600CmCopy half-precision (16-bit) floating-point elements from \xe2\x80\xa600EeConstruct a <code>__m128</code> with the lowest element set to <code>a</code> and \xe2\x80\xa600ClSets the MXCSR register with the 32-bit unsigned integer \xe2\x80\xa600ClPerforms a serializing operation on all non-temporal (\xe2\x80\x9c\xe2\x80\xa600ClSubtract packed double-precision (64-bit) floating-point \xe2\x80\xa600CjSubtract packed half-precision (16-bit) floating-point \xe2\x80\xa600CmSubtracts packed single-precision (32-bit) floating-point \xe2\x80\xa600DkReturns a new vector with the low element of <code>a</code> replaced by \xe2\x80\xa600CmSubtract the lower half-precision (16-bit) floating-point \xe2\x80\xa600EbSubtracts the first component of <code>b</code> from <code>a</code>, the other \xe2\x80\xa600CnComputes the bitwise XOR of <code>a</code> and <code>b</code>.00ClBitwise exclusive OR of packed single-precision (32-bit) \xe2\x80\xa600BaZero the tile specified by tdest.00CjCounts the number of trailing least significant zero bits.00000000DgSets all bits below the least significant one of <code>x</code> and \xe2\x80\xa600000CePerforms a full or partial restore of the enabled \xe2\x80\xa600BhAccumulate the input into an accumulatorBgPerforms the <code>+=</code> operation.fPanics1111BaAdds new <code>BaseEffect</code>.AlAdds an effect to the track.BaAdds an effect to the send track.11CcLow lane <code>a + b</code>, other lanes unchanged.0DiAdds <code>rhs</code> to the minimum and maximum values of the output \xe2\x80\xa6BjAdd a <code>Visual</code> to the metadata.CaAdvances the iterator by <code>n</code> elements.000000000000000000000BlSame as track_gain, but for the whole album.BlSame as track_peak, but for the whole album,EaAligns <code>value</code> downward to the nearest multiple of <code>align</code>.CbCheck whether all elements are unique (non equal).000DkPre-allocate space for an object in this <code>Bump</code>, initializes \xe2\x80\xa6CfStuff to boost things in the <code>alloc</code> crate.Dk<strong>Gets</strong> the attribute: the minimum number of bits for the \xe2\x80\xa6CiProvides in-place mutable access to an occupied entry \xe2\x80\xa60000BaGets the configuration directory.0BcAdd a string to the end of a stringDf<code>safe_arch</code> Turns a round operator token to the correct \xe2\x80\xa60De\xf0\x9f\x97\x83\xef\xb8\x8f Initializes a <code>[$T; $LEN]</code> array in multiple ways.0DhUpcasts <code>Box&lt;self&gt;</code> as <code>Box&lt;dyn Any&gt;</code>.00DdUpcasts <code>&amp;mut self</code> as <code>&amp;mut dyn Any</code>.00ClUpcasts <code>&amp;self</code> as <code>&amp;dyn Any</code>.00BmRetrieve the underlying graymap header if anyBcCasts <code>self</code> to integer.0CkReturns <code>self</code> cast as a <code>PyMapping</code>.00DcReturns a raw mutable pointer to the <code>Box</code>\xe2\x80\x99s contents.BnReturns a raw pointer to the slice\xe2\x80\x99s buffer.CnReturns a raw mutable pointer to the vector\xe2\x80\x99s buffer, or \xe2\x80\xa6BfReturns a raw mutable pointer to self.CjGets a mutable pointer to the contained value. Reading \xe2\x80\xa6CgReturns an unsafe mutable pointer to the vector\xe2\x80\x99s \xe2\x80\xa650CiReturns a *mut raw pointer to the underlying FFmpeg type.BnExposes a mutable pointer to the contained \xe2\x80\xa60CkConverts a <code>String</code> into a mutable string slice.BgReturns the mutable inner string slice.CnReturns the exclusive inner string slice. Makes use of the \xe2\x80\xa6112DhReturns a mutable reference to the contents of this <code>String</code>.0C`Returns the alignment as a NonZero&lt;usize&gt;.EiConverts from Pin&lt;&amp;mut Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;mut T&gt;&gt;.DbConvert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to \xe2\x80\xa6EaConverts from Pin&lt;&amp;Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;T&gt;&gt;.GoConvert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, \xe2\x80\xa6BiReturn a reference to an 32bit RGBA imageDoCheaply convert to a <code>&amp;mut std::process::Command</code> for places \xe2\x80\xa6AnA convenience function for \xe2\x80\xa6DmRemoves the connection for this <code>Bound&lt;T&gt;</code> from the GIL, \xe2\x80\xa6DiConverts a <code>VaListImpl</code> into a <code>VaList</code> that is \xe2\x80\xa6ClHelper method that populates a vector with references to \xe2\x80\xa6DkCall the <code>AsyncFn</code>, returning a future which may borrow from \xe2\x80\xa600000000000000000BbComposable asynchronous iteration.00ClReturns the last access time of the file, in nanoseconds \xe2\x80\xa600CnBitwise and with the current value, returning the previous \xe2\x80\xa600DkMaximum with the current value using a signed comparison. <code>T</code>\xe2\x80\xa600DkMinimum with the current value using a signed comparison. <code>T</code>\xe2\x80\xa600CnBitwise xor with the current value, returning the previous \xe2\x80\xa600AcList of attributes.DgEquivalent to <code>Self::decap()</code>, additionally ensuring the \xe2\x80\xa6DgEquivalent to <code>Self::encap()</code>, additionally ensuring the \xe2\x80\xa6CkGet the next two numbers generated by a Box-Muller GaussianBlAppend a formatted string to a print buffer.ClThread safe dirname. @param path the string to parse, on \xe2\x80\xa6BeGet the current time in microseconds.CkAllocate a memory block with alignment suitable for all \xe2\x80\xa6AfHash an array of data.Cm@defgroup opt_get_funcs Option getting functions @{ Those \xe2\x80\xa6Ck@} / /** Gets a pointer to the requested field in a struct.Cm@defgroup opt_set_funcs Option setting functions @{ Those \xe2\x80\xa6C`Allocate, reallocate, or free a block of memory.CbRescale a 64-bit integer with rounding to nearest.CnLocate the first case-independent occurrence in the string \xe2\x80\xa6CkAppend the string src to the string dst, but to a total \xe2\x80\xa6CiCopy the string src to dst, but no more than size - 1 \xe2\x80\xa6BbDuplicate a substring of a string.CkLocate the first occurrence of the string needle in the \xe2\x80\xa6ChReturn AVIO_FLAG_* access flags corresponding to the \xe2\x80\xa6CmClose the resource accessed by the AVIOContext s and free \xe2\x80\xa6Bkavio flags, used to force AVIO_FLAG_DIRECT.B`Force flushing of buffered data.CiCreate and initialize a AVIOContext for accessing the \xe2\x80\xa6CiPause and resume playing - only meaningful if using a \xe2\x80\xa6CiThe y coordinate of the baseline of this line, in pixels.Bkstart rendering to an offscreen framebuffer000BnToggles the bit at the specified bit-position.000000000000AkBitwise <code>a | b</code>.000CdReverses the bits in an integer type <code>T</code>.00DbBlends the <code>f32</code> lanes according to the immediate mask.0C`Gets the blend mode used for drawing operations.CeGets the blend mode used for texture copy operations.BjReturns the block size for filesystem I/O.AnRemoves the window decoration.BdMutably borrows from an owned value.BbMutably borrows the wrapped value.1111BiMutably borrows the value <code>T</code>.022DhReturns a <code>BorrowedFd</code> holding the given raw file descriptor.CiExecutes a breakpoint trap, for inspection by a debugger.CeCompiles to a target-specific software breakpoint \xe2\x80\xa61010CoThe maximum buffer size. Must be a power of 2. Must be &gt; \xe2\x80\xa6AnReturns a mutable image bufferBlReturns the alignment of this type in bytes.00CgRead-only statistic of bytes read for this AVIOContext.C`Returns the number of bytes that have been read.BaReturns the number of bytes read.CfReturns the external boundary, the sum of the extents.00000000000Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x9f\x99 <code>core</code> Equivalent to the corresponding C type.0E`Equivalent to C\xe2\x80\x99s <code>signed long long</code> (<code>long long</code>) type.000AmTranslation cache type field.jCache TypeDhReturns the ASCII byte of a specific digit in a <code>u32</code> number.DfReturns the ASCII byte of a specific digit in a <code>usize</code> \xe2\x80\xa6DhReturns the ASCII byte of a specific digit in a <code>u16</code> number.DeReturns the ASCII byte of a specific digit in a <code>u128</code> \xe2\x80\xa6DgReturns the ASCII byte of a specific digit in a <code>u8</code> number.DhReturns the ASCII byte of a specific digit in a <code>u64</code> number.CnReturns whether the panic handler is allowed to unwind the \xe2\x80\xa60CmSpecifies how many of each resource type an audio context \xe2\x80\xa6DkCasts from a pointer-to-<code>T</code> to a pointer-to-<code>[T; N]</code>.DhCast this <code>Py&lt;T&gt;</code> to a concrete Python type or pyclass.BlChanges constness without changing the type.00000CmCast this to a concrete Python type or pyclass (but not a \xe2\x80\xa6CfCast <code>&amp;[A]</code> into <code>&amp;[B]</code>.0CgRound each lane to a whole number, towards positive \xe2\x80\xa60CgRound <code>f64</code> lanes towards positive infinity.0DbSelects code at compile-time based on <code>cfg</code> predicates.00CiArray of supported channel layouts, terminated with a \xe2\x80\xa6CaSave the current parse location within the stream0BkReturn next AVOptions-enabled child or NULLCmThe name of the class; usually it is the same name as the \xe2\x80\xa6Cm(clearRect) Clears the specified rectangular area, making \xe2\x80\xa6ClGets information about the clock with the given ID if it \xe2\x80\xa6EeCopies <code>source</code>\xe2\x80\x99s contents into <code>self</code> without creating a \xe2\x80\xa60DdOverwrites the contents of <code>self</code> with a clone of the \xe2\x80\xa6DbClones the contents of <code>source</code> into <code>self</code>.11fPanics121DgAssigns a clone of <code>source</code> to <code>self</code>, unless \xe2\x80\xa6CbPerforms copy-assignment from <code>source</code>.0000000000000000000054ChUses borrowed data to replace owned data, usually by \xe2\x80\xa60000000000CeCompares and exchange 16 bytes (128 bits) of data \xe2\x80\xa600BaGeneral type of the encoded data.CiCollect all items from an iterator, into a collection \xe2\x80\xa6CnReturns the bit depth of each color component (e.g., 8 for \xe2\x80\xa600AgGet the blue component.CgSince the color has no red, the luminosity is returned.000000000001B`Supplementary color information.0BjThe color mode of the <code>Visual</code>.CmReturns the color type of the image data produced by this \xe2\x80\xa6AdYUV colorspace type.0AoList of parsers and combinatorsBjComparison with other Rust datetime cratesCaDisambiguates this timestamp according to the \xe2\x80\xa6CfDisambiguates this zoned datetime according to the \xe2\x80\xa6DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa600000000000000000000BlReturns the complement of this set of flags.0000000DbProduces an iterator over the <code>Component</code>s of the path.CjNumber of components in this VertexFormat it is called \xe2\x80\xa6CbReduces (or increases) the dynamic range of audio.DoConverts a <em>const</em> <code>bool</code> expression to a type-level boolean.0CeThe smallest integer greater than or equal to itself.CbRaises itself to the <code>p</code> integer power.CbDefines conversions between Rust and Python types.DmCopies the <code>src</code> byte array into <code>dst</code> in compile-time.CbComputes the cosine using taylor series expansion.CnReturns the number of <code>None</code> elements in the array.CnReturns the number of ones in the binary representation of \xe2\x80\xa600000000000000000000000000000000000000000000000BhThe number of bits set (number of ones).00CnReturns the number of <code>Some</code> elements in the array.CcCreates a new, empty directory at the provided path0ClCreates a new file in read-write mode; error if the file \xe2\x80\xa6CgSets the option to create a new file, failing if it \xe2\x80\xa6AmReturns the time of creation.CgReturns the last status change time of the file, in \xe2\x80\xa600CmThe current offset of the cursor. Equal to the last value \xe2\x80\xa6BkReturns the current random <code>u8</code>.000CdSets the foreground color to <code>DarkGreen</code>.CnForced data codec. This allows forcing a specific decoder, \xe2\x80\xa6CnDeactivates the event watch. Does nothing if it is already \xe2\x80\xa6CfDeallocates the memory referenced by <code>ptr</code>.00000DdCreates a <code>DebugList</code> builder designed to assist with \xe2\x80\xa6CfSets the amount of time the input audio is delayed by.Dj<strong>Gets</strong> the attribute: the minimum number of bits in the \xe2\x80\xa6EcApproximates the derivative of the 1D function <code>f</code> at <code>x</code> \xe2\x80\xa600DmCombine <code>extract</code> and <code>expand</code> to return a derived key.00BfDerive a key using PBKDF2-HMAC-SHA512.BfDerive a key using PBKDF2-HMAC-SHA256.BfDerive a key using PBKDF2-HMAC-SHA384.CiArgon2i password hashing function as described in the \xe2\x80\xa6AkDerive a key using Argon2i.BoConfigures the kind of unit designators to use.DgRemoves all tasks from this <code>JoinSet</code> without aborting them.El<code>std</code> Tests at <em>runtime</em> whether an <code>x86/x86-64</code> feature is \xe2\x80\xa60CmThe parent AVHWDeviceContext. This is simply a pointer to \xe2\x80\xa6CeA reference to the parent AVHWDeviceContext. This \xe2\x80\xa6ClVisits the values representing the difference, i.e., the \xe2\x80\xa6CnVisits the elements representing the difference, i.e., the \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa600000000000000000000EeReturns the difference between the flags in <code>self</code> and <code>other</code>.00000003ChReturns a static string with zero-padded digits with \xe2\x80\xa600000CjReturns a tuple containing the width and height of the \xe2\x80\xa6BcThe width and height of this image.0AnGets the number of dimensions.BjThe dimensions of the <code>Visual</code>.CaReturns number of bytes read and written to disk.CgReturns the value of the \xe2\x80\x9cdisk_usage\xe2\x80\x9d refresh kind.BbMakes a sound harsher and noisier.BiApplies a distortion effect to the sound.0BgPerforms the <code>/=</code> operation.0000AgThe euclidean division.00DmExperimental version of <code>div_euclid</code> in <code>core</code>. See \xe2\x80\xa6000CcLow lane <code>a / b</code>, other lanes unchanged.0CnDivides the minimum and maximum values of the output range \xe2\x80\xa6CnGets the color used for drawing operations (Rect, Line and \xe2\x80\xa6CkDraws a line on the current rendering target. Errors if \xe2\x80\xa6CmDraws a rectangle on the current rendering target. Errors \xe2\x80\xa6CnDraws a series of connected lines on the current rendering \xe2\x80\xa6ClDraws a point on the current rendering target. Errors if \xe2\x80\xa6ClDraws some number of rectangles on the current rendering \xe2\x80\xa6Bj&lt; driver-specific data, initialize to 0AhDrops the front element.Ah&lt; Target audio formatCdDuplicates the front pair of elements, at the front.CjReturn an iterator adaptor that produces elements that \xe2\x80\xa6000CgLength of EBX bit vector to enumerate architectural \xe2\x80\xa6Bg&lt; Wayland EGL window (native window)DeHeight from the baseline to the bottom of the <code>em</code> square.0DfCreates a canonical empty interval, equivalent to <code>open</code>\xe2\x80\xa6BbEnables both I/O and time drivers.Am&lt; enable expression stringC`Returns the end of the day, corresponding to \xe2\x80\xa6CiReturns the end of the day that this datetime resides in.BcAdds a new entry to the set output.BdAdds a new entry to the list output.CfRemoves an explicitly set environment variable and \xe2\x80\xa6BhRemoves an environment variable mapping.BjReturns the offset to the end of the input0CdChecks if this value is equivalent to the given key.AkObtains the SDL event pump.DhCreates a new <code>DiskRefreshKind</code> with every refresh set to \xe2\x80\xa6DkCreates a new <code>ProcessRefreshKind</code> with every refresh set to \xe2\x80\xa6EhCreates a new <code>CpuRefreshKind</code> with every refresh set to <code>true</code>\xe2\x80\xa6DjCreates a new <code>MemoryRefreshKind</code> with every refresh set to \xe2\x80\xa6EfCreates a new <code>RefreshKind</code> with every refresh set to <code>true</code>/\xe2\x80\xa6BnException and warning types defined by Python.ChComputes the exponential function $e^x$ using Taylor \xe2\x80\xa6EdReturns the contained <code>Err</code> value, consuming the <code>self</code> value.BnExtends a collection with exactly one element.000000000000000000000Bh&lt; comma-separated filename extensionsCiIf extensions are defined, then no probe is done. You \xe2\x80\xa6CgA list of case-insensitive file extensions that are \xe2\x80\xa6CaReturns a reference to the associated extensions.0AjThe request\xe2\x80\x99s extensionsAkThe response\xe2\x80\x99s extensionsBbExtra data (defined by the codec).CmDrains elements which are true under the given predicate, \xe2\x80\xa60CnCreates an iterator that visits elements (key-value pairs) \xe2\x80\xa6CmCreates an iterator that visits elements in the specified \xe2\x80\xa6ClCreates an iterator which uses a closure to determine if \xe2\x80\xa60300BiReturns the number of faces in this font.EaFactors out a homogenous type from an <code>Either</code> of <code>Result</code>.CkReturns the multiplication factor for the prefix as an i64.0CnReturns the multiplication factor for the binary prefix as \xe2\x80\xa6CmReturns the multiplication factor for the SI prefix as an \xe2\x80\xa6Bb&lt; Level at the end of the fade.000BhLogical \xe2\x80\x9cnand\xe2\x80\x9d with a boolean value.BjBitwise \xe2\x80\x9cnand\xe2\x80\x9d with the current value.0000000000010000000000C`Adds a new field to the generated struct output.CfAdds a new field to the generated tuple struct output.BkFills <code>bytes</code> with random bytes.0BhFill <code>dest</code> with random data.1CnFills a rectangle on the current rendering target with the \xe2\x80\xa6ClFills some number of rectangles on the current rendering \xe2\x80\xa6Cg(fillStyle) Sets the color or style for filling shapes.ClReturns a mutable reference to the filled portion of the \xe2\x80\xa60Bnfilter context associated to this input/outputDjMakes a new <code>Ref</code> for an optional component of the borrowed \xe2\x80\xa6DdMakes a new <code>RefMut</code> for an optional component of the \xe2\x80\xa6BoCreates an iterator that both filters and maps.0000000DiMakes a <code>MappedMutexGuard</code> for a component of the borrowed \xe2\x80\xa6DeMakes a <code>MappedRwLockReadGuard</code> for a component of the \xe2\x80\xa6DfMakes a <code>MappedRwLockWriteGuard</code> for a component of the \xe2\x80\xa633333333333333DjApplies <code>filter_op</code> to each item of this iterator to get an \xe2\x80\xa60321332121DhReturns an <code>OccupiedEntry</code> for an entry in the table with \xe2\x80\xa6DmSearches for the sequentially <strong>first</strong> item in the parallel \xe2\x80\xa60CkReturns the index of the given character in this font face.DjFinds the index of the first occurrence of <code>element</code> in the \xe2\x80\xa6BnReturns the offset of the slice if it is foundCiReturns the index of the first <code>None</code> element.CiReturns the index of the first <code>Some</code> element.DjReturn an iterator adaptor that flattens every <code>Result::Ok</code> \xe2\x80\xa6000DiReturns a copy of <code>self</code> flipping the bits that are set in \xe2\x80\xa600DnFlips the bits in <code>self</code> from the <code>[start..=end]</code> range.00000000000DbReturns a copy of <code>self</code> with flipped bits from the \xe2\x80\xa600CgRound each lane to a whole number, towards negative \xe2\x80\xa60CgRound <code>f32</code> lanes towards negative infinity.0EeReturns <code>a * b + c</code> for <code>f16</code> values, non-deterministically \xe2\x80\xa600EeReturns <code>a * b + c</code> for <code>f32</code> values, non-deterministically \xe2\x80\xa600EeReturns <code>a * b + c</code> for <code>f64</code> values, non-deterministically \xe2\x80\xa600Di<code>core</code> Compares the addresses of the two function pointers \xe2\x80\xa60DdCompares the <em>addresses</em> of the two function pointers for \xe2\x80\xa600AkSee <code>.reduce()</code>.CkAn iterator method that applies a function, producing a \xe2\x80\xa6000AoThe font to layout the text in.CkThe index of the font used to generate this glyph position.CcWrites formatted output into the given byte buffer.Dg\xf0\x9f\x96\xb9 Returns a formatted <code>str</code> slice backed by a buffer, \xe2\x80\xa60C`Enable fractional formatting for the given unit.BbA pointer to a FFFramePool struct.CnFrame rate of the stream on the link, or 1/0 if unknown or \xe2\x80\xa6CmVideo only, the frame rate of the input video. This field \xe2\x80\xa6ClAudio only. Audio frame size, if known. Required by some \xe2\x80\xa6C`Number of samples per channel in an audio frame.jAudio only00EgThis function acts identically to <code>free</code>, but takes a <code>usize</code> \xe2\x80\xa6BkTransmutes an array into <code>m128</code>.BlTransmutes an array into <code>m128d</code>.BkTransmutes an array into <code>m256</code>.BlTransmutes an array into <code>m256d</code>.CdConverts an array into a <code>full</code> destaque.CaConverts an array into a <code>full</code> stack.AeCreate from an array.0000000BjConverts an array of bools to a SIMD mask.BcConverts an array to a SIMD vector.BkTransmutes an array into <code>m512</code>.BlTransmutes an array into <code>m512d</code>.BlTransmutes an array into <code>m512i</code>.ChReturns a new instance constructed from the given bytes.0CeReturns a string from an array of <code>bytes</code>.CdReturns a string from a slice of <code>bytes</code>.2ClRe-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.0BiConstructs a font from an array of bytes.DcPrepares a read-only memory buffer for use with <code>RWops</code>.CaConverts a slice of bytes to an HTTP header name.CnAttempt to convert a byte slice to a <code>HeaderValue</code>.BlConverts a slice of bytes to an HTTP method.CcConverts a <code>&amp;[u8]</code> to a status code.C`Creates an <code>OsStr</code> from a byte slice.0DaCreates a new <code>StringNonul</code> from a <code>char7</code>.CnCreates a new <code>StringU8</code> from a <code>char7</code>.CdConverts a <code>char7</code> to <code>char8</code>.CeConverts a <code>char7</code> to <code>char16</code>.DcCreates a new <code>GraphemeNonul</code> from a <code>char7</code>.D`Creates a new <code>GraphemeU8</code> from a <code>char7</code>.DdCreates a new <code>GraphemeString</code> from a <code>char7</code>.DaCreates a new <code>StringNonul</code> from a <code>char8</code>.CnCreates a new <code>StringU8</code> from a <code>char8</code>.CeConverts a <code>char8</code> to <code>char16</code>.DcCreates a new <code>GraphemeNonul</code> from a <code>char8</code>.D`Creates a new <code>GraphemeU8</code> from a <code>char8</code>.DdCreates a new <code>GraphemeString</code> from a <code>char8</code>.DcConverts a digit in the given radix to a <code>char</code>. Use \xe2\x80\xa600DhCreates a new <code>TimeDelta</code> from the given number of hours. \xe2\x80\xa6DgCreates a new <code>Duration</code> from the specified number of hours.DfCreates a new <code>SignedDuration</code> from the given number of \xe2\x80\xa6CiCreates a new time zone offset from a given number of \xe2\x80\xa6Bmwidens and sign extends to <code>i32x8</code>Bawidens and sign extends to i16x16DdConverts a linear index back into <code>(row, col)</code>, if valid.00000000000DoReturns a <code>Month</code> from its index, from <code>January=0</code> to \xe2\x80\xa6BhCreates an error from the input position0DgCreates a new <code>TimeDelta</code> from the given number of whole \xe2\x80\xa6DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6DhCreates a new <code>SignedDuration</code> from the given number of wholeEgCreates a <code>Vec&lt;T&gt;</code> directly from a <code>NonNull</code> pointer, a \xe2\x80\xa6AfConstructs a new frameCkCreates a <code>DateTime</code> from its constituent parts.DjCreates a new <code>Request</code> with the given components parts and \xe2\x80\xa6D`Creates a new <code>Response</code> with the given head and bodyD`Attempt to convert a <code>Parts</code> into a <code>Uri</code>.ClConstructs a new <code>ImageBuffer</code> by copying a pixelCnInitializes the array from an iterator until it\xe2\x80\x99s either \xe2\x80\xa6DdConvert to <code>Rgba&lt;u8&gt;</code> by scaling each component \xe2\x80\xa6BhCreate from <code>Rgb&lt;u16&gt;</code>.10BhCreate from <code>Rgba&lt;u8&gt;</code>.0DiCreates a new <code>CodecFlags</code> from a slice of <code>bool</code>s.DeConverts a slice to a SIMD vector containing <code>slice[..N]</code>.AlReturns a view into a slice.BbConstruct from a given byte slice.000000000000000000000000000000CgInstantiate a EncapsulationKey with key-checks from \xe2\x80\xa6111011011BoConstruct from given byte slice and parameters.2222AoDeserializes bytes into a type.DcCreates a new <code>XoroShift128p</code> generator, seeded from \xe2\x80\xa6ClCreates a new Xoroshiro128++ PRNG, seeded from addresses \xe2\x80\xa6BgRestores the PRNG from the given state.0000000000AdCreate from a tuple.0000000Bmwidens and zero extends to <code>i32x8</code>EeConstructs a <code>u16</code> from an array of <code>[u8; 2]</code> in big-endian \xe2\x80\xa6EgConstructs a <code>u128</code> from an array of <code>[u8; 16]</code> in big-endian \xe2\x80\xa6EeConstructs a <code>u32</code> from an array of <code>[u8; 4]</code> in big-endian \xe2\x80\xa6EeConstructs a <code>u64</code> from an array of <code>[u8; 8]</code> in big-endian \xe2\x80\xa6EhConstructs a <code>u16</code> from an array of <code>[u8; 2]</code> in little-endian \xe2\x80\xa6EhConstructs a <code>u64</code> from an array of <code>[u8; 8]</code> in little-endian \xe2\x80\xa6EhConstructs a <code>u32</code> from an array of <code>[u8; 4]</code> in little-endian \xe2\x80\xa6DlConstructs a <code>u128</code> from an array of <code>[u8; 16]</code> in \xe2\x80\xa6EhConstructs a <code>u64</code> from an array of <code>[u8; 8]</code> in native-endian \xe2\x80\xa6EhConstructs a <code>u32</code> from an array of <code>[u8; 4]</code> in native-endian \xe2\x80\xa62EhConstructs a <code>u16</code> from an array of <code>[u8; 2]</code> in native-endian \xe2\x80\xa6DhDecode a native endian UTF-16\xe2\x80\x93encoded vector <code>v</code> into a \xe2\x80\xa6AdCreates a new PyErr.DbCreates a new <code>Context</code> from a <code>&amp;Waker</code>.BfCreates a ContextBuilder from a Waker.DgCreates a new <code>Duration</code> from the specified number of weeks.CeWhether the window should be <code>fullscreen</code>.DjIf <code>true</code>, create the window in fullscreen mode (ignored on \xe2\x80\xa600AnSets the window to fullscreen.CmGet the gamma ramp in form of 3 vectors for a given window\xe2\x80\xa6CcReads elementwise from pointers into a SIMD vector.BjReturns the contained value by cloning it.000CnGets the default <code>CodecRegistry</code>. This registry \xe2\x80\xa6CkCalculates the 2D coordinates from the given 1D array index0Bdif channel is fading in, out, or notAkIf music is fading, or not.CnCallback to negotiate the pixel format. Decoding only, may \xe2\x80\xa6C`Returns the minute, as an int from 0 through 59.BoReturns the number of month units in this span.DcGets the reference count of the <code>ffi::PyObject</code> pointer.CbReturns the reference count for the Python object.0BlRetreieve measured duration in nanonseconds.BcGet a reference to a single sample.CjGet a reference to a selected subpixel if it is in-bounds.BgGet a reference to a selected subpixel.C`Returns the second, as an int from 0 through 59.BgReturns the tzinfo (which may be None).CkGet key/values for values that are visually children of \xe2\x80\xa600Amcurrent volume for the chunk.CaReturns the channels volume on scale of 0 to 128.AfReturns current volumeBo<code>core</code> Module-level inline assembly.0AmModule-level inline assembly.00Dk<strong>Gets</strong> the attribute: the minimum number of bits for the \xe2\x80\xa6C`Checks if the <em>AltGraph</em> modifier is set.CkSupports CET shadow stack features. Processors that set \xe2\x80\xa6CkL1 Context ID. A value of 1 indicates the L1 data cache \xe2\x80\xa6BhSupports Fast Short REP CMPSB, REP SCASBoSupports HRESETAmSupports L2 Cache Allocation.AmSupports L3 Cache Allocation.DkDetermine if this implementation of <code>ColorMap</code> overrides the \xe2\x80\xa6CnIndicate <code>NeuQuant</code> implements <code>lookup</code>.1CbA value of 1 indicates that the OS has enabled \xe2\x80\xa6CjA value of 1 indicates that the processor supports the \xe2\x80\xa6CiA value of 1 indicates that processor supports RDRAND \xe2\x80\xa6A`Supports RDSEED.BeCheck support for rdtscp instruction.CcQuery whether a game controller has rumble support.BlQuery whether a joystick has rumble support.BhSEV Encrypted State is supported if set.BbSupports SGX Launch Configuration.AnSKINIT and STGI are supported.CmHas Software uncorrectable error containment and recovery \xe2\x80\xa6BoIndicates the following MSRs are supported: \xe2\x80\xa6CmA value of 1 indicates that the processor supports x2APIC \xe2\x80\xa6BdSupports XGETBV with ECX = 1 if set.ChSupports XSAVEC and the compacted form of XRSTOR if set.DhComputes a hash of a byte slice using the <strong>default seed</strong>.00AfComputes a hash index.CnFeeds a slice of this type into the given <code>Hasher</code>.00000ClA hash table implemented with quadratic probing and SIMD \xe2\x80\xa6CgRecognizes zero or more ASCII hexadecimal numerical \xe2\x80\xa6CfRecognizes one or more ASCII hexadecimal numerical \xe2\x80\xa6Cm(go) Moves the browser to a specific point in the session \xe2\x80\xa6ClWhether to limit requests (including redirects) to https \xe2\x80\xa60CkThe hypothenuse (the euclidean distance) using the fast \xe2\x80\xa6CdIgnores one bit from the stream or returns an error.0CnA helper macro to concisely implement a few common utility \xe2\x80\xa60CjThere was not enough data to determine the appropriate \xe2\x80\xa60BeInitializes elements from an iteratorAkPrepares the use of Python.Cj(innerWidth) (innerHeight) The extent in pixels of the \xe2\x80\xa60Ah&lt; array of input padsAkInserts new button mapping.DkInserts an element at <code>index</code> within the deque, shifting all \xe2\x80\xa6DhInserts an element at position <code>index</code> within the vector, \xe2\x80\xa6DiInserts a string slice into this <code>String</code> at byte position \xe2\x80\xa6DhInserts a string slice into this <code>String</code> at a byte position.BhReturns the number of digits in base 10.00CfReturns <code>true</code> if <code>self</code> is odd.00EbComputes the non-negative modulo of <code>self</code> over |<code>modulus</code>|.00CmAlternate elements from two iterators until both have run \xe2\x80\xa6000AeInterleave two masks.AgInterleave two vectors.EbCreate an iterator that interleaves elements in <code>i</code> and <code>j</code>.CmInterleaves elements of this iterator and the other given \xe2\x80\xa60CmWhether any set bits in a source flags value are also set \xe2\x80\xa600000000000000000000EeReturns <code>true</code> if there are flags common to both <code>self</code> and \xe2\x80\xa60000000BlConverts the boxed slice into a boxed array.CeReturns the inner <code>Box</code>ed primitive array.CiReturns the inner <code>BareBox</code>ed primitive array.10BoConverts the reference-counted slice into a \xe2\x80\xa6BoReturns the inner array with the full contents.000AjConvert to an inline array2DkTurns this smart pointer into an owned <code>Bound&lt;&#39;py, T&gt;</code>DcSame as <code>bind</code> but takes ownership of <code>self</code>.DeConsumes the <code>CString</code> and returns the underlying byte \xe2\x80\xa6CbConverts a <code>String</code> into a byte vector.CiReturn this image\xe2\x80\x99s pixels as a byte vector. If the \xe2\x80\xa61CiReturns the bytes that were attempted to convert to a \xe2\x80\xa600EfConverts a <code>String</code> into an iterator over the <code>char</code>s of the \xe2\x80\xa6DhConsumes the <code>IntoInnerError</code> and returns the error which \xe2\x80\xa6DkReturns the inner value, if the <code>Arc</code> has exactly one strong \xe2\x80\xa6CdConsumes the atomic and returns the contained value.CkConsumes the <code>Box</code>, returning the wrapped value.1111111111111111DnUnwraps this <code>BufReader&lt;R&gt;</code>, returning the underlying reader.DnUnwraps this <code>BufWriter&lt;W&gt;</code>, returning the underlying writer.DfUnwraps this <code>LineWriter</code>, returning the underlying writer.DdConsumes the <code>Error</code>, returning its inner error (if any).AnReturns the inner stored type.CoConsumes this <code>LazyCell</code> returning the stored value.BoConsumes the cell, returning the wrapped value.BfUnwraps the value, consuming the cell.DjReturns the inner value, if the <code>Rc</code> has exactly one strong \xe2\x80\xa6CoConsumes the <code>RefCell</code>, returning the wrapped value.2CcConsumes this mutex, returning the underlying data.DaConsumes this <code>RwLock</code>, returning the underlying data.CkConsumes this error indicating that a lock is poisoned, \xe2\x80\xa6CoConsumes this <code>LazyLock</code> returning the stored value.DhConsumes the <code>OnceLock</code>, returning the wrapped value. ReturnsClReturns the buffered writer instance which generated the \xe2\x80\xa6CeConsumes this cursor, returning the underlying value.CoConsumes the <code>Chain</code>, returning the wrapped readers.CmConsumes the <code>Take</code>, returning the wrapped reader.A`The inner value.BnConsumes the lock and returns the inner value.BgReturns the inner <code>PathBuf</code>.D`Extracts the value from the <code>ManuallyDrop</code> container.DiDestructures the <code>RangeInclusive</code> into (lower bound, upper \xe2\x80\xa6ClConsumes the <code>Rev</code>, returning the inner iterator.DkUnwraps this <code>Pin&lt;Ptr&gt;</code>, returning the underlying pointer.CmConsumes the <code>Ready</code>, returning the wrapped value.ClUnwraps the value, consuming this <code>UnsafePinned</code>.ChUnwrap the value contained in the <code>Exclusive</code>CdConsumes the atomic and returns the contained value.00000000000DaConsumes the <code>DropGuard</code>, returning the wrapped value.BfUnwraps the value, consuming the cell.AbUnwrap the reader.AkTake out the sample buffer.0CkExtract the reader and header after an image has been read.CkConsumes the <code>Box</code>, returning the wrapped value.0CjConsume the error, yielding the message that failed to \xe2\x80\xa600CiExtract the value of an either over two equivalent types.BiReturn the value in the continue or done.DiConsumes this <code>DowncastIntoError</code> and returns the original \xe2\x80\xa6BoConsumes the cell, returning the wrapped value.0AiReturns the inner source.0000000ChConsumes the limiter and returns the inner audio source.111111111CkDestroys this iterator and returns the underlying iterator.00CkReturns the closure as a trait-object and cancels the timerCjConvert the <code>ScopedStream</code> to the inner stream.DoUnwraps this <code>ReadOnlySource&lt;R&gt;</code>, returning the underlying \xe2\x80\xa6CbReturns the inner metadata log, if it was present.DkDestroys the <code>FormatReader</code> and returns the underlying media \xe2\x80\xa60CbConsumes the mutex, returning the underlying data.CaConsumes the lock, returning the underlying data.CmTakes the value from the cell, destroying the cell in the \xe2\x80\xa60DbConsume the <code>TrySendError</code>, returning the unsent value.FbSplits this <code>Join</code> back into its <code>AsyncRead</code> and <code>AsyncWrite</code> \xe2\x80\xa6CmConsumes the <code>Take</code>, returning the wrapped reader.DjUnwraps this <code>Lines&lt;R&gt;</code>, returning the underlying reader.DfConsumes this <code>BufWriter</code>, returning the underlying writer.DfConsumes this <code>BufStream</code>, returning the underlying I/O \xe2\x80\xa6DfConsumes this <code>BufReader</code>, returning the underlying reader.C`Turn the adapter back into the wrapped transportBhExtract the original <code>Stream</code>CkUnwrap the mode, returning the underlying error, if present0BoUnwrap the mode, returning the underlying errorBeThe original <code>ParserError</code>CbConsumes this lock, returning the underlying data.CcConsumes this mutex, returning the underlying data.DaConsumes this <code>RwLock</code>, returning the underlying data.CnReturns the perhaps-unwritten data.  Some of this data may \xe2\x80\xa6DkReturns the inner value, if the <code>Arc</code> has exactly one strong \xe2\x80\xa6BkConsume the image and returns a Luma image.AhExtracts the owned data.BkConverts the container into an owned value.C`Extracts the owned <code>AVChannelLayout</code>.DeConverts this <code>Pieces</code> into an \xe2\x80\x9cowned\xe2\x80\x9d value whose \xe2\x80\xa6CjConverts this time zone annotation into an \xe2\x80\x9cowned\xe2\x80\x9d \xe2\x80\xa6CnConverts this time zone annotation kind into an \xe2\x80\x9cowned\xe2\x80\x9d\xe2\x80\xa6CnConverts this time zone annotation name into an \xe2\x80\x9cowned\xe2\x80\x9d\xe2\x80\xa6CnConvert this iterator into its owned variant, such that it \xe2\x80\xa60ClConvert this finder into its owned variant, such that it \xe2\x80\xa60AcObtaining ownership0ClConsumes the join error, returning the object with which \xe2\x80\xa6DoDisassembles this <code>BufWriter&lt;W&gt;</code>, returning the underlying \xe2\x80\xa6DcDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: \xe2\x80\xa6DhConsumes the <code>IntoInnerError</code> and returns the error which \xe2\x80\xa6BnSplit the <code>PutBack</code> into its parts.CgConsumes the request returning the head and body parts.ChConsumes the response returning the head and body parts.CcConvert a <code>Uri</code> into <code>Parts</code>.EeReturns the <code>PidFd</code> created for this <code>Child</code>, if available. \xe2\x80\xa6BjConsume the image and returns a RGB image.BkConsume the image and returns a RGBA image.EbIf <code>Right</code> or <code>Both</code>, return the right value. Otherwise, \xe2\x80\xa6D`Returns the inner <code>Box</code>ed primitive array as a slice.0ChGet the underlying bytes as a mutable slice with the \xe2\x80\xa6CkViews the underlying data as a subslice of the original \xe2\x80\xa6CnConverts the loaded sound into a live, playing sound and a \xe2\x80\xa6DhUpcast this <code>Bound&lt;PyClass&gt;</code> to its base type by value.BmGets a <code>PyRef&lt;T::BaseType&gt;</code>.0CdGets a <code>PyClassGuard&lt;T::BaseType&gt;</code>.CgGets a <code>PyClassGuardMut&lt;T::BaseType&gt;</code>.DkConverts the <code>OccupiedEntry</code> into a mutable reference to the \xe2\x80\xa6DiConverts the <code>VacantEntry</code> into a mutable reference to the \xe2\x80\xa6DiConverts the <code>AbsentEntry</code> into a mutable reference to the \xe2\x80\xa6AgReturns the root table.0AbConvert to a tableBmCasts <code>self</code> to <code>Table</code>CkReturns both bounds as a tuple <code>(lower, upper)</code>.EdSplits a <code>u32</code> into an array of <code>[u8; 4]</code> in big-endian order.EdSplits a <code>u16</code> into an array of <code>[u8; 2]</code> in big-endian order.EdSplits a <code>u64</code> into an array of <code>[u8; 8]</code> in big-endian order.EcSplits a <code>u128</code> into an array of <code>[u8; 16]</code> in big-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u8; 16]</code> in little-endian \xe2\x80\xa6EdSplits a <code>u32</code> into an array of <code>[u8; 4]</code> in little-endian \xe2\x80\xa6EdSplits a <code>u64</code> into an array of <code>[u8; 8]</code> in little-endian \xe2\x80\xa6EdSplits a <code>u16</code> into an array of <code>[u8; 2]</code> in little-endian \xe2\x80\xa6EdSplits a <code>u32</code> into an array of <code>[u8; 4]</code> in native-endian \xe2\x80\xa6EdSplits a <code>u16</code> into an array of <code>[u8; 2]</code> in native-endian \xe2\x80\xa6EdSplits a <code>u64</code> into an array of <code>[u8; 8]</code> in native-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u8; 16]</code> in native-endian \xe2\x80\xa6EjExtracts the value <code>T</code> that is wrapped by <code>ControlFlow&lt;T, T&gt;</code>.AlTake ownership of the value.CjConsumes self to take ownership of the exception value \xe2\x80\xa6BmCasts <code>self</code> to <code>Value</code>AaThe wrapped value33AdCompiler intrinsics.00C`Returns the kind/type of the implementing value.0DcReturns whether the pointer is properly aligned for <code>T</code>.CnChecks if <code>value</code> is aligned to <code>align</code>.BmWhether the bit at <code>index</code> is set.00CgChecks if the interval is both lower and upper bounded.DdReturns <code>true</code> if this unicode scalar has the general \xe2\x80\xa60ClChecks if the value is a control character: 0x00 NUL ..= \xe2\x80\xa6CeMarks if the character is an ASCII control character.ClReturns true if the OpenGL context is the current one in \xe2\x80\xa6BjChecks if the stored value is the default.DdReturns true if event is <code>Dropped</code> and should be ignored.EgReturns <code>true</code> if the result is <code>Err</code> and the value inside of \xe2\x80\xa6oIs this a file?ClChecks if the value is a graphic character: 0x21 \xe2\x80\x98!\xe2\x80\x99 \xe2\x80\xa6BcTrue if bit n is supported in XCR0.C`Returns true if <code>self</code> is an integer.0CkMarks if the character is missing from its associated font.BbTests if byte is ASCII newline: \\n0EfReturns <code>true</code> if the option is a <code>None</code> or the value inside \xe2\x80\xa6CkWhether <code>self</code> is equal to <code>NUM_MAX</code>.00CkWhether <code>self</code> is equal to <code>NUM_MIN</code>.00CkWhether <code>self</code> is equal to <code>NUM_ONE</code>.00CkWhether <code>self</code> is equal to <code>NUM_TWO</code>.00DkReturns <code>true</code> if this unicode scalar has one of the general \xe2\x80\xa60EhChecks if this <code>ReadHalf</code> and some <code>WriteHalf</code> were split from \xe2\x80\xa6EhChecks if this <code>WriteHalf</code> and some <code>ReadHalf</code> were split from \xe2\x80\xa6CnReport whether the <code>Stream</code> is currently incomplete0DfReturns <code>true</code> if the poll is a <code>Pending</code> value.Anif channel is playing, or not.BeIf music is actively playing, or not.CmExamines cached gamepad state to check if given button is \xe2\x80\xa6EgReturns <code>true</code> if given button is pressed. Returns <code>false</code> if \xe2\x80\xa6BoReturns <code>true</code> if button is pressed.CgReturns <code>true</code> if this is a private address.DhRetuns <code>true</code> if the fraction is in the simplest possible \xe2\x80\xa6000CaReturns whether the key event is a release event.BbCheck if status is within 200-299.DkReturns <code>true</code> if the path exists on disk and is pointing at \xe2\x80\xa6DbReturns <code>true</code> if this metadata is for a symbolic link.ClTests whether this file type represents a symbolic link. \xe2\x80\xa6AhIs this a symbolic link?DkChecks if <code>object</code> is an instance of this type or a subclass \xe2\x80\xa60DiReturns <code>true</code> if this is a unicast address, as defined by \xe2\x80\xa6DfReturns <code>true</code> if the 2 dimensions of the extent are equal.CfReturns true if and only if this time zone is unknown.CfReturns <code>true</code> if this is an unknown event.CdReturns <code>true</code> if the address is unnamed.Cnbase \xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A downcasted pointer-sized signed integer \xe2\x80\xa60AoGets the total number of items.BlYield a set of contained named flags values.00000000000000000000DgJoins a collection of Paths appropriately for the <code>PATH</code> \xe2\x80\xa6EdJoins a collection of <code>Path</code>s appropriately for the <code>PATH</code> \xe2\x80\xa6GbIf <code>Right</code>, return <code>Some</code> with the right value. If <code>Left</code> or <code>Both</code>\xe2\x80\xa6ChSort the k smallest elements into a new iterator, in \xe2\x80\xa6000A`minimum GOP sizeCcRange over which limiting gradually increases (dB).CbReturns the last entry in the map for in-place \xe2\x80\xa6CeReturns the surrounding whitespace for the line entry0Cn&lt; How fast to increase the force towards the negative side.DgCalculates a linearly interpolated value between <code>u..=v</code> \xe2\x80\xa6BdLoads the reference into a register.000BfLoad data from memory into a register.000AjLoad src for use as music.Chload as a surface. This can load all supported image \xe2\x80\xa6ClReturns the socket address of the local half of this TCP \xe2\x80\xa6CbReturns the local socket address of this listener.CkReturns the socket address that this socket was created \xe2\x80\xa6BcReturns the address of this socket.2ChReturns the socket address of the local half of this \xe2\x80\xa6CmLocks this mutex, causing the current task to yield until \xe2\x80\xa6DjComputes the logarithm to the given <code>base</code> using the change \xe2\x80\xa6BnPrints passed tokens into the standard output.00000000000000000AlReplace invalid utf-8 chars.BdPerforms low-level surface blitting.DdReturns the index of the lowest bit set to one in <code>self</code>.00000000000DhReturns the leftmost exclusive sub-<code>slice</code> with the given \xe2\x80\xa6BiReturns a handle to the main mixer track.AkIn-place convert to a valueEeReturns <code>true</code> if this requires <code>Command</code> to create a new pipe.GbApply the functions <code>f</code> and <code>g</code> to the <code>Left</code> and <code>Right</code> variants \xe2\x80\xa6BkMasks all bits with an index less than idx.DfReturns a new bitmask of 1s from the <code>[start..=end]</code> range.00000000000ChMasks out all bits in positions less than upper, but \xe2\x80\xa6111BnMasks all bits with an index greater than idx.CaA SIMD mask with one element for vectors with \xe2\x80\xa600000CbA SIMD mask with two elements for vectors with \xe2\x80\xa600000CcA SIMD mask with four elements for vectors with \xe2\x80\xa600000CdA SIMD mask with eight elements for vectors with \xe2\x80\xa600000CkThe highest point that any glyph in the font extends to \xe2\x80\xa6CmReturns the element that gives the maximum value from the \xe2\x80\xa600000000000000000000000DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6CkComputes the item that yields the maximum value for the \xe2\x80\xa602CkAn optional bottom boundary on the text region. This is \xe2\x80\xa6Cf&lt; maximum value for lowres supported by the decoderCgLow lane <code>max(a, b)</code>, other lanes unchanged.0CcThe number of pixels per image to maximally accept.CmReturn all maximum elements of an iterator, as determined \xe2\x80\xa6000DgReturns the maximum (IEEE 754-2019 maximum) of two <code>f16</code> \xe2\x80\xa600DgReturns the maximum (IEEE 754-2019 maximum) of two <code>f32</code> \xe2\x80\xa600DgReturns the maximum (IEEE 754-2019 maximum) of two <code>f64</code> \xe2\x80\xa600DgReturns the maximum (IEEE 754-2008 maxNum) of two <code>f128</code> \xe2\x80\xa600Bmmotion estimation prepass comparison functionBnsubpixel motion estimation comparison functionDbThe Media Type (MIME Type) used to encode the <code>Visual</code>.DhForgets about <code>self</code> <em>without running its destructor</em>.00DhReturns the value of type <code>T</code> represented by the all-zero \xe2\x80\xa600CmCreate a SDL_MetalView when constructing the window. This \xe2\x80\xa6CjReturns a mutable reference to the associated HTTP method.BeGet the HTTP Method for this request.0CgChained interception to modify the request or response.CeAdd middleware to use for each request in this agent.CkMIME type(s) associated with the codec. May be NULL; if \xe2\x80\xa6ClA list of case-insensitive MIME types that are generally \xe2\x80\xa6CmReturns the element that gives the minimum value from the \xe2\x80\xa600000000000000000000000DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6CkComputes the item that yields the minimum value for the \xe2\x80\xa602CnGet the minimum length of a buffer such that all in-bounds \xe2\x80\xa6000CgLow lane <code>min(a, b)</code>, other lanes unchanged.0CmReturn all minimum elements of an iterator, as determined \xe2\x80\xa6000Be<code>mini-alloc</code> modificationsDgReturns the minimum (IEEE 754-2019 minimum) of two <code>f16</code> \xe2\x80\xa600DgReturns the minimum (IEEE 754-2019 minimum) of two <code>f32</code> \xe2\x80\xa600DgReturns the minimum (IEEE 754-2019 minimum) of two <code>f64</code> \xe2\x80\xa600DgReturns the minimum (IEEE 754-2008 minNum) of two <code>f128</code> \xe2\x80\xa600BnBit vector of supported extended SGX features.BkMMX detection routine (with override flag).EfModifies the value inside the <code>Cell&lt;Option&lt;T&gt;&gt;</code> by applying \xe2\x80\xa6000DkComputes the modulo of <code>self + other</code> over <code>modulus</code>.DgComputes the non-negative modulo of <code>self + other</code> over |\xe2\x80\xa6CmComputes <code>self / other</code> over <code>modulus</code>.CoComputes <code>self / other</code> over |<code>modulus</code>|.23DkComputes the modulo of <code>self - other</code> over <code>modulus</code>.DmComputes the modulo of <code>self - other</code> over |<code>modulus</code>|.DkReturns whether the mouse was grabbed by <code>set_mouse_grab</code> or \xe2\x80\xa6DiReturns <code>Rect</code> to which the mouse is currently confined by \xe2\x80\xa6CfReturns the last modification time of the file, in \xe2\x80\xa600BgPerforms the <code>*=</code> operation.0000CcLow lane <code>a * b</code>, other lanes unchanged.0CkMultiplies the minimum and maximum values of the output \xe2\x80\xa6CgThis configures multi-line mode for the entire pattern.BnUnzip this iterator into multiple collections.CjConverts an iterator of tuples into a tuple of containers.010001Al(name) Gets the window name.DkEquivalent to <code>nanoseconds()</code>, but reads better for singular \xe2\x80\xa6ChReturns the \xe2\x80\x9cnanosecond\xe2\x80\x9d component of this zoned \xe2\x80\xa6CaSet the nanosecond field on a <code>Zoned</code>.ChReturns the \xe2\x80\x9cnanosecond\xe2\x80\x9d component of this datetime.CdSet the nanosecond field on a <code>DateTime</code>.CdReturns the \xe2\x80\x9cnanosecond\xe2\x80\x9d component of this time.C`Set the nanosecond field on a <code>Time</code>.BiNanosecond: 0 to <code>999_999_999</code>Bc&lt; number of autodetected devicesBkNumber of DRM objects making up this frame.BmThe number of entries in the list of outputs.Aj&lt; number of output padsCknumber of audio samples (per channel) described by this \xe2\x80\xa6BnNumber of elements in AVFormatContext.streams.DaMax number of threads allowed in this filter instance. If &lt;\xe2\x80\xa6ClMaximum number of threads used by filters in this graph. \xe2\x80\xa6CbReturns true if dropping values of type T matters.EfReturns <code>true</code> if the actual type given as <code>T</code> requires drop \xe2\x80\xa6DlReturns <code>true</code> if dropping values of type <code>T</code> matters.1010CkNegates the minimum and maximum values of the output range.BfSet the nesting limit for this parser.B`Create a buffer resource object.000CnReturns an empty destaque, allocated in the stack, copying \xe2\x80\xa6CkReturns an empty stack, allocated in the stack, copying \xe2\x80\xa6FcConstructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the \xe2\x80\xa6FbConstructs a new <code>Rc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the \xe2\x80\xa61CbBuilds a new looped decoder with default settings.CjCreates a dynamic image backed by a buffer of gray pixels.CiCreates a dynamic image backed by a buffer of RGB pixels.CjCreates a dynamic image backed by a buffer of RGBA pixels.BiInstantiate a N-point IMDCT with scaling.AfHPKE Base mode sender.AeHPKE Psk mode sender.AfHPKE Auth mode sender.AiHPKE AuthPsk mode sender.CiFor metal context\xe2\x80\x99s ShaderSource should contain MSL \xe2\x80\xa6000DeInstantiates a new <code>CodebookBuilder</code> for sparse codebooks.EdGenerates some unique <code>ExampleIdSeqUsize</code> ID with <code>SeqCst</code> \xe2\x80\xa6CnConstructs a new <code>Arc</code> with uninitialized contents.CaConstructs a new box with uninitialized contents.CmConstructs a new <code>Rc</code> with uninitialized contents.12DiMoves a type to the heap with its <code>Metadata</code> stored in the \xe2\x80\xa6DkConstructs a new <code>Box</code> with uninitialized contents, with the \xe2\x80\xa6DjConstructs a new <code>Rc</code> with uninitialized contents, with the \xe2\x80\xa61DkConstructs a new <code>Arc</code> with uninitialized contents, with the \xe2\x80\xa6BdReturns self with all bits set to 0.00ClAdvances the iterator and returns the next items grouped \xe2\x80\xa6000CmAdvances the iterator and returns an array containing the \xe2\x80\xa6000000000000000000000DaThis returns <code>Ok(Some((key, value)))</code> for the next \xe2\x80\xa6CmReturns next pending event. If there is no pending event, \xe2\x80\xa6DkConsume and return the next item if it is equal to <code>expected</code>\xe2\x80\xa6ClWorks exactly like the <code>next_if_eq</code> method in \xe2\x80\xa6BnRetrieve the current position of the iterator.DbFinds the next <code>Match</code> result. See <code>next()</code>.0000BjSplit off a slice of tokens from the input0BgSplit off the next token from the input09999DdThis returns a <code>Ok(value)</code> for the next value in the map.BmWakes up all blocked threads on this condvar.BlWakes up one blocked thread on this condvar.B`Notifies the first waiting task.BnReturns the current timestamp in microseconds.00BnReturns the current timestamp in milliseconds.0FbReturns the <code>nth</code> element cloned, or <code>None</code> if <code>nth &gt;= ARITY</code>.0CbReturns the number of clocks that currently exist.DaReturns the number of frames in the <code>StaticSoundData</code>.BmReturns the total number of samples of audio.DdReturns the number of frames in the <code>StreamingSoundData</code>.CfReturns <code>true</code> if <code>self</code> is one.00000CjReturns the number of sounds currently playing on this \xe2\x80\xa600E`Recognizes zero or more octal characters: <code>&#39;0&#39;..=&#39;7&#39;</code>DoRecognizes one or more octal characters: <code>&#39;0&#39;..=&#39;7&#39;</code>BkFinds the offset of the next matching token0EoTransforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping \xe2\x80\xa6CbSets the background color to <code>Magenta</code>.AmFrame owner\xe2\x80\x99s private data.CiAVBufferRef for free use by the API user. FFmpeg will \xe2\x80\xa6ClOpens the default audio device for playback. If you need \xe2\x80\xa6CbAuthenticate and decrypt a single message and tag.DhDecrypts <code>ciphertext</code>. Returns the decrypted data and the \xe2\x80\xa6ChReturns the number of open files in the current process.ClOpens a new audio device which uses queueing rather than \xe2\x80\xa6CmOpens a new audio device given the desired parameters and \xe2\x80\xa6Dd<code>core</code> Optionally inspects an environment variable at \xe2\x80\xa60CjOptionally inspects an environment variable at compile \xe2\x80\xa600000000000000000ClEnsures a value is in the entry by inserting the default \xe2\x80\xa600FcReturns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, \xe2\x80\xa61CmThis function simply quits the application without giving \xe2\x80\xa6BnPrints to the standard output, with a newline.0BdThe name of the detected OS version.0ChReturns the system version (e.g. for macOS this will \xe2\x80\xa6Cj(outerWidth) (outerHeight) The extent in pixels of the \xe2\x80\xa60CiDuplicates the second back pair of elements, at the back.CbDuplicates the second front element, at the front.BlDrops the top <code>n</code> stack elements.ChRotates the top three stack elements, counter-clockwise.CnProvides an architecture independent implementation of the \xe2\x80\xa6ClA 128-bit vector implementation of the \xe2\x80\x9cpacked pair\xe2\x80\x9d \xe2\x80\xa6ClA 256-bit vector implementation of the \xe2\x80\x9cpacked pair\xe2\x80\x9d \xe2\x80\xa6ClWraps an iterator with a fuse in case of panics, to halt \xe2\x80\xa60DcCreates a bridge from this type to a <code>ParallelIterator</code>.0DdReturns a parallel iterator over at most <code>chunk_size</code> \xe2\x80\xa60CkExtends an instance of the collection with the elements \xe2\x80\xa60CnReturns a parallel iterator over the pixels of this image, \xe2\x80\xa6Ao\\brief Window-shape parameters.AnParses an ANSI color sequence.CmParse an ANSI foreground or background color. This is the \xe2\x80\xa6CjParse a civil date string into a <code>civil::Date</code>.DdTake tokens from the <code>Stream</code>, turning it into the output000CjRun the parser on the given string (which may be plain \xe2\x80\xa6CcParse a span string into a <code>Span</code> value.CjParse a civil time string into a <code>civil::Time</code>.C`Returns a shared reference to the front element.BjSplit off a slice of tokens from the input0BgSplit off the next token from the input0CkConvert a slice to the wrapped type into a slice to the \xe2\x80\xa6CjReturns an iterator over the mutable pixels of this image.CjGets mutable references to all audio planes (channels) \xe2\x80\xa6AmPolls the result of this job.BcPolls for currently pending events.ClAttempts to flush the object, ensuring that any buffered \xe2\x80\xa6CmAttempt to write bytes from <code>buf</code> into the object.CgGet the number of available MIDI input or output ports.DdGet the number of available MIDI input ports that <em>midir</em> \xe2\x80\xa6DeGet the number of available MIDI output ports that <em>midir</em> \xe2\x80\xa6DiReturns device\xe2\x80\x99s power supply state. See <code>PowerInfo</code> for \xe2\x80\xa6AbGraphic PrimitivesCePrint a <code>civil::Date</code> to the given writer.DjPrint a <code>Span</code> to the given writer using the \xe2\x80\x9cfriendly\xe2\x80\x9d \xe2\x80\xa6BnPrint a <code>Span</code> to the given writer.CePrint a <code>civil::Time</code> to the given writer.Bd&lt; AVClass for the private context00ChA class for the private data, used to declare filter \xe2\x80\xa6ChNumber of logical processors at this level type. The \xe2\x80\xa6CkReturns the product ID, as assigned by the vendor, when \xe2\x80\xa6Bh&lt; the USB product ID of this joystickAaDevice Product IDCiReturn the USB product ID of an opened controller, if \xe2\x80\xa6BjProperties of the stream that gets decodedBnGet a reference to the <code>PublicKey</code>.0BcPushes an event to the event queue.0CoPushes a new <code>element</code> to the front of the destaque.BiAdds an element to the front of the list.BaPrepends an element to the deque.ClAppends an element to the front of the cursor\xe2\x80\x99s parent \xe2\x80\xa6CmCreate an iterator where you can put back multiple values \xe2\x80\xa6CkQuery formats supported by the filter on its inputs and \xe2\x80\xa6CjGet the actual audio format in use by the opened audio \xe2\x80\xa6BjAdd an element to the (back of the) queue.0DbSorts a <code>slice</code> using quick sort with the three-way \xe2\x80\xa6CmGenerates a random <code>u16</code> value that may not be \xe2\x80\xa6CmGenerates a random <code>u32</code> value that may not be \xe2\x80\xa6CmGenerates a random <code>u64</code> value that may not be \xe2\x80\xa6DdReturns a subslice starting from the given <code>start</code> index.CnTry to obtain a random <code>u16</code> from the hardware RNG.0CnTry to obtain a random <code>u32</code> from the hardware RNG.0CnTry to obtain a random <code>u64</code> from the hardware RNG.0221100BlNumber of read bytes since the last refresh.CkClose the stream. The AVFormatContext and AVStreams are notDbReads the exact number of bytes required to fill <code>buf</code>.00000BcReturns all the bytes in the image.DgLocks this <code>RwLock</code> with shared read access, causing the \xe2\x80\xa6CnPause or resume playback for network streaming protocols - \xe2\x80\xa6ClPause playing - only meaningful if using a network-based \xe2\x80\xa6CmTell if a given file has a chance of being parsed as this \xe2\x80\xa6CjSeek to timestamp ts. Seeking will be done so that the \xe2\x80\xa6EfReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF \xe2\x80\xa600000C`Returns a mutable reference to the inner reader.C`horizontal add of all the elements of the vector0000000CgReturns the cumulative bitwise \xe2\x80\x9cand\xe2\x80\x9d across the \xe2\x80\xa600000000000CmReduces the given value to the most appropriate prefix as \xe2\x80\xa60CjReduces the given value to the most appropriate binary \xe2\x80\xa6CmReduces the given value to the most appropriate SI prefix \xe2\x80\xa6BjReturns the maximum element in the vector.00000000000C`horizontal max of all the elements of the vector000111111BjReturns the minimum element in the vector.00000000000C`horizontal min of all the elements of the vector000111111BnReturns the sum of the elements of the vector.CgReturns the sum of the elements of the vector, with \xe2\x80\xa60100100100100100CgReturns the cumulative bitwise \xe2\x80\x9cxor\xe2\x80\x9d across the \xe2\x80\xa600000000000BgPerforms the <code>%=</code> operation.0000CkThe least nonnegative remainder of <code>self % rhs</code>.0DkThe least non-negative remainder of <code>self</code> % <code>other</code>.DmExperimental version of <code>rem_euclid</code> in <code>core</code>. See \xe2\x80\xa6000CnSets the minimum and maximum values of the output range to \xe2\x80\xa6AkRemoves an empty directory.0DjRemoves the environment variable <code>key</code> from the environment \xe2\x80\xa6CkRemoves an environment variable from the environment of \xe2\x80\xa6ClMoves this rect to the given position after clamping the \xe2\x80\xa6BfMoves this rect to the given position.AnReset the peeking \xe2\x80\x9ccursor\xe2\x80\x9dCeRetains only the elements specified by the predicate.CiRetains only the elements specified by the predicate, \xe2\x80\xa601CgReturns a reverse iterator over all non-overlapping \xe2\x80\xa6ChReturns a reverse iterator over all occurrences of a \xe2\x80\xa6CkMaximum range (zero-based) of RMID within this physical \xe2\x80\xa6CbReturns the floored integer <code>nth</code> root.0DeRotates all the destaqued elements <code>n</code> places to the left.BhRounds each lane in the style specified.000DkRound <code>x</code> to the nearest integer, breaking ties toward even. \xe2\x80\xa6DgReturns the rightmost mutable sub-<code>slice</code> with the given \xe2\x80\xa6ClMagic intrinsic that derives its meaning from attributes \xe2\x80\xa600FeReturns <code>None</code> if the state is <code>None</code>, otherwise calls <code>op</code> with \xe2\x80\xa6FaCalls <code>op</code> if the state is <code>Ok</code>, otherwise returns the <code>Err</code> \xe2\x80\xa6FkMaps an <code>Option&lt;S&gt;</code> to an <code>Option&lt;T&gt;</code> by applying the <code>op</code> \xe2\x80\xa6BcReturns the simple handler, if set.Ab&lt; sample format")