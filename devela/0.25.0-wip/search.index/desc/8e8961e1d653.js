rd_("CmConsumes the deque into a front-to-back iterator yielding \xe2\x80\xa6CnCreates a consuming iterator, that is, one that moves each \xe2\x80\xa6ClReturns a consuming iterator over the possibly contained \xe2\x80\xa60BaCreates an iterator from a value.BoReturns an iterator over elements of the tuple.CiCreates a consuming iterator visiting all the keys in \xe2\x80\xa6CjCreates a consuming iterator visiting all the keys, in \xe2\x80\xa6CeChecks if this worker is still active by querying \xe2\x80\xa6Ce(closed) Whether the current window is closed or not.AdIs this a directory?DjReturns <code>true</code> if <code>self</code> is nether infinite nor NaN.000DcReturns <code>true</code> if the address appears to be globally \xe2\x80\xa600C`(hidden) Whether the current document is hidden.DkReturns <code>true</code> if this thread is the \xe2\x80\x9cleader thread\xe2\x80\x9d for \xe2\x80\xa6BeChecks if the lock is currently held.EhReturns <code>true</code> if <code>self</code> is neither zero, infinite, subnormal, \xe2\x80\xa6000EfReturns <code>true</code> if the result is <code>Ok</code> and the value inside of \xe2\x80\xa6CgReturns <code>true</code> if the fraction is proper \xe2\x80\xa600000000000000000000000Ch(isSecureContext) Whether the current context is secure.DkReturns <code>true</code> if this address is part of the Shared Address \xe2\x80\xa6CcChecks if the elements of this iterator are sorted.00DfReturns <code>true</code> if it\xe2\x80\x99s a perfect square, false otherwise.CeReturns <code>true</code> if it\xe2\x80\x99s a perfect square.0000011111EhReturns <code>true</code> if the set is a subset of another, i.e., <code>other</code>\xe2\x80\xa60CoIterator over generated IDs with <code>Relaxed</code> ordering.B`\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A JavaScript Number.0Ca\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A JavaScript unsigned 32-bit integer.0CgSort the k largest elements into a new iterator, in \xe2\x80\xa600CkReturn an iterator adaptor that flattens an iterator of \xe2\x80\xa600CgReturns the number of bytes needed to encode in UTF-16.00CkReturns the <strong>perceptual lightness</strong> (CIE L*).000DbReturns the <strong>gamma-encoded luma</strong> (non-linear Y\xe2\x80\xb2).00010100011CoComputes the natural logarithm of <code>self</code> using a \xe2\x80\xa60BdLoads the reference into a register.BfLoad data from memory into a register.CkThe long jump function for the generator, equivalent to \xe2\x80\xa6BgReturns a reference to the lower bound.CbComputes luma from R\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 using Rec. 709 \xe2\x80\xa60DlReturns the <strong>linear luminance</strong> (physical light intensity, Y).0000000BgCalculates the magnitude of the vector.0FcMaps <code>ControlFlow&lt;B, C&gt;</code> to <code>ControlFlow&lt;T, C&gt;</code> by applying a \xe2\x80\xa6EfSplits a <code>Ref</code> into multiple <code>Ref</code>s for different components \xe2\x80\xa6EaSplits a <code>RefMut</code> into multiple <code>RefMut</code>s for different \xe2\x80\xa6ClCreates an iterator that both yields elements based on a \xe2\x80\xa600BfReturns the current maximum log level.B`Lanewise <code>max(a, b)</code>.0BmThe maximum of two numbers using total order.0DjReturns the maximum between itself and <code>other</code>, using total \xe2\x80\xa60DaSets the <code>mean</code> field to <code>SixelMean::Auto</code>.B`Lanewise <code>min(a, b)</code>.0BmThe minimum of two numbers using total order.0DjReturns the minimum between itself and <code>other</code>, using total \xe2\x80\xa60CmReturn the minimum and maximum element of an iterator, as \xe2\x80\xa600AlLanewise <code>a * b</code>.ChLanewise <code>a * b</code> with <code>f64</code> lanes.CgAn iterator adaptor that allows the user to peek at \xe2\x80\xa600BlReturns the time code, up to seconds, as \xe2\x80\xa6DgReturns a seeded <code>XorShift128+</code> generator from the given \xe2\x80\xa6DiReturns a seeded <code>Xoroshiro128pp</code> generator from the given \xe2\x80\xa6DfReturns a seeded <code>XorShift128</code> generator from the given \xe2\x80\xa6DiReturns a new <code>Array</code> from the given <code>boxed_array</code>.C`Constructs a new (empty) stack, in compile-time.DgAlias of <code>new</code> with a unique name that helps type inference.CmCreates a non-value integer, automatically converting the \xe2\x80\xa600000000000ChCreates a normalized right positive angle at 90 degrees.0000CkCreates a normalized right positive angle at 90 degrees \xe2\x80\xa6111110113ChGenerates the next random value split into 2 u16 values.CfRemoves and returns an element from the end of the \xe2\x80\xa6B`Iterates over shared references.1BkReturns the least number smaller than self.0CcReturns the next u128, advancing the state 4 times.Bd<code>no_std_io</code> modificationsCiReturns the normalized vector, as a <em>unit vector</em>.0CcReturns the angle normalized (no-op for integer \xe2\x80\xa60000000CnReturns the angle normalized to the non-inclusive range -1 \xe2\x80\xa611101BmReturns the current timestamp in nanoseconds.00ClReturns the number of items in the major dimension based \xe2\x80\xa60ClReturns the number of items in the minor dimension based \xe2\x80\xa60CiReturns the numerator (the first number of the sequence).00000000000000000000000Bd<code>object-id</code> modificationsDh<code>core</code> Expands to the offset in bytes of a field from the \xe2\x80\xa60CmCreates an iterator that lazily generates a value exactly \xe2\x80\xa6ClEnsures a value is in the entry by inserting the default \xe2\x80\xa60AmPrints to the standard error.0C`Duplicates the second back element, at the back.BaClears the stack in compile-time.CiDuplicates the next of stack pair of elements to the top.CfSwaps the top two pair stack elements in compile-time.CjDuplicates the top pair of elements before the next of \xe2\x80\xa6CjReturn an iterator adaptor that pads the sequence to a \xe2\x80\xa600CnDetermines whether the current thread is unwinding because \xe2\x80\xa600CgConsumes an iterator, creating two collections from it.00BoReturns a shared reference to the back element.CmReceives a single datagram message on the socket, without \xe2\x80\xa6CmReturns the socket address of the remote peer of this TCP \xe2\x80\xa6CmReturns the socket address of the remote peer this socket \xe2\x80\xa6Bd<code>pengyhash</code> modificationsAoThe perimeter of the 2d extent.0CmRemoves and returns the first element in the map. The key \xe2\x80\xa6CmRemoves the first element from the set and returns it, if \xe2\x80\xa6AgPops the front element.BlRemoves an item from the front of the queue.DiRemoves the first element and returns it, or <code>None</code> if the \xe2\x80\xa60CmReturn an iterator adaptor that yields the indices of all \xe2\x80\xa600CjReturns the optionally specified precision for numeric \xe2\x80\xa6CbFinds the 0-indexed <code>nth</code> prime number.00000000000CnPushes a new <code>element</code> to the back of the destaque.BgPushes a value to the end of the queue.BhAdds an element to the back of the list.BlAppends an element to the back of the deque.C`Remove an element from the (front of the) queue.0ClGenerates a random <code>u8</code> value that may not be \xe2\x80\xa6CeConstructs a mutable double-ended iterator over a \xe2\x80\xa6EhReturns an exclusive subslice from <code>start</code> (inclusive) to <code>end</code>\xe2\x80\xa6CiCreates an iterator that covers the specified mutable \xe2\x80\xa6CmLocks this handle and reads a line of input, appending it \xe2\x80\xa6DkReads all bytes until a newline (the <code>0xA</code> byte) is reached, \xe2\x80\xa600CkReads a symbolic link, returning the file that the link \xe2\x80\xa600CmIndicates that directories should be created recursively, \xe2\x80\xa6ChReceives a single datagram message on the socket. On \xe2\x80\xa6BoReturns the remaining elements in the iterator.00CaReturns the ceiled integer <code>nth</code> root.00000000000CjRotates all the destaqued elements one place to the right.CjSearches for an element in an iterator from the right, \xe2\x80\xa600FoMaps a <code>Result&lt;S, E&gt;</code> to a <code>Result&lt;S, F&gt;</code> by applying the <code>op</code> \xe2\x80\xa6DgReplaces the existing <code>state</code> with a <code>new_state</code>.ChWraps the <code>state</code> field into <code>Ok</code>.BcSorts a slice using selection sort.CiSets the number of bytes that can be read before this \xe2\x80\xa6DeSets the args into an <code>m128d</code>, first arg is the high lane.CjSet <code>f64</code> args into an <code>m256d</code> lane.E`A copy of <code>self</code> setting the bits that are set in <code>other</code>.00EcSets the bits in <code>self</code> to 1, from the <code>[start..=end]</code> range.00000000000CoGet a copy of <code>self</code> with bits set to 1 from the \xe2\x80\xa600BlSets the current termios <code>state</code>.AjUpdates the current state.BnChanges the timestamps of the underlying file.CjShrinks the capacity of the map with a lower limit. It \xe2\x80\xa6BeDiscards capacity with a lower bound.CjShrinks the capacity of the set with a lower limit. It \xe2\x80\xa6DeShrinks the capacity of the <code>OsString</code> with a lower bound.CeShrinks the capacity of the deque with a lower bound.EcInvokes <code>shrink_to</code> on the underlying instance of <code>OsString</code>.CfShrinks the capacity of the vector with a lower bound.DdShrinks the capacity of this <code>String</code> with a lower bound.CdDetermines if the <code>+</code> flag was specified.CkReturns the bounds on the remaining length of the iterator.00CeSort all iterator elements into a new iterator in \xe2\x80\xa600Dc<code>core</code> Signals the processor that it is running in a \xe2\x80\xa60DbSets the <code>split</code> field to <code>SixelSplit::Lum</code>.CjSplits the underlying slice at the cursor position and \xe2\x80\xa6ClSplits the collection into two at the given key. Returns \xe2\x80\xa6CnSplits the collection into two at the value. Returns a new \xe2\x80\xa6ChSplits the list into two at the given index. Returns \xe2\x80\xa6BmSplits the deque into two at the given index.CbSplits the collection into two at the given index.CcSplits the string into two at the given byte index.BgReturns the ceiled integer square root.00000000000ClThe square root calculated using the fast inverse square \xe2\x80\xa60Cj$ \\sqrt{x} $ the square root calculated using the fast \xe2\x80\xa60AnLanewise <code>sqrt(a)</code>.CeLanewise <code>sqrt</code> on <code>f64</code> lanes.B`Number of 512B blocks allocated.0Bd<code>stack_dst</code> modificationsBoRemove an element from the (back of the) stack.0Bl<code>core</code> Stringifies its arguments.0AlLanewise <code>a - b</code>.ChLanewise <code>a - b</code> with <code>f64</code> lanes.DkExtracts a <code>(D-1)x(D-1)</code> submatrix by removing the given row \xe2\x80\xa60000000EhAsserts both the <code>state</code> and <code>value</code> matches the corresponding \xe2\x80\xa6ChSwaps the last two elements at the back of the destaque.BbSwaps the front and back elements.DkThis function is similar to <code>sync_all</code>, except that it might \xe2\x80\xa6AiPerforms a close syscall.AiPerforms a fcntl syscall.AjPerforms an fstat syscall.AjPerforms an ioctl syscall.AjPerforms an lseek syscall.AiPerforms a pipe2 syscall.AiPerforms a write syscall.CfUnregisters the current panic hook, returns it and \xe2\x80\xa6CfReturns the last <code>n</code> elements of the slice.BlChains the ordering with the given function.DbReturns <code>true</code> if the wait was known to have timed out.BiThe timestamp of when the event occurred.0ChConverts this <code>char7</code> to <code>char16</code>.ChConverts this <code>char8</code> to <code>char16</code>.DgConverts the angle to a <code>custom_unit</code> which represents a \xe2\x80\xa60000000000000EaConverts the current stack index size <code>IDX</code> to a <code>NEW_IDX</code>.0CmReturns a JavaScript <code>KeyboardEvent</code> semantic key.00DdReturns a JavaScript <code>KeyboardEvent</code> semantic key and \xe2\x80\xa6DdReturns a JavaScript <code>KeyboardEvent</code> semantic key + a \xe2\x80\xa6CkConvert to Rgba16 by scaling each component proportionally.BhConvert to <code>Rgba&lt;u16&gt;</code>.01CbConverts the given value to a <code>String</code>.0ElConverts this <code>Point</code> to a <code>Vector</code>, keeping <code>self</code> intact.FbA (<code>const</code>) port of <code>f128::</code>[<code>total_cmp</code>][f128#method.total_cmp].DhA (<code>const</code>) port of <code>f64::</code><code>total_cmp</code>.DhA (<code>const</code>) port of <code>f32::</code><code>total_cmp</code>.F`A (<code>const</code>) port of <code>f16::</code>[<code>total_cmp</code>][f16#method.total_cmp].CkTransforms each element in the chunk using the provided \xe2\x80\xa6De<code>core</code> Reinterprets the bits of a value of one type as \xe2\x80\xa60BgReturns the transposed matrix (C \xc3\x97 R).FdTransposes a <code>MaybeUninit&lt;[T; N]&gt;</code> into a <code>[MaybeUninit&lt;T&gt;; N]</code>\xe2\x80\xa6GbTransposes an <code>Option</code> of a <code>Result</code> into a <code>Result</code> of an <code>Option</code>\xe2\x80\xa6GbTransposes a <code>Result</code> of an <code>Option</code> into an <code>Option</code> of a <code>Result</code>\xe2\x80\xa6DaCreates a new <code>File</code> instance that shares the same \xe2\x80\xa6CnCreates a new independently owned handle to the underlying \xe2\x80\xa600DhThis is the reverse version of <code>Iterator::try_fold()</code>: it \xe2\x80\xa600DfAttempts to lock this <code>RwLock</code> with exclusive write access.CgDuplicates the back element, before the second back \xe2\x80\xa6DmReturns a deterministic hash of the <code>TypeId</code> of <code>Self</code>.00BkReturns the type name of <code>self</code>.00EcCreates an unbounded interval $(-\xe2\x88\x9e, \xe2\x88\x9e)$ <code>..</code> <code>RangeFull</code>.CkUndo the effect of leaked guards on the borrow state of \xe2\x80\xa6CmReturn an iterator adaptor that filters out elements that \xe2\x80\xa600DjReturns a copy of <code>self</code> setting the bit at <code>index</code>.00DdReturns the contained <code>Some</code> value or a provided default.DbReturns the contained <code>Ok</code> value or a provided default.BgReturns a reference to the upper bound.AmThe name of the current user.0FoMaps a <code>Result&lt;V, E&gt;</code> to a <code>Result&lt;V, F&gt;</code> by applying the <code>op</code> \xe2\x80\xa6CnReplaces the <code>value</code> with a <code>new_value</code>.ChWraps the <code>value</code> field into <code>Ok</code>.BgReturns the signal value as an integer.BfReturns the signal value as a pointer.DcReturns the value as <code>bool</code> (returns <code>true</code>).DdReturns the value as <code>bool</code> (returns <code>false</code>).FcReturns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> would awake \xe2\x80\xa6ChCreates a new pointer with the given address and the \xe2\x80\xa6CdReturns self with the given inner <code>bits</code>.00CmChange the case sensitivity while keeping everything else \xe2\x80\xa6FdCreates a new <code>Mismatch</code> with the specified <code>need</code>, <code>have</code>, and \xe2\x80\xa6CiReturns a new Fx hasher with the given <code>seed</code>.00ClReturns a new pengy hasher with the given <code>seed</code>.CfReturns a new empty sixel builder with the given size.CdAttempts to write an entire buffer into this writer.00CmWrites a formatted string into this writer, returning any \xe2\x80\xa60DhGlue for usage of the <code>write!</code> macro with implementors of \xe2\x80\xa60010CbWrites a single <code>i16</code> into this hasher.00CbWrites a single <code>i32</code> into this hasher.00CbWrites a single <code>i64</code> into this hasher.00CmWrites a string slice into this writer, returning whether \xe2\x80\xa6CnWrites some data to the underlying buffer contained within \xe2\x80\xa6CbWrites a single <code>str</code> into this hasher.002CbWrites a single <code>u16</code> into this hasher.00CbWrites a single <code>u32</code> into this hasher.00CbWrites a single <code>u64</code> into this hasher.00DjYields an <code>Err</code> and returns an awaitable <code>CoroWork</code>.CgCooperatively gives up a timeslice to the OS scheduler.00D`$ \xcf\x84/360 = \xcf\x80/180 = 1\\degree $ <em>arc degree</em> (A019685, \xe2\x80\xa600000D`$ \xcf\x84/(360*60) = 1^{\\prime} $ <em>arc minute</em> (wikipedia) \xe2\x80\xa600000Db$ \xcf\x84/(360 * 60 * 60) = 1^{\\prime\\prime} $ <em>arc second</em> (\xe2\x80\xa600000fU+00270BcWindows enviroment for directories.0Dg\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A boolean type which can be safely shared \xe2\x80\xa60Df\xe2\x9a\x9b\xef\xb8\x8f <code>portable-atomic</code> A thread-safe signed integer type.0Dh\xe2\x9a\x9b\xef\xb8\x8f <code>portable-atomic</code> A thread-safe unsigned integer type.0CbTrue if the system\xe2\x80\x99s architecture is big-endian.BoCode to set the foreground color to bright red.BdThe alignment of this type in bytes.00Di\xf0\x9f\x97\x83\xef\xb8\x8f <code>alloc</code> A priority queue implemented with a binary \xe2\x80\xa60Cj\xf0\x9f\x85\xb5 A simple bitmap font for rendering fixed-size glyphs.0BoThe operation failed because a pipe was closed.00Ci\xf0\x9d\x90\x93 \xf0\x9f\x8c\x90 A utility struct for searching bytes in slices.0FdThe bit depth of each color component (e.g., <code>8</code> for <code>u8</code>, <code>32</code> \xe2\x80\xa60CkCode to move the cursor up by 1-digit <code>n</code> lines.CkCode to move the cursor up by 2-digit <code>n</code> lines.CkCode to move the cursor up by 3-digit <code>n</code> lines.CkCode to move the cursor up by 4-digit <code>n</code> lines.CfAligns and pads a value to the length of a cache line.0Cl\xf0\x9f\xa5\xa1 Encodes and decodes a sequence of flags as a single \xe2\x80\xa60CfRepresents a single-thread stackless coroutine worker.0Cb\xf0\x9f\x93\x8f A cycle that repeats a fixed number of times.0CnSpecifies the filename prefix used for shared libraries on \xe2\x80\xa6CnSpecifies the filename suffix used for shared libraries on \xe2\x80\xa6Ai64-bit data <em>type</em>0Eb\xf0\x9f\x96\xb9 <code>core</code> A struct to help with [<code>Debug</code>] implementations.0Ci\xf0\x9f\x97\x83\xef\xb8\x8f A <code>Destaque</code> with an 8-bit index size.0Dd<code>std</code> A builder used to create directories in various \xe2\x80\xa60fU+00240AnCode to erase the entire line.CnSpecifies the filename suffix used for executable binaries \xe2\x80\xa6fU+003D0AoRepresents a basic mouse event.0AoRepresents a mouse wheel event.0Ci\xf0\x9f\x8c\x90 Extension trait providing additional methods for \xe2\x80\xa60Ch$ 1/\xcf\x86 = \xcf\x86-1 $ (A094214) <code>\xe2\x89\x88 0.61803398\xe2\x80\xa6</code>00000Ci$ 1/\xcf\x84 = 1/2\xcf\x80 $ (A086201) <code>\xe2\x89\x88 0.15915494\xe2\x80\xa6</code>00000Ch$ 2/\xcf\x84 = 1/\xcf\x80 $ (A049541) <code>\xe2\x89\x88 0.31830988\xe2\x80\xa6</code>00000Dc$ \xcf\x84/2 = \xcf\x80 = 180\\degree $ (A000796) <code>\xe2\x89\x88 3.14159265\xe2\x80\xa6</code>00000Dg$ \xcf\x84/3  = 2\xcf\x80/3 = 120\\degree $ (A019693) <code>\xe2\x89\x88 2.09439510\xe2\x80\xa6</code>00000Dd$ \xcf\x84/4 = \xcf\x80/2 = 90\\degree $ (A019693) <code>\xe2\x89\x88 1.57079632\xe2\x80\xa6</code>00000De$ \xcf\x84/5 = 2\xcf\x80/5 = 72\\degree $ (A019694) <code>\xe2\x89\x88 1.25663706\xe2\x80\xa6</code>00000Dd$ \xcf\x84/6 = \xcf\x80/3 = 60\\degree $ (A019670) <code>\xe2\x89\x88 1.04719755\xe2\x80\xa6</code>00000Dd$ \xcf\x84/8 = \xcf\x80/4 = 45\\degree $ (A003881) <code>\xe2\x89\x88 0.78539816\xe2\x80\xa6</code>00000De$ \xcf\x84/9 = 2\xcf\x80/9 = 40\\degree $ (A019696) <code>\xe2\x89\x88 0.69813170\xe2\x80\xa6</code>00000Cg\xf0\x9d\x9f\x99 \xf0\x9f\x8c\x90 Extension trait for floating-point types. \xe2\x80\xa60AeGet pipe buffer size.CmGroup has execute permission (<code>S_IXGRP</code> in POSIX).CjGroup has read permission (<code>S_IRGRP</code> in POSIX).Bn\xf0\x9d\x90\x93 An EGC backed by a <code>StringU8</code>.0CaThe <code>HashMap</code> in the standard library.0CaThe <code>HashSet</code> in the standard library.0BiCode to unset italic and fraktur effects.Am\xf0\x9f\x9a\xa9+ An image-related error.00CjThe operation was partially successful and needs to be \xe2\x80\xa600Dg\xf0\x9f\x9a\xa9 <code>core</code> The error type for errors that can never happen.0Ch<code>core</code> Conversion into a <code>Future</code>.BnWhich kind of future are we turning this into?10AhIntrospection core trait0Dl<code>std</code> A buffer type used with <code>IoRead::read_vectored</code>.0Dc\xf0\x9f\x94\x84 <code>std</code> Iterates over the arguments of a process, \xe2\x80\xa60De\xf0\x9f\x94\x84 <code>core</code> An iterator that clones the elements of an \xe2\x80\xa60De\xf0\x9f\x94\x84 <code>core</code> An iterator that copies the elements of an \xe2\x80\xa60Ee\xf0\x9f\x94\x84 <code>core</code> An iterator that filters the elements of <code>iter</code> \xe2\x80\xa60Dk\xf0\x9f\x94\x84 <code>core</code> An iterator where each iteration calls a closure \xe2\x80\xa60De\xf0\x9f\x94\x84 <code>core</code> An iterator that repeats an element endlessly.0Di\xf0\x9f\x94\x84 <code>core</code> An iterator for stepping iterators by a custom \xe2\x80\xa60Dh\xf0\x9f\x94\x84 <code>std</code> An iterator over a snapshot of the environment \xe2\x80\xa60Bn\xe2\x9a\x96\xef\xb8\x8f Standard exit codes for Linux processesCj<code>Linux</code> Seek commands (for <code>lseek</code>).ChAllows for minimal deviation; use for high precision \xe2\x80\xa600000Da\xf0\x9f\x97\x83\xef\xb8\x8f <code>alloc</code> A doubly-linked list with owned nodes.0Bg\xf0\x9f\x9a\xa9+ Represents a Linux-related error.0Dh\xe2\x9a\x96\xef\xb8\x8f <code>std</code> A type alias for the result of a lock method \xe2\x80\xa60BlCode to set the background color to magenta.CdMaximum <em>x</em> for which 10<em>x</em> is normal.00000DfThe maximum number of decimal digits a <code>u16</code> can represent.DfThe maximum number of decimal digits a <code>u64</code> can represent.DeThe maximum number of decimal digits a <code>u8</code> can represent.DgThe maximum number of decimal digits a <code>u128</code> can represent.DkThe maximum number of decimal digits a <code>usize</code> can represent \xe2\x80\xa6DfThe maximum number of decimal digits a <code>u32</code> can represent.BdMaximum addressable memory in bytes.CdMinimum <em>x</em> for which 10<em>x</em> is normal.00000CkA container that may hold either a borrowed or owned value.0CjMarker trait to verify memory alignment between two types.0B`Access to the device microphone.0Ea<code>std</code> The sending half of an <em>async</em> <code>Mpsc</code> channel.0AkMutes or unmutes the audio.0Dg<code>std</code> An RAII implementation of a \xe2\x80\x9cscoped lock\xe2\x80\x9d of a \xe2\x80\xa60AoThe duration of one nanosecond.CiKnow whether dropping values of this type matters, in \xe2\x80\xa600C`Whether the number can represent big quantities.0CbWhether the number uses an integer representation.0Ck\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f A signed integer that is known not to equal \xe2\x80\xa60Cn\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f An unsigned integer that is known not to equal \xe2\x80\xa60Dg\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f <code>core</code> A signed integer that is known not to \xe2\x80\xa600000Dj\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f <code>core</code> An unsigned integer that is known not to \xe2\x80\xa600000CmThe specified environment variable was not present in the \xe2\x80\xa60ClThe specified environment variable was found, but it did \xe2\x80\xa60fU+00230CoOthers have execute permission (<code>S_IXOTH</code> in POSIX).ClOthers have read permission (<code>S_IROTH</code> in POSIX).Eh\xf0\x9f\x94\x84 <code>core</code> An iterator over a reference to the <code>Some</code> variant \xe2\x80\xa60B`Number of bytes per memory page.Cl<code>core</code> Trait for types that form a partial order.Db<code>core</code> Derive macro generating an impl of the trait \xe2\x80\xa610Em<code>std</code> Windows path prefixes, e.g., <code>C:</code> or <code>\\\\server\\share.</code>0Dj<code>core</code> <code>*mut T</code> but non-zero and <em>covariant</em>.0Ef\xf0\x9f\x94\x84 <code>core</code> An iterator over a reference to the <code>Ok</code> variant \xe2\x80\xa60Dh\xf0\x9f\xa5\xa1 The <code>RFC 4648</code> hexadecimal-variant encoding, used in \xe2\x80\xa60CkRGB+A color with 32-bit float components (linear space, \xe2\x80\xa60CkRGB+A color with 64-bit float components (linear space, \xe2\x80\xa60ChRGB+A color with 32-bit float components (sRGB gamma \xe2\x80\xa60ChRGB+A color with 64-bit float components (sRGB gamma \xe2\x80\xa60DjRight <strong>Hyper</strong> key (historically used in some Unix systems).0BaRight <strong>Shift</strong> key.0DlRight <strong>Super</strong> key (Windows key on Windows, Command \xe2\x8c\x98 on \xe2\x80\xa60DdIf the <code>SA_NOCLDWAIT</code> flag is set when establishing a \xe2\x80\xa6ChCall the signal handler on an alternate signal stack \xe2\x80\xa6ClProvide behavior compatible with BSD signal semantics by \xe2\x80\xa6CbThe signal handler takes three arguments, not one.AeSet pipe buffer size.BmTypical gamma value for sRGB/Rec.709 (\xe2\x89\x882.2)0DaSticky bit - restricted deletion (<code>S_ISVTX</code> in POSIX).Eh\xf0\x9d\x9f\x99 <code>core</code> Provides intentionally-saturating arithmetic on <code>T</code>\xe2\x80\xa60ClA general-purpose RAII guard that executes a callback on \xe2\x80\xa60A`Scroll Lock key.0AfA sixel-related error.0CkMethod for finding the largest dimension for splitting, \xe2\x80\xa60Db<code>core</code> An internet socket address, either IPv4 or IPv6.0Df<code>std</code> A locked reference to the <code>Stderr</code> handle.0Df<code>std</code> A locked reference to the <code>Stdout</code> handle.0fU+001A0Ch\xf0\x9f\x95\x98 <code>std</code> A measurement of the system clock.Eg\xf0\x9f\x9a\xa9 Returned from the <code>duration_since</code> and <code>elapsed</code> methods \xe2\x80\xa610ClPlace the current lock state of the pseudoterminal slave \xe2\x80\xa6A`Get window size.CnSet (if *argp is nonzero) or remove (if *argp is zero) the \xe2\x80\xa6A`Set window size.Bh(A058265) <code>\xe2\x89\x88 1.83928675\xe2\x80\xa6</code>00000Am\xe2\x9a\x96\xef\xb8\x8f A text-related result.000Cl\xf0\x9f\x95\x98 A source of timestamps with a known granularity and \xe2\x80\xa60AhDecreases treble levels.0Ef\xf0\x9f\x95\x98 <code>std</code> A <code>SystemTime</code> anchored to \xe2\x80\x9c1970-01-01 00:00:00 \xe2\x80\xa6CeAn anchor in time which can be used to create new \xe2\x80\xa61CjUser has write permission (<code>S_IWUSR</code> in POSIX).AcImage capabilities.0AcInput capabilities.0AcSound capabilities.0De<code>core</code> The core primitive for interior mutability in Rust.0Bn\xe2\x9a\x96\xef\xb8\x8f A value with associated quantification.0AhHandle to a DOM Element.0CkThe lock could not be acquired at this time because the \xe2\x80\xa6CnThe operation needs to block to complete, but the blocking \xe2\x80\xa6001Bf\xf0\x9f\x8e\xb2 The <code>XorShift16</code> PRNG.0Bf\xf0\x9f\x8e\xb2 The <code>XorShift32</code> PRNG.0Bf\xf0\x9f\x8e\xb2 The <code>XorShift64</code> PRNG.0BgPerforms the <code>+=</code> operation.fPanics1CcLow lane <code>a + b</code>, other lanes unchanged.CaAdvances the iterator by <code>n</code> elements.00EaAligns <code>value</code> downward to the nearest multiple of <code>align</code>.CbCheck whether all elements are unique (non equal).00CiProvides in-place mutable access to an occupied entry \xe2\x80\xa60DhA function to print an ANSI escape <code>sequence</code> of bytes to \xe2\x80\xa60BaGets the configuration directory.0BcAdd a string to the end of a stringDf<code>safe_arch</code> Turns a round operator token to the correct \xe2\x80\xa60De\xf0\x9f\x97\x83\xef\xb8\x8f Initializes a <code>[$T; $LEN]</code> array in multiple ways.0DhUpcasts <code>Box&lt;self&gt;</code> as <code>Box&lt;dyn Any&gt;</code>.00DdUpcasts <code>&amp;mut self</code> as <code>&amp;mut dyn Any</code>.00ClUpcasts <code>&amp;self</code> as <code>&amp;dyn Any</code>.00DcReturns a raw mutable pointer to the <code>Box</code>\xe2\x80\x99s contents.BnReturns a raw pointer to the slice\xe2\x80\x99s buffer.CnReturns a raw mutable pointer to the vector\xe2\x80\x99s buffer, or \xe2\x80\xa6BfReturns a raw mutable pointer to self.CjGets a mutable pointer to the contained value. Reading \xe2\x80\xa6BgReturns the mutable inner string slice.CnReturns the exclusive inner string slice. Makes use of the \xe2\x80\xa6CkConverts a <code>String</code> into a mutable string slice.11122DhReturns a mutable reference to the contents of this <code>String</code>.EiConverts from Pin&lt;&amp;mut Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;mut T&gt;&gt;.EaConverts from Pin&lt;&amp;Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;T&gt;&gt;.ClHelper method that populates a vector with references to \xe2\x80\xa6ClReturns the last access time of the file, in nanoseconds \xe2\x80\xa6Bkstart rendering to an offscreen framebuffer0BnToggles the bit at the specified bit-position.000000000000AkBitwise <code>a | b</code>.0DbBlends the <code>f32</code> lanes according to the immediate mask.BjReturns the block size for filesystem I/O.BdMutably borrows from an owned value.BbMutably borrows the wrapped value.1BlReturns the alignment of this type in bytes.00CfReturns the external boundary, the sum of the extents.00000000000Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x9f\x99 <code>core</code> Equivalent to the corresponding C type.0DeReturns the ASCII byte of a specific digit in a <code>u128</code> \xe2\x80\xa6DhReturns the ASCII byte of a specific digit in a <code>u32</code> number.DfReturns the ASCII byte of a specific digit in a <code>usize</code> \xe2\x80\xa6DgReturns the ASCII byte of a specific digit in a <code>u8</code> number.DhReturns the ASCII byte of a specific digit in a <code>u64</code> number.DhReturns the ASCII byte of a specific digit in a <code>u16</code> number.CnReturns whether the panic handler is allowed to unwind the \xe2\x80\xa60DkCasts from a pointer-to-<code>T</code> to a pointer-to-<code>[T; N]</code>.CgRound each lane to a whole number, towards positive \xe2\x80\xa6CgRound <code>f64</code> lanes towards positive infinity.Cm(clearRect) Clears the specified rectangular area, making \xe2\x80\xa6EeCopies <code>source</code>\xe2\x80\x99s contents into <code>self</code> without creating a \xe2\x80\xa60DdOverwrites the contents of <code>self</code> with a clone of the \xe2\x80\xa6DbClones the contents of <code>source</code> into <code>self</code>.11fPanics121DgAssigns a clone of <code>source</code> to <code>self</code>, unless \xe2\x80\xa6CbPerforms copy-assignment from <code>source</code>.00ChUses borrowed data to replace owned data, usually by \xe2\x80\xa600CnReturns the bit depth of each color component (e.g., 8 for \xe2\x80\xa600AgGet the blue component.CgSince the color has no red, the luminosity is returned.0000000000000001DbProduces an iterator over the <code>Component</code>s of the path.DoConverts a <em>const</em> <code>bool</code> expression to a type-level boolean.0CeThe smallest integer greater than or equal to itself.0Cg\xf0\x9d\x90\x93 Joins multiple byte slices or string slices in \xe2\x80\xa60CbRaises itself to the <code>p</code> integer power.0DmCopies the <code>src</code> byte array into <code>dst</code> in compile-time.CbComputes the cosine using taylor series expansion.0CnReturns the number of <code>None</code> elements in the array.CnReturns the number of ones in the binary representation of \xe2\x80\xa600000000000000000000000000000000000BhThe number of bits set (number of ones).00CnReturns the number of <code>Some</code> elements in the array.CcCreates a new, empty directory at the provided pathClCreates a new file in read-write mode; error if the file \xe2\x80\xa6CgSets the option to create a new file, failing if it \xe2\x80\xa6AmReturns the time of creation.CgReturns the last status change time of the file, in \xe2\x80\xa6BkReturns the current random <code>u8</code>.000DdCreates a <code>DebugList</code> builder designed to assist with \xe2\x80\xa6EcApproximates the derivative of the 1D function <code>f</code> at <code>x</code> \xe2\x80\xa6000El<code>std</code> Tests at <em>runtime</em> whether an <code>x86/x86-64</code> feature is \xe2\x80\xa60ClVisits the values representing the difference, i.e., the \xe2\x80\xa6CnVisits the elements representing the difference, i.e., the \xe2\x80\xa6ChReturns a static string with zero-padded digits with \xe2\x80\xa600000BgPerforms the <code>/=</code> operation.0AgThe euclidean division.000CcLow lane <code>a / b</code>, other lanes unchanged.AhDrops the front element.CdDuplicates the front pair of elements, at the front.CjReturn an iterator adaptor that produces elements that \xe2\x80\xa600DeHeight from the baseline to the bottom of the <code>em</code> square.0DfCreates a canonical empty interval, equivalent to <code>open</code>\xe2\x80\xa6BcAdds a new entry to the set output.BdAdds a new entry to the list output.CfRemoves an explicitly set environment variable and \xe2\x80\xa6ChComputes the exponential function $e^x$ using Taylor \xe2\x80\xa60EdReturns the contained <code>Err</code> value, consuming the <code>self</code> value.BnExtends a collection with exactly one element.00CmDrains elements which are true under the given predicate, \xe2\x80\xa60CnCreates an iterator that visits elements (key-value pairs) \xe2\x80\xa6CmCreates an iterator that visits elements in the specified \xe2\x80\xa6ClCreates an iterator which uses a closure to determine if \xe2\x80\xa60CkReturns the multiplication factor for the prefix as an i64.0CnReturns the multiplication factor for the binary prefix as \xe2\x80\xa6CmReturns the multiplication factor for the SI prefix as an \xe2\x80\xa6BhLogical \xe2\x80\x9cnand\xe2\x80\x9d with a boolean value.BjBitwise \xe2\x80\x9cnand\xe2\x80\x9d with the current value.00000000000C`Adds a new field to the generated struct output.CfAdds a new field to the generated tuple struct output.Cg(fillStyle) Sets the color or style for filling shapes.DjMakes a new <code>Ref</code> for an optional component of the borrowed \xe2\x80\xa6DdMakes a new <code>RefMut</code> for an optional component of the \xe2\x80\xa6BoCreates an iterator that both filters and maps.0DiMakes a <code>MappedMutexGuard</code> for a component of the borrowed \xe2\x80\xa6DeMakes a <code>MappedRwLockReadGuard</code> for a component of the \xe2\x80\xa6DfMakes a <code>MappedRwLockWriteGuard</code> for a component of the \xe2\x80\xa63DjFinds the index of the first occurrence of <code>element</code> in the \xe2\x80\xa6CiReturns the index of the first <code>None</code> element.CiReturns the index of the first <code>Some</code> element.DjReturn an iterator adaptor that flattens every <code>Result::Ok</code> \xe2\x80\xa600DiReturns a copy of <code>self</code> flipping the bits that are set in \xe2\x80\xa600DnFlips the bits in <code>self</code> from the <code>[start..=end]</code> range.00000000000DbReturns a copy of <code>self</code> with flipped bits from the \xe2\x80\xa600CgRound each lane to a whole number, towards negative \xe2\x80\xa6CgRound <code>f32</code> lanes towards negative infinity.Di<code>core</code> Compares the addresses of the two function pointers \xe2\x80\xa60CkAn iterator method that applies a function, producing a \xe2\x80\xa600CcWrites formatted output into the given byte buffer.Dg\xf0\x9f\x96\xb9 Returns a formatted <code>str</code> slice backed by a buffer, \xe2\x80\xa60BkTransmutes an array into <code>m128</code>.BlTransmutes an array into <code>m128d</code>.BkTransmutes an array into <code>m256</code>.BlTransmutes an array into <code>m256d</code>.CdConverts an array into a <code>full</code> destaque.CaConverts an array into a <code>full</code> stack.AeCreate from an array.0000000CeReturns a string from an array of <code>bytes</code>.ChReturns a new instance constructed from the given bytes.0CdReturns a string from a slice of <code>bytes</code>.0001DaCreates a new <code>StringNonul</code> from a <code>char7</code>.CnCreates a new <code>StringU8</code> from a <code>char7</code>.CoCreates a new <code>StringU16</code> from a <code>char7</code>.CoCreates a new <code>StringU32</code> from a <code>char7</code>.DaCreates a new <code>StringUsize</code> from a <code>char7</code>.CdConverts a <code>char7</code> to <code>char8</code>.CeConverts a <code>char7</code> to <code>char16</code>.DcCreates a new <code>GraphemeNonul</code> from a <code>char7</code>.D`Creates a new <code>GraphemeU8</code> from a <code>char7</code>.DaCreates a new <code>StringNonul</code> from a <code>char8</code>.CnCreates a new <code>StringU8</code> from a <code>char8</code>.CoCreates a new <code>StringU16</code> from a <code>char8</code>.CoCreates a new <code>StringU32</code> from a <code>char8</code>.DaCreates a new <code>StringUsize</code> from a <code>char8</code>.CeConverts a <code>char8</code> to <code>char16</code>.DcCreates a new <code>GraphemeNonul</code> from a <code>char8</code>.D`Creates a new <code>GraphemeU8</code> from a <code>char8</code>.DhCreates a new <code>TimeDelta</code> from the given number of hours. \xe2\x80\xa6DgCreates a new <code>Duration</code> from the specified number of hours.DdConverts a linear index back into <code>(row, col)</code>, if valid.00000000000DoReturns a <code>Month</code> from its index, from <code>January=0</code> to \xe2\x80\xa6DgCreates a new <code>TimeDelta</code> from the given number of whole \xe2\x80\xa6DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6EgCreates a <code>Vec&lt;T&gt;</code> directly from a <code>NonNull</code> pointer, a \xe2\x80\xa6CnInitializes the array from an iterator until it\xe2\x80\x99s either \xe2\x80\xa6DdConvert to <code>Rgba&lt;u8&gt;</code> by scaling each component \xe2\x80\xa6BhCreate from <code>Rgb&lt;u16&gt;</code>.10BhCreate from <code>Rgba&lt;u8&gt;</code>.0DiCreates a new <code>CodecFlags</code> from a slice of <code>bool</code>s.DcCreates a new <code>XoroShift128p</code> generator, seeded from \xe2\x80\xa6ClCreates a new Xoroshiro128++ PRNG, seeded from addresses \xe2\x80\xa6BgRestores the PRNG from the given state.0000000000AdCreate from a tuple.0000000EeConstructs a <code>u16</code> from an array of <code>[u8; 2]</code> in big-endian \xe2\x80\xa6EgConstructs a <code>u128</code> from an array of <code>[u8; 16]</code> in big-endian \xe2\x80\xa6EeConstructs a <code>u32</code> from an array of <code>[u8; 4]</code> in big-endian \xe2\x80\xa6EeConstructs a <code>u64</code> from an array of <code>[u8; 8]</code> in big-endian \xe2\x80\xa6EhConstructs a <code>u16</code> from an array of <code>[u8; 2]</code> in little-endian \xe2\x80\xa6EhConstructs a <code>u32</code> from an array of <code>[u8; 4]</code> in little-endian \xe2\x80\xa6EhConstructs a <code>u64</code> from an array of <code>[u8; 8]</code> in little-endian \xe2\x80\xa6DlConstructs a <code>u128</code> from an array of <code>[u8; 16]</code> in \xe2\x80\xa6EhConstructs a <code>u64</code> from an array of <code>[u8; 8]</code> in native-endian \xe2\x80\xa6EhConstructs a <code>u16</code> from an array of <code>[u8; 2]</code> in native-endian \xe2\x80\xa62EhConstructs a <code>u32</code> from an array of <code>[u8; 4]</code> in native-endian \xe2\x80\xa6DhDecode a native endian UTF-16\xe2\x80\x93encoded vector <code>v</code> into a \xe2\x80\xa6DbCreates a new <code>Context</code> from a <code>&amp;Waker</code>.DgCreates a new <code>Duration</code> from the specified number of weeks.CeWhether the window should be <code>fullscreen</code>.DjIf <code>true</code>, create the window in fullscreen mode (ignored on \xe2\x80\xa60BjReturns the contained value by cloning it.0CkCalculates the 2D coordinates from the given 1D array index0Bo<code>core</code> Module-level inline assembly.0C`Checks if the <em>AltGraph</em> modifier is set.DhComputes a hash of a byte slice using the <strong>default seed</strong>.00AfComputes a hash index.CnFeeds a slice of this type into the given <code>Hasher</code>.00Cm(go) Moves the browser to a specific point in the session \xe2\x80\xa6CkThe hypothenuse (the euclidean distance) using the fast \xe2\x80\xa60CnA helper macro to concisely implement a few common utility \xe2\x80\xa60BeInitializes elements from an iteratorCj(innerWidth) (innerHeight) The extent in pixels of the \xe2\x80\xa60DkInserts an element at <code>index</code> within the deque, shifting all \xe2\x80\xa6DhInserts an element at position <code>index</code> within the vector, \xe2\x80\xa6DiInserts a string slice into this <code>String</code> at byte position \xe2\x80\xa6BhReturns the number of digits in base 10.00CfReturns <code>true</code> if <code>self</code> is odd.00EbComputes the non-negative modulo of <code>self</code> over |<code>modulus</code>|.00CmAlternate elements from two iterators until both have run \xe2\x80\xa600BlConverts the boxed slice into a boxed array.CiReturns the inner <code>BareBox</code>ed primitive array.CeReturns the inner <code>Box</code>ed primitive array.10BoReturns the inner array with the full contents.BoConverts the reference-counted slice into a \xe2\x80\xa6111111DeConsumes the <code>CString</code> and returns the underlying byte \xe2\x80\xa6CbConverts a <code>String</code> into a byte vector.EfConverts a <code>String</code> into an iterator over the <code>char</code>s of the \xe2\x80\xa6DhConsumes the <code>IntoInnerError</code> and returns the error which \xe2\x80\xa6DkReturns the inner value, if the <code>Arc</code> has exactly one strong \xe2\x80\xa6CdConsumes the atomic and returns the contained value.CkConsumes the <code>Box</code>, returning the wrapped value.1111111111111111DnUnwraps this <code>BufReader&lt;R&gt;</code>, returning the underlying reader.DnUnwraps this <code>BufWriter&lt;W&gt;</code>, returning the underlying writer.DfUnwraps this <code>LineWriter</code>, returning the underlying writer.DdConsumes the <code>Error</code>, returning its inner error (if any).AnReturns the inner stored type.CoConsumes this <code>LazyCell</code> returning the stored value.BoConsumes the cell, returning the wrapped value.BfUnwraps the value, consuming the cell.DjReturns the inner value, if the <code>Rc</code> has exactly one strong \xe2\x80\xa6CoConsumes the <code>RefCell</code>, returning the wrapped value.2CcConsumes this mutex, returning the underlying data.DaConsumes this <code>RwLock</code>, returning the underlying data.CkConsumes this error indicating that a lock is poisoned, \xe2\x80\xa6CoConsumes this <code>LazyLock</code> returning the stored value.DhConsumes the <code>OnceLock</code>, returning the wrapped value. ReturnsClReturns the buffered writer instance which generated the \xe2\x80\xa6CeConsumes this cursor, returning the underlying value.CoConsumes the <code>Chain</code>, returning the wrapped readers.CmConsumes the <code>Take</code>, returning the wrapped reader.A`The inner value.BnConsumes the lock and returns the inner value.BgReturns the inner <code>PathBuf</code>.D`Extracts the value from the <code>ManuallyDrop</code> container.DiDestructures the <code>RangeInclusive</code> into (lower bound, upper \xe2\x80\xa6ClConsumes the <code>Rev</code>, returning the inner iterator.DkUnwraps this <code>Pin&lt;Ptr&gt;</code>, returning the underlying pointer.CmConsumes the <code>Ready</code>, returning the wrapped value.AhExtracts the owned data.BkConverts the container into an owned value.DoDisassembles this <code>BufWriter&lt;W&gt;</code>, returning the underlying \xe2\x80\xa6DcDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: \xe2\x80\xa6DhConsumes the <code>IntoInnerError</code> and returns the error which \xe2\x80\xa6D`Returns the inner <code>Box</code>ed primitive array as a slice.0ChGet the underlying bytes as a mutable slice with the \xe2\x80\xa6CkReturns both bounds as a tuple <code>(lower, upper)</code>.EdSplits a <code>u64</code> into an array of <code>[u8; 8]</code> in big-endian order.EdSplits a <code>u32</code> into an array of <code>[u8; 4]</code> in big-endian order.EcSplits a <code>u128</code> into an array of <code>[u8; 16]</code> in big-endian \xe2\x80\xa6EdSplits a <code>u16</code> into an array of <code>[u8; 2]</code> in big-endian order.EdSplits a <code>u16</code> into an array of <code>[u8; 2]</code> in little-endian \xe2\x80\xa6EdSplits a <code>u32</code> into an array of <code>[u8; 4]</code> in little-endian \xe2\x80\xa6EdSplits a <code>u64</code> into an array of <code>[u8; 8]</code> in little-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u8; 16]</code> in little-endian \xe2\x80\xa6EdSplits a <code>u64</code> into an array of <code>[u8; 8]</code> in native-endian \xe2\x80\xa6EdSplits a <code>u32</code> into an array of <code>[u8; 4]</code> in native-endian \xe2\x80\xa6EdSplits a <code>u16</code> into an array of <code>[u8; 2]</code> in native-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u8; 16]</code> in native-endian \xe2\x80\xa6EjExtracts the value <code>T</code> that is wrapped by <code>ControlFlow&lt;T, T&gt;</code>.C`Returns the kind/type of the implementing value.0DcReturns whether the pointer is properly aligned for <code>T</code>.CnChecks if <code>value</code> is aligned to <code>align</code>.BmWhether the bit at <code>index</code> is set.00CgChecks if the interval is both lower and upper bounded.BjChecks if the stored value is the default.EgReturns <code>true</code> if the result is <code>Err</code> and the value inside of \xe2\x80\xa6oIs this a file?EfReturns <code>true</code> if the option is a <code>None</code> or the value inside \xe2\x80\xa6CkWhether <code>self</code> is equal to <code>NUM_MAX</code>.00CkWhether <code>self</code> is equal to <code>NUM_MIN</code>.00CkWhether <code>self</code> is equal to <code>NUM_ONE</code>.00CkWhether <code>self</code> is equal to <code>NUM_TWO</code>.00DfReturns <code>true</code> if the poll is a <code>Pending</code> value.CgReturns <code>true</code> if this is a private address.DhRetuns <code>true</code> if the fraction is in the simplest possible \xe2\x80\xa600000000000000000000000DkReturns <code>true</code> if the path exists on disk and is pointing at \xe2\x80\xa6DbReturns <code>true</code> if this metadata is for a symbolic link.ClTests whether this file type represents a symbolic link. \xe2\x80\xa6AhIs this a symbolic link?DiReturns <code>true</code> if this is a unicast address, as defined by \xe2\x80\xa6DfReturns <code>true</code> if the 2 dimensions of the extent are equal.Ci\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A downcasted pointer-sized signed integer \xe2\x80\xa60DgJoins a collection of Paths appropriately for the <code>PATH</code> \xe2\x80\xa6ChSort the k smallest elements into a new iterator, in \xe2\x80\xa600CbReturns the last entry in the map for in-place \xe2\x80\xa6BdLoads the reference into a register.0BfLoad data from memory into a register.0ClReturns the socket address of the local half of this TCP \xe2\x80\xa6CbReturns the local socket address of this listener.CkReturns the socket address that this socket was created \xe2\x80\xa6DjComputes the logarithm to the given <code>base</code> using the change \xe2\x80\xa60DdReturns the index of the lowest bit set to one in <code>self</code>.00000000000DhReturns the leftmost exclusive sub-<code>slice</code> with the given \xe2\x80\xa6EeReturns <code>true</code> if this requires <code>Command</code> to create a new pipe.DfReturns a new bitmask of 1s from the <code>[start..=end]</code> range.00000000000000CmReturns the element that gives the maximum value from the \xe2\x80\xa600CgLow lane <code>max(a, b)</code>, other lanes unchanged.CmReturn all maximum elements of an iterator, as determined \xe2\x80\xa600DhForgets about <code>self</code> <em>without running its destructor</em>.00DhReturns the value of type <code>T</code> represented by the all-zero \xe2\x80\xa600CmReturns the element that gives the minimum value from the \xe2\x80\xa600CgLow lane <code>min(a, b)</code>, other lanes unchanged.CmReturn all minimum elements of an iterator, as determined \xe2\x80\xa600Be<code>mini-alloc</code> modificationsEfModifies the value inside the <code>Cell&lt;Option&lt;T&gt;&gt;</code> by applying \xe2\x80\xa6000DgComputes the non-negative modulo of <code>self + other</code> over |\xe2\x80\xa60DkComputes the modulo of <code>self + other</code> over <code>modulus</code>.011001001CmComputes <code>self / other</code> over <code>modulus</code>.CoComputes <code>self / other</code> over |<code>modulus</code>|.0000110111222332233233DmComputes the modulo of <code>self - other</code> over |<code>modulus</code>|.DkComputes the modulo of <code>self - other</code> over <code>modulus</code>.1001010101CfReturns the last modification time of the file, in \xe2\x80\xa6BgPerforms the <code>*=</code> operation.0CcLow lane <code>a * b</code>, other lanes unchanged.BnUnzip this iterator into multiple collections.CjConverts an iterator of tuples into a tuple of containers.010Al(name) Gets the window name.CbReturns true if dropping values of type T matters.B`Create a buffer resource object.0CnReturns an empty destaque, allocated in the stack, copying \xe2\x80\xa6CkReturns an empty stack, allocated in the stack, copying \xe2\x80\xa6FcConstructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the \xe2\x80\xa6FbConstructs a new <code>Rc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the \xe2\x80\xa6CiFor metal context\xe2\x80\x99s ShaderSource should contain MSL \xe2\x80\xa60EdGenerates some unique <code>ExampleIdSeqUsize</code> ID with <code>SeqCst</code> \xe2\x80\xa6CnConstructs a new <code>Arc</code> with uninitialized contents.CaConstructs a new box with uninitialized contents.CmConstructs a new <code>Rc</code> with uninitialized contents.DkConstructs a new <code>Box</code> with uninitialized contents, with the \xe2\x80\xa6DjConstructs a new <code>Rc</code> with uninitialized contents, with the \xe2\x80\xa6BdReturns self with all bits set to 0.00ClAdvances the iterator and returns the next items grouped \xe2\x80\xa600CmAdvances the iterator and returns an array containing the \xe2\x80\xa600DkConsume and return the next item if it is equal to <code>expected</code>\xe2\x80\xa6BnRetrieve the current position of the iterator.333BmWakes up all blocked threads on this condvar.BlWakes up one blocked thread on this condvar.BnReturns the current timestamp in microseconds.00BnReturns the current timestamp in milliseconds.0FbReturns the <code>nth</code> element cloned, or <code>None</code> if <code>nth &gt;= ARITY</code>.0CfReturns <code>true</code> if <code>self</code> is one.00000EoTransforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping \xe2\x80\xa6Dd<code>core</code> Optionally inspects an environment variable at \xe2\x80\xa60ClEnsures a value is in the entry by inserting the default \xe2\x80\xa60BnPrints to the standard output, with a newline.0BdThe name of the detected OS version.0Cj(outerWidth) (outerHeight) The extent in pixels of the \xe2\x80\xa60CiDuplicates the second back pair of elements, at the back.CbDuplicates the second front element, at the front.BlDrops the top <code>n</code> stack elements.ChRotates the top three stack elements, counter-clockwise.C`Returns a shared reference to the front element.AmPolls the result of this job.CoPushes a new <code>element</code> to the front of the destaque.BiAdds an element to the front of the list.BaPrepends an element to the deque.BjAdd an element to the (back of the) queue.0DbSorts a <code>slice</code> using quick sort with the three-way \xe2\x80\xa6CmGenerates a random <code>u16</code> value that may not be \xe2\x80\xa6CmGenerates a random <code>u32</code> value that may not be \xe2\x80\xa6CmGenerates a random <code>u64</code> value that may not be \xe2\x80\xa6DdReturns a subslice starting from the given <code>start</code> index.CnTry to obtain a random <code>u16</code> from the hardware RNG.CnTry to obtain a random <code>u32</code> from the hardware RNG.CnTry to obtain a random <code>u64</code> from the hardware RNG.210DbReads the exact number of bytes required to fill <code>buf</code>.00EfReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF \xe2\x80\xa600CmReduces the given value to the most appropriate prefix as \xe2\x80\xa60CjReduces the given value to the most appropriate binary \xe2\x80\xa6CmReduces the given value to the most appropriate SI prefix \xe2\x80\xa6BgPerforms the <code>%=</code> operation.0CkThe least nonnegative remainder of <code>self % rhs</code>.0DkThe least non-negative remainder of <code>self</code> % <code>other</code>.0AkRemoves an empty directory.DjRemoves the environment variable <code>key</code> from the environment \xe2\x80\xa6CeRetains only the elements specified by the predicate.CiRetains only the elements specified by the predicate, \xe2\x80\xa6CbReturns the floored integer <code>nth</code> root.00000000000DeRotates all the destaqued elements <code>n</code> places to the left.BhRounds each lane in the style specified.0DiReturns the rightmost exclusive sub-<code>slice</code> with the given \xe2\x80\xa6FaCalls <code>op</code> if the state is <code>Ok</code>, otherwise returns the <code>Err</code> \xe2\x80\xa6FeReturns <code>None</code> if the state is <code>None</code>, otherwise calls <code>op</code> with \xe2\x80\xa6FkMaps an <code>Option&lt;S&gt;</code> to an <code>Option&lt;T&gt;</code> by applying the <code>op</code> \xe2\x80\xa6BcReturns the simple handler, if set.DjReturns a scaled value between <code>[min..=max]</code> to a new range \xe2\x80\xa600000000000CiSets the active canvas using a CSS <code>selector</code>.DcSets the value of the <code>SO_LINGER</code> option on this socket.CnSets the global logger to a <code>&amp;&#39;static Log</code>.DdSets the args into an <code>m128</code>, first arg is the high lane.EbSets the bit corresponding to a <code>signal</code> in the <code>sig</code> array.AmShow or hide the mouse cursorCdDetermines if the <code>-</code> flag was specified.CbThe sine calculated using Taylor series expansion.0E`Returns the ratio of a <code>usize</code> in respect to <code>other_size</code>.DhSkips all bytes until the delimiter <code>byte</code> or EOF is reached.00DcCreates an iterator that <code>skip</code>s elements based on a \xe2\x80\xa600DcSets the <code>split</code> field to <code>SixelSplit::Auto</code>.CnReturns this tuple with the head element splitted from the \xe2\x80\xa60DcSets the <code>split</code> field to <code>SixelSplit::Norm</code>.CnReturns this tuple with the tail element splitted from the \xe2\x80\xa60BhReturns the floored integer square root.00000000000AnLanewise <code>sqrt(a)</code>.CeLanewise <code>sqrt</code> on <code>f64</code> lanes.BhReturns the rounded integer square root.00000000000AnBlock size for filesystem I/O.0BjAdd an element to the (back of the) stack.0CiSets the size of the stack (in bytes) for the new thread.CjGets a pinning mutable reference from a static mutable \xe2\x80\xa6DhGets a pinning reference from a <code>&amp;&#39;static</code> reference.BhStores the value to the reference given.BgStore data from a register into memory.BkReturns the length of this file (in bytes).BmReturns the length of this stream (in bytes).00CjStrict integer addition. Computes <code>self + rhs</code>.00000000000CmStrict integer substration. Computes <code>self - rhs</code>.00000000000BgPerforms the <code>-=</code> operation.EhModifies this set to contain the difference of <code>self</code> and <code>rhs</code>\xe2\x80\xa6fPanics2CcLow lane <code>a - b</code>, other lanes unchanged.CnCreates an iterator where each successive item is computed \xe2\x80\xa6FcReplaces the existing <code>state</code> and <code>value</code> with <code>new_state</code> and \xe2\x80\xa6CkSwaps the last two pairs of elements at the back of the \xe2\x80\xa6BkSwaps the front and back pairs of elements.BgReverses the byte order of the integer.00000000000000000000000000000000000CjSwaps the first two elements at the front of the destaque.AjPerforms a getpid syscall.DbGets the value of the <code>SO_ERROR</code> option on this socket.00CgReturns the first <code>n</code> elements of the slice.CgCreates an iterator that yields elements based on a \xe2\x80\xa600CnComputes the tangent using Taylor series expansion of sine \xe2\x80\xa60Ee<code>core</code> Extracts the successful type of a [<code>TaskPoll&lt;T&gt;</code>].0DkCompute the bitwise of sign bit NOT of <code>a</code> and then AND with \xe2\x80\xa60EhComputes the bitwise AND of 256 bits in <code>a</code> and <code>b</code>, returns 1 \xe2\x80\xa60B`Returns the rendered text width.AoThe JavaScript event timestamp.0BjThe time stamp of when the event occurred.0AlThe time stamp of the event.Cb\xf0\x9f\x9b\xa1\xef\xb8\x8f The time stamp of when the event occurred.332210AlConverts radians to degrees.0CnReturns a JavaScript <code>KeyboardEvent</code> physical code.00DeReturns a JavaScript <code>KeyboardEvent</code> physical code and \xe2\x80\xa6DeReturns a JavaScript <code>KeyboardEvent</code> physical code + a \xe2\x80\xa6AlConverts degrees to radians.0EbComposes a fat pointer <code>*const T</code> from a <code>FatPtr</code> structure.BgConvert to <code>Rgb&lt;f32&gt;</code>.0000000BgConvert to <code>Rgb&lt;f64&gt;</code>.0000000B`See <code>.tree_reduce()</code>.00CnImmutably borrows the wrapped value, returning an error if \xe2\x80\xa6DgReturns <code>Ok(true)</code> if the path points at an existing entity.CnTries to insert a key-value pair into the map, and returns \xe2\x80\xa60DjInitializes the contents of the cell to <code>value</code> if the cell \xe2\x80\xa60DkAllocates memory in the given allocator then places <code>x</code> into \xe2\x80\xa6DhConstructs a new <code>Rc&lt;T&gt;</code> in the provided allocator, \xe2\x80\xa6CfReduces the elements to a single one by repeatedly \xe2\x80\xa600DkReturns the inner value, if the <code>Arc</code> has exactly one strong \xe2\x80\xa6DjReturns the inner value, if the <code>Rc</code> has exactly one strong \xe2\x80\xa6CkDuplicates the back pair of elements, before the second \xe2\x80\xa6ChDuplicates the front element, after the second front \xe2\x80\xa6CnReturns a \xe2\x80\x98unixy\xe2\x80\x99 version of the application\xe2\x80\x99s name, \xe2\x80\xa6EaA copy of <code>self</code> unsetting the bits that are set in <code>mask</code>.00EdReturns the contained <code>Err</code> value, consuming the <code>self</code> value.Ck\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A downcasted pointer-sized unsigned integer \xe2\x80\xa60FbCalls <code>op</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> \xe2\x80\xa6FeReturns <code>None</code> if the value is <code>None</code>, otherwise calls <code>op</code> with \xe2\x80\xa6FkMaps an <code>Option&lt;V&gt;</code> to an <code>Option&lt;W&gt;</code> by applying the <code>op</code> \xe2\x80\xa6CeAdds the value part of a new entry to the map output.CkAn iterator visiting all values mutably in arbitrary order.CjGets a mutable iterator over the values of the map, in \xe2\x80\xa6CfBlocks the current thread until initialization has \xe2\x80\xa6CjBlocks the current thread until the provided condition \xe2\x80\xa6DaGets the number of <code>Weak</code> pointers to this allocation.DeGets an approximation of the number of <code>Weak</code> pointers \xe2\x80\xa61DbGets the number of <code>Weak</code> pointers pointing to this \xe2\x80\xa6EaReturn an iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator \xe2\x80\xa600CiReturns a new empty sixel builder with the given byte \xe2\x80\xa6ChChange the radix while keeping everything else the same.DfWrites a <code>char</code> into this writer, returning whether the \xe2\x80\xa600CcWrites a single <code>i128</code> into this hasher.00CcWrites a single <code>u128</code> into this hasher.00CnReturns the secondary zodiac symbol, associated to the end \xe2\x80\xa6fU+00060BaANSI 3-bit color codes, 8 colors.0BcANSI 8-bit color codes, 256 colors.0C`A raw binary data buffer backed by a byte slice.0Cg\xf0\x9f\x97\x83\xef\xb8\x8f A static array allowing uninitialized elements.0Cl\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A thread-safe signed integer type.0Cn\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A thread-safe unsigned integer type.0C`Code to set the foreground color to bright blue.C`Code to set the foreground color to bright cyan.AfBad argument detected.0De<code>core</code> The bitwise OR assignment operator <code>|=</code>.0Aa1-Byte byte array00000000000000000Aa2-Byte byte array00000000000000000Aa4-Byte byte array00000000000000000Aa8-Byte byte array00000000000000000AoCommand invoked cannot execute.BdCharacter device (S_IFCHR in POSIX).CdThe number of color components (channels) in the \xe2\x80\xa60AmCode to unset crossed effect.BiCode to move the cursor down by one line.CdCode to move the cursor to the home position (1, 1).BkCode to move the cursor left by one column.BaCode to save the cursor position.DiReturns a slice with the code to move the cursor up by <code>n</code> \xe2\x80\xa6Df<code>core</code> Used to tell an operation whether it should exit \xe2\x80\xa60DiA managed dynamic collection of single-thread <code>CoroWorker</code> \xe2\x80\xa60DeCommon unsafe trait for enumerating <code>Copy</code>-constrained \xe2\x80\xa60Ak64-bit data <em>value</em>.0Eb\xf0\x9f\x96\xb9 <code>core</code> A struct to help with [<code>Debug</code>] implementations.0Ck\xf0\x9f\x97\x83\xef\xb8\x8f A dynamically allocated buffer for storing DSTs \xe2\x80\xa60Al\xe2\x80\x9cOperation would block.\xe2\x80\x9dfU+00190BhRepresents mouse, touch, or pen buttons.0Ce\xf0\x9f\x9b\xa1\xef\xb8\x8f An FFI-safe version of <code>EventKey</code>.0BnAn example created with <code>enumset!</code>.Ci\xf0\x9f\x8c\x90 Extension trait providing additional methods for \xe2\x80\xa60De$ \xcf\x84/12 = \xcf\x80/6 = 30\\degree $ (A019673) <code>\xe2\x89\x88 0.52359877\xe2\x80\xa6</code>00000Dg$ \xcf\x84/16 = \xcf\x80/8 = 22.5\\degree $ (A019675) <code>\xe2\x89\x88 0.39269908\xe2\x80\xa6</code>00000Df$ \xcf\x84/24 = \xcf\x80/12 = 15\\degree $ (A019679) <code>\xe2\x89\x88 0.26179938\xe2\x80\xa6</code>00000Ck$ \xcf\x84/72 = \xcf\x80/36 = 5\\degree $ <code>\xe2\x89\x88 0.08726646\xe2\x80\xa6</code>00000AlFast-forwards through media.0Db<code>core</code> A future that is immediately ready with a value.0CkGroup has write permission (<code>S_IWGRP</code> in POSIX).BbAccess to device geolocation data.0Dg<code>alloc</code> A memory allocator that can be registered as the \xe2\x80\xa60fU+00600CiPermits generous deviation; suitable for less precise \xe2\x80\xa600000Dm\xf0\x9f\x94\x80 <code>core</code> A trait for creating instances of <code>Hasher</code>.0BoA fast 64-bit non-cryptographic hash algorithm.0fU+002D0AiInvalid argument to exit.AmCode to unset inverse effect.EjIndicates whether <em>only</em> the 3 fields from <code>h</code> to <code>s</code> are \xe2\x80\xa6EjIndicates whether <em>only</em> the 3 fields from <code>y</code> to <code>d</code> are \xe2\x80\xa6EjIndicates whether <em>only</em> the 6 fields from <code>y</code> to <code>s</code> are \xe2\x80\xa6Ao\xe2\x9a\x96\xef\xb8\x8f An image-related result.00AoThis operation was interrupted.00Bj\xf0\x9f\x9a\xa9 An invalid given character was found.00000CbData not valid for the operation were encountered.00Eh\xf0\x9f\x9a\xa9+ \xf0\x9d\x90\x93 An error composite of <code>InvalidChar</code> + <code>InvalidUtf8</code> \xe2\x80\xa60Cf\xf0\x9f\x9a\xa9 Invalid Utf-8 found while interpreting a byte \xe2\x80\xa600BiThe input was not a valid UTF-8 sequence.1011Bo<code>?std</code> Adds buffering to any reader.0Ch<code>?std</code> Wraps a writer and buffers its output.0Dg\xf0\x9f\x9a\xa9+ <code>?std</code> A list specifying general categories of I/O \xe2\x80\xa600Co\xf0\x9f\x94\x84 <code>std</code> Iterator over the entries in a directory.0Dc\xf0\x9f\x94\x84 <code>core</code> An iterator that maps each element to an \xe2\x80\xa60Di\xf0\x9f\x94\x84 <code>core</code> An iterator that flattens one level of nesting \xe2\x80\xa60Dj\xf0\x9f\x94\x84 <code>core</code> An iterator that calls a fn with a reference to \xe2\x80\xa60Dg\xf0\x9f\x94\x84 <code>core</code> An iterator that repeats an element an exact \xe2\x80\xa60Dj\xf0\x9f\x94\x84 <code>core</code> Represents types that can be created by summing \xe2\x80\xa60AfThe job was not found.0Cl\xf0\x9f\x9a\xa9+ <code>Linux</code> <code>sys/errno.h</code> constants.De<code>Linux</code> File descriptor commands (for <code>fcntl</code>).BcLinux <code>ioctl</code> constants.BeLaunches a media-related application.0BiLeft <strong>Control</strong> (Ctrl) key.0Ck\xe2\x9a\x96\xef\xb8\x8f The return type for Linux-related functions that \xe2\x80\xa60AgA set of linux signals.0Bn<code>log</code> Metadata about a log message.0AkDecreases the audio volume.0B`The duration of one microsecond.B`The duration of one millisecond.Di<code>core</code> A wrapper type to construct uninitialized instances \xe2\x80\xa60BkOpens the default media player application.0Df\xf0\x9f\x94\x84 <code>std</code> Attempts to yield all pending values for an [\xe2\x80\xa60DjThe additive inverse of <code>ONE</code> (<code>-1</code>), if applicable.0CeInteger is too small to store in target integer type.0BbThe system\xe2\x80\x99s networking is down.00Ck\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f A signed integer that is known not to equal \xe2\x80\xa600000Cn\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f An unsigned integer that is known not to equal \xe2\x80\xa600000Dg\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f <code>core</code> A signed integer that is known not to \xe2\x80\xa60Dj\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f <code>core</code> An unsigned integer that is known not to \xe2\x80\xa60AhSeek on unseekable file.00CmOthers have write permission (<code>S_IWOTH</code> in POSIX).Ck\xf0\x9f\x96\xb9 The type returned from <code>ExtOption::fmt_or</code>.0Dg\xf0\x9f\x93\x90 A unitless directional vector in <code>D</code>-dimensional space.0CmAn operation could not be completed, because it failed to \xe2\x80\xa600Ef<code>std</code> Helper struct for safely printing paths with <code>format!</code> \xe2\x80\xa60fU+00250Di<code>core</code> Zero-sized type used to mark things that \xe2\x80\x9cact like\xe2\x80\xa60BaPixel format type of input image.0BgFires when the pointer is pressed down.0B`Fires when the pointer is moved.0Dj\xf0\x9f\x9a\xa9 <code>std</code> A type of error which can be returned whenever a \xe2\x80\xa60CeInteger is too large to store in target integer type.0AaPrint Screen key.0AkIncreases the audio volume.0Di\xf0\x9f\x94\x80 <code>std</code> The default state for [<code>HashMapStd</code>][\xe2\x80\xa60Cn<code>core</code> Implemented by Rust\xe2\x80\x99s built-in range types0BaNot intended for application use.fU+00020CiThe underlying storage (typically, a filesystem) is full.00Dh\xf0\x9d\x90\x93 A UTF-8 string with up to <code>u8::MAX</code> bytes, excluding \xe2\x80\xa60Cj\xf0\x9d\x90\x93 A UTF-8\xe2\x80\x93encoded string, backed by an array with \xe2\x80\xa60Dk<code>std</code> The default memory allocator provided by the operating \xe2\x80\xa60ClOpen and return a new file descriptor that refers to the \xe2\x80\xa6Cf<code>core</code> The context of an asynchronous task.0Di\xf0\x9f\x94\x84 <code>std</code> An iterator that infinitely accepts connections \xe2\x80\xa60D`<code>std</code> A TCP socket server, listening for connections.0Co<code>std</code> Possible values which can be passed to the \xe2\x80\xa60Cd<code>std</code> A scope to spawn scoped threads in.0AiA service is unavailable.ChAn IPv4 address representing an unspecified address: \xe2\x80\xa6DfAn IPv6 address representing the unspecified address: <code>::</code>.AdSystem capabilities.0AdWindow capabilities.0Cb\xf0\x9f\x95\x98 64-bit Unix time, supporting negative values.0Ck\xf0\x9f\x95\x98 32-bit Unix time, supporting only non-negative values.0AbUnspecified error.00ClCapturing a backtrace is not supported, likely because it\xe2\x80\xa6BoThis operation is unsupported on this platform.100GgVerbatim prefix using Windows\xe2\x80\x99 <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>,0CgA Haar wavelet is a simple, piecewise-constant wavelet.0CiHandle to the brower\xe2\x80\x99s global Document associated APIs.0Bg\xf0\x9f\x8e\xb2 The <code>XorShift128</code> PRNG.0AkReturns the time of access.ChComputes the arccosine using the Taylor expansion of \xe2\x80\xa60CdLowest lane <code>a + b</code>, high lane unchanged.CmAlternately, from the top, add a lane and then subtract a \xe2\x80\xa6DjAlternately, from the top, add <code>f32</code> then sub <code>f32</code>.CfConstructs a path inside your application\xe2\x80\x99s data \xe2\x80\xa600CaConstructs a path inside the temporary directory.00AkGets the runtime directory.0DlApplies dithering to a pixel array in <strong>15-bit color mode </strong>\xe2\x80\xa6Bo\xe2\x9a\xa0\xef\xb8\x8f Command line arguments by reference: \xe2\x80\xa6DiReturns a <code>NonNull</code> pointer to the vector\xe2\x80\x99s buffer, or a \xe2\x80\xa6CiConverts to seconds as <code>f32</code> for calculations.CmReturns the number of seconds, with a possible fractional \xe2\x80\xa6DiReturns the number of seconds contained by this <code>Duration</code> \xe2\x80\xa6BmReturns the time in <code>f64</code> seconds.21CcComputes the arcsine using Taylor series expansion.0BhConverts to <code>Arc&lt;[T]&gt;</code>.BfConverts to <code>Arc&lt;T&gt;</code>.BkConverts to <code>Box&lt;[T], A&gt;</code>.BiConverts to <code>Box&lt;T, A&gt;</code>.BeConverts to <code>Rc&lt;T&gt;</code>.BgConverts to <code>Rc&lt;[T]&gt;</code>.EaExtracts the value from the <code>MaybeUninit&lt;T&gt;</code> container. This \xe2\x80\xa6DeIf the iterator yields no elements, <code>Ok(None)</code> will be \xe2\x80\xa600CfComputes the arctangent using Taylor series expansion.0BcBitwise <code>a &amp;amp; b</code>.0AkBitwise <code>a | b</code>.00AjBitwise <code>a | b</code>AkBitwise <code>a ^ b</code>.0DbBlends the <code>f64</code> lanes according to the immediate mask.FcConverts the <code>ControlFlow</code> into an <code>Option</code> which is <code>Some</code> if \xe2\x80\xa6CkSize of buffer in bytes. For 1 element, u16 buffer this \xe2\x80\xa6BbSets the size of the pixel buffer.1BnCalculates the offset from a pointer in bytes.AoThe perimeter of the 2d extent.00000000000Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x9f\x99 <code>core</code> Equivalent to the corresponding C type.0ChCancels a pending quit request, no matter who it was \xe2\x80\xa6DjReturns the bit pattern of <code>self</code> reinterpreted as a signed \xe2\x80\xa600000CeCasts from a type to its maybe-uninitialized version.DhRound the low lane of <code>b</code> toward positive infinity, other \xe2\x80\xa6DhChecks if a type <code>T</code> is a valid dynamically sized type (DST).CkChecked absolute value. Checks for overflow and returns \xe2\x80\xa600000ClAdds an unsigned integer to a non-zero value. Checks for \xe2\x80\xa600000CkChecked integer addition. Computes <code>self + rhs</code>.00000000000G`Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> \xe2\x80\xa60DkAdd two time deltas together. If overflow occurs, then <code>None</code>\xe2\x80\xa6DoChecked <code>Duration</code> addition. Computes <code>self + other</code>, \xe2\x80\xa6CgDivide this duration by an integer. If the division \xe2\x80\xa6DoChecked <code>Duration</code> division. Computes <code>self / other</code>, \xe2\x80\xa6CiMultiplies two non-zero integers together. Checks for \xe2\x80\xa600000000000CbMultiply this time delta by an integer. If the \xe2\x80\xa6EeChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, \xe2\x80\xa6EaChecked negation. Computes <code>-self</code>, returning <code>None</code> if \xe2\x80\xa600000BlReturns this duration with its sign flipped.CiRaises non-zero value to an integer power. Checks for \xe2\x80\xa600000000000CnChecked integer substration. Computes <code>self - rhs</code>.00000000000G`Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> \xe2\x80\xa60CmSubtract one time delta from another. If overflow occurs, \xe2\x80\xa6EbChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, \xe2\x80\xa6CfReturns the thickness of the window chrome (frame, \xe2\x80\xa6BeThe clamped value, using total order.0EeReturns itself clamped between <code>min</code> and <code>max</code>, using total \xe2\x80\xa60EcCreates a half-open interval $[l, u)$ <code>lower..upper</code> <code>Range</code>.EhCreates a mismatch where <code>need</code> is an <code>Interval::closed_open</code>, \xe2\x80\xa6Dg<code>core</code> Expands to the column number at which it was invoked.0Di<code>core</code> Expands to a string representing the current module \xe2\x80\xa60Db<code>.collect_vec()</code> is simply a type specialization of \xe2\x80\xa600AhGet the alpha component.CnSince the color has no alpha, the maximum normalized value \xe2\x80\xa60000000000000000000001CbReturns the number of color components (channels).00AhGet the green component.CgSince the color has no red, the luminosity is returned.0000000000000001DlCombinations of <code>n</code> items taken <code>r</code> at a time with \xe2\x80\xa600000000000CaThe largest integer less than or equal to itself.0AdThe fractional part.0BoThe nearest integer to itself, default rounding0BbThe integral and fractional parts.0CnThe integral part. This means that non-integer numbers are \xe2\x80\xa60FeConverts the <code>ControlFlow</code> into an <code>Result</code> which is <code>Ok</code> if the \xe2\x80\xa6CnConverts a value from one prefix to another, returning the \xe2\x80\xa60CgConverts a value from one binary prefix to another, \xe2\x80\xa6CmConverts a value from one SI prefix to another, returning \xe2\x80\xa6ChThe hyperbolic cosine calculated using Taylor series \xe2\x80\xa60EfReturns the length of <code>self</code>. Like C\xe2\x80\x99s <code>strlen</code>, this does \xe2\x80\xa6Cm(countReset) Resets the counter used with <code>count</code>.ClReturns the number of zeros in the binary representation \xe2\x80\xa600000000000000000000000BkThe number of bits unset (number of zeros).00CaSets the working directory for the child process.BfReturns the current working directory.CkReturns the full filesystem path of the current running \xe2\x80\xa6AoReturns the current seed value.BlReturns the current random <code>u16</code>.DhReturns the current random <code>u32</code>, without updating the state.BlReturns the current random <code>u32</code>.BlReturns the current random <code>u64</code>.00BfProvides a cursor at the back element.DeCreates a <code>DebugTuple</code> builder designed to assist with \xe2\x80\xa6DhDecodes the given <code>v</code>alue using the sRGB inverse transfer \xe2\x80\xa60ChReturns the required output buffer size for decoding \xe2\x80\xa6000000000ClReturns the duration between this and an earlier instant \xe2\x80\xa6CeReturns the denominator (the second number of the \xe2\x80\xa600000000000000000000000DiReturns the determinant if the matrix is square, or <code>None</code> \xe2\x80\xa60000000ClReturns the number of digits in the given <code>base</code>.DeReturns the number of digits in the given absolute <code>base</code>.1100101010CjReturns the number of digits in base 10, including the \xe2\x80\xa60B`An alias of <code>digits</code>.010101010D`Sets the <code>dither</code> field to <code>Dither::Auto</code>.D`Sets the <code>dither</code> field to <code>Dither::None</code>.CdLowest lane <code>a / b</code>, high lane unchanged.oDraws a circle.BlDrops <code>n</code> elements from the back.AnCreate a new zero-sized slice.CbEncodes the value into a byte buffer for WASM FFI.DfEncodes the given <code>v</code>alue using the sRGB transfer function.0ChReturns the required output buffer size for encoding \xe2\x80\xa6000000000BhReturns the epoch offset in nanoseconds.00ClIf the iterator yields exactly one element, that element \xe2\x80\xa600CeCalculates $ 2^x $ using the Taylor series expansion.0CbExtends the back of the destaque from an iterator.CjReturns the multiplication factor for the prefix as an \xe2\x80\xa60CnReturns the multiplication factor for the binary prefix as \xe2\x80\xa6CmReturns the multiplication factor for the SI prefix as an \xe2\x80\xa6DiWrites the factors in <code>fbuf</code>, and the unique prime factors \xe2\x80\xa600000000000CcExtracts the prefix of <code>self.file_name</code>.DoThe source file containing the message, if it is a <code>&#39;static</code> \xe2\x80\xa6CcReturns the first entry in the map for in-place \xe2\x80\xa6BfThe first char in <code>glyphs</code>.0CgRound each lane to a whole number, towards negative \xe2\x80\xa6CgRound <code>f64</code> lanes towards negative infinity.CnFormat some value, or run an alternative closure if it\xe2\x80\x99s \xe2\x80\xa60BkThe topmost possible bounding box for text.0DeSets the <code>format</code> field to <code>PixelFormat::AG88</code>.Cn\xf0\x9f\x96\xb9 <code>core</code> Constructs parameters for the other \xe2\x80\xa60DeSets the <code>format</code> field to <code>PixelFormat::GA88</code>.DeSets the <code>format</code> field to <code>PixelFormat::PAL1</code>.DeSets the <code>format</code> field to <code>PixelFormat::PAL2</code>.DeSets the <code>format</code> field to <code>PixelFormat::PAL4</code>.DeSets the <code>format</code> field to <code>PixelFormat::PAL8</code>.ClFormat all iterator elements, separated by <code>sep</code>.00cWIPDbCreates a new <code>StringNonul</code> from a <code>char16</code>.CoCreates a new <code>StringU8</code> from a <code>char16</code>.D`Creates a new <code>StringU16</code> from a <code>char16</code>.D`Creates a new <code>StringU32</code> from a <code>char16</code>.DbCreates a new <code>StringUsize</code> from a <code>char16</code>.DdCreates a new <code>GraphemeNonul</code> from a <code>char16</code>.DaCreates a new <code>GraphemeU8</code> from a <code>char16</code>.EeCreates a new angle from a <code>value</code> in a <code>custom_unit</code> which \xe2\x80\xa60000000000000dTODODcAttempts to construct a <code>KeyAlpha</code> from a JavaScript \xe2\x80\xa6DaAttempts to construct a <code>KeyPad</code> from a JavaScript \xe2\x80\xa6DbAtempts to construct a <code>KeyMedia</code> from a JavaScript \xe2\x80\xa6D`Atempts to construct a <code>KeyMod</code> from a JavaScript \xe2\x80\xa6DaAttempts to construct a <code>KeyMod</code> from a JavaScript \xe2\x80\xa6DgCreates a new <code>TimeDelta</code> from the given number of whole \xe2\x80\xa6DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa610EfReturns a <code>Month</code> from its counting number, from <code>January=1</code> \xe2\x80\xa6D`Creates an <code>Ipv4Addr</code> from a four element byte array.DcCreates an <code>Ipv6Addr</code> from a sixteen element byte array.CkConstructs a box from a raw pointer in the given allocator.E`Constructs an <code>Rc&lt;T, A&gt;</code> from a raw pointer in the provided \xe2\x80\xa6DkConverts a raw pointer previously created by <code>into_raw</code> back \xe2\x80\xa6DfCreate from <code>Rgba&lt;u16&gt;</code> by scaling each component \xe2\x80\xa6BiCreate from <code>Rgba&lt;u16&gt;</code>.01EfConstructs a <code>u32</code> from an array of <code>[u16; 2]</code> in big-endian \xe2\x80\xa6EfConstructs a <code>u64</code> from an array of <code>[u16; 4]</code> in big-endian \xe2\x80\xa6EgConstructs a <code>u128</code> from an array of <code>[u16; 8]</code> in big-endian \xe2\x80\xa6DkConstructs a <code>u64</code> from an array of <code>[u16; 4]</code> in \xe2\x80\xa6DlConstructs a <code>u128</code> from an array of <code>[u16; 8]</code> in \xe2\x80\xa6DkConstructs a <code>u32</code> from an array of <code>[u16; 2]</code> in \xe2\x80\xa6201EfConstructs a <code>u64</code> from an array of <code>[u32; 2]</code> in big-endian \xe2\x80\xa6EgConstructs a <code>u128</code> from an array of <code>[u32; 4]</code> in big-endian \xe2\x80\xa6DkConstructs a <code>u64</code> from an array of <code>[u32; 2]</code> in \xe2\x80\xa6DlConstructs a <code>u128</code> from an array of <code>[u32; 4]</code> in \xe2\x80\xa601EgConstructs a <code>u128</code> from an array of <code>[u64; 2]</code> in big-endian \xe2\x80\xa6DlConstructs a <code>u128</code> from an array of <code>[u64; 2]</code> in \xe2\x80\xa60ChCreates a <code>Point</code> from a <code>Vector</code>.BlReturns the GCD and the B\xc3\xa9zout coeficients.00000000000DiGets the contents of the cell, initializing it to <code>f()</code> if \xe2\x80\xa60CeReturns the path to the program that was given to \xe2\x80\xa6CdReturns the size of the window, in cells and pixels.BlReturns the granularity of this time source.0BjChecks if WebAssembly atomics are enabled.CiComputes the FNV hash of the provided byte slice, xor \xe2\x80\xa6000DeReturns the index of the highest bit set to one in <code>self</code>.00000000000Cjproc Returns the total number of identifiers in its input.0Da\xf0\x9d\x90\x93 <code>core</code> Includes a UTF-8 encoded file as a string.0CcReturns the PRNG\xe2\x80\x99s inner state as a raw snapshot.0000000000BnInserts a key-value pair, consuming the value.ClCalls a function with a reference to the contained value \xe2\x80\xa6EhReturns the number of combinations of <code>n</code> items taken <code>r</code> at a \xe2\x80\xa600CaReturns the truncated quotient and the remainder.00BkReturns the factors (including 1 and self).00???CgReturns <code>true</code> if <code>self</code> is even.00EhReturns the number of permutations of <code>n</code> items taken <code>r</code> at a \xe2\x80\xa600AkCalls `NumInt::int_ref_abs.00CmSimilar to int_abs, but operates on references instead of \xe2\x80\xa600AkCalls `NumInt::int_ref_gcd.00CmSimilar to int_gcd, but operates on references instead of \xe2\x80\xa600AkCalls `NumInt::int_ref_lcm.00CmSimilar to int_lcm, but operates on references instead of \xe2\x80\xa600CoCounts the number of integers $&lt;|n|$ that are relatively \xe2\x80\xa600ClAn iterator adaptor to insert a particular value between \xe2\x80\xa60DhCreates a new iterator which places a copy of <code>separator</code> \xe2\x80\xa6010CnReturns an interval representing the angle range using 256 \xe2\x80\xa6EhGroups every <code>N</code> elements in the <code>Vec&lt;T&gt;</code> into chunks to \xe2\x80\xa6AnCreates a future from a value.0EfConverts the <code>OsString</code> into a <code>String</code> if it contains valid \xe2\x80\xa6EeConverts the <code>CString</code> into a <code>String</code> if it contains valid \xe2\x80\xa6EeSplits a <code>u32</code> into an array of <code>[u16; 2]</code> in big-endian order.EcSplits a <code>u128</code> into an array of <code>[u16; 8]</code> in big-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u16; 4]</code> in big-endian order.EfSplits a <code>u128</code> into an array of <code>[u16; 8]</code> in little-endian \xe2\x80\xa6EeSplits a <code>u32</code> into an array of <code>[u16; 2]</code> in little-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u16; 4]</code> in little-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u16; 4]</code> in native-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u16; 8]</code> in native-endian \xe2\x80\xa6EeSplits a <code>u32</code> into an array of <code>[u16; 2]</code> in native-endian \xe2\x80\xa6EcSplits a <code>u128</code> into an array of <code>[u32; 4]</code> in big-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u32; 2]</code> in big-endian order.EfSplits a <code>u128</code> into an array of <code>[u32; 4]</code> in little-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u32; 2]</code> in little-endian \xe2\x80\xa6EeSplits a <code>u64</code> into an array of <code>[u32; 2]</code> in native-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u32; 4]</code> in native-endian \xe2\x80\xa6EcSplits a <code>u128</code> into an array of <code>[u64; 2]</code> in big-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u64; 2]</code> in little-endian \xe2\x80\xa6EfSplits a <code>u128</code> into an array of <code>[u64; 2]</code> in native-endian \xe2\x80\xa6CkCreates a consuming iterator visiting all the values in \xe2\x80\xa6ClCreates a consuming iterator visiting all the values, in \xe2\x80\xa6DlConsumes this <code>Point</code> and converts it into a <code>Vector</code>.EbReturns <code>true</code> if the <code>Path</code> is absolute, i.e., if it is \xe2\x80\xa6AfIs this path absolute?DkReturns true if the data is borrowed, i.e. if <code>to_mut</code> would \xe2\x80\xa6CcReturns <code>true</code> if the value is borrowed.DeReturns <code>true</code> if this is a <code>Continue</code> variant.FeReturns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. \xe2\x80\xa60BjReturns true if the file size equals zero.ClChecks if the associated thread has finished running its \xe2\x80\xa60EjIndicates whether <em>only</em> the 3 fields from <code>h</code> to <code>s</code> are \xe2\x80\xa6EbReturns <code>true</code> if <code>self</code> is infinite (either negative or \xe2\x80\xa6000ChReturns <code>true</code> if this is a loopback address.EcReturns <code>true</code> if this is a loopback address (<code>127.0.0.0/8</code>).EdReturns <code>true</code> if this is the loopback address (<code>::1</code>), as \xe2\x80\xa6D`Returns <code>true</code> if <code>self</code> is sign negative.000FcReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number \xe2\x80\xa600000CnReturns true when this duration is negative. That is, less \xe2\x80\xa6111111111111ClWhether <code>self</code> is equal to <code>NUM_ZERO</code>.00BiDetermines whether the mutex is poisoned.EgReturns <code>true</code> if the associated <code>Once</code> was poisoned prior to \xe2\x80\xa6BhDetermines whether the lock is poisoned.CmChecks if the window is in a portrait orientation (height \xe2\x80\xa6D`Returns <code>true</code> if <code>self</code> is sign positive.000FcReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number \xe2\x80\xa600000CiReturns true when this duration is positive. That is, \xe2\x80\xa6111111111111BfTells whether the raw mode is enabled.AiIs this a read-only file?EcReturns <code>true</code> if the <code>Path</code> is relative, i.e., not absolute.AfIs this path relative?DeReturns <code>true</code> if this address is reserved by IANA for \xe2\x80\xa6EeReturns if the <code>std::io::File</code> backing the <code>MediaSource</code> is \xe2\x80\xa6DkAlways returns true since a <code>io::Cursor&lt;u8&gt;</code> is always \xe2\x80\xa6EgReturns <code>true</code> if the option is a <code>Some</code> and the value inside \xe2\x80\xa6DhReturns <code>true</code> if the set is a superset of another, i.e., \xe2\x80\xa60CjReturns <code>true</code> if we are in a terminal context.CkReturns <code>true</code> if we\xe2\x80\x99re in a terminal context.CkDetermines if the prefix is verbatim, i.e., begins with \xe2\x80\xa6EjIndicates whether <em>only</em> the 3 fields from <code>y</code> to <code>d</code> are \xe2\x80\xa6EjIndicates whether <em>only</em> the 6 fields from <code>y</code> to <code>s</code> are \xe2\x80\xa6CnIterator over generated IDs with <code>SeqCst</code> ordering.CnReturns the kind of the angle using a custom tolerance for \xe2\x80\xa60CjReturns the number of bytes needed to encode the given \xe2\x80\xa6CeDefines the program entry point and main function \xe2\x80\xa60ChReturns the load factor as a fraction of total capacity.DhReturns a reference to the <code>LocalWaker</code> for the current task.CmAcquire a shared (non-exclusive) lock on the file. Blocks \xe2\x80\xa6CjComputes the base-2 logarithm using the change of base \xe2\x80\xa60DiReturns a <code>Cursor</code> pointing at the gap before the smallest \xe2\x80\xa60CnComputes a default function result (if none), or applies a \xe2\x80\xa6EjMaps a <code>Result&lt;T, E&gt;</code> to <code>U</code> by applying fallback function \xe2\x80\xa6DiCalls the given function <code>f</code> for each contiguous window of \xe2\x80\xa600CjMaterializes a chunk by converting it into a collected \xe2\x80\xa6CgLow lane <code>max(a, b)</code>, other lanes unchanged.DcSets the <code>mean</code> field to <code>SixelMean::Center</code>.DcSets the <code>mean</code> field to <code>SixelMean::Colors</code>.DcSets the <code>mean</code> field to <code>SixelMean::Pixels</code>.DjReplaces <code>self</code> with other, returning the previous value of \xe2\x80\xa600BdReturns the size of a type in bytes.00CeAttempts to grow the default linear memory by the \xe2\x80\xa6DdReturns the metadata that <em>optionally</em> traverses symbolic \xe2\x80\xa6CgLow lane <code>min(a, b)</code>, other lanes unchanged.BaReturns the time of modification.AoThe module path of the message.DmMove the low lane of <code>b</code> to <code>a</code>, other lanes unchanged.EeReturns the middle sub-<code>slice</code> with the given maximum <code>len</code> \xe2\x80\xa6CdLowest lane <code>a * b</code>, high lane unchanged.BcSets the bit at <code>index</code>.00DkCreates a new <code>Ratio&lt;N, D&gt;</code>, ensuring <code>d != 0</code>.EjReturns a <code>&amp;str</code> backed by a <code>buffer</code>, where you always know \xe2\x80\xa6DjReturns a <code>String</code> where you always know each character\xe2\x80\x99s \xe2\x80\xa6110E`Returns a new <code>LinuxSigaction</code> for a <code>SA_SIGINFO</code> handler.DfReturns the appropriate variant from the given <code>value</code>, \xe2\x80\xa6CoCreates a new <code>PtrNonNull</code> that is dangling, but \xe2\x80\xa6CjConverts a mutable reference to a <code>PtrNonNull</code>.CbConverts a reference to a <code>PtrNonNull</code>.AgReturns the number one.00000CgReturns <code>true</code> if <code>self</code> is zero.00000CfComputes the absolute value of <code>&amp;self</code>.00Dh<em>Like <code>num_abs</code> but takes the arguments by reference.</em>00BkComputes <code>&amp;self + &amp;rhs</code>.00Dh<em>Like <code>num_add</code> but takes the arguments by reference.</em>00BkComputes <code>&amp;self / &amp;rhs</code>.00Dh<em>Like <code>num_div</code> but takes the arguments by reference.</em>00BkComputes <code>&amp;self * &amp;rhs</code>.00Dh<em>Like <code>num_mul</code> but takes the arguments by reference.</em>00BbComputes <code>- &amp;self</code>.00Dh<em>Like <code>num_neg</code> but takes the arguments by reference.</em>00BkComputes <code>&amp;self % &amp;rhs</code>.00Dh<em>Like <code>num_rem</code> but takes the arguments by reference.</em>00BkComputes <code>&amp;self - &amp;rhs</code>.00Dh<em>Like <code>num_sub</code> but takes the arguments by reference.</em>00hFeatures00000000000AgSets the number to one.00000CjSets <code>self</code> to a valid <code>&amp;value</code>.00DbSets <code>self</code> to the given valid <code>&amp;value</code>.00CkCalculates the distance between two pointers within the \xe2\x80\xa6DnCreates a half-open interval $(l, u]$ <em><code>lower..&lt;=upper</code></em>.BmPrints to the standard error, with a newline.0CkDuplicates the second front pair of elements, at the front.DaReturns both the next random state and the <code>u8</code> value.000CnRotates the top six stack elements, counter-clockwise, two \xe2\x80\xa6BjParse an IP address from a slice of bytes.BlParse an IPv4 address from a slice of bytes.BlParse an IPv6 address from a slice of bytes.BmParse a socket address from a slice of bytes.CcParse an IPv4 socket address from a slice of bytes.CcParse an IPv6 socket address from a slice of bytes.EdThis method returns an ordering between <code>self</code> and <code>other</code> \xe2\x80\xa6BmPartial comparison for two <code>Arc</code>s.CiCompare need first. If they are equal, then compare have.EeCompare <code>value</code> first. If they are equal, then compare <code>quant</code>.CfState\xe2\x80\x99s ordering takes precedence over value\xe2\x80\x99s \xe2\x80\xa6BlPartial comparison for two <code>Rc</code>s.fPanicsDkLexicographically compares the <code>PartialOrd</code> elements of this \xe2\x80\xa6007CiReturns the permissions of the file this metadata is for.BdGet file permissions (lower 12 bits)BdReturns the permissions of the file.DlPermutations of <code>n</code> items taken <code>r</code> at a time with \xe2\x80\xa600000000000CkReturns the name of the associated planet of Helenistic \xe2\x80\xa6CnRemoves and returns the last element from the deque if the \xe2\x80\xa6DfRaises itself to the <code>y</code> floating point power using the \xe2\x80\xa60DjFetches the cache line containing <code>addr</code> into all levels of \xe2\x80\xa6AkFetches into L2 and higher.ClFetches into L3 and higher or an implementation-specific \xe2\x80\xa6CiWrites bytes to stdout. Returns error on syscall failure.DdPushes a set of items (cloning out of the input <code>slice</code>).0DdPushes a set of items (copying out of the input <code>slice</code>).0DfSets the <code>quality</code> field to <code>SixelQuality::Low</code>.DhSorts a <code>slice</code> using quick sort with the Hoare partition \xe2\x80\xa6CnGenerates a random <code>u128</code> value that may not be \xe2\x80\xa6DfAllocates a <code>String</code> by calling a JS-backed FFI fn that \xe2\x80\xa6DkThis function is not supported by <code>io::Repeat</code>, because there\xe2\x80\xa6CjReads all bytes until EOF in this source, placing them \xe2\x80\xa600CmReduces the given value to the most appropriate prefix as \xe2\x80\xa60CjReduces the given value to the most appropriate binary \xe2\x80\xa6CmReduces the given value to the most appropriate SI prefix \xe2\x80\xa6BcRemoves a file from the filesystem.CnRepeats a string a given number of times into the provided \xe2\x80\xa6DkRepeats a <code>string</code> a given number of times into the provided \xe2\x80\xa61CfCreates an iterator that endlessly repeats calling \xe2\x80\xa6DfModifies the deque in-place so that <code>len()</code> is equal to \xe2\x80\xa6F`Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.DfRotates all the destaqued elements <code>n</code> places to the right.DfShifts the bits to the left by a specified amount, <code>n</code>, \xe2\x80\xa600000000000DaRotates the double-ended queue <code>n</code> places to the left.111111111111111111111111BhRounds each lane in the style specified.0EnAsserts the <code>state</code> equals <code>expected</code> and returns <code>self</code>, \xe2\x80\xa6FbAsserts the <code>state</code> is <code>Ok</code> and returns <code>self</code>, otherwise panics.EgAsserts the <code>state</code> matches the <code>predicate</code>, otherwise panics \xe2\x80\xa6E`Unwraps the contained <code>Ok(state)</code> or provides a <code>default</code>.EbUnwraps the contained <code>Some(state)</code> or provides a <code>default</code>.CjWraps the <code>state</code> field into <code>Some</code>.Cd(width) (height) The extent of the screen in pixels.0ChSets the args into the low lane of a <code>m128d</code>.DeSets the value of the <code>TCP_NODELAY</code> option on this socket.Cb(setTimeout) Calls a function after a delay in \xe2\x80\xa6CdRegisters multiple signals using a handler function.CfThe hyperbolic sine calculated using Taylor series \xe2\x80\xa60CjReturns the size of the pointed-to value in bytes. See \xe2\x80\xa6DkParses input according to platform conventions for the <code>PATH</code>\xe2\x80\xa6Ch$ \\sqrt{x} $ The square root calculated calling both \xe2\x80\xa60CeLow lane <code>sqrt(a)</code>, other lanes unchanged.AbStart index bound.0DfDetermines whether <code>base</code> is a prefix of <code>self</code>.BhStores the value to the reference given.0BgStore data from a register into memory.0Bi(strokeRect) Draws a rectangular outline.Cj(strokeText) Draws text outline at the specified position.CdLowest lane <code>a - b</code>, high lane unchanged.CmSwaps the first two pairs of elements at the front of the \xe2\x80\xa6CbRemoves an element from the vector and returns it.CfPerforms a set of actions within a synchronous update.0000000000000000CgComputes the hyperbolic tangent using Taylor series \xe2\x80\xa60DkCompute the bitwise of sign bit NOT of <code>a</code> and then AND with \xe2\x80\xa6EgCompute the bitwise NOT of <code>a</code> and then AND with <code>b</code>, returns \xe2\x80\xa610EgComputes the bitwise of sign bitAND of 256 bits in <code>a</code> and <code>b</code>\xe2\x80\xa6EhComputes the bitwise AND of 256 bits in <code>a</code> and <code>b</code>, returns 1 \xe2\x80\xa6EhComputes the bitwise of sign bit AND of 256 bits in <code>a</code> and <code>b</code>\xe2\x80\xa60CiMakes the current path absolute without accessing the \xe2\x80\xa60EgConverts a <code>TimeDelta</code> to a <code>Duration</code> if it is non-negative. \xe2\x80\xa6CnConverts a <code>Path</code> to an owned <code>PathBuf</code>.BhConvert to <code>Rgba&lt;f32&gt;</code>.0000000BhConvert to <code>Rgba&lt;f64&gt;</code>.0000000ClConvenience method for quickly getting a string from the \xe2\x80\xa60BlDefault implementation emulates mouse clicks00AoTouchscreen input capabilities.0CjAccumulate the elements in the iterator in a tree-like \xe2\x80\xa600Da<code>.try_collect()</code> is more convenient way of writing \xe2\x80\xa60ClFallibly transforms an iterator into a collection, short \xe2\x80\xa6010EhTries to convert a <code>JsInstant</code> to an <code>EventTimestamp</code>. Returns \xe2\x80\xa6DgTries to reserve capacity for at least <code>additional</code> more \xe2\x80\xa6DkTries to reserve capacity for at least <code>additional</code> elements \xe2\x80\xa6111EeInvokes <code>try_reserve</code> on the underlying instance of <code>OsString</code>.2DhTries to reserve capacity for at least <code>additional</code> bytes \xe2\x80\xa6CkDuplicates the front pair of elements, after the second \xe2\x80\xa6CkDefines zero-cost, zero-sized, generic <em>marker</em> IDs.0Bm<code>core</code> Indicates unreachable code.0EbA copy of <code>self</code> unsetting the bits that are set in <code>other</code>.00EeUnsets the bits in <code>self</code> to 0, from the <code>[start..=end]</code> range.00000000000DeReturns a copy of <code>self</code> with unset bits to 0 from the \xe2\x80\xa600DhReturns a <code>Cursor</code> pointing at the gap after the greatest keyDhReturns a <code>Cursor</code> pointing at the gap after the greatest \xe2\x80\xa6CaReturns the current URL as a <code>String</code>.EnAsserts the <code>value</code> equals <code>expected</code> and returns <code>self</code>, \xe2\x80\xa6FbAsserts the <code>value</code> is <code>Ok</code> and returns <code>self</code>, otherwise panics.EgAsserts the <code>value</code> matches the <code>predicate</code>, otherwise panics \xe2\x80\xa6EbUnwraps the contained <code>Some(value)</code> or provides a <code>default</code>.E`Unwraps the contained <code>Ok(value)</code> or provides a <code>default</code>.CjWraps the <code>value</code> field into <code>Some</code>.CmThe index in the given string up to which valid UTF-8 was \xe2\x80\xa600000BkWake this task without consuming the waker.0DeWakes up the task associated with this <code>Waker</code> without \xe2\x80\xa61AeSets the window size.BlAcquires a reference to the contained value.DcConstructs a new (empty) queue using the given <code>buffer</code>.DcConstructs a new (empty) stack using the given <code>buffer</code>.CiReturns an array, allocated in the stack, filled with \xe2\x80\xa6ChReturns an array, allocated in the heap, filled with \xe2\x80\xa6CnReturns a 2-dimensional grid, allocated in the heap, using \xe2\x80\xa6CiReturns a 2-dimensional grid, allocated in the stack, \xe2\x80\xa630DgCreates an empty <code>HashMap</code> which will use the given hash \xe2\x80\xa6CiCreates a new empty hash set which will use the given \xe2\x80\xa6CaRequests execution of JavaScript inside a worker.BfReturns the list of active worker IDs.CgPolls for the result of a JavaScript execution in a \xe2\x80\xa6BbStops a specific Web Worker by ID.CdInvokes memset on the specified pointer, setting \xe2\x80\xa6EnSets <code>count * size_of::&lt;T&gt;()</code> bytes of memory starting at <code>dst</code>\xe2\x80\xa6CdWrites a single <code>isize</code> into this hasher.00CdWrites a single <code>usize</code> into this hasher.00oAll lanes zero.AjA zeroed <code>m256</code>ClCreate an iterator which iterates over both this and the \xe2\x80\xa600B`Block device (S_IFBLK in POSIX).CaCode to set the foreground color to bright black.CaCode to set the foreground color to bright green.CaCode to set the foreground color to bright white.Ef\xf0\x9f\xa5\xa1 <code>Base32</code> encoding with padding (<code>=</code>) enabled, using LUT \xe2\x80\xa60Ef\xf0\x9f\xa5\xa1 <code>Base64</code> encoding with padding (<code>=</code>) enabled, using LUT \xe2\x80\xa60Dj<code>core</code> The bitwise AND assignment operator <code>&amp;=</code>.0Df<code>core</code> The bitwise XOR assignment operator <code>^=</code>.0B`Increases the screen brightness.0DjWhether the color components are integer types (e.g., <code>u8</code>, \xe2\x80\xa60CmCode to move the cursor down by 1-digit <code>n</code> lines.CmCode to move the cursor down by 2-digit <code>n</code> lines.CmCode to move the cursor down by 3-digit <code>n</code> lines.CmCode to move the cursor down by 4-digit <code>n</code> lines.CmCode to move the cursor left by 1-digit <code>n</code> lines.CmCode to move the cursor left by 3-digit <code>n</code> lines.0CmCode to move the cursor left by 4-digit <code>n</code> lines.CmCode to move the cursor to the specified 1-digit position \xe2\x80\xa6CmCode to move the cursor to the specified 2-digit position \xe2\x80\xa6CmCode to move the cursor to the specified 3-digit position \xe2\x80\xa6CmCode to move the cursor to the specified 4-digit position \xe2\x80\xa6BlCode to move the cursor right by one column.fU+00400CgA trait for giving a type a useful default value in \xe2\x80\xa60CnA guard that temporarily sets a global current pointer for \xe2\x80\xa60Cg\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The value has surpassed the bounds of the \xe2\x80\xa6Cb\xf0\x9f\x9a\xa9 The value has surpassed the bounds of the \xe2\x80\xa60100DoCommon trait for enumerating <code>Copy</code>-constrained <em>data types</em>.0Ce\xf0\x9f\x94\x84 An iterator over <code>Destaque</code> elements.0DnThe <strong>channel</strong>\xe2\x80\x99s sending half has become disconnected, and \xe2\x80\xa60DjThis <code>sync_channel</code>\xe2\x80\x99s receiving half has disconnected, so \xe2\x80\xa6110Dg<code>core</code> Opaque type representing the discriminant of an enum.0Cn\xf0\x9f\x94\x84 An iterator over the elements of a <code>DstQueue</code>.0Cn\xf0\x9f\x94\x84 An iterator over the elements of a <code>DstStack</code>.0B`Code to erase the entire screen.Cm\xf0\x9f\xa5\xa1 A type that can compute the size of its encoded form \xe2\x80\xa60BcThe primary mode for data encoding.0CbRepresents a pointer event (mouse, touch, or pen).0Cl$ 360/\xcf\x84 = 180/\xcf\x80 $ (A072097) <code>\xe2\x89\x88 57.2957795\xe2\x80\xa6</code>00000D`$ \xcf\x84/360 = \xcf\x80/180 = 1\\degree $ <em>arc degree</em> (A019685, \xe2\x80\xa60Cc<code>std</code> Metadata information about a file.0BfFile larger than allowed or supported.00Ee\xf0\x9f\x96\xb9 <code>core</code> Possible alignments returned by <code>Formatter::align</code>.0Dg\xf0\x9f\x96\xb9 <code>core</code> Represents a safely precompiled version of a \xe2\x80\xa60Ec<code>core</code> A Future that wraps a function returning [<code>TaskPoll</code>].0Dh\xf0\x9f\x97\x83\xef\xb8\x8f <code>std?</code> A view into a single entry in a map, which \xe2\x80\xa60EkIndicates whether <em>only</em> the 6 fields from <code>h</code> to <code>ns</code> are \xe2\x80\xa6EaIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6BiContains an invalid digit in its context.0AjA parameter was incorrect.00AdInvalid pixel value.00Cl\xf0\x9f\x9a\xa9 An invalid value was received for the given type or \xe2\x80\xa6000Fd<code>?std</code> Like <code>BufWriter</code>, but flushing whenever a newline (<code>0x0a</code>\xe2\x80\xa60CdThe filesystem object is, unexpectedly, a directory.00Dg\xf0\x9f\x94\x84 <code>core</code> An iterator that only accepts elements while \xe2\x80\xa60Ee\xf0\x9f\x94\x84 <code>core</code> An iterator that yields a single element <code>A</code> by \xe2\x80\xa60Ea\xf0\x9f\x94\x84 <code>core</code> An iterator with a <code>peek()</code> that returns an \xe2\x80\xa60D`\xf0\x9f\x94\x84 <code>core</code> Conversion from an <code>Iterator</code>.0D`\xf0\x9f\x94\x84 <code>core</code> Conversion into an <code>Iterator</code>.0Cd<code>Linux</code> Standard file descriptor numbers.BaLinux standard signals constants.0Ca<code>Linux</code> File mode and permission bits.fU+003C0BfAdditional information about a signal.0DdRepresents the <code>termios</code> structure from libc, used to \xe2\x80\xa60AoSmallest positive normal value.00000Df<code>core</code> A wrapper to inhibit compiler from automatically \xe2\x80\xa60Dg<code>miniquad</code> Describes a hardware and platform-specific setup.0Da\xf0\x9f\x94\x84 <code>std</code> An owning iterator over messages on an [\xe2\x80\xa60Fe<code>std</code> The receiving half of an [<code>Mpsc</code>][crate::Mpsc] [<code>channel</code>][\xe2\x80\xa60AiNegative infinity (-\xe2\x88\x9e).00000ChReturns the number of invalid values, as an unsigned \xe2\x80\xa6CeWhether the number uses a fixed-point representation.0ChWhether the number uses a floating-point representation.0CcWhether the number has a memory niche optimization.0DkThe greatest normalized value (e.g. 1.0 for float, <code>MAX</code> for \xe2\x80\xa60DkThe smallest normalized value (e.g. 0.0 for float, <code>MIN</code> for \xe2\x80\xa60Ck\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f A signed integer that is known not to equal \xe2\x80\xa60Cn\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f An unsigned integer that is known not to equal \xe2\x80\xa601100Dg\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f <code>core</code> A signed integer that is known not to \xe2\x80\xa60Dj\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f <code>core</code> An unsigned integer that is known not to \xe2\x80\xa60Da\xe2\x88\x85 \xf0\x9f\x9a\xa9+ An error composite of <code>NotImplemented</code> + \xe2\x80\xa60CmThe network operation failed because it was not connected \xe2\x80\xa600Cl\xe2\x88\x85 \xf0\x9f\x9a\xa9 The requested functionality is not supported by \xe2\x80\xa600CgThe requested numerical functionality is not supported.ChThe requested functionality is not supported by this \xe2\x80\xa6221210Eh\xf0\x9f\x9a\xa9+ An error composite of <code>NotEnoughSpace</code> + <code>PartiallyAdded</code>\xe2\x80\xa60Dh<code>std</code> A handle to a child process\xe2\x80\x99s standard input (stdin).0De<code>std</code> Specifies how to handle standard I/O streams in [\xe2\x80\xa60fU+003F0AaResource is busy.00BjRight <strong>Control</strong> (Ctrl) key.0DgIf signum is <code>SIGCHLD</code>, do not receive notification when \xe2\x80\xa6DeIf signum is <code>SIGCHLD</code>, do not transform children into \xe2\x80\xa6CnRestore the signal action to the default upon entry to the \xe2\x80\xa6nQuality modes.0Bi<code>core</code> An IPv4 socket address.0Bi<code>core</code> An IPv6 socket address.0Ba(\xe2\x80\x9cGet software carrier flag\xe2\x80\x9d)Ba(\xe2\x80\x9cSet software carrier flag\xe2\x80\x9d)Dk<code>core</code> Allows the implementor of a task executor to create a \xe2\x80\xa60Dk\xe2\x9a\x96\xef\xb8\x8f <code>std</code> A specialized <code>Result</code> type for threads.0CdToo many (hard) links to the same filesystem object.00Dg\xf0\x9f\x9a\xa9+ <code>std</code> An enumeration of possible errors associated \xe2\x80\xa60BcAn element of a <code>Tuple</code>.0Cfcgen \xf0\x9f\x94\x84 An iterator over exclusive references to \xe2\x80\xa60Clcgen \xf0\x9f\x94\x84 An iterator over shared references to elements \xe2\x80\xa60CjA newtype-based ID that associates a resource with its \xe2\x80\xa60BcReturns the number of valid values.00000000000CfReturns the number of valid values, as an unsigned \xe2\x80\xa6C`Verbatim disk prefix, e.g., <code>\\\\?\\C:</code>.0fU+007C0AeA web API Event kind.0CiRepresents a job running inside a <code>WebWorker</code>.0Bh\xf0\x9f\x8e\xb2 The <code>XorShift128+</code> PRNG.0DkReturns the absolute value of this time delta as a <code>Duration</code>\xe2\x80\xa6CfLanewise absolute value with lanes as <code>i8</code>.BhAbsolute value of <code>i8</code> lanes.ClComputes the inverse hyperbolic cosine using the natural \xe2\x80\xa60CjLanewise <code>a + b</code> with lanes as <code>i8</code>.0BlAdd the high lane and subtract the low lane.DjAlternately, from the top, add <code>f64</code> then sub <code>f64</code>.CgReturns the alignment of the pointed-to value in bytes.CgComputes the offset that needs to be applied to the \xe2\x80\xa6DkBehaves like <code>alloc</code>, but also ensures that the contents are \xe2\x80\xa60CeAllocates zero-initialized memory with the global \xe2\x80\xa6CnAllocates zeroed memory with the given layout. This is the \xe2\x80\xa62CgConstructs a path inside your application\xe2\x80\x99s cache \xe2\x80\xa600CgConstructs a path inside your application\xe2\x80\x99s state \xe2\x80\xa600DiReturns an iterator over <code>N</code> elements of the iterator at a \xe2\x80\xa600DmView any <code>T: Sync + Unpin + ?Sized</code> as <code>&amp;mut [u8]</code>.CgReturns a mutable byte slice of the inner string slice.CjReturns the instance\xe2\x80\x99s data as a mutable slice of bytes.0CjReturns an exclusive byte slice of the inner string slice.000DfReturns the contents of this <code>MaybeUninit</code> as a mutable \xe2\x80\xa6233BcReturns a raw byte pointer to self.ElConverts from <code>Option&lt;T&gt;</code> (or <code>&amp;mut Option&lt;T&gt;</code>) to \xe2\x80\xa6EdGets <code>Pin&lt;&amp;mut T&gt;</code> to the underlying pinned value from this \xe2\x80\xa6FbConverts from <code>Result&lt;T, E&gt;</code> (or <code>&amp;mut Result&lt;T, E&gt;</code>) to \xe2\x80\xa6CgReturns an exclusive slice containing the entire array.BhReturns the stack as an exclusive slice.0BnExtracts a mutable slice of the entire vector.CnReturns a mutable slice of all elements that have not been \xe2\x80\xa6CnReturns a mutable slice of the contained value, if any. If \xe2\x80\xa6CjReturns an exclusive reference to the distance as a slice.ChReturns an exclusive reference to the extent as a slice.CjReturns an exclusive reference to the position as a slice.CjReturns an exclusive reference to the orientation as a \xe2\x80\xa6ChReturns an exclusive reference to the stride as a slice.EaReturns a (3) tuple if the 3 fields from <code>h</code> to <code>s</code> are \xe2\x80\xa6EaReturns a (3) tuple if the 3 fields from <code>y</code> to <code>d</code> are \xe2\x80\xa6EaReturns a (6) tuple if the 6 fields from <code>y</code> to <code>s</code> are \xe2\x80\xa6CjComputes the inverse hyperbolic sine using the natural \xe2\x80\xa60EeComputes the four quadrant arctangent of <code>self</code> and <code>other</code> \xe2\x80\xa60CmComputes the inverse hyperbolic tangent using the natural \xe2\x80\xa60Bi\xe2\x9a\x9b\xef\xb8\x8f <code>core</code> An atomic fence.0BcBitwise <code>a &amp;amp; b</code>.000BgPerforms the <code>|=</code> operation.EaModifies this set to contain the union of <code>self</code> and <code>rhs</code>.1AkBitwise <code>a ^ b</code>.000C`Returns a copied sorted array using bubble sort.0000000000000AeCreates a new hasher.0AfAdds the given vector.00000000000CfDivides each element of the vector by a scalar, in \xe2\x80\xa600000000000CiMultiplies each element of the vector by a scalar, in \xe2\x80\xa600000000000CmReturns the canonical, absolute form of the path with all \xe2\x80\xa6CkReturns the canonical, absolute form of a path with all \xe2\x80\xa61BaReturns the service capabilities.0BnCaptures the last token from a list of inputs.0DgRound the low lane of <code>b</code> toward positive infinity, high \xe2\x80\xa6BfClear the poisoned state from a mutex.BeClear the poisoned state from a lock.CjCollects all the items from an iterator into a collection.00EhReturns <code>true</code> if the color uses integer components (e.g., <code>u8</code>\xe2\x80\xa600DkReturn an iterator adaptor that iterates over the <code>k</code>-length \xe2\x80\xa600Cmproc Conditionally compiles the given attributes based on \xe2\x80\xa60CcComputes luma from R\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 using the given \xe2\x80\xa60BiAsserts various comparisons on constants.0BaCompile-time <code>decode</code>.0BaCompile-time <code>encode</code>.0EgReturns <code>true</code> if the result is an <code>Err</code> value containing the \xe2\x80\xa60DkReturns <code>true</code> if the map contains a value for the specified \xe2\x80\xa60Cd(contentType) Returns the document\xe2\x80\x99s content type.CnConverts a value from one prefix to another, returning the \xe2\x80\xa60CgConverts a value from one binary prefix to another, \xe2\x80\xa6CmConverts a value from one SI prefix to another, returning \xe2\x80\xa6BdCounts the number of decimal digits.00000CeSorts a slice using counting sort, and writes the \xe2\x80\xa6BgProvides a cursor at the front element.ClCreates a new pointer that is dangling, but non-null and \xe2\x80\xa6Dg<code>core</code> Asserts that a boolean expression is true at runtime.0DfCreates a <code>DebugStruct</code> builder designed to assist with \xe2\x80\xa6ClRemoves all but the first of consecutive elements in the \xe2\x80\xa6CiHelper for defining individual and composite error types.0BdReturns the digital root in base 10.00000000000CkReturns a value uniquely identifying the enum variant in v.CjReturns the quotient, rounding ties to the nearest odd \xe2\x80\xa6CkReturns the quotient, rounding ties to the nearest even \xe2\x80\xa60110110010CnReturns some mutable reference to the inner value if it is \xe2\x80\xa6DbForwards to the method defined on the type <code>dyn Error</code>.0ClForwards to the method defined on the type <code>Any</code>.D`Forwards to the method defined on the type <code>dyn Any</code>.3CmReturns some exclusive reference to the inner value if it \xe2\x80\xa60033CnReturns some reference to the inner value if it is of type \xe2\x80\xa6203CmReturns some shared reference to the inner value if it is \xe2\x80\xa600CjClears the binary heap, returning an iterator over the \xe2\x80\xa6BmDrops <code>n</code> elements from the front.AoEnables receiving mouse events.CdComputes the size of <code>self</code> when encoded.0BeReturns the size of the payload data.1BiReturns the epoch offset in microseconds.00BiReturns the epoch offset in milliseconds.00CiWrites bytes to stderr. Returns error on syscall failure.Cj(setTimeout) Executes JavaScript code after a delay in \xe2\x80\xa60CnExit the current process with the given <code>ExitCode</code>.CcExtends the front of the destaque from an iterator.AoA slice of extra paired glyphs.0ChFetches the value, and applies a function to it that \xe2\x80\xa60000000000000000BbReturns the <code>FileType</code>.CgFills all elements of the array with the default value.CnFind the value of the first element satisfying a predicate \xe2\x80\xa600DhRound the low lane of <code>b</code> toward negative infinity, other \xe2\x80\xa6CkFormat some value, or display an empty string if it\xe2\x80\x99s \xe2\x80\xa60CaFold <code>Option</code> values from an iterator.00BjThe lowest possible bounding box for text.0EeTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no \xe2\x80\xa6DcAttempts to construct a <code>KeyAlpha</code> from a JavaScript \xe2\x80\xa6DaAttempts to construct a <code>KeyPad</code> from a JavaScript \xe2\x80\xa6DbAtempts to construct a <code>KeyMedia</code> from a JavaScript \xe2\x80\xa6D`Atempts to construct a <code>KeyMod</code> from a JavaScript \xe2\x80\xa6DaAttempts to construct a <code>KeyMod</code> from a JavaScript \xe2\x80\xa6EdDecomposes a fat pointer <code>*const T</code> into a <code>FatPtr</code> structure.BhCreate from <code>Rgb&lt;f32&gt;</code>.0000000BhCreate from <code>Rgb&lt;f64&gt;</code>.0000000EaDecode a UTF-16BE\xe2\x80\x93encoded vector <code>v</code> into a <code>String</code>, \xe2\x80\xa6EaDecode a UTF-16LE\xe2\x80\x93encoded vector <code>v</code> into a <code>String</code>, \xe2\x80\xa6DjAttempts to get mutable references to <code>N</code> values in the map \xe2\x80\xa6CnReturns an exclusive reference to the element at the given \xe2\x80\xa60AoGet the position of the window.BaGets a property of the JS object.CfReturns a reference to the element at the given 2D \xe2\x80\xa60C`Checks if the <em>Num Lock</em> modifier is set.Ci(back) Moves the browser back one step in the session \xe2\x80\xa6Ddproc Returns the number of <em>unique</em> identifiers in its input.0CkIncludes a Rust source file relative to the project\xe2\x80\x99s \xe2\x80\xa60DgSets the value of the entry, and returns an <code>OccupiedEntry</code>.CnReturns the quotient, rounding the result towards positive \xe2\x80\xa600CeReturns <code>true</code> if <code>n</code> is prime.00DaReturns the midpoint of <code>self</code> and <code>other</code>.00CnCounts the number of primes upto and including <code>n</code>.00CnVisits the values representing the intersection, i.e., the \xe2\x80\xa6ClVisits the elements representing the intersection, i.e., \xe2\x80\xa6CgReturns an interval representing the angle range in \xe2\x80\xa600DaReturns an exclusive reference to the inner <code>PathBuf</code>.EhChecks if all elements are <code>Some</code>, returning early if a <code>None</code> \xe2\x80\xa6CmReturns <code>true</code> if this is a broadcast address (\xe2\x80\xa6DcReturns <code>true</code> if this unicode scalar is an abstract \xe2\x80\xa600EaReturns <code>true</code> if some <code>call_once()</code> call has completed \xe2\x80\xa6C`Queries if a key event is composing (IME input).EkIndicates whether <em>only</em> the 6 fields from <code>h</code> to <code>ns</code> are \xe2\x80\xa6E`\xf0\x9f\x95\x98 Returns <code>true</code> if the provided <code>year</code> is a leap year.0DaChecks if <code>Atomic</code> objects of this type are lock-free.DfReturns <code>true</code> if operations on values of this type are \xe2\x80\xa6000000000000000CnChecks if the window is approximately maximized (fills the \xe2\x80\xa6CiReturns <code>true</code> if this is a multicast address.EdReturns <code>true</code> if this is a multicast address (<code>224.0.0.0/4</code>).EaReturns <code>true</code> if this is a multicast address (<code>ff00::/8</code>).CmWhether <code>self</code> is equal to <code>NUM_THREE</code>.00BcQueries if a key event is a repeat.ClDetermines whether the character is one of the permitted \xe2\x80\xa600ClChecks if the elements of this iterator are sorted using \xe2\x80\xa600ClReturns <code>true</code> if <code>self</code> is subnormal.000EaIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6Cg\xe2\x9a\x99\xef\xb8\x8f \xe2\x88\x85 The JavaScript <code>undefined</code> value.0CmSort the k largest elements into a new iterator using the \xe2\x80\xa600CkNote: you are not always guaranteed to receive a key_up \xe2\x80\xa600BiReturns the level filter for this logger.0ClDetermines how to load an OpenGL context on X11 (via GLX \xe2\x80\xa60DcComputes the natural logarithm of <code>1 + self</code> using a \xe2\x80\xa60CkComputes the base-10 logarithm using the change of base \xe2\x80\xa60CbComputes luma from R\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 using Rec. 601 \xe2\x80\xa60CbComputes luma from R\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 using Rec. 709 \xe2\x80\xa60BoCalculates the squared magnitude of the vector.0FcMaps <code>ControlFlow&lt;B, C&gt;</code> to <code>ControlFlow&lt;B, T&gt;</code> by applying a \xe2\x80\xa6CnLanewise <code>max(a, b)</code> with lanes as <code>i8</code>.0CnLanewise <code>max(a, b)</code> with lanes as <code>u8</code>.0Ch(measureText) Measures the essential properties of text.CcReturns the minimum alignment of the type in bytes.00DmView a <code>Sync + Unpin</code> <code>self</code> as <code>&amp;[u8]</code>.00BiReturns the current memory size in bytes.CbReturns the current memory size in units of pages.CnLanewise <code>min(a, b)</code> with lanes as <code>i8</code>.0CnLanewise <code>min(a, b)</code> with lanes as <code>u8</code>.0EeReturns the middle sub-<code>slice</code> with the given maximum <code>len</code> \xe2\x80\xa6BnLanewise <code>a * b</code> with 32-bit lanes.CgFlips the bit at <code>index</code>, unchecked version.00C`Sets the bits that are set in <code>mask</code>.00EdGenerates some unique <code>ExampleIdSeqUsize</code> ID with <code>AcqRel</code> \xe2\x80\xa6B`Returns the associated full set.BlReturns a new <code>TimeSplitHourSec</code>.0CgCreates a normalized straight positive angle at 180 \xe2\x80\xa60000000000000BlReturns a new <code>TimeSplitYearDay</code>.0BlReturns a new <code>TimeSplitYearSec</code>.0DcReturns <code>Self</code> if given a valid <code>&amp;value</code>.00AhReturns the number zero.00000AoSets <code>self</code> to zero.00BiSets <code>self</code> to <code>0</code>.00DdReturns the owned version of <code>self</code>, if it can be cloned.00CkReturns both the next state and the <code>u16</code> value.DbReturns both the next random state and the <code>u16</code> value.DjReturns both the next random state and the <code>u32</code> value in a \xe2\x80\xa6DbReturns both the next random state and the <code>u32</code> value.DbReturns both the next random state and the <code>u64</code> value.00CiPerforms the correct padding for an integer which has \xe2\x80\xa6CnCreates a layout by rounding the size of this layout up to \xe2\x80\xa6CjBlocks unless or until the current thread\xe2\x80\x99s token is \xe2\x80\xa600DeMutably peeks the <code>nth</code> element from the top of the stack.ChPass a reference to the next iterator element to the \xe2\x80\xa60CeReturn an iterator adaptor that iterates over all \xe2\x80\xa600EeShuffle the <code>f32</code> lanes from <code>a</code> using an immediate control \xe2\x80\xa6EcShuffle the <code>f32</code> lanes in <code>a</code> using an immediate control \xe2\x80\xa6BmWhether pixel-accurate bitmaps are supported.0CkRemoves and returns the first element from the deque if \xe2\x80\xa6CkReturn the position of the maximum element in the iterator.00CkReturn the position of the minimum element in the iterator.00DjFetches the cache line containing <code>addr</code> into all levels of \xe2\x80\xa6BoFetches into L2 and higher, anticipating write.CdFetch data using the non-temporal access (NTA) hint.BlReturns the previous <code>nth</code> month.BnReturns the previous <code>nth</code> weekday.DgSets the <code>quality</code> field to <code>SixelQuality::Auto</code>.DgSets the <code>quality</code> field to <code>SixelQuality::Full</code>.DgSets the <code>quality</code> field to <code>SixelQuality::High</code>.DiSorts a <code>slice</code> using quick sort with the Lomuto partition \xe2\x80\xa6DiFills the given <code>buffer</code> with random bytes that may not be \xe2\x80\xa6DeReturns an exclusive subslice up to the given <code>end</code> index.0CiReturns the OS error that this error represents (if any).BhReturns the read timeout of this socket.0ClAttempts to wait for a value on this receiver, returning \xe2\x80\xa6CnReduces the given value to a chain of appropriate prefixes \xe2\x80\xa60ClReduces the given value to a chain of appropriate binary \xe2\x80\xa6ChReduces the given value to a chain of appropriate SI \xe2\x80\xa6ClRemoves a key from the map, returning the stored key and \xe2\x80\xa60DkReplaces the wrapped value with a new one computed from <code>f</code>, \xe2\x80\xa6ClRemoves and returns the value for a given key, replacing \xe2\x80\xa6BnTriggers the \xe2\x80\x9cquit_requested_event\xe2\x80\x9d event.ChReverses the order of bits in the integer. The least \xe2\x80\xa600000000000BhReverses the bit pattern of the integer.00000000000000000000000DgShifts the bits to the right by a specified amount, <code>n</code>, \xe2\x80\xa600000000000DbRotates the double-ended queue <code>n</code> places to the right.111111111111111111111111DiRounds <code>$b</code> low as specified, other lanes use <code>$a</code>.EoAsserts the <code>state</code> is <code>Err</code> and returns <code>self</code>, otherwise \xe2\x80\xa6CdReturns the <code>SA_SIGINFO</code> handler, if set.BnMSAA sample count. Defaults to <code>1</code>.0BcSends a message to this Web Worker.BcSet the last access time of a file.ClChanges the flow information associated with this socket \xe2\x80\xa6DeSets the args into an <code>m128i</code>, first arg is the high lane.CiSet <code>i8</code> args into an <code>m256i</code> lane.Ch(setInterval) Calls a function repeatedly at a fixed \xe2\x80\xa6CeChanges the modification time of the underlying file.BeSet the last modified time of a file.AkSets the angle as negative.0C`Sets the angle as negative (no-op for unsigned).01110001101BaSets the position of this cursor.AhSet the window position.AkSets the angle as positive.000C`Sets the angle as positive (no-op for unsigned).000111001CnModifies the readonly flag for this set of permissions. If \xe2\x80\xa6CmSets the read-only flag, returning the previous read-only \xe2\x80\xa6CiChanges the scope ID associated with this socket address.EoShuffle the <code>f32</code> lanes from <code>a</code> and <code>b</code> together using an \xe2\x80\xa6DdReturns the <code>Sign</code> of <code>self</code>, except for zero.0DcReturns the <code>Sign</code>, returning <code>None</code> for zero0BkReturns the size of an expression in bytes.0CaGets a pointer to the first element of the array.CnViews a slice of ASCII characters as a UTF-8 <code>str</code>.EhReturns a left subslice of <code>slice</code> with the given maximum <code>len</code>\xe2\x80\xa60DiReturns a right subslice of <code>slice</code> with the given maximum \xe2\x80\xa60CmSpawns a new scoped thread using the settings set through \xe2\x80\xa6DkLow lane <code>sqrt(b)</code>, upper lane is unchanged from <code>a</code>.CaStores the low lane value to the reference given.EbReturns a path that, when joined onto <code>base</code>, yields <code>self</code>.C`(strokeStyle) Sets the color or style for lines.DaGets the number of strong (<code>Arc</code>) pointers to this \xe2\x80\xa6DjGets the number of strong (<code>Arc</code>) pointers pointing to this \xe2\x80\xa6DhGets the number of strong (<code>Rc</code>) pointers to this allocation.DiGets the number of strong (<code>Rc</code>) pointers pointing to this \xe2\x80\xa6CjLanewise <code>a - b</code> with lanes as <code>i8</code>.0ChReturns the subfactorial, or the number of derangements.00000000000CiReturns the fractional part of this duration in whole \xe2\x80\xa6DaReturns the fractional part of this <code>Duration</code>, in \xe2\x80\xa6BbThe surface area of the 3d extent.0EbAsserts the <code>state</code> and <code>value</code> equals the corresponding \xe2\x80\xa6EhAsserts both the <code>state</code> and <code>value</code> matches the corresponding \xe2\x80\xa6BgReturns the ASCII symbol of the prefix.000BkCreates a new synchronous, bounded channel.AlPerforms a getdents syscall.Dd<code>std</code> Declare a new thread local storage key of type [\xe2\x80\xa60FiReturns the ASCII representation as a <code>&amp;&#39;static str</code>, or <code>&quot;&quot;</code> \xe2\x80\xa6DcConverts this address to an <code>IpAddr::V4</code> if it is an \xe2\x80\xa60DfConvert the error to <code>LINUX_EXIT</code> with guaranteed valid \xe2\x80\xa6CeCopies the slice into an owned <code>OsString</code>.CmDecompose a (possibly wide) pointer into its data pointer \xe2\x80\xa6EaReturns a (3) tuple if the 3 fields from <code>h</code> to <code>s</code> are \xe2\x80\xa6CaReturns a reference to both bounds as a tuple \xe2\x80\xa6EaReturns a (3) tuple if the 3 fields from <code>y</code> to <code>d</code> are \xe2\x80\xa6EaReturns a (6) tuple if the 6 fields from <code>y</code> to <code>s</code> are \xe2\x80\xa6CjAn iterator method that applies a fallible function to \xe2\x80\xa600CjAttempts to get a single byte from stdin without blocking.CnTries to append to the end the fitting characters from the \xe2\x80\xa6ClTries to append to the end the characters from the given \xe2\x80\xa6000CoTries to convert this <code>char8</code> to <code>char7</code>.D`Tries to convert this <code>char16</code> to <code>char7</code>.D`Tries to convert this <code>char16</code> to <code>char8</code>.ClComputes the absolute value of self without any wrapping \xe2\x80\xa600000EoAsserts the <code>value</code> is <code>Err</code> and returns <code>self</code>, otherwise \xe2\x80\xa6BaReturns the current variant name.GjConverts <code>Vec&lt;T&gt;</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements <code>From&lt;T&gt;</code>.0DfReturns <code>index</code> back if it\xe2\x80\x99s within the range already \xe2\x80\xa6ChWaits on this condition variable for a notification, \xe2\x80\xa6BjWindow title. Defaults to an empty string.0CnPreferred window width (ignored on WASM/Android). Defaults \xe2\x80\xa60ChCreates a new formatter based on this one with given \xe2\x80\xa6BgSpawns a Web Worker and returns its ID.CnWrapping absolute value, see <code>isize::wrapping_abs</code>.ClWrapping absolute value, see <code>i32::wrapping_abs</code>.CmWrapping absolute value, see <code>i128::wrapping_abs</code>.ClWrapping absolute value, see <code>i16::wrapping_abs</code>.CkWrapping absolute value, see <code>i8::wrapping_abs</code>.ClWrapping absolute value, see <code>i64::wrapping_abs</code>.CkWraping integer addition. Computes <code>self + rhs</code>.00000000000DfWrapping (modular) negation. Computes <code>-self</code>, wrapping \xe2\x80\xa600000CnWraping integer subtraction. Computes <code>self - rhs</code>.00000000000A`Both lanes zero.oAll lanes zero.AkA zeroed <code>m256d</code>AkA zeroed <code>m256i</code>CnReturns the main zodiac symbol, associated to the start of \xe2\x80\xa6Bi\xf0\x9f\xa7\xaa Access to accelerometer sensor data.0BgAn entity already exists, often a file.00Ca\xf0\x9f\x94\x84 <code>core</code> A by-value array iterator.0BoCode to set the background color to bright red.CbCode to set the foreground color to bright yellow.D`<code>alloc</code> An entry of an ordered map based on a B-Tree.0DfCode to set the foreground color to bright <code>fg</code> and the \xe2\x80\xa6DkReturns a slice with the code to move the cursor down by <code>n</code> \xe2\x80\xa6DkReturns a slice with the code to move the cursor left by <code>n</code> \xe2\x80\xa6CkReturns a slice with the code to move the cursor to the \xe2\x80\xa6CnCode to move the cursor right by 1-digit <code>n</code> lines.CnCode to move the cursor right by 2-digit <code>n</code> lines.CnCode to move the cursor right by 3-digit <code>n</code> lines.CnCode to move the cursor right by 4-digit <code>n</code> lines.C`\xf0\x9f\xa7\xaa \xe2\x9a\xa0\xef\xb8\x8f Read access to the system clipboard.0Cg\xf0\x9f\xa5\xa1 Encodes and decodes a length prefixed value (TLV).0CmSpecifies the file extension used for shared libraries on \xe2\x80\xa6B`Duplicate FD with CLOSE_ON_EXEC.D`\xf0\x9f\x9a\xa9+ An error composite of <code>NotEnoughElements</code> + \xe2\x80\xa60Dc64-bit <em>raw</em> data, restricted to <code>Copy</code> variants.0E`Common trait for enumerating <code>Copy</code>-constrained <em>data values</em>.0Cj\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated buffer for storing DSTs \xe2\x80\xa60Cj\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated FIFO queue of DSTs with \xe2\x80\xa60Cj\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated LIFO stack of DSTs with \xe2\x80\xa60Ci\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated DST value with pointer \xe2\x80\xa60BeReturns the total number of variants.CmSpecifies the file extension, if any, used for executable \xe2\x80\xa6CmExponent bias for representing both positive and negative \xe2\x80\xa600000BnNumber of bits used to represent the exponent.00000BbArgument encoding/decoding failed.0Ci\xf0\x9f\x8c\x90 Extension trait providing additional methods for \xe2\x80\xa60Al$ 1/\\sqrt[\\small 3]{3} = \xe2\x80\xa600000Cd$ 1/\\sqrt{2} = \\sqrt{1/2} $ (A010503, wikipedia) \xe2\x80\xa600000Dd$ 1/\\sqrt{3} = \\sqrt{1/3} $ (A020760, <code>\xe2\x89\x88 0.57735026\xe2\x80\xa6</code>00000Cm<code>core</code> A classification of floating point numbers.0Dc<code>core</code> A future which never resolves, representing a \xe2\x80\xa60Ca\xf0\x9d\x90\x93 An EGC backed by a <code>StringNonul</code>.0BaA builder for default Fx hashers.0EcIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.CdInvalid object handle (already released or never \xe2\x80\xa60BgThe worker script provided was invalid.0Ch\xf0\x9f\x94\x84 \xe2\x9a\xa0\xef\xb8\x8f Iterator over references of command line \xe2\x80\xa60Dh\xf0\x9f\x94\x84 <code>core</code> An iterator that yields the current count and \xe2\x80\xa60Ef\xf0\x9f\x94\x84 <code>core</code> An iterator that uses <code>f</code> to both filter and map \xe2\x80\xa60Eh\xf0\x9f\x94\x84 <code>core</code> An iterator that rejects elements while <code>predicate</code>\xe2\x80\xa60Dg\xf0\x9f\x94\x84 <code>core</code> An iterator that only accepts elements while \xe2\x80\xa60Eg\xf0\x9f\x94\x84 <code>core</code> An iterator that always continues to yield <code>None</code> \xe2\x80\xa60mText Metrics.0Cb<code>Linux</code> file creation and status flags.CeTrue if the system\xe2\x80\x99s architecture is little-endian.DeRepresents the <code>timespec</code> structure from libc. Time in \xe2\x80\xa60CkAccommodates moderate deviation; balances precision and \xe2\x80\xa600000BgThe rounded up byte size for this type.00Ed\xf0\x9f\x9a\xa9 <code>std</code> An error returned from [<code>MpscSender::send</code>] or [\xe2\x80\xa60BeWhether the number includes the sign.0Ck\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f A signed integer that is known not to equal \xe2\x80\xa600000Cn\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f An unsigned integer that is known not to equal \xe2\x80\xa6000001100CfA filesystem object is, unexpectedly, not a directory.00BkPermission to display system notifications.0Eh\xf0\x9f\x94\x84 <code>core</code> An iterator over a mutable reference to the <code>Some</code> \xe2\x80\xa60Fb<code>std</code> Passed to <code>std::panic::set_hook</code> in <code>std</code>, where panics \xe2\x80\xa60Dk<code>core</code> A struct containing information about the location of \xe2\x80\xa60Df\xf0\x9d\x90\x93\xf0\x9d\x9f\x99\xf0\x9f\x9a\xa9 <code>core</code> An error which can be returned when \xe2\x80\xa60Bn<code>std</code> A single component of a path.0Dl<code>core</code> A marker type which does not implement <code>Unpin</code>.0BnOffers methods for casting between primitives.0ClOffers methods to construct a primitive from an array or \xe2\x80\xa60Cb<code>std</code> The output of a finished process.0Ch<code>std</code> A handle to a child process\xe2\x80\x99s stderr.0Dd<code>std</code> A handle to a child process\xe2\x80\x99s standard output \xe2\x80\xa60CjFilesystem quota or some other kind of quota was exceeded.00fU+00220Dn\xf0\x9f\x93\x90 A <code>Stride</code>d <code>Region</code> defining structured traversal.0Ef\xf0\x9f\x94\x84 <code>core</code> An iterator over a mutable reference to the <code>Ok</code> \xe2\x80\xa60CkRGB+A color with 32-bit float components (linear space, \xe2\x80\xa60CkRGB+A color with 64-bit float components (linear space, \xe2\x80\xa60DfA guard that grants exclusive access to a <code>SpinLock</code> value.0CiAccess to storage that requires explicit user permission.0Dh\xf0\x9f\x95\x98 <code>std</code> A measurement of a monotonically nondecreasing \xe2\x80\xa60AiGet line status register.Dg<code>std</code> Thread factory, which can be used to configure the \xe2\x80\xa60Ck\xf0\x9f\x95\x98 A time split from years to nanoseconds, normalized \xe2\x80\xa60Di<code>std</code> Objects which can be converted or resolved to one or \xe2\x80\xa60Dh\xe2\x9a\x96\xef\xb8\x8f <code>std</code> A type alias for the result of a nonblocking \xe2\x80\xa60CnRepresents an association between a resource and its inner \xe2\x80\xa60AoCode to unset underline effect.CnAn error returned when an operation could not be completed \xe2\x80\xa600AfA web API Mouse Event.0AcWeb API permissions0CgLanewise absolute value with lanes as <code>i16</code>.BiAbsolute value of <code>i16</code> lanes.CgLanewise absolute value with lanes as <code>i32</code>.BiAbsolute value of <code>i32</code> lanes.BlAdd two <code>u32</code> with a carry value.BlAdd two <code>u64</code> with a carry value.CoAppend <code>self.extension</code> with <code>extension</code>.CkLanewise <code>a + b</code> with lanes as <code>i16</code>.0CkLanewise <code>a + b</code> with lanes as <code>i32</code>.0CkLanewise <code>a + b</code> with lanes as <code>i64</code>.0Co<code>core</code> Returns the name of a type as a string slice.0CaConstructs a path inside your application\xe2\x80\x99s \xe2\x80\xa600CiDefines which rendering API to use on Apple platforms \xe2\x80\xa60F`\xf0\x9f\x97\x83\xef\xb8\x8f <code>core</code> Creates an array <code>[T; N]</code>, where each <code>T</code> is \xe2\x80\xa60CkReturns a mutable reference to the element at the given \xe2\x80\xa60ChReturns an immutable reference to the element at the \xe2\x80\xa60DeSets the element at the specified <code>index</code> to the given \xe2\x80\xa60CjReturns the values as an array, if all are of the same \xe2\x80\xa6CjReturns a slice containing the entire array in compile \xe2\x80\xa6CiConverts to seconds as <code>f32</code> for calculations.CgReturns the number of milliseconds, with a possible \xe2\x80\xa6ChReturns the number of milliseconds contained by this \xe2\x80\xa6BaReturns the time in milliseconds.21DfYields a mutable reference to the underlying <code>OsStr</code> slice.CiReturns a pair of slices which contain, in order, the \xe2\x80\xa6BoReturns the values as a tuple, in compile-time.EbReturns a (6) tuple if the 6 fields from <code>h</code> to <code>ns</code> are \xe2\x80\xa6EbReturns a (9) tuple if the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6ClReturns a unique references to the value. In contrast to \xe2\x80\xa6ClReturns a shared references to the value. In contrast to \xe2\x80\xa6C`Asserts the equality of a series of expressions.0ClReturns the last access time of the file, in nanoseconds \xe2\x80\xa6DjBinary searches this <code>VecDeque</code> for a given element. If the \xe2\x80\xa6DmGets the bits in <code>self</code> from the <code>[start..=end]</code> range.0EbSets the bits in <code>self</code> to 1 from the <code>[start..=end]</code> range.0BkPerforms the <code>&amp;=</code> operation.DjModifies this set to contain the intersection of <code>self</code> and \xe2\x80\xa61CjBitwise <code>(!a) &amp;amp; b</code> for <code>u32</code>CjBitwise <code>(!a) &amp;amp; b</code> for <code>u64</code>BgPerforms the <code>^=</code> operation.ClModifies this set to contain the symmetric difference of \xe2\x80\xa61BiSwap the bytes of the given 32-bit value.BiSwap the bytes of the given 64-bit value.BoCaptures the first token from a list of inputs.0DdReturns the bit pattern of <code>self</code> reinterpreted as an \xe2\x80\xa600000BkAdds a <code>TimeDelta</code> to an instantCg(clearTimeout) (clearInterval) Cancels a timeout or \xe2\x80\xa6AoGet current OS clipboard value.AjSave value to OS clipboardDgReturns the number of bytes required to encode <code>code</code> as \xe2\x80\xa6CkCollects all items from the iterator into an array of a \xe2\x80\xa600CjCollects all items from the iterator into a tuple of a \xe2\x80\xa600De<code>core</code> Causes compilation to fail with the given error \xe2\x80\xa60EhConverts a <code>JsInstant</code> into a <code>TimeDelta</code> relative to the time \xe2\x80\xa6FeReturns <code>true</code> if the array contains <code>element</code>, from the <code>start</code> \xe2\x80\xa6DiWhether <code>self</code> contains all the same set bits that are set \xe2\x80\xa600DeCopies all elements from <code>src</code> into a fixed-size array \xe2\x80\xa6CiReturns the value of the ftCreationTime field of this \xe2\x80\xa6CgReturns the last status change time of the file, in \xe2\x80\xa6BmDelete GPU buffer, leaving handle unmodified.0BnDelete GPU program, leaving handle unmodified.0BkReturns the number of deleted (TOMB) slots.DhReturns the elapsed time since this instant as a <code>TimeDelta</code>.B`Disables receiving mouse events.DbSets the <code>dither</code> field to <code>Dither::Burkes</code>.DbSets the <code>dither</code> field to <code>Dither::JaJuNi</code>.DbSets the <code>dither</code> field to <code>Dither::Stucki</code>.BnDivides this time delta by another time delta.0CcReturns the quotient, rounding ties away from zero.00000000000CkReturns the quotient, rounding ties to the nearest even \xe2\x80\xa600000000000CiExecutes the destructor (if any) of the pointed-to value.0DkConsume the last <code>n</code> elements from the iterator eagerly, and \xe2\x80\xa600CjReturn an iterator adaptor that produces elements that \xe2\x80\xa600BeReturns the total number of variants.Cj(setInterval) Executes JavaScript code repeatedly at a \xe2\x80\xa60CiCalculates $ e^x - 1 $ using the Taylor series expansion.0DhCreates a layout describing the record for <code>self</code> followed byAjReturns the prime factors.00000000000DkOffsets the pointer\xe2\x80\x99s address by adding <code>val</code> (in units of \xe2\x80\xa6DgOffsets the pointer\xe2\x80\x99s address by subtracting <code>val</code> (in \xe2\x80\xa6CkReturns the name of the source file as a nul-terminated \xe2\x80\xa6CjReturn an iterator adaptor that filters and transforms \xe2\x80\xa600CnFind the value of the first element satisfying a predicate \xe2\x80\xa600CdFind the position and value of the first element \xe2\x80\xa600DgRound the low lane of <code>b</code> toward negative infinity, high \xe2\x80\xa6CmProduces layout describing a record that could be used to \xe2\x80\xa6CeForcibly captures a full backtrace, regardless of \xe2\x80\xa6DgSets the <code>format</code> field to <code>PixelFormat::BGR555</code>.DgSets the <code>format</code> field to <code>PixelFormat::BGR565</code>.DgSets the <code>format</code> field to <code>PixelFormat::BGR888</code>.DgSets the <code>format</code> field to <code>PixelFormat::RGB555</code>.DgSets the <code>format</code> field to <code>PixelFormat::RGB565</code>.DgSets the <code>format</code> field to <code>PixelFormat::RGB888</code>.EgConstructs a primitive <code>T</code> from an array of <code>U</code> in big-endian \xe2\x80\xa60DlConstructs a primitive <code>T</code> from an array of <code>U</code> in \xe2\x80\xa6000DdConverts a <code>Duration</code> into a full <code>TimeSplit</code>.DfConverts a <code>Duration</code> into a <code>TimeSplitYearDay</code>.DfConverts a <code>Duration</code> into a <code>TimeSplitYearSec</code>.DfConverts a <code>Duration</code> into a <code>TimeSplitHourSec</code>.DjConverts a <code>Duration</code> into a time split representation from \xe2\x80\xa6DdConverts a <code>Duration</code>\xe2\x80\x99s sub-second component into a \xe2\x80\xa6CmConverts a <code>Duration</code> to a <code>TimeDelta</code>.351462CeConstructs a box from a <code>NonNull</code> pointer.Dkmethod equivalent to <code>From&lt;Overflow&gt; for NicheValueError</code>.Ddmethod equivalent to <code>From&lt;Overflow&gt; for IntError</code>.EjCreates a <code>Vec&lt;T, A&gt;</code> directly from a <code>NonNull</code> pointer, a \xe2\x80\xa6BiCreate from <code>Rgba&lt;f32&gt;</code>.0000000BiCreate from <code>Rgba&lt;f64&gt;</code>.0000000CkCreates a timestamp from milliseconds, ensuring a valid \xe2\x80\xa6CgReturns a time delta corresponding to the number of \xe2\x80\xa6DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6DfReturns a new <code>JsInstant</code> from a timestamp in milliseconds.21DdCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.EfConstructs a primitive <code>T</code> from a slice of <code>U</code> in big-endian \xe2\x80\xa60DkConstructs a primitive <code>T</code> from a slice of <code>U</code> in \xe2\x80\xa6000AnReturns a temporary directory.CiConverts a mutable slice of bytes to a mutable string \xe2\x80\xa6C`Constructs itself from a tuple, in compile-time.BkReturns the number of IDs generated so far.ClReturns the key-value pair corresponding to the supplied \xe2\x80\xa60DkInserts the given <code>value</code> into the set if it is not present, \xe2\x80\xa60EgInserts <code>value</code> into the option if it is <code>None</code>, then returns \xe2\x80\xa6CnReturns a clone of the element at the given 2D coordinates \xe2\x80\xa60CaChecks if the <em>Caps Lock</em> modifier is set.CiChecks if there is any data left to be <code>read</code>.00DlReturns <code>true</code> if the angle has the given <code>direction</code>.0000000000000DiMaps the computed FNV hash to the given <code>range</code> using lazy \xe2\x80\xa6000Da<code>core</code> Includes a file as a reference to a byte array.0CnReturns the quotient, rounding the result towards negative \xe2\x80\xa600AfReturns the factorial.00CeReturns <code>true</code> if it\xe2\x80\x99s a perfect square.00CbFinds the 0-indexed <code>nth</code> prime number.00AmCalls `NumInt::int_ref_scale.00ClSimilar to int_scale, but operates on references instead \xe2\x80\xa600CaReturns the ceiled integer <code>nth</code> root.00BgReturns the ceiled integer square root.00BjWhether it interpolates the scaled pixels.EbIf <code>linear == true</code> uses <code>FilterMode::Linear</code>, otherwise \xe2\x80\xa61DmSplits <code>self</code> into an array of <code>T</code> in big-endian order.0E`Splits <code>self</code> into an array of <code>T</code> in little-endian order.0E`Splits <code>self</code> into an array of <code>T</code> in native-endian order.0DmConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or \xe2\x80\xa6CiTurn this into an iterator over the connections being \xe2\x80\xa6E`Consumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer.EjConverts a <code>Box&lt;Path&gt;</code> into a <code>PathBuf</code> without copying or \xe2\x80\xa6FjTurns <code>Cow&lt;[u8]&gt;</code> into <code>PyBytes</code>, all other <code>T</code>s will be turned \xe2\x80\xa6FhTurns <code>Vec&lt;u8&gt;</code> into <code>PyBytes</code>, all other <code>T</code>s will be turned \xe2\x80\xa6CmReturns whether the pointer is aligned to <code>align</code>.DeRuntime version of <code>MemAligned::is_compatible</code> for raw \xe2\x80\xa6EhChecks if all elements are <code>None</code>, returning early if a <code>Some</code> \xe2\x80\xa6DiChecks if the <code>Candidate</code>\xe2\x80\x99s alignment is compatible with \xe2\x80\xa60ChReturns <code>true</code> if the destaque is contiguous.EeReturns <code>true</code> if the address is link-local (<code>169.254.0.0/16</code>).BmChecks if the lower bound is open (excluded).EcIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.DfAlways returns <code>true</code> since integer representations are \xe2\x80\xa6CnReturns <code>true</code> if the angle is between -1 and 1 \xe2\x80\xa6110111111111AhIs this a symbolic link?DfReturns <code>true</code> if the 3 dimensions of the extent are equal.DhReturns <code>true</code> if all dimensions of the extent are equal. \xe2\x80\xa60000BmChecks if the upper bound is open (excluded).CnIterator over generated IDs with <code>AcqRel</code> ordering.CnSort the k smallest elements into a new iterator using the \xe2\x80\xa600CiReturns an error representing the last OS error which \xe2\x80\xa6CeReturns the number of leading zeros in the binary \xe2\x80\xa600000000000000000000000000000000000DiReturns a mutable reference to the <strong>perceptual lightness</strong>.000DgReturns a mutable reference to the <strong>gamma-encoded luma</strong>.00011110000CkSpecifies which Linux window system (X11 or Wayland) is \xe2\x80\xa60CcComputes luma from R\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 using Rec. 2020 \xe2\x80\xa60DeReturns a mutable reference to the <strong>linear luminance</strong>.0000000CcConstructs a new pin by mapping the interior value.CoLanewise <code>max(a, b)</code> with lanes as <code>i16</code>.0CoLanewise <code>max(a, b)</code> with lanes as <code>i32</code>.0CoLanewise <code>max(a, b)</code> with lanes as <code>u16</code>.0CoLanewise <code>max(a, b)</code> with lanes as <code>u32</code>.0CkCreate an iterator that merges items from both this and \xe2\x80\xa600BoReturns the rounded up byte size for this type.00CoLanewise <code>min(a, b)</code> with lanes as <code>i16</code>.0CoLanewise <code>min(a, b)</code> with lanes as <code>i32</code>.0CoLanewise <code>min(a, b)</code> with lanes as <code>u16</code>.0CoLanewise <code>min(a, b)</code> with lanes as <code>u32</code>.0CmReturn the minimum and maximum element of an iterator, as \xe2\x80\xa600EhComputes the non-negative modulo of <code>self</code> over <code>modulus</code>, and \xe2\x80\xa60EfComputes the non-negative modulo of <code>self</code> over |<code>modulus</code>|, \xe2\x80\xa6011001010CfReturns the last modification time of the file, in \xe2\x80\xa6CaFlips the bits that are set in <code>mask</code>.00CaSets the bits that are set in <code>other</code>.00ChSets the bits from the <code>[start..=end]</code> range.00BeUnsets the bit at <code>index</code>.00DmConstructs a new <code>Rc&lt;T, A&gt;</code> in the given allocator while \xe2\x80\xa6BaReturns the associated empty set.BmReturns a new <code>TimeSplitHourNano</code>.0DfReturns the appropriate variant from the given <code>value</code>, \xe2\x80\xa6ClCreates a non-zero without checking whether the value is \xe2\x80\xa6BcCreates a new <code>NonNull</code>.EhReturns a <code>NonValueU8</code> if the given <code>value</code> if it is not equal \xe2\x80\xa6EcReturns a <code>NonValueU16</code> if the given <code>value</code> if it is not \xe2\x80\xa6EcReturns a <code>NonValueU32</code> if the given <code>value</code> if it is not \xe2\x80\xa6EcReturns a <code>NonValueU64</code> if the given <code>value</code> if it is not \xe2\x80\xa6EdReturns a <code>NonValueU128</code> if the given <code>value</code> if it is not \xe2\x80\xa6EhReturns a <code>NonValueI8</code> if the given <code>value</code> if it is not equal \xe2\x80\xa6EcReturns a <code>NonValueI16</code> if the given <code>value</code> if it is not \xe2\x80\xa6EcReturns a <code>NonValueI32</code> if the given <code>value</code> if it is not \xe2\x80\xa6EcReturns a <code>NonValueI64</code> if the given <code>value</code> if it is not \xe2\x80\xa6EdReturns a <code>NonValueI128</code> if the given <code>value</code> if it is not \xe2\x80\xa6EeReturns a <code>NonValueUsize</code> if the given <code>value</code> if it is not \xe2\x80\xa6EeReturns a <code>NonValueIsize</code> if the given <code>value</code> if it is not \xe2\x80\xa6DgReturns a seeded <code>XorShift128p</code> generator from the given \xe2\x80\xa6CiCreates a new Xoroshiro128++ PRNG with the given seed \xe2\x80\xa6DfReturns a seeded <code>XorShift128</code> generator from the given \xe2\x80\xa6DkReturns a seeded <code>XorShift16</code> generator from the given 8-bit \xe2\x80\xa6DkReturns a seeded <code>XorShift32</code> generator from the given 8-bit \xe2\x80\xa6DkReturns a seeded <code>XorShift64</code> generator from the given 8-bit \xe2\x80\xa6DjReturns a seeded <code>XorShift8</code> generator from the given 8-bit \xe2\x80\xa6BnCreates an iterator over the elements in a \xe2\x80\xa6E`Constructs a new <code>Pin&lt;Ptr&gt;</code> around a reference to some data \xe2\x80\xa6DfReturns the appropriate variant if the given <code>value</code> is \xe2\x80\xa6ChGenerates some unique <code>ExampleIdSeqUsize</code> ID.CkConstructs a new box with uninitialized contents in the \xe2\x80\xa6DgConstructs a new <code>Rc</code> with uninitialized contents in the \xe2\x80\xa6DkConstructs a new <code>Box</code> with uninitialized contents, with the \xe2\x80\xa6DjConstructs a new <code>Rc</code> with uninitialized contents, with the \xe2\x80\xa6CiAttempts to open a file in read-only mode with buffering.ClWhether there\xe2\x80\x99s at least one set bit in common between \xe2\x80\xa600EaConverts the current stack index size <code>IDX</code> to a <code>NEW_IDX</code>.CmCollect all iterator elements into one of two partitions. \xe2\x80\xa600CcReturns an exclusive reference to the back element.D`Returns a shared reference to the <code>nth</code> back element.EcShuffle the <code>f64</code> lanes in <code>a</code> using an immediate control \xe2\x80\xa6EfShuffle the <code>f64</code> lanes from <code>a</code> together using an immediate \xe2\x80\xa6CgReturns the physical size of the window in hardware \xe2\x80\xa6BjRemoves the last character and returns it.ChAdds an element to the back of the list, returning a \xe2\x80\xa6ClAppends an element to the back of the deque, returning a \xe2\x80\xa6DjPushes the contents of a <code>string</code> slice as an item onto the \xe2\x80\xa6DnReturns a subslice from <code>start</code> (inclusive) to <code>end</code> \xe2\x80\xa6DeLike <code>read</code>, except that it reads into a slice of buffers.000DhPerforms a volatile read of the value from <code>self</code> without \xe2\x80\xa6CjPerforms a volatile read of the value from src without \xe2\x80\xa6ClAttempts to wait for a value on this receiver, returning \xe2\x80\xa6BdReturns the number of remaining IDs.DjCreates a layout describing the record for <code>n</code> instances of \xe2\x80\xa6CnRemoves the specified range in the string, and replaces it \xe2\x80\xa6DfReserves the minimum capacity for at least <code>additional</code> \xe2\x80\xa6DkReserves the minimum capacity for at least <code>additional</code> more \xe2\x80\xa60DdInvokes <code>reserve_exact</code> on the underlying instance of \xe2\x80\xa612D`Reverses the order of the bits in <code>self</code> from the \xe2\x80\xa600000000000DdRounds <code>$b</code> low as specified, keeps <code>$a</code> high.EcAsserts the state is <code>None</code> and returns <code>self</code>, otherwise \xe2\x80\xa6EcAsserts the state is <code>Some</code> and returns <code>self</code>, otherwise \xe2\x80\xa6Cl(screenLeft) (screenTop) The window\xe2\x80\x99s offset in pixels \xe2\x80\xa60BgSeeks relative to the current position.CfSeeks relative to the current position. If the new \xe2\x80\xa6111DgSets the value of the <code>SO_BROADCAST</code> option for this socket.CcSets the angle to the given <code>direction</code>.DeReturns a version of the angle with the given <code>direction</code>.DhReturns a version of the angle with the given <code>direction</code> \xe2\x80\xa610110000121FbUpdates <code>self.extension</code> to <code>Some(extension)</code> or to <code>None</code> if \xe2\x80\xa6CnUpdates <code>self.file_name</code> to <code>file_name</code>.DeSets the args into an <code>m128i</code>, first arg is the high lane.CjSet <code>i16</code> args into an <code>m256i</code> lane.1CjSet <code>i32</code> args into an <code>m256i</code> lane.2CjSet <code>i64</code> args into an <code>m256i</code> lane.CeSet <code>m128</code> args into an <code>m256</code>.BbSets the global maximum log level.CgSets the element at the given 2D coordinates in the \xe2\x80\xa60ClShow/hide onscreen keyboard. Only works on Android right \xe2\x80\xa6CkShrinks the capacity of the map as much as possible. It \xe2\x80\xa6CaDiscards as much additional capacity as possible.CkShrinks the capacity of the set as much as possible. It \xe2\x80\xa6DfShrinks the capacity of the <code>OsString</code> to match its length.CfShrinks the capacity of the deque as much as possible.DdInvokes <code>shrink_to_fit</code> on the underlying instance of \xe2\x80\xa6CgShrinks the capacity of the vector as much as possible.DeShrinks the capacity of this <code>String</code> to match its length.EoShuffle the <code>f64</code> lanes from <code>a</code> and <code>b</code> together using an \xe2\x80\xa6CeSort all iterator elements into a new iterator in \xe2\x80\xa600AoLast access time (nanoseconds).0BfLast status change time (nanoseconds).0BeLast modification time (nanoseconds).0CaStores the low lane value to the reference given.CkLanewise <code>a - b</code> with lanes as <code>i16</code>.0CkLanewise <code>a - b</code> with lanes as <code>i32</code>.0CkLanewise <code>a - b</code> with lanes as <code>i64</code>.0CiReturns the fractional part of this duration in whole \xe2\x80\xa6DgReturns the fractional part of this <code>Duration</code>, in whole \xe2\x80\xa610BgOptional swap interval (vertical sync).0AmPerforms a getrandom syscall.AmPerforms a nanosleep syscall.D`Returns the last <code>n</code> elements of the exclusive slice.B`Returns the terminal dimensions.ChConverts a <code>char7</code> to <code>AsciiChar</code>.ClConverts a character to its closest ASCII equivalent, if \xe2\x80\xa6CmGiven a base for encoding and a mutable byte slice, write \xe2\x80\xa60EbReturns a (6) tuple if the 6 fields from <code>h</code> to <code>ns</code> are \xe2\x80\xa6EbReturns a (9) tuple if the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6DgConverts this <code>char7</code> to an UTF-8 encoded sequence of bytes.DgConverts this <code>char8</code> to an UTF-8 encoded sequence of bytes.DhConverts this <code>char16</code> to an UTF-8 encoded sequence of bytes.DfConverts the given <code>char</code> to a UTF-8 encoded byte sequence.CkTries to convert a <code>char</code> to <code>char7</code>.CkTries to convert a <code>char</code> to <code>char8</code>.ClTries to convert a <code>char</code> to <code>char16</code>.ClReturn an iterator over all contiguous windows producing \xe2\x80\xa600CoDefines zero-cost, zero-sized, type-safe <em>resource</em> IDs.0CjAdds an unsigned integer to a non-zero value, assuming \xe2\x80\xa600000CgMultiplies two non-zero integers together, assuming \xe2\x80\xa600000000000Bo<code>core</code> Indicates unimplemented code.0EcAsserts the value is <code>None</code> and returns <code>self</code>, otherwise \xe2\x80\xa6EcAsserts the value is <code>Some</code> and returns <code>self</code>, otherwise \xe2\x80\xa6BlReturns the current variant index (0-based).ChCallback dispatcher for WebAssembly events without args.ClSpecifies which WebGL version to use on the Web (1.0. or \xe2\x80\xa60CfPreferred window height (ignored on WASM/Android). \xe2\x80\xa60DbCreates an empty <code>HashMap</code> with the specified capacity.DhCreates an empty <code>BinaryHeap</code> with at least the specified \xe2\x80\xa6DbCreates an empty <code>HashSet</code> with the specified capacity.DeCreates a new <code>OsString</code> with at least the given capacity.DkCreates a new <code>BufReader&lt;R&gt;</code> with the specified buffer \xe2\x80\xa6DmCreates a new <code>BufWriter&lt;W&gt;</code> with at least the specified \xe2\x80\xa6DeCreates a new <code>LineWriter</code> with at least the specified \xe2\x80\xa6DhCreates an empty deque with space for at least <code>capacity</code> \xe2\x80\xa6DkCreates a new <code>PathBuf</code> with a given capacity used to create \xe2\x80\xa6EaConstructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified \xe2\x80\xa6DgCreates a new empty <code>String</code> with at least the specified \xe2\x80\xa6ClChange the encoding scheme while keeping everything else \xe2\x80\xa6CnReturn an iterator adaptor that combines each element with \xe2\x80\xa600BiReturns the write timeout of this socket.0Di\xf0\x9f\x9a\xa9 <code>core</code> An error which can be returned when parsing an \xe2\x80\xa60Bk\xf0\x9f\x93\x90 The direction of rotation of an angle.0C`\xe2\x9a\x9b\xef\xb8\x8f <code>core</code> Atomic memory ordering.0C`Code to set the background color to bright blue.C`Code to set the background color to bright cyan.CcCode to set the foreground color to bright magenta.Ce\xf0\x9f\xa7\xaa Background sync capability for web applications.0B`Decreases the screen brightness.0BdCode to restore the cursor position.DkReturns a slice with the code to move the cursor right by <code>n</code>\xe2\x80\xa6B`Code to make the cursor visible.fU+000D0Bj\xf0\x9f\xa7\xaa Write access to the system clipboard.0Cg<code>core</code> The result of a coroutine resumption.0CgCross-device or cross-filesystem (hard) link or rename.00Cb\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>collection</em> data type.0fU+00100Dd64-bit data <em>type</em>, restricted to <code>Copy</code> variants.0Ce64-bit data <em>type</em>, with extra <code>T</code>.0CeCode to erase from the cursor to the end of the line.CjThe time at which the event actually occurs, stored as \xe2\x80\xa60CfRepresents a set of <code>ExampleEnum</code> variants.Dh$ 1/\\sqrt{\xcf\x80} = 1/\\sqrt{\xcf\x84/2} $ (A087197) <code>\xe2\x89\x88 0.56418958\xe2\x80\xa6</code>00000Ch$ 2/\\sqrt{\xcf\x80} $ (A190732) <code>\xe2\x89\x88 1.12837916\xe2\x80\xa6</code>00000CkLoop in the filesystem or IO subsystem; often, too many \xe2\x80\xa600Bl\xf0\x9d\x90\x93 An EGC backed by a <code>String</code>.0BbA builder for default Fnv hashers.0CiUsed when an invalid exit code would have been generated.BeReturns the number of invalid values.00000000000AaInvalid type tag.0Eb<strong>ISO Level 3 Shift</strong> key (commonly known as <strong>AltGr</strong>).0Dj<strong>ISO Level 5 Shift</strong> key (used in some advanced keyboard \xe2\x80\xa60Eg\xf0\x9f\x94\x84 <code>core</code> An iterator that endlessly repeats <code>A</code> by calling \xe2\x80\xa60Di\xf0\x9f\x94\x84 <code>std</code> An iterator that splits an environment variable \xe2\x80\xa60Dd\xf0\x9f\x94\x84 <code>core</code> An iterator where each successive item is \xe2\x80\xa60Df\xf0\x9f\x94\x84 <code>core</code> Extend a collection with the contents of an \xe2\x80\xa60Ci\xf0\x9f\x9a\xa9 <code>std</code> Returned from [Env::join_paths][\xe2\x80\xa60fU+000B0BcExamine and change a signal action.0Dg<code>log</code> An enum representing the available verbosity level \xe2\x80\xa60Eg\xf0\x9f\x9a\xa9 <code>log</code> Returned by [<code>set_logger</code>][crate::Log::set_logger] \xe2\x80\xa60Ee\xf0\x9f\x9a\xa9 <code>alloc</code> The [<code>MemLayout</code>] parameters violated constraints.0AnMethod not found on JS object.0B`Mutes or unmutes the microphone.0CjDraws a single fullscreen quad textured by a pixel buffer.0DaA wrapper namespace over <code>miniquad::window</code> functions.0Do<code>std</code> The sending half of a <em>sync</em> <code>Mpsc</code> channel.0C`$ -1/\xcf\x86 = 1-\xcf\x86 $ <code>\xe2\x89\x88 -0.61803398\xe2\x80\xa6</code>00000An\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The link is not set.0Ck\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f A signed integer that is known not to equal \xe2\x80\xa60Cn\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f An unsigned integer that is known not to equal \xe2\x80\xa60Ck\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 There is not enough free space for the operation.Cf\xf0\x9f\x9a\xa9 There is not enough free space for the operation.10Ch\xe2\x88\x85 \xf0\x9f\x9a\xa9 The requested functionality is not implemented.00CiThe requested numerical functionality is not implemented.0110100Eh\xf0\x9f\x94\x84 <code>core</code> An iterator over the value in <code>Some</code> variant of an \xe2\x80\xa60Cj\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The operation could only add a subset of the \xe2\x80\xa6Ck\xf0\x9f\x9a\xa9 The operation could only add a subset of the elements.10Bi\xf0\x9f\xa7\xaa Permission to use a payment handler.0ChOffers methods to split a primitive into an array of \xe2\x80\xa60Df<code>std</code> A builder for configuring and spawning new processes.0BiTypical gamma value for Rec.1886 (\xe2\x89\x882.4)0Dg\xf0\x9f\x93\x8f <code>core</code> A range bounded inclusively below and above (\xe2\x80\xa60Ee\xf0\x9f\x94\x84 <code>core</code> An iterator over the value in <code>Ok</code> variant of a \xe2\x80\xa60fU+005C0CiThe primary separator char of path components for the \xe2\x80\xa600BkAllows preventing the screen from sleeping.0fU+00010CmRepresents an entry in a static map allowing for in-place \xe2\x80\xa60Dd<code>std</code> A thread local storage key which owns its contents.0ClA single unit of the wavelet decomposition at a specific \xe2\x80\xa60ChWhich part of the keyboard the key event originates from0DhAggregates the live state of a <code>WebWindow</code>, including its \xe2\x80\xa60CjErrors that can occur when working with JavaScript Web \xe2\x80\xa60AiThe worker was not found.0Bj\xf0\x9f\x8e\xb2 The <code>Xoroshiro128++</code> PRNG.0AjAdvance a slice of slices.0D`The most efficient print method, exclusive for <code>std</code>.0CiConstructs a path inside your application\xe2\x80\x99s runtime \xe2\x80\xa600CiSet a new viewport rectangle. Should be applied after \xe2\x80\xa60CgReturns <code>true</code> if it all the fields are set.00Ea\xf0\x9f\x97\x83\xef\xb8\x8f <code>core</code> Converts a mutable reference to <code>T</code> into \xe2\x80\xa60Fb\xf0\x9f\x97\x83\xef\xb8\x8f <code>core</code> Converts a reference to <code>T</code> into <code>&amp;[T; 1]</code> \xe2\x80\xa60FaView any <code>T: Sync + Unpin + Sized</code> as <code>&amp;[u8]</code> <em>compile-time</em> \xe2\x80\xa6EcReturns a (3) tuple if the 3 fields from <code>ms</code> to <code>ns</code> are \xe2\x80\xa6DnFlips the bits in <code>self</code> from the <code>[start..=end]</code> range.0DdReturns a bitmask of ones from the <code>[start..=end]</code> range.0BfBitwise <code>(!a) &amp;amp; b</code>.0CaReturns the bits per pixel of the current format.CaBlends the lanes according to the immediate mask.CaCalculates the magnitude of the vector (squared).00000000000BbThe surface area of the 3d extent.00000000000CiReturns the current number of elements in the collection.00CgThe type of the wavelet component (scaling or wavelet).0DiWhether <code>self</code> contains all the same set bits that are set \xe2\x80\xa600FeReturns <code>true</code> if the array contains <code>element</code>, from the <code>start</code> \xe2\x80\xa6FcConverts the <code>ControlFlow</code> into an <code>Option</code> which is <code>Some</code> if \xe2\x80\xa6CiReturns a copy of the state long-jumped ahead by 2^96 \xe2\x80\xa6ChRecursively create a directory and all of its parent \xe2\x80\xa6CoCreates an element (delegates to <code>WebElement::new</code>).ClRetrieves an exclusive reference to the current instance \xe2\x80\xa6DcReturns the data type associated with this <code>Copy</code> value.00BnDelete GPU texture, leaving handle unmodified.0En<code>std</code> Tests at <em>runtime</em> whether an <code>aarch64</code> feature is enabled.0DcSets the <code>dither</code> field to <code>Dither::ADither</code>.DcSets the <code>dither</code> field to <code>Dither::XDither</code>.BmDraws RGBA text with a custom color function.CnReturns the amount of time elapsed from another instant to \xe2\x80\xa6ClReturns the amount of time elapsed from an earlier point \xe2\x80\xa6CmReserves capacity in a collection for the given number of \xe2\x80\xa600AkReturns the proper factors.00000000000DnOffsets the pointer\xe2\x80\x99s address by adding <code>val</code> <em>bytes</em>, \xe2\x80\xa6EcOffsets the pointer\xe2\x80\x99s address by subtracting <code>val</code> <em>bytes</em>, \xe2\x80\xa6C`Returns the first non-unit variant name, if any.DhReturns some exclusive reference to the first <code>None</code> element.CnReturns some reference to the first <code>None</code> element.DhReturns some exclusive reference to the first <code>Some</code> element.CmReturns some reference to the first <code>Some</code> elementDkPerforms the same functionality as <code>std::ptr::from_raw_parts</code>\xe2\x80\xa6CaForms a shared slice from a pointer and a length.E`Creates a <code>Vec&lt;T&gt;</code> directly from a pointer, a length, and a \xe2\x80\xa6DdCreates a new <code>String</code> from a pointer, a length and a \xe2\x80\xa6EbGets either a single <code>char</code> from <em>stdin</em>, or the replacement \xe2\x80\xa6CkCalculates the 1D array index from the given 2D coordinates0DgGets a UTF-8 encoded byte sequence from <em>stdin</em> representing \xe2\x80\xa6DdMaps the computed FNV hash to the given <code>range</code> using \xe2\x80\xa6000DmComputes the modulo of <code>self + other</code> over |<code>modulus</code>|.00CoComputes <code>self / other</code> over |<code>modulus</code>|.00111DmComputes the modulo of <code>self - other</code> over |<code>modulus</code>|.00AnCalls `NumInt::int_ref_digits.00CmSimilar to int_digits, but operates on references instead \xe2\x80\xa600AnCalls `NumInt::int_ref_is_odd.00CmSimilar to int_is_odd, but operates on references instead \xe2\x80\xa600AnCalls `NumInt::int_ref_modulo.00CmSimilar to int_modulo, but operates on references instead \xe2\x80\xa600CbReturns the floored integer <code>nth</code> root.00DjReturns a scaled value between <code>[min..=max]</code> to a new range \xe2\x80\xa600BhReturns the floored integer square root.00BhReturns the rounded integer square root.00EoA copy of <code>self</code> with only the bits both in <code>self</code> and <code>mask</code>.00ChConverts this <code>String</code> into a Box&lt;str&gt;.EhTakes a <code>Vec&lt;[T; N]&gt;</code> and flattens it into a <code>Vec&lt;T&gt;</code>.EeReturn a <code>HashMap</code> of keys mapped to <code>Vec</code>s of values. Keys \xe2\x80\xa600E`Converts a Box&lt;OsStr&gt; into an <code>OsString</code> without copying or \xe2\x80\xa6EbConsumes the <code>PathBuf</code>, yielding its internal <code>OsString</code> \xe2\x80\xa6DcDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: \xe2\x80\xa6CmDecomposes a <code>String</code> into its raw components: \xe2\x80\xa6Di(compatMode) Returns <code>true</code> if the browser is in no-quirks \xe2\x80\xa6BlWhether the <code>FLAG1</code> field is set.0BlWhether the <code>FLAG2</code> field is set.0BlWhether the <code>MASK0</code> field is set.0DgReturns <code>true</code> if the address is an IPv4-mapped address (\xe2\x80\xa6EdReturns <code>true</code> if the angle is of the given <code>kind</code> using a \xe2\x80\xa60CoWhether <code>self</code> is equal to <code>NUM_NEG_ONE</code>.00CkChecks if the elements of this iterator are partitioned \xe2\x80\xa600AiIs this a read-only file?DdReturns <code>true</code> for the special \xe2\x80\x98unspecified\xe2\x80\x99 address.DhReturns <code>true</code> for the special \xe2\x80\x98unspecified\xe2\x80\x99 address (\xe2\x80\xa6EgReturns <code>true</code> for the special \xe2\x80\x98unspecified\xe2\x80\x99 address (<code>::</code>\xe2\x80\xa6DiReturns <code>true</code> if the crate was compiled for a WebAssembly \xe2\x80\xa6CjReturns the last key-value pair in the map. The key in \xe2\x80\xa6EgSet the <code>WM_CLASS</code> window property on X11 and the <code>app_id</code> on \xe2\x80\xa60FgMaps an <code>Option&lt;T&gt;</code> to a <code>U</code> by applying function <code>f</code> to the \xe2\x80\xa6FiMaps a <code>Result&lt;T, E&gt;</code> to a <code>U</code> by applying function <code>f</code> to the \xe2\x80\xa6CmReturn all maximum elements of an iterator, as determined \xe2\x80\xa600DbReturns <code>true</code> if dropping values of this type matters.00CjDefines standalone functions that call associated methods.0CmReturn all minimum elements of an iterator, as determined \xe2\x80\xa600DfMaps a hash to the given <code>range</code> using retried mod mapping.000BhCalculates the modular additive inverse.00000000000BnCalculates the modular multiplicative inverse.00000000000BbGathers the sign bit of each lane.CfCollects the sign bit of each lane into a 4-bit value.CbFlips the bits that are set in <code>other</code>.00CiFlips the bits from the <code>[start..=end]</code> range.00CbUnsets the bits that are set in <code>mask</code>.00BnReturns a new <code>TimeSplitMilliNano</code>.0DaReturns the current timestamp as an <code>f64</code> value in \xe2\x80\xa600DaCreates an interval $(l, \xe2\x88\x9e)$ <em><code>lower..&lt;</code></em>.CnEnsures a value is in the entry by inserting the result of \xe2\x80\xa60ClWhether there\xe2\x80\x99s at least one set bit in common between \xe2\x80\xa600DbConverts a <code>bitmap</code> of 1-bit bits into PBM ASCII P1 \xe2\x80\xa6DiLexicographically compares the elements of this <code>Iterator</code> \xe2\x80\xa600CmReturns the payload associated with the panic, if it is a \xe2\x80\xa6CdReturns an exclusive reference to the front element.DaReturns a shared reference to the <code>nth</code> front element.BdReturns the permissions of the file.DjShuffle 128 bits of floating point data at a time from <code>$a</code> \xe2\x80\xa6EbReturns the size ratio between <code>Ptr::BYTES</code> and <code>BYTE_SIZE</code>.00CgPushes an item, populated from an exact-sized iterator.0CiAdds an element to the front of the list, returning a \xe2\x80\xa6CnPrepends an element to the deque, returning a reference to \xe2\x80\xa6BmRemove an element from the back of the queue.0DkReturns an exclusive subslice starting from the given <code>start</code>\xe2\x80\xa6DeReads the exact number of bytes required to fill <code>cursor</code>.00DkThis function is not supported by <code>io::Repeat</code>, because there\xe2\x80\xa6ClReads all bytes until EOF in this source, appending them \xe2\x80\xa60C`Reads all bytes from a reader into a new String.CbReads the entire contents of a file into a string.2DiReads the value from <code>self</code> without moving it. This leaves \xe2\x80\xa6BkReads the value from src without moving it.ClRemoves a directory at this path, after removing all its \xe2\x80\xa6DjRemove all matches of pattern <code>pat</code> in the <code>String</code>.CkRemoves a key-value pair and optionally rebuilds the table.CmReturns the number of bytes required to store an image of \xe2\x80\xa6ClConverts the current stack to a different capacity while \xe2\x80\xa60DjThe nearest integer to <code>self</code>, rounding ties to the nearest \xe2\x80\xa60CmReturns the nearest integer, rounding ties to the nearest \xe2\x80\xa60CcConvert a byte count to a word count (rounding up).00EnAsserts the <code>state</code> equals <code>expected</code> and returns <code>self</code>, \xe2\x80\xa6FeAsserts the <code>state</code> is <code>Ok</code> and returns <code>self</code>, otherwise panics \xe2\x80\xa6DkUnwraps the contained <code>Some(state)</code> or panics with the given \xe2\x80\xa6DiUnwraps the contained <code>Ok(state)</code> or panics with the given \xe2\x80\xa6CiUnwraps the contained <code>Some(state)</code> or panics.CgUnwraps the contained <code>Ok(state)</code> or panics.D`Saturating absolute value, see <code>i16::saturating_abs</code>.DaSaturating absolute value, see <code>i128::saturating_abs</code>.CoSaturating absolute value, see <code>i8::saturating_abs</code>.DbSaturating absolute value, see <code>isize::saturating_abs</code>.D`Saturating absolute value, see <code>i64::saturating_abs</code>.D`Saturating absolute value, see <code>i32::saturating_abs</code>.ChAdds an unsigned integer to a non-zero value. Return \xe2\x80\xa600000CnSaturating integer addition. Computes <code>self + rhs</code>.00000000000CjAdd two time deltas together. If overflow occurs, then \xe2\x80\xa6EbSaturating <code>Duration</code> addition. Computes <code>self + other</code>, \xe2\x80\xa6CeMultiplies two non-zero integers together. Return \xe2\x80\xa600000000000BgMultiply this time delta by an integer.EhSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, \xe2\x80\xa6CoSaturating negation. Computes <code>-self</code>, returning \xe2\x80\xa600000CdRaise non-zero value to an integer power. Return \xe2\x80\xa600000000000DaSaturating integer substration. Computes <code>self - rhs</code>.000000000007EeSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, \xe2\x80\xa6CjReturns the window\xe2\x80\x99s distance to each screen edge in \xe2\x80\xa6AjSets the full screen mode.C`Sets the angle normalized (no-op for integer \xe2\x80\xa600CnSets the angle normalized to the non-inclusive range -1 to \xe2\x80\xa61111011111AnSplats the value to all lanes.CmSplat an <code>f32</code> arg into an <code>m256</code> lane.CdDetermines if rebuilding the table would improve \xe2\x80\xa6ChComputes the sine and the cosine using Taylor series \xe2\x80\xa60DfViews a slice of ASCII characters as a slice of <code>u8</code> bytes.GfConverts <code>&amp;[T]</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements <code>From&lt;T&gt;</code>.0DlDecomposes a number of <code>seconds</code> in <code>{ h, m, s, ms }</code>.CgRemove an element from the back of the stack (calls \xe2\x80\xa600Bi<code>tailcall-chunk</code> modificationsDaReturns the first <code>n</code> elements of the exclusive slice.ClReturns the slice omitting the last <code>n</code> elements.DjReturn an iterator adaptor that borrows from a <code>Clone</code>-able \xe2\x80\xa600CaGet OpenGL\xe2\x80\x99s GLuint texture ID or metals ObjcId0ChUpdate whole texture content bytes should be width * \xe2\x80\xa600DfConverts this address to an <code>IPv4</code> address if it\xe2\x80\x99s an \xe2\x80\xa6DbConverts this address to an IPv4-mapped <code>IPv6</code> address.DjConverts a <code>EventButtonState</code> into a <code>WebEventKind</code>.DeConvert to a packed <code>u32</code> in <code>0xRRGGBB</code> format.EdConvert to a packed <code>u32</code> in <code>0xRRGGBB</code> format, discarding \xe2\x80\xa610EcReturns a (3) tuple if the 3 fields from <code>ms</code> to <code>ns</code> are \xe2\x80\xa6CfReturns the number of trailing zeros in the binary \xe2\x80\xa600000000000000000000000000000000000ElReads <code>src</code> as having type <code>&amp;Dst</code> without moving the contained \xe2\x80\xa6DfShortens the deque, keeping the last <code>len</code> elements and \xe2\x80\xa6ClMutably borrows the wrapped value, returning an error if \xe2\x80\xa6ClTries to convert a <code>char8</code> to <code>char7</code>.CeTries to consume the lock and return the inner value.CkConstructs a new box with uninitialized contents on the \xe2\x80\xa6DkConstructs a new <code>Rc</code> with uninitialized contents, returning \xe2\x80\xa6DkConstructs a new <code>Box</code> with uninitialized contents, with the \xe2\x80\xa6DjConstructs a new <code>Rc</code> with uninitialized contents, with the \xe2\x80\xa6EhReturns a deterministic hash of the <code>TypeId</code> of <code>Self</code> using a \xe2\x80\xa600EdCreates an interval $(-\xe2\x88\x9e, u)$ <code>..=upper</code> <code>RangeToInclusive</code>.BeUnpack and interleave the high lanes.0DkUnwraps the inner <code>Option</code>, returning the contained value or \xe2\x80\xa6EcUnwraps the inner <code>Result</code>, returning the <code>Ok</code> value or a \xe2\x80\xa6DgReturns the contained <code>Some</code> value or computes it from a \xe2\x80\xa6DeReturns the contained <code>Ok</code> value or computes it from a \xe2\x80\xa6EnAsserts the <code>value</code> equals <code>expected</code> and returns <code>self</code>, \xe2\x80\xa6FeAsserts the <code>value</code> is <code>Ok</code> and returns <code>self</code>, otherwise panics \xe2\x80\xa6DkUnwraps the contained <code>Some(value)</code> or panics with the given \xe2\x80\xa6CgUnwraps the contained <code>Ok(value)</code> or panics.CiUnwraps the contained <code>Some(value)</code> or panics.BcReturns the service version string.00DeReturns a version of the angle with the given <code>direction</code>.00000DhReturns a version of the angle with the given <code>direction</code> \xe2\x80\xa61000001EcCreates an owned <code>PathBuf</code> like <code>self</code> but with the given \xe2\x80\xa6EhCreates an owned <code>PathBuf</code> like <code>self</code> but with the given file \xe2\x80\xa6DgCreates an empty <code>HashMap</code> which will use the given hash \xe2\x80\xa6CiCreates a new empty hash set which will use the given \xe2\x80\xa6DfReturns a new <code>ExampleEnumSet</code> with none of the fields set.DeReturns a new <code>ExampleBitfieldCustom</code> with none of the \xe2\x80\xa6DgReturns a new <code>ExampleBitfield</code> with none of the fields set.DgLike <code>write</code>, except that it writes into a slice of buffers.DgLike <code>write</code>, except that it writes from a slice of buffers.00CkPerforms a volatile write of a memory location with the \xe2\x80\xa6DhPerforms a volatile write of a memory location with <code>src</code> \xe2\x80\xa6CaCode to set the background color to bright black.CaCode to set the background color to bright green.CaCode to set the background color to bright white.Cc<code>std</code> The current status of a backtrace.0Ef\xf0\x9f\xa5\xa1 <code>Base32</code> <code>Crockford</code> encoding. Case-insensitive, remaps \xe2\x80\xa60CnWhether the color has an alpha component are integer types \xe2\x80\xa60CdWhether the color space is linear (as opposed to \xe2\x80\xa60CcWhether the color uses premultiplied alpha (vs. \xe2\x80\xa60BhThe type of compression applied to data.0BnThe connection was reset by the remote server.00De64-bit data <em>value</em>, restricted to <code>Copy</code> variants.0Cf64-bit data <em>value</em>, with extra <code>V</code>.0De\xf0\x9f\x94\x84 A mutable iterator over the elements of a <code>DstQueue</code>.0De\xf0\x9f\x94\x84 A mutable iterator over the elements of a <code>DstStack</code>.0Cc\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The requested element has not been found.Bn\xf0\x9f\x9a\xa9 The requested element has not been found.0010DbAn example created with <code>bitfield!</code>, everything public.fU+00210Dg$ 1/\\sqrt{2\xcf\x80} = 1/\\sqrt{\xcf\x84} $ (A231863) <code>\xe2\x89\x88 0.39894228\xe2\x80\xa6</code>00000Cn$ 1/\\sqrt{\xcf\x86} = \\sqrt{\xcf\x86/\xcf\x86^2} = \\sqrt{\xcf\x86^2-2} $ (A197762) \xe2\x80\xa600000Dg$ 1/\\sqrt{\xcf\x84} = 1/\\sqrt{2\xcf\x80} $ (A231863) <code>\xe2\x89\x88 0.39894228\xe2\x80\xa6</code>00000Df$ 2/\\sqrt{\xcf\x84} = \\sqrt{2/\xcf\x80} $ (A076668) <code>\xe2\x89\x88 0.79788456\xe2\x80\xa6</code>00000Dk<code>std</code> Options and flags which can be used to configure how a \xe2\x80\xa60De<code>std</code> Representation of the various permissions on a file.0fU+003E0BaThe remote host is not reachable.00AgA filename was invalid.00Db\xf0\x9f\x94\x84 <code>core</code> Represents types that can be created by \xe2\x80\xa60CeLinux flag constants for <code>LinuxSigaction</code>.0fU+00280CeLinearized perceptual lightness (L* in linear space).0BgNumber of significant digits in base 2.00000Be<code>miniquad</code>\xe2\x80\x99s UI Service.0Ci\xf0\x9d\x9f\x99 \xf0\x9f\x9a\xa9 The provided values are not compatible in size.Cd\xf0\x9f\x9a\xa9 The provided values are not compatible in size.BoThe provided values are not compatible in size.0210Cd\xf0\x9f\x9a\xa9+ Invalid or problematic values for niche types.0Ck\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f A signed integer that is known not to equal \xe2\x80\xa60Cn\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f An unsigned integer that is known not to equal \xe2\x80\xa60Bg\xf0\x9d\x9f\x99 \xf0\x9f\x9a\xa9 A non-zero value is required.Bb\xf0\x9f\x9a\xa9 A non-zero value is required.AmA non-zero value is required.0210D`\xf0\x9f\x96\xb9 The type returned from <code>ExtOption::fmt_or_else</code>.0Df<code>core</code> A marker trait which represents \xe2\x80\x9cpanic safe\xe2\x80\x9d \xe2\x80\xa60Df\xf0\x9d\x90\x93\xf0\x9d\x9f\x99\xf0\x9f\x9a\xa9 <code>core</code> An error which can be returned when \xe2\x80\xa60Df\xe2\x9a\x96\xef\xb8\x8f <code>std</code> The status code the process returns to its \xe2\x80\xa60CgResolve path without escaping starting dir (openat2()).BmTreat starting dir as root during resolution.BmDon\xe2\x80\x99t cross mount points during resolution.Dj<code>std</code> RAII structure used to release the shared read access \xe2\x80\xa60fU+00160Ed\xf0\x9f\x95\x98 \xf0\x9f\x9a\xa9 Returned from the <code>duration_since</code> and <code>elapsed</code> \xe2\x80\xa60ChRepresents standard time granularities from years to \xe2\x80\xa60Df\xf0\x9d\x9f\x99 \xf0\x9f\x9a\xa9 <code>core</code> The error type returned when a checked \xe2\x80\xa60CmAn exclusive reference to an element of a <code>Tuple</code>.0CiA shared reference to an element of a <code>Tuple</code>.0CjDistinguishes the role of a component in wavelet analysis.0AhA web API Pointer Event.0CoAdvances the iterator from the back by <code>n</code> elements.00CjIf there are elements and they are all equal, return a \xe2\x80\xa600CnReturns the total amount of memory allocated internally by \xe2\x80\xa60CcReturns a non-null pointer to the slice\xe2\x80\x99s buffer.CeReturns a shared reference to a slice of possibly \xe2\x80\xa6CiGets a mutable (unique) reference to the contained value.BoGets a shared reference to the contained value.DgReturns the number of bytes available to be read from <em>stdin</em>\xe2\x80\xa6DfExtract a span of bits from the <code>u32</code>, start and len style.DfExtract a span of bits from the <code>u64</code>, start and len style.EdUnsets the bits in <code>self</code> to 0 from the <code>[start..=end]</code> range.0BfBitwise <code>(!a) &amp;amp; b</code>.000DbBlends the <code>i16</code> lanes according to the immediate mask.CiReturns the rounded up size in bytes from a size in bits.CbReturns the bytes per pixel of the current format.DiPerforms the same function as <code>call_once()</code> except ignores \xe2\x80\xa6CnReturns <code>true</code> if the color has an alpha component.00DdReturns <code>true</code> if the color is in a linear space (not \xe2\x80\xa600DdReturns <code>true</code> if the alpha component is the absolute \xe2\x80\xa600D`Returns <code>true</code> if the color uses premultiplied alpha.00CgOpens a TCP connection to a remote host with a timeout.CmA convenience wrapper over <code>Slice::copy_array_at</code>.D`Copies all elements from <code>src</code> into <code>dst</code>.BoOpens a file in write-only mode with buffering.Bj<code>crossbeam-utils</code> modificationsCiProvides a cursor with editing operations at the back \xe2\x80\xa6CgReturns the size of the value represented by this type.0Dg<code>core</code> Asserts that two expressions are equal to each other.0Dh<code>core</code> Asserts that two expressions are not equal to each \xe2\x80\xa60GgWhen passed the <em>number</em> <code>0</code>, <code>1</code>, \xe2\x80\xa6, <code>9</code>, returns the <em>character</em> \xe2\x80\xa6DdSets the <code>dither</code> field to <code>Dither::Atkinson</code>.AaEnables raw mode.0AeEnables the raw mode.EfEncodes <code>input</code> into <code>output</code>, returning the number of bytes \xe2\x80\xa6000000000CkReturns the value of the dwFileAttributes field of this \xe2\x80\xa6CkReturns the first key-value pair in the map. The key in \xe2\x80\xa6DiSets the <code>format</code> field to <code>PixelFormat::ABGR8888</code>.DiSets the <code>format</code> field to <code>PixelFormat::ARGB8888</code>.DiSets the <code>format</code> field to <code>PixelFormat::BGRA8888</code>.DiSets the <code>format</code> field to <code>PixelFormat::RGBA8888</code>.CdConverts an array into a <code>full</code> destaque.CaConverts an array into a <code>full</code> stack.CiConverts an <code>AsciiChar</code> to <code>char7</code>.CiConverts an <code>AsciiChar</code> to <code>char8</code>.CjConverts an <code>AsciiChar</code> to <code>char16</code>.DiResolves a given path relative to the nearest <code>Cargo.toml</code> \xe2\x80\xa6CiCreates a timestamp from seconds, ensuring a valid value.DfReturns a new <code>JsInstant</code> from a timestamp in milliseconds.CgReturns a time delta corresponding to the number of \xe2\x80\xa6DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6Demethod equivalent to <code>From&lt;NoInverse&gt; for IntError</code>.EnConstructs a <code>Layout</code> from a given <code>size</code> and <code>align</code>, or \xe2\x80\xa6EnConverts <code>core::str</code><code>Utf8Error</code> to <code>InvalidText::Utf8</code> in \xe2\x80\xa6FbConverts <code>core::str</code><code>Utf8Error</code> to <code>InvalidUtf8</code> in compile-time.ClConverts a slice of bytes to a string, including invalid \xe2\x80\xa6DiReturns a copy of <code>self</code> with only the value of the bit at \xe2\x80\xa600CkCalculates the 2D coordinates from the given 1D array index0CdReturns the working directory for the child process.DkA copy of <code>self</code> with only the bits of <code>FLAG1</code> field.0DkA copy of <code>self</code> with only the bits of <code>FLAG2</code> field.0DkA copy of <code>self</code> with only the bits of <code>MASK0</code> field.0CiReturns the hash value xor folded to <code>n</code> bits.000CkGets the mutable reference of the contents of the cell, \xe2\x80\xa60DiGets the contents of the cell, initializing it to <code>f()</code> if \xe2\x80\xa60888EgGets the value of the bits in <code>self</code> from the <code>[start..=end]</code> \xe2\x80\xa600000000000DhGets the value of the bits in from the <code>[start..=end]</code> range.00Dg(groupCollapsed) Like <code>group</code> but starts with the inline \xe2\x80\xa6BoChecks if bulk memory operations are available.CcChecks if the <em>Scroll Lock</em> modifier is set.Cg(forward) Moves the browser forward one step in the \xe2\x80\xa6CcReturns a copied sorted array using insertion sort.0000000000000EhReturns the number of permutations of <code>n</code> items taken <code>r</code> at a \xe2\x80\xa600ClReturns the number of digits in the given <code>base</code>.00CiReturns the number of digits in base 10 including the \xe2\x80\xa600DiWrites the factors in <code>fbuf</code>, and the unique prime factors \xe2\x80\xa600DjReturns the number of permutations of n<code>items taken</code>r` at a \xe2\x80\xa600AoCalls `NumInt::int_ref_combine.00CnSimilar to int_combine, but operates on references instead \xe2\x80\xa600AoCalls `NumInt::int_ref_div_rem.00CnSimilar to int_div_rem, but operates on references instead \xe2\x80\xa600AoCalls `NumInt::int_ref_factors.00CnSimilar to int_factors, but operates on references instead \xe2\x80\xa600AoCalls `NumInt::int_ref_gcd_ext.00CnSimilar to int_gcd_ext, but operates on references instead \xe2\x80\xa600AoCalls `NumInt::int_ref_is_even.00CnSimilar to int_is_even, but operates on references instead \xe2\x80\xa600AoCalls `NumInt::int_ref_permute.00CnSimilar to int_permute, but operates on references instead \xe2\x80\xa600AoCalls `NumInt::int_ref_totient.00CnSimilar to int_totient, but operates on references instead \xe2\x80\xa600F`A copy of <code>self</code> with only the bits both in <code>self</code> and <code>other</code>.00CoReturns the inner <code>BareBox</code>ed primitive array in \xe2\x80\xa60DbConverts this <code>PathBuf</code> into a boxed <code>Path</code>.BnReturns the inner stored type in compile-time.BkA copy of the inner value, in compile-time.DgConsumes the <code>BinaryHeap</code> and returns a vector in sorted \xe2\x80\xa6DjReturns <code>true</code> if this address is in a range designated for \xe2\x80\xa6EdReturns <code>true</code> if this address part of the <code>198.18.0.0/15</code> \xe2\x80\xa6D`Returns <code>true</code> if this is an address reserved for \xe2\x80\xa6BoChecks if the lower bound is closed (included).DcReturns <code>true</code> if this unicode scalar is a noncharacter.00E`Returns <code>true</code> if the given unicode scalar <code>code</code> is a \xe2\x80\xa6D`Whether <code>self</code> is equal to <code>NUM_MAX_NORM</code>.00D`Whether <code>self</code> is equal to <code>NUM_MIN_NORM</code>.00FeReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.00000EjReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.00000000000EdReturns <code>true</code> if this is a unique local address (<code>fc00::/7</code>).BoChecks if the upper bound is closed (included).DcChecks whether the current variant has the given <code>name</code>.CiValidates that the interval bounds are ordered correctly.CjReturns the value of the ftLastWriteTime field of this \xe2\x80\xa6DiDetermines the number of terms needed for <code>exp2_series</code> to \xe2\x80\xa60DgLoads the <code>f32</code> reference into the low lane of the register.Ba(assign) Loads the specified URL.Bf(reload) Reloads the current document.DcReturns a <code>CursorMut</code> pointing at the gap before the \xe2\x80\xa60CnMakes the elements of the destaque contiguous, rearranging \xe2\x80\xa6CnRearranges the internal storage of this deque so it is one \xe2\x80\xa6BfMaximum bitmap size, in native pixels.0CbReturns the size of the pointed-to value in bytes.00CcReturns <code>true</code> if memory can still grow.BbGathers the sign bit of each lane.CfCollects the sign bit of each lane into a 4-bit value.DfReturns the middle exclusive sub-<code>slice</code> with the given \xe2\x80\xa6CmReturns the address\xe2\x80\x99s multicast scope if the address is \xe2\x80\xa6CcUnsets the bits that are set in <code>other</code>.00CjUnsets the bits from the <code>[start..=end]</code> range.00BlReturns the time code, up to seconds, as \xe2\x80\xa6ClEnsures a value is in the entry by inserting the default \xe2\x80\xa6CfComputes the absolute value of self, with overflow \xe2\x80\xa600000CmNegates self, overflowing if this is equal to the minimum \xe2\x80\xa600000DcConverts a <code>bitmap</code> of 1-bit bytes into PBM ASCII P1 \xe2\x80\xa6CmReturns the index of the partition point according to the \xe2\x80\xa6BlReturns a copy of the next new random state.CbReturns a copy of the next state of the generator.11111111Cb(now) Retrieves a high-resolution timestamp in \xe2\x80\xa6DiShuffle 128 bits of floating point data at a time from <code>a</code> \xe2\x80\xa6EhSlowly swizzle 128 bits of integer data from <code>a</code> and <code>b</code> using \xe2\x80\xa6BiReturns the number of pixels per cell \xe2\x80\xa6CeReturn the position of the maximum element in the \xe2\x80\xa600CeReturn the position of the minimum element in the \xe2\x80\xa600CkReturn the positions of the minimum and maximum elements in00DgLike <code>print</code>, but panics on failure instead of returning \xe2\x80\xa6Cf\xe2\x80\x9cLift\xe2\x80\x9d a function of the values of the current \xe2\x80\xa600ChRemove an element from the front of the queue (calls \xe2\x80\xa600CgRemove an element from the back of the queue (calls \xe2\x80\xa600DnReturns a subslice from <code>start</code> (inclusive) to <code>end</code> \xe2\x80\xa60BlLanewise <code>1.0 / a</code> approximation.BeReciprocal of <code>f32</code> lanes.ClRemoves and returns the value for a given key, replacing \xe2\x80\xa6EcThe nearest integer to <code>self</code>, rounding ties away from <code>0.0</code>.0DhThe nearest integer to itself, rounding ties away from <code>0.0</code>.0DjThe nearest integer to <code>self</code>, rounding ties to the nearest \xe2\x80\xa60DgReturns the nearest integer to <code>x</code>, rounding ties to the \xe2\x80\xa60EoAsserts the <code>state</code> is <code>Err</code> and returns <code>self</code>, otherwise \xe2\x80\xa6EdReplaces the <code>state</code> self with a <code>new_state</code>, in compile-time.DoWraps the <code>state</code> field into a <code>Result</code>, in compile-time.EhRequests an immediate update, ensuring <code>update()</code> and <code>draw()</code> \xe2\x80\xa6DhEnables raw mode and returns a <code>ScopeGuard</code> that restores \xe2\x80\xa6CcReturns a copied sorted array using selection sort.CcReturns a copied sorted array using insertion sort.110010110011EcReturns a copy of <code>self</code> setting the bit at <code>index</code>, checked.00CjChanges the current working directory to the specified \xe2\x80\xa6CkCapture mouse cursor to the current window On WASM this \xe2\x80\xa6DbA copy of <code>self</code> with the <code>FLAG1</code> field set.0DbA copy of <code>self</code> with the <code>FLAG2</code> field set.0DbA copy of <code>self</code> with the <code>MASK0</code> field set.0EhSet an <code>i32</code> as the low 32-bit lane of an <code>m128i</code>, other lanes \xe2\x80\xa6EhSet an <code>i64</code> as the low 64-bit lane of an <code>m128i</code>, other lanes \xe2\x80\xa6BfA thread-unsafe version of set_logger.CgSet <code>m128d</code> args into an <code>m256d</code>.CgSet <code>m128i</code> args into an <code>m256i</code>.CfMoves this TCP stream into or out of nonblocking mode.0CfMoves this UDP socket into or out of nonblocking mode.BoChanges the permissions on the underlying file.CgChanges the permissions found on a file or a directory.CmSets the read-only flag, returning the previous read-only \xe2\x80\xa6CjSplats the args into both lanes of the <code>m128d</code>.CnSplat an <code>f64</code> arg into an <code>m256d</code> lane.EgSets the given <code>value</code> into the bits from the <code>[start..=end]</code> \xe2\x80\xa600000000000EcGets a copy of <code>self</code> with the given <code>value</code> set into the \xe2\x80\xa600CeSort all iterator elements into a new iterator in \xe2\x80\xa600ClSpawns a new thread without any lifetime restrictions by \xe2\x80\xa6DoSplits a number of <code>nanoseconds</code> in <code>{ s, ms, \xc2\xb5s, ns }</code>.0BnRemove an element from the front of the stack.0CgRemove an element from the back of the stack (calls \xe2\x80\xa600CkReturns the current seek position from the start of the \xe2\x80\xa6000CjDefines a standardized module structure with automatic \xe2\x80\xa60EbAsserts the <code>state</code> and <code>value</code> equals the corresponding \xe2\x80\xa6DkConverts the <code>Level</code> to the equivalent <code>LevelFilter</code>.DkConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBB</code> format.DoConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBB</code> format, \xe2\x80\xa610EdConvert to a packed <code>u32</code> in <code>0xRRGGBBAA</code> format, with the \xe2\x80\xa6EdConvert to a packed <code>u32</code> in <code>0xRRGGBBAA</code> format (big-endian).10DjConverts this object to an iterator of resolved <code>SocketAddr</code>\xe2\x80\xa60CcConverts an <code>OsStr</code> to a Cow&lt;str&gt;.CnConverts a <code>Path</code> to a <code>Cow&lt;str&gt;</code>.D`Converts a <code>FsPath</code> to a <code>Cow&lt;str&gt;</code>.CcConverts a <code>CStr</code> into a Cow&lt;str&gt;.CmTries to convert a <code>char16</code> to <code>char7</code>.CmTries to convert a <code>char16</code> to <code>char8</code>.CiTry to acquire a shared (non-exclusive) lock on the file.BeUnpack and interleave the high lanes.0DeUnpack and interleave low lanes of <code>a</code> and <code>b</code>.DcIf we have the only reference to <code>T</code> then unwrap it. \xe2\x80\xa60DkReturns a <code>CursorMut</code> pointing at the gap after the greatest \xe2\x80\xa60CgWrites the current URL into the provided buffer and \xe2\x80\xa6CiReturns the number of bytes needed to store the given \xe2\x80\xa600EoAsserts the <code>value</code> is <code>Err</code> and returns <code>self</code>, otherwise \xe2\x80\xa6DoReplaces the <code>value</code> with a <code>new_value</code>, in compile-time.DoWraps the <code>value</code> field into a <code>Result</code>, in compile-time.ChWaits on this condition variable for a notification, \xe2\x80\xa6DbReturns a new <code>ExampleEnumSet</code> with all the fields set.DhReturns a new <code>ExampleBitfieldCustom</code> with all the fields \xe2\x80\xa6DcReturns a new <code>ExampleBitfield</code> with all the fields set.CdAcquires a mutable reference to the contained value.CiReturns a new empty sixel builder with the given byte \xe2\x80\xa6CnWrites active worker handles into a buffer and returns the \xe2\x80\xa6BeReturns the number of active workers.AfStops all Web Workers.CmOverwrites a memory location with the given value without \xe2\x80\xa6DiOverwrites a memory location with <code>src</code> without reading or \xe2\x80\xa6De\xf0\x9f\x8e\xb2 Constructs a <em>XorShift</em> prng with custom bits, basis, \xe2\x80\xa60ClReturns the secondary zodiac name, associated to the end \xe2\x80\xa6CjA nonexistent interface was requested or the requested \xe2\x80\xa600CbCode to set the background color to bright yellow.DjCode to set the foreground color to <code>fg</code> and the background \xe2\x80\xa6DfCode to set the foreground color to bright <code>fg</code> and the \xe2\x80\xa6BbCode to make the cursor invisible.CjCode to move the cursor to the beginning of the next line.ClCode to move the cursor to the beginning of the previous \xe2\x80\xa6fU+005E0CcAlias of <strong>positive</strong> angle direction.Bn<code>crossterm</code>\xe2\x80\x99s UI backend service.0fU+00110fU+00120CgCode to erase from the cursor to the start of the line.CgCode to erase from the cursor to the end of the screen.BaRepresents the state of a button.0BfEnum representing the type of pointer.0CjAn auto-generated enum for values between #start and #end.Bk\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The given index is out of bounds.Bf\xf0\x9f\x9a\xa9 The given index is out of bounds.10CfInvalid image size, with an optional width and height.00Ea\xf0\x9f\x9a\xa9 <code>std</code> An error returned by [<code>IoBufWriter::into_inner</code>]0Ba\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The key already exists.0fU+007B0Ca<code>miniquad</code> Platform-specific settings.0Eh\xf0\x9f\x9a\xa9+ An error composite of <code>DataOverflow</code> + <code>IndexOutOfBounds</code>\xe2\x80\xa60Do\xf0\x9f\x9a\xa9 <code>std</code> An error returned from [<code>MpscReceiver::recv</code>].0Dh\xf0\x9f\x9a\xa9+ <code>std</code> Possible reasons that [<code>try_recv</code>][\xe2\x80\xa60Eb\xf0\x9f\x9a\xa9+ <code>std</code> Possible error outcomes for the [<code>try_send</code>][\xe2\x80\xa60CiThe greatest representable negative value, if applicable.0BjThe smallest representable positive value.0CjThe operation lacked the necessary privileges to complete.00Bg\xf0\x9d\x9f\x99 \xf0\x9f\x9a\xa9 A positive value is required.AmA positive value is required.010Ed\xf0\x9f\x93\x8f <code>core</code> A range only bounded inclusively above (<code>..=end</code>).0fU+00290Dg<code>std</code> RAII structure used to release the exclusive write \xe2\x80\xa60CmNumber of explicit bits used to represent the significand \xe2\x80\xa600000Dj<code>std</code> An owned permission to join on a thread (block on its \xe2\x80\xa60Bh\xf0\x9f\x95\x98 A time split from hours to seconds.0Be\xf0\x9f\x95\x98 A time split from years to days.0Bh\xf0\x9f\x95\x98 A time split from years to seconds.0CgRepresents a lazy transformation that flattens elements0DbThe most efficient print method, exclusive for <code>linux</code>.0ClConverts an OS string slice to a byte slice.  To convert \xe2\x80\xa6BkReturns a raw mutable byte pointer to self.DfYields a mutable reference to the underlying <code>OsString</code> \xe2\x80\xa6CfGet an exclusive reference to the value within the \xe2\x80\xa6DgGet a shared reference to the value within the <code>UnsafeCell</code>.Ea<code>core</code> Makes a <em>soundness</em> promise to the compiler that the \xe2\x80\xa60BcDrops the contained value in place.DmReads the value from the <code>MaybeUninit&lt;T&gt;</code> container. The \xe2\x80\xa6BoLanewise average of the <code>u8</code> values.AnAverage <code>u8</code> lanes.DfBinary searches this <code>VecDeque</code> with a comparator function.DfExtract a span of bits from the <code>u32</code>, control value style.DfExtract a span of bits from the <code>u64</code>, control value style.CaThe size in bits of the <code>FLAG1</code> field.0CaThe size in bits of the <code>FLAG2</code> field.0CaThe size in bits of the <code>MASK0</code> field.0CkCalculates the distance between two pointers within the \xe2\x80\xa6BnCalculates the ceiled magnitude of the vector.00000000000CiReturns the normalized vector, using the given vector \xe2\x80\xa600000000000AmDivides a vector by a scalar.0B`Multiplies a vector by a scalar.0DkCreates an interval $[l, \xe2\x88\x9e)$ <code>lower..</code> <code>RangeFrom</code>.AmLanewise <code>a == b</code>.BdLanewise <code>a &amp;gt;= b</code>.BcLanewise <code>a &amp;gt; b</code>.BdLanewise <code>a &amp;lt;= b</code>.BcLanewise <code>a &amp;lt; b</code>.DhCompare <code>f32</code> lanes according to the operation specified, \xe2\x80\xa60BbReturns <code>NotSupported</code>.DeThis is less efficent than <code>HashSet::contains</code> for not \xe2\x80\xa6DfThis is less efficent than <code>BTreeSet::contains</code> for not \xe2\x80\xa6DjCounts the number of times a given <code>element</code> appears in the \xe2\x80\xa600DkStores a value into the <code>Atomic</code> if the current value is the \xe2\x80\xa6DiStores a value into the <code>bool</code> if the current value is the \xe2\x80\xa6CkStores a value into the pointer if the current value is \xe2\x80\xa6CiStores a value into the atomic integer if the current \xe2\x80\xa60000000CmStores a value into the atomic float if the current value \xe2\x80\xa611011EeReturns <code>true</code> if the array contains <code>element</code>, between the \xe2\x80\xa6DcCopy the low <code>i64</code> lane to a new register, upper bits 0.EdCounts the number of 1s in <code>self</code> from the <code>[start..=end]</code> \xe2\x80\xa600000000000CjProvides a cursor with editing operations at the front \xe2\x80\xa6CjReturns the alignment of the value represented by this \xe2\x80\xa60ClRemove duplicates from sections of consecutive identical \xe2\x80\xa600BeAn alias of <code>digits_base</code>.DiReturns the number of digits in the given absolute <code>base</code>, \xe2\x80\xa61010101001AbDisables raw mode.0AfDisables the raw mode.EdDivides <code>Duration</code> by <code>Duration</code> and returns <code>f32</code>.EdDivides <code>Duration</code> by <code>Duration</code> and returns <code>f64</code>.CaReturns the quotient, rounding ties towards zero.00000000000CjPerforms a dot product of two <code>m128</code> registers.DaThis works like <code>dot_product_m128</code>, but twice as wide.DaReturns the current timestamp as an <code>f64</code> value in \xe2\x80\xa600DhDetermines the number of terms needed for <code>exp_series</code> to \xe2\x80\xa60EdReturns a copy of <code>self</code> flipping the bit at <code>index</code>, checked.00DnReturns a copy of <code>self</code> with the <code>FLAG1</code> field flipped.0DnReturns a copy of <code>self</code> with the <code>FLAG2</code> field flipped.0DnReturns a copy of <code>self</code> with the <code>MASK0</code> field flipped.0EeReturns a string from an array of <code>bytes</code>, truncated to <code>n</code> \xe2\x80\xa6000BfReturns the current working directory.DeConstructs a box from a <code>NonNull</code> pointer in the given \xe2\x80\xa6DhCreates a new Xoroshiro128++ PRNG, seeded from <code>RandomState</code>.0DfCreate from a packed <code>u32</code> in <code>0xRRGGBB</code> format.EcCreate from a packed <code>u32</code> in <code>0xRRGGBB</code> format, with the \xe2\x80\xa610DgDecode a native endian UTF-16\xe2\x80\x93encoded slice <code>v</code> into a \xe2\x80\xa6AjHanging baseline position.0EeCreates a mismatch where <code>need</code> is an <code>Interval::open</code>, and \xe2\x80\xa6BdReturns the digital root in base 10.00CjReturns the quotient, rounding ties to the nearest odd \xe2\x80\xa600B`Calls `NumInt::int_ref_div_ceil.00CgSimilar to int_div_ceil, but operates on references \xe2\x80\xa600B`Calls `NumInt::int_ref_is_prime.00CgSimilar to int_is_prime, but operates on references \xe2\x80\xa600B`Calls `NumInt::int_ref_midpoint.00CgSimilar to int_midpoint, but operates on references \xe2\x80\xa600B`Calls `NumInt::int_ref_prime_pi.00CgSimilar to int_prime_pi, but operates on references \xe2\x80\xa600ChReturns the subfactorial, or the number of derangements.00ClAn iterator adaptor to insert a particular value created \xe2\x80\xa60ClCreates a new iterator which places an item generated by \xe2\x80\xa6010DbConverts this <code>CString</code> into a boxed <code>CStr</code>.DgConverts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code>CeConverts the vector into <code>Box&lt;[T]&gt;</code>.CkReturns an iterator which retrieves elements in heap order.CjReturns a version of the angle with inverted direction \xe2\x80\xa6CgReturns a version of the angle with inverted direction.000100101011DjReturns <code>true</code> if this address is in a range designated for \xe2\x80\xa60D`Returns <code>true</code> if this is an address reserved for \xe2\x80\xa6BeChecks if the lower bound is bounded.DoDetermines if <code>File</code> has an efficient <code>read_vectored</code> \xe2\x80\xa6EfDetermines if this <code>Read</code>er has an efficient <code>read_vectored</code> \xe2\x80\xa600DcReturns <code>true</code> if <code>self</code> has a negative sign.000DcReturns <code>true</code> if <code>self</code> has a positive sign.000ClChecks if the elements of this iterator are sorted using \xe2\x80\xa600BeChecks if the upper bound is bounded.DfChecks whether the current variant is at <code>index</code> (0-based).CnReturn the elements producing the k largest outputs of the \xe2\x80\xa600CkReturns the value of the ftLastAccessTime field of this \xe2\x80\xa6DjReturns the <strong>linear-light perceptual</strong> value (experimental).0000000CfLoads the reference into the low lane of the register.BoLoads the low <code>i64</code> into a register.CjLoad data from memory into a register according to a mask.0Ck(replace) Replaces the current document with the given URL,CgReturns the alignment of the pointed-to value in bytes.00EaView a <code>Sync + Unpin</code> <code>self</code> as <code>&amp;mut [u8]</code>.00EfComputes the non-negative modulo of <code>self</code> over |<code>modulus</code>|, \xe2\x80\xa6EdComputes the non-negative modulo of <code>self</code> over <code>modulus</code>, \xe2\x80\xa61011100001DfReturns the middle exclusive sub-<code>slice</code> with the given \xe2\x80\xa6BoComputes <code>(x * mul + add)</code> normally.0DjMultiply two <code>u32</code>, outputting the low bits and storing the \xe2\x80\xa6DjMultiply two <code>u64</code>, outputting the low bits and storing the \xe2\x80\xa6DgGets the value of the <code>IP_MULTICAST_TTL</code> option for this \xe2\x80\xa6ClConstructs a new atomically reference-counted slice with \xe2\x80\xa6CiConstructs a new boxed slice with uninitialized contents.CaConstructs a new reference-counted slice with \xe2\x80\xa6CmConstructs a new boxed slice with uninitialized contents, \xe2\x80\xa61EhPartition a sequence of <code>Result</code>s into one list of all the <code>Ok</code>\xe2\x80\xa600EaPauses execution until receiving from <em>stdin</em> any <code>char</code> in \xe2\x80\xa6BiAdd an element to the front of the queue.0CjReturns a subslice up to the given <code>end</code> index.CnRepresents raw hardware mouse motion event Note that these \xe2\x80\xa600CnReduces the given value to a chain of appropriate prefixes \xe2\x80\xa60ClReduces the given value to a chain of appropriate binary \xe2\x80\xa6ChReduces the given value to a chain of appropriate SI \xe2\x80\xa6BgReturns the remaining available memory.EcAsserts the state is <code>None</code> and returns <code>self</code>, otherwise \xe2\x80\xa6EcAsserts the state is <code>Some</code> and returns <code>self</code>, otherwise \xe2\x80\xa6ChSets the global logger to a <code>Box&lt;Log&gt;</code>.AjSet the mouse cursor icon.BoSets the read timeout to the timeout specified.0CgRegisters multiple signals using a handler function \xe2\x80\xa6CiGets a mutable pointer to the first element of the array.G`Converts <code>&amp;[T]</code> to <code>[U; N]</code> when <code>U</code> implements <code>From&lt;T&gt;</code>.0DhReturns a mutable left subslice of <code>slice</code> with the given \xe2\x80\xa60DiReturns a mutable right subslice of <code>slice</code> with the given \xe2\x80\xa60BiAdd an element to the front of the stack.0CkStores the low lane value to all lanes of the reference \xe2\x80\xa6FaReplaces the <code>state</code> self with a <code>new_state</code> and the <code>value</code> \xe2\x80\xa6CmRemoves an element from anywhere in the deque and returns \xe2\x80\xa6CgQueries the metadata about a file without following \xe2\x80\xa60BaPerforms an rt_sigaction syscall.DjConverts a <code>EventButtonState</code> into a <code>WebEventKind</code>.D`Convert the error to <code>LINUX_EXIT</code> without validation.EhConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format, with \xe2\x80\xa6EbConvert to a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format \xe2\x80\xa610FlTransposes <code>Option&lt;Result&lt;T, E&gt;&gt;</code> into <code>Result&lt;Option&lt;T&gt;, E&gt;</code>.0ChTry to cast to a pointer of another type by checking \xe2\x80\xa6DjCreates an interval $(-\xe2\x88\x9e, u]$ <code>..upper</code> <code>RangeTo</code>.DfUnpack and interleave high lanes of <code>a</code> and <code>b</code>.DeUnpack and interleave low lanes of <code>a</code> and <code>b</code>.EeReturns the contained <code>Some</code> value, consuming the <code>self</code> value,EgReturns the contained <code>Ok</code> value, consuming the <code>self</code> value, \xe2\x80\xa6DkReturns the UTF-8 byte length or <code>None</code> if the first byte is \xe2\x80\xa6EcAsserts the value is <code>None</code> and returns <code>self</code>, otherwise \xe2\x80\xa6EcAsserts the value is <code>Some</code> and returns <code>self</code>, otherwise \xe2\x80\xa6FjTries to convert <code>Vec&lt;T&gt;</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements \xe2\x80\xa60CnSimultaneously waits for the child to exit and collect all \xe2\x80\xa6D`Whether the window should be <code>resizable</code> by the user.CeIf <code>true</code>, the user can resize the window.0DkCreates an empty <code>HashMap</code> with the specified capacity using \xe2\x80\xa6DhCreates an empty <code>BinaryHeap</code> with at least the specified \xe2\x80\xa6DbCreates an empty <code>HashSet</code> with the specified capacity.DhCreates an empty deque with space for at least <code>capacity</code> \xe2\x80\xa6DjConstructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the \xe2\x80\xa6EcReturns a new <code>ExampleBitfieldCustom</code> with <code>FLAG1</code> field set.DmReturns a new <code>ExampleBitfield</code> with <code>FLAG1</code> field set.EcReturns a new <code>ExampleBitfieldCustom</code> with <code>FLAG2</code> field set.DmReturns a new <code>ExampleBitfield</code> with <code>FLAG2</code> field set.EcReturns a new <code>ExampleBitfieldCustom</code> with <code>MASK0</code> field set.DmReturns a new <code>ExampleBitfield</code> with <code>MASK0</code> field set.CeChecks if this worker is still active by querying \xe2\x80\xa6CeZero extend an <code>m128</code> to <code>m256</code>CcCode to set the background color to bright magenta.Eh\xe2\x9a\x96\xef\xb8\x8f <code>std</code> Returned by <code>Barrier::wait()</code> when all threads in \xe2\x80\xa60ChCode to move the cursor to the beginning of the next \xe2\x80\xa6000ClCode to move the cursor to the beginning of the previous \xe2\x80\xa6000CiThe connection was aborted (terminated) by the remote \xe2\x80\xa600C`The connection was refused by the remote server.00fU+00140CfA non-empty directory was specified where an empty \xe2\x80\xa600DiHandle returned by <code>DstQueue::pop</code> (does the actual pop on \xe2\x80\xa60BfCode to enable the alternative screen.fU+00040ClA unique sequential identifier <code>usize</code> generator.Bo\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The given axis has an invalid length.0Di\xf0\x9f\x94\x84 <code>core</code> Creates an iterator where each iteration calls \xe2\x80\xa60Dk\xf0\x9f\x94\x84 <code>std</code> An iterator over <code>Path</code> and its ancestors.0Co\xf0\x9f\x94\x84 <code>core</code> An iterator that knows its exact length.0AbFull Text Metrics.0fU+005B0Ck\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The given indices does not match the expected \xe2\x80\xa6Ci\xf0\x9f\x9a\xa9 The given indices does not match the expected order.10Ba\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The link is not unique.0Cj\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 There are not enough elements for the operation.0Di\xf0\x9d\x90\x93\xf0\x9d\x9f\x99\xf0\x9f\x9a\xa9 <code>core</code> Kinds of errors that can cause parsing \xe2\x80\xa60BoPersistent storage access to prevent data loss.0Dj\xe2\x9a\x96\xef\xb8\x8f <code>std</code> Describes the result of a process after it has \xe2\x80\xa60fU+007D0Ec\xf0\x9f\x9a\xa9 <code>std</code> An error returned by [<code>ThreadLocalKey::try_with</code>].0Bl\xf0\x9f\x95\x98 A time split from hours to nanoseconds.0Dh\xe2\x9a\x96\xef\xb8\x8f <code>std</code> Whether a timed wait on a condition variable \xe2\x80\xa60DiDetermines the number of terms needed for <code>acos_series</code> to \xe2\x80\xa60DkPerform one round of an AES decryption flow on <code>a</code> using the \xe2\x80\xa6DkPerform one round of an AES encryption flow on <code>a</code> using the \xe2\x80\xa6DaExtracts the values from an array of <code>MaybeUninit</code> \xe2\x80\xa6EjReturns a <code>&amp;[Cell&lt;T&gt;; N]</code> from a <code>&amp;Cell&lt;[T; N]&gt;</code>CjReturns a slice containing the entire array in compile \xe2\x80\xa6DkEquivalent to <code>CString::as_bytes()</code> except that the returned \xe2\x80\xa6EdReturns a <code>&amp;[Cell&lt;T&gt;]</code> from a <code>&amp;Cell&lt;[T]&gt;</code>DiDetermines the number of terms needed for <code>asin_series</code> to \xe2\x80\xa60DiDetermines the number of terms needed for <code>atan_series</code> to \xe2\x80\xa60C`Lanewise average of the <code>u16</code> values.AoAverage <code>u16</code> lanes.D`Reverses the order of the bits in <code>self</code> from the \xe2\x80\xa60Bl<code>bytehound-preload</code> modificationsBoCalculates the floored magnitude of the vector.00000000000BoCalculates the rounded magnitude of the vector.00000000000CeReturn an iterator adaptor that iterates over the \xe2\x80\xa600AbLow lane equality.BjLanewise <code>a == b</code>, mask output.BbLow lane greater than or equal to.BdLanewise <code>a &amp;gt;= b</code>.AfLow lane greater than.BcLanewise <code>a &amp;gt; b</code>.AoLow lane less than or equal to.BdLanewise <code>a &amp;lt;= b</code>.AcLow lane less than.BcLanewise <code>a &amp;lt; b</code>.AmLanewise <code>a != b</code>.BgLanewise <code>!(a &amp;gt;= b)</code>.BfLanewise <code>!(a &amp;gt; b)</code>.BgLanewise <code>!(a &amp;lt;= b)</code>.BfLanewise <code>!(a &amp;lt; b)</code>.DhCompare <code>f64</code> lanes according to the operation specified, \xe2\x80\xa60FiReturns the ASCII representation as a <code>&amp;&#39;static str</code>, or <code>&quot;&quot;</code> \xe2\x80\xa6BfCompile-time <code>decode_srgb</code>.0ClReturns the duration between this and an earlier instant \xe2\x80\xa6BfCompile-time <code>encode_srgb</code>.0EdCounts the number of 0s in <code>self</code> from the <code>[start..=end]</code> \xe2\x80\xa600000000000EfDecodes <code>input</code> into <code>output</code>, returning the number of bytes \xe2\x80\xa6000000000AnBuild a custom static hashmap.0ChConfigures a feature as deprecated, warning if it is \xe2\x80\xa60DdReturns the digital root in in the given absolute <code>base</code>.00000000000CkPerforms a dot product of two <code>m128d</code> registers.CfReturns the file path of a dropped file, if available.DiDetermines the number of terms needed for <code>exp2_series</code> to \xe2\x80\xa60ChExposes the \xe2\x80\x9cprovenance\xe2\x80\x9d part of the pointer for \xe2\x80\xa6DcClones and appends all elements in a slice to the <code>Vec</code>.CjWrites the prime factors in the given <code>buffer</code>.00000000000DdIf <code>true</code>, the framebuffer includes an alpha channel. \xe2\x80\xa60EeReturns a string from an array of <code>bytes</code>, truncated to <code>n</code> \xe2\x80\xa6000Eg<em>const</em> method equivalent to <code>From&lt;InvalidChar&gt; for TextError</code>.Bg<em>const</em> method equivalent to \xe2\x80\xa6Eg<em>const</em> method equivalent to <code>From&lt;InvalidUtf8&gt; for TextError</code>.1CcRetuns the path of <code>CARGO_MANIFEST_DIR</code>.EhReturns a weekday from its index, from <code>Monday=0</code> to <code>Sunday=6</code>\xe2\x80\xa6DhCreates a new instance of an <code>Error</code> from a particular OS \xe2\x80\xa6DoCreates a <code>Vec&lt;T, A&gt;</code> directly from a pointer, a length, a \xe2\x80\xa6DlCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBB</code> format.EdCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format, \xe2\x80\xa610EgCreate from a packed <code>u32</code> in <code>0xRRGGBBAA</code> format, discarding \xe2\x80\xa6EeCreate from a packed <code>u32</code> in <code>0xRRGGBBAA</code> format (big-endian).10EhReturns a weekday from its index, from <code>Sunday=0</code> to <code>Monday=6</code>\xe2\x80\xa6DdCreates an ASCII character from the byte <code>b</code>, without \xe2\x80\xa6CoAttempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.DaCreates a <code>Point</code> from a constant <code>Vector</code>.EeGets the bits in <code>self</code> from the <code>[start..=end]</code> checked range.00000000000D`Gets a copy of <code>self</code> with only the bits from the \xe2\x80\xa600CmReturns the hash value with lazy mod mapping to the given \xe2\x80\xa6000ChWhether the aspect ratio is maintained on window resize.ClReturns the key-value pair corresponding to the supplied \xe2\x80\xa6CnReturns an exclusive reference to the element at the given \xe2\x80\xa60DkReturns a mutable reference into the given <code>Rc</code>, without any \xe2\x80\xa6CfReturns a reference to the element at the given 2D \xe2\x80\xa60ClReturns a raw pointer to an element or subslice, without \xe2\x80\xa6DeGets a mutable reference to the data inside of this <code>Pin</code>.CnDefines a constant for every given identifier with a value \xe2\x80\xa60EfCreates a mismatch where <code>need</code> is an <code>Interval::empty</code>, but \xe2\x80\xa6EfCreates a mismatch where <code>need</code> is an <code>Interval::point</code>, and \xe2\x80\xa6DnReturns the weekday index from <code>Monday=0</code> to <code>Sunday=6</code>.DnReturns the weekday index from <code>Sunday=0</code> to <code>Monday=6</code>.CcReturns the quotient, rounding ties away from zero.00CkReturns the quotient, rounding ties to the nearest even \xe2\x80\xa600AjReturns the prime factors.00EfComputes the non-negative modulo of <code>self</code> over |<code>modulus</code>|, \xe2\x80\xa600BaCalls `NumInt::int_ref_div_floor.00ChSimilar to int_div_floor, but operates on references \xe2\x80\xa600BaCalls `NumInt::int_ref_factorial.00ChSimilar to int_factorial, but operates on references \xe2\x80\xa600BaCalls `NumInt::int_ref_is_square.00ChSimilar to int_is_square, but operates on references \xe2\x80\xa600BaCalls `NumInt::int_ref_prime_nth.00ChSimilar to int_prime_nth, but operates on references \xe2\x80\xa600BaCalls `NumInt::int_ref_root_ceil.00ChSimilar to int_root_ceil, but operates on references \xe2\x80\xa600BaCalls `NumInt::int_ref_sqrt_ceil.00ChSimilar to int_sqrt_ceil, but operates on references \xe2\x80\xa600DdConverts this <code>OsString</code> into a boxed <code>OsStr</code>.EhReturn a <code>HashMap</code> of keys mapped to <code>Vec</code>s of values. The key \xe2\x80\xa600DjConstructs a <code>GroupingMap</code> to be used later with one of the \xe2\x80\xa600BoWhether the <code>Variant0</code> field is set.BoWhether the <code>Variant1</code> field is set.BoWhether the <code>Variant2</code> field is set.BoWhether the <code>Variant3</code> field is set.BoWhether the <code>Variant4</code> field is set.DkReturns <code>true</code> if the address is a globally routable unicast \xe2\x80\xa6E`Determines if <code>File</code> has an efficient <code>write_vectored</code> \xe2\x80\xa6EgDetermines if this <code>Write</code>r has an efficient <code>write_vectored</code> \xe2\x80\xa600DaExecutes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.DcExecutes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.CgSort the k largest elements into a new iterator, in \xe2\x80\xa600CkReturn the elements producing the k smallest outputs of \xe2\x80\xa600CjLoad data from memory into a register according to a mask.0ChLoads the reference into a register with reversed order.CcConstructs a new pin by mapping the interior value.Cf(measureTextFull) Measures all available text metrics.DgComputes the non-negative modulo of <code>self + other</code> over |\xe2\x80\xa60EgComputes the modulo of <code>self + other</code> over <code>modulus</code>, and the \xe2\x80\xa6011001100111110000100EgComputes the modulo of <code>self - other</code> over <code>modulus</code>, and the \xe2\x80\xa6DgComputes the non-negative modulo of <code>self - other</code> over |\xe2\x80\xa61110001001DhGets the value of the <code>IP_MULTICAST_LOOP</code> option for this \xe2\x80\xa6DjGets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this \xe2\x80\xa6CiConstruct from a <code>str</code> using a provided bufferCnReturns the smallest power of two greater than or equal to \xe2\x80\xa600000DiProvides a default error if the <code>Option</code> is <code>None</code>.0CdDuplicates the top stack element, unchecked version.CnDrops the next of stack element in compile-time, unchecked \xe2\x80\xa6CiPops the top stack element in compile-time, unchecked \xe2\x80\xa6CnRotates the top three stack elements, clockwise, unchecked \xe2\x80\xa6DdReturns an exclusive reference to the <code>nth</code> back element.Ca(query) Queries the status of a given permission.DiLike <code>println</code>, but panics on failure instead of returning \xe2\x80\xa6EhReturns an exclusive subslice from <code>start</code> (inclusive) to <code>end</code>\xe2\x80\xa6DcLow lane <code>1.0 / a</code> approximation, other lanes unchanged.CnReduces the given value to a chain of appropriate prefixes \xe2\x80\xa60ClReduces the given value to a chain of appropriate binary \xe2\x80\xa6ChReduces the given value to a chain of appropriate SI \xe2\x80\xa6E`Unwraps the contained <code>Ok(state)</code> or provides a <code>default</code>.EbUnwraps the contained <code>Some(state)</code> or provides a <code>default</code>.E`Wraps the <code>state</code> field into an <code>Option</code>, in compile-time.EhSets the bits in <code>self</code> to 1, from the <code>[start..=end]</code> checked \xe2\x80\xa600000000000CoGet a copy of <code>self</code> with bits set to 1 from the \xe2\x80\xa600CjSet whether to <code>interpolate</code> the scaled pixels.DgSet whether to <code>maintain</code> the aspect ratio on window resize.1CbSets a panic handler based on the chosen strategy.0DcSets the args into an <code>m128</code>, first arg is the low lane.CiSet <code>f32</code> args into an <code>m256</code> lane.C`Sets the write timeout to the timeout specified.0EgShift all <code>u16</code> lanes to the left by the <code>count</code> in the lower \xe2\x80\xa6EnLanewise <code>u16</code> shift left by the lower <code>u64</code> lane of <code>count</code>.EgShift all <code>u32</code> lanes to the left by the <code>count</code> in the lower \xe2\x80\xa6EoShift all <code>u32</code> lanes left by the lower <code>u64</code> lane of <code>count</code>.EgShift all <code>u64</code> lanes to the left by the <code>count</code> in the lower \xe2\x80\xa6EoShift all <code>u64</code> lanes left by the lower <code>u64</code> lane of <code>count</code>.CgShifts all <code>u16</code> lanes left by an immediate.0CgShifts all <code>u32</code> lanes left by an immediate.0ChShifts both <code>u64</code> lanes left by an immediate.CgShifts all <code>u64</code> lanes left by an immediate.EhShift each <code>i16</code> lane to the right by the <code>count</code> in the lower \xe2\x80\xa6EoLanewise <code>i16</code> shift right by the lower <code>i64</code> lane of <code>count</code>.EhShift each <code>i32</code> lane to the right by the <code>count</code> in the lower \xe2\x80\xa6EoLanewise <code>i32</code> shift right by the lower <code>i64</code> lane of <code>count</code>.EhShift each <code>u16</code> lane to the right by the <code>count</code> in the lower \xe2\x80\xa6EoLanewise <code>u16</code> shift right by the lower <code>u64</code> lane of <code>count</code>.EhShift each <code>u32</code> lane to the right by the <code>count</code> in the lower \xe2\x80\xa6EoLanewise <code>u32</code> shift right by the lower <code>u64</code> lane of <code>count</code>.EhShift each <code>u64</code> lane to the right by the <code>count</code> in the lower \xe2\x80\xa6EoLanewise <code>u64</code> shift right by the lower <code>u64</code> lane of <code>count</code>.ChShifts all <code>i16</code> lanes right by an immediate.CgShifts all <code>i16</code> lanes left by an immediate.ChShifts all <code>i32</code> lanes right by an immediate.CgShifts all <code>i32</code> lanes left by an immediate.ChShifts all <code>u16</code> lanes right by an immediate.0ChShifts all <code>u32</code> lanes right by an immediate.0CiShifts both <code>u64</code> lanes right by an immediate.ChShifts all <code>u64</code> lanes right by an immediate.DjReturns a middle subslice of <code>slice</code> with the given maximum \xe2\x80\xa60ChSplat the lowest <code>f32</code> across all four lanes.BcSplat the 128-bits across 256-bits.Bl<code>static_assertions</code> modificationsBhStores the value to the reference given.CkStore data from a register into memory according to a mask.0CkStores the low lane value to all lanes of the reference \xe2\x80\xa6CmRemoves an element from anywhere in the deque and returns \xe2\x80\xa6CfReturns the last <code>n</code> elements of the slice.CiConverts this C string to a byte slice containing the \xe2\x80\xa6CmTransforms each element in the chunk into a new chunk and \xe2\x80\xa6DkTries to create a timestamp from milliseconds. Returns <code>None</code>\xe2\x80\xa6CgReturns a time delta corresponding to the number of \xe2\x80\xa6CbThe checked version of <code>from_secs_f32</code>.1CbThe checked version of <code>from_secs_f64</code>.CkConstructs a new box with uninitialized contents in the \xe2\x80\xa6DhConstructs a new <code>Rc</code> with uninitialized contents, in the \xe2\x80\xa6DkConstructs a new <code>Box</code> with uninitialized contents, with the \xe2\x80\xa6DjConstructs a new <code>Rc</code> with uninitialized contents, with the \xe2\x80\xa6CfTries to reserve the minimum capacity for at least \xe2\x80\xa600DhInvokes <code>try_reserve_exact</code> on the underlying instance of \xe2\x80\xa611DcTries to convert this <code>char8</code> to <code>AsciiChar</code>.DdTries to convert this <code>char16</code> to <code>AsciiChar</code>.DhCreates an empty deque with space for at least <code>capacity</code> \xe2\x80\xa6EaConstructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified \xe2\x80\xa6DgCreates a new empty <code>String</code> with at least the specified \xe2\x80\xa6DfUnpack and interleave high lanes of <code>a</code> and <code>b</code>.EeReturns a copy of <code>self</code> unsetting the bit at <code>index</code>, checked.00DbA copy of <code>self</code> with the <code>FLAG1</code> field set.0DbA copy of <code>self</code> with the <code>FLAG2</code> field set.0DbA copy of <code>self</code> with the <code>MASK0</code> field set.0CkReturns the contained <code>Some</code> value or a default.ChReturns the contained <code>Ok</code> value or a defaultE`Unwraps the contained <code>Ok(value)</code> or provides a <code>default</code>.EbUnwraps the contained <code>Some(value)</code> or provides a <code>default</code>.E`Wraps the <code>value</code> field into an <code>Option</code>, in compile-time.CkPolls for the result of a JavaScript execution in a worker.CgZero extend an <code>m128d</code> to <code>m256d</code>CgZero extend an <code>m128i</code> to <code>m256i</code>ClReturns the main zodiac name, associated to the start of \xe2\x80\xa6AaInteger overflow.0CkReturns a slice with the code to move the cursor to the \xe2\x80\xa60BgCode to disable the alternative screen.Fa64-bit data <em>type</em>, restricted to <code>Copy</code> variants, with extra <code>T</code>\xe2\x80\xa60fU+00130CiCode to erase from the cursor to the start of the screen.AhExecutable file is busy.00Fb\xf0\x9f\x94\x80 <code>core</code> Create a default [<code>HasherBuild</code>] instance for <code>T:</code>\xe2\x80\xa60Bl\xf0\x9d\x9f\x99 \xf0\x9f\x9a\xa9 The given bounds are incompatible.BdThe given bounds are not compatible.010AdInvalid magic number00D`\xf0\x9f\x94\x84 <code>std</code> An iterator over the Components of a Path.0De\xf0\x9f\x94\x84 <code>itertools</code> An iterator that can be unzipped into \xe2\x80\xa60BfIncreases the microphone input volume.0Ck\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The given capacity did not match the required \xe2\x80\xa6Cf\xf0\x9f\x9a\xa9 The given capacity did not match the required \xe2\x80\xa6000100ChThe network containing the remote host is not reachable.00Dh<code>core</code> A marker trait which represents a shared reference \xe2\x80\xa60Ch<code>std</code> An iterator over the command arguments.0Dd<code>std</code> An iterator over the command environment variables.0Dk<code>std</code> A trait for implementing arbitrary return types in the \xe2\x80\xa60CnThe filesystem or storage medium is read-only, but a write \xe2\x80\xa600Dm\xf0\x9f\x9a\xa9 <code>core</code> An error returned by <code>RefCell::try_borrow</code>.0fU+005D0Ee\xf0\x9f\x95\x98\xf0\x9f\x9a\xa9 <code>std</code> Error returned from the <code>duration_since</code> and \xe2\x80\xa60Di<code>core</code> A virtual function pointer table that specifies the \xe2\x80\xa60Cc\xf0\x9f\x95\x98 A time split from milliseconds to nanoseconds.0AnPermission query result state.0ChSet a new scissor rectangle. Should be applied after \xe2\x80\xa60CeReturn an iterator adaptor that iterates over the \xe2\x80\xa600Bkstart rendering to the default frame buffer0CdBlend the lanes according to a runtime varying mask.0CiCaptures all the tokens except the first one, as a tuple.0ClCasts <code>self</code> to <code>i8</code> with range check.0D`Casts from <code>u32</code> to <code>i8</code> with range check.DaCasts from <code>i128</code> to <code>i8</code> with range check.CoCasts from <code>u8</code> to <code>i8</code> with range check.D`Casts from <code>i64</code> to <code>i8</code> with range check.D`Casts from <code>u16</code> to <code>i8</code> with range check.CoCasts from <code>i8</code> to <code>i8</code> with range check.DaCasts from <code>u128</code> to <code>i8</code> with range check.DbCasts from <code>usize</code> to <code>i8</code> with range check.DbCasts from <code>isize</code> to <code>i8</code> with range check.D`Casts from <code>i16</code> to <code>i8</code> with range check.D`Casts from <code>u64</code> to <code>i8</code> with range check.D`Casts from <code>i32</code> to <code>i8</code> with range check.ClCasts <code>self</code> to <code>u8</code> with range check.0CoCasts from <code>i8</code> to <code>u8</code> with range check.DbCasts from <code>isize</code> to <code>u8</code> with range check.D`Casts from <code>i64</code> to <code>u8</code> with range check.D`Casts from <code>i16</code> to <code>u8</code> with range check.D`Casts from <code>u64</code> to <code>u8</code> with range check.CoCasts from <code>u8</code> to <code>u8</code> with range check.D`Casts from <code>u16</code> to <code>u8</code> with range check.D`Casts from <code>u32</code> to <code>u8</code> with range check.D`Casts from <code>i32</code> to <code>u8</code> with range check.DaCasts from <code>i128</code> to <code>u8</code> with range check.DbCasts from <code>usize</code> to <code>u8</code> with range check.DaCasts from <code>u128</code> to <code>u8</code> with range check.BcLow lane <code>f64</code> equal to.CdLow lane <code>a == b</code>, other lanes unchanged.CcLow lane <code>f64</code> greater than or equal to.CkLow lane <code>a &amp;gt;= b</code>, other lanes unchanged.BgLow lane <code>f64</code> greater than.CjLow lane <code>a &amp;gt; b</code>, other lanes unchanged.C`Low lane <code>f64</code> less than or equal to.CkLow lane <code>a &amp;lt;= b</code>, other lanes unchanged.BdLow lane <code>f64</code> less than.CjLow lane <code>a &amp;lt; b</code>, other lanes unchanged.AfLow lane not equal to.AmLanewise <code>a != b</code>.BgLanewise <code>!(a &amp;gt;= b)</code>.BfLanewise <code>!(a &amp;gt; b)</code>.BgLanewise <code>!(a &amp;lt;= b)</code>.BfLanewise <code>!(a &amp;lt; b)</code>.DhCompare <code>f32</code> lanes according to the operation specified, \xe2\x80\xa6DiConverts the Unicode scalar <code>code</code> to a UTF-8 encoded byte \xe2\x80\xa6BbReturns <code>NotSupported</code>.DgReturns <code>NotSupported</code> since a fixed-size array is never \xe2\x80\xa611EeReturns <code>true</code> if the collection is full, <code>false</code> if it\xe2\x80\x99s \xe2\x80\xa600Cd(contentType) Returns the document\xe2\x80\x99s content type.DhReturns the default value for this type, or <code>None</code> if not \xe2\x80\xa60DfReturns whether the specific value for this type is <code>Copy</code>.ChReturns whether the specific value is <code>Copy</code>.10CjForces the lock to be released without dropping the guard.CeGet the next-lowest <code>Level</code> from this one.CkGet the next-lowest <code>LevelFilter</code> from this one.BeDowncasts the box to a concrete type.00D`Downcasts the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.ClReturns the contents of a dropped file as a byte vector, \xe2\x80\xa6CcReturns the number of files that have been dropped.ChReturns the required output buffer size for encoding \xe2\x80\xa6000000000Dk(addEventListener) Attaches a Rust function <code>event</code> listener \xe2\x80\xa6DfGiven a range <code>src</code>, clones a slice of elements in that \xe2\x80\xa6DeCopies elements from <code>src</code> range to the end of the string.CnReturns the multiplication factor for the binary prefix as \xe2\x80\xa6DhWrites the proper factors in <code>fbuf</code>, and the unique prime \xe2\x80\xa600000000000EcFlips the bits in <code>self</code> from the <code>[start..=end]</code> checked \xe2\x80\xa600000000000DbReturns a copy of <code>self</code> with flipped bits from the \xe2\x80\xa600Ej<em>const</em> method equivalent to <code>From&lt;DataOverflow&gt; for TimeError</code>\xe2\x80\xa6Bg<em>const</em> method equivalent to \xe2\x80\xa6Eamethod equivalent to <code>From&lt;InvalidValue&gt; for NicheValueError</code>\xe2\x80\xa6CdRetuns the path of <code>CARGO_MANIFEST_PATH</code>.DjReturns a weekday from its counting number, from <code>Monday=1</code> \xe2\x80\xa6CfConverts a mutable reference to a non-zero mutable \xe2\x80\xa64Eg<em>const</em> method equivalent to <code>From&lt;NotSupported&gt; for IntError</code>.CeForms an exclusive slice from a pointer and a length.EdCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format, \xe2\x80\xa6EcCreate from a packed <code>u64</code> in <code>0xRRRRGGGGBBBBAAAA</code> format \xe2\x80\xa610DjReturns a weekday from its counting number, from <code>Sunday=1</code> \xe2\x80\xa6E`Decode a UTF-16BE\xe2\x80\x93encoded slice <code>v</code> into a <code>String</code>, \xe2\x80\xa6E`Decode a UTF-16LE\xe2\x80\x93encoded slice <code>v</code> into a <code>String</code>, \xe2\x80\xa6CmCreates a C-compatible string by consuming a byte vector, \xe2\x80\xa6BgLanewise fused <code>(a * b) + c</code>0BgLanewise fused <code>(a * b) - c</code>0DhReturns the number of IDs generated so far with <code>Relaxed</code> \xe2\x80\xa6CnReturns a clone of the element at the given 2D coordinates \xe2\x80\xa6DnA copy of <code>self</code> with only the bits of <code>Variant0</code> field.DnA copy of <code>self</code> with only the bits of <code>Variant1</code> field.DnA copy of <code>self</code> with only the bits of <code>Variant2</code> field.DnA copy of <code>self</code> with only the bits of <code>Variant3</code> field.DnA copy of <code>self</code> with only the bits of <code>Variant4</code> field.CjReturns the hash value with retried mod mapping to the \xe2\x80\xa6000DjInserts a value computed from <code>f</code> into the set if the given \xe2\x80\xa60DiInserts a value computed from <code>f</code> into the option if it is \xe2\x80\xa68BbSignals a memory allocation error.Cg(pushState) Adds an entry to the session history stack.Dgproc Returns the numbers of both <em>total</em> and <em>unique</em> \xe2\x80\xa60AoCreates an NxN identity matrix.0000000EgCreates a mismatch where <code>need</code> is an <code>Interval::closed</code>, and \xe2\x80\xa6CfGet the next-highest <code>Level</code> from this one.ClGet the next-highest <code>LevelFilter</code> from this one.C`Inserts an <code>i8</code> to <code>m256i</code>AkReturns the proper factors.00BhCalculates the modular additive inverse.00BnCalculates the modular multiplicative inverse.00BbCalls `NumInt::int_ref_modulo_add.00CiSimilar to int_modulo_add, but operates on references \xe2\x80\xa600BbCalls `NumInt::int_ref_modulo_div.00CiSimilar to int_modulo_div, but operates on references \xe2\x80\xa600BbCalls `NumInt::int_ref_modulo_mul.00CiSimilar to int_modulo_mul, but operates on references \xe2\x80\xa600BbCalls `NumInt::int_ref_modulo_sub.00CiSimilar to int_modulo_sub, but operates on references \xe2\x80\xa600BbCalls `NumInt::int_ref_root_floor.00CiSimilar to int_root_floor, but operates on references \xe2\x80\xa600BbCalls `NumInt::int_ref_scale_wrap.00CiSimilar to int_scale_wrap, but operates on references \xe2\x80\xa600BbCalls `NumInt::int_ref_sqrt_floor.00CiSimilar to int_sqrt_floor, but operates on references \xe2\x80\xa600BbCalls `NumInt::int_ref_sqrt_round.00CiSimilar to int_sqrt_round, but operates on references \xe2\x80\xa600DjConverts the <code>OsString</code> into a byte vector.  To convert the \xe2\x80\xa6DhReturns a tuple with <code>Some(value)</code> for the active variant \xe2\x80\xa6CnWhether the bit at <code>index</code> is set, checked version.00DbReturns <code>self</code> with only the least significant bit set.00000000000ChSort the k smallest elements into a new iterator, in \xe2\x80\xa600DbExecutes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.DdExecutes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.ChLoads the reference into a register with reversed order.DeReturns a new bitmask of ones from the <code>[start..=end]</code> \xe2\x80\xa600000000000000DhReturns the value of type <code>T</code> represented by the all-zero \xe2\x80\xa600DkThe module path of the message, if it is a <code>&#39;static</code> string.EcMove the high lanes of <code>b</code> to the low lanes of <code>a</code>, other \xe2\x80\xa6EcMove the low lanes of <code>b</code> to the high lanes of <code>a</code>, other \xe2\x80\xa6CbGathers the <code>i8</code> sign bit of each lane.DnCreate an <code>i32</code> mask of each sign bit in the <code>i8</code> lanes.DeOnly leaves the bits both in <code>self</code> and <code>mask</code>.00EbGenerates a unique <code>ExampleIdSeqUsize</code> ID with <code>Relaxed</code> \xe2\x80\xa6C`Computes <code>&amp;mut self += &amp;rhs</code>.00CgComputes <code>&amp;mut self += rhs;</code> (addition).00C`Computes <code>&amp;mut self /= &amp;rhs</code>.00CgComputes <code>&amp;mut self /= rhs;</code> (division).00C`Computes <code>&amp;mut self *= &amp;rhs</code>.00CmComputes <code>&amp;mut self *= rhs;</code> (multiplication).00C`Computes <code>&amp;mut self %= &amp;rhs</code>.00ChComputes <code>&amp;mut self %= rhs;</code> (remainder).00C`Computes <code>&amp;mut self -= &amp;rhs</code>.00CjComputes <code>&amp;mut self -= rhs;</code> (subtraction).00DoReturns the weekday number from <code>Monday=1</code> to <code>Sunday=7</code>.DoReturns the weekday number from <code>Sunday=1</code> to <code>Monday=7</code>.CkEnsures a value is in the entry by inserting, if empty, \xe2\x80\xa60CiSwaps the top two pair stack elements, unchecked version.ChDuplicates the top stack pair of elements, unchecked \xe2\x80\xa6CiDrops the pair of next stack elements, unchecked version.C`Duplicates the next of stack element to the top.CjPeeks the top stack element in compile-time, unchecked \xe2\x80\xa6D`Pushes a new <code>element</code> to the top of the stack in \xe2\x80\xa6ClConverts the current stack to a different capacity while \xe2\x80\xa6CmRotates the top six stack elements, clockwise, two times, \xe2\x80\xa6CeSwaps the top two stack elements in compile-time, \xe2\x80\xa6CgDuplicates the top element before the next of stack \xe2\x80\xa6DkReturns the amount of padding we must insert after <code>self</code> to \xe2\x80\xa6DfReorders the elements of this iterator <em>in-place</em> according \xe2\x80\xa600DeReturns an exclusive reference to the <code>nth</code> front element.CnReturn an iterator adaptor that borrows from this iterator \xe2\x80\xa600CnReturn the postions of the minimum and maximum elements of \xe2\x80\xa600DbPushes a new <code>element</code> to the back of the destaque, \xe2\x80\xa6DlSets the <code>quality</code> field to <code>SixelQuality::HighColor</code>.DdReturns a subslice starting from the given <code>start</code> index.DhReturns a subslice up to and including the given <code>end</code> index.CjReturns a subslice up to the given <code>end</code> index.DfAllocates a <code>String</code> by calling a JS-backed FFI fn that \xe2\x80\xa6BlReturns the destaque\xe2\x80\x99s remaining capacity.BiReturns the stack\xe2\x80\x99s remaining capacity.AoReturns the remaining capacity.BhReturns the remaining capacity in bytes.00011DgReturns the number of remaining IDs with <code>Relaxed</code> ordering.Cj(availWidth) (availHeight) The extent of the screen in \xe2\x80\xa60CgSets the element at the given 2D coordinates in the \xe2\x80\xa6DeA copy of <code>self</code> with the <code>Variant0</code> field set.DeA copy of <code>self</code> with the <code>Variant1</code> field set.DeA copy of <code>self</code> with the <code>Variant2</code> field set.DeA copy of <code>self</code> with the <code>Variant3</code> field set.DeA copy of <code>self</code> with the <code>Variant4</code> field set.DdSets the args into an <code>m128d</code>, first arg is the low lane.CjSet <code>f64</code> args into an <code>m256d</code> lane.7DbSplats the <code>i8</code> to all lanes of the <code>m128i</code>.CmSplat an <code>i8</code> arg into an <code>m256i</code> lane.DeShift <code>u32</code> values to the left by <code>count</code> bits.FaLanewise <code>u32</code> shift left by the matching <code>i32</code> lane in <code>count</code>.DeShift <code>u64</code> values to the left by <code>count</code> bits.FaLanewise <code>u64</code> shift left by the matching <code>u64</code> lane in <code>count</code>.DfShift <code>i32</code> values to the right by <code>count</code> bits.FbLanewise <code>i32</code> shift right by the matching <code>i32</code> lane in <code>count</code>.5FbLanewise <code>u32</code> shift right by the matching <code>u32</code> lane in <code>count</code>.4FbLanewise <code>u64</code> shift right by the matching <code>i64</code> lane in <code>count</code>.DjReturns a middle subslice of <code>slice</code> with the given maximum \xe2\x80\xa60FfTries to convert <code>&amp;[T]</code> to <code>Vec&lt;U&gt;</code> when <code>U</code> implements \xe2\x80\xa60CeSort all iterator elements into a new iterator in \xe2\x80\xa600CkReturns the remaining spare capacity of the vector as a \xe2\x80\xa6DgReturns vector content as a slice of <code>T</code>, along with the \xe2\x80\xa6Bm<code>stated-scope-guard</code> modificationsCbStores the high lane value to the reference given.CkStore data from a register into memory according to a mask.0CiStores the value to the reference given in reverse order.CgReturns the first <code>n</code> elements of the slice.DfReturns the exclusive slice omitting the last <code>n</code> elements.CiReturns a copy of this string where each character is \xe2\x80\xa6CeMakes a copy of the value in its ASCII lower case \xe2\x80\xa6001CeMakes a copy of the value in its ASCII upper case \xe2\x80\xa600DfConverts this address to an IPv4-compatible <code>IPv6</code> address.ClConverts to gamma-encoded luma using the specified gamma \xe2\x80\xa60000000D`Returns a subslice without the given leading <code>byte</code>s.CeReturn an iterator adaptor that iterates over the \xe2\x80\xa600EcDecodes a UTF-8 code point from <code>bytes</code>, starting at <code>index</code>.ChWaits on this condition variable for a notification, \xe2\x80\xa6CkCreates a pointer with the given address and no provenance.DdCreates a pointer with the given address and no <em>provenance</em>.BiCancels an ongoing JavaScript evaluation.CdAttempts to write multiple buffers into this writer.00AoProgram argument list too long.00Ed64-bit data <em>value</em>, restricted to <code>Copy</code> variants, with extra \xe2\x80\xa60Dg\xf0\x9f\x94\x84 <code>core</code> An iterator able to yield elements from both \xe2\x80\xa60De\xf0\x9f\x94\x84 <code>itertools</code> An iterator that allows peeking at an \xe2\x80\xa60Bh<code>LinuxTermios</code> control flags.0Bf<code>LinuxTermios</code> input flags.0Bf<code>LinuxTermios</code> local flags.0Bg<code>LinuxTermios</code> output flags.0fU+00150Bk\xf0\x9d\x9f\x99 \xf0\x9f\x9a\xa9 A non-negative value is required.Bf\xf0\x9f\x9a\xa9 A non-negative value is required.BaA non-negative value is required.0210Dh<code>std</code> Wraps a Windows path prefix as well as its unparsed \xe2\x80\xa60AlBlock all symlink traversal.CfTrait defining essential wavelet transform operations.0EcAdd each lane horizontally, pack the outputs as <code>a</code> then <code>b</code>.BdAdd adjacent <code>f32</code> lanes.AmAlphabetic baseline position.0CeReturns a unique reference to a slice of possibly \xe2\x80\xa6DbGets the rightwards shifted bits in <code>self</code> from the \xe2\x80\xa60EgSets the given <code>value</code> into the bits from the <code>[start..=end]</code> \xe2\x80\xa60CdThe size in bits of the <code>Variant0</code> field.CdThe size in bits of the <code>Variant1</code> field.CdThe size in bits of the <code>Variant2</code> field.CdThe size in bits of the <code>Variant3</code> field.CdThe size in bits of the <code>Variant4</code> field.DbBlends the <code>i16</code> lanes according to the immediate mask.DcBlends the <code>i16</code> lanes according to the immediate value.EkBlends the <code>i32</code> lanes in <code>a</code> and <code>b</code> into a single value.DcBlends the <code>i32</code> lanes according to the immediate value.CdBlend the lanes according to a runtime varying mask.0DjWhether the event loop should block until <code>schedule_update</code> \xe2\x80\xa6EhReturns <code>true</code> if the event loop blocks until <code>schedule_update</code>\xe2\x80\xa6EfIf <code>true</code>, the event loop will block until <code>schedule_update</code> \xe2\x80\xa60DhConverts an <code>Rgb</code> into unweighted brightness by averaging \xe2\x80\xa6000CmCasts <code>self</code> to <code>i16</code> with range check.0D`Casts from <code>i8</code> to <code>i16</code> with range check.DaCasts from <code>i64</code> to <code>i16</code> with range check.DbCasts from <code>i128</code> to <code>i16</code> with range check.DcCasts from <code>usize</code> to <code>i16</code> with range check.DaCasts from <code>i32</code> to <code>i16</code> with range check.DaCasts from <code>i16</code> to <code>i16</code> with range check.DbCasts from <code>u128</code> to <code>i16</code> with range check.D`Casts from <code>u8</code> to <code>i16</code> with range check.DcCasts from <code>isize</code> to <code>i16</code> with range check.DaCasts from <code>u64</code> to <code>i16</code> with range check.DaCasts from <code>u32</code> to <code>i16</code> with range check.DaCasts from <code>u16</code> to <code>i16</code> with range check.CmCasts <code>self</code> to <code>i32</code> with range check.0DbCasts from <code>u128</code> to <code>i32</code> with range check.DaCasts from <code>i32</code> to <code>i32</code> with range check.DaCasts from <code>u32</code> to <code>i32</code> with range check.DbCasts from <code>i128</code> to <code>i32</code> with range check.D`Casts from <code>i8</code> to <code>i32</code> with range check.DaCasts from <code>i16</code> to <code>i32</code> with range check.D`Casts from <code>u8</code> to <code>i32</code> with range check.DcCasts from <code>usize</code> to <code>i32</code> with range check.DaCasts from <code>u16</code> to <code>i32</code> with range check.DcCasts from <code>isize</code> to <code>i32</code> with range check.DaCasts from <code>i64</code> to <code>i32</code> with range check.DaCasts from <code>u64</code> to <code>i32</code> with range check.CmCasts <code>self</code> to <code>i64</code> with range check.0DaCasts from <code>u64</code> to <code>i64</code> with range check.DaCasts from <code>i16</code> to <code>i64</code> with range check.DaCasts from <code>i32</code> to <code>i64</code> with range check.DbCasts from <code>i128</code> to <code>i64</code> with range check.D`Casts from <code>i8</code> to <code>i64</code> with range check.D`Casts from <code>u8</code> to <code>i64</code> with range check.DcCasts from <code>usize</code> to <code>i64</code> with range check.DcCasts from <code>isize</code> to <code>i64</code> with range check.DaCasts from <code>u32</code> to <code>i64</code> with range check.DbCasts from <code>u128</code> to <code>i64</code> with range check.DaCasts from <code>u16</code> to <code>i64</code> with range check.DaCasts from <code>i64</code> to <code>i64</code> with range check.CmCasts <code>self</code> to <code>u16</code> with range check.0DaCasts from <code>i32</code> to <code>u16</code> with range check.DcCasts from <code>usize</code> to <code>u16</code> with range check.DbCasts from <code>i128</code> to <code>u16</code> with range check.D`Casts from <code>u8</code> to <code>u16</code> with range check.DaCasts from <code>u64</code> to <code>u16</code> with range check.DaCasts from <code>u32</code> to <code>u16</code> with range check.D`Casts from <code>i8</code> to <code>u16</code> with range check.DaCasts from <code>i16</code> to <code>u16</code> with range check.DcCasts from <code>isize</code> to <code>u16</code> with range check.DaCasts from <code>u16</code> to <code>u16</code> with range check.DaCasts from <code>i64</code> to <code>u16</code> with range check.DbCasts from <code>u128</code> to <code>u16</code> with range check.CmCasts <code>self</code> to <code>u32</code> with range check.0D`Casts from <code>i8</code> to <code>u32</code> with range check.DaCasts from <code>i64</code> to <code>u32</code> with range check.D`Casts from <code>u8</code> to <code>u32</code> with range check.DaCasts from <code>i16</code> to <code>u32</code> with range check.DaCasts from <code>u32</code> to <code>u32</code> with range check.DbCasts from <code>u128</code> to <code>u32</code> with range check.DcCasts from <code>isize</code> to <code>u32</code> with range check.DaCasts from <code>u16</code> to <code>u32</code> with range check.DcCasts from <code>usize</code> to <code>u32</code> with range check.DaCasts from <code>u64</code> to <code>u32</code> with range check.DaCasts from <code>i32</code> to <code>u32</code> with range check.DbCasts from <code>i128</code> to <code>u32</code> with range check.CmCasts <code>self</code> to <code>u64</code> with range check.0DaCasts from <code>i64</code> to <code>u64</code> with range check.D`Casts from <code>i8</code> to <code>u64</code> with range check.DaCasts from <code>u16</code> to <code>u64</code> with range check.D`Casts from <code>u8</code> to <code>u64</code> with range check.DaCasts from <code>i16</code> to <code>u64</code> with range check.DcCasts from <code>isize</code> to <code>u64</code> with range check.DaCasts from <code>u64</code> to <code>u64</code> with range check.DaCasts from <code>u32</code> to <code>u64</code> with range check.DaCasts from <code>i32</code> to <code>u64</code> with range check.DcCasts from <code>usize</code> to <code>u64</code> with range check.DbCasts from <code>u128</code> to <code>u64</code> with range check.DbCasts from <code>i128</code> to <code>u64</code> with range check.CdLow lane <code>a == b</code>, other lanes unchanged.CkLow lane <code>a &amp;gt;= b</code>, other lanes unchanged.CjLow lane <code>a &amp;gt; b</code>, other lanes unchanged.CkLow lane <code>a &amp;lt;= b</code>, other lanes unchanged.CiLow lane <code>a &amp;lt; b</code>, other lane unchanged.BdLow lane <code>f64</code> less than.CdLow lane <code>a != b</code>, other lanes unchanged.CnLow lane <code>!(a &amp;gt;= b)</code>, other lanes unchanged.CmLow lane <code>!(a &amp;gt; b)</code>, other lanes unchanged.CnLow lane <code>!(a &amp;lt;= b)</code>, other lanes unchanged.CmLow lane <code>!(a &amp;lt; b)</code>, other lanes unchanged.DhCompare <code>f64</code> lanes according to the operation specified, \xe2\x80\xa6BnLanewise <code>a.is_nan() | b.is_nan()</code>.BbReturns <code>NotSupported</code>.CmThe capacity of a fixed-size array is always equal to its \xe2\x80\xa611CeReturns the reserved capacity for elements in the \xe2\x80\xa6002DeThis is less efficent than <code>HashSet::contains</code> for not \xe2\x80\xa6DfThis is less efficent than <code>BTreeSet::contains</code> for not \xe2\x80\xa6EdReturns <code>true</code> if the collection contains the given <code>element</code>.00DgReturns <code>NotSupported</code> since a fixed-size array is never \xe2\x80\xa6EfReturns <code>true</code> if the collection is empty, <code>false</code> if it\xe2\x80\x99s \xe2\x80\xa600FjCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>dst</code>. Must \xe2\x80\xa6ClRemove duplicates from sections of consecutive identical \xe2\x80\xa600C`Create a new empty string with a provided bufferAjEnables focus change mode.CnGets an <code>m128i</code> value out of an <code>m256i</code>.BcReturns the count of prime factors.00000000000CnA file has been dropped over the application. Applications \xe2\x80\xa600CoFinds the index of the last 1 in <code>self</code> from the \xe2\x80\xa600000000000EaReturns a copy of <code>self</code> with the <code>Variant0</code> field flipped.EaReturns a copy of <code>self</code> with the <code>Variant1</code> field flipped.EaReturns a copy of <code>self</code> with the <code>Variant2</code> field flipped.EaReturns a copy of <code>self</code> with the <code>Variant3</code> field flipped.EaReturns a copy of <code>self</code> with the <code>Variant4</code> field flipped.CmCreates a C string wrapper from a byte slice with exactly \xe2\x80\xa6CgConverts a slice of bytes to a string slice without \xe2\x80\xa6DhConverts a vector of bytes to a <code>String</code> without checking \xe2\x80\xa6BgLanewise fused <code>(a * b) + c</code>0BgLanewise fused <code>(a * b) - c</code>0CjGets the low lane as an individual <code>f32</code> value.DkConverts the low lane to <code>i32</code> and extracts as an individual \xe2\x80\xa6CkCalculates the 1D array index from the given 2D coordinates0CkGets the mutable reference of the contents of the cell, \xe2\x80\xa60BhChecks if mutable-globals are available.EaInserts a lane from <code>$b</code> into <code>$a</code>, optionally at a new \xe2\x80\xa6CaInserts an <code>i16</code> to <code>m256i</code>CaInserts an <code>i32</code> to <code>m256i</code>CaInserts an <code>i64</code> to <code>m256i</code>ClInserts a new value for the <code>i64</code> lane specified.CaInserts an <code>m128</code> to <code>m256</code>BcCalls `NumInt::int_ref_combine_rep.00CjSimilar to int_combine_rep, but operates on references \xe2\x80\xa600BcCalls `NumInt::int_ref_digits_base.00CjSimilar to int_digits_base, but operates on references \xe2\x80\xa600BcCalls `NumInt::int_ref_digits_sign.00CjSimilar to int_digits_sign, but operates on references \xe2\x80\xa600BcCalls `NumInt::int_ref_factors_buf.00CjSimilar to int_factors_buf, but operates on references \xe2\x80\xa600BcCalls `NumInt::int_ref_permute_rep.00CjSimilar to int_permute_rep, but operates on references \xe2\x80\xa600ClAlternate elements from two iterators until at least one \xe2\x80\xa600DdEquivalent to <code>CString::into_bytes()</code> except that the \xe2\x80\xa6CnReturns a tuple with the active variant\xe2\x80\x99s inner value in \xe2\x80\xa6DfReturns <code>true</code> if operations on values of this type are \xe2\x80\xa6000000000000000DdWhether <code>self</code> is equal to <code>NUM_MAX_NEGATIVE</code>.00FdWhether <code>self</code> is equal to <code>Some(</code><code>NUM_MIN_POSITIVE</code><code>)</code>.00DaReturns <code>self</code> with only the most significant bit set.00000000000CoIterator over generated IDs with <code>Relaxed</code> ordering.Dh<code>core</code> Creates an iterator where each iteration calls the \xe2\x80\xa60DbLoads the <code>f32</code> reference into all lanes of a register.DkLoad an <code>f32</code> and splat it to all lanes of an <code>m256d</code>BdLoads the reference into a register.BfLoad data from memory into a register.CeAttempts to grow the default linear memory by the \xe2\x80\xa6DfOnly leaves the bits both in <code>self</code> and <code>other</code>.00BlSets the bit at <code>index</code>, checked.00BbSets the <code>FLAG1</code> field.0BbSets the <code>FLAG2</code> field.0BbSets the <code>MASK0</code> field.0EeSets the given <code>value</code> into the <code>[start..=end]</code> range. Sets \xe2\x80\xa600ClSame as \xe2\x80\x9cnew_render_pass\xe2\x80\x9d, but allows multiple color \xe2\x80\xa60ClConstructs a new boxed slice with uninitialized contents \xe2\x80\xa6CaConstructs a new reference-counted slice with \xe2\x80\xa610DfNormalize a path, including <code>..</code> without traversing the \xe2\x80\xa6CiDuplicates the next of stack pair of elements to the top.CjSwaps the top two pair stack elements in compile-time, \xe2\x80\xa6CjDuplicates the top pair of elements before the next of \xe2\x80\xa6CeReturn the position of the maximum element in the \xe2\x80\xa600CeReturn the position of the minimum element in the \xe2\x80\xa600BlUnchecked version of <code>push_back</code>.DcPushes a new <code>element</code> to the front of the destaque, \xe2\x80\xa6DnReturns a subslice from <code>start</code> (inclusive) to <code>end</code> \xe2\x80\xa6EhReturns an exclusive subslice from <code>start</code> (inclusive) to <code>end</code>\xe2\x80\xa6Cmpanics for depth-only or multiple color attachment render \xe2\x80\xa600DcSplats the <code>i16</code> to all lanes of the <code>m128i</code>.CnSplat an <code>i16</code> arg into an <code>m256i</code> lane.DcSplats the <code>i32</code> to all lanes of the <code>m128i</code>.CnSplat an <code>i32</code> arg into an <code>m256i</code> lane.DdSplats the <code>i64</code> to both lanes of the <code>m128i</code>.CnSplat an <code>i64</code> arg into an <code>m256i</code> lane.EmApplies the sign of <code>i8</code> values in <code>b</code> to the values in <code>a</code>.DaLanewise <code>a * signum(b)</code> with lanes as <code>i8</code>CdDetermines if the <code>0</code> flag was specified.CnTakes a substring based on a range that corresponds to the \xe2\x80\xa6DiSplat the lower <code>f64</code> across both lanes of <code>m128d</code>.DgSubtract each lane horizontally, pack the outputs as <code>a</code> \xe2\x80\xa6BiSubtract adjacent <code>f32</code> lanes.BlUnchecked version of <code>swap_back</code>.EhSwaps the two regions of memory beginning at <code>x</code> and <code>y</code>. Must \xe2\x80\xa6CfReturns the last <code>n</code> elements of the slice.AhTests if all bits are 1.CnTranspose four <code>m128</code> as if they were a 4x4 matrix.DkTries to create a timestamp from milliseconds. Returns <code>None</code>\xe2\x80\xa6CgReturns a time delta corresponding to the number of \xe2\x80\xa6EeUnpack and interleave low <code>i8</code> lanes of <code>a</code> and <code>b</code>.0EbUnsets the bits in <code>self</code> to 0, from the <code>[start..=end]</code> \xe2\x80\xa600000000000DeReturns a copy of <code>self</code> with unset bits to 0 from the \xe2\x80\xa600BlWebAssembly mouse event callback dispatcher.ClOn Wayland, specifies how to draw client-side decoration \xe2\x80\xa60DoReturns a new <code>ExampleEnumSet</code> with <code>Variant0</code> field set.DoReturns a new <code>ExampleEnumSet</code> with <code>Variant1</code> field set.DoReturns a new <code>ExampleEnumSet</code> with <code>Variant2</code> field set.DoReturns a new <code>ExampleEnumSet</code> with <code>Variant3</code> field set.DoReturns a new <code>ExampleEnumSet</code> with <code>Variant4</code> field set.BiSends a message to a specific Web Worker.DjCasts <code>self</code> to <code>i8</code> wrapping at the numeric bounds.0DnCasts from <code>i64</code> to <code>i8</code> wrapping at the numeric bounds.DnCasts from <code>i32</code> to <code>i8</code> wrapping at the numeric bounds.DmCasts from <code>u8</code> to <code>i8</code> wrapping at the numeric bounds.DnCasts from <code>u64</code> to <code>i8</code> wrapping at the numeric bounds.E`Casts from <code>isize</code> to <code>i8</code> wrapping at the numeric bounds.E`Casts from <code>usize</code> to <code>i8</code> wrapping at the numeric bounds.DoCasts from <code>i128</code> to <code>i8</code> wrapping at the numeric bounds.DmCasts from <code>i8</code> to <code>i8</code> wrapping at the numeric bounds.DnCasts from <code>u16</code> to <code>i8</code> wrapping at the numeric bounds.DoCasts from <code>u128</code> to <code>i8</code> wrapping at the numeric bounds.DnCasts from <code>i16</code> to <code>i8</code> wrapping at the numeric bounds.DnCasts from <code>u32</code> to <code>i8</code> wrapping at the numeric bounds.DjCasts <code>self</code> to <code>u8</code> wrapping at the numeric bounds.0E`Casts from <code>usize</code> to <code>u8</code> wrapping at the numeric bounds.DnCasts from <code>u64</code> to <code>u8</code> wrapping at the numeric bounds.DnCasts from <code>i64</code> to <code>u8</code> wrapping at the numeric bounds.DnCasts from <code>u32</code> to <code>u8</code> wrapping at the numeric bounds.DnCasts from <code>i16</code> to <code>u8</code> wrapping at the numeric bounds.DnCasts from <code>u16</code> to <code>u8</code> wrapping at the numeric bounds.DoCasts from <code>u128</code> to <code>u8</code> wrapping at the numeric bounds.E`Casts from <code>isize</code> to <code>u8</code> wrapping at the numeric bounds.DnCasts from <code>i32</code> to <code>u8</code> wrapping at the numeric bounds.DoCasts from <code>i128</code> to <code>u8</code> wrapping at the numeric bounds.DmCasts from <code>u8</code> to <code>u8</code> wrapping at the numeric bounds.DmCasts from <code>i8</code> to <code>u8</code> wrapping at the numeric bounds.CmWrites a length prefix into this hasher, as part of being \xe2\x80\xa600DeAn example created with <code>bitfield!</code>, with public extra \xe2\x80\xa6BfDecreases the microphone input volume.0Dj<code>miniquad</code> Defines how an application responds to events in \xe2\x80\xa60Cm\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The dimensions given did not match the elements \xe2\x80\xa60E`\xf0\x9f\x9a\xa9+ <code>std</code> Possible errors that made [<code>recv_timeout</code>][\xe2\x80\xa60CnThe maximum representable power of two within the type\xe2\x80\x99s \xe2\x80\xa60Eg\xf0\x9f\x9a\xa9 <code>std</code> An error returned from <code>Path::strip_prefix</code> if the \xe2\x80\xa60Df\xf0\x9f\x95\x98 A time split from hours to seconds, normalized <em>(128b </em>\xe2\x80\xa60Dc\xf0\x9f\x95\x98 A time split from years to days, normalized <em>(128b </em>\xe2\x80\xa60Df\xf0\x9f\x95\x98 A time split from years to seconds, normalized <em>(128b </em>\xe2\x80\xa60EcAdd each lane horizontally, pack the outputs as <code>a</code> then <code>b</code>.BdAdd adjacent <code>f64</code> lanes.DmReturns a tuple with <code>Some(&amp;value)</code> for the active variant \xe2\x80\xa6CcAsserts the approximate equality of a series of \xe2\x80\xa60DhAsserts that the memory alignment of the <code>Candidate</code> type \xe2\x80\xa60DdBinary searches this <code>VecDeque</code> with a key extraction \xe2\x80\xa6EdCounts the number of 1s in <code>bits</code> from the <code>[start..=end]</code> \xe2\x80\xa60FaAdds a <code>Duration</code> to this <code>TimeDelta</code>. Returns <code>None</code> if the \xe2\x80\xa6CnCasts <code>self</code> to <code>i128</code> with range check.0DaCasts from <code>u8</code> to <code>i128</code> with range check.DdCasts from <code>usize</code> to <code>i128</code> with range check.DbCasts from <code>u16</code> to <code>i128</code> with range check.DaCasts from <code>i8</code> to <code>i128</code> with range check.DdCasts from <code>isize</code> to <code>i128</code> with range check.DcCasts from <code>u128</code> to <code>i128</code> with range check.DcCasts from <code>i128</code> to <code>i128</code> with range check.DbCasts from <code>i32</code> to <code>i128</code> with range check.DbCasts from <code>i16</code> to <code>i128</code> with range check.DbCasts from <code>u64</code> to <code>i128</code> with range check.DbCasts from <code>i64</code> to <code>i128</code> with range check.DbCasts from <code>u32</code> to <code>i128</code> with range check.CnCasts <code>self</code> to <code>u128</code> with range check.0DbCasts from <code>i32</code> to <code>u128</code> with range check.DdCasts from <code>isize</code> to <code>u128</code> with range check.DbCasts from <code>u16</code> to <code>u128</code> with range check.DbCasts from <code>i16</code> to <code>u128</code> with range check.DcCasts from <code>u128</code> to <code>u128</code> with range check.DbCasts from <code>u32</code> to <code>u128</code> with range check.DbCasts from <code>u64</code> to <code>u128</code> with range check.DaCasts from <code>i8</code> to <code>u128</code> with range check.DbCasts from <code>i64</code> to <code>u128</code> with range check.DdCasts from <code>usize</code> to <code>u128</code> with range check.DaCasts from <code>u8</code> to <code>u128</code> with range check.DcCasts from <code>i128</code> to <code>u128</code> with range check.FdSubtracts a <code>Duration</code> from this <code>TimeDelta</code>. Returns <code>None</code> if \xe2\x80\xa6CkLanewise <code>a == b</code> with lanes as <code>i8</code>.ChCompare <code>i8</code> lanes for equality, mask output.DaLanewise <code>a &amp;gt; b</code> with lanes as <code>i8</code>.DiCompare <code>i8</code> lanes for <code>a &amp;gt; b</code>, mask output.DaLanewise <code>a &amp;lt; b</code> with lanes as <code>i8</code>.CcLow lane <code>a != b</code>, other lane unchanged.CmLow lane <code>!(a &amp;gt;= b)</code>, other lane unchanged.ClLow lane <code>!(a &amp;gt; b)</code>, other lane unchanged.CmLow lane <code>!(a &amp;lt;= b)</code>, other lane unchanged.ClLow lane <code>!(a &amp;lt; b)</code>, other lane unchanged.BnLanewise <code>a.is_nan() | b.is_nan()</code>.CaReturns a vector containing the color components.00DdReturns <code>true</code> if the alpha component is the absolute \xe2\x80\xa600BlReturns a copy of the next new random state.CkReturns whether all values represented by this type are \xe2\x80\xa6CaReturns whether all values are <code>Copy</code>.10ChReturns the required output buffer size for decoding \xe2\x80\xa6000000000AkDisables focus change mode.ClDrops the top of stack element, replacing the underlying \xe2\x80\xa6CiChecks that two strings are an ASCII case-insensitive \xe2\x80\xa6CfExtends the back of the destaque from an iterator, \xe2\x80\xa6BaReturns the unique prime factors.00000000000D`Finds the index of the first 1 in <code>self</code> from the \xe2\x80\xa600000000000CoFinds the index of the last 0 in <code>self</code> from the \xe2\x80\xa600000000000DkReturns a string from an array of <code>bytes</code> that must be valid \xe2\x80\xa60000CiCreates a C string wrapper from a byte slice with any \xe2\x80\xa6DoReturns a <code>Month</code> from its index, from <code>January=0</code> to \xe2\x80\xa6Bg<em>const</em> method equivalent to \xe2\x80\xa600CnLow lane fused <code>(a * b) + c</code>, other lanes unchangedCoLow lane fused <code>(a * b) - c</code>, other lanes unchanged.DgReturns the number of IDs generated so far with <code>SeqCst</code> \xe2\x80\xa6CkCalculates the 2D coordinates from the given 1D array index0CaGets the lower lane as an <code>f64</code> value.CeConverts the lower lane to an <code>i32</code> value.0CeConverts the lower lane to an <code>i64</code> value.0DeComputes a hash of a byte slice using a <strong>custom seed</strong>.00AnIdeographic baseline position.0ClInserts a new value for the <code>i32</code> lane specified.ClInserts a new value for the <code>i64</code> lane specified.ClReturns the number of digits in the given <code>base</code>.00CfReturns the quotient, rounding ties towards from zero.00BdCalls `NumInt::int_ref_digital_root.00CkSimilar to int_digital_root, but operates on references \xe2\x80\xa600BdCalls `NumInt::int_ref_div_ties_odd.00CkSimilar to int_div_ties_odd, but operates on references \xe2\x80\xa600BdCalls `NumInt::int_ref_subfactorial.00CkSimilar to int_subfactorial, but operates on references \xe2\x80\xa600DjConstructs a <code>GroupingMap</code> to be used later with one of the \xe2\x80\xa600EdUnwraps this <code>Pin&lt;Ptr&gt;</code>, returning the underlying <code>Ptr</code>.CmSort the k largest elements into a new iterator using the \xe2\x80\xa600DoReturns a mutable reference to the <strong>linear-light perceptual</strong> \xe2\x80\xa60000000DbLoads the <code>f64</code> reference into all lanes of a register.DkLoad an <code>f64</code> and splat it to all lanes of an <code>m256d</code>DiLoad an <code>m128</code> and splat it to the lower and upper half of \xe2\x80\xa6BdLoads the reference into a register.0BfLoad data from memory into a register.0CkConverts this string to its ASCII lower case equivalent \xe2\x80\xa6CkConverts this string to its ASCII upper case equivalent \xe2\x80\xa6DoComputes the modulo of <code>self + other</code> over <code>modulus</code>, \xe2\x80\xa60000DgComputes the non-negative modulo of <code>self + other</code> over |\xe2\x80\xa6000010EbComputes <code>self / other</code> over |<code>modulus</code>|, unchecked version.0E`Computes <code>self / other</code> over <code>modulus</code>, unchecked version.011110000332222233332DoComputes the modulo of <code>self - other</code> over <code>modulus</code>, \xe2\x80\xa6EaComputes the modulo of <code>self - other</code> over |<code>modulus</code>|, \xe2\x80\xa60110101100BmFlips the bit at <code>index</code>, checked.00BcFlips the <code>FLAG1</code> field.0BcFlips the <code>FLAG2</code> field.0BcFlips the <code>MASK0</code> field.0EaGenerates a unique <code>ExampleIdSeqUsize</code> ID with <code>SeqCst</code> \xe2\x80\xa6CkCalculates the distance between two pointers within the \xe2\x80\xa6CoDrops the top <code>n</code> stack elements, unchecked version.ClRotates the top three stack elements, counter-clockwise, \xe2\x80\xa6DlSaturating convert <code>i16</code> to <code>i8</code>, and pack the values.0DlSaturating convert <code>i16</code> to <code>u8</code>, and pack the values.0DiApproximates the partial derivative of the 2D function <code>f</code> \xe2\x80\xa60000000CgCount the number of bits set within an <code>i32</code>CgCount the number of bits set within an <code>i64</code>Bf\xf0\x9d\x9f\x99 The prime number theorem formula.0ChUltra-fast stdout write. Panics if not all bytes are \xe2\x80\xa6BmUnchecked version of <code>push_front</code>.CmAppends an element if there is sufficient spare capacity, \xe2\x80\xa6CiThis event is sent when the userclicks the window\xe2\x80\x99s \xe2\x80\xa600DkReturns an exclusive subslice starting from the given <code>start</code>\xe2\x80\xa6DeReturns an exclusive subslice up to the given <code>end</code> index.BeReads all available bytes from stdin.CbLanewise <code>1.0 / sqrt(a)</code> approximation.BeReciprocal of <code>f32</code> lanes.DfReturns the number of remaining IDs with <code>SeqCst</code> ordering.DgSets the value of the <code>IP_MULTICAST_TTL</code> option for this \xe2\x80\xa6EnApplies the sign of <code>i16</code> values in <code>b</code> to the values in <code>a</code>.DbLanewise <code>a * signum(b)</code> with lanes as <code>i16</code>EnApplies the sign of <code>i32</code> values in <code>b</code> to the values in <code>a</code>.DbLanewise <code>a * signum(b)</code> with lanes as <code>i32</code>CjCreates a non-null raw slice from a thin pointer and a \xe2\x80\xa6BnForms a raw slice from a pointer and a length.CeSort all iterator elements into a new iterator in \xe2\x80\xa600BhStores the value to the reference given.0BgStore data from a register into memory.DgSubtract each lane horizontally, pack the outputs as <code>a</code> \xe2\x80\xa6BiSubtract adjacent <code>f64</code> lanes.BmUnchecked version of <code>swap2_back</code>.BmUnchecked version of <code>swap_front</code>.ClVisits the values representing the symmetric difference, \xe2\x80\xa6CnVisits the elements representing the symmetric difference, \xe2\x80\xa6CgReturns the first <code>n</code> elements of the slice.ClReturns an iterator adaptor that consumes elements while \xe2\x80\xa600CnImmutably borrows the wrapped value, returning an error if \xe2\x80\xa6CmConstructs a new boxed slice with uninitialized contents. \xe2\x80\xa6CmConstructs a new boxed slice with uninitialized contents, \xe2\x80\xa6DjConstructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the \xe2\x80\xa6EfUnpack and interleave high <code>i8</code> lanes of <code>a</code> and <code>b</code>.0EfUnpack and interleave low <code>i16</code> lanes of <code>a</code> and <code>b</code>.0EfUnpack and interleave low <code>i32</code> lanes of <code>a</code> and <code>b</code>.0EfUnpack and interleave low <code>i64</code> lanes of <code>a</code> and <code>b</code>.0DeA copy of <code>self</code> with the <code>Variant0</code> field set.DeA copy of <code>self</code> with the <code>Variant1</code> field set.DeA copy of <code>self</code> with the <code>Variant2</code> field set.DeA copy of <code>self</code> with the <code>Variant3</code> field set.DeA copy of <code>self</code> with the <code>Variant4</code> field set.EhReturns the contained <code>Err</code> value, consuming the <code>self</code> value, \xe2\x80\xa6DiUnwraps the contained <code>Ok(value)</code> or panics with the given \xe2\x80\xa6EgCreates an owned <code>PathBuf</code> like <code>self</code> but with the extension \xe2\x80\xa6DkCasts <code>self</code> to <code>i16</code> wrapping at the numeric bounds.0DnCasts from <code>i8</code> to <code>i16</code> wrapping at the numeric bounds.DoCasts from <code>i32</code> to <code>i16</code> wrapping at the numeric bounds.DoCasts from <code>i64</code> to <code>i16</code> wrapping at the numeric bounds.EaCasts from <code>isize</code> to <code>i16</code> wrapping at the numeric bounds.E`Casts from <code>u128</code> to <code>i16</code> wrapping at the numeric bounds.DnCasts from <code>u8</code> to <code>i16</code> wrapping at the numeric bounds.DoCasts from <code>i16</code> to <code>i16</code> wrapping at the numeric bounds.DoCasts from <code>u16</code> to <code>i16</code> wrapping at the numeric bounds.DoCasts from <code>u32</code> to <code>i16</code> wrapping at the numeric bounds.DoCasts from <code>u64</code> to <code>i16</code> wrapping at the numeric bounds.E`Casts from <code>i128</code> to <code>i16</code> wrapping at the numeric bounds.EaCasts from <code>usize</code> to <code>i16</code> wrapping at the numeric bounds.DkCasts <code>self</code> to <code>i32</code> wrapping at the numeric bounds.0DoCasts from <code>u32</code> to <code>i32</code> wrapping at the numeric bounds.EaCasts from <code>isize</code> to <code>i32</code> wrapping at the numeric bounds.DoCasts from <code>i64</code> to <code>i32</code> wrapping at the numeric bounds.DoCasts from <code>i32</code> to <code>i32</code> wrapping at the numeric bounds.E`Casts from <code>u128</code> to <code>i32</code> wrapping at the numeric bounds.DnCasts from <code>u8</code> to <code>i32</code> wrapping at the numeric bounds.EaCasts from <code>usize</code> to <code>i32</code> wrapping at the numeric bounds.DoCasts from <code>i16</code> to <code>i32</code> wrapping at the numeric bounds.E`Casts from <code>i128</code> to <code>i32</code> wrapping at the numeric bounds.DoCasts from <code>u16</code> to <code>i32</code> wrapping at the numeric bounds.DoCasts from <code>u64</code> to <code>i32</code> wrapping at the numeric bounds.DnCasts from <code>i8</code> to <code>i32</code> wrapping at the numeric bounds.DkCasts <code>self</code> to <code>i64</code> wrapping at the numeric bounds.0DoCasts from <code>u64</code> to <code>i64</code> wrapping at the numeric bounds.DnCasts from <code>i8</code> to <code>i64</code> wrapping at the numeric bounds.DoCasts from <code>i16</code> to <code>i64</code> wrapping at the numeric bounds.DoCasts from <code>i64</code> to <code>i64</code> wrapping at the numeric bounds.DoCasts from <code>u32</code> to <code>i64</code> wrapping at the numeric bounds.DoCasts from <code>u16</code> to <code>i64</code> wrapping at the numeric bounds.E`Casts from <code>i128</code> to <code>i64</code> wrapping at the numeric bounds.DnCasts from <code>u8</code> to <code>i64</code> wrapping at the numeric bounds.EaCasts from <code>usize</code> to <code>i64</code> wrapping at the numeric bounds.EaCasts from <code>isize</code> to <code>i64</code> wrapping at the numeric bounds.E`Casts from <code>u128</code> to <code>i64</code> wrapping at the numeric bounds.DoCasts from <code>i32</code> to <code>i64</code> wrapping at the numeric bounds.DkCasts <code>self</code> to <code>u16</code> wrapping at the numeric bounds.0DoCasts from <code>i32</code> to <code>u16</code> wrapping at the numeric bounds.E`Casts from <code>u128</code> to <code>u16</code> wrapping at the numeric bounds.DoCasts from <code>i16</code> to <code>u16</code> wrapping at the numeric bounds.DnCasts from <code>i8</code> to <code>u16</code> wrapping at the numeric bounds.DoCasts from <code>i64</code> to <code>u16</code> wrapping at the numeric bounds.DoCasts from <code>u16</code> to <code>u16</code> wrapping at the numeric bounds.DnCasts from <code>u8</code> to <code>u16</code> wrapping at the numeric bounds.DoCasts from <code>u64</code> to <code>u16</code> wrapping at the numeric bounds.EaCasts from <code>usize</code> to <code>u16</code> wrapping at the numeric bounds.EaCasts from <code>isize</code> to <code>u16</code> wrapping at the numeric bounds.E`Casts from <code>i128</code> to <code>u16</code> wrapping at the numeric bounds.DoCasts from <code>u32</code> to <code>u16</code> wrapping at the numeric bounds.DkCasts <code>self</code> to <code>u32</code> wrapping at the numeric bounds.0EaCasts from <code>isize</code> to <code>u32</code> wrapping at the numeric bounds.E`Casts from <code>u128</code> to <code>u32</code> wrapping at the numeric bounds.DoCasts from <code>i16</code> to <code>u32</code> wrapping at the numeric bounds.EaCasts from <code>usize</code> to <code>u32</code> wrapping at the numeric bounds.E`Casts from <code>i128</code> to <code>u32</code> wrapping at the numeric bounds.DnCasts from <code>u8</code> to <code>u32</code> wrapping at the numeric bounds.DoCasts from <code>i32</code> to <code>u32</code> wrapping at the numeric bounds.DoCasts from <code>u64</code> to <code>u32</code> wrapping at the numeric bounds.DoCasts from <code>i64</code> to <code>u32</code> wrapping at the numeric bounds.DnCasts from <code>i8</code> to <code>u32</code> wrapping at the numeric bounds.DoCasts from <code>u16</code> to <code>u32</code> wrapping at the numeric bounds.DoCasts from <code>u32</code> to <code>u32</code> wrapping at the numeric bounds.")