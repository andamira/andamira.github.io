rd_("CfIndicates whether the <code>d</code> field is enabled.BiAlias of <code>Deca</code> (alternative).Bn$ e $ (A001113) <code>\xe2\x89\x88 2.71828182\xe2\x80\xa6</code>00000AkAlias of <code>Exbi</code>.AjAlias of <code>Exa</code>.oA function key.AgFunction keys (F1-F48).10AkAlias of <code>Gibi</code>.AkAlias of <code>Giga</code>.CfIndicates whether the <code>h</code> field is enabled.BjAlias of <code>Hecto</code> (alternative).AkAlias of <code>Kibi</code>.BiAlias of <code>Kilo</code> (alternative).CfIndicates whether the <code>m</code> field is enabled.AkAlias of <code>Mebi</code>.AkAlias of <code>Mega</code>.AkAlias of <code>Pebi</code>.AkAlias of <code>Peta</code>.AmAlias of <code>Quetta</code>.AlAlias of <code>Ronna</code>.CfIndicates whether the <code>s</code> field is enabled.AkAlias of <code>Tebi</code>.AkAlias of <code>Tera</code>.CfIndicates whether the <code>y</code> field is enabled.AkAlias of <code>Yobi</code>.AlAlias of <code>Yotta</code>.AkAlias of <code>Zebi</code>.AlAlias of <code>Zetta</code>.BhGet a <code>Pin&lt;&amp;mut A&gt;</code>AkAlias of <code>Atto</code>.BhGet a <code>Pin&lt;&amp;mut B&gt;</code>BhGet a <code>Pin&lt;&amp;mut C&gt;</code>BaThe luminance-like channel value.000BlColor channels in order: [red, green, blue].CcColor channels in order: [red, green, blue, alpha].0100210100100100100nC interfacing.3333211211321211211211211AlAlias of <code>Centi</code>.BhGet a <code>Pin&lt;&amp;mut D&gt;</code>A`The denominator.eDays.00000000000AkAlias of <code>Deci</code>.2111111111111BhGet a <code>Pin&lt;&amp;mut E&gt;</code>BhGet a <code>Pin&lt;&amp;mut F&gt;</code>AlAlias of <code>Femto</code>.BhGet a <code>Pin&lt;&amp;mut G&gt;</code>BhGet a <code>Pin&lt;&amp;mut H&gt;</code>fHours.00000000000AlAlias of <code>Hecto</code>.111111111111AkAlias of <code>Kibi</code>.AkAlias of <code>Kilo</code>.C`Returns the raw channel value, regardless of \xe2\x80\xa6000hMinutes.00000000000AlAlias of <code>Milli</code>.111111111111nThe numerator.AkAlias of <code>Nano</code>.1AkAlias of <code>Pico</code>.B`The quantification of the value.AmAlias of <code>Quecto</code>.1AlAlias of <code>Ronto</code>.BkThe <code>state</code> after the operation.hSeconds.000000000001000000000000C`Alias of <code>Micro</code> (alternative to \xc2\xb5).oThe main value.CdThe <code>value</code> resulting from the operation.01CeReturns a copy of the first dimension <code>x</code>.00000CaThe first B\xc3\xa9zout\xe2\x80\x99s coefficient <code>x</code>.AbHorizontal pixels.CgThe X-coordinate of the mouse event relative to the \xe2\x80\xa6CiThe X-coordinate of the pointer event relative to the \xe2\x80\xa6BeThe x-coordinate of the mouse cursor.B`The x-coordinate of the pointer.CfThe x-coordinate of the mouse cursor during the event.4365210CfReturns a copy of the second dimension <code>y</code>.00000CbThe second B\xc3\xa9zout\xe2\x80\x99s coefficient <code>y</code>.A`Vertical pixels.CgThe Y-coordinate of the mouse event relative to the \xe2\x80\xa6CiThe Y-coordinate of the pointer event relative to the \xe2\x80\xa6BeThe y-coordinate of the mouse cursor.B`The y-coordinate of the pointer.CfThe y-coordinate of the mouse cursor during the event.fYears.00000000000547AlAlias of <code>Yocto</code>.1111111111117432CeReturns a copy of the third dimension <code>z</code>.00AlAlias of <code>Zepto</code>.AkAlias of <code>Exbi</code>.Dh<code>core</code> Trait for comparisons corresponding to equivalence \xe2\x80\xa6Do<code>core</code> Derive macro generating an impl of the trait <code>Eq</code>.10BjFloyd-Steinberg error diffusion dithering.0Dd<code>core</code> The version of the call operator that takes an \xe2\x80\xa60Bc\xf0\x9f\x8c\x90 Filesystem-related operations.0oGrayscale 1bpp.0oGrayscale 2bpp.0oGrayscale 4bpp.0oGrayscale 8bpp.0AkAlias of <code>Gibi</code>.Ad8-bit signed integer00000000000000000Al\xf0\x9f\x8c\x90 I/O-related operations.lAn io error.10Bc\xf0\x9f\x8c\x90 Javascript-related operations.0AkAlias of <code>Kibi</code>.CgIndicates whether the <code>mo</code> field is enabled.CgIndicates whether the <code>ms</code> field is enabled.AkAlias of <code>Mebi</code>.CgIndicates whether the <code>ns</code> field is enabled.AnAlias of <code>SUCCESS</code>.Dj<code>?std</code> A string describing the specific operating system in \xe2\x80\xa6AjContains the success value0000000000000000000000000000Cb$ \xcf\x80 = \\frac{1}{2} \xcf\x84 = 180\\degree $ (A000796) \xe2\x80\xa600000AkAlias of <code>Pebi</code>.D`<code>alloc</code> A single-threaded reference-counting pointer.0AkAlias of <code>Tebi</code>.Af8-bit unsigned integer00000000000000000CgIndicates whether the <code>us</code> field is enabled.mUp arrow key.0A`An IPv4 address.AgAn IPv4 socket address.10A`An IPv6 address.AgAn IPv6 socket address.10AkAlias of <code>Yobi</code>.AkAlias of <code>Zebi</code>.A`The 1st variant.CgAn exclusive reference to the tuple element at index 0.CcA shared reference to the tuple element at index 0.AmThe tuple element at index 0.BcThe type of the element at index 0.43210A`The 2nd variant.CgAn exclusive reference to the tuple element at index 1.CcA shared reference to the tuple element at index 1.AmThe tuple element at index 1.BcThe type of the element at index 1.43210A`The 3rd variant.CgAn exclusive reference to the tuple element at index 2.CcA shared reference to the tuple element at index 2.AmThe tuple element at index 2.BcThe type of the element at index 2.43210A`The 4th variant.CgAn exclusive reference to the tuple element at index 3.CcA shared reference to the tuple element at index 3.AmThe tuple element at index 3.BcThe type of the element at index 3.43210A`The 5th variant.CgAn exclusive reference to the tuple element at index 4.CcA shared reference to the tuple element at index 4.AmThe tuple element at index 4.BcThe type of the element at index 4.43210A`The 6th variant.CgAn exclusive reference to the tuple element at index 5.CcA shared reference to the tuple element at index 5.AmThe tuple element at index 5.BcThe type of the element at index 5.43210A`The 7th variant.CgAn exclusive reference to the tuple element at index 6.CcA shared reference to the tuple element at index 6.AmThe tuple element at index 6.BcThe type of the element at index 6.43210A`The 8th variant.CgAn exclusive reference to the tuple element at index 7.CcA shared reference to the tuple element at index 7.AmThe tuple element at index 7.BcThe type of the element at index 7.43210A`The 9th variant.CgAn exclusive reference to the tuple element at index 8.CcA shared reference to the tuple element at index 8.AmThe tuple element at index 8.BcThe type of the element at index 8.43210AaThe 10th variant.CgAn exclusive reference to the tuple element at index 9.CcA shared reference to the tuple element at index 9.AmThe tuple element at index 9.BcThe type of the element at index 9.43210EgReturns an immutable reference to the element at (<code>row</code>, <code>col</code>\xe2\x80\xa60000000EgCreates a new <code>AnsiColor8b</code> from a 26-color grayscale <code>value</code> \xe2\x80\xa6AkAlias of <code>Deca</code>.BhThe delta movement since the last event.0EfTests for <code>self</code> and <code>other</code> values to be equal, and is used \xe2\x80\xa6DiNot a direct intrinsic, this is a <code>cmp_eq_mask</code> and then a \xe2\x80\xa6BcEquality for two <code>Arc</code>s.1DkNot a direct intrinsic, this is a <code>cmp_eq_mask_i8_m128i</code> and \xe2\x80\xa6ClPerforms a comparison to get a mask, then moves the mask \xe2\x80\xa60ChReturns <code>true</code> if <code>self == other</code>.0000000DjReturns <code>true</code> if <code>self == other</code> using total order.0111001BcCompares raw pointers for equality.CmChecks the equality of two slices of slices of primitives \xe2\x80\xa6CfChecks the equality of two slices of primitives in \xe2\x80\xa6CiChecks the equality of two string slices in compile-time.12112112212211121212CiChecks the equality of two slices of string slices in \xe2\x80\xa622232332332333BbEquality for two <code>Rc</code>s.fPanicsBhEquality for two <code>OnceLock</code>s.DiDetermines if the elements of this <code>Iterator</code> are equal to \xe2\x80\xa600?AhFilesystem abstractions.Dd\xe2\x80\x98Greater than or equal to\xe2\x80\x99 comparison for two <code>Arc</code>s.CkReturns <code>true</code> if <code>self &gt;= other</code>.DmReturns <code>true</code> if <code>self &gt;= other</code> using total order.11111010111011EhTests greater than or equal to (for <code>self</code> and <code>other</code>) and is \xe2\x80\xa60Dc\xe2\x80\x98Greater than or equal to\xe2\x80\x99 comparison for two <code>Rc</code>s.8D`Determines if the elements of this <code>Iterator</code> are \xe2\x80\xa6002CbGreater-than comparison for two <code>Arc</code>s.CjReturns <code>true</code> if <code>self &gt; other</code>.DlReturns <code>true</code> if <code>self &gt; other</code> using total order.10110111011111EhTests greater than (for <code>self</code> and <code>other</code>) and is used by the \xe2\x80\xa60CaGreater-than comparison for two <code>Rc</code>s.>5551CnReturns the OS-assigned process identifier associated with \xe2\x80\xa6BfGets the thread\xe2\x80\x99s unique identifier.AjReturns the worker\xe2\x80\x99s ID.AgReturns the job\xe2\x80\x99s ID.BeReturns the numeric ID of the handle.44BiUnique identifier for the pointer device.CiUnique ID for touch and pen inputs (e.g., multi-touch \xe2\x80\xa6106AbI/O functionality.CbLinux-specific extensions to <code>std::io</code>.CkReturns the IP address associated with this socket address.00DbForwards to the method defined on the type <code>dyn Error</code>.0DjReturns <code>true</code> if the inner type is the same as <code>T</code>.AgConditional evaluation.ClForwards to the method defined on the type <code>Any</code>.D`Forwards to the method defined on the type <code>dyn Any</code>.32CbThe bessel function of the first kind, of order 0.0CbThe bessel function of the first kind, of order 1.0CkBessel function of the first kind, of order <code>n</code>.0AgJavaScript interfacing.Da\xe2\x80\x98Less than or equal to\xe2\x80\x99 comparison for two <code>Arc</code>s.CkReturns <code>true</code> if <code>self &lt;= other</code>.00000000DmReturns <code>true</code> if <code>self &lt;= other</code> using total order.010101EeTests less than or equal to (for <code>self</code> and <code>other</code>) and is \xe2\x80\xa60D`\xe2\x80\x98Less than or equal to\xe2\x80\x99 comparison for two <code>Rc</code>s.fPanicsD`Determines if the elements of this <code>Iterator</code> are \xe2\x80\xa6003BkThe natural logarithm of <code>self</code>.0AfThe natural logarithm.0BoLess-than comparison for two <code>Arc</code>s.CjReturns <code>true</code> if <code>self &lt; other</code>.0000DlReturns <code>true</code> if <code>self &lt; other</code> using total order.1110111001FgTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> \xe2\x80\xa60BnLess-than comparison for two <code>Rc</code>s.87771gMonths.00000000000000000000000CgMilliseconds since <code>performance.timeOrigin</code>.mMilliseconds.000000000001000000000000BeInequality for two <code>Arc</code>s.ChReturns <code>true</code> if <code>self != other</code>.DjReturns <code>true</code> if <code>self != other</code> using total order.11111111101100DjTests for <code>!=</code>. The default implementation is almost always \xe2\x80\xa60BdInequality for two <code>Rc</code>s.DjDetermines if the elements of this <code>Iterator</code> are not equal \xe2\x80\xa60E`\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f Creates a <code>NonExtreme*</code> <code>niche</code> value with \xe2\x80\xa6103lNanoseconds.00000000000000000000000Dm\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f Creates a <code>NonZero*</code> <code>niche</code> value with \xe2\x80\xa60CnReturns the <code>TypeId</code> of the generic type parameter.DnConverts from <code>Result&lt;T, E&gt;</code> to <code>Option&lt;T&gt;</code>.BfLogical \xe2\x80\x9cor\xe2\x80\x9d with a boolean value.BhBitwise \xe2\x80\x9cor\xe2\x80\x9d with the current value.00000000000EjApplies the <code>or</code> operation to <code>_other</code>, (returns <code>True</code>).EjApplies the <code>or</code> operation to <code>other</code>, (returns <code>other</code>).ChReturns the option if it contains a value, otherwise \xe2\x80\xa6FeReturns <code>res</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> \xe2\x80\xa6AiOS-specific. os::{linux} Ci<em><code>s</code>kip <code>f</code>ormatting</em> macro.0DbReturns both <code>state</code> and <code>value</code> as a tuple.CgUser interface functionality. ui::{back, front, layout}mMicroseconds.00000000000000000000000AoTransforms itself into a tuple.CcThe bessel function of the second kind, of order 0.0CcThe bessel function of the second kind, of order 1.0ClBessel function of the second kind, of order <code>n</code>.0Cg<code>core</code> The addition operator <code>+</code>.0Cd<code>core</code> A trait to emulate dynamic typing.0Dd\xe2\x9a\x9b\xef\xb8\x8f <code>?alloc</code> A thread-safe reference-counting pointer.0AgBackspace-delay type 0.AgBackspace-delay type 1.Dj<code>alloc</code> A pointer type that uniquely owns a heap allocation \xe2\x80\xa60BcReuse an existing exclusive buffer.0Ca<code>CRDLY</code>: Carriage-return delay type 0.Ca<code>CRDLY</code>: Carriage-return delay type 1.Ca<code>CRDLY</code>: Carriage-return delay type 2.Ca<code>CRDLY</code>: Carriage-return delay type 3.Bo<code>CSIZE</code>: Character size mask type 5.Bo<code>CSIZE</code>: Character size mask type 6.Bo<code>CSIZE</code>: Character size mask type 7.Bo<code>CSIZE</code>: Character size mask type 8.BbControl Sequence Introducer (CSI).AkSeek from current position.Cb<code>alloc</code> A clone-on-write smart pointer.0AgCode to set dim effect.AmAlias of <code>Delete</code>.Cg<code>core</code> The division operator <code>/</code>.0Ai\xe2\x80\x9cInput/output error.\xe2\x80\x9dAfSeek from end of file.AnAlias of <code>FAILURE</code>.hEnd key.0De\xf0\x9f\x8c\x90 A namespaced wrapper for <code>std::env</code> functions and \xe2\x80\xa60AhContains the error value000000000000ChThe associated error which can be returned from parsing.11111111111011111AmAlias of <code>Escape</code>.e10^180Al32-bit floating-point number00000000000000000Al64-bit floating-point number00000000000000000Bk<code>FFDLY</code>: Form-feed delay type 0.Bk<code>FFDLY</code>: Form-feed delay type 1.Bh\xf0\x9d\x90\x93 \xf0\x9f\x8c\x90 A string formatting namespace.0EaIndicates whether the 3 fields from <code>h</code> to <code>s</code> are enabled.Ae16-bit signed integer00000000000000000Ae32-bit signed integer00000000000000000Ae64-bit signed integer00000000000000000AmAlias of <code>Insert</code>.Dj\xf0\x9d\x9f\x99 \xf0\x9f\x8c\x90 Provides comprehensive integer operations on <code>T</code>, \xe2\x80\xa60BnKeyboard codes, used in <code>EventKey</code>.0AiThe length of this array.CiThe number of active (non-<code>()</code> type) variants.1Al\xf0\x9f\x8c\x90 Log-related operations.0BaLow quality palette construction.0BcA generic luminance-like component.CeTransforming into luminosities before the comparison.10CnThe largest value that can be represented by this non-zero \xe2\x80\xa600000000000BcReturns the maximum possible value.00000000000AeLargest finite value.AhMaximum valid exit code.AhMax supported seek type.AnThe maximum possible duration.CmReturns the largest value that can be represented by this \xe2\x80\xa600000000000000000000000AeThe maximum duration.55555EmThe highest unicode scalar a <code>char7</code> can represent, <code>&#39;\\u{7F}&#39;</code>.EmThe highest unicode scalar a <code>char8</code> can represent, <code>&#39;\\u{FF}&#39;</code>.DcThe highest unicode scalar a <code>char16</code> can represent, \xe2\x80\xa69CkThe smallest value that can be represented by this non-zero00000000000BcReturns the minimum possible value.00000000000AfSmallest finite value.CmThe minimum possible duration. Or the \xe2\x80\x9cmost negative\xe2\x80\x9d \xe2\x80\xa6CnReturns the smallest value that can be represented by this \xe2\x80\xa60000000000000000000000022222ElThe lowest unicode scalar a <code>char7</code> can represent, <code>&#39;\\u{00}&#39;</code>.ElThe lowest unicode scalar a <code>char8</code> can represent, <code>&#39;\\u{00}&#39;</code>.EmThe lowest unicode scalar a <code>char16</code> can represent, <code>&#39;\\u{00}&#39;</code>.6Ao\xf0\x9f\x8c\x90 Memory-related operations.0nA modifer key.oA modifier key.10Cm<code>core</code> The multiplication operator <code>*</code>.0AcNot a Number (NaN).00000Bd<code>NLDLY</code>: Newline type 0_.Bc<code>NLDLY</code>: Newline type 1.ClNaN (not a number): this value results from calculations \xe2\x80\xa60Cm<code>core</code> The unary negation operator <code>-</code>.0De<code>core</code> The unary logical negation operator <code>!</code>.0Bd\xf0\x9d\x9f\x99 Common trait for numeric types.CdThe underlying numeric type implementing this trait.10BdA <code>Vector</code> with all ones.0000000000000AnThe multiplicative identity 1.00000BbA level lower than all log levels.0Cj<code>core</code> Trait for types that form a total order.Eh<code>core</code> Derive macro generating an impl of the trait <code>Ord</code>. The \xe2\x80\xa610AoThe output type for operations.0Ek\xe2\x9a\x96\xef\xb8\x8f A return type encapsulating an owned <strong>state</strong> <code>S</code> and a \xe2\x80\xa6BgThe owned version of this numeric type.10Da$ \xcf\x86  = (1+\\sqrt{5})/2 $ (A001622) <code>\xe2\x89\x88 1.61803398\xe2\x80\xa6</code>00000mA keypad key.000nA pen pointer.0Cl<code>core</code> A pointer which pins its pointee in place.0Cn\xf0\x9f\x8c\x90 A collection of methods for encoding and decoding PNM \xe2\x80\xa60B`\xf0\x9f\x8c\x90 Pointer-related operations.0BhCode to set the foreground color to red.DjCode to set the foreground color to <code>fg: [r, g, b]</code> values, \xe2\x80\xa6e1 Red0Dk<code>core</code> A wrapper type for an inmutably borrowed value from a \xe2\x80\xa60Ch<code>core</code> The remainder operator <code>%</code>.0AlRGB color with 3 components.0BhThe right hand side type for operations.0AhSeek from start of file.Bc\xf0\x9d\x90\x93 \xf0\x9f\x8c\x90 A string slice namespace.lString slice01Cj<code>core</code> The subtraction operator <code>-</code>.0DjAn error reported by the system, containing a <code>LINUX_ERRNO</code> \xe2\x80\xa60Db$ \xcf\x84 = 2\xcf\x80 = 360\\degree $ (A019692) <code>\xe2\x89\x88 6.28318530\xe2\x80\xa6</code>00000hTab key.0Ag16-bit unsigned integer00000000000000000Ag32-bit unsigned integer00000000000000000Ag64-bit unsigned integer00000000000000000GgPrefix using Windows\xe2\x80\x99 <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>, e.g. \xe2\x80\xa60Bn<code>VTDLY</code>: Vertical-tab delay type 0.Bn<code>VTDLY</code>: Vertical-tab delay type 1.Cg\xf0\x9f\x97\x83\xef\xb8\x8f <code>alloc</code> A contiguous growable array.AlAn array backed by a vector.01Ai\xf0\x9f\x8c\x90 A Web API namespace.0EaIndicates whether the 3 fields from <code>y</code> to <code>d</code> are enabled.EaIndicates whether the 6 fields from <code>y</code> to <code>s</code> are enabled.AaThe 11th variant.ChAn exclusive reference to the tuple element at index 10.CdA shared reference to the tuple element at index 10.AnThe tuple element at index 10.BdThe type of the element at index 10.43210AaThe 12th variant.ChAn exclusive reference to the tuple element at index 11.CdA shared reference to the tuple element at index 11.AnThe tuple element at index 11.BdThe type of the element at index 11.43210BhThe absolute value of <code>self</code>.DfComputes the absolute value of self. See <code>i64::abs</code> for \xe2\x80\xa6DfComputes the absolute value of self. See <code>i32::abs</code> for \xe2\x80\xa6DfComputes the absolute value of self. See <code>i16::abs</code> for \xe2\x80\xa6DeComputes the absolute value of self. See <code>i8::abs</code> for \xe2\x80\xa6DgComputes the absolute value of self. See <code>i128::abs</code> for \xe2\x80\xa6DhComputes the absolute value of self. See <code>isize::abs</code> for \xe2\x80\xa6BnReturns the absolute value of this time delta.DjSaturating absolute value. Computes <code>self.abs()</code>, returning \xe2\x80\xa600000DhComputes the absolute value of <code>self</code>, wrapping around at \xe2\x80\xa6000009ChReturns the absolute value of <code>self</code> (no-op).0C`Returns the absolute value of <code>self</code>.111000001;;BfPerforms the <code>+</code> operation.AjAdds to the current value.00000000000C`Adds an offset to a pointer (convenience for \xe2\x80\xa6AjAdds two vectors together.0fPanics0BmReturns the element-wise sum of two matrices.00000005AcAdds two fractions.00000000000000000000000BjAll the crate\xe2\x80\x99s items flat re-exported. CkTests if every element of the iterator matches a predicate.00BgLogical \xe2\x80\x9cand\xe2\x80\x9d with a boolean value.BiBitwise \xe2\x80\x9cand\xe2\x80\x9d with the current value.00000000000EkApplies the <code>and</code> operation to <code>other</code>, (returns <code>other</code>).ElApplies the <code>and</code> operation to <code>_other</code>, (returns <code>False</code>).FbReturns <code>None</code> if the option is <code>None</code>, otherwise returns <code>optb</code>.FeReturns <code>res</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> \xe2\x80\xa6CjPanic the current thread with the given message as the \xe2\x80\xa6CiTests if any element of the iterator matches a predicate.00BhAdds an argument to pass to the program.AeArtificial languages.Bb<code>core</code> Inline assembly.0BlBilogy-related abstractions, bio-algorithms.Ck(colorDepth) The screen color depth, in bits per single \xe2\x80\xa60Dk<code>core</code> Evaluates boolean combinations of configuration flags \xe2\x80\xa60Egproc Evaluates to either a <code>true</code> of <code>false</code> literal based on \xe2\x80\xa60EnThis method returns an <code>Ordering</code> between <code>self</code> and <code>other</code>.BeComparison for two <code>Arc</code>s.CiCompare need first. If they are equal, then compare have.EeCompare <code>value</code> first. If they are equal, then compare <code>quant</code>.CfState\xe2\x80\x99s ordering takes precedence over value\xe2\x80\x99s \xe2\x80\xa6BdComparison for two <code>Rc</code>s.fPanicsDiLexicographically compares the elements of this <code>Iterator</code> \xe2\x80\xa6007kThe cosine.000BbAlias of <code>denominator</code>.00000000000CaReturns the ID of the device containing the file.DbThe component-wise separation in <code>D</code>-dimensional space.CdThe size values in <code>D</code>-dimensional space.CjThe coordinate values in <code>D</code>-dimensional space.CoThe directional components in <code>D</code>-dimensional space.AmThe step sizes per dimension.43210BfPerforms the <code>/</code> operation.0BhComputes the dot product of two vectors.0Cd(devicePixelRatio) The device pixel ratio of the \xe2\x80\xa60CkCustom DSLs, lexers, parsers, interpreters, and virtual \xe2\x80\xa6Cn\xe2\x9a\xa0\xef\xb8\x8f Dynamically-sized types stored without need of heap \xe2\x80\xa6BaDuplicates the top stack element.CaReturns the upper bound of the range (inclusive).BiThe upper bound of the range (exclusive).0BhThe upper bound of the range (inclusive)110CgInserts or updates an explicit environment variable \xe2\x80\xa6CkInspection and manipulation of the process\xe2\x80\x99s environment.AcThe error function.0DnConverts from <code>Result&lt;T, E&gt;</code> to <code>Option&lt;E&gt;</code>.Ba$e^x$ (the exponential function).DfThe gamma exponent (<code>\xce\xb3</code>) used in the encoding/decoding \xe2\x80\xa60111CfReturns the exponent corresponding to the unit prefix.00CiReturns the exponent corresponding to the binary unit \xe2\x80\xa6ChReturns the exponent associated with the SI unit prefix.CmReturns a reference to the extension data for the current \xe2\x80\xa6BaFFIbindings and interoperability.BlFormats the value using the given formatter.00000000AlUpperExp formats each float.AlLowerExp formats each float.AiDebug formats each float.ClDisplay formats each float, and leaves the type name off \xe2\x80\xa6DkBinary formats each float\xe2\x80\x99s bit pattern (via <code>f32::to_bits</code>\xe2\x80\xa6DjOctal formats each float\xe2\x80\x99s bit pattern (via <code>f32::to_bits</code>\xe2\x80\xa6CdLowerHex formats each float\xe2\x80\x99s bit pattern (via \xe2\x80\xa6CdUpperHex formats each float\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AmLowerExp formats each double.CeLowerHex formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6CeUpperHex formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AmUpperExp formats each double.CmDisplay formats each double, and leaves the type name off \xe2\x80\xa6DkOctal formats each double\xe2\x80\x99s bit pattern (via <code>f64::to_bits</code>\xe2\x80\xa6CcBinary formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AjDebug formats each double.BgUpperExp formats each <code>i32</code>.BgLowerExp formats each <code>i32</code>.BgUpperHex formats each <code>i32</code>.BdOctal formats each <code>i32</code>.BgLowerHex formats each <code>i32</code>.DjDisplay formats each <code>i32</code>, and leaves the type name off of \xe2\x80\xa6BeBinary formats each <code>i32</code>.BdDebug formats each <code>i32</code>.CdUpperHex formats each float\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AlUpperExp formats each float.CdLowerHex formats each float\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AiDebug formats each float.DkBinary formats each float\xe2\x80\x99s bit pattern (via <code>f32::to_bits</code>\xe2\x80\xa6DjOctal formats each float\xe2\x80\x99s bit pattern (via <code>f32::to_bits</code>\xe2\x80\xa6AlLowerExp formats each float.ClDisplay formats each float, and leaves the type name off \xe2\x80\xa6AmLowerExp formats each double.CmDisplay formats each double, and leaves the type name off \xe2\x80\xa6AjDebug formats each double.CcBinary formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6AmUpperExp formats each double.CeUpperHex formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6DkOctal formats each double\xe2\x80\x99s bit pattern (via <code>f64::to_bits</code>\xe2\x80\xa6CeLowerHex formats each double\xe2\x80\x99s bit pattern (via \xe2\x80\xa6BdOctal formats each <code>i32</code>.BgLowerExp formats each <code>i32</code>.BgUpperHex formats each <code>i32</code>.BeBinary formats each <code>i32</code>.DjDisplay formats each <code>i32</code>, and leaves the type name off of \xe2\x80\xa6BgUpperExp formats each <code>i32</code>.BdDebug formats each <code>i32</code>.BgLowerHex formats each <code>i32</code>.DdWraps the array in an <code>ArrayFmt</code> for formatting purposes.0CnFormat the program and arguments of a Command for display. \xe2\x80\xa6DcWraps the tuple in a <code>TupleFmt</code> for formatting purposes.0DaShows a human-readable description of the <code>ErrorKind</code>.31AcStrings formatting.BlFormats the value using the given formatter.00000000AlThe greatest common divisor.A`Returns the GCD.00000000000CjReturns the GCD between the numerator and the denominator.000000000000000000000002B`Gets a reference to the ID data.BfReturns a copy of the contained value.CjReturns a reference to the value corresponding to the key.CjReturns a shared reference to the element at the given \xe2\x80\xa6CnReturns a clone of the element at the given 2D coordinates \xe2\x80\xa60C`Returns the contained value as a primitive type.CmReturns a reference to the value in the set, if any, that \xe2\x80\xa64CfReturns an iterator over a subsection of the iterator.0CnGets a reference to the item at the provided index in this \xe2\x80\xa6CjReturns a reference to the element in the set, if any, \xe2\x80\xa6CgProvides a reference to the element at the given index.CnReturns a reference to the value if initialized. Otherwise \xe2\x80\xa6BkGets the reference to the underlying value.;BlGets a mutable pointer to the wrapped value.BfReturns the value as a primitive type.0000030200AiRetrieves a value by key.11CmReturns a shared reference to an initialized element at a \xe2\x80\xa62CiRetrieves the value at <code>(row, col)</code>, if valid.00000000000AoReturns the current hash value.000;CmReturns the value that was used to construct this divisor \xe2\x80\xa600000000000BoCast the enum to its underlying representation.BoReturns the group ID of the owner of this file.CkHuman linguistics and language theory. hum::{art, gram, \xe2\x80\xa6AiReturns the inode number.BjReturns a reference to this entry\xe2\x80\x99s key.0CcAdds the key part of a new entry to the map output.BeImplementations of key-based storage.A`Returns the LCM.00000000000CjReturns the LCM between the numerator and the denominator.00000000000000000000000BjReturns the number of elements in the map.BfReturns the length of the binary heap.BiReturns the number of destaqued elements.BjReturns the number of elements in the set.BgReturns the number of stacked elements.4BnReturns the length of this <code>OsStr</code>.AeReturns array length.AeReturns slice length.AiReturns L (array length).BjReturns total length of all string slices.BbReturns 1 (length of single byte).AdReturns byte length.BcReturns total length of all slices.BcDetermines the length of this list.BkReturns the length of a non-null raw slice.;CbReturns the length of the <code>LinkedList</code>.AkReturns the current length.BlReturns the number of elements in the deque.CdReturns the number of occupied slots in the hashmap.CfReturns the number of elements in the vector, also \xe2\x80\xa6BjReturns the count of initialized elements.BkReturns the current string length in bytes.EgReturns the length of this <code>String</code>, in bytes, not <code>char</code>s or \xe2\x80\xa61ClReturns the size of the file, in bytes, this metadata is \xe2\x80\xa622CcReturns the exact remaining length of the iterator.0BgReturns the size of the file, in bytes.CkReturns the length in days of the current month, taking \xe2\x80\xa62AlReturns the length in bytes.00AmLogs the <code>Record</code>.EbThe logarithm of <code>self</code> with respect to an arbitrary <code>base</code>.Bg(log) Outputs a message to the console.Cg<code>log</code> Logs a message at the indicated level.2ClThe logarithm of the number with respect to an arbitrary \xe2\x80\xa60AfLogging functionality.52CkMaps the inner value to another type using the provided \xe2\x80\xa6DbMakes a new <code>Ref</code> for a component of the borrowed data.DiMakes a new <code>RefMut</code> for a component of the borrowed data, \xe2\x80\xa6ClTakes a closure and creates an iterator which calls that \xe2\x80\xa60DiMakes a <code>MappedMutexGuard</code> for a component of the borrowed \xe2\x80\xa6DeMakes a <code>MappedRwLockReadGuard</code> for a component of the \xe2\x80\xa6DfMakes a <code>MappedRwLockWriteGuard</code> for a component of the \xe2\x80\xa6FaMaps a <code>Bound&lt;T&gt;</code> to a <code>Bound&lt;U&gt;</code> by applying a function to \xe2\x80\xa6FdMaps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a \xe2\x80\xa6FdMaps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;U, E&gt;</code> by applying a function \xe2\x80\xa6EoMaps a <code>Poll&lt;T&gt;</code> to <code>Poll&lt;U&gt;</code> by applying a function to a \xe2\x80\xa67jGame maps.BgReturns the most verbose logging level.BnReturns the most verbose logging level filter.EbCompares and returns the maximum between <code>self</code> and <code>other</code>.0EdCompares and returns the <em>total ordered</em> maximum between <code>self</code>\xe2\x80\xa61111010110111BoCompares and returns the maximum of two values.0BkReturns the maximum element of an iterator.00DmThe maximum between itself and <code>other</code>, ignoring <code>NaN</code>.02AbMemory management.EbCompares and returns the minimum between <code>self</code> and <code>other</code>.0000EdCompares and returns the <em>total ordered</em> minimum between <code>self</code>\xe2\x80\xa61001111110BoCompares and returns the minimum of two values.0BkReturns the minimum element of an iterator.00D`The minimum between itself and other, ignoring <code>NaN</code>.02BfPerforms the <code>*</code> operation.ClComputes the matrix product (R \xc3\x97 C) * (C \xc3\x97 C2) = (R \xc3\x97 \xe2\x80\xa600000001AhNatural human languages.BlPerforms the unary <code>-</code> operation.ClNegates the current value, and sets the new value to the \xe2\x80\xa6000000000001AiNetworking functionality.BkConstructs a new <code>Arc&lt;T&gt;</code>.DoConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. \xe2\x80\xa6EoCreates a new <code>Mismatch</code> with the specified <code>need</code> and <code>have</code>.DiCreates a new <code>TypeResource</code> instance with the given inner \xe2\x80\xa6BbCreates a new <code>Atomic</code>.DgA constructor with the given <code>value</code> and <code>quant</code>.DgA constructor with the given <code>state</code> and <code>value</code>.BfCreates an empty <code>HashMap</code>.DdAllocates memory on the heap and then places <code>x</code> into it.BfCreates a new <code>AtomicBool</code>.BeCreates a new <code>AtomicPtr</code>.AmCreates a new atomic integer.00DmReturns a new <code>Array</code> from the given primitive <code>array</code>.11CgCreates an empty <code>BinaryHeap</code> as a max-heap.2CbCreates a non-zero if the given value is not zero.33AkCreates a new atomic float.4CnReturns an empty destaque, allocated in the stack, cloning \xe2\x80\xa6CmReturns an empty destaque, allocated in the heap, cloning \xe2\x80\xa662BfCreates an empty <code>HashSet</code>.7CjReturns an empty stack, allocated in the heap, cloning \xe2\x80\xa6CkReturns an empty stack, allocated in the stack, cloning \xe2\x80\xa69DdCreates a new <code>IdPin</code> with a unique stack memory address.BiMakes a new, empty <code>BTreeMap</code>.AoConstructs a new (empty) queue.AoConstructs a new (empty) stack.AlConstruct a stack-based DST.BmConstructs a new empty <code>OsString</code>.BiCoerces into an <code>OsStr</code> slice.AoNew <code>Rgb&lt;u8&gt;</code>.AgNew <code>Rgba8</code>.B`New <code>Rgb&lt;u16&gt;</code>.BaNew <code>Rgba&lt;u16&gt;</code>.AjCreates a new, empty list.DcCreates a new <code>NonNull</code> if <code>ptr</code> is non-null.EaCreates a new <code>BufReader&lt;R&gt;</code> with a default buffer capacity. \xe2\x80\xa6EaCreates a new <code>BufWriter&lt;W&gt;</code> with a default buffer capacity. \xe2\x80\xa6BfCreates a new <code>LineWriter</code>.CnCreates a new I/O error from a known kind of error as well \xe2\x80\xa6CdConstructs a new Distance from the given dimensions.CbConstructs a new Extent from the given dimensions.EcCreates a new interval with the given <code>lower</code> and <code>upper</code> \xe2\x80\xa6CdConstructs a new Position from the given dimensions.BiMakes a new, empty <code>BTreeSet</code>.DkReturns a new <code>Vector</code> from the given <code>coords</code> array.DoReturns a new <code>VecVector</code> from the given <code>coords</code> vector.DjReturns a new <code>Point</code> from the given <code>coords</code> array.ClCreates a new <code>IoSliceMut</code> wrapping a byte slice.BiCreates an empty <code>LinkedList</code>.BmCreates a new empty <code>StringNonul</code>.BdReturns a new <code>TermSize</code>.DhCreates a new <code>BareBox</code> storage for the given <code>t</code>.DhCreates a new <code>AnsiColor8b</code> from an <code>AnsiColor3b</code>.AgCreates an empty deque.CoReturns a new <code>LinuxSigaction</code> for a simple handler.ChCreates a new lazy value with the given initializing \xe2\x80\xa6BaCreates a new uninitialized cell.CkCreates a new <code>Cell</code> containing the given value.BjConstructs a new <code>Rc&lt;T&gt;</code>.DaCreates a new <code>RefCell</code> containing <code>value</code>.BhAllocates an empty <code>PathBuf</code>.DhConstructs a new instance of <code>UnsafeCell</code> which will wrap \xe2\x80\xa6CkDirectly wraps a string slice as a <code>Path</code> slice.DoConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. \xe2\x80\xa6DkConstructs a new <code>Command</code> for launching the program at path \xe2\x80\xa6BnCreates a new <code>CodecBe</code> combinator.BnCreates a new <code>CodecLe</code> combinator.EeReturns a <code>NonValueU8</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EfReturns a <code>NonValueU16</code> with the given <code>value</code>, if it is not \xe2\x80\xa6CiCreates a new condition variable which is ready to be \xe2\x80\xa6EfReturns a <code>NonValueU32</code> with the given <code>value</code>, if it is not \xe2\x80\xa6CgCreates a new mutex in an unlocked state ready for use.EfReturns a <code>NonValueU64</code> with the given <code>value</code>, if it is not \xe2\x80\xa6BfCreates a new <code>Once</code> value.BnCreates a new <code>CodecIf</code> combinator.DlCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.DkCreates a new <code>CodecFlags</code> combinator from 8 <code>bool</code>s.EgReturns a <code>NonValueU128</code> with the given <code>value</code>, if it is not \xe2\x80\xa6DeCreates a new <code>CodecJoin</code> combinator, without a separator.BdCreates a new <code>CodecLen</code>.EeReturns a <code>NonValueI8</code> with the given <code>value</code>, if it is not \xe2\x80\xa6AmCreates a new TLV combinator.BcCreates a <code>PoisonError</code>.CiReturns a new <code>Base</code> with the chosen generics.CjCreates a new barrier that can block a given number of \xe2\x80\xa6ChCreates a new lazy value with the given initializing \xe2\x80\xa6EfReturns a <code>NonValueI16</code> with the given <code>value</code>, if it is not \xe2\x80\xa6BaCreates a new uninitialized cell.AlReturns a default Fx hasher.00EfReturns a <code>NonValueI32</code> with the given <code>value</code>, if it is not \xe2\x80\xa6EfReturns a <code>NonValueI64</code> with the given <code>value</code>, if it is not \xe2\x80\xa6CkConstructs a new static map with runtime EMPTY and TOMB \xe2\x80\xa6EgReturns a <code>NonValueI128</code> with the given <code>value</code>, if it is not \xe2\x80\xa6CbConstructs a new, empty <code>Vec&lt;T&gt;</code>.EhReturns a <code>NonValueUsize</code> with the given <code>value</code>, if it is not \xe2\x80\xa6BhReturns a new uninitialized empty array.EhReturns a <code>NonValueIsize</code> with the given <code>value</code>, if it is not \xe2\x80\xa6C`Creates a new chunk containing a single element.CkGenerates the base configuration for spawning a thread, \xe2\x80\xa6CiCreates a new C-compatible string from a container of \xe2\x80\xa6EdCreates a new empty <code>StringU8</code> with a capacity of <code>CAP</code> bytes.BhCreates a new empty <code>String</code>.EeCreates a new empty <code>StringU16</code> with a capacity of <code>CAP</code> bytes.CkCreates a blank new set of options ready for configuration.CgCreates a new <code>FileTimes</code> with no times set.CkCreates a new set of options with default mode/security \xe2\x80\xa6DfConstructs a new <code>RandomState</code> that is initialized with \xe2\x80\xa6CiCreates a new cursor wrapping the provided underlying \xe2\x80\xa6EeCreates a new empty <code>StringU32</code> with a capacity of <code>CAP</code> bytes.EdCreates a new empty <code>StringUsize</code> with a capacity of <code>CAP</code> \xe2\x80\xa6CiCreates a new <code>IoSlice</code> wrapping a byte slice.DaCreates a new <code>IdPinBox</code> with a unique memory address.CeReturns a new up-to-date <code>WebWindowState</code>.CeConstructs a new gamma curve with the given exponent.CbNew <code>Luminance</code> with the given channel.000AoNew <code>Rgb&lt;u8&gt;</code>.AhNew <code>RgbF64</code>.B`New <code>Rgb&lt;u16&gt;</code>.AhNew <code>RgbF32</code>.BaNew <code>Rgba&lt;u16&gt;</code>.3AgNew <code>Rgba8</code>.2BbReturns a new empty sixel builder.DbCreates a new formatter with given <code>FormattingOptions</code>.CkCreates a new BuildHasherDefault for Hasher <code>H</code>.CfReturns a new matrix with the given <code>data</code>.0000000DiReturns new <code>Points</code> from the given <code>coords</code> array.BmCreates a new <code>Ratio&lt;N, D&gt;</code>.DiReturns a seeded <code>XorShift128+</code> generator from the given 2 \xe2\x80\xa6ChCreates a new wavelet component of a specified type, \xe2\x80\xa6EdCreates a new <code>Waker</code> from the provided <code>data</code> pointer and \xe2\x80\xa6CmCreates a new <code>AppConfig</code> if all fields are valid.BhCreates a new Xdg directory environment.BiCreates a new Unix directory environment.BjCreates a new Apple directory environment.BlCreates a new Windows directory environment.DlCreates a new <code>BumpAlloc</code> from <code>start..end</code> addresses.CfPads and aligns a value to the length of a cache line.DcCreates a new <code>FatPtr</code> from a data pointer and metadata.CiCreates a new <em>current guard</em> for the given value.CjCreates a new <code>Current&lt;T&gt;</code> marker object.AkReturns a new empty struct.EdReturns a new <code>LinuxTimespec</code> with the given <code>seconds</code> and \xe2\x80\xa6AlReturns a new empty manager.BlCreates a new spinlock with the given value.CiReturns an uninitialized pixel-? stage with the given \xe2\x80\xa6BlCreates a new <code>CrosstermService</code>.DlReturns a <code>FsPath</code> from what could\xe2\x80\x99ve been a <code>Path</code>.DgCreates a new <code>TimeDelta</code> from the given number of whole \xe2\x80\xa6BeReturns a new <code>TimeSplit</code>.DhReturns a new <code>UnixTimeI64</code> from the given amount of seconds.DhReturns a new <code>UnixTimeU32</code> from the given amount of seconds.CnCreates a new <code>Lgc16</code> instance with the given seed.DcCreates a new Xoroshiro128++ PRNG with the given <code>seed</code>.DfReturns a seeded <code>Xyza8a</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DfReturns a seeded <code>Xyza8b</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DjReturns a seeded <code>Xabc</code> generator from the given 3 \xc3\x97 8-bit \xe2\x80\xa6DkReturns a seeded <code>XorShift128</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DeReturns a seeded <code>XorShift16</code> generator from the given \xe2\x80\xa6DeReturns a seeded <code>XorShift32</code> generator from the given \xe2\x80\xa6DeReturns a seeded <code>XorShift64</code> generator from the given \xe2\x80\xa6DjReturns a seeded <code>XorShift8</code> generator from the given 8-bit \xe2\x80\xa6AdCreates a new angle.CgConstructs a new Orientation from the given dimensions.CbConstructs a new Stride from the given dimensions.EgReturns a new <code>Region</code> from a <code>pos</code>ition and a <code>size</code>.AhNew <code>RgbF64</code>.0AhNew <code>RgbF32</code>.0AoReturns a default pengy hasher.AmReturns a default FNV hasher.000BdWrap a value to be manually dropped.DnCreates a new <code>MaybeUninit&lt;T&gt;</code> initialized with the given \xe2\x80\xa6ChCreates a new inclusive range. Equivalent to writing \xe2\x80\xa6CiCreates a new iterator over the given <code>array</code>.CfCreates a new IPv4 address from four eight-bit octets.CfCreates a new IPv6 address from eight 16-bit segments.CnCreates a new socket address from an IP address and a port \xe2\x80\xa6DhCreates a new socket address from an <code>IPv4</code> address and a \xe2\x80\xa6DeCreates a new socket address from an <code>IPv6</code> address, a \xe2\x80\xa6EaConstructs a new <code>Pin&lt;Ptr&gt;</code> around a pointer to some data of \xe2\x80\xa6DjCreates a new <code>Duration</code> from the specified number of whole \xe2\x80\xa6EgCreates a new <code>RawWaker</code> from the provided <code>data</code> pointer and \xe2\x80\xa6FbCreates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>,EeConstructs a <code>Layout</code> suitable for holding a value of type <code>T</code>.CmConstructs a scope guard with a boolean state (defaulting \xe2\x80\xa6DfCreates a new <code>IntAlloc</code> instance wrapping the given value.CnCreates a divisor which can be used for faster computation \xe2\x80\xa600000000000BhConstructs a new <code>GcdReturn</code>.BnCreates a new empty extended grapheme cluster.BoCreates a new empty <code>GraphemeNonul</code>.BlCreates a new empty <code>GraphemeU8</code>.DbReturns the appropriate variant from the given <code>value</code>.ChGenerates some unique <code>ExampleIdSeqUsize</code> ID.B`Drops the next of stack element.BlPerforms the unary <code>!</code> operation.CjNot a direct intrinsic, but it\xe2\x80\x99s very useful and the \xe2\x80\xa600000BgLogical \xe2\x80\x9cnot\xe2\x80\x9d with a boolean value.CmLogical negates the current value, and sets the new value \xe2\x80\xa600000000000DeApplies the <code>not</code> operation, (returns <code>False</code>).DdApplies the <code>not</code> operation, (returns <code>True</code>).5BnReturns an instant corresponding to \xe2\x80\x9cnow\xe2\x80\x9d.CcReturns the system time corresponding to \xe2\x80\x9cnow\xe2\x80\x9d.DaReturns the current instant using <code>performance.now()</code>.DfReturns a new <code>UnixTimeI64</code> anchored to the current second.DfReturns a new <code>UnixTimeU32</code> anchored to the current second.EkReturns the <code>nth</code> element, or <code>None</code> if <code>nth &gt;= ARITY</code>.CeReturns the <code>n</code>th element of the iterator.001CkNumerical types and math operations. num::{geom, logic, \xe2\x80\xa6B`Alias of <code>numerator</code>.00000000000AgOverloadable operators.AnComparing and ordering values.ClTakes a string slice and emits it to the internal buffer \xe2\x80\xa6AkReturns the sender\xe2\x80\x99s PID.GaConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>\xe2\x80\xa6GaConstructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>\xe2\x80\xa6G`Constructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>\xe2\x80\xa6El<code>core</code> Constructs a Pin&lt;&amp;mut T&gt;, by pinning a <code>value: T</code> \xe2\x80\xa60CnRemoves the greatest item from the binary heap and returns \xe2\x80\xa6AkPops the top stack element.B`Pops the top item off the stack.BdRemove the last item from the slice.CgRemoves the first item (if any) from this list, and \xe2\x80\xa6DjRemoves the last character and returns it, or <code>None</code> if the \xe2\x80\xa6ChTruncates <code>self</code> to <code>self.parent</code>.CmRemoves the last element from a vector and returns it, or \xe2\x80\xa62CiRemoves the last character from the string buffer and \xe2\x80\xa63332DiRaises self to the power of <code>exp</code>, using exponentiation by \xe2\x80\xa600000000000000000000000C`Returns the raw pointer part of the fat pointer.AbThe red component.000000000000000BfPerforms the <code>%</code> operation.0BcReverses an iterator\xe2\x80\x99s direction.00BnWhether it\xe2\x80\x99s possible to specify rgb values.0C`Rotates the top three stack elements, clockwise.BfRuns all the coroutines to completion.BhSets or initializes the contained value.0CgSets the element at the given 2D coordinates in the \xe2\x80\xa60CkInitializes the contents of the cell to <code>value</code>.AiSets the contained value.001ClAssigns a new value to the memory location pointed to by \xe2\x80\xa6AdAn array of signals.0iThe sine.000Hg\xe2\x9a\x96\xef\xb8\x8f Wraps the given <code>OptRes</code> <code>value</code> in a <code>Some</code><code>(</code><code>Ok</code><code>(value))</code>.0Dk\xf0\x9d\x90\x93 <code>&amp;str</code> compile-time operations, namespaced from the \xe2\x80\xa6BgString types and related functionality.1BfPerforms the <code>-</code> operation.BaSubtracts from the current value.000000000DmReturns the difference of <code>self</code> and <code>rhs</code> as a new \xe2\x80\xa611CgSubtracts an offset from a pointer (convenience for \xe2\x80\xa6FkReturns the difference of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>\xe2\x80\xa6BjSubtracts another vector from this vector.0CnReturns the amount of time elapsed from another instant to \xe2\x80\xa66DjTakes an iterator and generates <code>Self</code> from the elements by \xe2\x80\xa6BaSums the elements of an iterator.0EeTakes each element in the <code>Iterator</code>: if it is a <code>None</code>, no \xe2\x80\xa6EeTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no \xe2\x80\xa632ClSystem interfaces and hardware abstractions. sys::{arch, \xe2\x80\xa6lThe tangent.000ClSplit into an iterator pair that both yield all elements \xe2\x80\xa600EcGets the <em>Top Level Domain</em> of the application (e.g. <code>com</code> or \xe2\x80\xa6ChReturns a shared reference to the top item on the stack.DaGets the value of the <code>IP_TTL</code> option for this socket.00AkReturns the sender\xe2\x80\x99s UID.BnReturns the user ID of the owner of this file.BkAbstractions for uniquely identifying data.CiFetches the environment variable key from the current \xe2\x80\xa6AbThe vec of points.0AeWeb APIs interfacing.BgLogical \xe2\x80\x9cxor\xe2\x80\x9d with a boolean value.BiBitwise \xe2\x80\x9cxor\xe2\x80\x9d with the current value.00000000000FjReturns <code>Some</code> if exactly one of <code>self</code>, <code>optb</code> is <code>Some</code>, \xe2\x80\xa6CbConverts the arguments to iterators and zips them.Ci\xe2\x80\x98Zips up\xe2\x80\x99 two iterators into a single iterator of \xe2\x80\xa60ChZips <code>self</code> with another <code>Option</code>.1AcAG grayscale 16bpp.0Dj<code>?std</code> A string describing the architecture of the CPU that \xe2\x80\xa6AbANSI escape codes.0B`\xf0\x9f\x8c\x90 Arch-related functionality.0f10^-180BnChoose diffusion type automatically. (Default)CkChoose automatically the method for finding the largest \xe2\x80\xa6CaChoose automatically the method for selecting \xe2\x80\xa6BbChoose quality mode automatically.3210BaThe base value for unit prefixes.00BhThe base value for binary unit prefixes.BdThe base value for SI unit prefixes.BoThe size of this non-zero integer type in bits.00000000000ChThe size of a pointer in bits, for the current platform.BnReturns the size of this integer type in bits.00000000000000000000000BdThe size of an IPv4 address in bits.BdThe size of an IPv6 address in bits.AaThe size in bits.00000000000BiCode to set the foreground color to blue.AhCode to set bold effect.Eh<code>core</code> A zero-sized marker for a <code>Storage</code> type that wraps its \xe2\x80\xa60Ci\xf0\x9f\xa5\xa1 A compile-time configurable radix-based encoding \xe2\x80\xa60fU+00070f4 Blue0mBoolean value00000000000000000DkBoth the reading and the writing portions of the <code>TcpStream</code> \xe2\x80\xa60De\xf0\x9d\x90\x93 <code>core</code> Representation of a borrowed C string (See \xe2\x80\xa600BiCode to set the foreground color to cyan.Co\xf0\x9f\x8c\x90 Provides <em>const</em> casting, joining and splitting \xe2\x80\xa60Bl<code>core</code> A mutable memory location.0Bm\xf0\x9d\x90\x93 \xf0\x9f\x8c\x90 Unicode scalars-related operations.k32-bit charBj\xf0\x9f\x9a\xa9 An invalid given character was found.CkA Unicode character (text input, international layouts, \xe2\x80\xa6Dc\xf0\x9f\x9b\xa1\xef\xb8\x8f A unicode character (FFI-safe, stored as <code>u32</code>).333333333333333334210Dd<code>core</code> Types whose values can be duplicated simply by \xe2\x80\xa6Ea<code>core</code> Derive macro generating an impl of the trait <code>Copy</code>.10f6 Cyan0BeSeek to next data (for sparse files).d10^10e10^-10C`Prefix <code>C:</code> for the given disk drive.0oDown arrow key.0Cd<code>core</code> Custom code within the destructor.0AfEcho input characters.Bg\xe2\x80\x9cNumerical argument out of domain.\xe2\x80\x9dBkFail if file exists (when used with CREAT).e2^60.0AmFIFO/pipe (S_IFIFO in POSIX).B`Regular file (S_IFREG in POSIX).Df<code>std</code> An object providing access to an open file on the \xe2\x80\xa60Dk\xf0\x9d\x9f\x99 \xf0\x9f\x8c\x90 Provides comprehensive fractional operations on <code>T</code>\xe2\x80\xa60Dk<code>core</code> Used to do value-to-value conversions while consuming \xe2\x80\xa60DjThe data could not be sent on the <code>sync_channel</code> because it \xe2\x80\xa6BbFull quality palette construction.Cc= 0\xc2\xba = 360\xc2\xba (1\xcf\x84 = 2\xcf\x80), a full turn, or no turn.102AcGA grayscale 16bpp.0CiCode to set the foreground and background to 24-point \xe2\x80\xa6e2^30.0d10^90BeSeek to next hole (for sparse files).EbIndicates whether the 6 fields from <code>h</code> to <code>ns</code> are enabled.Bg\xf0\x9f\x94\x80 <code>core</code> A hashable type.Eh\xf0\x9f\x94\x80 <code>core</code> Derive macro generating an impl of the trait <code>Hash</code>\xe2\x80\xa610BkThe first element of the tuple, at index 0.0BbHigh quality palette construction.0iHome key.0CjAllows attaching operations or side effects to a value \xe2\x80\xa60BiInitial value for <code>WasmAlloc</code>.oEnable signals.BgEnable XON/XOFF flow control on output.AeThe \xe2\x80\x9cinfo\xe2\x80\x9d level.BoCorresponds to the <code>Info</code> log level.10Di<code>core</code> A value-to-value conversion that consumes the input \xe2\x80\xa60BmThe type of the elements being iterated over.000Ca\xf0\x9f\x8c\x90 \xf0\x9f\x94\x84 Iterator-related namespaced operations.CkReturned iterator over socket addresses which this type \xe2\x80\xa610e2^10.0d10^30CbA type representing the kind of <code>Self</code>.0Bnln(2) (A002162) <code>\xe2\x89\x88 0.69314718\xe2\x80\xa6</code>00000BaOn the left side of the keyboard.oLeft arrow key.AbLeft mouse button.C`Indication that contents should be left-aligned.3021ChAn ordering where a compared value is less than another.0AjGamma-encoded luma (Y\xe2\x80\xb2).0e2^20.0d10^60iMenu key.0CgMIDI device access (without system exclusive messages).0Ch\xf0\x9f\x8c\x90 Multi-producer, single-consumer channel operations.0e10^-90AnSkips to the next media track.0BhRepresents the absence of <em>data</em>.iNo value.CgAn absence of sign, associated with Zero. (The default)CjNo dithering is applied. Pixels are directly quantized \xe2\x80\xa6A`2^0 (no prefix).A`10^0 (no prefix)555555554445555555552103BhSimply comparing the range in RGB space.0AhU+0000 (Default variant)AkExplicit <code>null</code>.01Dd<code>std</code> A synchronization primitive for one-time global \xe2\x80\xa60ClSpecifically signed output type for some operations (\xe2\x96\xb6 \xe2\x80\xa60mPalette 1bpp.0mPalette 2bpp.0mPalette 4bpp.0mPalette 8bpp.0CdObtain fd for path resolution only (no file access).Cn<code>std</code> A slice of a path (akin to <code>str</code>).0e2^50.0e10^150f10^-120AfStarts media playback.0BiPermission to receive push notifications.0AmOpen for reading and writing.DfThe reading portion of the <code>TcpStream</code> should be shut down.0CkRGB color with 8-bit integer components (sRGB gamma space).0AnRGB+A color with 4 components.0CnR\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 coefficients for computing sRGB luma (same as \xe2\x80\xa60A`Synchronous I/O.Da<code>core</code> Types that can be transferred across thread \xe2\x80\xa60Be\xf0\x9f\x93\x8f Represents the sign of a number.0BbSome value of type <code>T</code>.000Df\xf0\x9f\x8c\x90 Provides sorting methods for arrays and slices of <code>T</code>.0AeStops media playback.0Dd<code>core</code> Types for which it is safe to share references \xe2\x80\xa60Ca<code>TABDLY</code>: Horizontal-tab delay type 0.Ca<code>TABDLY</code>: Horizontal-tab delay type 1.Ca<code>TABDLY</code>: Horizontal-tab delay type 2.Ca<code>TABDLY</code>: Horizontal-tab delay type 3.CmThe last element of the tuple, at index <code>ARITY-1</code>.0e2^40.0e10^120BcA type-level logical <em>true</em>.0DkThe <code>DataType</code> type that pairs with this <code>DataValue</code>.0AoCommon trait for unit prefixes.0Cf\xf0\x9f\x9a\xa9 Invalid Utf-8 found while interpreting a byte \xe2\x80\xa60BaWakes the system from sleep mode.0AeThe \xe2\x80\x9cwarn\xe2\x80\x9d level.BoCorresponds to the <code>Warn</code> log level.10Af\xf0\x9f\x8c\x90 A Wasm namespace.0Bb\xf0\x9f\x8e\xb2 X ABC PRNG for 8-bit devices.0EaIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6e2^80.0BeA <code>Vector</code> with all zeros.0000000000000AhThe additive identity 0.AhA duration of zero time.011111e2^70.0nValue was ZeroAjPositive or negative zero.01oThe arc cosine.000BnGets the \xe2\x80\x9caddress\xe2\x80\x9d portion of the pointer.CaReturns the faulting address (e.g., for SIGSEGV).CfConcatenates or prints <code>Ansi</code> escape codes.0BaArchitecture-specific intrinsics.AjThe area of the 2d extent.0AaThe message body.BoAdds multiple arguments to pass to the program.CiReturns the arguments that this program was started with.Ao<code>argv</code> modificationsmThe arc sine.000A`The arc tangent.000DiProvides a reference to the back element, or <code>None</code> if the \xe2\x80\xa60BhUI backends. back::{miniquad, crossterm}BeReturns the band event (for SIGPOLL).DeCreates a new <code>TcpListener</code> which will be bound to the \xe2\x80\xa6BlCreates a UDP socket from the given address.AgReturns the inner bits.00AcThe blue component.000000000000000c\xe2\x80\xa60AlPerforms the call operation.0BcCasts to a pointer of another type.oThe cubic root.000Ck<em><code>c</code>ustomizable <code>dbg!</code></em> macro.0D`The smallest integer greater than or equal to <code>self</code>.0DkThe smallest integer greater than or equal to <code>x</code>. $$ \\lceil \xe2\x80\xa60AmShareable mutable containers.ClA for loop that is usable in <em>compile-time</em> contexts.0Cf\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x90\x93 <code>core</code> A 32-bit unicode scalar.0AoChemistry-related abstractions.CnCode reflective synthesis. code::{error, marker, ops, panic\xe2\x80\xa6AhReturns the signal code.BmReturns the exit code of the process, if any.AaColumns of cells.0BfSets the given miniquad configuration.AgBitwise-copies a value.FiCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>dst</code>. Can \xe2\x80\xa6CeCopies the entire contents of a reader into a writer.CmCopies the contents of one file to another. This function \xe2\x80\xa6AfThe hyperbolic cosine.000DkCreates a new <code>AnsiColor8b</code> from a 216-color 6x6x6 RGB cube. \xe2\x80\xa6ClData handling and manipulation. data::{codec, iter, key, \xe2\x80\xa6DjGets the <code>data</code> pointer used to create this <code>Waker</code>.CjInternal storage of matrix elements in a fixed-size array.0CfDraw elements using currently applied bindings and \xe2\x80\xa6AfDrawing functionality.1BfExecutes the destructor for this type.AkDrops the <code>Arc</code>.BdDrops the <code>Weak</code> pointer.AlDrops the top stack element.AdDisposes of a value.AjDrops the <code>Rc</code>.BlReleases the lock when the guard is dropped.4BcManually drops the contained value.CnOn drop, invokes the callback with the guarded value and a \xe2\x80\xa68BjDuplicates the top stack pair of elements.BgElectrical and electronic abstractions.Dc<code>core</code> Inspects an environment variable at compile time.0CmInserts or updates multiple explicit environment variable \xe2\x80\xa6BkThe complementary error function (1 - erf).0BeExecutes JavaScript code immediately.CgExecutes JavaScript inside this worker, returning a \xe2\x80\xa61CjTerminates the current process with the specified exit \xe2\x80\xa600f$2^x$.000BgThe source file containing the message.ClReturns the name of the source file from which the panic \xe2\x80\xa6DdFills all elements of the array with the given <code>element</code>.DcFills all elements of the grid with the given <code>element</code>.CnReturns the character used as \xe2\x80\x98fill\xe2\x80\x99 whenever there is \xe2\x80\xa6CkSearches for an element of an iterator that satisfies a \xe2\x80\xa600Ch$ 1 / \\sqrt{x} $ the fast inverse square root algorithm.000CnReturns a copy of <code>self</code> with all its bits flipped.00CjFolds every element into an accumulator by applying an \xe2\x80\xa600AcFont functionality.BjConverts to this type from the input type.AoReturns the argument unchanged.CkConverts a <code>T</code> into an <code>Arc&lt;T&gt;</code>EaAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.CkMove a boxed object to a new, reference-counted allocation.DjAllocates a reference-counted slice and moves <code>v</code>\xe2\x80\x99s items \xe2\x80\xa6CnConverts an atomically reference-counted string slice into \xe2\x80\xa65CjCreates an atomically reference-counted pointer from a \xe2\x80\xa6DcConverts a <code>[T; N]</code> into an <code>Arc&lt;[T]&gt;</code>.CgAllocates a reference-counted slice and fills it by \xe2\x80\xa668888888888C`Moves the string into a <code>Cow::Owned</code>.DgCreates a clone-on-write pointer from a reference to <code>Path</code>.DiConverts a string slice into a <code>Borrowed</code> variant. No heap \xe2\x80\xa6DiCreates a <code>Borrowed</code> variant of <code>Cow</code> from a slice.D`Converts the string reference into a <code>Cow::Borrowed</code>.0EeConverts a <code>String</code> reference into a <code>Borrowed</code> variant. No \xe2\x80\xa6FiConverts a <code>&amp;</code><code>CString</code> into a borrowed <code>Cow</code> without copying or \xe2\x80\xa6EdConverts a <code>CStr</code> into a borrowed <code>Cow</code> without copying or \xe2\x80\xa6EeConverts a <code>CString</code> into an owned <code>Cow</code> without copying or \xe2\x80\xa6AoReturns the argument unchanged.FaCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to <code>Vec</code>.EgCreates an <code>Owned</code> variant of <code>Cow</code> from an owned instance of \xe2\x80\xa6ChCreates a clone-on-write pointer from a reference to \xe2\x80\xa6CnCreates a clone-on-write pointer from an owned instance of \xe2\x80\xa6EfCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to an \xe2\x80\xa6DnConverts a <code>String</code> into an <code>Owned</code> variant. No heap \xe2\x80\xa66666666666666666hExamplesCjConverts a <code>T</code> into a <code>Box&lt;T&gt;</code>FlConverts a <code>String</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.EdConverts the given <code>String</code> to a boxed <code>str</code> slice that is \xe2\x80\xa6DcConverts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>DgConverts a <code>&amp;mut [T]</code> into a <code>Box&lt;[T]&gt;</code>FbConverts a <code>&amp;CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the contents \xe2\x80\xa6EmConverts a <code>&amp;mut CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the \xe2\x80\xa6EaConverts a <code>Cow&lt;&#39;_, [T]&gt;</code> into a <code>Box&lt;[T]&gt;</code>E`Converts an <code>OsString</code> into a Box&lt;OsStr&gt; without copying or \xe2\x80\xa6CcCreates a boxed <code>Path</code> from a reference.DaConverts a <code>Cow</code> into a box of dyn <code>Error</code>.DcConverts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>FgConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>Box&lt;CStr&gt;</code>, by copying the \xe2\x80\xa63FiConverts a <code>Cow</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.DaConverts a <code>str</code> into a box of dyn <code>Error</code>.DgConverts a <code>&amp;mut str</code> into a <code>Box&lt;str&gt;</code>D`Creates a boxed <code>Path</code> from a clone-on-write pointer.FiConverts a <code>str</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.EhConverts a <code>Cow&lt;&#39;a, OsStr&gt;</code> into a Box&lt;OsStr&gt;, by copying \xe2\x80\xa6CgConverts a <code>PathBuf</code> into a Box&lt;Path&gt;.AoReturns the argument unchanged.CjCopies the string into a newly allocated Box&lt;OsStr&gt;.EaConverts a <code>Cow&lt;&#39;_, str&gt;</code> into a <code>Box&lt;str&gt;</code>DjConverts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>DaConverts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>3DkConverts a type of <code>Error</code> into a box of dyn <code>Error</code>.BeConverts a vector into a boxed slice.FcConverts a type of <code>Error</code> + <code>Send</code> + <code>Sync</code> into a box of dyn \xe2\x80\xa6DmConverts a <code>CString</code> into a Box&lt;CStr&gt; without copying or \xe2\x80\xa6DdConverts a <code>String</code> into a box of dyn <code>Error</code>.99CmConverts a <code>bool</code> into an <code>AtomicBool</code>.::::::::CeReturns a array filled with an iterator, in the heap.CfReturns a array filled with an iterator, in the stack.<<<DmConverts a <code>Vec&lt;T&gt;</code> into a <code>BinaryHeap&lt;T&gt;</code>.===CnConverts NonZero&lt;i8&gt; to NonZero&lt;isize&gt; losslessly.CnConverts NonZero&lt;i64&gt; to NonZero&lt;i128&gt; losslessly.ClConverts NonZero&lt;u8&gt; to NonZero&lt;i32&gt; losslessly.AoReturns the argument unchanged.ClConverts NonZero&lt;u8&gt; to NonZero&lt;i64&gt; losslessly.ClConverts NonZero&lt;u8&gt; to NonZero&lt;u16&gt; losslessly.ClConverts NonZero&lt;u8&gt; to NonZero&lt;u64&gt; losslessly.CnConverts NonZero&lt;i32&gt; to NonZero&lt;i128&gt; losslessly.CmConverts NonZero&lt;u8&gt; to NonZero&lt;u128&gt; losslessly.CnConverts NonZero&lt;u8&gt; to NonZero&lt;usize&gt; losslessly.CmConverts NonZero&lt;u16&gt; to NonZero&lt;u32&gt; losslessly.CnConverts NonZero&lt;u32&gt; to NonZero&lt;u128&gt; losslessly.CnConverts NonZero&lt;i16&gt; to NonZero&lt;i128&gt; losslessly.CnConverts NonZero&lt;u64&gt; to NonZero&lt;i128&gt; losslessly.ClConverts NonZero&lt;u8&gt; to NonZero&lt;i16&gt; losslessly.CnConverts NonZero&lt;u32&gt; to NonZero&lt;i128&gt; losslessly.CmConverts NonZero&lt;u32&gt; to NonZero&lt;i64&gt; losslessly.CnConverts NonZero&lt;u16&gt; to NonZero&lt;i128&gt; losslessly.CmConverts NonZero&lt;i16&gt; to NonZero&lt;i32&gt; losslessly.ClConverts NonZero&lt;i8&gt; to NonZero&lt;i32&gt; losslessly.CmConverts NonZero&lt;u16&gt; to NonZero&lt;i64&gt; losslessly.CoConverts NonZero&lt;i16&gt; to NonZero&lt;isize&gt; losslessly.ClConverts NonZero&lt;u8&gt; to NonZero&lt;u32&gt; losslessly.CmConverts NonZero&lt;u32&gt; to NonZero&lt;u64&gt; losslessly.CoConverts NonZero&lt;u16&gt; to NonZero&lt;usize&gt; losslessly.CmConverts NonZero&lt;u16&gt; to NonZero&lt;u64&gt; losslessly.CmConverts NonZero&lt;i32&gt; to NonZero&lt;i64&gt; losslessly.CnConverts NonZero&lt;u64&gt; to NonZero&lt;u128&gt; losslessly.CmConverts NonZero&lt;u16&gt; to NonZero&lt;i32&gt; losslessly.CmConverts NonZero&lt;i16&gt; to NonZero&lt;i64&gt; losslessly.CnConverts NonZero&lt;u8&gt; to NonZero&lt;isize&gt; losslessly.CmConverts NonZero&lt;i8&gt; to NonZero&lt;i128&gt; losslessly.CmConverts NonZero&lt;u8&gt; to NonZero&lt;i128&gt; losslessly.ClConverts NonZero&lt;i8&gt; to NonZero&lt;i64&gt; losslessly.ClConverts NonZero&lt;i8&gt; to NonZero&lt;i16&gt; losslessly.CnConverts NonZero&lt;u16&gt; to NonZero&lt;u128&gt; losslessly.AoReturns the argument unchanged.0000CfReturns a queue filled with an iterator, in the stack.CeReturns a queue filled with an iterator, in the heap.222hExamples33CfReturns a stack filled with an iterator, in the stack.4CeReturns a stack filled with an iterator, in the heap.555555DmConverts a <code>[(K, V); N]</code> into a <code>BTreeMap&lt;K, V&gt;</code>.6666666666DaCopies any value implementing AsRef&lt;OsStr&gt; into a newly \xe2\x80\xa6CmConverts a <code>String</code> into an <code>OsString</code>.8FbConverts a <code>Cow&lt;&#39;a, OsStr&gt;</code> into an <code>OsString</code>, by copying the \xe2\x80\xa6CmConverts a <code>PathBuf</code> into an <code>OsString</code>E`Converts a Box&lt;OsStr&gt; into an <code>OsString</code> without copying or \xe2\x80\xa6;;DfReturns a <code>File</code> that takes ownership of the given file \xe2\x80\xa6<<<<DbConverts a <code>&amp;T</code> to a <code>NonNull&lt;T&gt;</code>.DfConverts a <code>&amp;mut T</code> to a <code>NonNull&lt;T&gt;</code>.>>>>>DgConverts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.CnConverts an <code>ErrorKind</code> into an <code>Error</code>.CjConverts <code>TryReserveError</code> to an error with \xe2\x80\xa6AoReturns the argument unchanged.000000FdReturns <code>None</code> if 0, <code>Positive</code> if &gt; 0 and <code>Negative</code> if &lt; 0.000FcReturns <code>Positive</code> if <code>true</code> and <code>Negative</code> if <code>false</code>.11FfReturns <code>None</code> if 0.0, <code>Positive</code> if &gt; 0 and <code>Negative</code> if &lt; 0.220223223333DeConverts a <code>[T; N]</code> into a <code>BTreeSet&lt;T&gt;</code>.444444444444DgConverts a <code>[T; N]</code> into a <code>LinkedList&lt;T&gt;</code>.555555555555DgTurn a <code>Vec&lt;T&gt;</code> into a <code>VecDeque&lt;T&gt;</code>.6DeConverts a <code>[T; N]</code> into a <code>VecDeque&lt;T&gt;</code>.7777EaCreates a new <code>OnceCell&lt;T&gt;</code> which already contains the given \xe2\x80\xa68DdCreates a new <code>Cell&lt;T&gt;</code> containing the given value.CgAllocates a reference-counted slice and fills it by \xe2\x80\xa6FeConverts a <code>Path</code> into an <code>Rc</code> by copying the <code>Path</code> data into a \xe2\x80\xa6CmCreates a reference-counted pointer from a clone-on-write \xe2\x80\xa6EmConverts a <code>CString</code> into an Rc&lt;CStr&gt; by moving the <code>CString</code> \xe2\x80\xa6DkConverts an <code>OsString</code> into an Rc&lt;OsStr&gt; by moving the \xe2\x80\xa6CiCopies the string into a newly allocated Rc&lt;OsStr&gt;.05CiConverts a reference-counted string slice into a byte \xe2\x80\xa6DjAllocates a reference-counted slice and moves <code>v</code>\xe2\x80\x99s items \xe2\x80\xa6DhAllocates a reference-counted string slice and copies <code>v</code> \xe2\x80\xa6FaConverts a <code>&amp;CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the contents \xe2\x80\xa6DgConverts a generic type <code>T</code> into an <code>Rc&lt;T&gt;</code>EmConverts a <code>PathBuf</code> into an Rc&lt;Path&gt; by moving the <code>PathBuf</code> \xe2\x80\xa63AoReturns the argument unchanged.CdMove a boxed object to a new, reference counted, \xe2\x80\xa65ElConverts a <code>&amp;mut CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the \xe2\x80\xa6DbConverts a <code>[T; N]</code> into an <code>Rc&lt;[T]&gt;</code>.>3DgCreates a new <code>RefCell&lt;T&gt;</code> containing the given value.4444DaConverts a borrowed <code>OsStr</code> to a <code>PathBuf</code>.CnConverts an <code>OsString</code> into a <code>PathBuf</code>.CgConverts a Box&lt;Path&gt; into a <code>PathBuf</code>.CcConverts a clone-on-write pointer to an owned path.CjConverts a <code>String</code> into a <code>PathBuf</code>9DjCreates a new <code>UnsafeCell&lt;T&gt;</code> containing the given value.:::::::::BlRedirect command stdout/stderr to our stderrCnConverts a <code>ChildStderr</code> into a <code>Stdio</code>.CnConverts a <code>ChildStdout</code> into a <code>Stdio</code>.DiTakes ownership of a file descriptor and returns a <code>Stdio</code> \xe2\x80\xa6CmConverts a <code>ChildStdin</code> into a <code>Stdio</code>.?CgConverts a <code>File</code> into a <code>Stdio</code>.BlRedirect command stdout/stderr to our stdoutAoReturns the argument unchanged.00000000000CkCreates a new mutex in an unlocked state ready for use. \xe2\x80\xa611111E`Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked. \xe2\x80\xa622222222222222222222CoCreates a new cell with its contents set to <code>value</code>.3333333EbConverts the given <code>String</code> to a vector <code>Vec</code> that holds \xe2\x80\xa6DhAllocates a <code>Vec&lt;u8&gt;</code> and fills it with a UTF-8 string.EgAllocates a <code>Vec&lt;T&gt;</code> and fills it by cloning <code>s</code>\xe2\x80\x99s items.EaAllocates a <code>Vec&lt;T&gt;</code> and moves <code>s</code>\xe2\x80\x99s items into it.DgTurn a <code>VecDeque&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.DmConverts a <code>BinaryHeap&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.BnConverts a clone-on-write slice into a vector.:4CeConverts a <code>CString</code> into a Vec&lt;u8&gt;.5ChConverts a boxed slice into a vector by transferring \xe2\x80\xa66<<<<<<<<EgConverts a Vec&lt;NonZero&lt;u8&gt;&gt; into a <code>CString</code> without copying \xe2\x80\xa6=DmConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or \xe2\x80\xa6EoConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the \xe2\x80\xa6DlConverts a &amp;CStr into a <code>CString</code> by copying the contents \xe2\x80\xa6AoReturns the argument unchanged.000EcConverts the given boxed <code>str</code> slice to a <code>String</code>. It is \xe2\x80\xa6CoConverts a <code>&amp;String</code> into a <code>String</code>.ClConverts a <code>&amp;str</code> into a <code>String</code>.D`Converts a <code>&amp;mut str</code> into a <code>String</code>.4ClConverts a clone-on-write string to an owned instance of \xe2\x80\xa6CoAllocates an owned <code>String</code> from a single character.66666666666666666666666666666666666666666666666666666666666666666666666666CoConstructs an <code>ExitCode</code> from an arbitrary u8 value.7777777777777777777777777777DcConverts a <code>RecvError</code> into a <code>TryRecvError</code>.88DgConverts a <code>RecvError</code> into a <code>RecvTimeoutError</code>.9EeConverts a <code>SendError&lt;T&gt;</code> into a <code>TrySendError&lt;T&gt;</code>.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::CjUse a <code>Wake</code>-able type as a <code>Waker</code>.0;;;;;;;;;;;CmConvert an exclusive reference to an array into borrowing \xe2\x80\xa6BoConvert an exclusive slice into borrowing mode.BmConvert <code>..</code> into allocation mode.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>DbCreates an <code>IpAddr::V4</code> from a four element byte array.DfCreates an <code>IpAddr::V6</code> from an eight element 16-bit array.DeCreates an <code>IpAddr::V6</code> from a sixteen element byte array.CeCopies this address to a new <code>IpAddr::V4</code>.CeCopies this address to a new <code>IpAddr::V6</code>.AoReturns the argument unchanged.EgUses <code>Ipv4Addr::from_bits</code> to convert a host byte order <code>u32</code> \xe2\x80\xa6D`Creates an <code>Ipv4Addr</code> from a four element byte array.2DdCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.DcCreates an <code>Ipv6Addr</code> from a sixteen element byte array.EhUses <code>Ipv6Addr::from_bits</code> to convert a host byte order <code>u128</code> \xe2\x80\xa65DhConverts a <code>SocketAddrV6</code> into a <code>SocketAddr::V6</code>.6DhConverts a <code>SocketAddrV4</code> into a <code>SocketAddr::V4</code>.EfConverts a tuple struct (Into&lt;<code>IpAddr</code>&gt;, <code>u16</code>) into a \xe2\x80\xa688EeConverts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.CdMoves <code>val</code> into a new <code>Some</code>.:ElConverts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>ElConvert the <code>CtOption&lt;T&gt;</code> wrapper into an <code>Option&lt;T&gt;</code>, \xe2\x80\xa6<<<<<G`Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not \xe2\x80\xa60EaConverts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>.1>>>>>>>>>>>>EeMoves the value into a <code>Poll::Ready</code> to make a <code>Poll&lt;T&gt;</code>.?CmUse a <code>Wake</code>-able type as a <code>RawWaker</code>.00AoReturns the argument unchanged.000BjConverts to this type from the input type.1111111111111111111111111111111111111111111DaCreates an iterator which ends after the first <code>None</code>.00CmGame-development and interactive applications. game::{loop\xe2\x80\xa6CjGeometric types and operations, spatial constructs and \xe2\x80\xa6Ab GLSL interfacing.AkGrammar, structural theory.EhCreates a new <code>AnsiColor8b</code> from a 24-color grayscale <code>value</code>, \xe2\x80\xa6CdFeeds this value into the given <code>Hasher</code>.AcHash a raw pointer.CdA convenience method for when you need a quick hash.00CaComputes the FNV hash of the provided byte slice.000AhGeneric hashing support.4ClInformation about something that was obtained, observed, \xe2\x80\xa60CeReturns a shared reference to the head of this tuple.0BnInternationalization and localization support.CcOptional icon data used by the OS where applicable:0Cm(info) Outputs a message to the console with the info log \xe2\x80\xa6CaContextual static information about the mismatch.Cg<code>log</code> Logs a message at the indicated level.10BfReturns the event handler initialized.BbInitialize the pixel buffer stage.CjInitialize the miniquad rendering context, opening the \xe2\x80\xa62CjConverts this type into the (usually inferred) input type.BaCalls <code>U::from(self)</codedReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_0</code> (The 1st).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_1</code> (The 2nd).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_2</code> (The 3rd).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_3</code> (The 4th).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_4</code> (The 5th).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_5</code> (The 6th).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_6</code> (The 7th).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_7</code> (The 8th).EdReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_8</code> (The 9th).EeReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_9</code> (The 10th).BmIterate through all supported logging levels.BoIterate through all supported filtering levels.CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6CmReturns an iterator visiting all values in the underlying \xe2\x80\xa6AdReturns an iterator.CmAn iterator visiting all elements in arbitrary order. The \xe2\x80\xa61CkGets an iterator over the entries of the map, sorted by \xe2\x80\xa6CnReturns an immutable iterator (yields references to items, \xe2\x80\xa60CbCreates an iterator over the contents of the list.DjGets an iterator that visits the elements in the <code>BTreeSet</code> \xe2\x80\xa6AlProvides a forward iterator.BaReturns a front-to-back iterator.ClProduces an iterator over the path\xe2\x80\x99s components viewed \xe2\x80\xa6CmReturns an iterator that will block waiting for messages, \xe2\x80\xa6CfReturns an iterator over the possibly contained value.0AnComposable external iteration.Ao<code>jiff</code> modificationsBjWaits for the associated thread to finish.0DiCombine all iterator elements into one <code>String</code>, separated \xe2\x80\xa60EkCreates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.1CkThe jump function for the generator, equivalent to 2^64 \xe2\x80\xa6CiAn iterator visiting all keys in arbitrary order. The \xe2\x80\xa6CkGets an iterator over the keys of the map, in sorted order.CnForces the child process to exit. If the child has already \xe2\x80\xa6D`Returns the corresponding <code>ErrorKind</code> for this error.AoReturns the parsed prefix data.BiReturns the kind of the normalized angle.0000000000000CiOutputs the detailed cause of parsing an integer failing.BhThe type of pointer (mouse, touch, pen).0CnLanguage functionality, DSLs and FFIs. lang::{dsl, ffi, hum\xe2\x80\xa6CkReturns a reference to the last element in the set, if any.CbConsumes the iterator, returning the last element.00DkConsumes and leaks the <code>Box</code>, returning a mutable reference, \xe2\x80\xa6DeConsumes and leaks the <code>OsString</code>, returning a mutable \xe2\x80\xa6CaConverts into a reference to the underlying data.CiConverts into a mutable reference to the underlying data.DdConsumes and leaks the <code>PathBuf</code>, returning a mutable \xe2\x80\xa6DjConsumes and leaks the <code>Vec</code>, returning a mutable reference \xe2\x80\xa6DcConsumes and leaks the <code>String</code>, returning a mutable \xe2\x80\xa6CkDistance from the alignment point to the leftmost glyph \xe2\x80\xa60DgCalculates a linearly interpolated value between <code>u..=v</code> \xe2\x80\xa6000B`The line containing the message.ChReturns the line number from which the panic originated.BjImplementations of sequential collections.BkLoads a value from the <code>Atomic</code>.AlLoads a value from the bool.AoLoads a value from the pointer.BfLoads a value from the atomic integer.0000000BdLoads a value from the atomic float.11011CkAcquire an exclusive lock on the file. Blocks until the \xe2\x80\xa6CmLocks this handle to the standard input stream, returning \xe2\x80\xa6CnLocks this handle to the standard output stream, returning \xe2\x80\xa6CmLocks this handle to the standard error stream, returning \xe2\x80\xa6CmAcquires a mutex, blocking the current thread until it is \xe2\x80\xa6CbAcquires the lock, spinning until it is available.BjThe base 2 logarithm of <code>self</code>.0AeThe base 2 logarithm.0AbGame loop, timing.Eg<code>safe_arch</code> The data for a 128-bit SSE register of four <code>f32</code> \xe2\x80\xa60Eh<code>safe_arch</code> The data for a 256-bit AVX register of eight <code>f32</code> \xe2\x80\xa60AiSets the method for mean.CkMethod for choosing a representative mean color for the \xe2\x80\xa60AoMechanics-related abstractions.AgMidi input capabilitiesAcMidi functionality.1BhReturns the rights applied to this file.CdThe active modifiers of the key (e.g., Shift, Ctrl).000BhMulti-producer, single-consumer channel.AoReturns the name of the prefix.CfReturns the static name of the storage implementation.CjNames the thread-to-be. Currently the name is used for \xe2\x80\xa6AiGets the thread\xe2\x80\x99s name.Al(name) Gets the window name.4443ClInformation about something that was needed, expected or \xe2\x80\xa60CaAdvances the iterator and returns the next value.B`Iterates over shared references.0AgReturns the next month.AiReturns the next weekday,AaOverflow Behavior4BfDrops the pair of next stack elements.DhReturns a reference to a <code>Waker</code> that does nothing when used.AkCreates a null raw pointer.CjThis stream will be ignored. This is the equivalent of \xe2\x80\xa6ChCreates an iterator that yields an element exactly once.BjAttempts to open a file in read-only mode.DiCreates an open interval $(l, u)$ <em><code>lower..&lt;upper</code></em>.EbOpens a file at <code>path</code> with the options specified by <code>self</code>.C`Duplicates the next of stack element to the top.CjBlocks unless or until the current thread\xe2\x80\x99s token is \xe2\x80\xa600CeReturns the full path to the file that this entry \xe2\x80\xa6AoThe inner <code>PathBuf</code>.0DiReturns the greatest item in the binary heap, or <code>None</code> if \xe2\x80\xa6AlPeeks the top stack element.BkAttempt to look ahead <code>n</code> bytes.CjReceives data on the socket from the remote address to \xe2\x80\xa6CjReceives single datagram on the socket from the remote \xe2\x80\xa6CmReturns a reference to the next() value without advancing \xe2\x80\xa6ClPhysical units and measurements. phys::{bio, chem, elec, \xe2\x80\xa6AlSound playback capabilities.0DgCompares and returns the maximum of two <code>PartialOrd</code>ered \xe2\x80\xa6DgCompares and returns the minimum of two <code>PartialOrd</code>ered \xe2\x80\xa6CdAttempts to resolve the future to a final value, \xe2\x80\xa6DdPolls the result of this job and writes it into <code>buffer</code>.1CgReturns the port number associated with this socket \xe2\x80\xa600DdRaises <code>self</code> to the <code>y</code> floating point power.0CiRaises itself to the <code>p</code> floating point power.0CmRaises <code>self</code> to the <code>p</code> integer power.0CjRaises <code>x</code> to the <code>p</code> integer power.0BdPushes an item onto the binary heap.CjPushes a new <code>element</code> to the top of the stack.BgPushes a value at the top of the stack.CcExtends the string with the given &amp;OsStr slice.CfPushes a new item onto the beginning of this list, \xe2\x80\xa6DbAppends to the end of the string the given <code>character</code>.CaExtends <code>self</code> with <code>path</code>.BoAppends an element to the back of a collection.2DkAppends the given <code>char</code> to the end of this <code>String</code>.333AnAdds a closure to the manager.3CmThis function simply quits the application without giving \xe2\x80\xa6AiRandom number generation.CjReturns the device ID of this file (if it is a special \xe2\x80\xa6CgPull some bytes from this source into the specified \xe2\x80\xa6AoReads some bytes from the file.DiReads the value from <code>self</code> without moving it. This leaves \xe2\x80\xa6BkReads the value from src without moving it.DgFill <code>buf</code> with the contents of the \xe2\x80\x9cfront\xe2\x80\x9d slice as \xe2\x80\xa6DhLocks this <code>RwLock</code> with shared read access, blocking the \xe2\x80\xa6B`Sets the option for read access.ChReads the entire contents of a file into a bytes vector.7CmReceives a single datagram message on the socket from the \xe2\x80\xa6ClAttempts to wait for a value on this receiver, returning \xe2\x80\xa6CiRotates the top six stack elements, clockwise, two times.nRows of cells.0FeReturns <code>true</code> if the current <code>state</code> equals the given <code>expected</code>\xe2\x80\xa6DeAn iterator adapter which, like <code>fold</code>, holds internal \xe2\x80\xa600BiSeek to an offset, in bytes, in a stream.BfSeek to an offset, in bytes in a file.CfSeek to an offset, in bytes, in the underlying reader.CgSeek to the offset, in bytes, in the underlying writer.3CnSends data on the socket to the remote address to which it \xe2\x80\xa6CjAttempts to send a value on this channel, returning it \xe2\x80\xa6BjSends a value on this synchronous channel.Hh\xe2\x9a\x96\xef\xb8\x8f Wraps the given <code>OptRes</code> <code>value</code> in a <code>Some</code><code>(</code><code>Err</code><code>(error))</code>.0CcReturns the <code>Sign</code> of <code>self</code>.DfReturns the sign of this formatter (<code>+</code> or <code>-</code>).1AnReturns the <code>Sign</code>.0AdThe hyperbolic sine.000CkCreates an instance of a writer which will successfully \xe2\x80\xa6BlReturns the size of the interval, if finite.BbReturns the computed encoded size.AnSets the size (width, height).BmReturns the total size of this file in bytes.CfReturns the size in bytes of <code>LinuxSigset</code>.ChThe minimum size in bytes for a memory block of this \xe2\x80\xa6DaCreates an iterator that skips the first <code>n</code> elements.00lfield1 docs.A`The square root.0lSquare root.0AfStops this Web Worker.CjIterate over the entire iterator and add all the elements.00DeStores a value into the <code>Atomic</code>, returning the old value.CkStores a value into the bool, returning the previous value.CkStores a value into the pointer, returning the previous \xe2\x80\xa6CiStores a value into the atomic integer, returning the \xe2\x80\xa60000000CgStores a value into the atomic float, returning the \xe2\x80\xa61101BaSwaps the top two stack elements.2CiSwaps the values at two mutable locations of the same \xe2\x80\xa6CmSwaps the values at two locations, without deinitializing \xe2\x80\xa61ClSwaps elements at indices <code>i</code> and <code>j</code>.BkSwaps the values of two <code>Cell</code>s.DjSwaps the wrapped value of <code>self</code> with the wrapped value of \xe2\x80\xa6B`Swaps the values at two indices.AkSynchronization primitives.CeReturns a shared reference to the tail of this tuple.DkConsumes the iterator and return an iterator of the last <code>n</code> \xe2\x80\xa6001AoTakes ownership of the ID data.DiTakes the contained value, leaving <code>Default::default()</code> in \xe2\x80\xa60EeTakes out some element at <code>index</code>, leaving <code>None</code> in its place.CmRemoves and returns the value in the set, if any, that is \xe2\x80\xa6EeReplaces <code>dest</code> with <code>T::default()</code>, returning the previous \xe2\x80\xa6ClRemoves and returns the element in the set, if any, that \xe2\x80\xa6DgCreates an adapter which will read at most <code>limit</code> bytes \xe2\x80\xa60DkTakes the value out of this <code>OnceCell</code>, moving it back to an \xe2\x80\xa6DkTakes the value of the cell, leaving <code>Default::default()</code> in \xe2\x80\xa6DkTakes the wrapped value, leaving <code>Default::default()</code> in its \xe2\x80\xa6DkTakes the value out of this <code>OnceLock</code>, moving it back to an \xe2\x80\xa6DiCreates an iterator that yields the first <code>n</code> elements, or \xe2\x80\xa60DjTakes the value from the <code>ManuallyDrop&lt;T&gt;</code> container out.DiTakes the value out of the option, leaving a <code>None</code> in its \xe2\x80\xa627AgThe hyperbolic tangent.000AgTerminal functionality.CkText types and operations, text processing. text::{fmt, \xe2\x80\xa6AeChains two orderings.Cg(time) Starts a timer with the given <code>name</code>.BgTime and calendar types and operations.Bl<code>core</code> Indicates unfinished code.0CaReturns the key value used to mark deleted slots.CgDuplicates the top element before the next of stack \xe2\x80\xa6Ao<code>tupl</code> modificationsAiA unit-agnostic rotation.0AjPhysical units of measure.BbUtility macros and hint functions.FeReturns <code>true</code> if the current <code>value</code> equals the given <code>expected</code>\xe2\x80\xa6CnReturns an iterator of (variable, value) pairs of strings, \xe2\x80\xa6Dg<code>alloc</code> Creates a <code>Vec</code> containing the arguments.0CiWaits for the child to exit completely, returning the \xe2\x80\xa6CkBlocks the current thread until this condition variable \xe2\x80\xa6CfBlocks the current thread until initialization has \xe2\x80\xa6CdBlocks the current thread until all threads have \xe2\x80\xa6ChBlocks the current thread until the cell is initialized.oWake this task.CjWakes up the task associated with this <code>Waker</code>.1Cl(warn) Outputs a message to the console with the warning \xe2\x80\xa6Cg<code>log</code> Logs a message at the indicated level.0iWavelets.CbAcquires a reference to the value in this TLS key.DnCreates a new <code>CodecJoin</code> combinator with a <code>separator</code>.DnReturns a new <code>LinuxTimespec</code> with the given <code>duration</code>.EcReturns a default <code>MiniquadService</code> with the given <code>handler</code>,CmReturns an FNV hasher with the given <code>input</code> data.000BjCreates a scope guard with a custom state.CiWork management, concurrency handling. work::{future, \xe2\x80\xa6CfThe alignment of a cache line in the current platform.CjThe arity of this tuple (the number of contained elements)0CbEnable signal-driven I/O (SIGIO on file activity).Aa0\xc2\xb0 and &lt; 90\xc2\xb00Bj\xf0\x9f\x8c\x90 Memory-allocation-related operations.BmAllocate new memory via the global allocator.10AoAn alphanumeric key (A-Z, 0-9).000jAltGr key.Cg\xf0\x9f\x93\x90 An angle represents a fraction of a full rotation.0Ck\xf0\x9f\x97\x83\xef\xb8\x8f A static 1-dimensional array backed by the core \xe2\x80\xa6AkAn array backed by a slice.01De<code>core</code> Used to do a cheap mutable-to-mutable reference \xe2\x80\xa60Dg<code>core</code> Used to do a cheap reference-to-reference conversion.0Dg\xf0\x9d\x90\x93 \xf0\x9f\x8c\x90 Provides ASCII operations on <code>T</code>, most of them \xe2\x80\xa60BjCode to set the foreground color to black.AiCode to set blink effect.DfBackspace delay mask. Values are <code>BS0</code> or <code>BS1</code>.CiThe size of a pointer in bytes, for the current platform.Ci<code>core</code> The bitwise OR operator <code>|</code>.0g0 Black0Cf\xf0\x9f\x93\x8f <code>core</code> An endpoint of a range of keys.0DkA zero-sized marker for a <code>Storage</code> type that wraps its data \xe2\x80\xa60CeExit the operation without running subsequent phases.0CgCIE lightness transition point (216/24389 \xe2\x89\x88 0.008856)0CeCIE lightness linear coefficient (24389/27 \xe2\x89\x88 903.3)0BjA helper for constructing macro constants.0AoThe number of months in a year.BaThe number of weekdays in a week.FcCarriage return delay mask. Values are <code>CR0</code>, <code>CR1</code>, <code>CR2</code>, or \xe2\x80\xa6A`Enable receiver.BbCreate file if it doesn\xe2\x80\x99t exist.FjCharacter size mask. Values are <code>CS5</code>, <code>CS6</code>, <code>CS7</code>, or <code>CS8</code>.e10^-20CmAllows chaining transformations by passing values through \xe2\x80\xa60BaFires when an element is clicked.0Dg<code>core</code> A common trait that allows explicit creation of a \xe2\x80\xa6Eb<code>core</code> Derive macro generating an impl of the trait <code>Clone</code>.10fU+003A0CaBase trait for general color data representation.0fU+002C0Cg\xf0\x9f\x93\x8f A repeating cycle defined by a fundamental period.0CiSynchronized I/O data integrity (wait for data writes \xe2\x80\xa6AjDuplicate file descriptor.Ca\xf0\x9f\x96\xb9 <code>core</code> <code>?</code> formatting.AfThe \xe2\x80\x9cdebug\xe2\x80\x9d level.C`Corresponds to the <code>Debug</code> log level.21022Ed<code>core</code> Used for immutable dereferencing operations, like <code>*v</code>.0Am\xe2\x80\x9cArgument list too long.\xe2\x80\x9dAj\xe2\x80\x9cBad file descriptor.\xe2\x80\x9dAn\xe2\x80\x9cDevice or resource busy.\xe2\x80\x9dEcIf <code>ICANON</code> is also set, the <code>ERASE</code> character erases the \xe2\x80\xa6EbIf <code>ICANON</code> is also set, the <code>KILL</code> character erases the \xe2\x80\xa6Ae\xe2\x80\x9cFile too large.\xe2\x80\x9dAn\xe2\x80\x9cInterrupted system call.\xe2\x80\x9dB`\xe2\x80\x9cNo such device or address.\xe2\x80\x9dAn\xe2\x80\x9cOperation not permitted.\xe2\x80\x9dAb\xe2\x80\x9cBroken pipe.\xe2\x80\x9dAl\xe2\x80\x9cRead-only file system.\xe2\x80\x9dAf\xe2\x80\x9cNo such process.\xe2\x80\x9dB`\xe2\x80\x9cInvalid cross-device link.\xe2\x80\x9dCkEjects a removable media disk (found on some keyboards, \xe2\x80\xa60BjRepresents an empty chunk with no elementsEmThis <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have \xe2\x80\xa6AlValue being parsed is empty.201jEnter key.0CgAn ordering where a compared value is equal to another.0Dk<code>core</code> A trait representing the basic expectations for error \xe2\x80\xa6AfThe \xe2\x80\x9cerror\xe2\x80\x9d level.C`Corresponds to the <code>Error</code> log level.CfAn error occurred while querying the permission state.CeThe type returned in the event of a conversion error.0100432AkExtra <em>data values</em>.000BfA custom <em>data type</em> extension.00011110000DfForm feed delay mask. Values are <code>FF0</code> or <code>FF1</code>.BbDocumentation for the first field.0BcDocumentation for the second field.0BdA type-level logical <em>false</em>.0f10^-150Cn\xf0\x9d\x9f\x99 \xf0\x9f\x8c\x90 Provides comprehensive floating-point operations \xe2\x80\xa60Dk<code>core</code> The version of the call operator that takes a mutable \xe2\x80\xa60AjGet file descriptor flags.AfGet file status flags.AhGet record locking info.ChANSI gray foreground 0/23 8-bit color (4% white, 96% \xe2\x80\xa6ChANSI gray foreground 1/23 8-bit color (8% white, 92% \xe2\x80\xa6CiANSI gray foreground 2/23 8-bit color (12% white, 88% \xe2\x80\xa6CiANSI gray foreground 3/23 8-bit color (16% white, 84% \xe2\x80\xa6CiANSI gray foreground 4/23 8-bit color (20% white, 80% \xe2\x80\xa6CiANSI gray foreground 5/23 8-bit color (24% white, 76% \xe2\x80\xa6CiANSI gray foreground 6/23 8-bit color (28% white, 72% \xe2\x80\xa6CiANSI gray foreground 7/23 8-bit color (32% white, 68% \xe2\x80\xa6CiANSI gray foreground 8/23 8-bit color (36% white, 64% \xe2\x80\xa6CiANSI gray foreground 9/23 8-bit color (40% white, 60% \xe2\x80\xa6BjCode to set the foreground color to green.AhGamma correction curves.0g2 Green0CkLower modem control lines after last process closes the \xe2\x80\xa6d10^20ClTranslate CR to NL (carriage return to newline) on input \xe2\x80\xa6CbIgnore <code>CR</code> (carriage return) on input.CfTranslate <code>NL</code> to <code>CR</code> on input.AmEnable input parity checking.BoAn error occurred while doing I/O on some file.CjMap uppercase characters to lowercase on input (not in \xe2\x80\xa6AmInput is UTF8. (not in POSIX)Cg(XSI) Typing any character will restart stopped output.BfEnable XON/XOFF flow control on input.CiA unique identifier based on a pinned stack-allocated \xe2\x80\xa60Ee<code>core</code> Used for indexing operations (<code>container[index]</code>) in \xe2\x80\xa60BjThe inner type for the bit representation.AhInner type of the bufferCaThe internal representation of this numeric type.210l64-bit isize000000000000000AmFires when a key is released.0Boln(10) (A002392) <code>\xe2\x89\x88 2.30258509\xe2\x80\xa6</code>00000Ag\xf0\x9f\x8e\xb2 A 16-bit LCG PRNG.0An\xf0\x9f\x8c\x90 Linux-related operations.0CnCompression that sacrifices some data accuracy for reduced \xe2\x80\xa60EcIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.AaA multimedia key.000e10^-60e10^-30Al\xf0\x9f\x95\x98 The months of the year.0A`A mouse pointer.0CaThe pointer moved without a button press/release.0Dg<code>std</code> A mutual exclusion primitive useful for protecting \xe2\x80\xa60DeNewline delay mask. Values are <code>NL0</code> and <code>NL1</code>.BcAlias for <code>Nanoseconds</code>.Bl\xe2\x88\x85 \xf0\x9d\x9f\x99 Represents the absence of a number.0AgMap CR to NL on output.C`Fill character is ASCII <code>DEL</code> (0177).CiSend fill characters for a delay, rather than using a \xe2\x80\xa6ClMap lowercase characters to uppercase on output. (not in \xe2\x80\xa6B`(XSI) Map NL to CR-NL on output.AnDon\xe2\x80\x99t output CR at column 0.C`Enable implementation-defined output processing.BlAn operating system error has been detected.Ca\xf0\x9f\x96\xb9 <code>core</code> <code>o</code> formatting.0DdA generic, parameterized <em>enum</em> for expressing structured \xe2\x80\xa60Ee\xf0\x9d\x90\x93 <code>std</code> Borrowed reference to an OS string (See <code>OsString</code>).0CiA custom error that does not fall under any other I/O \xe2\x80\xa6CiAdditional buttons (e.g., side buttons on advanced mice).110kOwned data.AoAn owned, heap-allocated value.BmThe resulting type after obtaining ownership.210An\xf0\x9f\x8c\x90 Panic-related operations.0jPause key.AfPauses media playback.10Db\xf0\x9f\x93\x90 A coordinate position in <code>D</code>-space without extent.0CiPowers the system off or performs a power-related action.0AdThe key was pressed.0CaThe radix or base of the internal representation.00000BhCode to turn off all effects and colors.D`\xf0\x9f\x93\x8f <code>core</code> A range bounded inclusively below and \xe2\x80\xa60Cd\xf0\x9f\x93\x8f A generic ratio representing a proportional \xe2\x80\xa60BmRepresents that a value is immediately ready.0ChRGB color with 16-bit integer components (sRGB gamma \xe2\x80\xa60CiRGB+A color with 8-bit integer components (sRGB gamma \xe2\x80\xa60BbOnt he right side of the keyboard.A`Right arrow key.AcRight mouse button.An= 90\xc2\xb0 (\xc2\xbc\xcf\x84), a quarter turn.CaIndication that contents should be right-aligned.41032e10^270f10^-270AjSet file descriptor flags.AfSet file status flags.AhSet record locking info.AjI/O now possible (4.2BSD).oStandard input.CmA configurable sixel string builder from a slice of pixel \xe2\x80\xa60Dc<code>core</code> Types with a constant size known at compile time.00B`Puts the system into sleep mode.0Cj\xf0\x9f\x8c\x90 Slice-related operations, all of them <em>const</em>.0fU+0020Cf\xf0\x9f\x9a\xa9 There is not enough free space for the operation.01Cg\xf0\x9f\x97\x83\xef\xb8\x8f A static stack backed by an <code>Array</code>.0Dd<code>std</code> A handle to the standard input stream of a process.0ChSends a START character to the terminal, to tell the \xe2\x80\xa6AiResumes suspended output.AhTruncate file upon open.fU+007E0BjAn enumeration of the USV data structures.0A`A touch pointer.0AfThe \xe2\x80\x9ctrace\xe2\x80\x9d level.C`Corresponds to the <code>Trace</code> log level.10Cncgen \xf0\x9f\x97\x83\xef\xb8\x8f Extension trait providing convenience methods \xe2\x80\xa60B`The command was used incorrectlyCgThe capabilities supported by a <code>UiService</code>.0Dc<code>core</code> Types that do not require any pinning guarantees.0l64-bit usize000000000000000BmThe constant value of the type-level boolean.0DiVertical tab delay mask. Values are <code>VT0</code> or <code>VT1</code>.DkThe <code>DataValue</code> type that pairs with this <code>DataType</code>.DkThe resulting type-level boolean (<code>True</code> or <code>False</code>).10BjCode to set the foreground color to white.g7 White0DfThe writing portion of the <code>TcpStream</code> should be shut down.0CnIf ICANON is also set, terminal is uppercase only. (not in \xe2\x80\xa6AfSee: <code>TAB3</code>BhThe type of value this coroutine yields.0f10^-240e10^240f10^-210e10^210BdExtra information about the library.CjReturns the 1-letter abbreviated month name, in ASCII, \xe2\x80\xa6ClReturns the 1-letter abbreviated weekday name, in ASCII, \xe2\x80\xa6CjReturns the 2-letter abbreviated month name, in ASCII, \xe2\x80\xa6ClReturns the 2-letter abbreviated weekday name, in ASCII, \xe2\x80\xa6CjReturns the 3-letter abbreviated month name, in ASCII, \xe2\x80\xa6ClReturns the 3-letter abbreviated weekday name, in ASCII, \xe2\x80\xa6CfTerminates the current process in an abnormal fashion.00CcThe inverse hyperbolic cosine of <code>self</code>.0AnThe inverse hyperbolic cosine.0DkAdds a <code>TimeDelta</code> to an instant, moving forward or backward \xe2\x80\xa6ChReturns a flag indicating what form of alignment was \xe2\x80\xa6CiThe minimum byte alignment for a memory block of this \xe2\x80\xa6CoAllocates memory as described by the given <code>layout</code>.BkAllocates memory with the global allocator.BgAllocates memory with the given layout.2AdThe alpha component.0000000CeReturns the arity (number of elements) of this tuple.00DaCreates a layout describing the record for a <code>[T; n]</code>.AdThe array of points.0CbHomogeneous data structures, random-access and \xe2\x80\xa611BdGets this ASCII character as a byte.CaThe inverse hyperbolic sine of <code>self</code>.0AlThe inverse hyperbolic sine.0BaThe arc tangent of two variables.000CdThe inverse hyperbolic tangent of <code>self</code>.0AoThe inverse hyperbolic tangent.0CnReturns the last access time of the file, in seconds since \xe2\x80\xa6AdAudio functionality.BfPerforms the <code>|</code> operation.FfReturns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.FdReturns the union of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>.2CgBuilds a sixel formatted string with the configured \xe2\x80\xa6CiBuild-time metaprogramming and code generation utilities.EgCreates a new <code>AnsiColor8b</code> from a 26-color grayscale <code>value</code> \xe2\x80\xa6EcTransforms this <code>Read</code> instance to an <code>Iterator</code> over its \xe2\x80\xa60BbSets the byte slice of image data.BiIterates over the bytes in this C string.2BkAdds two vectors together, in compile-time.00000000000CiComputes the dot product of two vectors, in compile-time.00000000000Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x9f\x99 <code>core</code> Equivalent to the corresponding C type.0CkSubtracts another vector from this vector, in compile-time.00000000000CjInvokes a closure, capturing the cause of an unwinding \xe2\x80\xa6ClReturns the number of <code>(columns, rows)</code> of cells.CdChain a function which takes the parameter by value.0ChCreates an adapter which will chain this stream with \xe2\x80\xa60ClTakes two iterators and creates a new iterator over both \xe2\x80\xa60201Cn\xf0\x9d\x90\x93 A 7-bit unicode scalar, limited to basic latin subset \xe2\x80\xa60Cl\xf0\x9d\x90\x93 An 8-bit unicode scalar, limited to basic latin and \xe2\x80\xa60DdReturns an iterator over the <code>chars</code> of this grapheme \xe2\x80\xa60000000EmCompares and returns <code>self</code> clamped between <code>min</code> and <code>max</code>.00EcCompares and returns a clamped <em>total ordered</em> <code>self</code> between \xe2\x80\xa6110011110111BgRestrict a value to a certain interval.0F`Returns itself clamped between <code>min</code> and <code>max</code>, ignoring <code>NaN</code>.01CkClears the map, removing all key-value pairs. Keeps the \xe2\x80\xa6CnClears the array by setting all elements to <code>None</code>.BeDrops all items from the binary heap.AdClears the destaque.BdClears the set, removing all values.AaClears the stack.BfClears the map, removing all elements.CcTruncates the <code>OsString</code> to zero length.BfClears the set, removing all elements.CfRemoves all elements from the <code>LinkedList</code>.CbSets the length to 0, by resetting all bytes to 0.BfClears the deque, removing all values.DoInvokes <code>clear</code> on the underlying instance of <code>OsString</code>.BgClears the vector, removing all values.AeSets the length to 0.CjTruncates this <code>String</code>, removing all contents.111Bg(clear) Clears the console if possible.Cg(clearTimeout) (clearInterval) Cancels a timeout or \xe2\x80\xa6CiResets both the state and seed for full reinitialization.888BaReturns a duplicate of the value.BnMakes a clone of the <code>Arc</code> pointer.DjMakes a clone of the <code>Weak</code> pointer that points to the same \xe2\x80\xa6DgReturns a new box with a <code>clone()</code> of this box\xe2\x80\x99s contents.BmMakes a clone of the <code>Rc</code> pointer.fPanicsAjCopies a <code>Ref</code>.4BhClone a sender to send to other threads.7CkAbstractions for encoding and decoding data. codec::{hash} AhChromatic functionality.ClConsumes the iterator, counting the number of iterations \xe2\x80\xa60Cn(count) Logs the number of times that this particular call \xe2\x80\xa6B`The total number of repetitions.20BjComputes the cross product of two vectors.0DcSwaps two mutable variables in a <em>compile-time</em> friendly \xe2\x80\xa60CgReturns the last status change time of the file, in \xe2\x80\xa6AnRepeats an iterator endlessly.0AoThe underlying repeating cycle.10Ck(debug) Outputs a message to the console with the debug \xe2\x80\xa6Cg<code>log</code> Logs a message at the indicated level.0ClRemove duplicates from sections of consecutive identical \xe2\x80\xa60CgRemoves consecutive repeated elements in the vector \xe2\x80\xa61AgDereferences the value.fPanicsBbAllows access to the locked value.22GgWhen passed the <em>number</em> <code>0</code>, <code>1</code>, \xe2\x80\xa6, <code>9</code>, returns the <em>character</em> \xe2\x80\xa6CgClears the map, returning all key-value pairs as an \xe2\x80\xa6CjClears the binary heap, returning an iterator over the \xe2\x80\xa6CfClears the set, returning all elements in an iterator.CgRemoves the specified range from the deque in bulk, \xe2\x80\xa6CnRemoves the subslice indicated by the given range from the \xe2\x80\xa6ChRemoves the specified range from the string in bulk, \xe2\x80\xa6BjReturns an emoji associated to each month.BlReturns the emoji associated to the weekday.DcA constructor with the given <code>state</code> and an empty value.C`Returns <code>true</code> if the queue is empty.DfCreates a canonical empty interval, equivalent to <code>open</code>\xe2\x80\xa6BhCreates an iterator that yields nothing.BoReturns the key value used to mark empty slots.ChCreates a value that is always at EOF for reads, and \xe2\x80\xa6B`Returns an empty set of signals.DbCreates an iterator over <code>T</code> which returns no elements.CmGets the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa6CkGets the given value\xe2\x80\x99s corresponding entry in the set \xe2\x80\xa610BcRetrieves an entry for a given key.BcAdds a new entry to the set output.BdAdds a new entry to the list output.BcAdds a new entry to the map output.DiDetermines if the elements of this <code>Iterator</code> are equal to \xe2\x80\xa600BiReturns the error number (if applicable).BnReturns the error which caused the call to \xe2\x80\xa6Ck(error) Outputs a message to the console with the error \xe2\x80\xa6Cg<code>log</code> Logs a message at the indicated level.BhErrors, backtraces, structured handling.1CiThe type of mouse event (Click, MouseDown, MouseMove, \xe2\x80\xa6CkThe type of pointer event (PointerDown, PointerMove, etc.).10BlUser interface events-related functionality.Ab<code>10^x</code>.0C`Adds a new field to the generated struct output.CfAdds a new field to the generated tuple struct output.CkReturns a reference to the first element in the set, if \xe2\x80\xa6AmReturns flags for formatting.ClThe largest integer less than or equal to <code>self</code>.0DjThe largest integer less than or equal to <code>x</code>. $$ \\lfloor x \xe2\x80\xa60AmFlushes any buffered records.CaFlushes this output stream, ensuring that all \xe2\x80\xa6CfFlushes the file, ensuring that all intermediately \xe2\x80\xa612BlAccumulator of the elements in the iterator.00CjForces the evaluation of this lazy value and returns a \xe2\x80\xa60BiThe fractional part of <code>self</code>.0AdThe fractional part.0C`Returns a shared reference to the front element.DjProvides a reference to the front element, or <code>None</code> if the \xe2\x80\xa60mUI frontends.Ce\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A pointer-sized floating-point primitive.0Bi\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A GLSL signed 32-bit integer.0CmThe gamma function. Generalizes the factorial function to \xe2\x80\xa60AdThe green component.000000000000000Ce(group) Creates a new inline group, indenting all \xe2\x80\xa6CfIndicates whether the <code>d</code> field is enabled.CfIndicates whether the <code>h</code> field is enabled.CfIndicates whether the <code>s</code> field is enabled.CfIndicates whether the <code>y</code> field is enabled.BiThe hypothenuse (the euclidean distance).000CiReturns the base 2 logarithm of the number, rounded down.00000AcImage capabilities.BbImage manipulation. image::{sixel}1D`Performs the indexing (<code>container[index]</code>) operation.CiReturns a reference to the value corresponding to the \xe2\x80\xa60E`Returns the Month index from <code>January=0</code> to <code>December=11</code>.2AcInput capabilities.0nIntrospection.EcReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_10</code> (The \xe2\x80\xa6EcReturns <code>true</code> if there\xe2\x80\x99s a value in variant <code>_11</code> (The \xe2\x80\xa6DlReturns <code>true</code> if the ordering is the <code>Equal</code> variant.FeReturns <code>true</code> if the ordering is either the <code>Greater</code> or <code>Equal</code>\xe2\x80\xa6DnReturns <code>true</code> if the ordering is the <code>Greater</code> variant.FcReturns <code>true</code> if the ordering is either the <code>Less</code> or <code>Equal</code> \xe2\x80\xa6DkReturns <code>true</code> if the ordering is the <code>Less</code> variant.E`Returns <code>true</code> if the ordering is not the <code>Equal</code> variant.CkReturns <code>true</code> if the result is <code>Ok</code>.CdReturns the square root of the number, rounded down.00000E`Groups <em><code>items</code></em> together and expands them as if they were \xe2\x80\xa60CeReturns a mutable reference to the raw channel value.000CdSearch for the last occurrence of a byte in a slice.CmSearch for the last occurrence of two possible bytes in a \xe2\x80\xa6CmSearch for the last occurrence of three possible bytes in \xe2\x80\xa6BcThe verbosity level of the message.0CnResolution level of the component, indicating its level of \xe2\x80\xa60ClReturns the number of bytes that can be read before this \xe2\x80\xa6CkConsumes this handle and returns an iterator over input \xe2\x80\xa6CbReturns an iterator over the lines of this reader.00AjLinux-specific definitionsDcThe natural logarithm of <code>self</code> plus 1, more accurately.0BnThe natural logarithm plus 1, more accurately.0BkThe base 10 logarithm of <code>self</code>.0AfThe base 10 logarithm.0AdType-level booleans.E`The lower bound (also known as the <em>start</em> bound, or the <em>left</em>\xe2\x80\xa60Ef<code>safe_arch</code> The data for a 128-bit SSE register of two <code>f64</code> \xe2\x80\xa60Di<code>safe_arch</code> The data for a 128-bit SSE register of integer \xe2\x80\xa60Eg<code>safe_arch</code> The data for a 256-bit AVX register of four <code>f64</code> \xe2\x80\xa60Di<code>safe_arch</code> The data for a 256-bit AVX register of integer \xe2\x80\xa60EfTransforms the inner value in variant<code>_0</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_1</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_2</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_3</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_4</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_5</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_6</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_7</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_8</code> using <code>f</code>, leaving \xe2\x80\xa6EfTransforms the inner value in variant<code>_9</code> using <code>f</code>, leaving \xe2\x80\xa6ChHelper for using optionally implemented traits, like \xe2\x80\xa60CmMultimedia functionality. media::{audio, color, draw, font\xe2\x80\xa6CgReturn an iterator adaptor that merges the two base \xe2\x80\xa600AiMouse input capabilities.0CnReturns the last modification time of the file, in seconds \xe2\x80\xa6BgWhether multiple windows are supported.0CdGenerates the next 2 random <code>u32</code> values.CdGenerates the next 4 random <code>u32</code> values.BhSpecialized numeric types and behaviors.CgReturns the number of hard links pointing to this file.EoTransforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping \xe2\x80\xa6ChCreates a new I/O error from an arbitrary error payload.lfield2 docs.CiDuplicates the next of stack pair of elements to the top.ChConverts to the owned backing type if not already owned.BiPanic hooks, unwinding, abort strategies.BlString parsing without structured semantics.Cmproc <code>paste</code> Allows to paste identifiers together.0CkA new pipe should be arranged to connect the parent and \xe2\x80\xa6DeCreates a single-point interval, equivalent to <code>closed</code>\xe2\x80\xa6CjWrites string + newline to stdout. Optimized for small \xe2\x80\xa6ChQuantification, measurement and numerical relationships.BoQueues the given command for further execution.0000000000000000CnHomogeneous data structures that process elements in FIFO. \xe2\x80\xa6CjConstructs a double-ended iterator over a sub-range of \xe2\x80\xa6DnReturns a subslice from <code>start</code> (inclusive) to <code>end</code> \xe2\x80\xa61CnCreates an iterator that covers the specified range in the \xe2\x80\xa6D`Reads TSC as a single <code>u64</code> (combines low/high bits).DeCreates a future that is immediately ready with a <code>value</code>.00BfTakes the reciprocal (inverse), $1/x$.0CdSets the length to 0, and resets all the bytes to 0.000BhResets this instant to the current time.CkResets the internal state to its initial default values \xe2\x80\xa6CbResets the inner state to the default basis value.000CmSearches for an element of an iterator from the back that \xe2\x80\xa600CmAn iterator method that reduces the iterator\xe2\x80\x99s elements \xe2\x80\xa600ClDistance from the alignment point to the rightmost glyph \xe2\x80\xa60DgThe nearest integer to <code>self</code>, default rounding, same as \xe2\x80\xa60FaReturns <code>None</code> if the state is <code>None</code>, otherwise returns <code>optb</code>.FdReturns <code>res</code> if the state is <code>Ok</code>, otherwise returns the <code>Err</code> \xe2\x80\xa6BhApplies a mapping function to the state.EdReturns <code>self</code> between <code>[min..=max]</code> scaled to a new range \xe2\x80\xa6BlReturns the matrix scaled by a scalar value.00000001DjReturns a scaled value between <code>[min..=max]</code> to a new range \xe2\x80\xa60000000000022BkCreate a scope for spawning scoped threads.00ChGeometric shapes: points, angles, extents, polygons, \xe2\x80\xa6AjReturns the signal number.DhReturns the duration between this and an earlier <code>JsInstant</code>.AmSixel encoding functionality.DkSuspends execution of calling thread for the given <code>duration</code>\xe2\x80\xa6CePuts the current thread to sleep for at least the \xe2\x80\xa600AcSound capabilities.0CcSpawns a new thread within a scope, returning a \xe2\x80\xa6ChExecutes the command as a child process, returning a \xe2\x80\xa6DhSpawns a new thread by taking ownership of the <code>Builder</code>, \xe2\x80\xa6CaSpawns a new JavaScript Web Worker from a script.DfSpawns a new thread, returning a <code>ThreadJoinHandle</code> for it.00CgThe integral and fractional parts ox <code>self</code>.CnReturns an iterator over the contents of this reader split \xe2\x80\xa60CjSplits the underlying slice at the cursor position and \xe2\x80\xa6CdSets the method for largest dimension for splitting.DlSplits the <code>UnixTimeI64</code> into <code>{ y, mo, d, h, m, s }</code>.DlSplits the <code>UnixTimeU32</code> into <code>{ y, mo, d, h, m, s }</code>.5BbThe integral and fractional parts.05CnHomogeneous data structures that process elements in LIFO. \xe2\x80\xa6CaReturns the lower bound of the range (inclusive).BiThe lower bound of the range (inclusive).000CeReturns a new up-to-date <code>WebWindowState</code>.BkThe state of the key (pressed or released).CiThe state of the mouse button (pressed, released, moved).CdThe state of the pointer (pressed, released, moved).2AbGame state, scene.3213CjConfiguration for the child process\xe2\x80\x99s standard input \xe2\x80\xa6ChConstructs a new handle to the standard input of the \xe2\x80\xa6CjThe handle for writing to the child\xe2\x80\x99s standard input \xe2\x80\xa60BlStores a value into the <code>Atomic</code>.AmStores a value into the bool.B`Stores a value into the pointer.BgStores a value into the atomic integer.0000000BeStores a value into the atomic float.11011FaReturns <code>true</code> if the current <code>state</code> and <code>value</code> equals the \xe2\x80\xa6BfSwaps the top two pair stack elements.BjTabular and heterogeneous data processing.AfSets the window title.DhConverts <code>self</code> to big endian from the target\xe2\x80\x99s endianness.00000000000000000000000000000000000CiConverts <code>LinuxError</code> to <code>IoError</code>.CnConverts a <code>KeyState</code> to <code>WebEventKind</code>.CoConverts <code>EventMouse</code> to <code>WebEventMouse</code>.CkConverts an EventButton to a JavaScript button index in \xe2\x80\xa6DdConverts an <code>EventTimestamp</code> to a <code>JsInstant</code>.EgConverts a <code>TimeDelta</code> into a <code>JsInstant</code>, interpreting it as \xe2\x80\xa6DcConverts <code>self</code> to little endian from the target\xe2\x80\x99s \xe2\x80\xa600000000000000000000000000000000000CmConverts the string slice into an <code>Rc&lt;str&gt;</code>.CgConverts the string into an <code>Rc&lt;str&gt;</code>.10An(trace) Outputs a stack trace.Cg<code>log</code> Logs a message at the indicated level.0BgThe integral part of <code>self</code>.0AbThe integral part.0CjDuplicates the top pair of elements before the next of \xe2\x80\xa6CnHeterogeneous data structures, random-access, sequentially \xe2\x80\xa6CjThe rotation of the stylus around its own axis (0\xc2\xb0 to \xe2\x80\xa6000CkVisits the values representing the union, i.e., all the \xe2\x80\xa6CmVisits the elements representing the union, i.e., all the \xe2\x80\xa6ClSets the element at <code>index</code> to <code>None</code>.ChConverts an iterator of pairs into a pair of containers.0CcUnzips an option containing a tuple of two options.1E`The upper bound (also known as the <em>end</em>, bound or the <em>right</em> \xe2\x80\xa60FaReturns <code>None</code> if the value is <code>None</code>, otherwise returns <code>optb</code>.FeReturns <code>res</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> \xe2\x80\xa6BhApplies a mapping function to the value.DcReturns the value as <code>bool</code> (returns <code>true</code>).DdReturns the value as <code>bool</code> (returns <code>false</code>).CeAdds the value part of a new entry to the map output.CeEnumerated data values and types, classified by size.CoReturns the underlying unique ID value as a <code>usize</code>.AdVideo functionality.DcReturns a reference to the <code>Waker</code> for the current task.AoReturns the width of any glyph.oSets the width.CkReturns the optionally specified integer width that the \xe2\x80\xa6AoThe width of the rendered text.0BbThe width of each glyph in pixels.110CnWrites a buffer into this writer, returning how many bytes \xe2\x80\xa6BoWrites some data into this <code>Hasher</code>.CnWrites the value and converts to <code>Box&lt;T, A&gt;</code>.AnWrites some bytes to the file.CmOverwrites a memory location with the given value without \xe2\x80\xa6DiOverwrites a memory location with <code>src</code> without reading or \xe2\x80\xa6DhLocks this <code>RwLock</code> with exclusive write access, blocking \xe2\x80\xa6BaSets the option for write access.DkTakes an output stream and an <code>FmtArguments</code> struct that can \xe2\x80\xa6C`Writes a slice as the entire contents of a file.ChSets the value of the <code>MaybeUninit&lt;T&gt;</code>.Ck\xf0\x9f\x96\xb9 <code>core</code> Writes formatted data into a buffer.:;0DeReturns an exclusive reference to the first dimension <code>x</code>.00000DaReturns a shared reference to the first dimension <code>x</code>.00000DfReturns an exclusive reference to the second dimension <code>y</code>.00000DbReturns a shared reference to the second dimension <code>y</code>.00000DeReturns an exclusive reference to the third dimension <code>z</code>.00DaReturns a shared reference to the third dimension <code>z</code>.00AmAppend to file on each write.EgHas the effects of both <code>Acquire</code> and <code>Release</code> together: For \xe2\x80\xa60CgManages directory paths in an environment-aware manner.0AoXdg enviroment for directories.0CoThis tuple with an extra element <code>T</code> appended to it.0Ci\xe2\x9a\x9b\xef\xb8\x8f <code>atomic</code> A generic atomic wrapper type.0A`BGR color 15bpp.0A`BGR color 16bpp.0A`BGR color 24bpp.0DhSignal interrupt on BREAK. If <code>IGNBRK</code> is set, a BREAK is \xe2\x80\xa6Di\xf0\x9f\xa5\xa1 <code>Base16</code> standard encoding (hex), with linear search. \xe2\x80\xa60Dc\xf0\x9f\xa5\xa1 <code>Base32</code> standard encoding, using LUT decoding. \xe2\x80\xa60Dc\xf0\x9f\xa5\xa1 <code>Base64</code> standard encoding, using LUT decoding. \xe2\x80\xa60AfIncreases bass levels.0Ca\xf0\x9f\x96\xb9 <code>core</code> <code>b</code> formatting.BoBinary-based, optimized for machine processing.01Cn<code>core</code> The bitwise AND operator <code>&amp;</code>.0BnProvides bitwise operations on <code>T</code>.0Cj<code>core</code> The bitwise XOR operator <code>^</code>.0Bm<code>core</code> A trait for borrowing data.0BaBurkes error diffusion dithering.0Bo$ \\sqrt[\\small 3]{2} $ (A002580, wikipedia) \xe2\x80\xa6D`$ \\sqrt{2} $ (A002193, wikipedia) <code>\xe2\x89\x88 1.41421356\xe2\x80\xa6</code>0001Co$ \\sqrt[\\small 3]{3} $ (A002581) <code>\xe2\x89\x88 1.44224957\xe2\x80\xa6</code>00000AkIgnore modem control lines.DjCode to set the foreground color to <code>fg</code> and the background \xe2\x80\xa6AdConfiguration error.BcSet two stop bits, rather than one.AlAccess to the device camera.0fU+00180BgChoose the geometric center of the box.CbIndication that contents should be center-aligned.10CnChoose the mean of all unique colors in the box (specified \xe2\x80\xa60CmRepresents the concatenation of two chunks, enabling O(1) \xe2\x80\xa60CkA reference to the current directory, i.e., <code>.</code>.0CdApproximate number of significant digits in base 10.00000AjDirect I/O (no buffering).fU+007FkDelete key.10CfThe user has not yet granted or denied the permission.0fU+00300fU+00310fU+00320fU+00330fU+00340fU+00350fU+00360fU+00370fU+00380fU+00390BeDithering methods of error diffusion.0Ce\xf0\x9f\x97\x83\xef\xb8\x8f Represents the backing buffer for storing \xe2\x80\xa60Ah\xe2\x80\x9cPermission denied.\xe2\x80\x9dBg\xe2\x80\x9cResource temporarily unavailable.\xe2\x80\x9dAi\xe2\x80\x9cNo child processes.\xe2\x80\x9dEcIf <code>ICANON</code> is also set, <code>KILL</code> is echoed by erasing each \xe2\x80\xa6FdIf <code>ICANON</code> is also set, echo the <code>NL</code> character even if <code>ECHO</code> \xe2\x80\xa6Ab\xe2\x80\x9cFile exists.\xe2\x80\x9dAb\xe2\x80\x9cBad address.\xe2\x80\x9dBo$ \xce\xb3 $ (A001620) <code>\xe2\x89\x88 0.57721566\xe2\x80\xa6</code>00000Ag\xe2\x80\x9cInvalid argument.\xe2\x80\x9dAe\xe2\x80\x9cIs a directory.\xe2\x80\x9dAj\xe2\x80\x9cToo many open files.\xe2\x80\x9dAe\xe2\x80\x9cToo many links.\xe2\x80\x9dBd\xe2\x80\x9cToo many open files in system.\xe2\x80\x9dAe\xe2\x80\x9cNo such device.\xe2\x80\x9dB`\xe2\x80\x9cNo such file or directory.\xe2\x80\x9dAm\xe2\x80\x9cCannot allocate memory.\xe2\x80\x9dAn\xe2\x80\x9cNo space left on device.\xe2\x80\x9dBe\xe2\x80\x9cInappropriate ioctl for device.\xe2\x80\x9dBd\xe2\x80\x9cNumerical result out of range.\xe2\x80\x9dAc\xe2\x80\x9cIllegal seek.\xe2\x80\x9dfU+001BkEscape key.10Di\xf0\x9f\x8c\x90 Extension trait providing convenience methods for <code>T:</code>\xe2\x80\xa60Ch\xf0\x9f\x8c\x90 Extension trait for type memory information and \xe2\x80\xa60Dl\xf0\x9d\x90\x93 Extension trait providing additional methods for <code>&amp;str</code>.0Cl\xf0\x9f\x97\x83\xef\xb8\x8f Extension trait providing additional methods for \xe2\x80\xa60Db\xf0\x9f\x93\x90 An orthogonal extension in <code>D</code>-space without a \xe2\x80\xa60Ce<code>?std</code> The family of the operating system.AhOutput is being flushed.ClRepresents a fat pointer with separate data and metadata \xe2\x80\xa60Dc<code>core</code> The version of the call operator that takes a \xe2\x80\xa60iEtymology0Ci\xf0\x9f\x8c\x90 A more featureful wrapper over <code>PathBuf</code>.0Ed<code>core</code> An asynchronous computation obtained by use of <code>async</code>.0AiGet owner\xe2\x80\x99s process ID.AiGet SIGIO/SIGURG signals.CjANSI gray foreground 10/23 8-bit color (44% white, 56% \xe2\x80\xa6CjANSI gray foreground 11/23 8-bit color (48% white, 52% \xe2\x80\xa6CjANSI gray foreground 12/23 8-bit color (52% white, 48% \xe2\x80\xa6CjANSI gray foreground 13/23 8-bit color (56% white, 44% \xe2\x80\xa6CjANSI gray foreground 14/23 8-bit color (60% white, 40% \xe2\x80\xa6CjANSI gray foreground 15/23 8-bit color (64% white, 36% \xe2\x80\xa6CjANSI gray foreground 16/23 8-bit color (68% white, 32% \xe2\x80\xa6CjANSI gray foreground 17/23 8-bit color (72% white, 28% \xe2\x80\xa6CjANSI gray foreground 18/23 8-bit color (76% white, 24% \xe2\x80\xa6CjANSI gray foreground 19/23 8-bit color (80% white, 20% \xe2\x80\xa6CjANSI gray foreground 20/23 8-bit color (84% white, 16% \xe2\x80\xa6CjANSI gray foreground 21/23 8-bit color (88% white, 12% \xe2\x80\xa6CiANSI gray foreground 22/23 8-bit color (92% white, 8% \xe2\x80\xa6CiANSI gray foreground 23/23 8-bit color (96% white, 4% \xe2\x80\xa6Dh\xf0\x9f\x94\x80 <code>core</code> A trait for hashing an arbitrary stream of bytes.BhType of the hasher that will be created.10CbEnable canonical mode (erase and kill processing).BoEnable implementation-defined input processing.B`Ignore BREAK condition on input.BhIgnore framing errors and parity errors.AeStrip off eighth bit.AjCode to set italic effect.kInsert key.0Ci<code>?std</code> Allows for reading bytes from a source.0Dj<code>?std</code> Provides a cursor which can be moved within a stream \xe2\x80\xa60Cm<code>std</code> A writer which will move data into the void.0Dh<code>?std</code> Reader adapter which limits the bytes read from an \xe2\x80\xa60Ce<code>core</code> An IP address, either IPv4 or IPv6.0CnJarvis, Judice &amp; Ninke (JaJuNi) error diffusion dithering.0Eb\xf0\x9f\x9b\xa1\xef\xb8\x8f An FFI-safe version of <code>Key</code>, used in <code>EventKeyFfi</code>.0BoModifier key codes (when pressed by themselves)0lKeypad keys.0Cf$ \\log_2{e} $ (A007525) <code>\xe2\x89\x88 1.44269504\xe2\x80\xa6</code>00000Dg<code>log</code> A trait encapsulating the operations required of a \xe2\x80\xa60AiMisuse of shell builtins.Da\xf0\x9f\x93\x90 A static <code>R\xc3\x97C</code> shaped matrix backed by an array.0CjIndicates a type is Plain Old Data, and meets specific \xe2\x80\xa60BdAlias for <code>Microseconds</code>.CfMiddle mouse button (usually the scroll wheel button).0BdAlias for <code>Milliseconds</code>.ChThe first day of the week, according to the ISO-8601 \xe2\x80\xa60CfDon\xe2\x80\x99t make this fd the controlling terminal (for \xe2\x80\xa6CeDisable flushing the input and output queues when \xe2\x80\xa6BaThe host specified did not exist.CiYou did not have sufficient permission to perform the \xe2\x80\xa6BaThe user specified did not exist.Bm\xe2\x88\x85 \xf0\x9f\xaa\xaa Represents the absence of some data.0AlThis tuple without its head.0AlThis tuple without its tail.0Bh\xe2\x88\x85 \xf0\x9f\x95\x98 Represents the absence of time.0E`A normal component, e.g., <code>a</code> and <code>b</code> in <code>a/b</code>.CcA regular floating point number, not any of the \xe2\x80\xa601Bd\xf0\x9d\x9f\x99 Common trait for integer types.0AfOn the numeric keypad.0Cd\xf0\x9d\x9f\x99 Common auto-trait for referenced numeric types.0Bi<code>number</code> (always 64-bit float)0DfThe <code>NL</code> character is assumed to do the carriage-return \xe2\x80\xa6CnSome system file (e.g., /etc/passwd, /etc/utmp, etc.) does \xe2\x80\xa6BeHandle to JS object (registry index).0Ad90\xc2\xb0 and &lt; 180\xc2\xb0.0Ci\xe2\x9a\x96\xef\xb8\x8f An optional result type that combines success, \xe2\x80\xa60Db\xe2\x9a\x97\xef\xb8\x8f <code>core</code> A type that represents an optional value.0B`The type produced when decoding.CnThe resulting type after applying the <code>+</code> operator.CnThe resulting type after applying the <code>-</code> operator.0CnThe resulting type after applying the <code>!</code> operator.CbThe returned type after the call operator is used.CnThe resulting type after applying the <code>*</code> operator.CnThe resulting type after applying the <code>/</code> operator.CnThe resulting type after applying the <code>%</code> operator.DbThe resulting type after applying the <code>&amp;</code> operator.CnThe resulting type after applying the <code>|</code> operator.CnThe resulting type after applying the <code>^</code> operator.BaThe returned type after indexing.BiThe type of value produced on completion.CfThe output that the future will produce on completion.<;;:98765432=10CnEnable parity generation on output and parity checking for \xe2\x80\xa6AoMark parity and framing errors.CnIf set, then parity for input and output is odd; otherwise \xe2\x80\xa6lPage up key.0BgA wrapper for structurally pinned data.0BjComputes the mean weighted by pixel count.0Eh\xf0\x9f\x93\x90 A static sequence of <code>N</code> <code>D</code>-dimensional <code>Point</code>s.0DlA Windows path prefix, e.g., <code>C:</code> or <code>\\\\server\\share</code>.0CfThe user has not yet granted or denied the permission.0f10^-300e10^300AfOpen for reading only.BhCode to set the background color to red.A`RGB color 15bpp.0A`RGB color 16bpp.0AjRGB color 24bpp. (Default)0DfCode to set the background color to <code>bg: [r, g, b]</code> values.DfCode to set the foreground color to <code>fg: [r, g, b]</code> values.Eh<code>alloc</code> A version of <code>Rc</code> that holds a non-owning reference to \xe2\x80\xa60AgStarts recording media.0Dh<code>core</code> A wrapper type for a mutably borrowed value from a \xe2\x80\xa60Ae180\xc2\xb0 and &lt; 360\xc2\xb0.0Cc\xf0\x9f\x93\x90 A <code>Position</code>ed <code>Extent</code>.0BaFires when the window is resized.0Eg\xe2\x9a\x96\xef\xb8\x8f <code>core</code> A type that represents either success (<code>Ok</code>) or \xe2\x80\xa60BiThe type of value this coroutine returns.0AfRewinds through media.0CjRGB color with 32-bit float components (sRGB gamma space).0CjRGB color with 64-bit float components (sRGB gamma space).0CjRGB+A color with 16-bit integer components (sRGB gamma \xe2\x80\xa60Be<code>std</code> A reader-writer lock0AkThe duration of one second.AhSet record locking wait.AiSet owner\xe2\x80\x99s process ID.AiSet SIGIO/SIGURG signals.AmBus error (bad memory access)BcA synonym for <code>SIGCHLD</code>.AiFloating-point exception.CgHangup detected on controlling terminal or death of \xe2\x80\xa6AcIllegal InstructionAhInterrupt from keyboard.BmIOT trap. A synonym for <code>SIGABRT</code>.AiPower failure (System V).CiBad system call (SVr4); see also <code>seccomp(2)</code>.BdUrgent condition on socket (4.2BSD).AkSocket (S_IFSOCK in POSIX).D`$ \\sqrt{2} $ (A002193, wikipedia) <code>\xe2\x89\x88 1.41421356\xe2\x80\xa6</code>00000D`$ \\sqrt{3} $ (A002194, wikipedia) <code>\xe2\x89\x88 1.73205080\xe2\x80\xa6</code>00000D`$ \\sqrt{5} $ (A002163, wikipedia) <code>\xe2\x89\x88 2.23606797\xe2\x80\xa6</code>00000Ce$ \\sqrt{6} $ (A010464) <code>\xe2\x89\x88 2.44948974\xe2\x80\xa6</code>00000Ce$ \\sqrt{7} $ (A010465) <code>\xe2\x89\x88 2.64575131\xe2\x80\xa6</code>00000Ce$ \\sqrt{8} $ (A010466) <code>\xe2\x89\x88 2.82842712\xe2\x80\xa6</code>00000Bn$ \xcf\x86^2 = \xcf\x86+1 = (3+\\sqrt{5})/2 $ (A104457) \xe2\x80\xa600000oStandard error.A`Standard output.AkThe associated scalar type.0ElLike <code>Acquire</code>/<code>Release</code>/<code>AcqRel</code> (for load, store, and \xe2\x80\xa60CaRepresents a chunk containing exactly one element0fU+00610fU+00620fU+00630fU+00640fU+00650fU+00660fU+00670fU+00680fU+00690fU+006A0fU+006B0fU+006C0fU+006D0fU+006E0fU+006F0fU+00700fU+00710fU+00720fU+00730fU+00740fU+00750fU+00760fU+00770fU+00780fU+00790fU+007A0Dd<code>std</code> A handle to the standard error stream of a process.0Di<code>std</code> A handle to the global standard output stream of the \xe2\x80\xa60AkThe stored associated type.0Cj\xf0\x9f\x93\x90 A step size for traversing dimensions or repetitions.0Ck\xf0\x9d\x90\x93 <code>alloc</code> A UTF-8\xe2\x80\x93encoded, growable string.AfHeap-allocated string.01BaStucki error diffusion dithering.0iEtymology0AjHorizontal tab delay mask.EhSee tcflush(3) for the argument values <code>TCIFLUSH</code>, <code>TCOFLUSH</code>, \xe2\x80\xa6CgGet the current serial port settings. (<em>termio</em>)BeGet the current serial port settings.CgSends a STOP character to the terminal, to stop the \xe2\x80\xa6A`Suspends output.BcEquivalent to tcsendbreak(fd, arg).CgSet the current serial port settings. (<em>termio</em>)BeSet the current serial port settings.AnEquivalent to tcflow(fd, arg).DbSend the <code>SIGTTOU</code> signal to the process group of a \xe2\x80\xa6BgThe resulting type after dereferencing.0Bf<code>std</code> A handle to a thread.0De<code>core</code> Represents a globally unique identifier for a type.0AeBinary unit prefixes.0AjSI (metric) unit prefixes.0CeA string describing the vendor of the CPU that is \xe2\x80\xa6oA vacant entry.0CfAn entry that is vacant and can be used for insertion.110Dj\xf0\x9f\x93\x90 A static <code>D</code>-dimensional vector, backed by a primitive \xe2\x80\xa60AfOpen for writing only.Ck\xf0\x9f\x8e\xb2 A simple 8-bit PRNG with 32-bit of state, based on \xe2\x80\xa6000BkCode to set the foreground color to yellow.h3 Yellow0CdAccept a new incoming connection from this listener.CcAppends the given <code>value</code> to this tuple.FcMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> \xe2\x80\xa6FaMoves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> \xe2\x80\xa6CfAppend an item to the end of the slice (similar to \xe2\x80\xa61DbMoves all elements from <code>other</code> to the end of the list.33BbAppend a new element to the chunk.BdSets the option for the append mode.6CdReturns the ratio as a floating-point approximation.0BoGet the buffer slice as an exclusive reference.CfConverts this type into a mutable reference of the \xe2\x80\xa6CmReturns a unique reference to the value. If the value may \xe2\x80\xa6ClReturns an exclusive reference to the inner stored type, \xe2\x80\xa6EkConverts from <code>&amp;mut Bound&lt;T&gt;</code> to <code>Bound&lt;&amp;mut T&gt;</code>.EmConverts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>.EaGets a mutable reference to the pinned value this <code>Pin&lt;Ptr&gt;</code> \xe2\x80\xa6FlConverts from <code>&amp;mut Result&lt;T, E&gt;</code> to <code>Result&lt;&amp;mut T, &amp;mut E&gt;</code>.67BcProvides a raw pointer to the data.DiReturns a raw pointer to the object <code>T</code> pointed to by this \xe2\x80\xa6CkReturns a raw pointer to the <code>Box</code>\xe2\x80\x99s contents.CnReturns a mutable pointer to the underlying <code>bool</code>.CdReturns a mutable pointer to the underlying pointer.CdReturns a mutable pointer to the underlying integer.0000000CbReturns a mutable pointer to the underlying float.11011CbAcquires the underlying <code>*mut</code> pointer.CjReturns a raw pointer to the underlying data in this cell.807ChReturns a raw pointer to the vector\xe2\x80\x99s buffer, or a \xe2\x80\xa6AnReturns a raw pointer to self.ClGets a pointer to the contained value. Reading from this \xe2\x80\xa6BkReturns the inner pointer to this C string.BiGet the buffer slice as shared reference.CnConverts this type into a shared reference of the (usually \xe2\x80\xa6CmReturns a shared reference to the value. If the value may \xe2\x80\xa6CkReturns a shared reference to the inner stored type, in \xe2\x80\xa6EcConverts from <code>&amp;Bound&lt;T&gt;</code> to <code>Bound&lt;&amp;T&gt;</code>.EeConverts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.DeGets a shared reference to the pinned value this <code>Pin</code> \xe2\x80\xa6F`Converts from <code>&amp;Result&lt;T, E&gt;</code> to <code>Result&lt;&amp;T, &amp;E&gt;</code>.67ClReturns the string representation of the <code>Level</code>.DbReturns the string representation of the <code>LevelFilter</code>.AoReturns the inner string slice.0DbExtracts a string slice containing the entire <code>String</code>.111BcReturns the event name as a string.BhReturns the permission name as a string.CkGets the formatted string, if it has no arguments to be \xe2\x80\xa6DeViews this ASCII character as a one-code-unit UTF-8 <code>str</code>.55CkViews the underlying data as a subslice of the original \xe2\x80\xa6CdThis returns a numeric identifier for the thread \xe2\x80\xa6CiConverts the chunk into a vector of references to its \xe2\x80\xa6CdThe distance from the baseline to the highest point.CeDistance from the baseline to the highest glyph edge.10Dg<code>core</code> Asserts that a boolean expression is true at runtime.0EgReturns an exclusive reference to the element at (<code>row</code>, <code>col</code>\xe2\x80\xa60000000EbReturns a shared reference to the element at (<code>row</code>, <code>col</code>).0000000mAtomic types.BoGets the name of the author of the application.BjPerforms the <code>&amp;</code> operation.DoReturns the intersection of <code>self</code> and <code>rhs</code> as a new \xe2\x80\xa601BfPerforms the <code>^</code> operation.EgReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new \xe2\x80\xa601CjReturns the number of blocks allocated to the file, in \xe2\x80\xa6BfImmutably borrows from an owned value.BdImmutably borrows the wrapped value.1EfCreates a new <code>AnsiColor8b</code> from an <code>AnsiColor3b</code> treated as \xe2\x80\xa6B`Sorts a slice using bubble sort.CdReturns a reference to the internally buffered data.0EdThe mouse button that triggered the event (<code>0</code>: left, <code>1</code>: \xe2\x80\xa6BgThe mouse button involved in the event.AdThe button involved.210CmCreates a \xe2\x80\x9cby reference\xe2\x80\x9d adaptor for this instance of \xe2\x80\xa60CmCreates a \xe2\x80\x9cby reference\xe2\x80\x9d adapter for this instance of \xe2\x80\xa6000010AjThe area of the 2d extent.00000000000Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x90\x93 <code>core</code> Equivalent to the corresponding C type.0c\xe2\x80\xa60Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x9f\x99 <code>core</code> Equivalent to the corresponding C type.000Di\xe2\x9a\x99\xef\xb8\x8f <code>core</code> Equivalent to C\xe2\x80\x99s void type when used as a \xe2\x80\xa60CeReturns the source location of the caller of this \xe2\x80\xa6AaCancels this job.ClA macro for defining <code>#[cfg]</code> if-else statements.0Ba<code>cfg-if</code> modificationsCf\xf0\x9d\x90\x93 A 16-bit unicode scalar, limited to the Basic \xe2\x80\xa60ChReturn an <em>iterable</em> that can chunk the iterator.00DbCreates an iterator which <code>clone</code>s all of its elements.0FfMap a <code>Bound&lt;&amp;T&gt;</code> to a <code>Bound&lt;T&gt;</code> by cloning the contents of \xe2\x80\xa6FcMaps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the \xe2\x80\xa6FhMaps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the contents \xe2\x80\xa6FcMaps a <code>Result&lt;&amp;T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by cloning the \xe2\x80\xa6FgMaps a <code>Result&lt;&amp;mut T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by cloning the \xe2\x80\xa65DaCreates a closed interval $[l, u]$ <code>lower..=upper</code> \xe2\x80\xa6EgCreates a mismatch where <code>need</code> is an <code>Interval::closed</code>, and \xe2\x80\xa6DiLexicographically compares the elements of this <code>Iterator</code> \xe2\x80\xa600CcReturns the column from which the panic originated.ClCombine all an iterator\xe2\x80\x99s elements into one element by \xe2\x80\xa60BkConcatenates this chunk with another chunk.Dc<code>core</code> Concatenates literals into a static string slice.02BiReturns a reference of the configuration.0BeThe vector coordinates in some basis.000AnThe D-dimensional coordinates.001111000CeCreates an iterator which copies all of its elements.0FcMaps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the \xe2\x80\xa6FhMaps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the contents \xe2\x80\xa6FcMaps a <code>Result&lt;&amp;T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by copying the \xe2\x80\xa6FgMaps a <code>Result&lt;&amp;mut T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by copying the \xe2\x80\xa64DhCollect the items in this iterator and return a <code>HashMap</code> \xe2\x80\xa600B`Opens a file in write-only mode.CjSets the option to create a new file, or open it if it \xe2\x80\xa6CdCreates the specified directory with the options \xe2\x80\xa6ClCryptographic primitives for encryption, authentication, \xe2\x80\xa6EgDecodes <code>Self</code> from the given <code>reader</code>, returning the decoded \xe2\x80\xa6FfDecodes <code>input</code> into a <code>Vec&lt;u8&gt;</code>, returns <code>None</code> if invalid \xe2\x80\xa600000DhDecodes the given gamma-encoded <code>v</code>alue using this gamma: \xe2\x80\xa602CaReturns the ID of the device containing the file.AlA development layer in Rust.CjProduces the final hash value based on the internal state.BhReturns the number of digits in base 10.00000000000EdConverts a <code>u8</code> into a byte array of <code>3</code> ASCII digits with \xe2\x80\xa6EeConverts a <code>u16</code> into a byte array of <code>5</code> ASCII digits with \xe2\x80\xa6EgConverts a <code>u128</code> into a byte array of <code>39</code> ascii digits with \xe2\x80\xa6EfConverts a <code>u64</code> into a byte array of <code>20</code> ascii digits with \xe2\x80\xa6EhConverts a <code>usize</code> into a byte array of <code>20</code> ascii digits with \xe2\x80\xa6EfConverts a <code>u32</code> into a byte array of <code>10</code> ASCII digits with \xe2\x80\xa6BeSets the method for dither diffusion.DcReturns the result of dividing <code>n</code> by <code>self</code>.00000000000BlDrops the top <code>n</code> stack elements.EeEncodes <code>self</code> into the given <code>writer</code>, returning the bytes \xe2\x80\xa6CfEncodes <code>input</code> into a <code>String</code>.00000DaEncodes the given linear <code>v</code>alue using this gamma: \xe2\x80\xa602Ba<code>encode</code> modificationsChWrites all bytes to stderr. Returns error on syscall \xe2\x80\xa6AdData-related errors.AdText-related errors.DcReturns <code>true</code> if the path points at an existing entity.CjReturns Ok(true) if the path points at an existing entity.AeDoes this path exist?BiThe exponential minus 1, more accurately.0Cm$e^x -1$, more accurately for small values of <code>x</code>.0EeReturns the contained <code>Some</code> value, consuming the <code>self</code> value.EcReturns the contained <code>Ok</code> value, consuming the <code>self</code> value.AmExtend the buffer (fallible).CfExtends a collection with the contents of an iterator.ClInserts all new key-values from the iterator to existing \xe2\x80\xa600BcExtends the stack from an iterator.B`Extend a slice with an iterator.EaExtends <code>self</code> with <code>Path</code> elements from <code>iter</code>.DhCreates a layout describing the record for <code>self</code> followed by56CkReturns the multiplication factor for the prefix as an f64.0CnReturns the multiplication factor for the binary prefix as \xe2\x80\xa6CmReturns the multiplication factor for the SI prefix as an \xe2\x80\xa6ClCreates an iterator which uses a closure to determine if \xe2\x80\xa60EaReturns <code>None</code> if the option is <code>None</code>, otherwise calls \xe2\x80\xa61CeReturns the hash value for the values written so far.CbFinishes output and returns any error encountered.00001CeSearch for the first occurrence of a byte in a slice.CnSearch for the first occurrence of two possible bytes in a \xe2\x80\xa6CnSearch for the first occurrence of three possible bytes in \xe2\x80\xa6DaFormat some value, or an alternative if it\xe2\x80\x99s <code>None</code>.0EcTakes ownership and \xe2\x80\x9cforgets\xe2\x80\x9d about <code>t</code> <em>without running </em>\xe2\x80\xa6ClFormat all iterator elements, separated by <code>sep</code>.0AfSets the pixel format.DgTakes an <code>FmtArguments</code> struct and returns the resulting \xe2\x80\xa6Dk\xf0\x9f\x96\xb9 <code>alloc</code> Creates a String using interpolation of runtime \xe2\x80\xa630BnReturns an iterator over the backtrace frames.CdCreate a new <code>Pinned</code> with a single fieldAkAsynchronous functionality.Ba<code>fxhash</code> modificationsAf\xe2\x9a\x99\xef\xb8\x8f A GLSL boolean.0Di\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat2</code>, a column-major 2\xc3\x972 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat3x3</code>, a column-major 3\xc3\x973 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat4x4</code>, a column-major 4\xc3\x974 matrix \xe2\x80\xa60Bk\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A GLSL unsigned 32-bit integer.0E`\xf0\x9f\x93\x90 Equivalent to GLSL <code>vec2</code>, a vector of 2\xc3\x97<code>g_float</code>s.0E`\xf0\x9f\x93\x90 Equivalent to GLSL <code>vec3</code>, a vector of 3\xc3\x97<code>g_float</code>s.0E`\xf0\x9f\x93\x90 Equivalent to GLSL <code>vec4</code>, a vector of 4\xc3\x97<code>g_float</code>s.0BcReturns the current process number.BoReturns the group ID of the owner of this file.AbA slice of glyphs.0AlReturns the raw handle valueCgIndicates whether the <code>mo</code> field is enabled.CgIndicates whether the <code>ms</code> field is enabled.CgIndicates whether the <code>ns</code> field is enabled.CgIndicates whether the <code>us</code> field is enabled.ClReturns a reference to the map\xe2\x80\x99s <code>BuildHasher</code>.ClReturns a reference to the set\xe2\x80\x99s <code>BuildHasher</code>.B`Returns the height of any glyph.A`Sets the height.BcThe height of each glyph in pixels.0CkA macro for constructing a unique sequential identifier \xe2\x80\xa60DfShows a sequential ID generator made with the <code>id_seq!</code> \xe2\x80\xa6CjReturns the base 10 logarithm of the number, rounded down.00000AiReturns the inode number.BfInserts a key-value pair into the map.DgSets the value of the entry, and returns an <code>OccupiedEntry</code>.AhAdds a value to the set.20DkInserts an element at <code>index</code> within the deque, shifting all \xe2\x80\xa6AiInserts a key-value pair.DhInserts an element at position <code>index</code> within the vector, \xe2\x80\xa6EdInserts a character into this <code>String</code> at byte position <code>idx</code>.DfInserts <code>value</code> into the option, then returns a mutable \xe2\x80\xa6CoReturns the owned value in variant <code>_0</code>, if present.CoReturns the owned value in variant <code>_1</code>, if present.CoReturns the owned value in variant <code>_2</code>, if present.CoReturns the owned value in variant <code>_3</code>, if present.CoReturns the owned value in variant <code>_4</code>, if present.CoReturns the owned value in variant <code>_5</code>, if present.CoReturns the owned value in variant <code>_6</code>, if present.CoReturns the owned value in variant <code>_7</code>, if present.CoReturns the owned value in variant <code>_8</code>, if present.CoReturns the owned value in variant <code>_9</code>, if present.CkReturns <code>true</code> if this mode requires allocation.Ce(crossOriginIsolated) Whether the website is in a \xe2\x80\xa6DkReturns <code>true</code> if the path exists on disk and is pointing at \xe2\x80\xa6DfReturns <code>true</code> if this metadata is for a directory. The \xe2\x80\xa6ClTests whether this file type represents a directory. The \xe2\x80\xa6BeTest if file is a directory (S_ISDIR)AdIs this a directory?ClReturns <code>true</code> if the result is <code>Err</code>.EaReturns <code>true</code> if it is equal to the maximum value (<code>MAX</code>).00000000000EaReturns <code>true</code> if it is equal to the minimum value (<code>MIN</code>).00000000000CfReturns <code>true</code> if <code>self</code> is NaN.000DkReturns <code>true</code> if this is the nul character (<code>0x00</code>).00D`Returns <code>true</code> if <code>self</code> is an odd number.00000000000Bj\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x90\x93 A JavaScript string reference.0CkReturn an iterator adaptor that flattens an iterator of \xe2\x80\xa600AeLayout functionality.BgReturns the size of the file, in bytes.AlThe length of the 1d extent.0ClThe natural logarithm of the absolute value of the gamma \xe2\x80\xa60oLinear algebra.DcGets the value of the <code>SO_LINGER</code> option on this socket.CaReturns a reference to the current global logger.EdReturns the leftmost sub-<code>slice</code> with the given maximum <code>len</code>.AbProcedural macros.EgTransforms the inner value in variant<code>_10</code> using <code>f</code>, leaving \xe2\x80\xa6EgTransforms the inner value in variant<code>_11</code> using <code>f</code>, leaving \xe2\x80\xa6CjApplies a function to the <code>Ok</code> value inside \xe2\x80\xa6ChReturn an iterator adaptor that applies the provided \xe2\x80\xa60FhMaps a <code>Poll&lt;Result&lt;T, E&gt;&gt;</code> to <code>Poll&lt;Result&lt;U, E&gt;&gt;</code> by \xe2\x80\xa6DgMaps a <code>Poll&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to \xe2\x80\xa632CmReturns the provided default result (if none), or applies \xe2\x80\xa6DdReturns the provided default (if <code>Err</code>), or applies a \xe2\x80\xa6B`Marker types, traits and macros.CiReturns the element that gives the maximum value with \xe2\x80\xa600C`Geometric measurement and spatial relationships.CiReturns the element that gives the minimum value with \xe2\x80\xa600ChReturn the minimum and maximum elements in the iterator.00EfModifies the value inside the <code>Cell&lt;Option&lt;T&gt;&gt;</code> by applying \xe2\x80\xa60EbComputes the non-negative modulo of <code>self</code> over |<code>modulus</code>|.E`Computes the non-negative modulo of <code>self</code> over <code>modulus</code>.0010011110DgAlias of <code>new</code> with a unique name that helps type inference.D`Creates an empty <code>HashMap</code> using the given allocator.DkAllocates memory in the given allocator then places <code>x</code> into \xe2\x80\xa6EcCreates an empty <code>BinaryHeap</code> as a max-heap, using <code>A</code> as \xe2\x80\xa6BfCreates an empty <code>HashSet</code>.CjMakes a new empty BTreeMap with a reasonable choice for B.D`Makes a new <code>BTreeSet</code> with a reasonable choice of B.ChConstructs an empty <code>LinkedList&lt;T, A&gt;</code>.AgCreates an empty deque.CkConstructs a new <code>Rc</code> in the provided allocator.DoConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory, \xe2\x80\xa6CeConstructs a new, empty <code>Vec&lt;T, A&gt;</code>.;DfCreates a new <code>PtrNonNull</code> if <code>ptr</code> is non-null.EaReturns the Month number from <code>January=1</code> to <code>December=12</code>.Ba<code>numtoa</code> modificationsCiReturns the four eight-bit integers that make up this \xe2\x80\xa6CkReturns the sixteen eight-bit integers the IPv6 address \xe2\x80\xa6AlAdds an offset to a pointer.EjApplies the <code>or</code> operation to <code>_other</code>, (returns <code>True</code>).EjApplies the <code>or</code> operation to <code>other</code>, (returns <code>other</code>).DdReturns the time origin using <code>performance.timeOrigin()</code>.CnExecutes the command as a child process, waiting for it to \xe2\x80\xa6Bl<code>core</code> Panics the current thread.0DjReturns the <code>Path</code> without its final component, if there is \xe2\x80\xa6CmReturns the path without its final component, if there is \xe2\x80\xa6EaCompares and returns a <code>PartialOrd</code>ered <code>value</code> clamped \xe2\x80\xa6BdThe fundamental period of the cycle.0FbConstructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement \xe2\x80\xa6FdConstructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code> in the provided allocator. If <code>T</code>\xe2\x80\xa6DaReturns the number of <code>(horizontal, vertical)</code> pixels.CkReturns the char of the associated planet of Helenistic \xe2\x80\xa6CmRemoves and returns the last element from a vector if the \xe2\x80\xa6DbPrompts the user for a string from <em>stdin</em>, backed by a \xe2\x80\xa6EgReturns <code>true</code> if the two <code>Arc</code>s point to the same allocation \xe2\x80\xa6EhReturns <code>true</code> if the two <code>Weak</code>s point to the same allocation \xe2\x80\xa6EfReturns <code>true</code> if the two <code>Rc</code>s point to the same allocation \xe2\x80\xa61CoReads TSC + processor ID (serialized with <code>rdtscp</code>).CjMerges <code>self</code> with another <code>Option</code>.DjReduces the given <code>value</code> to the most appropriate prefix as \xe2\x80\xa6CgReduces the elements to a single one, by repeatedly \xe2\x80\xa60CmReduces two options into one, using the provided function \xe2\x80\xa6312AdSimplify a fraction.00000000000000000000000DgReduces the given <code>value</code> to the most appropriate binary \xe2\x80\xa6CmReduces the given value to the most appropriate SI prefix \xe2\x80\xa6AfThe positioned extent.0DfReturns the remainder of dividing <code>n</code> by <code>self</code>.00000000000CnRemoves a key from the map, returning the value at the key \xe2\x80\xa6CkRemoves a value from the set. Returns whether the value was1CnIf the set contains an element equal to the value, removes \xe2\x80\xa6CfRemoves the element at the given index and returns it.DiRemoves and returns the element at <code>index</code> from the deque. \xe2\x80\xa6AiRemoves a key-value pair.DiRemoves and returns the element at position <code>index</code> within \xe2\x80\xa6FcRemoves a <code>char</code> from this <code>String</code> at byte position <code>idx</code> and \xe2\x80\xa6ClRenames a file or directory to a new name, replacing the \xe2\x80\xa6CgCreates an iterator that endlessly repeats a single \xe2\x80\xa6CkCreates an instance of a reader that infinitely repeats \xe2\x80\xa6DjCreates a layout describing the record for <code>n</code> instances of \xe2\x80\xa6CnIs called to get the representation of the value as status \xe2\x80\xa60BfReseeds the generator with a new seed.CfReseeds the generator from the given 3 \xc3\x97 8-bit seeds.DfModifies the deque in-place so that <code>len()</code> is equal to \xe2\x80\xa6F`Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.CiStructured resolution and parameterized outcome-based \xe2\x80\xa6BhResumes the execution of this coroutine.CaTriggers a panic without invoking the panic hook.1CiRetains only the elements specified by the predicate. \xe2\x80\xa6CeRetains only the elements specified by the predicate.00C`Removes any items that don\xe2\x80\x99t meet a predicate.1111CgRetains only the characters specified by the predicate.BdRewind to the beginning of a stream.00ChRotates the top three stack elements, counter-clockwise.EeReturns the rightmost sub-<code>slice</code> with the given maximum <code>len</code>.CkChanges the IP address associated with this socket address.00B`Sorts a slice using shaker sort.AhTermination by signal N.CgA number that represents the sign of <code>self</code>.CkReturns a number that represents the sign of this duration.ChReturns a number representing sign of <code>self</code>.000000000002D`A number that represents its sign, propagating <code>NaN</code>.0BjA more compact <code>Thread::sleep</code>.0CeSort all iterator elements into a new iterator in \xe2\x80\xa600CeReturns the lower-level source of this error, if any.00CkCreates a splicing iterator that replaces the specified \xe2\x80\xa6AjDevice ID containing file.0AbGroup ID of owner.0mInode number.0AaUser ID of owner.0ClReturns the status of this backtrace, indicating whether \xe2\x80\xa6BaReturns the exit value or signal.ClExecutes a command as a child process, waiting for it to \xe2\x80\xa6BfThe status (exit code) of the process.0CjConfiguration for the child process\xe2\x80\x99s standard error \xe2\x80\xa6ChConstructs a new handle to the standard error of the \xe2\x80\xa6ClThe handle for reading from the child\xe2\x80\x99s standard error \xe2\x80\xa6BjThe data that the process wrote to stderr.10CkConfiguration for the child process\xe2\x80\x99s standard output \xe2\x80\xa6CiConstructs a new handle to the standard output of the \xe2\x80\xa6CmThe handle for reading from the child\xe2\x80\x99s standard output \xe2\x80\xa6BjThe data that the process wrote to stdout.10AlThe step size per dimension.0ClApplies applies a separate mapping function to the state \xe2\x80\xa6DoReturns exclusive references to both <code>state</code> and <code>value</code>.DlReturns shared references to both <code>state</code> and <code>value</code>.BaReturns the symbol of the prefix.000AdSystem capabilities.0BhThe name of the target of the directive.0BkExtracts a handle to the underlying thread.0CfLinux-specific extensions to <code>std::thread</code>.oNative threads.ChThe tilt of the stylus along the X-axis (-90\xc2\xb0 to 90\xc2\xb0).BkThe tilt angle of a stylus (if applicable).10ChThe tilt of the stylus along the Y-axis (-90\xc2\xb0 to 90\xc2\xb0).000CnConverts the string slice into an <code>Arc&lt;str&gt;</code>.ChConverts the string into an <code>Arc&lt;str&gt;</code>.10CmConverts the string slice into a <code>Box&lt;str&gt;</code>.CgConverts the string into a <code>Box&lt;str&gt;</code>.CmIt just calls the method <code>String::into_boxed_str</code>.21AnConverts the angle to degrees.0000000000000CaConverts <code>Key</code> to <code>KeyFfi</code>.CkConverts <code>EventKey</code> to <code>EventKeyFfi</code>.CkAcquires a mutable reference to the owned form of the data.AnConverts the angle to radians.0000000000000DcYields a &amp;str slice if the <code>OsStr</code> is valid Unicode.DoYields a <code>&amp;str</code> slice if the <code>Path</code> is valid unicode.DdYields a <code>&amp;str</code> slice if the FsPath is valid unicode.DfYields a &amp;str slice if the <code>CStr</code> contains valid UTF-8.CeConverts this <code>char7</code> to <code>u32</code>.CeConverts this <code>char8</code> to <code>u32</code>.CfConverts this <code>char16</code> to <code>u32</code>.BkReturns the destaqued elements as a vector.BiReturns the stacked elements as a vector.CkReturn an iterator that groups the items in tuples of a \xe2\x80\xa600AhNumber of whole seconds.0BnReturns the user ID of the owner of this file.DjCreates a new <code>MaybeUninit&lt;T&gt;</code> in an uninitialized state.CmReturn an iterator adaptor that filters out elements that \xe2\x80\xa600AnRelease all locks on the file.ClAtomically makes the handle\xe2\x80\x99s token available if it is \xe2\x80\xa6B`cgen Unrolls the given for loop.0EeReturns the contained <code>Some</code> value, consuming the <code>self</code> value.EcReturns the contained <code>Ok</code> value, consuming the <code>self</code> value.Ce\xe2\x9a\x96\xef\xb8\x8f An unwrapper macro that works in compile-time.0CiOn most platforms update() and draw() are called each \xe2\x80\xa6BmUpdates the contained value using a function.CkReturn an iterator adaptor that applies a mutating function01DdOverwrites this <code>WebWindowState</code> with the latest live \xe2\x80\xa6BbUpdates the hasher with more data.00024CkAn iterator visiting all values in arbitrary order. The \xe2\x80\xa6ClGets an iterator over the values of the map, in order by \xe2\x80\xa6CdCoefficient values defining the component\xe2\x80\x99s shape.0CiFetches the environment variable key from the current \xe2\x80\xa6AlThe volume of the 3d extent.0CfReturns a tuple of exclusive references to its fields.CcReturns a tuple of shared references to its fields.DlGets the <code>vtable</code> pointer used to create this <code>Waker</code>.Ck(Window) (Screen) Returns the handle to the browser\xe2\x80\x99s \xe2\x80\xa6AgWindowing capabilities.0CaAdd field <code>B</code> to a <code>Pinned</code>CaAdd field <code>C</code> to a <code>Pinned</code>CaAdd field <code>D</code> to a <code>Pinned</code>CaAdd field <code>E</code> to a <code>Pinned</code>CaAdd field <code>F</code> to a <code>Pinned</code>CaAdd field <code>G</code> to a <code>Pinned</code>CaAdd field <code>H</code> to a <code>Pinned</code>AnReturns the associated worker.DhReturns the value of type <code>T</code> represented by the all-zero \xe2\x80\xa6BnReturns a new instance contrcuted from zeroes.0DnCreates a new <code>MaybeUninit&lt;T&gt;</code> in an uninitialized state, \xe2\x80\xa61ClCreate an iterator which iterates over both this and the \xe2\x80\xa600AeMask for access mode.BiPositionally stable arithmetic dithering.0CmWhen coupled with a load, if the loaded value was written \xe2\x80\xa60Ab8-bit signed angle00000000000000000Ad8-bit unsigned angle00000000000000000B`Unix enviroment for directories.0Ed\xe2\x9a\x9b\xef\xb8\x8f <code>?alloc</code> A version of <code>Arc</code> that holds a non-owning \xe2\x80\xa60Cb\xf0\x9f\x97\x83\xef\xb8\x8f A static 2-dimensional <code>Array</code>.0BiCode to set the background color to blue.BlControls how memory is provided for a value.AfThe owned counterpart.10DkA no-op pointer type, like a <code>Box</code> but without affecting how \xe2\x80\xa60Dj<code>std</code> Enables multiple threads to synchronize the beginning \xe2\x80\xa60Cl\xf0\x9f\x8c\x90 Provides constant bitwise operations on <code>T</code>.0BoBoolean (<code>true</code>/<code>false</code>).0nClose on exec.DjCode to set the foreground color to <code>fg</code> and the background \xe2\x80\xa6AkCode to set crossed effect.Di\xf0\x9d\x90\x93 <code>alloc</code> An owned, C-compatible, nul-terminated string \xe2\x80\xa600BiCode to set the background color to cyan.Cf\xf0\x9f\xa5\xa1 Encodes and decodes a number in big-endian order.0Bg\xf0\x9f\xa5\xa1 Encodes and decodes conditionally.0Ci\xf0\x9f\xa5\xa1 Encodes and decodes a number in little-endian order.0BcRepresents a collection of elements0Cc\xf0\x9f\x8c\x90 Provides comparing methods for <code>T</code>.0Be<code>std</code> A Condition Variable0CjA marker object representing the current instance of a \xe2\x80\xa60BiThe input data was incorrect in some way.ChReturns the compile-time \xe2\x80\x9cdefault value\xe2\x80\x9d for a type.0BcCode to unset bold and dim effects.DbCommon unsafe trait for enumerating untagged <em>raw data </em>\xe2\x80\xa60Dc<code>core</code> A trait for giving a type a useful default value.Ed<code>core</code> Derive macro generating an impl of the trait <code>Default</code>.10Di\xf0\x9f\x96\xb9 <code>core</code> Format trait for an empty format, <code>{}</code>.0Cg\xf0\x9d\x9f\x99 Faster divisor for division and modulo operations.0DgIf <code>ECHO</code> is also set, terminal special characters other \xe2\x80\xa6EhIf <code>ICANON</code> and <code>ECHO</code> are also set, characters are printed as \xe2\x80\xa6Ah\xe2\x80\x9cExec format error.\xe2\x80\x9dAl\xe2\x80\x9cBlock device required.\xe2\x80\x9dAf\xe2\x80\x9cNot a directory.\xe2\x80\x9dAfMachine epsilon value.00000Ae\xe2\x80\x9cText file busy.\xe2\x80\x9dCeenable \xe2\x80\x9cLINEMODE\xe2\x80\x9d; useful with high latency linksBcThe element type of the collection.0fU+00050Dk\xf0\x9f\x8c\x90 Extension trait providing additional methods for <code>Path</code> \xe2\x80\xa60DgThe canonical <code>ExitCode</code> for unsuccessful termination on \xe2\x80\xa6nGeneral error.CfSet non-blocking I/O mode if the argument is non-zero.Cc\xf0\x9d\x90\x93 <code>core</code> Parse a value from a string.0BlThe permission has been granted by the user.0CkAn ordering where a compared value is greater than another.0Dd\xf0\x9f\x97\x83\xef\xb8\x8f <code>std?</code> An unordered hash map implemented with \xe2\x80\xa60Eg<code>std?</code> An unordered hash set implemented as a <code>HashMap</code> where \xe2\x80\xa60CbRing bell when input queue is full (not in POSIX).AkCode to set inverse effect.CgAn invalid value was received for the given type or \xe2\x80\xa600Df<code>?std</code> An iterator over <code>u8</code> values of a reader.0Ch<code>?std</code> Adapter to chain together two readers.0Eg<code>std</code> Ignores any data written via [<code>IoWrite</code>], and read via [\xe2\x80\xa60Fo\xf0\x9f\x9a\xa9+ <code>?std</code> Error type for [<code>IoRead</code>], [<code>IoWrite</code>], [<code>IoSeek</code>] \xe2\x80\xa6AjAn <code>I/O</code> error.1001Eh<code>std</code> An iterator over the lines of an instance of [<code>IoBufRead</code>\xe2\x80\xa60Dn<code>std</code> A buffer type used with <code>IoWrite::write_vectored</code>.0Dd<code>std</code> An iterator over the contents of an instance of \xe2\x80\xa60Dd<code>?std</code> A trait for objects which are byte-oriented sinks.0Ed\xf0\x9f\x94\x84 <code>core</code> An iterator that maps the values of iter with <code>f</code>.0De\xf0\x9f\x94\x84 <code>core</code> A double-ended iterator with the direction \xe2\x80\xa60Dh\xf0\x9f\x94\x84 <code>core</code> An iterator that iterates two other iterators \xe2\x80\xa60CdRepresents JavaScript-side errors in FFI operations.0BiA JavaScript value for FFI communication.0BaFires when a key is pressed down.0CiA bitfield of keys modifiers (Shift, Ctrl\xe2\x80\xa6) + extra \xe2\x80\xa60Calog10(2) (A007524) <code>\xe2\x89\x88 0.30102999\xe2\x80\xa6</code>00000Calog10(e) (A002285) <code>\xe2\x89\x88 0.43429448\xe2\x80\xa6</code>00000Calog2(10) (A020862) <code>\xe2\x89\x88 3.32192809\xe2\x80\xa6</code>00000AnLeft <strong>Alt</strong> key.0fU+005F0BlCode to set the foreground color to magenta.Althe maximum valid bit index.00BeMaximum possible power of 2 exponent.00000CkOne greater than the minimum possible normal power of 2 \xe2\x80\xa600000i5 Magenta0BhFires when the mouse button is released.0BmA <code>Vector</code> with all negative ones.0000000BoThe negative of the multiplicative identity -1.00000BiDon\xe2\x80\x99t update file access time on reads.CnAn input file (not a system file) did not exist or was not \xe2\x80\xa6BaThe greatest representable value.0BaThe smallest representable value.0BmThe multiplicative identity (<code>1</code>).0DjThe only even prime and the fundamental doubling factor (<code>2</code>\xe2\x80\xa60CgNo input was available (e.g., when reading from stdin).0Df\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f <code>core</code> A value that is known not to equal zero.0mNum Lock key.0ClAll characters in the input queue are reprinted when the \xe2\x80\xa6Df<code>std</code> An owned, mutable path (akin to <code>String</code>).0BiRepresents that a value is not ready yet.0Cd\xf0\x9f\x93\x90 A specific position in 2d-space without a size.0Cd\xf0\x9f\x93\x90 A specific position in 3d-space without a size.0Ca\xf0\x9f\x96\xb9 <code>core</code> <code>p</code> formatting.0D`This tuple with an extra element <code>T</code> prepended to it.0AgThe button was pressed.0De<code>std</code> Representation of a running or exited child process.0CnR\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 coefficients for computing luma using Rec. 601\xe2\x80\xa60CnR\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 coefficients for computing luma using Rec. 709\xe2\x80\xa60Ec\xf0\x9f\x93\x8f <code>core</code> A range only bounded exclusively above (<code>..end</code>).0Dh<code>core</code> A mutable memory location with dynamically checked \xe2\x80\xa60C`No ordering constraints, only atomic operations.0AeThe key was released.CmWhen coupled with a store, all previous operations become \xe2\x80\xa610Cg<code>core</code> A helper struct for reverse ordering.AgPlays media in reverse.10Fe\xf0\x9f\xa5\xa1 The <code>RFC 4648</code> standard encoding, used in <code>Base16</code>, <code>Base32</code>\xe2\x80\xa60ChRGB+A color with 32-bit float components (sRGB gamma \xe2\x80\xa60ChRGB+A color with 64-bit float components (sRGB gamma \xe2\x80\xa60CnThe root directory component, appears after any prefix and \xe2\x80\xa60CjSet group ID on execution (<code>S_ISGID</code> in POSIX).CiSet user ID on execution (<code>S_ISUID</code> in POSIX).BhAbort signal from <code>abort(3)</code>.BhTimer signal from <code>alarm(2)</code>.AlChild stopped or terminated.AdContinue if stopped.BbA synonym for <code>SIGPWR</code>.lKill signal.DeBroken pipe: write to pipe with no readers; see <code>pipe(7)</code>.CgPollable event (Sys V); synonym for <code>SIGIO</code>.AhProfiling timer expired.AcQuit from keyboard.AiInvalid memory reference.mStop process.AcTermination signal.AfTrace/breakpoint trap.AgStop typed at terminal.BfTerminal input for background process.BgTerminal output for background process.AfUser-defined signal 1.AfUser-defined signal 2.D`CPU time limit exceeded (4.2BSD); see <code>setrlimit(2)</code>.DaFile size limit exceeded (4.2BSD); see <code>setrlimit(2)</code>.AlThe default signal handling.AcIgnore this signal.Cf$ \\sqrt{10} $ (A010467) <code>\xe2\x89\x88 3.16227766\xe2\x80\xa6</code>00000Cf$ \\sqrt{11} $ (A010468) <code>\xe2\x89\x88 3.31662479\xe2\x80\xa6</code>00000Cf$ \\sqrt{12} $ (A010469) <code>\xe2\x89\x88 3.46410161\xe2\x80\xa6</code>00000Cc$ \\sqrt{\xcf\x80} = \\sqrt{\\frac{1}{2} \xcf\x84} $ (A002161) \xe2\x80\xa600000DjThe canonical <code>ExitCode</code> for successful termination on this \xe2\x80\xa6AgSuccessful termination.BaSymbolic link (S_IFLNK in POSIX).CkRepresents the base approximation in the wavelet transform,0AiDefault time granularity.0fU+000F0fU+002F0Cf\xf0\x9f\x97\x83\xef\xb8\x8f A <code>Stack</code> with an 8-bit index size.0CdAllows to be generic in respect of the data storage.0CiGet the current serial port settings. (<em>termios2</em>)CeSo-called \xe2\x80\x9cPOSIX version\xe2\x80\x9d of <code>TCSBRK</code>.ClAllow the output buffer to drain, discard pending input, \xe2\x80\xa6CiAllow the output buffer to drain, and set the current \xe2\x80\xa6CiSet the current serial port settings. (<em>termios2</em>)21AnSame as <code>FIONREAD</code>.CfEnable (when *argp is nonzero) or disable packet mode.BiInsert the given byte in the input queue.CnCreate an unnamed temporary file (automatically deleted on \xe2\x80\xa6BmText-based and intended to be human-readable.0Ck\xf0\x9f\x9a\xa9 The operation has exceeded the allowed execution time.EmThis <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have \xe2\x80\xa610Cn<code>alloc</code> A generalization of Clone to borrowed data.0Di<code>core</code> Simple and safe type conversions that may fail in a \xe2\x80\xa60Dk<code>core</code> An attempted conversion that consumes self, which may \xe2\x80\xa60iEtymology0AgA user-interface error.0AlUnknown event. Default case.CfThe queried permission is unsupported or unrecognized.AkUnknown key code (default).210CmRepresents the detail component in the wavelet transform, \xe2\x80\xa60Aj\xf0\x9f\x95\x98 The days of the week.0BhPositionally stable XOR-based dithering.0BeThe coroutine suspended with a value.0CmCompares raw pointer addresses for equality, ignoring any \xe2\x80\xa6BiAdvance the internal cursor of the slice.0EkApplies the <code>and</code> operation to <code>other</code>, (returns <code>other</code>).ElApplies the <code>and</code> operation to <code>_other</code>, (returns <code>False</code>).lSee args_os.CaRaw transmutation to <code>&amp;AtomicU32</code>.CaRaw transmutation to <code>&amp;AtomicU64</code>.DfGets this ASCII character as a <code>char</code> Unicode Scalar Value.CeReturns the number of whole minutes in this duration.BeCoerces to a <code>Path</code> slice.CmExtracts a slice corresponding to the portion of the path \xe2\x80\xa60DdCoerces the inner <code>PathBuf</code> to a <code>Path</code> slice.CeReturns the number of whole seconds in this duration.DbReturns the number of <em>whole</em> seconds contained by this \xe2\x80\xa6C`Sets the bit at the specified bit-position to 1.000000000000BjReturns the block size for filesystem I/O.AfReturns a new builder.0EgA bitmask of buttons currently being held down (<code>1</code>: left, <code>2</code>\xe2\x80\xa6EhA bitmask of currently pressed buttons (<code>1</code>: left, <code>2</code>: right, \xe2\x80\xa610EhCreates a grayscale color by wrapping <code>value</code> via <code>% 26</code>, with \xe2\x80\xa6nControl flags.0BjComputes the cross product of two vectors.00000000000Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x9f\x99 <code>core</code> Equivalent to the corresponding C type.0lInput flags.0lLocal flags.0mOutput flags.0Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x90\x93 <code>core</code> Equivalent to the corresponding C type.0440044DiReturns the capacity of a column, equivalent to <code>num_rows</code> \xe2\x80\xa6EeReturns the capacity of a row, equivalent to <code>num_cols</code> == <code>C</code>.CaCaptures a stack backtrace of the current thread.Cg$ \\sqrt[3]{x} $ The cubic root calculated using the \xe2\x80\xa60CeCreates a new asynchronous channel, returning the \xe2\x80\xa6BiTransforms an iterator into a collection.00DmCombinations of <code>n</code> items taken <code>r</code> at a time, ordered.00DoCombinations of <code>n</code> items taken <code>r</code> at a time, unordered.01000011EdConstructs a new <code>ProcessCommand</code> for launching the <code>program</code>.00CfCompacts the queue (moving the read position to zero).Ckproc Conditionally compiles the thing it is attached to \xe2\x80\xa60BhOpens a TCP connection to a remote host.CnConnects this UDP socket to a remote address, allowing the \xe2\x80\xa6CdReturns the <code>JsConsole</code> namespace struct.DdMarks the given <code>amount</code> of additional bytes from the \xe2\x80\xa60CmConverts a value from one unit prefix variant to another, \xe2\x80\xa60CgConverts a value from one binary prefix to another, \xe2\x80\xa6CmConverts a value from one SI prefix to another, returning \xe2\x80\xa6FkCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>self</code> to <code>dest</code>. The \xe2\x80\xa6CbReturns the creation time listed in this metadata.AmReturns the time of creation.Bb<code>crunchy</code> modificationsDjCreates a new <code>AnsiColor8b</code> from a 216-color 6x6x6 RGB cube \xe2\x80\xa6ClRetrieves an exclusive reference to the current instance \xe2\x80\xa6BlGets a handle to the thread that invokes it.00Bb<code>current</code> modificationsDiDeallocates the block of memory at the given <code>ptr</code> pointer \xe2\x80\xa6BmDeallocates memory with the global allocator.ChNo-op. Memory is only reclaimed when the entire WASM \xe2\x80\xa62BkReturns the \xe2\x80\x9cdefault value\xe2\x80\x9d for a type.F`Creates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.BcCreates an empty str inside an Arc.C`Creates an empty <code>[T]</code> inside an Arc.DkConstructs a new <code>Weak&lt;T&gt;</code>, without allocating memory. \xe2\x80\xa6BhReturns a default <code>Mismatch</code>.DcReturns an empty ValueQuant with <code>None</code> for both fields.DbCreates an owned Cow&lt;\xe2\x80\x99a, B&gt; with the default value for \xe2\x80\xa6EjCreates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> \xe2\x80\xa6ElCreates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.ClCreates an empty <code>[T]</code> inside a <code>Box</code>.DeCreates an <code>AtomicBool</code> initialized to <code>false</code>.BoCreates a null <code>AtomicPtr&lt;T&gt;</code>.CgReturns an array, allocated in the stack, using the \xe2\x80\xa6CnReturns an array, allocated in the heap, using the default \xe2\x80\xa6CbCreates an empty <code>BinaryHeap&lt;T&gt;</code>.12CmReturns an empty queue, allocated in the stack, using the \xe2\x80\xa6ClReturns an empty queue, allocated in the heap, using the \xe2\x80\xa6EmCreates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for \xe2\x80\xa6ClReturns an empty stack, allocated in the heap, using the \xe2\x80\xa6CmReturns an empty stack, allocated in the stack, using the \xe2\x80\xa6BgCreates an empty <code>BTreeMap</code>.BjConstructs an empty <code>OsString</code>.BdCreates an empty <code>OsStr</code>.BgCreates an empty <code>BTreeSet</code>.DdReturns a <code>Vector</code>, allocated in the stack, using the \xe2\x80\xa6DiReturns a <code>VecVector</code>, using the default value to fill the \xe2\x80\xa6CbCreates an empty <code>LinkedList&lt;T&gt;</code>.AhReturns an empty string.AgCreates an empty deque.DkCreates a new lazy value using <code>Default</code> as the initializing \xe2\x80\xa6E`Creates a <code>Cell&lt;T&gt;</code>, with the <code>Default</code> value for T.BbCreates an empty CStr inside an RcClCreates an empty <code>[T]</code> inside an <code>Rc</code>.EoCreates a new <code>Rc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.ClCreates an empty <code>str</code> inside an <code>Rc</code>.EcCreates a <code>RefCell&lt;T&gt;</code>, with the <code>Default</code> value for T.DnCreates an <code>UnsafeCell</code>, with the <code>Default</code> value for T.DoConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. \xe2\x80\xa6hFeatures0EaCreates a <code>Flatten</code> iterator from the default value of <code>I</code>.DeCreates a <code>Condvar</code> which is ready to be waited on and \xe2\x80\xa62EaCreates a <code>Mutex&lt;T&gt;</code>, with the <code>Default</code> value for T.3EfCreates a new <code>RwLock&lt;T&gt;</code>, with the <code>Default</code> value for T.44=4BaCreates a new uninitialized cell.55AiCreates an empty hashmap.6BkCreates an empty <code>Vec&lt;T&gt;</code>.77AjCreates a new empty chunk.BfCreates an empty <code>CString</code>.AhReturns an empty string.BeCreates an empty <code>String</code>.1BjConstructs a new <code>RandomState</code>.22DaReturns a default <code>MiniquadService</code> without a handler.DkReturns a <code>Angle</code>, allocated in the stack, using the default \xe2\x80\xa6EkCreates a <code>Chain</code> from the default values for <code>A</code> and <code>B</code>.DoCreates a <code>Cloned</code> iterator from the default value of <code>I</code>DoCreates a <code>Copied</code> iterator from the default value of <code>I</code>EcCreates an <code>Enumerate</code> iterator from the default value of <code>I</code>DnCreates a <code>Fuse</code> iterator from the default value of <code>I</code>.DlCreates a <code>Rev</code> iterator from the default value of <code>I</code>AjReturns <code>None</code>.BkReturns the \xe2\x80\x9cdefault value\xe2\x80\x9d for a type.BnReturns a new empty extended grapheme cluster.CoReturns the default value of <code>\\x00</code> (nul character).00BmReturns an empty extended grapheme character.0BaThe amount scrolled horizontally.0AoThe amount scrolled vertically.0B`Alias of <code>pop_front</code>.CcThe distance from the baseline to the lowest point.CdDistance from the baseline to the lowest glyph edge.10CaDismisses the callback for a boolean state guard.DeReturns an object that implements <code>Display</code> for safely \xe2\x80\xa60CgReturns an object that implements <code>Display</code>.1CmReturns the result of dividing this duration by the given \xe2\x80\xa6CbDivides <code>Duration</code> by <code>f32</code>.1CbDivides <code>Duration</code> by <code>f64</code>.CaReturns the truncated quotient and the remainder.00000000000DnReturns <code>true</code> if <code>n</code> is divisible by <code>self</code>.00000000000BmHelps doc-linking items in downstream crates.0CfReturns the amount of time elapsed since this instant.CgReturns the difference from this system time to the \xe2\x80\xa6BlReturns the elapsed time since this instant.CkDetermines if a log message with the specified metadata \xe2\x80\xa60B`Alias of <code>push_back</code>.CjAdds the contents of an iterator of entries to the set \xe2\x80\xa6CkAdds the contents of an iterator of entries to the list \xe2\x80\xa6CjAdds the contents of an iterator of entries to the map \xe2\x80\xa6ClGenerates a unit-only enum with variants associated to a \xe2\x80\xa60CmShows how to use the <code>enumint!</code> declarative macro.CkDefines an enum and an associated type set of its variants.0CmShows how to use the <code>enumset!</code> declarative macro.BdExecutes the given command directly.0000000000000000CgReturns an error if a nonzero exit status was received.CkWas termination successful?  Returns a <code>Result</code>.BkReturns the factors (including 1 and self).00000000000CcCreates an iterator that flattens nested structure.0EiConverts from <code>Option&lt;Option&lt;T&gt;&gt;</code> to <code>Option&lt;T&gt;</code>.FaConverts from <code>Result&lt;Result&lt;T, E&gt;, E&gt;</code> to <code>Result&lt;T, E&gt;</code>2CaFold <code>Result</code> values from an iterator.00CjComputes the forward wavelet transform on the given input.0CiConverts an integer from big endian to the target\xe2\x80\x99s \xe2\x80\xa600000000000000000000000000000000000EgReturns a new <code>Array</code>, where each element <code>T</code> is the returned \xe2\x80\xa6CdCreates an iterator that calls the given closure \xe2\x80\xa6CiConverts <code>IoError</code> to <code>LinuxError</code>.DmConverts a <code>WebEventKind</code> to <code>KeyState</code>, if applicable.CoConverts <code>WebEventMouse</code> to <code>EventMouse</code>.DiConverts a JavaScript button index in <code>WebEventMouse</code> into \xe2\x80\xa6DhConverts a <code>WebEventKind</code> into <code>EventButtonState</code>.EcConverts a <code>JsInstant</code> to an <code>EventTimestamp</code>, ensuring a \xe2\x80\xa6EhConverts a <code>JsInstant</code> into a <code>TimeDelta</code> relative to the time \xe2\x80\xa6ClConverts an integer from little endian to the target\xe2\x80\x99s \xe2\x80\xa600000000000000000000000000000000000FhReturns an <code>AnsiColor3b</code> from an <code>u8</code> value. If <code>value</code> &gt; 7 then \xe2\x80\xa6EhCreates an ascii character from the byte <code>b</code>, or returns <code>None</code>\xe2\x80\xa6AoConstructs itself from a tuple.E`\xf0\x9f\x93\x90 Equivalent to GLSL <code>bvec2</code>, a vector of 2\xc3\x97<code>g_bool</code>s.0E`\xf0\x9f\x93\x90 Equivalent to GLSL <code>bvec3</code>, a vector of 3\xc3\x97<code>g_bool</code>s.0E`\xf0\x9f\x93\x90 Equivalent to GLSL <code>bvec4</code>, a vector of 4\xc3\x97<code>g_bool</code>s.0Dj\xf0\x9f\x93\x90 Equivalent to GLSL <code>dmat2</code>, a column-major 2\xc3\x972 matrix \xe2\x80\xa60Dj\xf0\x9f\x93\x90 Equivalent to GLSL <code>dmat3</code>, a column-major 3\xc3\x973 matrix \xe2\x80\xa60Dj\xf0\x9f\x93\x90 Equivalent to GLSL <code>dmat4</code>, a column-major 4\xc3\x974 matrix \xe2\x80\xa60Eb\xf0\x9f\x93\x90 Equivalent to GLSL <code>dvec2</code>, a vector of 2\xc3\x97<code>g_double</code>s.0Eb\xf0\x9f\x93\x90 Equivalent to GLSL <code>dvec3</code>, a vector of 3\xc3\x97<code>g_double</code>s.0Eb\xf0\x9f\x93\x90 Equivalent to GLSL <code>dvec4</code>, a vector of 4\xc3\x97<code>g_double</code>s.0Cj\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A GLSL single-precision floating-point number.0Do\xf0\x9f\x93\x90 Equivalent to GLSL <code>ivec2</code>, a vector of 2\xc3\x97<code>g_int</code>s.0Do\xf0\x9f\x93\x90 Equivalent to GLSL <code>ivec3</code>, a vector of 3\xc3\x97<code>g_int</code>s.0Do\xf0\x9f\x93\x90 Equivalent to GLSL <code>ivec4</code>, a vector of 4\xc3\x97<code>g_int</code>s.0E`\xf0\x9f\x93\x90 Equivalent to GLSL <code>ivec2</code>, a vector of 2\xc3\x97<code>g_uint</code>s.0E`\xf0\x9f\x93\x90 Equivalent to GLSL <code>ivec3</code>, a vector of 3\xc3\x97<code>g_uint</code>s.0E`\xf0\x9f\x93\x90 Equivalent to GLSL <code>ivec4</code>, a vector of 4\xc3\x97<code>g_uint</code>s.0AkGamepad input capabilities.0BlReturns the GCD and the B\xc3\xa9zout coeficients.00000000000DiReturns a copy of <code>self</code> with only the value of the bit at \xe2\x80\xa600DiReturns a mutable reference into the given <code>Arc</code>, if there \xe2\x80\xa6CcReturns a mutable reference to the underlying type.CmReturns a mutable reference to the value corresponding to \xe2\x80\xa6D`Returns a mutable reference to the underlying <code>bool</code>.CfReturns a mutable reference to the underlying pointer.CfReturns a mutable reference to the underlying integer.00CnReturns an exclusive reference to the element at the given \xe2\x80\xa61110011CdReturns a mutable reference to the underlying float.220225CbGets a mutable reference to the underlying reader.CbGets a mutable reference to the underlying writer.0CmReturns a mutable reference to the inner error wrapped by \xe2\x80\xa6ClProvides a mutable reference to the element at the given \xe2\x80\xa6ClReturns a mutable reference to the value if initialized. \xe2\x80\xa6CcGets the mutable reference to the underlying value.CcReturns a mutable reference to the underlying data.DhReturns a mutable reference into the given <code>Rc</code>, if there are1111CeReaches into this error indicating that a lock is \xe2\x80\xa643CnRetrieves some exclusive reference to the value associated \xe2\x80\xa6ClReturns an exclusive reference to an initialized element \xe2\x80\xa6ClGets a mutable reference to the underlying value in this \xe2\x80\xa6CmGets mutable references to the underlying readers in this \xe2\x80\xa6<DeGets a mutable reference to the data inside of this <code>Pin</code>.CfReturns a reference to the element at the given 2D \xe2\x80\xa60BjGets a reference to the underlying reader.BjGets a reference to the underlying writer.0CjReturns a reference to the inner error wrapped by this \xe2\x80\xa69CkRetrieves some shared reference to the value associated \xe2\x80\xa6ChGets a reference to the underlying value in this cursor.DeGets references to the underlying readers in this <code>Chain</code>.5BeGets a shared reference out of a pin.FaGets a string from <em>stdin</em> backed by a <code>buffer</code>, until the <code>stop</code>\xe2\x80\xa6EgCreates a new <code>AnsiColor8b</code> from a 24-color grayscale <code>value</code> \xe2\x80\xa6AgSets the given handler.BkChecks if the <em>Alt</em> modifier is set.EaIndicates whether the 3 fields from <code>h</code> to <code>s</code> are enabled.EaIndicates whether the 3 fields from <code>y</code> to <code>d</code> are enabled.EaIndicates whether the 6 fields from <code>y</code> to <code>s</code> are enabled.Di<code>core</code> Parses a file as an expression or an item according \xe2\x80\xa60CdThe child inherits from the corresponding parent \xe2\x80\xa6ClDoes something with each element of an iterator, passing \xe2\x80\xa60ClCalls a function with a reference to the contained value \xe2\x80\xa601AkReturns the absolute value.00A`Returns the GCD.00A`Returns the LCM.00D`Returns the owned value in variant <code>_10</code>, if present.D`Returns the owned value in variant <code>_11</code>, if present.CnReturns the contained <code>Ok</code> value, but never panics.AmReturns a new invalid worker.AmReturns a new invalid handle.BfCreates a new invalid handle (id = 0).CgComputes the inverse wavelet transform on the given \xe2\x80\xa60CjChecks if <code>code</code> is a 7-bit ASCII character \xe2\x80\xa6DaReturns <code>true</code> if <code>self</code> is an even number.00000000000DkReturns <code>true</code> if the path exists on disk and is pointing at \xe2\x80\xa6DiReturns <code>true</code> if this metadata is for a regular file. The \xe2\x80\xa6CkTests whether this file type represents a regular file. \xe2\x80\xa6BhTest if file is a regular file (S_ISREG)oIs this a file?CnReturns the number of <code>None</code> elements in the array.CbReturns <code>true</code> if the destaque is full.BoReturns <code>true</code> if the stack is full.DaReturns <code>true</code> if the current remaining capacity is 0.ClReturns <code>true</code> if the hashmap is completely full.DfReturns <code>true</code> if all the elements are already initialized.222222AnWhether all bits are set to 1.00FeReturns <code>true</code> if this address is an <code>IPv4</code> address, and <code>false</code> \xe2\x80\xa6EeReturns <code>true</code> if the IP address in this <code>SocketAddr</code> is an \xe2\x80\xa6FeReturns <code>true</code> if this address is an <code>IPv6</code> address, and <code>false</code> \xe2\x80\xa61DiReturns <code>true</code> if the angle is of the given <code>kind</code>.0000000000000DeReturns <code>true</code> if the option is a <code>None</code> value.C`Returns <code>true</code> if the chunk is empty.DeReturns <code>true</code> if the option is a <code>Some</code> value.DeReturns <code>true</code> if <code>self</code> is either 0.0 or -0.0.BlReturns true if this duration spans no time.CiReturns true if this <code>Duration</code> spans no time.2CnReturns <code>true</code> if <code>self</code> is 0.0 or -0.0.0De\xe2\x9a\x99\xef\xb8\x8f A JavaScript boolean (<code>true</code> / <code>false</code>).0Cb\xe2\x9a\x99\xef\xb8\x8f \xe2\x88\x85 The JavaScript <code>null</code> value.0CkApplies a function to the <code>Err</code> value inside \xe2\x80\xa6FdMaps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;T, F&gt;</code> by applying a function \xe2\x80\xa6D`Maps a <code>Poll::Ready&lt;Result&lt;T, E&gt;&gt;</code> to \xe2\x80\xa6DnMaps a <code>Poll::Ready&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to \xe2\x80\xa63CiThe maximum of two numbers, propagating <code>NaN</code>.0DjReturns the maximum between itself and <code>other</code>, propagating \xe2\x80\xa60BkReturn all maximum elements of an iterator.00CiReturns the internal measure, the product of the extents.0ClThe message that was given to the <code>panic!</code> macro.CiThe minimum of two numbers, propagating <code>NaN</code>.0DjReturns the minimum between itself and <code>other</code>, propagating \xe2\x80\xa60BkReturn all minimum elements of an iterator.00BhReturns the rights applied to this file.DjFused multiply-add. Computes <code>(self * mul) + add</code> with only \xe2\x80\xa60CmFused multiply-add. Computes (self * mul) + add with only \xe2\x80\xa60CjReturns the result of multiplying this duration by the \xe2\x80\xa6CeMultiplies <code>Duration</code> by <code>f32</code>.1CeMultiplies <code>Duration</code> by <code>f64</code>.CaThe negative absolute value of <code>self</code>.CgReturns the negative absolute value of this time delta.1DiThe negative absolute value of <code>self</code> (sets its sign to be \xe2\x80\xa60DjReturns a seeded <code>XorShift8</code> generator from the given 8-bit \xe2\x80\xa6DkReturns a seeded <code>Lgc16</code> generator from the given 2 \xc3\x97 8-bit \xe2\x80\xa6DjReturns a seeded <code>XorShift16</code> generator from the given 2 \xc3\x97 \xe2\x80\xa6DjReturns a seeded <code>Xabc</code> generator from the given 3 \xc3\x97 8-bit \xe2\x80\xa6DfReturns a seeded <code>Xyza8b</code> generator from the given 4 \xc3\x97 \xe2\x80\xa60DjReturns a seeded <code>XorShift32</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DjReturns a seeded <code>XorShift64</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DgAlias of <code>new</code> with a unique name that helps type inference.00AhReturns a new raw value.DdConstruct from a <code>str</code> using a default-constructed buffer222CkConsume and return the next value of this iterator if a \xe2\x80\xa6CoAdvances the state and returns the next random <code>u8</code>.BhReturns the next random <code>u8</code>.1CnUpdates the state and returns the next random <code>u8</code>.BkReturns the least number greater than self.0AaNightly features.BdReturns this tuple without the head.0BdReturns this tuple without the tail.0DeGets the value of the <code>TCP_NODELAY</code> option on this socket.DeApplies the <code>not</code> operation, (returns <code>False</code>).DdApplies the <code>not</code> operation, (returns <code>True</code>).EhReturns an exclusive reference to the <code>nth</code> element, or <code>None</code> \xe2\x80\xa60EgReturns a shared reference to the <code>nth</code> element, or <code>None</code> if \xe2\x80\xa60BnComputes <code>|self|</code> (absolute value).00BlComputes <code>self + rhs</code> (addition).00BlComputes <code>self / rhs</code> (division).00CbComputes <code>self * rhs</code> (multiplication).00BoComputes <code>-self</code> (additive inverse).00BmComputes <code>self % rhs</code> (remainder).00CeSets <code>self</code> to a valid <code>value</code>.00CmSets <code>self</code> to the given valid <code>value</code>.00BoComputes <code>self - rhs</code> (subtraction).00BaReturns a new OpenOptions object.CmReturns the formatting options this formatter corresponds \xe2\x80\xa6CnReturns the option if it contains a value, otherwise calls \xe2\x80\xa6FbCalls <code>op</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> \xe2\x80\xa6BaDuplicates the top stack element.CkReturns an empty stack, allocated in the stack, copying \xe2\x80\xa6C`Drops the next of stack element in compile-time.BkPops the top stack element in compile-time.C`Rotates the top three stack elements, clockwise.BnReturns the payload associated with the panic.0BfCreates a future which never resolves.00DmPermutations of <code>n</code> items taken <code>r</code> at a time, ordered.00000000000EdCreates a future that wraps a <code>function</code> returning <code>TaskPoll</code>.00CdPrepends the given <code>value</code> to this tuple.CdPrepend a new element to the beginning of the chunk.1CjWrites string + newline to stdout. Optimized for small \xe2\x80\xa6CiProcesses the given data slice, updating the internal \xe2\x80\xa6CgLinux-specific extensions to <code>std::process</code>.AaNative processes.DjTakes an iterator and generates <code>Self</code> from the elements by \xe2\x80\xa6CjIterates over the entire iterator, multiplying all the \xe2\x80\xa60EeTakes each element in the <code>Iterator</code>: if it is a <code>None</code>, no \xe2\x80\xa6EeTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no \xe2\x80\xa632ClProvides type-based access to context intended for error \xe2\x80\xa600AaSets the quality.CdGets a mutable pointer to the wrapped value. The \xe2\x80\xa6CjReturns the device ID of this file (if it is a special \xe2\x80\xa6DiShrinks or grows a block of memory to the given <code>new_size</code> \xe2\x80\xa60BmReallocates memory with the global allocator.1DiRebuilds the table by removing <code>TOMB</code> slots and optimizing \xe2\x80\xa6DgReturns a rebuilt version of the table with <code>TOMB</code> slots \xe2\x80\xa6CfReplaces the contained value, returning the old value.0EfReplaces some element at <code>index</code> with <code>value</code>, returning the \xe2\x80\xa6CmAdds a value to the set, replacing the existing value, if \xe2\x80\xa6CeReplace the contents without dropping the backing \xe2\x80\xa6EdReplaces the value at <code>self</code> with <code>src</code>, returning the old \xe2\x80\xa6EnMoves <code>src</code> into <code>dest</code>, returning the previous <code>dest</code> value.CnMoves src into the pointed dst, returning the previous dst \xe2\x80\xa6ClAdds a value to the set, replacing the existing element, \xe2\x80\xa6DhReplaces the stored value with a <code>new</code> one, returning the \xe2\x80\xa6DkReplaces the contained value with <code>val</code>, and returns the old \xe2\x80\xa6ClReplaces the wrapped value with a new one, returning the \xe2\x80\xa6DhReplace the value in this <code>UnsafeCell</code> and return the old \xe2\x80\xa6DiReplaces the contained value with <code>value</code>, and returns the \xe2\x80\xa60ClRemoves and returns the value for a given key, replacing \xe2\x80\xa6ClReplaces the value at a given index with a new value and \xe2\x80\xa6CnReplaces the actual value in the option by the value given \xe2\x80\xa6DkReserves capacity for at least <code>additional</code> more elements to \xe2\x80\xa6DhReserves capacity for at least <code>additional</code> elements more \xe2\x80\xa61DkReserves capacity for at least <code>additional</code> more capacity to \xe2\x80\xa62EaInvokes <code>reserve</code> on the underlying instance of <code>OsString</code>.3DjReserves capacity for at least <code>additional</code> bytes more than \xe2\x80\xa6BcReverses the <code>Ordering</code>.CnRotates the top six stack elements, counter-clockwise, two \xe2\x80\xa6BnThe number of seconds relative the Unix Epoch.BkThe number of seconds since the Unix Epoch.10CnSends data on the socket to the given address. On success, \xe2\x80\xa6DjReturns a copy of <code>self</code> setting the bit at <code>index</code>.00CjTruncates or extends the underlying file, updating the \xe2\x80\xa6ChForces the length of the vector to <code>new_len</code>.DaSets the value for the <code>IP_TTL</code> option on this socket.00EfSets the environment variable <code>key</code> to the value <code>value</code> for \xe2\x80\xa6AiBoth the sine and cosine.0AdThe sine and cosine.0BdReturns the size of a type in bytes.BmReturns the total size of this file in bytes.CkReturns an iterator starting with the current error and \xe2\x80\xa6CkThe square root calculated using the Newton-Raphson method.0Ce$ \\sqrt{x} $ The square root calculated using the \xe2\x80\xa60AcFile type and mode.0AlDevice ID (if special file).0AeTotal size, in bytes.0CgCreates an iterator starting at the same point, but \xe2\x80\xa600CiWas termination successful? Signal termination is not \xe2\x80\xa6AgPerforms a dup syscall.CfTakes the value out of the option, but only if the \xe2\x80\xa6Cb(setTimeout) Calls a function after a delay in \xe2\x80\xa6DfConverts into the bit patterns of these floats (<code>[u32;4]</code>).DgConverts into the bit patterns of these doubles (<code>[u64;2]</code>).DfConverts into the bit patterns of these floats (<code>[u32;8]</code>).DgConverts into the bit patterns of these doubles (<code>[u64;4]</code>).DiConverts an IPv4 address into a <code>u32</code> representation using \xe2\x80\xa6DjConverts an IPv6 address into a <code>u128</code> representation using \xe2\x80\xa6CfConverts this <code>char7</code> to <code>char</code>.CfConverts this <code>char8</code> to <code>char</code>.CgConverts this <code>char16</code> to <code>char</code>.DiConverts this address to an <code>IPv4</code> address if it is either \xe2\x80\xa6DaConverts <code>TimeDelta</code> into <code>SignedDuration</code>.BfConvert to <code>Rgb&lt;u8&gt;</code>.0CiReturns an exclusive reference to the top item on the \xe2\x80\xa6CoCounts the number of integers $&lt;|n|$ that are relatively \xe2\x80\xa6CmCounts the number of integers $&lt;n$ that are relatively \xe2\x80\xa60011010011CeReturns the length of the iterator if one exists. \xe2\x80\xa600DiTries to makes a new <code>Ref</code> for a component of the borrowed \xe2\x80\xa6DcTries to makes a new <code>RefMut</code> for a component of the \xe2\x80\xa6DdAllocates memory on the heap then places <code>x</code> into it, \xe2\x80\xa6DhConstructs a new <code>Rc&lt;T&gt;</code>, returning an error if the \xe2\x80\xa6CaTries to remove the last character and return it.DkTries to remove the last character and returns it, or <code>None</code> \xe2\x80\xa6000AfNumber of nanoseconds.0CbGets the <code>TypeId</code> of <code>self</code>.0CeReturns the <code>TypeId</code> of <code>Self</code>.00DiReturns <code>true</code> if <code>Self</code> is of type <code>T</code>.00CeReturns the <code>TypeId</code> of <code>self</code>.00EfAttempts to upgrade the <code>Weak</code> pointer to an <code>Arc</code>, delaying \xe2\x80\xa6EeAttempts to upgrade the <code>Weak</code> pointer to an <code>Rc</code>, delaying \xe2\x80\xa6ChReturns an iterator of (variable, value) pairs of OS \xe2\x80\xa6ClReturns the service inner version numbers (major, minor, \xe2\x80\xa60Df\xf0\x9f\x96\xb9 <code>core</code> Writes formatted data into a buffer, with a \xe2\x80\xa60AaABGR color 32bpp.0AaARGB color 32bpp.0Ac16-bit signed angle00000000000000000Ac32-bit signed angle00000000000000000Ac64-bit signed angle00000000000000000Ae16-bit unsigned angle00000000000000000Ae32-bit unsigned angle00000000000000000Ae64-bit unsigned angle00000000000000000BaApple enviroment for directories.0Ck\xf0\x9f\x96\xb9 A formatting wrapper for core arrays, implementing \xe2\x80\xa60fU+002A0CiError diffusion dithering using Bill Atkinson\xe2\x80\x99s method.0Cl\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A thread-safe signed integer type.0Cn\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A thread-safe unsigned integer type.0AaBGRA color 32bpp.0CkThe bit size of this type (only the relevant data part, \xe2\x80\xa600BjCode to set the background color to black.BcCode to unset bold and dim effects.Cl\xf0\x9f\x97\x83\xef\xb8\x8f <code>alloc</code> An ordered map based on a B-Tree.0Cl\xf0\x9f\x97\x83\xef\xb8\x8f <code>alloc</code> An ordered set based on a B-Tree.0AcBad input detected.0AfDecreases bass levels.0AnType size information in bits.0nBorrowed data.AaA borrowed value.10CbCode to set the the background <code>color</code>.CbCode to set the the foreground <code>color</code>.Cf\xf0\x9f\x9a\xa9 The given capacity did not match the required \xe2\x80\xa60fU+00410fU+00420fU+00430fU+00440fU+00450fU+00460fU+00470fU+00480fU+00490fU+004A0fU+004B0fU+004C0fU+004D0fU+004E0fU+004F0fU+00500fU+00510fU+00520fU+00530fU+00540fU+00550fU+00560fU+00570fU+00580fU+00590fU+005A0nCaps Lock key.0DgA backtrace has been captured and the <code>Backtrace</code> should \xe2\x80\xa60Cm\xf0\x9f\xa5\xa1 A dummy writer that counts bytes instead of actually \xe2\x80\xa60BlThe coroutine completed with a return value.0CeMove on to the next phase of the operation as normal.0EgA future that alternates between <code>Ready</code> and <code>Pending</code> status \xe2\x80\xa60CaCommon trait for enumerating <em>data types</em>.0AcDeadlock (avoided).00Eb\xf0\x9f\x96\xb9 <code>core</code> A struct to help with [<code>Debug</code>] implementations.000Dh<code>core</code> Used for mutable dereferencing operations, like in \xe2\x80\xa60Cn\xf0\x9f\x97\x83\xef\xb8\x8f A static double-ended queue and stack backed by an \xe2\x80\xa60CfDevice namespace prefix, e.g., <code>\\\\.\\COM42</code>.0Cj<code>std</code> Entries returned by the ReadDir iterator.0CnCapturing a backtrace has been disabled through either the \xe2\x80\xa60Di\xf0\x9f\x93\x90 A separation between two locations in <code>D</code>-dimensional \xe2\x80\xa60Bh\xf0\x9f\x97\x83\xef\xb8\x8f A static array for storing DSTs.0Cb\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated FIFO queue of DSTs.0Cb\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated LIFO stack of DSTs.0Bi\xf0\x9f\x97\x83\xef\xb8\x8f A statically allocated DST value.0Em\xf0\x9f\x95\x98 <code>core</code> A span of time, with <code>u64</code> seconds and <code>u32</code> \xe2\x80\xa60Ce\xf0\x9f\x9a\xa9 There are not enough elements for the operation.0AlRepresents a keyboard event.0AcAn exclusive bound.0Cm\xf0\x9f\x97\x83\xef\xb8\x8f Extension trait providing convenience methods for \xe2\x80\xa60Cg\xf0\x9d\x9f\x99 \xf0\x9f\x8c\x90 Extension trait for floating-point types. \xe2\x80\xa60Dl\xf0\x9f\x8c\x90 Extension trait providing additional methods for <code>&amp;[T]</code>.0BlGet the number of bytes in the input buffer.An\xf0\x9f\x85\xb5 A simple 3x3 bitmap font.0An\xf0\x9f\x85\xb5 A simple 3x5 bitmap font.0An\xf0\x9f\x85\xb5 A simple 5x6 bitmap font.0Dk<code>std</code> Represents a type of file with accessors for each file \xe2\x80\xa60Dd\xf0\x9f\x96\xb9\xf0\x9f\x9a\xa9 <code>core</code> The error type which is returned from \xe2\x80\xa6B`A <code>core::fmt::Error</code>.001Dg\xf0\x9f\x96\xb9 <code>core</code> Writing or formatting into Unicode-accepting \xe2\x80\xa60fU+000C0fU+002E0ChANSI gray background 0/23 8-bit color (4% white, 96% \xe2\x80\xa6ChANSI gray background 1/23 8-bit color (8% white, 92% \xe2\x80\xa6CiANSI gray background 2/23 8-bit color (12% white, 88% \xe2\x80\xa6CiANSI gray background 3/23 8-bit color (16% white, 84% \xe2\x80\xa6CiANSI gray background 4/23 8-bit color (20% white, 80% \xe2\x80\xa6CiANSI gray background 5/23 8-bit color (24% white, 76% \xe2\x80\xa6CiANSI gray background 6/23 8-bit color (28% white, 72% \xe2\x80\xa6CiANSI gray background 7/23 8-bit color (32% white, 68% \xe2\x80\xa6CiANSI gray background 8/23 8-bit color (36% white, 64% \xe2\x80\xa6CiANSI gray background 9/23 8-bit color (40% white, 60% \xe2\x80\xa6BjCode to set the background color to green.B`\xf0\x9d\x90\x93 Common trait for EGC types.0CcA hashing algorithm used in the Rustc compiler, \xe2\x80\xa60oInfinity (\xe2\x88\x9e).00000ChA unique identifier based on a pinned heap-allocated \xe2\x80\xa60AcAn inclusive bound.0Ee<code>core</code> Used for indexing operations (<code>container[index]</code>) in \xe2\x80\xa60CkPositive or negative infinity, which often results from \xe2\x80\xa60De\xf0\x9d\x9f\x99 \xf0\x9f\x8c\x90 This is a wrapper over <code>Int</code> with additional \xe2\x80\xa60Bl\xf0\x9f\x9a\xa9+ All possible integer operation errors.0Ej\xf0\x9f\x93\x8f A range of values with <code>lower</code> and <code>upper</code> <code>Bound</code>s.0C`Which kind of iterator are we turning this into?0Dh<code>?std</code> Wraps an in-memory buffer and provides it with an [\xe2\x80\xa60Dj<code>std</code> A reader which yields one byte over and over and over \xe2\x80\xa60Ec\xe2\x9a\x96\xef\xb8\x8f <code>?std</code> A specialized <code>Result</code> type for I/O operations.00Bb<code>core</code> An IPv4 address.0Bb<code>core</code> An IPv6 address.0Dc\xf0\x9f\x94\x84 <code>std</code> Iterates over the arguments of a process, \xe2\x80\xa60Ef\xf0\x9f\x94\x84 <code>core</code> An iterator that yields <code>None</code> forever after the \xe2\x80\xa60Dg\xf0\x9f\x94\x84 <code>core</code> An iterator that yields an element exactly once.0Ee\xf0\x9f\x94\x84 <code>std</code> An iterator over the [<code>IterPathComponents</code>] of a \xe2\x80\xa60Dh\xf0\x9f\x94\x84 <code>core</code> An iterator to maintain state while iterating \xe2\x80\xa60F`\xf0\x9f\x94\x84 <code>core</code> An iterator that skips over <code>n</code> elements of <code>iter</code>.0Eg\xf0\x9f\x94\x84 <code>core</code> An iterator that only iterates over the first <code>n</code> \xe2\x80\xa60Dh\xf0\x9f\x94\x84 <code>std</code> An iterator over a snapshot of the environment \xe2\x80\xa60Cj\xf0\x9f\x94\x84 <code>core</code> A trait for dealing with iterators.0AnHandle to a JavaScript Object.0AmAlphanumeric (A-Z, 0-9) keys.0A`Media key codes.0BkRepresents the state of a <code>Key</code>.0Dc<code>core</code> A value which is initialized on the first access.0Db<code>std</code> A value which is initialized on the first access.0DmLeft <strong>Meta</strong> key (used in some Unix-based systems, overlaps \xe2\x80\xa60fU+000A0Dk<code>log</code> An enum representing the available verbosity levels of \xe2\x80\xa60BkCompression that retains all original data.0Ca\xf0\x9f\x96\xb9 <code>core</code> <code>e</code> formatting.0Ca\xf0\x9f\x96\xb9 <code>core</code> <code>x</code> formatting.0Dj\xe2\x9a\x96\xef\xb8\x8f Represents a mismatch between an expected <code>need</code> and \xe2\x80\xa60Ea\xf0\x9f\x94\x84 <code>std</code> An iterator over messages on an [<code>MpscReceiver</code>]0BiThe negative of the additive identity -0.00000AnDon\xe2\x80\x99t follow symbolic links.AbNon-blocking mode.CfThe additive identity (<code>0</code>), if applicable.0AdA negative sign (-).EjBy convention, <strong>negative</strong> angles represent a <strong>clockwise</strong> \xe2\x80\xa601BfAn entity was not found, often a file.00Ck\xf0\x9d\x9f\x99 Fundamental numeric constants for both integer and \xe2\x80\xa60Bc\xf0\x9d\x9f\x99 \xf0\x9f\x9a\xa9+ A numeric-related error.00Cm\xf0\x9d\x90\x93 \xf0\x9d\x9f\x99 Converts a number into a string representation, \xe2\x80\xa60AbAn occupied entry.0AoAn entry that contains a value.110De<code>core</code> A cell which can nominally be written to only once.0Dh<code>std</code> A synchronization primitive which can be written to \xe2\x80\xa60Dg\xe2\x9a\x96\xef\xb8\x8f <code>core</code> The result of a comparison between two values.0Dc\xf0\x9d\x90\x93 <code>std</code> A type for owned, mutable native strings, \xe2\x80\xa60Cl\xf0\x9d\x9f\x99 \xf0\x9f\x9a\xa9 An arithmetic overflow error, with an optional \xe2\x80\xa60Cg\xf0\x9f\x9a\xa9 An arithmetic overflow error, with an optional \xe2\x80\xa6CmAn arithmetic overflow error, with an optional associated \xe2\x80\xa602210ChThe remote system returned something that was \xe2\x80\x9cnot \xe2\x80\xa6nPage down key.0fU+002B0Cl\xf0\x9f\x93\x90 A static sequence of 2-dimensional <code>Point</code>s.0CiThe lock could not be acquired because another thread \xe2\x80\xa60Cd\xf0\x9f\x93\x90 A location in <code>D</code>-dimensional space.0AdA positive sign (+).F`By convention, <strong>positive</strong> angles represent a <strong>counterclockwise</strong>\xe2\x80\xa601BdReturns to the previous media track.0CkR\xe2\x80\xb2G\xe2\x80\xb2B\xe2\x80\xb2 coefficients for computing luma using Rec. \xe2\x80\xa60AaRGBA color 32bpp.0AhThe button was released.0CiRGB+A color with 8-bit integer components (sRGB gamma \xe2\x80\xa60AoRight <strong>Alt</strong> key.0BcWindow resize signal (4.3BSD, Sun).BmAn internal software error has been detected.Cf$ \\sqrt{\xcf\x86} $ (A139339) <code>\xe2\x89\x88 1.27201964\xe2\x80\xa6</code>00000Dc$ \\sqrt{\xcf\x84} = \\sqrt{2\xcf\x80} $ (A019727) <code>\xe2\x89\x88 2.50662827\xe2\x80\xa6</code>00000iEtymology0fU+000E0CgA spinlock providing mutual exclusion without blocking.0CnThe key is not identified as being located in a particular \xe2\x80\xa60Al= 180\xc2\xb0 (\xc2\xbd\xcf\x84), a half turn.0Cj\xf0\x9d\x90\x93 A UTF-8\xe2\x80\x93encoded string, backed by an array with \xe2\x80\xa60ClAllow the output buffer to drain, discard pending input, \xe2\x80\xa6CiAllow the output buffer to drain, and set the current \xe2\x80\xa6CnTemporary failure, indicating something that is not really \xe2\x80\xa6C`Turn break off, that is, stop sending zero bits.DhRedirect output that would have gone to <code>/dev/console</code> or \xe2\x80\xa6BePut the terminal into exclusive mode.BhSet the line discipline of the terminal.CiReturn the current packet mode setting in the integer \xe2\x80\xa6BiGet the session ID of the given terminal.AoClear the indicated modem bits.AmSet the indicated modem bits.AmGet the status of modem bits.AmSet the status of modem bits.Ajsee <code>TIOCM_CAR</code>B`DSR (data set ready/line enable)Ajsee <code>TIOCM_RNG</code>AgSecondary RXD (receive)AhSecondary TXD (transmit)AgDisable exclusive mode.BmGet the number of bytes in the output buffer.C`Turn break on, that is, start sending zero bits.BhGet the line discipline of the terminal.Dj<code>core</code> Indicates whether a value is ready or if the current \xe2\x80\xa60Dh\xe2\x9a\x9b\xef\xb8\x8f <code>?alloc</code> The implementation of waking a task on an \xe2\x80\xa60Ba\xf0\x9f\x9b\xa1\xef\xb8\x8f The size of the terminal.0Cj<code>std</code> A unique identifier for a running thread.0iEtymology0Bg\xf0\x9f\x95\x98 Timecode splitting and formatting.0CkThe I/O operation\xe2\x80\x99s timeout expired, causing it to be \xe2\x80\xa600Eb\xf0\x9d\x90\x93 <code>alloc</code> A trait for converting a value to a [<code>String</code>].0AhIncreases treble levels.0EgA formatting wrapper for <code>Tuple</code>s, implementing <code>Display</code> and \xe2\x80\xa60CkThe inner type that serves as the unique identifier for \xe2\x80\xa60Ao\xe2\x9a\x96\xef\xb8\x8f A user-interface result.0Ca\xf0\x9f\x96\xb9 <code>core</code> <code>E</code> formatting.0Ca\xf0\x9f\x96\xb9 <code>core</code> <code>X</code> formatting.0Ec\xf0\x9f\x9a\xa9 <code>std</code> Returned from [<code>Env::var</code>][crate::Env#method.var].0AgA default unit variant.EbThe bit index that corresponds to <code>ExampleEnum::</code><code>Variant0</code>.A`A tuple variant.EbThe bit index that corresponds to <code>ExampleEnum::</code><code>Variant1</code>.BaA self-referential tuple variant.EbThe bit index that corresponds to <code>ExampleEnum::</code><code>Variant2</code>.BcA struct variant with discriminant.EbThe bit index that corresponds to <code>ExampleEnum::</code><code>Variant3</code>.B`Supports generics and lifetimes.EbThe bit index that corresponds to <code>ExampleEnum::</code><code>Variant4</code>.Cm\xf0\x9f\x97\x83\xef\xb8\x8f A persistent data structure with efficient append \xe2\x80\xa60Ci\xf0\x9f\x97\x83\xef\xb8\x8f <code>alloc</code> A double-ended growable queue.0Bc\xf0\x9f\x93\x90 A static 2-dimensional vector.0Bc\xf0\x9f\x93\x90 A static 3-dimensional vector.0CaVerbatim prefix, e.g., <code>\\\\?\\cat_pics</code>.0BjCode to set the background color to white.Ec\xf0\x9d\x9f\x99 <code>core</code> Provides intentionally-wrapped arithmetic on <code>T</code>.0EbComputes the absolute difference between <code>self</code> and <code>other</code>.CgMakes the given path absolute without accessing the \xe2\x80\xa600BnReturns the last access time of this metadata.AkReturns the time of access.AlLanewise <code>a + b</code>.ChLanewise <code>a + b</code> with <code>f32</code> lanes.CcReturns the minimum alignment of the type in bytes.CjCreates a layout describing the record that can hold a \xe2\x80\xa6DoAligns <code>value</code> upward to the nearest multiple of <code>align</code>.FeReturns <code>None</code> if the option is <code>None</code>, otherwise calls <code>f</code> with \xe2\x80\xa6FbCalls <code>op</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> \xe2\x80\xa6AhGets the data directory.0AhGets the home directory.0BaGets the name of the application.AmGets the temporary directory.00CfInline append an item (See <code>Self::append</code>).Dk<code>safe_arch</code> Turns a comparison operator token to the correct \xe2\x80\xa60AdConvert to an array.000CiReturns a copy of the inner array with the full contents.00001111CjReturns the values as an array, if all are of the same \xe2\x80\xa611DiView any <code>T: Sync + Unpin + ?Sized</code> as <code>&amp;[u8]</code>.BoReturns a byte slice of the inner string slice.CbReturns the instance\xe2\x80\x99s data as a slice of bytes.0DfReturns the contents of this <code>CString</code> as a slice of bytes.2CnReturns a byte slice of this <code>String</code>\xe2\x80\x99s contents.333DgReturns the contents of this <code>MaybeUninit</code> as a slice of \xe2\x80\xa6344D`Extracts a <code>CStr</code> slice containing the entire string.EhConverts from <code>Option&lt;T&gt;</code> (or <code>&amp;Option&lt;T&gt;</code>) to \xe2\x80\xa6EnConverts from <code>Result&lt;T, E&gt;</code> (or <code>&amp;Result&lt;T, E&gt;</code>) to \xe2\x80\xa6CcReturns the number of whole hours in this duration.DhReturns a reference to the inner value in variant<code>_0</code>, if \xe2\x80\xa6DhReturns a reference to the inner value in variant<code>_1</code>, if \xe2\x80\xa6DhReturns a reference to the inner value in variant<code>_2</code>, if \xe2\x80\xa6DhReturns a reference to the inner value in variant<code>_3</code>, if \xe2\x80\xa6DhReturns a reference to the inner value in variant<code>_4</code>, if \xe2\x80\xa6DhReturns a reference to the inner value in variant<code>_5</code>, if \xe2\x80\xa6DhReturns a reference to the inner value in variant<code>_6</code>, if \xe2\x80\xa6DhReturns a reference to the inner value in variant<code>_7</code>, if \xe2\x80\xa6DhReturns a reference to the inner value in variant<code>_8</code>, if \xe2\x80\xa6DhReturns a reference to the inner value in variant<code>_9</code>, if \xe2\x80\xa6CiReturns the total duration in units of whole nanoseconds.CmReturns the total number of nanoseconds contained by this \xe2\x80\xa6DiReturns a reference to the inner value in variant <code>_0</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant <code>_1</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant <code>_2</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant <code>_3</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant <code>_4</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant <code>_5</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant <code>_6</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant <code>_7</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant <code>_8</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant <code>_9</code>, if \xe2\x80\xa6CcReturns a shared slice containing the entire array.CnReturns a slice of all values in the underlying vector, in \xe2\x80\xa6BiReturns a slice containing the full grid.BdReturns the stack as a shared slice.CfReturns a shared reference to the distance as a slice.CdReturns a shared reference to the extent as a slice.CfReturns a shared reference to the position as a slice.BnExtracts a slice containing the entire vector.CiGet the underlying bytes as a slice with the original \xe2\x80\xa6CiReturns a shared reference to the orientation as a slice.CdReturns a shared reference to the stride as a slice.ClReturns an immutable slice of all elements that have not \xe2\x80\xa6CnReturns a slice of the contained value, if any. If this is \xe2\x80\xa6BjReturns a (9) tuple with all the elements.AnReturns the values as a tuple.DiReturns the unique ID as a <code>usize</code>, derived from the stack \xe2\x80\xa6DjReturns the unique ID as a <code>usize</code>, derived from the memory \xe2\x80\xa6CdReturns an iterator in ascending order of magnitude.000CnReturns the last access time of the file, in seconds since \xe2\x80\xa6DjProvides a mutable reference to the back element, or <code>None</code> \xe2\x80\xa60BgWhere the base line sits in the height.0CiA \xe2\x80\x9cmeta iterator adaptor\xe2\x80\x9d. Its closure receives a \xe2\x80\xa600CmReturns the bit size of this type (only the relevant data \xe2\x80\xa600BbCreates a custom bit field struct.0CnShows how to use the <code>bitfield!</code> declarative macro.BlBlocks the thread until the future is ready.00CgReturns a reference to the contained value, whether \xe2\x80\xa6CfReturns the external boundary, the sum of the extents.0FeConverts the <code>ControlFlow</code> into an <code>Result</code> which is <code>Ok</code> if the \xe2\x80\xa6CnCalculates the offset from a pointer in bytes (convenience \xe2\x80\xa6DiReturns the length in bytes of the <code>std::io::File</code> backing \xe2\x80\xa6E`Returns the length in bytes of the <code>io::Cursor&lt;u8&gt;</code> backing \xe2\x80\xa6CnReturns the number of bytes needed to represent the scalar \xe2\x80\xa600CiReturns the bytes required to store the given Unicode \xe2\x80\xa64Dd\xe2\x9a\x99\xef\xb8\x8f\xf0\x9d\x9f\x99 <code>core</code> Equivalent to the corresponding C type.0AlThe length of the 1d extent.0000000000011AlThe volume of the 3d extent.00000000000AlPerforms the call operation.0CkReturns the number of elements the map can hold without \xe2\x80\xa6DaReturns the total capacity of the array, equals <code>CAP</code>.CkReturns the number of elements the binary heap can hold \xe2\x80\xa6DkReturns the total capacity of the array, equals <code>CR == C * R</code>\xe2\x80\xa6BhReturns the destaque\xe2\x80\x99s total capacity.CkReturns the number of elements the set can hold without \xe2\x80\xa6BeReturns the stack\xe2\x80\x99s total capacity.DdReturns the capacity this <code>OsString</code> can hold without \xe2\x80\xa6ClReturns the number of bytes the internal buffer can hold \xe2\x80\xa60BdReturns the total capacity in bytes.CmReturns the number of elements the deque can hold without \xe2\x80\xa6EbInvokes <code>capacity</code> on the underlying instance of <code>OsString</code>.DdReturns the total capacity of the hashmap (fixed at <code>N</code>).ClReturns the total number of elements the vector can hold \xe2\x80\xa64ChReturns this <code>String</code>\xe2\x80\x99s capacity, in bytes.55555DaReturn an <em>iterable</em> that can group iterator elements. \xe2\x80\xa600CbReturns the floating point category of the number.0CnReturn an iterator adaptor that uses the passed-in closure \xe2\x80\xa60Bjproc Returns the first non-empty argument.01CiCompresses wavelet coefficients by thresholding small \xe2\x80\xa60EgReturns <code>true</code> if the option is a <code>Some</code> value containing the \xe2\x80\xa6EfReturns <code>true</code> if the result is an <code>Ok</code> value containing the \xe2\x80\xa6DeReturns <code>true</code> if the array contains <code>element</code>.ChReturns true if the array contains <code>element</code>.CkReturns true if the destaque contains <code>element</code>.CfReturns <code>true</code> if the set contains a value.ChReturns true if the stack contains <code>element</code>.DhReturns <code>true</code> if the given item is present in this iterator.0C`Checks if the interval contains the given value.DiReturns <code>true</code> if the set contains an element equal to the \xe2\x80\xa6DiReturns <code>true</code> if <code>item</code> is contained in the range.0EfReturns <code>true</code> if the <code>LinkedList</code> contains an element equal \xe2\x80\xa6DkReturns <code>true</code> if the deque contains an element equal to the \xe2\x80\xa6222222<;5DiA number composed of a magnitude of <code>self</code> and the sign of \xe2\x80\xa60DjA number composed of the magnitude of itself and the <code>sign</code> \xe2\x80\xa60CkAccumulates the <code>u8</code> into a running CRC32 value.CgReturns the last status change time of the file, in \xe2\x80\xa6DfCreates a new <code>NonNull</code> that is dangling, but well-aligned.ClCreates a new pointer that is dangling, but non-null and \xe2\x80\xa6DiCreates a <code>NonNull</code> that is dangling, but well-aligned for \xe2\x80\xa6BmReturns a raw pointer to the underlying data.0ClRemove duplicates from sections of consecutive identical \xe2\x80\xa60ClRemoves all but the first of consecutive elements in the \xe2\x80\xa61DiConverts a one-digit number to the corresponding <code>1</code> ASCII \xe2\x80\xa6DiConverts a two-digit number to the corresponding <code>2</code> ASCII \xe2\x80\xa6DkConverts a three-digit number to the corresponding <code>3</code> ASCII \xe2\x80\xa6DjConverts a four-digit number to the corresponding <code>4</code> ASCII \xe2\x80\xa6CiForcibly captures a disabled backtrace, regardless of \xe2\x80\xa6EcCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the \xe2\x80\xa600000CnReturns the quotient, rounding the result towards positive \xe2\x80\xa600000000000AlLanewise <code>a / b</code>.CbLanewise <code>a / b</code> with <code>f32</code>.Cg(Document) Handle to the brower\xe2\x80\x99s global Document \xe2\x80\xa6Cd(document) Returns the <code>document</code> object.DoAttempts to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a \xe2\x80\xa6C`Attempts to downcast the box to a concrete type.00CnAttempts to downcast the custom boxed error to <code>E</code>.111DkAttempts to downcast the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.DhConsume the first <code>n</code> elements from the iterator eagerly, \xe2\x80\xa600BgDuplicates the back element at the backCjReturns the positive duration which represents how far \xe2\x80\xa6CjWrites string + newline to stderr. Optimized for small \xe2\x80\xa6Bc<code>etcetera</code> modificationsAdDocumented examples.DeHelper to extend during construction (See <code>Self::extend</code>).AaLibrary features.CmBitwise or with the current value, returning the previous \xe2\x80\xa6000BfLogical \xe2\x80\x9cor\xe2\x80\x9d with a boolean value.111111110CkPerforms a bitwise \xe2\x80\x9cor\xe2\x80\x9d operation on the address of \xe2\x80\xa6BhBitwise \xe2\x80\x9cor\xe2\x80\x9d with the current value.00000000000Ckproc Generates an expression for accessing a field of a \xe2\x80\xa60CkReturns the contents of the internal buffer, filling it \xe2\x80\xa6CmReturns the contents of the \xe2\x80\x9cfront\xe2\x80\x9d slice as returned \xe2\x80\xa61ClApplies function to the elements of iterator and returns \xe2\x80\xa600CiCreates an iterator that works like map, but flattens \xe2\x80\xa600DkReturns a copy of <code>self</code> flipping the bit at <code>index</code>.00CjReturns the flow information associated with this address.BoCalls a closure on each element of an iterator.00DeCreates a new angle from a floating-point <code>degrees</code> value.000000CfCreates a new angle from a <code>degrees</code> value.110111CaConverts <code>KeyFfi</code> to <code>Key</code>.CkConverts <code>EventKeyFfi</code> to <code>EventKey</code>.CkConverts a reference to a non-zero mutable reference if \xe2\x80\xa6CoConverts a mutable reference to a <code>NonNull</code> pointer.C`Convert an exclusive reference to a raw pointer.DcConverts a reference to <code>T</code> into a slice of length 1 \xe2\x80\xa6DhReturns a <code>&amp;Cell&lt;T&gt;</code> from a <code>&amp;mut T</code>EcConverts from <code>&amp;mut T</code> to <code>&amp;mut UnsafeCell&lt;T&gt;</code>.CeCreates a new <code>AtomicBool</code> from a pointer.CdCreates a new <code>AtomicPtr</code> from a pointer.CgCreates a new reference to an atomic integer from a \xe2\x80\xa60000000CjCreates a new reference to an atomic float from a pointer.11011CbWraps a raw C string with a safe C string wrapper.DeCreates a new angle from a floating-point <code>radians</code> value.0000CfCreates a new angle from a <code>radians</code> value.11111011CkConstructs an <code>Arc&lt;T&gt;</code> from a raw pointer.DkConverts a raw pointer previously created by <code>into_raw</code> back \xe2\x80\xa6BdConstructs a box from a raw pointer.CjConstructs an <code>Rc&lt;T&gt;</code> from a raw pointer.2DiRetakes ownership of a <code>CString</code> that was transferred to C \xe2\x80\xa6CdConstructs a <code>Thread</code> from a raw pointer.ClCreates a new <code>Waker</code> from <code>RawWaker</code>.CgConverts a reference to a <code>NonNull</code> pointer.BlConvert a shared reference to a raw pointer.DcConverts a reference to <code>T</code> into a slice of length 1 \xe2\x80\xa6CnParses a string <code>s</code> to return a value of this type.CmConverts a string <code>s</code> into a <code>CString</code>.1Cj\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A GLSL double-precision floating-point number.0Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat2x3</code>, a column-major 2\xc3\x973 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat2x4</code>, a column-major 2\xc3\x974 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat3x2</code>, a column-major 3\xc3\x972 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat3x4</code>, a column-major 3\xc3\x974 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat4x2</code>, a column-major 4\xc3\x972 matrix \xe2\x80\xa60Dk\xf0\x9f\x93\x90 Equivalent to GLSL <code>mat4x3</code>, a column-major 4\xc3\x973 matrix \xe2\x80\xa60ClReturns an iterator of the arguments that will be passed \xe2\x80\xa6BgGets a single byte from <em>stdin</em>.CdGets a single <code>char</code> from <em>stdin</em>.CnReturns a clone of the element at the given 2D coordinates \xe2\x80\xa6CdReturns an iterator of the environment variables \xe2\x80\xa6DnGets a string from <em>stdin</em> backed by a <code>buffer</code>, until a \xe2\x80\xa62BgThe current framebuffer size in pixels.AmSee <code>.chunk_by()</code>.00BoChecks if the <em>Control</em> modifier is set.EbIndicates whether the 6 fields from <code>h</code> to <code>ns</code> are enabled.BlChecks if the <em>Meta</em> modifier is set.CnReturns <code>true</code> if the <code>Path</code> has a root.AlChecks if SIMD is available.EaIndicates whether all the 9 fields from <code>y</code> to <code>ns</code> are \xe2\x80\xa6BfCalculates the hash of a single value.00CiReturns an exclusive reference to the head of this tuple.0EgReturns <code>true</code> if <code>high_dpi</code> was requested and it\xe2\x80\x99s running \xe2\x80\xa6DdIf <code>true</code>, the rendering canvas is scaled for HighDPI \xe2\x80\xa60CnReturns the path of the current user\xe2\x80\x99s home directory if \xe2\x80\xa6CmApplies a function which takes the parameter by exclusive \xe2\x80\xa600CjApplies a function which takes the parameter by shared \xe2\x80\xa600CfThe hypothenuse (the euclidean distance) using the \xe2\x80\xa60Df\xe2\x88\x85 <code>core</code> The identity function. Just returns back its \xe2\x80\xa6DjReturns the identity matrix, or <code>None</code> if the matrix is not \xe2\x80\xa600000001EeReturns <code>true</code> if it\xe2\x80\x99s probable the given <code>address</code> is in \xe2\x80\xa6CnReturns an iterator over the connections being received on \xe2\x80\xa6Ch(setInterval) Calls a function repeatedly at a fixed \xe2\x80\xa6Dd\xf0\x9f\x93\x8f Creates an <code>Interval</code> using extended range notation.0CoReturns the contained <code>Err</code> value, but never panics.G`Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not \xe2\x80\xa6CmConsumes the <code>Arc</code>, returning the wrapped pointer.DhConsumes the <code>Weak&lt;T&gt;</code> and turns it into a raw pointer.CoConsumes the <code>Box</code>, returning a wrapped raw pointer.ClConsumes the <code>Rc</code>, returning the wrapped pointer.2DkConsumes the <code>CString</code> and transfers ownership of the string \xe2\x80\xa6CjConsumes the <code>Thread</code>, returning a raw pointer.FhConverts this <code>Pin&lt;&amp;mut T&gt;</code> into a <code>Pin&lt;&amp;T&gt;</code> with the same \xe2\x80\xa6DkReturns the inner <code>Box</code>ed primitive array as a <code>Vec</code>.DjConsumes the <code>BinaryHeap</code> and returns the underlying vector \xe2\x80\xa61ClReturns <code>true</code> if this mode uses existing memory.CjChecks if all characters in this string are within the \xe2\x80\xa6BnChecks if the value is within the ASCII range.00DbReturns <code>true</code> if this is a <code>Break</code> variant.CkChecks if the unicode scalar is a digit in the given radix.00CjReturns <code>true</code> if the map contains no elements.CnReturns the number of <code>None</code> elements in the array.BcChecks if the binary heap is empty.CcReturns <code>true</code> if the destaque is empty.CjReturns <code>true</code> if the set contains no elements.C`Returns <code>true</code> if the stack is empty.50BoChecks whether the <code>OsStr</code> is empty.AjWhether the list is empty.DfReturns <code>true</code> if the non-null raw slice has a length of 0.CeChecks if the interval is empty (contains no values).5DgReturns <code>true</code> if the range contains no items. One-sided \xe2\x80\xa60DbReturns <code>true</code> if the <code>LinkedList</code> is empty.CeReturns <code>true</code> if the current length is 0.C`Returns <code>true</code> if the deque is empty.CmReturns <code>true</code> if the hashmap contains no entries.CmReturns <code>true</code> if the vector contains no elements.CmReturns <code>true</code> if no elements are yet initialized.4FeReturns <code>true</code> if this <code>String</code> has a length of zero, and <code>false</code>\xe2\x80\xa6555CcReturns <code>true</code> if the iterator is empty.0BjReturns true if the file size equals zero.CiChecks whether the current state is uninitialized (or \xe2\x80\xa6CiReturns <code>true</code> if the range contains no items.0DlReturns <code>true</code> if <code>self.to_bytes()</code> has a length of 0.<4:::AmWether all bits are set to 0.00DkReturns true if the data is owned, i.e. if <code>to_mut</code> would be \xe2\x80\xa6C`Returns <code>true</code> if the value is owned.Cc(locationbar) Whether the window is a popup or not.CeReturns <code>true</code> if <code>n</code> is prime.00000000000DjReturns <code>true</code> if the poll is a <code>Poll::Ready</code> value.CeValidates the internal consistency of window metrics.EbRetuns <code>true</code> if the fraction is valid <code>(denominator != 0)</code>.00000000000000000000000CiChecks if <code>code</code> is a valid Unicode scalar \xe2\x80\xa6ClReturns whether the ratio is effectively a whole number (\xe2\x80\xa6Ch\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 An upcasted pointer-sized signed integer \xe2\x80\xa60ClReturns an iterator over exclusive reference to elements \xe2\x80\xa6CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6ChGets a mutable iterator over the entries of the map, \xe2\x80\xa6AkReturns a mutable iterator.0CdProvides a forward iterator with mutable references.CiReturns a front-to-back iterator that returns mutable \xe2\x80\xa6CjReturns a mutable iterator over the possibly contained \xe2\x80\xa606CmReturns an iterator over shared references to elements of \xe2\x80\xa60Bo\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 A JavaScript signed 32-bit integer.0CcAdds the key part of a new entry to the map output.AlKeyboard input capabilities.0CfReturns the number of bytes needed to encode in UTF-8.00CjReturns the number of bytes needed to encode the given \xe2\x80\xa6ClThe natural logarithm of the absolute value of the gamma \xe2\x80\xa60CiReturns information about the location from which the \xe2\x80\xa60CjMakes a mutable reference into the given <code>Arc</code>.CiMakes a mutable reference into the given <code>Rc</code>.DkCreates a new pointer by mapping <code>self</code>\xe2\x80\x99s address to a new \xe2\x80\xa6DdConvert each item of the iterator using the <code>Into</code> trait.00B`Lanewise <code>max(a, b)</code>.0AgBitwise-copies a value.00CbDrops <code>self</code> by running its destructor.00EfSwaps the value of <code>self</code> and <code>other</code> without deinitializing \xe2\x80\xa600DdReplaces <code>self</code> with its default value, returning the \xe2\x80\xa600CgReturn an iterator adaptor that merges the two base \xe2\x80\xa600BaMetadata about the log directive.BkQueries metadata about the underlying file.ClReturns the metadata for the file that this entry points \xe2\x80\xa6ClQueries the file system to get information about a file, \xe2\x80\xa6BmReturns the metadata part of the fat pointer.ClGiven a path, queries the file system to get information \xe2\x80\xa6AeReturns the metadata.EaCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.00000DhCalculates the middle point of <code>self</code> and <code>other</code>.0000000000000B`Lanewise <code>min(a, b)</code>.0ChA macro for namespaced <code>miniquad</code> operations.Bb<code>miniquad</code> UI backends.1CnDeclares a module by including a Rust source file relative \xe2\x80\xa60C`A macro helper to define a module name and path.0CkReturns the last modification time listed in this metadata.BaReturns the time of modification.CnReturns the last modification time of the file, in seconds \xe2\x80\xa6AlLanewise <code>a * b</code>.ChLanewise <code>a * b</code> with <code>f32</code> lanes.BhFlips all the bits of <code>self</code>.00ChReturns the negative version of the angle (no-op for \xe2\x80\xa6BjReturns the negative version of the angle.110010000110DkReturns a seeded <code>XorShift128</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DiReturns a seeded <code>Xoroshiro128pp</code> generator from the given \xe2\x80\xa6DiReturns a seeded <code>XorShift128</code> generator from the given 16 \xe2\x80\xa6DgReturns a seeded <code>Lgc16</code> generator from the given 16-bit \xe2\x80\xa6DeReturns a seeded <code>XorShift16</code> generator from the given \xe2\x80\xa6DhReturns a seeded <code>Xyza8a</code> generator from the given 32-bit \xe2\x80\xa60DeReturns a seeded <code>XorShift32</code> generator from the given \xe2\x80\xa6DeReturns a seeded <code>XorShift64</code> generator from the given \xe2\x80\xa6DfReturns a seeded <code>Xyza8a</code> generator from the given 2 \xc3\x97 \xe2\x80\xa60DjReturns a seeded <code>XorShift32</code> generator from the given 2 \xc3\x97 \xe2\x80\xa6DjReturns a seeded <code>XorShift64</code> generator from the given 2 \xc3\x97 \xe2\x80\xa6DiReturns a seeded <code>XorShift128+</code> generator from the given 2 \xe2\x80\xa6DkReturns a seeded <code>Xoroshiro128pp</code> generator from the given 2 \xe2\x80\xa6DkReturns a seeded <code>XorShift128</code> generator from the given 2 \xc3\x97 \xe2\x80\xa6DjReturns a seeded <code>XorShift64</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DiReturns a seeded <code>XorShift128+</code> generator from the given 4 \xe2\x80\xa6DkReturns a seeded <code>Xoroshiro128pp</code> generator from the given 4 \xe2\x80\xa6DkReturns a seeded <code>XorShift128</code> generator from the given 4 \xc3\x97 \xe2\x80\xa6DiReturns a seeded <code>XorShift128+</code> generator from the given 8 \xe2\x80\xa6DkReturns a seeded <code>Xoroshiro128pp</code> generator from the given 8 \xe2\x80\xa6DkReturns a seeded <code>XorShift128</code> generator from the given 8 \xc3\x97 \xe2\x80\xa6DkReturns a new <code>Array</code> allocated in the stack, from the given \xe2\x80\xa6EeGenerates some unique <code>ExampleIdSeqUsize</code> ID with <code>Relaxed</code> \xe2\x80\xa6CfCreates a normalized full positive angle at 0 degrees.0000000000000DgAlias of <code>new</code> with a unique name that helps type inference.BdReturns self with all bits set to 1.001CgGenerates the next random value split into 4 u8 values.BhReturns the next <code>nth</code> month.BjReturns the next <code>nth</code> weekday.CcAdvances to the next random <code>u16</code> value.BiReturns the next random <code>u16</code>.DgReturns the next random <code>u32</code>, from the first 32-bits of \xe2\x80\xa6EdReturns the next 2 \xc3\x97 random <code>u16</code> combined as a single <code>u32</code>.BiReturns the next random <code>u32</code>.CaGenerates the next random <code>u32</code> value.EcReturns the next 4 \xc3\x97 random <code>u8</code> combined as a single <code>u32</code>.00432240BiReturns the next random <code>u64</code>.0EdReturns the next 4 \xc3\x97 random <code>u16</code> combined as a single <code>u64</code>.1CbReturns the next u64, advancing the state 2 times.EcReturns the next 8 \xc3\x97 random <code>u8</code> combined as a single <code>u64</code>.00332EdReturns the next 2 \xc3\x97 random <code>u32</code> combined as a single <code>u64</code>.441CgReturns the number of hard links pointing to this file.BlDisables running and inheriting spawn hooks.DbReturns the <code>n</code>th element from the end of the iterator.00BcCreates a null mutable raw pointer.EdReturns the number of columns, equivalent to <code>cap_row</code> == <code>C</code>.CnReturns <code>Self</code> if given a valid <code>value</code>.00CcReturns the inner <code>self</code> representation.0EaReturns the number of rows, equivalent to <code>cap_col</code> == <code>R</code>.AnPrints to the standard output.0BlDrops the top stack element in compile-time.BjDuplicates the top stack pair of elements.BfDrops the pair of next stack elements.C`Duplicates the next of stack element to the top.BlPeeks the top stack element in compile-time.D`Pushes a new <code>element</code> to the top of the stack in \xe2\x80\xa6CiRotates the top six stack elements, clockwise, two times.CaSwaps the top two stack elements in compile-time.CgDuplicates the top element before the next of stack \xe2\x80\xa6CkReturns a mutable reference to the greatest item in the \xe2\x80\xa6BdMutably peeks the top stack element.CgReturns a mutable reference to the last item in the \xe2\x80\xa6CkReturns a mutable reference to the next() value without \xe2\x80\xa6CmPeeks the <code>nth</code> element from the top of the stack.EeCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> \xe2\x80\xa600BlThe key representing the hardware scan code.Cd\xf0\x9f\x9b\xa1\xef\xb8\x8f The key representing the hardware scan code.10CkPlatform-specific hints (e.g., context creation, driver \xe2\x80\xa60Bc<code>pollster</code> modificationsAfPops the back element.CkRemoves the last element from a list and returns it, or \xe2\x80\xa6CnRemoves the last element from the deque and returns it, or \xe2\x80\xa6ClRemoves and returns the last element in the map. The key \xe2\x80\xa6ClRemoves the last element from the set and returns it, if \xe2\x80\xa6BlReturns the current position of this cursor.BhReturns the number of bytes read so far.CiSearches for an element in an iterator, returning its \xe2\x80\xa60CiPosition index of the component within the resolution \xe2\x80\xa610BjReturns the positive version of the angle.0ChReturns the positive version of the angle (no-op for \xe2\x80\xa611110010001ClReturn an iterator that iterates through the powerset of \xe2\x80\xa600ClThe pressure applied to the pointer (0.0 to 1.0 for most \xe2\x80\xa6CeThe pressure applied (0.0 to 1.0), applicable for \xe2\x80\xa610AkReturns the previous month.AmReturns the previous weekday.CnCounts the number of primes upto and including <code>n</code>.00000000000CiIterate over the entire iterator and multiply all the \xe2\x80\xa600CmAppends an element to the back of a collection, returning \xe2\x80\xa6DjPushes the contents of a <code>string</code> slice as an item onto the \xe2\x80\xa6ClAppends to the end the fitting characters from the given \xe2\x80\xa60DfAppends a given string slice onto the end of this <code>String</code>.111Bc<code>quickdiv</code> modificationsCjReturns a subslice up to the given <code>end</code> index.0CkPull some bytes from this source into the specified buffer.00ChReturns an iterator over the entries within a directory.0DkReads a JS string into a Rust <code>&amp;str</code> backed by the given \xe2\x80\xa6DfReturns <code>true</code> if these permissions describe a readonly \xe2\x80\xa6CjCreates a new iterator that repeats a single element a \xe2\x80\xa6CiRotates all the destaqued elements one place to the left.EdAsserts the <code>state</code> matches the <code>predicate</code>, otherwise panics.DkUnwraps the contained <code>Some(state)</code> or panics with the given \xe2\x80\xa6EcUnwraps the contained <code>Ok(state)</code> or panics with a <code>message</code>.FnMaps a <code>Result&lt;S&gt;</code> to a <code>Result&lt;T&gt;</code> by applying the <code>op</code> functionCiUnwraps the contained <code>Some(state)</code> or panics.CgUnwraps the contained <code>Ok(state)</code> or panics.ChZeros all unused bytes while maintaining the current \xe2\x80\xa6000CbReturns the scope ID associated with this address.DmReturns the time code as <code>HH:MM:SS:MIL</code> or <code>MM:SS:MIL</code>.CgReturns the eight 16-bit segments that make up this \xe2\x80\xa6BmThe key representing the human-readable code.Ce\xf0\x9f\x9b\xa1\xef\xb8\x8f The key representing the human-readable code.10CgSets the element at the given 2D coordinates in the \xe2\x80\xa6EfAssign to each reference in <code>self</code> from the <code>from</code> iterator, \xe2\x80\xa600CkRegisters a custom panic hook, replacing the previously \xe2\x80\xa6DdSets the args into an <code>m128</code>, first arg is the high lane.CiSet <code>f32</code> args into an <code>m256</code> lane.DoA copy of <code>self</code> setting the bits that are set in <code>mask</code>.00Ca(name) Sets the current window <code>name</code>.CgChanges the port number associated with this socket \xe2\x80\xa6007BdSet the application\xe2\x80\x99s window size.CfShuts down the read, write, or both halves of this \xe2\x80\xa6CfSuspends execution of calling thread for the given \xe2\x80\xa6CePuts the current thread to sleep for at least the \xe2\x80\xa600000000AoLast access time (nanoseconds).0AhLast status change time.0AgLast modification time.0A`Hard link count.0AlLanewise <code>a - b</code>.ChLanewise <code>a - b</code> with <code>f32</code> lanes.C`Transforms itself into a tuple, in compile-time.CnAttempts to sync all OS-internal file content and metadata \xe2\x80\xa6AhPerforms a dup2 syscall.AiPerforms an exit syscall.AiPerforms an open syscall.AhPerforms a pipe syscall.AhPerforms a read syscall.AhPerforms a stat syscall.CiReturns an exclusive reference to the tail of this tuple.0BjReturns the path of a temporary directory.Cm(timeEnd) Stops a timer with the given name, started with \xe2\x80\xa6Cl(timeLog) Logs a timer with the given name, started with \xe2\x80\xa6BmTransmutes the <code>m128</code> to an array.BnTransmutes the <code>m128d</code> to an array.BmTransmutes the <code>m256</code> to an array.BnTransmutes the <code>m256d</code> to an array.EfReturns some <code>LEN</code> destaqued elements as an array, or <code>None</code> \xe2\x80\xa6EgReturns some <code>LEN</code> stacked elements as an array, or <code>None</code> if \xe2\x80\xa6CdConverts to <code>[u8; N]</code> (must have N == L).CdConverts to <code>[u8; N]</code> (must have N == 1).ChConverts to <code>[u8; N]</code> (must have N == len()).0CnConcatenates into <code>[u8; N]</code> (must have N == len()).10DfCopies all elements from <code>src</code> into a new fixed-size array.ClReturns the ASCII byte representation of the 8-bit color \xe2\x80\xa60BgConverts this C string to a byte slice.CgConverts this <code>char7</code> to <code>char8</code>.CbConverts the scalar to a digit in the given radix.00CeConverts <code>(row, col)</code> into a linear index.00000000000D`Converts <code>self</code> to the equivalent <code>Level</code>.CjCreates owned data from borrowed data, usually by cloning.0DeCreate from <code>Rgb&lt;u16&gt;</code> by scaling each component \xe2\x80\xa6BgConvert to <code>Rgb&lt;u16&gt;</code>.10BgConvert to <code>Rgba&lt;u8&gt;</code>.0AcConvert to a tuple.000DeReturns a copy of both bounds as a tuple <code>(lower, upper)</code>.1111BjReturns a (9) tuple with all the elements.BlResize the string (discarding trailing data)CkTruncate the <code>OsString</code> to the specified length.DgShortens the deque, keeping the first <code>len</code> elements and \xe2\x80\xa6DhShortens the vector, keeping the first <code>len</code> elements and \xe2\x80\xa6CjShortens this <code>String</code> to the specified length.BoSets the option for truncating a previous file.ClApplies function to the elements of iterator and returns \xe2\x80\xa600ClAn iterator method that applies a function as long as it \xe2\x80\xa600AhPerforms the conversion.EhAttempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.EfAttempts to convert a <code>Vec&lt;T&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.CmAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;u16&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u16&gt;.CmAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i32&gt;.D`Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u128&gt;.CoAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;isize&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i32&gt;.CmAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i16&gt;.CmAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u64&gt;.CmAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u32&gt;.CmAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u16&gt;.CmAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u32&gt;.ClAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u8&gt;.CoAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;usize&gt;.ClAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i8&gt;.CoAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;isize&gt;.CmAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;i32&gt;.ClAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;u8&gt;.DaAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;usize&gt;.ClAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;u8&gt;.CmAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u64&gt;.CnAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u128&gt;.CoAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;usize&gt;.CmAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;i16&gt;.ClAttempts to convert NonZero&lt;u32&gt; to NonZero&lt;i8&gt;.CoAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;usize&gt;.CmAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i8&gt;.ClAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;u8&gt;.CnAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u128&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i16&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i32&gt;.CoAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;isize&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u64&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i64&gt;.CmAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u64&gt;.CoAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;i128&gt;.CmAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u32&gt;.CmAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;i64&gt;.CmAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;i16&gt;.CmAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u16&gt;.ClAttempts to convert NonZero&lt;u16&gt; to NonZero&lt;i8&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i16&gt;.CkAttempts to convert NonZero&lt;u8&gt; to NonZero&lt;i8&gt;.D`Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i128&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i64&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i32&gt;.CoAttempts to convert <code>isize</code> to NonZero&lt;isize&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i16&gt;.ClAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;u8&gt;.CmAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u16&gt;.CmAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;u16&gt;.CnAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;usize&gt;.CnAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;i8&gt;.CoAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u128&gt;.CmAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u128&gt;.D`Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;isize&gt;.CmAttempts to convert <code>i128</code> to NonZero&lt;i128&gt;.D`Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;usize&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i64&gt;.CkAttempts to convert <code>i64</code> to NonZero&lt;i64&gt;.CmAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u8&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i32&gt;.D`Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;isize&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i64&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i16&gt;.D`Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i128&gt;.CmAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;i8&gt;.CoAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;isize&gt;.CmAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;i32&gt;.CkAttempts to convert <code>i32</code> to NonZero&lt;i32&gt;.CmAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;u32&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u32&gt;.ClAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u64&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u64&gt;.CmAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;i16&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u16&gt;.CkAttempts to convert <code>i16</code> to NonZero&lt;i16&gt;.CnAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u8&gt;.ClAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u16&gt;.CkAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u8&gt;.ClAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;i8&gt;.CiAttempts to convert <code>i8</code> to NonZero&lt;i8&gt;.CoAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;isize&gt;.CnAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;i8&gt;.CoAttempts to convert <code>usize</code> to NonZero&lt;usize&gt;.CmAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;i16&gt;.CnAttempts to convert NonZero&lt;i128&gt; to NonZero&lt;u32&gt;.ClAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;i8&gt;.DaAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;isize&gt;.ClAttempts to convert NonZero&lt;i16&gt; to NonZero&lt;i8&gt;.CnAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;u128&gt;.CoAttempts to convert NonZero&lt;u64&gt; to NonZero&lt;usize&gt;.CmAttempts to convert <code>u128</code> to NonZero&lt;u128&gt;.D`Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u128&gt;.CoAttempts to convert NonZero&lt;isize&gt; to NonZero&lt;u16&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u64&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u32&gt;.CoAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u16&gt;.CkAttempts to convert <code>u64</code> to NonZero&lt;u64&gt;.ClAttempts to convert NonZero&lt;i64&gt; to NonZero&lt;u8&gt;.CnAttempts to convert NonZero&lt;usize&gt; to NonZero&lt;u8&gt;.CiAttempts to convert <code>u8</code> to NonZero&lt;u8&gt;.D`Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;usize&gt;.CkAttempts to convert <code>u16</code> to NonZero&lt;u16&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u64&gt;.CkAttempts to convert <code>u32</code> to NonZero&lt;u32&gt;.CnAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u32&gt;.CmAttempts to convert NonZero&lt;u128&gt; to NonZero&lt;u8&gt;.CoAttempts to convert NonZero&lt;i32&gt; to NonZero&lt;usize&gt;.ClAttempts to convert NonZero&lt;i8&gt; to NonZero&lt;u32&gt;.DjTries to create a new <code>StringNonul</code> from the given slice of \xe2\x80\xa6DhTries to create a new <code>StringNonul</code> from the given string \xe2\x80\xa6hFeatures00000000000EeTries to create a new <code>StringU8</code> from the given <code>string</code> slice.DfTries to create a new <code>StringU8</code> from the given slice of\xe2\x80\xa6EcConverts a <code>CString</code> into a <code>String</code> if it contains valid \xe2\x80\xa6ElConverts the given <code>Vec&lt;u8&gt;</code> into a  <code>String</code> if it contains \xe2\x80\xa6EcTries to create a new <code>StringU16</code> from the given <code>string</code> \xe2\x80\xa6DgTries to create a new <code>StringU16</code> from the given slice of\xe2\x80\xa6DgTries to create a new <code>StringU32</code> from the given slice of\xe2\x80\xa6EcTries to create a new <code>StringU32</code> from the given <code>string</code> \xe2\x80\xa6EeTries to create a new <code>StringUsize</code> from the given <code>string</code> \xe2\x80\xa6DiTries to create a new <code>StringUsize</code> from the given slice of\xe2\x80\xa6AhPerforms the conversion.00CnReturns an iterator that will attempt to yield all pending \xe2\x80\xa6BmTry to acquire an exclusive lock on the file.AnAttempts to acquire this lock.BnAttempts to acquire the lock without blocking.CfTries to append to the end of the string the given \xe2\x80\xa60000DeAttempts to acquire this <code>RwLock</code> with shared read access.CgAttempts to return a pending value on this receiver \xe2\x80\xa6CjAttempts to send a value on this channel without blocking.CnAttempts to collect the exit status of the child if it has \xe2\x80\xa6CbAcquires a reference to the value in this TLS key.CkReturns the number tag associated with the current variant.Cj\xe2\x9a\x99\xef\xb8\x8f \xf0\x9d\x9f\x99 An upcasted pointer-sized unsigned integer \xe2\x80\xa60CmReturns the expected UTF-8 byte length based on the first \xe2\x80\xa6EdAsserts the <code>value</code> matches the <code>predicate</code>, otherwise panics.EcUnwraps the contained <code>Ok(value)</code> or panics with a <code>message</code>.DkUnwraps the contained <code>Some(value)</code> or panics with the given \xe2\x80\xa6FnMaps a <code>Result&lt;V&gt;</code> to a <code>Result&lt;W&gt;</code> by applying the <code>op</code> functionCiUnwraps the contained <code>Some(value)</code> or panics.CgUnwraps the contained <code>Ok(value)</code> or panics.DhValidates that inactive <code>()</code> variants only appear at the end,nVendored work.BaReturns the current viewport sizeC`Transforms itself into a tuple, in compile-time.ChToggle LUT usage while keeping everything else the same.CfToggle padding while keeping everything else the same.CaWrites a single <code>i8</code> into this hasher.00CaWrites a single <code>u8</code> into this hasher.00ElYields an <code>Ok</code> <code>value</code> and returns an awaitable <code>CoroWork</code>.EdZips <code>self</code> and another <code>Option</code> with function <code>f</code>.AbAdd seals to file.Dc<code>core</code> The addition assignment operator <code>+=</code>.0CnA socket address could not be bound because the address is \xe2\x80\xa600fU+00260Db\xf0\x9f\x93\x90 The kind of <code>Angle</code>, based on its normalized turn.0AnApplication specific metadata.0ChCompile-time conversion from slice-like types to arrays.0Eh\xf0\x9d\x90\x93 One of 128 Unicode characters (<code>U+0000</code> to <code>U+007F</code>), the \xe2\x80\xa60Df\xe2\x9a\x9b\xef\xb8\x8f <code>portable-atomic</code> A thread-safe floating-point type.000Cl\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A thread-safe signed integer type.00000Dk\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A raw pointer type which can be safely shared \xe2\x80\xa60Cn\xe2\x9a\x9b\xef\xb8\x8f <code>?core</code> A thread-safe unsigned integer type.00000AkCode to unset blink effect.CgAn IPv4 address representing the broadcast address: \xe2\x80\xa6AoThe size of this type in bytes.00fU+0008nBackspace key.10Cf<code>std</code> A captured OS thread stack backtrace.0Eh\xf0\x9f\xa5\xa1 <code>Base32Hex</code> uses RFC 4648 hex-encoding (<code>0-9 A-V</code> instead \xe2\x80\xa60AhToggles bass boost mode.0Ce<code>core</code> A trait for mutably borrowing data.0Bn\xf0\x9f\xa7\xba A simple, single-threaded bump allocator.0AoType size information in bytes.0CaA (user specified) output file cannot be created.CdCode to set the background color to <code>bg</code>.CdCode to set the foreground color to <code>fg</code>.BgCode to move the cursor up by one line.CcAlias of <strong>negative</strong> angle direction.Cn\xf0\x9f\xa5\xa1 Encodes and decodes an iterator as a sequence with an \xe2\x80\xa60DoThe type of a single color component (e.g., <code>u8</code>, <code>f32</code>).0ClAllows to convert compile-time constants into type-level \xe2\x80\xa60Cj\xf0\x9f\x97\x83\xef\xb8\x8f An immutable, append-only, linear, functional, \xe2\x80\xa60Dc<code>core</code> The trait implemented by builtin coroutine types.0Ec\xf0\x9f\xa5\xa1 The <code>Crockford</code> <code>Base32</code> encoding, case-insensitive, \xe2\x80\xa60BjCreate a directory if one doesn\xe2\x80\x99t exist.AmDirectory (S_IFDIR in POSIX).Bm\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>array</em> data type.0Cj\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>double-ended queue</em> data type.0Cj\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>double-ended stack</em> data type.0Bm\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>queue</em> data type.0Bm\xf0\x9f\x97\x83\xef\xb8\x8f An abstract <em>stack</em> data type.0CbCommon trait for enumerating <em>data values</em>.0Eb\xf0\x9f\x96\xb9 <code>core</code> A struct to help with [<code>Debug</code>] implementations.0Cc\xf0\x9f\xa5\xa1 A type that can be decoded from an I/O reader.0Dc<code>core</code> The division assignment operator <code>/=</code>.0Cc\xf0\x9f\xa5\xa1 A type that can be encoded into an I/O writer.0fU+00030AnJavaScript exception occurred.0DfExtension trait providing additional methods for <code>Future</code>s.0Ci\xf0\x9f\x8c\x90 Extension trait providing additional methods for \xe2\x80\xa60Ck\xe2\x9a\x96\xef\xb8\x8f Extension trait providing additional methods for \xe2\x80\xa600000Ci\xf0\x9d\x90\x93 Extension trait providing additional methods for \xe2\x80\xa6022Ch$ 1/\xcf\x80 = 2/\xcf\x84 $ (A049541) <code>\xe2\x89\x88 0.31830988\xe2\x80\xa6</code>00000Ca$ 2/\xcf\x80 $ (A060294) <code>\xe2\x89\x88 0.63661977\xe2\x80\xa6</code>00000Dd$ \xcf\x80/2 = \xcf\x84/4 = 90\\degree $ (A019669) <code>\xe2\x89\x88 1.57079632\xe2\x80\xa6</code>00000Dd$ \xcf\x80/3 = \xcf\x84/6 = 60\\degree $ (A019670) <code>\xe2\x89\x88 1.04719755\xe2\x80\xa6</code>00000Dd$ \xcf\x80/4 = \xcf\x84/8 = 45\\degree $ (A003881) <code>\xe2\x89\x88 0.78539816\xe2\x80\xa6</code>00000De$ \xcf\x80/6 = \xcf\x84/12 = 30\\degree $ (A019673) <code>\xe2\x89\x88 0.52359877\xe2\x80\xa6</code>00000Dg$ \xcf\x80/8 = \xcf\x84/16 = 22.5\\degree $ (A019675) <code>\xe2\x89\x88 0.39269908\xe2\x80\xa6</code>00000Dd<code>std</code> Representation of the various timestamps on a file.0Cc\xe2\x9a\x96\xef\xb8\x8f \xf0\x9f\x96\xb9 The type returned by formatter methods.0Cd\xf0\x9f\x96\xb9 <code>core</code> Configuration for formatting.0AdGet seals from file.CjANSI gray background 10/23 8-bit color (44% white, 56% \xe2\x80\xa6CjANSI gray background 11/23 8-bit color (48% white, 52% \xe2\x80\xa6CjANSI gray background 12/23 8-bit color (52% white, 48% \xe2\x80\xa6CjANSI gray background 13/23 8-bit color (56% white, 44% \xe2\x80\xa6CjANSI gray background 14/23 8-bit color (60% white, 40% \xe2\x80\xa6CjANSI gray background 15/23 8-bit color (64% white, 36% \xe2\x80\xa6CjANSI gray background 16/23 8-bit color (68% white, 32% \xe2\x80\xa6CjANSI gray background 17/23 8-bit color (72% white, 28% \xe2\x80\xa6CjANSI gray background 18/23 8-bit color (76% white, 24% \xe2\x80\xa6CjANSI gray background 19/23 8-bit color (80% white, 20% \xe2\x80\xa6CjANSI gray background 20/23 8-bit color (84% white, 16% \xe2\x80\xa6CjANSI gray background 21/23 8-bit color (88% white, 12% \xe2\x80\xa6CiANSI gray background 22/23 8-bit color (92% white, 8% \xe2\x80\xa6CiANSI gray background 23/23 8-bit color (96% white, 4% \xe2\x80\xa6Cl\xf0\x9d\x9f\x99 \xe2\x9a\x96\xef\xb8\x8f A return type for the calculated GCD and the \xe2\x80\xa60Be\xf0\x9f\xa7\xaa Access to gyroscope sensor data.0CaA <code>HashMap</code> using a default Fx hasher.0CaA <code>HashSet</code> using a default Fx hasher.0CnA Fowler\xe2\x80\x93Noll\xe2\x80\x93Vo hasher, implemented for u32, u64, u128\xe2\x80\xa60kHigh color.0Dm<code>?std</code> A type of <code>Read</code>er which has an internal buffer.0Di\xf0\x9f\x94\x84 <code>core</code> An iterator that links two iterators together, \xe2\x80\xa60Ee\xf0\x9d\x90\x93\xf0\x9f\x94\x84 <code>core</code> An iterator over the <code>char</code>s of a string slice.0Cj\xf0\x9f\x94\x84 <code>core</code> An iterator that repeats endlessly.0Cg\xf0\x9f\x94\x84 <code>core</code> An iterator that yields nothing.0Ee\xf0\x9f\x94\x84 <code>itertools</code> An <code>Iterator</code> blanket impl providing extra \xe2\x80\xa60Ah\xf0\x9f\x8c\x90 Javascript Console.0CgA high-resolution timestamp based on JavaScript\xe2\x80\x99s \xe2\x80\xa60BaA handle to a JavaScript timeout.0AcLarge file support.DjLinux <code>sys/syscall.h</code> constants for the current compilation \xe2\x80\xa60CkAn IPv4 address with the address pointing to localhost: \xe2\x80\xa6CiAn IPv6 address representing localhost: <code>::1</code>.DiLeft <strong>Hyper</strong> key (historically used in some Unix systems).0B`Left <strong>Shift</strong> key.0DkLeft <strong>Super</strong> key (Windows key on Windows, Command \xe2\x8c\x98 on \xe2\x80\xa60AjPerceptual lightness (L*).0CiFile status structure matching libc\xe2\x80\x99s stat (man 2 stat)0AkConfiguration for a logger.0Cd<code>log</code> The \xe2\x80\x9cpayload\xe2\x80\x9d of a log message.0AcPhysical luminance.0CjThe maximum arity supported by the current compilation \xe2\x80\xa60CkThe maximum number of generic type parameters in this enum.1BjThe statically resolved maximum log level.AnMaximum possible memory pages.Bo<code>alloc</code> Layout of a block of memory.0BlFires when the mouse button is pressed down.0BkFires when the mouse moves over an element.0Di<code>core</code> The multiplication assignment operator <code>*=</code>.0AbCommand not found.DjThe smallest odd prime and the first nontrivial divisor (<code>3</code>\xe2\x80\xa60Be\xf0\x9d\x9f\x99 \xf0\x9f\x9a\xa9 An inverse doesn\xe2\x80\x99t exist.B`\xf0\x9f\x9a\xa9 An inverse doesn\xe2\x80\x99t exist.AkAn inverse doesn\xe2\x80\x99t exist.0210Al\xf0\x9f\xaa\xaa \xf0\x9f\x9a\xa9 The node is empty.0Dg\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f <code>core</code> A signed integer that is known not to \xe2\x80\xa60Dj\xf0\x9d\x9f\x99 \xe2\x9a\x97\xef\xb8\x8f <code>core</code> An unsigned integer that is known not to \xe2\x80\xa60Cd\xf0\x9d\x9f\x99 Common auto-trait for referenced integer types.0Be\xf0\x9d\x9f\x99 \xe2\x9a\x96\xef\xb8\x8f A numeric-related result.00Bd\xf0\x9f\x93\x90 A common trait for all vectors.0Ef<code>std</code> State yielded to <code>Once::call_once_force()</code>\xe2\x80\x99s closure \xe2\x80\xa60Da\xf0\x9f\x96\xb9 The type returned from <code>ExtOption::fmt_or_empty</code>.0ClDefines the relationship between a borrowed type and its \xe2\x80\xa60Fe<code>core</code> Passed to <code>#[panic_handler]</code> in <code>no_std</code>, always carrying \xe2\x80\xa60CkA reference to the parent directory, i.e., <code>..</code>.0Dd<code>core</code> Trait for comparisons using the equality operator.Eh<code>core</code> Derive macro generating an impl of the trait <code>PartialEq</code>\xe2\x80\xa610BjToggles between playing and pausing media.0BcFires when the pointer is released.0Ee\xf0\x9f\x93\x8f <code>core</code> A range only bounded inclusively below (<code>start..</code>).0Cl\xf0\x9f\x93\x8f <code>core</code> An unbounded range (<code>..</code>).0Dd<code>core</code> The remainder assignment operator <code>%=</code>.0CfRGB color with 32-bit float components (linear space).0CfRGB color with 64-bit float components (linear space).0CjRGB+A color with 16-bit integer components (sRGB gamma \xe2\x80\xa60DnRight <strong>Meta</strong> key (used in some Unix-based systems, overlaps \xe2\x80\xa60CkThe primary separator string of path components for the \xe2\x80\xa600BdStack fault on coprocessor (unused).BdSynonymous with <code>SIGSYS</code>.AmVirtual alarm clock (4.2BSD).fU+003B0ClMethod for selecting a representative color from a color \xe2\x80\xa60Cb\xf0\x9f\x94\x84 An iterator over <code>Stack</code> elements.0De<code>std</code> A locked reference to the <code>Stdin</code> handle.0Cj\xf0\x9d\x90\x93 A UTF-8\xe2\x80\x93encoded string, backed by an array with \xe2\x80\xa6000Df<code>core</code> The subtraction assignment operator <code>-=</code>.0Cd\xe2\x80\x9cSubnormal\xe2\x80\x9d or \xe2\x80\x9cdenormal\xe2\x80\x9d floating point \xe2\x80\xa60Ce(since Linux 3.8) If the terminal is currently in \xe2\x80\xa6ClGet the process group ID of the foreground process group \xe2\x80\xa6AfLinux-specific ioctls.AiDCD (data carrier detect)AcCTS (clear to send)AdDSR (data set ready)AiDTR (data terminal ready)jRNG (ring)AeRTS (request to send)BbGive up this controlling terminal.CkMake the given terminal the controlling terminal of the \xe2\x80\xa6CeSet the foreground process group ID of this terminal.BaFile type mask (S_IFMT in POSIX).Dd<code>core</code> A handle for waking up a task by notifying its \xe2\x80\xa60Db<code>std</code> A TCP stream between a local and a remote socket.0Be\xf0\x9f\x9a\xa9+ A text-related composite error.000Dh\xf0\x9f\x95\x98 A signed duration of time, stored as an <code>(i64, i32)</code> \xe2\x80\xa60Bj\xf0\x9f\x9a\xa9+ \xf0\x9f\x95\x98 A time-related composite error.0Ca\xf0\x9f\x95\x98 A full time split from years to nanoseconds.0Clcgen \xf0\x9f\x94\x84 An iterator over elements of a <code>Tuple</code>.0AmCode to set underline effect.ClUser has execute permission (<code>S_IXUSR</code> in POSIX).CiUser has read permission (<code>S_IRUSR</code> in POSIX).An<code>std</code> A UDP socket.0BaCommon trait for all UI services.0CmAn infinite endpoint. Indicates that there is no bound in \xe2\x80\xa60B`Explicit <code>undefined</code>.CnAn undefined direction can occur when a full-turn angle is \xe2\x80\xa610CaA raw binary data buffer backed by a byte vector.0Dj\xf0\x9f\x93\x90 A dynamic sequence of <code>D</code>-dimensional <code>Point</code>s.0Cn\xf0\x9f\x93\x90 A dynamic vector, backed by a primitive <code>Vec</code>.0Cj\xf0\x9f\xa7\xba A WebAssembly global memory allocator that uses a \xe2\x80\xa60CfHandle to the browser\xe2\x80\x99s global Window and Screen \xe2\x80\xa60BdA handle to a JavaScript Web Worker.0iEtymology0CnAn error returned when an operation could not be completed \xe2\x80\xa600Be\xf0\x9f\x8e\xb2 The <code>XorShift8</code> PRNG.0BkCode to set the background color to yellow.AlLanewise <code>a + b</code>.ChLanewise <code>a + b</code> with <code>f64</code> lanes.BmHorizontal space to advance after each glyph.0BnVertical space to advance after each new line.0BiCheck whether all elements compare equal.00C`Returns a reference to the underlying allocator.0000000CdDetermines if the <code>#</code> flag was specified.CnProduces an iterator over <code>Path</code> and its ancestors.AiGets the cache directory.0AiGets the state directory.0EeSets the element at the specified <code>index</code> to the given <code>value</code>.0CiReturns the logger as a <code>Logger</code> trait object.0CjReturns the total duration in units of whole microseconds.ClReturns the total number of whole microseconds contained \xe2\x80\xa6CjReturns the total duration in units of whole milliseconds.ClReturns the total number of whole milliseconds contained \xe2\x80\xa6DiReturns a reference to the inner value in variant<code>_10</code>, if \xe2\x80\xa6DiReturns a reference to the inner value in variant<code>_11</code>, if \xe2\x80\xa6CnReturns the eight-bit integers this address consists of as \xe2\x80\xa6CiReturns the four eight-bit integers that make up this \xe2\x80\xa6CkReturns the sixteen eight-bit integers the IPv6 address \xe2\x80\xa6BhConverts to an <code>OsStr</code> slice.BoYields the underlying <code>OsStr</code> slice.CiReturns the raw <code>OsStr</code> slice for this prefix.CaExtracts the underlying <code>OsStr</code> slice.DjReturns a reference to the inner value in variant <code>_10</code>, if \xe2\x80\xa6DjReturns a reference to the inner value in variant <code>_11</code>, if \xe2\x80\xa6ChReturns the destaque as pair of shared slices, which \xe2\x80\xa6CiReturns a pair of slices which contain, in order, the \xe2\x80\xa6Dg<code>core</code> Asserts that two expressions are equal to each other.0Dh<code>core</code> Asserts that two expressions are not equal to each \xe2\x80\xa60CbClears the bit at the specified bit-position to 1.000000000000Dj<code>core</code> Hints the compiler to be maximally pessimistic about \xe2\x80\xa60CjReturns the number of blocks allocated to the file, in \xe2\x80\xa6DgGets the value of the <code>SO_BROADCAST</code> option for this socket.BcReturns an Apple bundle identifier.BgReturns the size of this type in bytes.00CiReturns the internal measure, the product of the extents.00000000000AlPerforms the call operation.CnPerforms an initialization routine once and only once. The \xe2\x80\xa61CnReturns the capacity per item in the major dimension based \xe2\x80\xa60CnReturns the capacity per item in the minor dimension based \xe2\x80\xa60ClCasts from a maybe-uninitialized type to its initialized \xe2\x80\xa6CgRound each lane to a whole number, towards positive \xe2\x80\xa6CgRound <code>f32</code> lanes towards positive infinity.CkChain a function which takes the parameter by exclusive \xe2\x80\xa600ChChain a function which takes the parameter by shared \xe2\x80\xa600C`The clamped value, propagating <code>NaN</code>.0FeReturns itself clamped between <code>min</code> and <code>max</code>, propagating <code>NaN</code>\xe2\x80\xa60AiAdds two vectors together0AoSubtracts two vectors together.0Dc<code>core</code> Expands to the file name at which it was invoked.0De<code>core</code> Expands to the line number at which it was invoked.0AfGet the red component.CgSince the color has no red, the luminosity is returned.0000000000000001FjCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>self</code>. The \xe2\x80\xa6CgReturns a copy of the state jumped ahead by 2^64 steps.DhCollect the items in this iterator and return a <code>HashMap</code> \xe2\x80\xa600ClAccumulates the <code>u16</code> into a running CRC32 value.ClAccumulates the <code>u32</code> into a running CRC32 value.ClAccumulates the <code>u64</code> into a running CRC32 value.Bc<code>crossterm</code> UI backends.DjCreates a new <code>AnsiColor8b</code> from a 216-color 6x6x6 RGB cube \xe2\x80\xa6BdReturns the data type of this value.0DcCreates a <code>DebugMap</code> builder designed to assist with \xe2\x80\xa6DcCreates a <code>DebugSet</code> builder designed to assist with \xe2\x80\xa6AoMutably dereferences the value.fPanicsBlAllows exclusive access to the locked value.12CeReturns an iterator in descending order of magnitude.000AlReturns the angle direction.0000000000000CnSets the <code>dither</code> field to <code>Dither::FS</code>.CnReturns the quotient, rounding the result towards negative \xe2\x80\xa600000000000AlLanewise <code>a / b</code>.CbLanewise <code>a / b</code> with <code>f64</code>.CkCreates a new <code>Weak</code> pointer to this allocation.0DbDowngrades a write-locked <code>RwLockWriteGuard</code> into a \xe2\x80\xa6ChThe dpi scaling factor (window pixels to framebuffer \xe2\x80\xa6mDraws a line.CfDraws grayscale text into a one-byte-per-pixel buffer.C`Draws RGBA text into a 4-bytes-per-pixel buffer.AgDrops the back element.CbDuplicates the back pair of elements, at the back.BjDuplicates the front element at the front.DbHeight from the baseline to the top of the <code>em</code> square.0BoCreate a new empty string with a default bufferA`End index bound.0DgDetermines whether <code>child</code> is a suffix of <code>self</code>.CnGets the given key\xe2\x80\x99s corresponding entry by reference in \xe2\x80\xa6CiCreates an iterator which gives the current iteration \xe2\x80\xa600CgClears all explicitly set environment variables and \xe2\x80\xa6BkThe length of the error in bytes, if known.00000DfEvaluates a polynomial at the <code>self</code> point value, using \xe2\x80\xa6000AeDoes this path exist?CgExtracts the extension (without the leading dot) of \xe2\x80\xa6nThe factorial.0AfReturns the factorial.00000000000CbThe factorial of the integer value <code>x</code>.0CnComputes the absolute value of the current value, and sets \xe2\x80\xa60CgAdd to the current value, returning the previous value.00000000000ChAdds to the current value, returning the previous value.0000000000000CnBitwise and with the current value, returning the previous \xe2\x80\xa60BgLogical \xe2\x80\x9cand\xe2\x80\x9d with a boolean value.11111111110ClPerforms a bitwise \xe2\x80\x9cand\xe2\x80\x9d operation on the address of \xe2\x80\xa6BiBitwise \xe2\x80\x9cand\xe2\x80\x9d with the current value.00000000000AoMaximum with the current value.0000000000000000000000000AoMinimum with the current value.0000000000000000000000000ClNegates the current value, and sets the new value to the \xe2\x80\xa60000000000000BgLogical \xe2\x80\x9cnot\xe2\x80\x9d with a boolean value.CmLogical negates the current value, and sets the new value \xe2\x80\xa600000000000CkSubtract from the current value, returning the previous \xe2\x80\xa600000000000ClSubtracts from the current value, returning the previous \xe2\x80\xa60000000000000CnBitwise xor with the current value, returning the previous \xe2\x80\xa60BgLogical \xe2\x80\x9cxor\xe2\x80\x9d with a boolean value.11111111110ClPerforms a bitwise \xe2\x80\x9cxor\xe2\x80\x9d operation on the address of \xe2\x80\xa6BiBitwise \xe2\x80\x9cxor\xe2\x80\x9d with the current value.00000000000CmReturns the file name of this directory entry without any \xe2\x80\xa6DfReturns the final component of the <code>Path</code>, if there is one.CjReturns the value of the nFileSize{High,Low} fields of \xe2\x80\xa6DkExtracts the stem (non-extension) portion of <code>self.file_name</code>\xe2\x80\xa6CmReturns the file type for the file that this entry points \xe2\x80\xa6BhReturns the file type for this metadata.BbReturns the <code>FileType</code>.DkFills all <code>None</code> elements of the array with the given cloned \xe2\x80\xa6Bd(fillRect) Draws a filled rectangle.Cg(fillText) Draws filled text at the specified position.DiReturn an iterator adaptor that filters every <code>Result::Ok</code> \xe2\x80\xa600E`A copy of <code>self</code> flipping the bits that are set in <code>mask</code>.00BdFlips the sign of <code>self</code>.0oFlips its sign.0ChReduces a hash to <code>n</code> bits using xor folding.000CmProduces layout describing a record that could be used to \xe2\x80\xa6CjForces the evaluation of this lazy value and returns a \xe2\x80\xa60DcSets the <code>format</code> field to <code>PixelFormat::G1</code>.DcSets the <code>format</code> field to <code>PixelFormat::G2</code>.DcSets the <code>format</code> field to <code>PixelFormat::G4</code>.DcSets the <code>format</code> field to <code>PixelFormat::G8</code>.DfConverts from the bit patterns of these floats (<code>[u32;4]</code>).DgConverts from the bit patterns of these doubles (<code>[u64;2]</code>).DfConverts from the bit patterns of these floats (<code>[u32;8]</code>).DgConverts from the bit patterns of these doubles (<code>[u64;4]</code>).DaConstructs a <code>KeyMods</code> from a bitfield representation.DcConverts a native byte order <code>u32</code> into an IPv4 address.DdConverts a native byte order <code>u128</code> into an IPv6 address.D`Creates a new <code>StringNonul</code> from a <code>char</code>.CmCreates a new <code>StringU8</code> from a <code>char</code>.CnCreates a new <code>StringU16</code> from a <code>char</code>.CnCreates a new <code>StringU32</code> from a <code>char</code>.D`Creates a new <code>StringUsize</code> from a <code>char</code>.DbCreates a new <code>GraphemeNonul</code> from a <code>char</code>.CoCreates a new <code>GraphemeU8</code> from a <code>char</code>.DfCreates a new <code>Duration</code> from the specified number of days.DcCreates a new <code>XoroShift128p</code> generator, seeded from \xe2\x80\xa6ClCreates a new Xoroshiro128++ PRNG, seeded from addresses \xe2\x80\xa6BaCreates a value from an iterator.DkTakes each element in the <code>Iterator</code> and collects it into an \xe2\x80\xa6E`Constructs a <code>BTreeMap&lt;K, V&gt;</code> from an iterator of key-value \xe2\x80\xa61E`Creates a new <code>PathBuf</code> from the <code>Path</code> elements of an \xe2\x80\xa6DfCreates a new <code>CodecFlags</code> from a slice of arbitrary types.BaCreates a chunk from an iterator.EcTakes each element in the <code>Iterator</code>: if it is <code>None</code>, no \xe2\x80\xa6EeTakes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no \xe2\x80\xa67DaConverts <code>SignedDuration</code> into <code>TimeDelta</code>.DjCreates a new <code>TimeDelta</code> from the given number of minutes. \xe2\x80\xa6DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6CoConstructs a <code>WebEventKind</code> from its representation.ClConstructs a keyboard location from the numeric value of \xe2\x80\xa6BgCreate from <code>Rgb&lt;u8&gt;</code>.0DgCreates a new <code>TimeDelta</code> from the given number of whole \xe2\x80\xa6DjCreates a new <code>Duration</code> from the specified number of whole \xe2\x80\xa6CnWhen seeded with zero this implementation uses the default \xe2\x80\xa60000000BlConverts a slice of bytes to a string slice.CdConverts a vector of bytes to a <code>String</code>.CdReturns an exclusive reference to the front element.DkProvides a mutable reference to the front element, or <code>None</code> \xe2\x80\xa60Ch\xf0\x9f\x93\x90 A convenient 2D GLSL vertex representation with \xe2\x80\xa60Ch\xf0\x9f\x93\x90 A convenient 3D GLSL vertex representation with \xe2\x80\xa60CkCalculates the 1D array index from the given 2D coordinates0DmGets the bits in <code>self</code> from the <code>[start..=end]</code> range.00000000000D`Gets a copy of <code>self</code> with only the bits from the \xe2\x80\xa600CgGets the current termios state into <code>state</code>.DoCreates a grayscale color by wrapping <code>value</code> via <code>% 24</code>.Bj(groupEnd) Exits the current inline group.BjCreates a new hard link on the filesystem.CfChecks if there is input available to read from stdin.EcIndicates whether the 3 fields from <code>ms</code> to <code>ns</code> are enabled.BmChecks if the <em>Shift</em> modifier is set.DjReturns the starting address of the WASM heap (<code>__heap_base</code>\xe2\x80\xa6AmThe name of the current host.0Bd<code>icy_sixel</code> modificationsD`Construct a stack-based DST using the given <code>buffer</code>.DhPerforms the mutable indexing (<code>container[index]</code>) operation.0CgInitializes the next uninitialized element with the \xe2\x80\xa6BcSorts a slice using insertion sort.DeReturns a scaled value in <code>[min..=max]</code> to a new range \xe2\x80\xa600DhApproximates the integral of the 1D function <code>f</code> over the \xe2\x80\xa6000BoReturns an iterator over elements of the tuple.BaCreates an iterator from a value.DeCreates an iterator over the entries of a <code>HashMap</code> in \xe2\x80\xa6CnCreates a consuming iterator, that is, one that moves each \xe2\x80\xa6100ChGets an owning iterator over the entries of the map, \xe2\x80\xa6DjGets an iterator for moving out the <code>BTreeSet</code>\xe2\x80\x99s contents \xe2\x80\xa6CkConsumes the list into an iterator yielding elements by \xe2\x80\xa6")