(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-_Mix_Music\" class=\"impl\"><a href=\"#impl-Clone-for-_Mix_Music\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> for <a class=\"struct\" href=\"devela/_dep/sdl2/sys/mixer/struct._Mix_Music.html\" title=\"struct devela::_dep::sdl2::sys::mixer::_Mix_Music\">_Mix_Music</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"devela/_dep/sdl2/sys/mixer/struct._Mix_Music.html\" title=\"struct devela::_dep::sdl2::sys::mixer::_Mix_Music\">_Mix_Music</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"devela/code/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"devela/code/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","devela::_dep::sdl2::sys::mixer::Mix_Music"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-_Mix_Music\" class=\"impl\"><a href=\"#impl-Debug-for-_Mix_Music\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"struct\" href=\"devela/_dep/sdl2/sys/mixer/struct._Mix_Music.html\" title=\"struct devela::_dep::sdl2::sys::mixer::_Mix_Music\">_Mix_Music</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"devela/all/struct.FmtError.html\" title=\"struct devela::all::FmtError\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::_dep::sdl2::sys::mixer::Mix_Music"],["<section id=\"impl-Copy-for-_Mix_Music\" class=\"impl\"><a href=\"#impl-Copy-for-_Mix_Music\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a> for <a class=\"struct\" href=\"devela/_dep/sdl2/sys/mixer/struct._Mix_Music.html\" title=\"struct devela::_dep::sdl2::sys::mixer::_Mix_Music\">_Mix_Music</a></h3></section>","Copy","devela::_dep::sdl2::sys::mixer::Mix_Music"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3983]}