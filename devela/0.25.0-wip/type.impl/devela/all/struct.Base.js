(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Base%3C16,+false,+PAD,+CASE,+Rfc4648%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#127-129\">Source</a><a href=\"#impl-Base%3C16,+false,+PAD,+CASE,+Rfc4648%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;16, false, PAD, CASE, <a class=\"struct\" href=\"devela/all/struct.Rfc4648.html\" title=\"struct devela::all::Rfc4648\">Rfc4648</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#129\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for encoding <code>input_len</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len_padded\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#129\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encoded_len_padded\" class=\"fn\">encoded_len_padded</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for encoding <code>input_len</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#129\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decoded_len\" class=\"fn\">decoded_len</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for decoding <code>input_len</code> Base32 characters.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decoded_len_stripped\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#129\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decoded_len_stripped\" class=\"fn\">decoded_len_stripped</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for decoding <code>input_len</code> Base32 characters.</p>\n<p>Strips the padding. Otherwise <code>decoded_len</code> will calculate for the worst case.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#129\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decode_from_slice\" class=\"fn\">decode_from_slice</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;usize&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Decodes <code>input</code> into <code>output</code>, returning the number of bytes written.\nUses a LUT when <code>DEC_TABLE = true</code>, otherwise falls back to linear search.</p>\n<p>Returns <code>None</code> if it finds an invalid byte.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>output</code> is too small.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#129\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encode_to_slice\" class=\"fn\">encode_to_slice</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Encodes <code>input</code> into <code>output</code>, returning the number of bytes written.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if <code>output</code> is too small.</p>\n</div></details></div></details>",0,"devela::data::codec::radix::base::Base16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Base%3C16,+false,+PAD,+CASE,+Rfc4648%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#142-143\">Source</a><a href=\"#impl-Base%3C16,+false,+PAD,+CASE,+Rfc4648%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;16, false, PAD, CASE, <a class=\"struct\" href=\"devela/all/struct.Rfc4648.html\" title=\"struct devela::all::Rfc4648\">Rfc4648</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#143\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Base.html#tymethod.decode\" class=\"fn\">decode</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Vec.html\" title=\"struct devela::all::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Vec&lt;u8&gt;&gt;\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Decodes <code>input</code> into a <code>Vec&lt;u8&gt;</code>,\nreturns <code>None</code> if invalid characters are found.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#143\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Base.html#tymethod.encode\" class=\"fn\">encode</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"devela/all/struct.String.html\" title=\"struct devela::all::String\">String</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"String\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Encodes <code>input</code> into a <code>String</code>.</p>\n</div></details></div></details>",0,"devela::data::codec::radix::base::Base16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Base%3C32,+true,+PAD,+CASE,+Crockford%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#175-178\">Source</a><a href=\"#impl-Base%3C32,+true,+PAD,+CASE,+Crockford%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;32, true, PAD, CASE, <a class=\"struct\" href=\"devela/all/struct.Crockford.html\" title=\"struct devela::all::Crockford\">Crockford</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#178\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for encoding <code>input_len</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len_padded\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#178\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encoded_len_padded\" class=\"fn\">encoded_len_padded</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for encoding <code>input_len</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#178\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decoded_len\" class=\"fn\">decoded_len</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for decoding <code>input_len</code> Base32 characters.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decoded_len_stripped\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#178\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decoded_len_stripped\" class=\"fn\">decoded_len_stripped</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for decoding <code>input_len</code> Base32 characters.</p>\n<p>Strips the padding. Otherwise <code>decoded_len</code> will calculate for the worst case.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#178\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decode_from_slice\" class=\"fn\">decode_from_slice</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;usize&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Decodes <code>input</code> into <code>output</code>, returning the number of bytes written.\nUses a LUT when <code>DEC_TABLE = true</code>, otherwise falls back to linear search.</p>\n<p>Returns <code>None</code> if it finds an invalid byte.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>output</code> is too small.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#178\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encode_to_slice\" class=\"fn\">encode_to_slice</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Encodes <code>input</code> into <code>output</code>, returning the number of bytes written.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if <code>output</code> is too small.</p>\n</div></details></div></details>",0,"devela::data::codec::radix::base::Base32Crockford"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Base%3C32,+true,+PAD,+CASE,+Rfc4648%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#156-159\">Source</a><a href=\"#impl-Base%3C32,+true,+PAD,+CASE,+Rfc4648%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;32, true, PAD, CASE, <a class=\"struct\" href=\"devela/all/struct.Rfc4648.html\" title=\"struct devela::all::Rfc4648\">Rfc4648</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#159\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for encoding <code>input_len</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len_padded\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#159\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encoded_len_padded\" class=\"fn\">encoded_len_padded</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for encoding <code>input_len</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#159\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decoded_len\" class=\"fn\">decoded_len</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for decoding <code>input_len</code> Base32 characters.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decoded_len_stripped\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#159\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decoded_len_stripped\" class=\"fn\">decoded_len_stripped</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for decoding <code>input_len</code> Base32 characters.</p>\n<p>Strips the padding. Otherwise <code>decoded_len</code> will calculate for the worst case.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#159\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decode_from_slice\" class=\"fn\">decode_from_slice</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;usize&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Decodes <code>input</code> into <code>output</code>, returning the number of bytes written.\nUses a LUT when <code>DEC_TABLE = true</code>, otherwise falls back to linear search.</p>\n<p>Returns <code>None</code> if it finds an invalid byte.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>output</code> is too small.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#159\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encode_to_slice\" class=\"fn\">encode_to_slice</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Encodes <code>input</code> into <code>output</code>, returning the number of bytes written.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if <code>output</code> is too small.</p>\n</div></details></div></details>",0,"devela::data::codec::radix::base::Base32","devela::data::codec::radix::base::Base32Padded"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Base%3C32,+true,+PAD,+CASE,+Rfc4648%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#164-165\">Source</a><a href=\"#impl-Base%3C32,+true,+PAD,+CASE,+Rfc4648%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;32, true, PAD, CASE, <a class=\"struct\" href=\"devela/all/struct.Rfc4648.html\" title=\"struct devela::all::Rfc4648\">Rfc4648</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#165\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Base.html#tymethod.decode\" class=\"fn\">decode</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Vec.html\" title=\"struct devela::all::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Vec&lt;u8&gt;&gt;\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Decodes <code>input</code> into a <code>Vec&lt;u8&gt;</code>,\nreturns <code>None</code> if invalid characters are found.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#165\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Base.html#tymethod.encode\" class=\"fn\">encode</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"devela/all/struct.String.html\" title=\"struct devela::all::String\">String</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"String\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Encodes <code>input</code> into a <code>String</code>.</p>\n</div></details></div></details>",0,"devela::data::codec::radix::base::Base32","devela::data::codec::radix::base::Base32Padded"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Base%3C32,+true,+PAD,+CASE,+Rfc4648Hex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#186-189\">Source</a><a href=\"#impl-Base%3C32,+true,+PAD,+CASE,+Rfc4648Hex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;32, true, PAD, CASE, <a class=\"struct\" href=\"devela/all/struct.Rfc4648Hex.html\" title=\"struct devela::all::Rfc4648Hex\">Rfc4648Hex</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#189\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for encoding <code>input_len</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len_padded\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#189\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encoded_len_padded\" class=\"fn\">encoded_len_padded</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for encoding <code>input_len</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#189\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decoded_len\" class=\"fn\">decoded_len</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for decoding <code>input_len</code> Base32 characters.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decoded_len_stripped\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#189\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decoded_len_stripped\" class=\"fn\">decoded_len_stripped</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for decoding <code>input_len</code> Base32 characters.</p>\n<p>Strips the padding. Otherwise <code>decoded_len</code> will calculate for the worst case.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#189\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decode_from_slice\" class=\"fn\">decode_from_slice</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;usize&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Decodes <code>input</code> into <code>output</code>, returning the number of bytes written.\nUses a LUT when <code>DEC_TABLE = true</code>, otherwise falls back to linear search.</p>\n<p>Returns <code>None</code> if it finds an invalid byte.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>output</code> is too small.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#189\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encode_to_slice\" class=\"fn\">encode_to_slice</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Encodes <code>input</code> into <code>output</code>, returning the number of bytes written.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if <code>output</code> is too small.</p>\n</div></details></div></details>",0,"devela::data::codec::radix::base::Base32Hex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Base%3C64,+true,+PAD,+CASE,+Rfc4648%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#211-214\">Source</a><a href=\"#impl-Base%3C64,+true,+PAD,+CASE,+Rfc4648%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;64, true, PAD, CASE, <a class=\"struct\" href=\"devela/all/struct.Rfc4648.html\" title=\"struct devela::all::Rfc4648\">Rfc4648</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#214\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for encoding <code>input_len</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len_padded\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#214\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encoded_len_padded\" class=\"fn\">encoded_len_padded</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for encoding <code>input_len</code> bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#214\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decoded_len\" class=\"fn\">decoded_len</a>(input_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for decoding <code>input_len</code> Base32 characters.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decoded_len_stripped\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#214\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decoded_len_stripped\" class=\"fn\">decoded_len_stripped</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the required output buffer size for decoding <code>input_len</code> Base32 characters.</p>\n<p>Strips the padding. Otherwise <code>decoded_len</code> will calculate for the worst case.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#214\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.decode_from_slice\" class=\"fn\">decode_from_slice</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;usize&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Decodes <code>input</code> into <code>output</code>, returning the number of bytes written.\nUses a LUT when <code>DEC_TABLE = true</code>, otherwise falls back to linear search.</p>\n<p>Returns <code>None</code> if it finds an invalid byte.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>output</code> is too small.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#214\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.encode_to_slice\" class=\"fn\">encode_to_slice</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Encodes <code>input</code> into <code>output</code>, returning the number of bytes written.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if <code>output</code> is too small.</p>\n</div></details></div></details>",0,"devela::data::codec::radix::base::Base64","devela::data::codec::radix::base::Base64Padded"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Base%3C64,+true,+PAD,+CASE,+Rfc4648%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#219-220\">Source</a><a href=\"#impl-Base%3C64,+true,+PAD,+CASE,+Rfc4648%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;64, true, PAD, CASE, <a class=\"struct\" href=\"devela/all/struct.Rfc4648.html\" title=\"struct devela::all::Rfc4648\">Rfc4648</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#220\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Base.html#tymethod.decode\" class=\"fn\">decode</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"struct\" href=\"devela/all/struct.Vec.html\" title=\"struct devela::all::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Vec&lt;u8&gt;&gt;\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Decodes <code>input</code> into a <code>Vec&lt;u8&gt;</code>,\nreturns <code>None</code> if invalid characters are found.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#220\">Source</a><h4 class=\"code-header\">pub fn <a href=\"devela/all/struct.Base.html#tymethod.encode\" class=\"fn\">encode</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"devela/all/struct.String.html\" title=\"struct devela::all::String\">String</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"String\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Encodes <code>input</code> into a <code>String</code>.</p>\n</div></details></div></details>",0,"devela::data::codec::radix::base::Base64","devela::data::codec::radix::base::Base64Padded"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#234-260\">Source</a><a href=\"#impl-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const RADIX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const LUT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, CODE&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, LUT, PAD, CASE, CODE&gt;</h3><div class=\"docblock\"><h4 id=\"misc-methods\"><a class=\"doc-anchor\" href=\"#misc-methods\">§</a>misc. methods</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#237-239\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a new <code>Base</code> with the chosen generics.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_radix\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#241-243\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.with_radix\" class=\"fn\">with_radix</a>&lt;const NEW_RADIX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;NEW_RADIX, LUT, PAD, CASE, CODE&gt;</h4></section></summary><div class=\"docblock\"><p>Change the radix while keeping everything else the same.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_lut\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#245-247\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.with_lut\" class=\"fn\">with_lut</a>&lt;const NEW_LUT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, NEW_LUT, PAD, CASE, CODE&gt;</h4></section></summary><div class=\"docblock\"><p>Toggle LUT usage while keeping everything else the same.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_pad\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#249-251\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.with_pad\" class=\"fn\">with_pad</a>&lt;const NEW_PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, LUT, NEW_PAD, CASE, CODE&gt;</h4></section></summary><div class=\"docblock\"><p>Toggle padding while keeping everything else the same.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_case\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#253-255\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.with_case\" class=\"fn\">with_case</a>&lt;const NEW_CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, LUT, PAD, NEW_CASE, CODE&gt;</h4></section></summary><div class=\"docblock\"><p>Change the case sensitivity while keeping everything else the same.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#257-259\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.Base.html#tymethod.with_encoding\" class=\"fn\">with_encoding</a>&lt;NewCode&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, LUT, PAD, CASE, NewCode&gt;</h4></section></summary><div class=\"docblock\"><p>Change the encoding scheme while keeping everything else the same.</p>\n</div></details></div></details>",0,"devela::data::codec::radix::base::Base16","devela::data::codec::radix::base::Base32","devela::data::codec::radix::base::Base32Padded","devela::data::codec::radix::base::Base32Crockford","devela::data::codec::radix::base::Base32Hex","devela::data::codec::radix::base::Base64","devela::data::codec::radix::base::Base64Padded"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#32\">Source</a><a href=\"#impl-Clone-for-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const RADIX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const LUT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, CODE: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> for <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, LUT, PAD, CASE, CODE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#32\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, LUT, PAD, CASE, CODE&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"devela/code/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"devela/code/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","devela::data::codec::radix::base::Base16","devela::data::codec::radix::base::Base32","devela::data::codec::radix::base::Base32Padded","devela::data::codec::radix::base::Base32Crockford","devela::data::codec::radix::base::Base32Hex","devela::data::codec::radix::base::Base64","devela::data::codec::radix::base::Base64Padded"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstDefault-for-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#265-270\">Source</a><a href=\"#impl-ConstDefault-for-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const RADIX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const LUT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, CODE&gt; <a class=\"trait\" href=\"devela/code/trait.ConstDefault.html\" title=\"trait devela::code::ConstDefault\">ConstDefault</a> for <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, LUT, PAD, CASE, CODE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#269\">Source</a><a href=\"#associatedconstant.DEFAULT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/code/trait.ConstDefault.html#associatedconstant.DEFAULT\" class=\"constant\">DEFAULT</a>: Self</h4></section></summary><div class='docblock'>Returns the compile-time “default value” for a type.</div></details></div></details>","ConstDefault","devela::data::codec::radix::base::Base16","devela::data::codec::radix::base::Base32","devela::data::codec::radix::base::Base32Padded","devela::data::codec::radix::base::Base32Crockford","devela::data::codec::radix::base::Base32Hex","devela::data::codec::radix::base::Base64","devela::data::codec::radix::base::Base64Padded"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#32\">Source</a><a href=\"#impl-Debug-for-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const RADIX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const LUT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, CODE: <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, LUT, PAD, CASE, CODE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#32\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::data::codec::radix::base::Base16","devela::data::codec::radix::base::Base32","devela::data::codec::radix::base::Base32Padded","devela::data::codec::radix::base::Base32Crockford","devela::data::codec::radix::base::Base32Hex","devela::data::codec::radix::base::Base64","devela::data::codec::radix::base::Base64Padded"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#272-277\">Source</a><a href=\"#impl-Default-for-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const RADIX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const LUT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, CODE&gt; <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a> for <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, LUT, PAD, CASE, CODE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#276\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"devela/code/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","devela::data::codec::radix::base::Base16","devela::data::codec::radix::base::Base32","devela::data::codec::radix::base::Base32Padded","devela::data::codec::radix::base::Base32Crockford","devela::data::codec::radix::base::Base32Hex","devela::data::codec::radix::base::Base64","devela::data::codec::radix::base::Base64Padded"],["<section id=\"impl-Copy-for-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/radix/base.rs.html#32\">Source</a><a href=\"#impl-Copy-for-Base%3CRADIX,+LUT,+PAD,+CASE,+CODE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const RADIX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const LUT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const PAD: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, const CASE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, CODE: <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a> for <a class=\"struct\" href=\"devela/all/struct.Base.html\" title=\"struct devela::all::Base\">Base</a>&lt;RADIX, LUT, PAD, CASE, CODE&gt;</h3></section>","Copy","devela::data::codec::radix::base::Base16","devela::data::codec::radix::base::Base32","devela::data::codec::radix::base::Base32Padded","devela::data::codec::radix::base::Base32Crockford","devela::data::codec::radix::base::Base32Hex","devela::data::codec::radix::base::Base64","devela::data::codec::radix::base::Base64Padded"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[57939]}