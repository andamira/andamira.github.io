(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Rgb%3CT,+LINEAR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#impl-Clone-for-Rgb%3CT,+LINEAR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>, const LINEAR: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> for <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"devela/code/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"devela/code/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","devela::media::color::rgb::definitions::Rgb8","devela::media::color::rgb::definitions::Rgb16","devela::media::color::rgb::definitions::RgbF64","devela::media::color::rgb::definitions::RgbLinF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Rgb%3CT,+LINEAR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#impl-Debug-for-Rgb%3CT,+LINEAR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>, const LINEAR: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"devela/_core/fmt/type.Result.html\" title=\"type devela::_core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::media::color::rgb::definitions::Rgb8","devela::media::color::rgb::definitions::Rgb16","devela::media::color::rgb::definitions::RgbF64","devela::media::color::rgb::definitions::RgbLinF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Rgb%3CT,+LINEAR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#impl-Default-for-Rgb%3CT,+LINEAR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a>, const LINEAR: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a> for <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"devela/code/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","devela::media::color::rgb::definitions::Rgb8","devela::media::color::rgb::definitions::Rgb16","devela::media::color::rgb::definitions::RgbF64","devela::media::color::rgb::definitions::RgbLinF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Rgb%3CT,+LINEAR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#impl-Hash-for-Rgb%3CT,+LINEAR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Hash.html\" title=\"trait devela::all::Hash\">Hash</a>, const LINEAR: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Hash.html\" title=\"trait devela::all::Hash\">Hash</a> for <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\"><code>Hasher</code></a>. <a href=\"devela/all/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\"><code>Hasher</code></a>. <a href=\"devela/all/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","devela::media::color::rgb::definitions::Rgb8","devela::media::color::rgb::definitions::Rgb16","devela::media::color::rgb::definitions::RgbF64","devela::media::color::rgb::definitions::RgbLinF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Rgb%3CT,+LINEAR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#impl-Ord-for-Rgb%3CT,+LINEAR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Ord.html\" title=\"trait devela::all::Ord\">Ord</a>, const LINEAR: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Ord.html\" title=\"trait devela::all::Ord\">Ord</a> for <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"devela/all/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"devela/all/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"devela/all/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"devela/all/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","devela::media::color::rgb::definitions::Rgb8","devela::media::color::rgb::definitions::Rgb16","devela::media::color::rgb::definitions::RgbF64","devela::media::color::rgb::definitions::RgbLinF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Rgb%3CT,+LINEAR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#impl-PartialEq-for-Rgb%3CT,+LINEAR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>, const LINEAR: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","devela::media::color::rgb::definitions::Rgb8","devela::media::color::rgb::definitions::Rgb16","devela::media::color::rgb::definitions::RgbF64","devela::media::color::rgb::definitions::RgbLinF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Rgb%3CT,+LINEAR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#impl-PartialOrd-for-Rgb%3CT,+LINEAR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a>, const LINEAR: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","devela::media::color::rgb::definitions::Rgb8","devela::media::color::rgb::definitions::Rgb16","devela::media::color::rgb::definitions::RgbF64","devela::media::color::rgb::definitions::RgbLinF64"],["<section id=\"impl-Copy-for-Rgb%3CT,+LINEAR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#impl-Copy-for-Rgb%3CT,+LINEAR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a>, const LINEAR: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a> for <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h3></section>","Copy","devela::media::color::rgb::definitions::Rgb8","devela::media::color::rgb::definitions::Rgb16","devela::media::color::rgb::definitions::RgbF64","devela::media::color::rgb::definitions::RgbLinF64"],["<section id=\"impl-Eq-for-Rgb%3CT,+LINEAR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#impl-Eq-for-Rgb%3CT,+LINEAR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"devela/all/trait.Eq.html\" title=\"trait devela::all::Eq\">Eq</a>, const LINEAR: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Eq.html\" title=\"trait devela::all::Eq\">Eq</a> for <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h3></section>","Eq","devela::media::color::rgb::definitions::Rgb8","devela::media::color::rgb::definitions::Rgb16","devela::media::color::rgb::definitions::RgbF64","devela::media::color::rgb::definitions::RgbLinF64"],["<section id=\"impl-StructuralPartialEq-for-Rgb%3CT,+LINEAR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/media/color/rgb/definitions.rs.html#9\">Source</a><a href=\"#impl-StructuralPartialEq-for-Rgb%3CT,+LINEAR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const LINEAR: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"devela/_core/marker/trait.StructuralPartialEq.html\" title=\"trait devela::_core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"devela/all/struct.Rgb.html\" title=\"struct devela::all::Rgb\">Rgb</a>&lt;T, LINEAR&gt;</h3></section>","StructuralPartialEq","devela::media::color::rgb::definitions::Rgb8","devela::media::color::rgb::definitions::Rgb16","devela::media::color::rgb::definitions::RgbF64","devela::media::color::rgb::definitions::RgbLinF64"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[24930]}