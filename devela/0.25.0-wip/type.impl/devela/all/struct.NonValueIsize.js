(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-Binary-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Binary.html\" title=\"trait devela::all::Binary\">Binary</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"devela/all/type.FmtResult.html\" title=\"type devela::all::FmtResult\">FmtResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Binary.html#tymethod.fmt\">Read more</a></div></details></div></details>","Binary","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitSized%3C%7B%24IP::BYTE_SIZE+*+8%7D%3E-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-BitSized%3C%7B%24IP::BYTE_SIZE+*+8%7D%3E-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.BitSized.html\" title=\"trait devela::all::BitSized\">BitSized</a>&lt;{$IP::BYTE_SIZE * 8}&gt; for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BIT_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#55-61\">Source</a><a href=\"#associatedconstant.BIT_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/all/trait.BitSized.html#associatedconstant.BIT_SIZE\" class=\"constant\">BIT_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The bit size of this type (only the relevant data part, without padding). <a href=\"devela/all/trait.BitSized.html#associatedconstant.BIT_SIZE\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_BYTE_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#70-76\">Source</a><a href=\"#associatedconstant.MIN_BYTE_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/all/trait.BitSized.html#associatedconstant.MIN_BYTE_SIZE\" class=\"constant\">MIN_BYTE_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The rounded up byte size for this type. <a href=\"devela/all/trait.BitSized.html#associatedconstant.MIN_BYTE_SIZE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#83-85\">Source</a><a href=\"#method.bit_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitSized.html#method.bit_size\" class=\"fn\">bit_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the bit size of this type (only the relevant data part, without padding). <a href=\"devela/all/trait.BitSized.html#method.bit_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_byte_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#95-97\">Source</a><a href=\"#method.min_byte_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitSized.html#method.min_byte_size\" class=\"fn\">min_byte_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the rounded up byte size for this type. <a href=\"devela/all/trait.BitSized.html#method.min_byte_size\">Read more</a></div></details></div></details>","BitSized<{$IP::BYTE_SIZE * 8}>","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedBitPattern-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-CheckedBitPattern-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/_dep/bytemuck/trait.CheckedBitPattern.html\" title=\"trait devela::_dep::bytemuck::CheckedBitPattern\">CheckedBitPattern</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bits\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#associatedtype.Bits\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/bytemuck/trait.CheckedBitPattern.html#associatedtype.Bits\" class=\"associatedtype\">Bits</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'><code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> except for\nthe possible invalid bit patterns being checked during\n<a href=\"devela/_dep/bytemuck/trait.CheckedBitPattern.html#tymethod.is_valid_bit_pattern\" title=\"associated function devela::_dep::bytemuck::CheckedBitPattern::is_valid_bit_pattern\"><code>is_valid_bit_pattern</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_bit_pattern\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.is_valid_bit_pattern\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/bytemuck/trait.CheckedBitPattern.html#tymethod.is_valid_bit_pattern\" class=\"fn\">is_valid_bit_pattern</a>(bits: &amp;Self::<a class=\"associatedtype\" href=\"devela/_dep/bytemuck/trait.CheckedBitPattern.html#associatedtype.Bits\" title=\"type devela::_dep::bytemuck::CheckedBitPattern::Bits\">Bits</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If this function returns true, then it must be valid to reinterpret <code>bits</code>\nas <code>&amp;Self</code>.</div></details></div></details>","CheckedBitPattern","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-Clone-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"devela/code/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"devela/code/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-Debug-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"devela/all/type.FmtResult.html\" title=\"type devela::all::FmtResult\">FmtResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-Display-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Display.html\" title=\"trait devela::all::Display\">Display</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"devela/all/type.FmtResult.html\" title=\"type devela::all::FmtResult\">FmtResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-FromStr-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.FromStr.html\" title=\"trait devela::all::FromStr\">FromStr</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"devela/all/struct.ParseIntError.html\" title=\"struct devela::all::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"devela/all/trait.FromStr.html#associatedtype.Err\" title=\"type devela::all::FromStr::Err\">Err</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;Self, Self::Err&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"devela/all/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-Hash-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Hash.html\" title=\"trait devela::all::Hash\">Hash</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\"><code>Hasher</code></a>. <a href=\"devela/all/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\"><code>Hasher</code></a>. <a href=\"devela/all/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-LowerHex-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.LowerHex.html\" title=\"trait devela::all::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"devela/all/type.FmtResult.html\" title=\"type devela::all::FmtResult\">FmtResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.NonValueIsize.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: Self</h4></section></summary><div class=\"docblock\"><p>Returns the maximum possible value.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.NonValueIsize.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: Self</h4></section></summary><div class=\"docblock\"><p>Returns the minimum possible value.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.VALID_VALUES\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.NonValueIsize.html#associatedconstant.VALID_VALUES\" class=\"constant\">VALID_VALUES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> = 9_223_372_036_854_775_807isize</h4></section></summary><div class=\"docblock\"><p>Returns the number of valid values.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.INVALID_VALUES\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const <a href=\"devela/all/struct.NonValueIsize.html#associatedconstant.INVALID_VALUES\" class=\"constant\">INVALID_VALUES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> = 1isize</h4></section></summary><div class=\"docblock\"><p>Returns the number of invalid values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.new\" class=\"fn\">new</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a <code>NonValueIsize</code> with the given <code>value</code>, if it is not equal to <code>V</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_lossy\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.new_lossy\" class=\"fn\">new_lossy</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a non-value integer, automatically converting the prohibited value <code>V</code>\nto the closest valid number (<code>V-1</code> for most cases, <code>V+1</code> for <code>MIN</code>).</p>\n<h5 id=\"guarantees\"><a class=\"doc-anchor\" href=\"#guarantees\">§</a>Guarantees</h5>\n<ul>\n<li>For unsigned <code>MAX</code>: <code>V-1</code> → stored as <code>!(V-1)</code></li>\n<li>For signed <code>MIN</code>: <code>V+1</code> → stored as <code>(V+1) ^ MIN</code></li>\n<li>All others: <code>V-1</code> → stored as <code>(V-1) ^ V</code></li>\n</ul>\n<h5 id=\"features\"><a class=\"doc-anchor\" href=\"#features\">§</a>Features</h5>\n<ul>\n<li>Can use the <code>unsafe_niche</code> feature internally.</li>\n</ul>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"macro\">assert_eq!</span>[NonValueU8::&lt;<span class=\"number\">255</span>&gt;::new_lossy(<span class=\"number\">255</span>).get(), <span class=\"number\">254</span>];\n<span class=\"kw\">let </span>y = <span class=\"macro\">assert_eq!</span>[NonValueI8::&lt;-<span class=\"number\">128</span>&gt;::new_lossy(-<span class=\"number\">128</span>).get(), -<span class=\"number\">127</span>];</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a <code>NonValueIsize</code> if the given <code>value</code> if it is not equal to <code>V</code>.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics in debug if the given <code>value</code> is equal to <code>V</code>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The given <code>value</code> must never be equal to <code>V</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.get\" class=\"fn\">get</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_max\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.is_max\" class=\"fn\">is_max</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if it is equal to the maximum value (<a href=\"devela/all/struct.NonValueIsize.html#associatedconstant.MAX\" title=\"associated constant devela::all::NonValueIsize::MAX\"><code>MAX</code></a>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_min\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.is_min\" class=\"fn\">is_min</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if it is equal to the minimum value (<a href=\"devela/all/struct.NonValueIsize.html#associatedconstant.MIN\" title=\"associated constant devela::all::NonValueIsize::MIN\"><code>MIN</code></a>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">NumResult</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer addition. Computes <code>self + rhs</code>.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>Returns <a href=\"devela/num/enum.NumError.html#variant.Overflow\" title=\"variant devela::num::NumError::Overflow\"><code>Overflow</code></a> if the operations overflows, or\n<a href=\"devela/num/enum.NumError.html#variant.Invalid\" title=\"variant devela::num::NumError::Invalid\"><code>Invalid</code></a> if the result equals the forbidden value <code>V</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"type\" href=\"devela/num/type.NumResult.html\" title=\"type devela::num::NumResult\">NumResult</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer substration. Computes <code>self - rhs</code>.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>Returns <a href=\"devela/num/enum.NumError.html#variant.Overflow\" title=\"variant devela::num::NumError::Overflow\"><code>Overflow</code></a> if the operations overflows, or\n<a href=\"devela/num/enum.NumError.html#variant.Invalid\" title=\"variant devela::num::NumError::Invalid\"><code>Invalid</code></a> if the result equals the forbidden value <code>V</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_add\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.strict_add\" class=\"fn\">strict_add</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Strict integer addition. Computes <code>self + rhs</code>.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics on overflow or if the result equals the forbidden value <code>V</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.strict_sub\" class=\"fn\">strict_sub</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Strict integer substration. Computes <code>self - rhs</code>.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>Panics on overflow or if the result equals the forbidden value <code>V</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Saturating integer addition. Computes <code>self + rhs</code>.</p>\n<p>Saturates at the numeric bounds instead of overflowing.\nIf the result would equal <code>V</code> it will return <code>V - 1</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Saturating integer substration. Computes <code>self - rhs</code>.</p>\n<p>Saturates at the numeric bounds instead of overflowing.\nIf the result would equal <code>V</code> it will return <code>V + 1</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Wraping integer addition. Computes <code>self + rhs</code>.</p>\n<p>Wraps at the numeric bounds instead of overflowing.\nIf the result would equal <code>V</code> it will return <code>V + 1</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"devela/all/struct.NonValueIsize.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Wraping integer subtraction. Computes <code>self - rhs</code>.</p>\n<p>Wraps at the numeric bounds instead of overflowing.\nIf the result would equal <code>V</code> it will return <code>V - 1</code>.</p>\n</div></details></div></details>",0,"devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-Octal-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Octal.html\" title=\"trait devela::all::Octal\">Octal</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"devela/all/type.FmtResult.html\" title=\"type devela::all::FmtResult\">FmtResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Octal.html#tymethod.fmt\">Read more</a></div></details></div></details>","Octal","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-Ord-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Ord.html\" title=\"trait devela::all::Ord\">Ord</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"devela/all/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"devela/all/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"devela/all/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"devela/all/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-PartialEq-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-PartialOrd-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cisize%3E-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-TryFrom%3Cisize%3E-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/code/trait.TryFrom.html\" title=\"trait devela::code::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" title=\"type devela::code::TryFrom::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;Self, Self::Error&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><h5 id=\"features\"><a class=\"doc-anchor\" href=\"#features\">§</a>Features</h5>\n<p>Makes use of the <code>unsafe_niche</code> feature if enabled.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"devela/all/struct.TryFromIntError.html\" title=\"struct devela::all::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<isize>","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-UpperHex-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.UpperHex.html\" title=\"trait devela::all::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"devela/all/type.FmtResult.html\" title=\"type devela::all::FmtResult\">FmtResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<section id=\"impl-Copy-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-Copy-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section>","Copy","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<section id=\"impl-Eq-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-Eq-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Eq.html\" title=\"trait devela::all::Eq\">Eq</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section>","Eq","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<section id=\"impl-NoUninit-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-NoUninit-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/_dep/bytemuck/trait.NoUninit.html\" title=\"trait devela::_dep::bytemuck::NoUninit\">NoUninit</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section>","NoUninit","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<section id=\"impl-PodInOption-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-PodInOption-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/_dep/bytemuck/trait.PodInOption.html\" title=\"trait devela::_dep::bytemuck::PodInOption\">PodInOption</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section>","PodInOption","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<section id=\"impl-StructuralPartialEq-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-StructuralPartialEq-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/_core/marker/trait.StructuralPartialEq.html\" title=\"trait devela::_core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section>","StructuralPartialEq","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"],["<section id=\"impl-ZeroableInOption-for-NonValueIsize%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/num/niche/mem/non_value.rs.html#29\">Source</a><a href=\"#impl-ZeroableInOption-for-NonValueIsize%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const V: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; <a class=\"trait\" href=\"devela/_dep/bytemuck/trait.ZeroableInOption.html\" title=\"trait devela::_dep::bytemuck::ZeroableInOption\">ZeroableInOption</a> for <a class=\"struct\" href=\"devela/all/struct.NonValueIsize.html\" title=\"struct devela::all::NonValueIsize\">NonValueIsize</a>&lt;V&gt;</h3></section>","ZeroableInOption","devela::num::niche::mem::non_value::__impls_NonValueIsize::NonExtremeIsize"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[59819]}