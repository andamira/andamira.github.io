(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AtomicPrimitive-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/sync/atomic.rs.html#295\">Source</a><a href=\"#impl-AtomicPrimitive-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/sync/atomic/trait.AtomicPrimitive.html\" title=\"trait core::sync::atomic::AtomicPrimitive\">AtomicPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AtomicInner\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/sync/atomic.rs.html#295\">Source</a><a href=\"#associatedtype.AtomicInner\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/sync/atomic/trait.AtomicPrimitive.html#associatedtype.AtomicInner\" class=\"associatedtype\">AtomicInner</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/sync/atomic/struct.AtomicBool.html\" title=\"struct core::sync::atomic::AtomicBool\">AtomicBool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>atomic_internals</code>)</span></div></span><div class='docblock'>Temporary implementation detail.</div></details></div></details>","AtomicPrimitive","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#189\">Source</a></span><a href=\"#impl-BitAnd%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitAnd.html\" title=\"trait devela::all::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#189\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"devela/all/trait.BitAnd.html\" title=\"trait devela::all::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.BitAnd.html#associatedtype.Output\" title=\"type devela::all::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#189\">Source</a><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"devela/all/trait.BitAnd.html\" title=\"trait devela::all::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.BitAnd.html#associatedtype.Output\" title=\"type devela::all::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"devela/all/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&bool>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/masks.rs.html#468-471\">Source</a><a href=\"#impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.BitAnd.html\" title=\"trait devela::all::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/masks.rs.html#473\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/masks.rs.html#475\">Source</a><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"devela/all/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Mask<T, N>>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#189\">Source</a></span><a href=\"#impl-BitAnd-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitAnd.html\" title=\"trait devela::all::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#189\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#189\">Source</a><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"devela/all/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0, const unstable\">1.22.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#762\">Source</a></span><a href=\"#impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitAndAssign.html\" title=\"trait devela::all::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#762\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"devela/all/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&bool>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0, const unstable\">1.8.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#762\">Source</a></span><a href=\"#impl-BitAndAssign-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitAndAssign.html\" title=\"trait devela::all::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#762\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"devela/all/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#294\">Source</a></span><a href=\"#impl-BitOr%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitOr.html\" title=\"trait devela::all::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#294\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"devela/all/trait.BitOr.html\" title=\"trait devela::all::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.BitOr.html#associatedtype.Output\" title=\"type devela::all::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#294\">Source</a><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"devela/all/trait.BitOr.html\" title=\"trait devela::all::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.BitOr.html#associatedtype.Output\" title=\"type devela::all::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"devela/all/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&bool>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/masks.rs.html#504-507\">Source</a><a href=\"#impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.BitOr.html\" title=\"trait devela::all::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/masks.rs.html#509\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/masks.rs.html#511\">Source</a><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"devela/all/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Mask<T, N>>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#294\">Source</a></span><a href=\"#impl-BitOr-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitOr.html\" title=\"trait devela::all::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#294\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#294\">Source</a><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"devela/all/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0, const unstable\">1.22.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#838\">Source</a></span><a href=\"#impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitOrAssign.html\" title=\"trait devela::all::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#838\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"devela/all/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&bool>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0, const unstable\">1.8.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#838\">Source</a></span><a href=\"#impl-BitOrAssign-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitOrAssign.html\" title=\"trait devela::all::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#838\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"devela/all/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitSized%3C1%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#176\">Source</a><a href=\"#impl-BitSized%3C1%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitSized.html\" title=\"trait devela::all::BitSized\">BitSized</a>&lt;1&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BIT_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#53-59\">Source</a><a href=\"#associatedconstant.BIT_SIZE\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a href=\"devela/all/trait.BitSized.html#associatedconstant.BIT_SIZE\" class=\"constant\">BIT_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The bit size of this type (only the relevant data part, without padding). <a href=\"devela/all/trait.BitSized.html#associatedconstant.BIT_SIZE\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_BYTE_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#68-74\">Source</a><a href=\"#associatedconstant.MIN_BYTE_SIZE\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a href=\"devela/all/trait.BitSized.html#associatedconstant.MIN_BYTE_SIZE\" class=\"constant\">MIN_BYTE_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The rounded up byte size for this type. <a href=\"devela/all/trait.BitSized.html#associatedconstant.MIN_BYTE_SIZE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#81-83\">Source</a><a href=\"#method.bit_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitSized.html#method.bit_size\" class=\"fn\">bit_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">โ</a></h4></section></summary><div class='docblock'>Returns the bit size of this type (only the relevant data part, without padding). <a href=\"devela/all/trait.BitSized.html#method.bit_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_byte_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#93-95\">Source</a><a href=\"#method.min_byte_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitSized.html#method.min_byte_size\" class=\"fn\">min_byte_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"usize\">โ</a></h4></section></summary><div class='docblock'>Returns the rounded up byte size for this type. <a href=\"devela/all/trait.BitSized.html#method.min_byte_size\">Read more</a></div></details></div></details>","BitSized<1>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#399\">Source</a></span><a href=\"#impl-BitXor%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitXor.html\" title=\"trait devela::all::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#399\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"devela/all/trait.BitXor.html\" title=\"trait devela::all::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.BitXor.html#associatedtype.Output\" title=\"type devela::all::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#399\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"devela/all/trait.BitXor.html\" title=\"trait devela::all::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.BitXor.html#associatedtype.Output\" title=\"type devela::all::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"devela/all/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&bool>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/masks.rs.html#540-543\">Source</a><a href=\"#impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"devela/all/trait.BitXor.html\" title=\"trait devela::all::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/masks.rs.html#545\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/masks.rs.html#547\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"devela/all/trait.BitXor.html\" title=\"trait devela::all::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"devela/all/trait.BitXor.html#associatedtype.Output\" title=\"type devela::all::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"devela/all/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<Mask<T, N>>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#399\">Source</a></span><a href=\"#impl-BitXor-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitXor.html\" title=\"trait devela::all::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#399\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#399\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"devela/all/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0, const unstable\">1.22.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#914\">Source</a></span><a href=\"#impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitXorAssign.html\" title=\"trait devela::all::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#914\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"devela/all/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&bool>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0, const unstable\">1.8.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#914\">Source</a></span><a href=\"#impl-BitXorAssign-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitXorAssign.html\" title=\"trait devela::all::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#914\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"devela/all/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedBitPattern-for-bool\" class=\"impl\"><a href=\"#impl-CheckedBitPattern-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl CheckedBitPattern for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bits\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bits\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Bits</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'><code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> except for\nthe possible invalid bit patterns being checked during\n<a href=\"CheckedBitPattern::is_valid_bit_pattern\"><code>is_valid_bit_pattern</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_bit_pattern\" class=\"method trait-impl\"><a href=\"#method.is_valid_bit_pattern\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">is_valid_bit_pattern</a>(bits: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as CheckedBitPattern&gt;::Bits) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If this function returns true, then it must be valid to reinterpret <code>bits</code>\nas <code>&amp;Self</code>.</div></details></div></details>","CheckedBitPattern","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#589-594\">Source</a></span><a href=\"#impl-Clone-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#589-594\">Source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"devela/code/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"devela/code/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstDefault-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/code/default.rs.html#157\">Source</a><a href=\"#impl-ConstDefault-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/code/trait.ConstDefault.html\" title=\"trait devela::code::ConstDefault\">ConstDefault</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/code/default.rs.html#157\">Source</a><a href=\"#associatedconstant.DEFAULT\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a href=\"devela/code/trait.ConstDefault.html#associatedconstant.DEFAULT\" class=\"constant\">DEFAULT</a>: Self = false</h4></section></summary><div class='docblock'>Returns the compile-time โdefault valueโ for a type.</div></details></div></details>","ConstDefault","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-bool\" class=\"impl\"><a href=\"#impl-Contiguous-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Contiguous for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 1u8</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a href=\"#method.from_integer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">from_integer</a>(value: Self::Int) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Self&gt;\">โ</a></h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a href=\"#method.into_integer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">into_integer</a>(self) -&gt; Self::Int</h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a>Read more</a></div></details></div></details>","Contiguous","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2687\">Source</a></span><a href=\"#impl-Debug-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2689\">Source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"devela/all/struct.FmtError.html\" title=\"struct devela::all::FmtError\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), Error&gt;\">โ</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CR%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/encode/impls.rs.html#153-164\">Source</a><a href=\"#impl-Decodable%3CR%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;R: <a class=\"trait\" href=\"devela/all/trait.IoRead.html\" title=\"trait devela::all::IoRead\">IoRead</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Decodable.html\" title=\"trait devela::all::Decodable\">Decodable</a>&lt;R&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/encode/impls.rs.html#154\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Decodable.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The type produced when decoding.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/encode/impls.rs.html#155-163\">Source</a><a href=\"#method.decode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Decodable.html#tymethod.decode\" class=\"fn\">decode</a>(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"type\" href=\"devela/all/type.IoResult.html\" title=\"type devela::all::IoResult\">IoResult</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Decodable.html#associatedtype.Output\" title=\"type devela::all::Decodable::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Decodes <code>Self</code> from the given <code>reader</code>, returning the decoded value. <a href=\"devela/all/trait.Decodable.html#tymethod.decode\">Read more</a></div></details></div></details>","Decodable<R>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143894\" title=\"Tracking issue for const_default\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/default.rs.html#166\">Source</a></span><a href=\"#impl-Default-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/default.rs.html#166\">Source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>false</code></p>\n</div></details></div></details>","Default","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.221/src/serde_core/de/impls.rs.html#70\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.221/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.221/src/serde_core/de/impls.rs.html#71-73\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.221/serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.221/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.221/serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;bool, &lt;D as Deserializer&lt;&#39;de&gt;&gt;::Error&gt;\">โ</a><div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.221/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.221/serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DisjointBitOr-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/intrinsics/fallback.rs.html#146-150\">Source</a><a href=\"#impl-DisjointBitOr-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/intrinsics/fallback/trait.DisjointBitOr.html\" title=\"trait core::intrinsics::fallback::DisjointBitOr\">DisjointBitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.disjoint_bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/intrinsics/fallback.rs.html#146-150\">Source</a><a href=\"#method.disjoint_bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/intrinsics/fallback/trait.DisjointBitOr.html#tymethod.disjoint_bitor\" class=\"fn\">disjoint_bitor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>core_intrinsics_fallbacks</code>)</span></div></span><div class='docblock'>See <a href=\"https://doc.rust-lang.org/nightly/core/intrinsics/fn.disjoint_bitor.html\" title=\"fn core::intrinsics::disjoint_bitor\"><code>super::disjoint_bitor</code></a>; we just need the trait indirection to handle\ndifferent types since calling intrinsics with generics doesnโt work.</div></details></div></details>","DisjointBitOr","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2695\">Source</a></span><a href=\"#impl-Display-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Display.html\" title=\"trait devela::all::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2696\">Source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"devela/all/struct.FmtError.html\" title=\"struct devela::all::FmtError\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), Error&gt;\">โ</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CW%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/encode/impls.rs.html#148-152\">Source</a><a href=\"#impl-Encodable%3CW%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;W: <a class=\"trait\" href=\"devela/all/trait.IoWrite.html\" title=\"trait devela::all::IoWrite\">IoWrite</a>&gt; <a class=\"trait\" href=\"devela/all/trait.Encodable.html\" title=\"trait devela::all::Encodable\">Encodable</a>&lt;W&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/codec/encode/impls.rs.html#149-151\">Source</a><a href=\"#method.encode\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, writer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"type\" href=\"devela/all/type.IoResult.html\" title=\"type devela::all::IoResult\">IoResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Encodes <code>self</code> into the given <code>writer</code>, returning the bytes written. <a href=\"devela/all/trait.Encodable.html#tymethod.encode\">Read more</a></div></details></div></details>","Encodable<W>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#138\">Source</a><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/code/trait.From.html\" title=\"trait devela::code::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#153\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">ยง</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPyObject%3C'_%3E-for-bool\" class=\"impl\"><a href=\"#impl-FromPyObject%3C'_%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl FromPyObject&lt;'_&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3><div class=\"docblock\"><p>Converts a Python <code>bool</code> to a Rust <code>bool</code>.</p>\n</div></section></summary><div class=\"docblock\"><p>Fails with <code>TypeError</code> if the input is not a Python <code>bool</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_bound\" class=\"method trait-impl\"><a href=\"#method.extract_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">extract_bound</a>(obj: &amp;Bound&lt;'_, PyAny&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, PyErr&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;bool, PyErr&gt;\">โ</a></h4></section></summary><div class='docblock'>Extracts <code>Self</code> from the bound smart pointer <code>obj</code>. <a>Read more</a></div></details></div></details>","FromPyObject<'_>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/str/traits.rs.html#859\">Source</a></span><a href=\"#impl-FromStr-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.FromStr.html\" title=\"trait devela::all::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/traits.rs.html#885\">Source</a><a href=\"#method.from_str\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/str/error/struct.ParseBoolError.html\" title=\"struct core::str::error::ParseBoolError\">ParseBoolError</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;bool, ParseBoolError&gt;\">โ</a></h4></section></summary><div class=\"docblock\"><p>Parse a <code>bool</code> from a string.</p>\n<p>The only accepted values are <code>\"true\"</code> and <code>\"false\"</code>. Any other input\nwill return an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"true\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"false\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(&lt;bool <span class=\"kw\">as </span>FromStr&gt;::from_str(<span class=\"string\">\"not even a boolean\"</span>).is_err());</code></pre></div>\n<p>Note, in many cases, the <code>.parse()</code> method on <code>str</code> is more proper.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"true\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"false\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(<span class=\"string\">\"not even a boolean\"</span>.parse::&lt;bool&gt;().is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/traits.rs.html#860\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/str/error/struct.ParseBoolError.html\" title=\"struct core::str::error::ParseBoolError\">ParseBoolError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#845\">Source</a></span><a href=\"#impl-Hash-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Hash.html\" title=\"trait devela::all::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#847\">Source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\"><code>Hasher</code></a>. <a href=\"devela/all/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\"><code>Hasher</code></a>. <a href=\"devela/all/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.221/src/serde_core/de/value.rs.html#328\">Source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.221/serde_core/de/trait.IntoDeserializer.html\" title=\"trait serde_core::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.221/serde_core/de/trait.Error.html\" title=\"trait serde_core::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.221/src/serde_core/de/value.rs.html#328\">Source</a><a href=\"#associatedtype.Deserializer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde/1.0.221/serde_core/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"https://docs.rs/serde/1.0.221/serde_core/de/value/struct.BoolDeserializer.html\" title=\"struct serde_core::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.221/src/serde_core/de/value.rs.html#328\">Source</a><a href=\"#method.into_deserializer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.221/serde_core/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serde/1.0.221/serde_core/de/value/struct.BoolDeserializer.html\" title=\"struct serde_core::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoPyObject%3C'py%3E-for-bool\" class=\"impl\"><a href=\"#impl-IntoPyObject%3C'py%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'py&gt; IntoPyObject&lt;'py&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Target</a> = PyBool</h4></section></summary><div class='docblock'>The Python output type</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = Borrowed&lt;'py, 'py, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as IntoPyObject&lt;'py&gt;&gt;::Target&gt;</h4></section></summary><div class='docblock'>The smart pointer type to use. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"devela/code/enum.Infallible.html\" title=\"enum devela::code::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_pyobject\" class=\"method trait-impl\"><a href=\"#method.into_pyobject\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">into_pyobject</a>(\n    self,\n    py: Python&lt;'py&gt;,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as IntoPyObject&lt;'py&gt;&gt;::Output, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> as IntoPyObject&lt;'py&gt;&gt;::Error&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&lt;bool as IntoPyObject&lt;&#39;py&gt;&gt;::Output, &lt;bool as IntoPyObject&lt;&#39;py&gt;&gt;::Error&gt;\">โ</a></h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","IntoPyObject<'py>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#73\">Source</a></span><a href=\"#impl-Not-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Not.html\" title=\"trait devela::all::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#73\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#73\">Source</a><a href=\"#method.not\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"devela/all/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1967\">Source</a></span><a href=\"#impl-Ord-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Ord.html\" title=\"trait devela::all::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1969\">Source</a><a href=\"#method.cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"devela/all/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1983\">Source</a><a href=\"#method.min\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"devela/all/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1988\">Source</a><a href=\"#method.max\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"devela/all/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1993\">Source</a><a href=\"#method.clamp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"devela/all/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26Bound%3C'_,+PyBool%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-PartialEq%3C%26Bound%3C'_,+PyBool%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;&amp;Bound&lt;'_, PyBool&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3><div class=\"docblock\"><p>Compare <code>bool</code> with <code>&amp;Bound&lt;PyBool&gt;</code></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;Bound&lt;'_, PyBool&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<&Bound<'_, PyBool>>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBorrowed%3C'_,+'_,+PyBool%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-PartialEq%3CBorrowed%3C'_,+'_,+PyBool%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;Borrowed&lt;'_, '_, PyBool&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3><div class=\"docblock\"><p>Compare <code>bool</code> with <code>Borrowed&lt;PyBool&gt;</code></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Borrowed&lt;'_, '_, PyBool&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Borrowed<'_, '_, PyBool>>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBound%3C'_,+PyBool%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-PartialEq%3CBound%3C'_,+PyBool%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a>&lt;Bound&lt;'_, PyBool&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3><div class=\"docblock\"><p>Compare <code>bool</code> with <code>Bound&lt;PyBool&gt;</code></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Bound&lt;'_, PyBool&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Bound<'_, PyBool>>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143800\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1845-1847\">Source</a></span><a href=\"#impl-PartialEq-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1845-1847\">Source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1845-1847\">Source</a><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1925\">Source</a></span><a href=\"#impl-PartialOrd-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1927\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">โ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1931\">Source</a><a href=\"#method.lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1931\">Source</a><a href=\"#method.le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1931\">Source</a><a href=\"#method.gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1931\">Source</a><a href=\"#method.ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.221/src/serde_core/ser/impls.rs.html#21\">Source</a><a href=\"#impl-Serialize-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.221/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.221/src/serde_core/ser/impls.rs.html#21\">Source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.221/serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.221/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.221/serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.221/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.221/serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&lt;S as Serializer&gt;::Ok, &lt;S as Serializer&gt;::Error&gt;\">โ</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.221/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.221/serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CDataValue64CopyWith%3CV%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#96-245\">Source</a><a href=\"#impl-TryFrom%3CDataValue64CopyWith%3CV%3E%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;V: <a class=\"trait\" href=\"devela/all/trait.DataValueCopy.html\" title=\"trait devela::all::DataValueCopy\">DataValueCopy</a>&gt; <a class=\"trait\" href=\"devela/code/trait.TryFrom.html\" title=\"trait devela::code::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"devela/all/enum.DataValue64CopyWith.html\" title=\"enum devela::all::DataValue64CopyWith\">DataValue64CopyWith</a>&lt;V&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#96-245\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/data/table/value/build.rs.html#96-245\">Source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(v: <a class=\"enum\" href=\"devela/all/enum.DataValue64CopyWith.html\" title=\"enum devela::all::DataValue64CopyWith\">DataValue64CopyWith</a>&lt;V&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" title=\"type devela::code::TryFrom::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;Self, Self::Error&gt;\">โ</a></h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<DataValue64CopyWith<V>>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CSign%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3CSign%3E-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/code/trait.TryFrom.html\" title=\"trait devela::code::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Sign.html\" title=\"enum devela::all::Sign\">Sign</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(s: <a class=\"enum\" href=\"devela/all/enum.Sign.html\" title=\"enum devela::all::Sign\">Sign</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"devela/all/struct.InvalidValue.html\" title=\"struct devela::all::InvalidValue\">InvalidValue</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;bool, InvalidValue&gt;\">โ</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>None</code> and <code>false</code> if <code>Negative</code>.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">ยง</a>Errors</h5>\n<p>Returns <a href=\"devela/all/struct.InvalidValue.html\" title=\"struct devela::all::InvalidValue\"><code>InvalidValue</code></a> if the sign is <code>None</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"devela/code/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"devela/all/struct.InvalidValue.html\" title=\"struct devela::all::InvalidValue\">InvalidValue</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<Sign>","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-bool\" class=\"impl\"><a href=\"#impl-Zeroable-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/nightly/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<section id=\"impl-ConstParamTy_-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#1115-1124\">Source</a><a href=\"#impl-ConstParamTy_-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.ConstParamTy_.html\" title=\"trait core::marker::ConstParamTy_\">ConstParamTy_</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section>","ConstParamTy_","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<section id=\"impl-Copy-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#482-492\">Source</a></span><a href=\"#impl-Copy-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Copy.html\" title=\"trait devela::all::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section>","Copy","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<section id=\"impl-Eq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1856\">Source</a></span><a href=\"#impl-Eq-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Eq.html\" title=\"trait devela::all::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section>","Eq","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<section id=\"impl-NoUninit-for-bool\" class=\"impl\"><a href=\"#impl-NoUninit-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl NoUninit for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section>","NoUninit","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<section id=\"impl-StructuralPartialEq-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#265-277\">Source</a><a href=\"#impl-StructuralPartialEq-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section>","StructuralPartialEq","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<section id=\"impl-UnsizedConstParamTy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#1126-1139\">Source</a><a href=\"#impl-UnsizedConstParamTy-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.UnsizedConstParamTy.html\" title=\"trait core::marker::UnsizedConstParamTy\">UnsizedConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section>","UnsizedConstParamTy","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"],["<section id=\"impl-UseCloned-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#308-313\">Source</a><a href=\"#impl-UseCloned-for-bool\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.UseCloned.html\" title=\"trait core::clone::UseCloned\">UseCloned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h3></section>","UseCloned","devela::lang::ffi::glsl::types::data_types::g_bool","devela::lang::ffi::js::primitives::js_bool"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[115195]}