(function() {
    var type_impls = Object.fromEntries([["devela",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Accumulate%3CT%3E-for-()\" class=\"impl\"><a href=\"#impl-Accumulate%3CT%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Accumulate.html\" title=\"trait devela::_dep::winnow::stream::Accumulate\">Accumulate</a>&lt;T&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.initial\" class=\"method trait-impl\"><a href=\"#method.initial\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Accumulate.html#tymethod.initial\" class=\"fn\">initial</a>(_capacity: <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Create a new <code>Extend</code> of the correct type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.accumulate\" class=\"method trait-impl\"><a href=\"#method.accumulate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.Accumulate.html#tymethod.accumulate\" class=\"fn\">accumulate</a>(&amp;mut self, _acc: T)</h4></section></summary><div class='docblock'>Accumulate the input into an accumulator</div></details></div></details>","Accumulate<T>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddContext%3CI,+C%3E-for-()\" class=\"impl\"><a href=\"#impl-AddContext%3CI,+C%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, C&gt; <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.AddContext.html\" title=\"trait devela::_dep::winnow::error::AddContext\">AddContext</a>&lt;I, C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_context\" class=\"method trait-impl\"><a href=\"#method.add_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.AddContext.html#method.add_context\" class=\"fn\">add_context</a>(\n    self,\n    _input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;I</a>,\n    _token_start: &amp;&lt;I as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type devela::_dep::winnow::stream::Stream::Checkpoint\">Checkpoint</a>,\n    _context: C,\n) -&gt; Self</h4></section></summary><div class='docblock'>Append to an existing error custom data <a href=\"devela/_dep/winnow/error/trait.AddContext.html#method.add_context\">Read more</a></div></details></div></details>","AddContext<I, C>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitSized%3C0%3E-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#178\">Source</a><a href=\"#impl-BitSized%3C0%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.BitSized.html\" title=\"trait devela::all::BitSized\">BitSized</a>&lt;0&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BIT_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#55-61\">Source</a><a href=\"#associatedconstant.BIT_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/all/trait.BitSized.html#associatedconstant.BIT_SIZE\" class=\"constant\">BIT_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The bit size of this type (only the relevant data part, without padding). <a href=\"devela/all/trait.BitSized.html#associatedconstant.BIT_SIZE\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_BYTE_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#70-76\">Source</a><a href=\"#associatedconstant.MIN_BYTE_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/all/trait.BitSized.html#associatedconstant.MIN_BYTE_SIZE\" class=\"constant\">MIN_BYTE_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The rounded up byte size for this type. <a href=\"devela/all/trait.BitSized.html#associatedconstant.MIN_BYTE_SIZE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#83-85\">Source</a><a href=\"#method.bit_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitSized.html#method.bit_size\" class=\"fn\">bit_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the bit size of this type (only the relevant data part, without padding). <a href=\"devela/all/trait.BitSized.html#method.bit_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_byte_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/size/bit.rs.html#95-97\">Source</a><a href=\"#method.min_byte_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.BitSized.html#method.min_byte_size\" class=\"fn\">min_byte_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the rounded up byte size for this type. <a href=\"devela/all/trait.BitSized.html#method.min_byte_size\">Read more</a></div></details></div></details>","BitSized<0>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Connector-for-()\" class=\"impl\"><a href=\"#impl-Connector-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/ureq/unversioned/transport/trait.Connector.html\" title=\"trait devela::_dep::ureq::unversioned::transport::Connector\">Connector</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Out\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Out\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/ureq/unversioned/transport/trait.Connector.html#associatedtype.Out\" class=\"associatedtype\">Out</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of transport produced by this connector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.connect\" class=\"method trait-impl\"><a href=\"#method.connect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/ureq/unversioned/transport/trait.Connector.html#tymethod.connect\" class=\"fn\">connect</a>(\n    &amp;self,\n    _: &amp;<a class=\"struct\" href=\"devela/_dep/ureq/unversioned/transport/struct.ConnectionDetails.html\" title=\"struct devela::_dep::ureq::unversioned::transport::ConnectionDetails\">ConnectionDetails</a>&lt;'_&gt;,\n    _: <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a> as <a class=\"trait\" href=\"devela/_dep/ureq/unversioned/transport/trait.Connector.html\" title=\"trait devela::_dep::ureq::unversioned::transport::Connector\">Connector</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/ureq/unversioned/transport/trait.Connector.html#associatedtype.Out\" title=\"type devela::_dep::ureq::unversioned::transport::Connector::Out\">Out</a>&gt;, <a class=\"enum\" href=\"devela/_dep/ureq/enum.Error.html\" title=\"enum devela::_dep::ureq::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;Option&lt;&lt;() as Connector&gt;::Out&gt;, Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Use this connector to make a <a href=\"devela/_dep/ureq/unversioned/transport/trait.Transport.html\" title=\"trait devela::_dep::ureq::unversioned::transport::Transport\"><code>Transport</code></a>. <a href=\"devela/_dep/ureq/unversioned/transport/trait.Connector.html#tymethod.connect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/ureq/unversioned/transport/trait.Connector.html#method.chain\" class=\"fn\">chain</a>&lt;Next&gt;(self, next: Next) -&gt; <a class=\"struct\" href=\"devela/_dep/ureq/unversioned/transport/struct.ChainedConnector.html\" title=\"struct devela::_dep::ureq::unversioned::transport::ChainedConnector\">ChainedConnector</a>&lt;In, Self, Next&gt;<div class=\"where\">where\n    Next: <a class=\"trait\" href=\"devela/_dep/ureq/unversioned/transport/trait.Connector.html\" title=\"trait devela::_dep::ureq::unversioned::transport::Connector\">Connector</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/_dep/ureq/unversioned/transport/trait.Connector.html#associatedtype.Out\" title=\"type devela::_dep::ureq::unversioned::transport::Connector::Out\">Out</a>&gt;,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Chain this connector to another connector. <a href=\"devela/_dep/ureq/unversioned/transport/trait.Connector.html#method.chain\">Read more</a></div></details></div></details>","Connector","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstDefault-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/code/default.rs.html#160\">Source</a><a href=\"#impl-ConstDefault-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/code/trait.ConstDefault.html\" title=\"trait devela::code::ConstDefault\">ConstDefault</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/code/default.rs.html#160\">Source</a><a href=\"#associatedconstant.DEFAULT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/code/trait.ConstDefault.html#associatedconstant.DEFAULT\" class=\"constant\">DEFAULT</a>: Self = ()</h4></section></summary><div class='docblock'>Returns the compile-time “default value” for a type.</div></details></div></details>","ConstDefault","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContainsToken%3CT%3E-for-()\" class=\"impl\"><a href=\"#impl-ContainsToken%3CT%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.ContainsToken.html\" title=\"trait devela::_dep::winnow::stream::ContainsToken\">ContainsToken</a>&lt;T&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_token\" class=\"method trait-impl\"><a href=\"#method.contains_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/stream/trait.ContainsToken.html#tymethod.contains_token\" class=\"fn\">contains_token</a>(&amp;self, _token: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if self contains the token</div></details></div></details>","ContainsToken<T>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-()\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2914\">Source</a></span><a href=\"#impl-Debug-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#2916\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"devela/all/struct.Formatter.html\" title=\"struct devela::all::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"devela/all/struct.FmtError.html\" title=\"struct devela::all::FmtError\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"devela/all/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-()\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143894\" title=\"Tracking issue for const_default\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/default.rs.html#165\">Source</a></span><a href=\"#impl-Default-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/default.rs.html#165\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/code/trait.Default.html#tymethod.default\" class=\"fn\">default</a>()</h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>()</code></p>\n</div></details></div></details>","Default","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#32\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"devela/_dep/serde/trait.Deserialize.html\" title=\"trait devela::_dep::serde::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#33-35\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/serde/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;D as <a class=\"trait\" href=\"devela/_dep/serde/trait.Deserializer.html\" title=\"trait devela::_dep::serde::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/serde/trait.Deserializer.html#associatedtype.Error\" title=\"type devela::_dep::serde::Deserializer::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), &lt;D as Deserializer&lt;&#39;de&gt;&gt;::Error&gt;\">ⓘ</a><div class=\"where\">where\n    D: <a class=\"trait\" href=\"devela/_dep/serde/trait.Deserializer.html\" title=\"trait devela::_dep::serde::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"devela/_dep/serde/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorConvert%3C()%3E-for-()\" class=\"impl\"><a href=\"#impl-ErrorConvert%3C()%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ErrorConvert.html\" title=\"trait devela::_dep::winnow::error::ErrorConvert\">ErrorConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.convert\" class=\"method trait-impl\"><a href=\"#method.convert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.ErrorConvert.html#tymethod.convert\" class=\"fn\">convert</a>(self)</h4></section></summary><div class='docblock'>Transform to another error type</div></details></div></details>","ErrorConvert<()>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromExternalError%3CI,+E%3E-for-()\" class=\"impl\"><a href=\"#impl-FromExternalError%3CI,+E%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, E&gt; <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.FromExternalError.html\" title=\"trait devela::_dep::winnow::error::FromExternalError\">FromExternalError</a>&lt;I, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_external_error\" class=\"method trait-impl\"><a href=\"#method.from_external_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.FromExternalError.html#tymethod.from_external_error\" class=\"fn\">from_external_error</a>(_input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;I</a>, _e: E)</h4></section></summary><div class='docblock'>Like <a href=\"devela/_dep/winnow/error/trait.ParserError.html#tymethod.from_input\" title=\"associated function devela::_dep::winnow::error::ParserError::from_input\"><code>ParserError::from_input</code></a> but also include an external error.</div></details></div></details>","FromExternalError<I, E>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromParallelIterator%3C()%3E-for-()\" class=\"impl\"><a href=\"#impl-FromParallelIterator%3C()%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/rayon/iter/trait.FromParallelIterator.html\" title=\"trait devela::_dep::rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3><div class=\"docblock\"><p>Collapses all unit items from a parallel iterator into one.</p>\n</div></section></summary><div class=\"docblock\"><p>This is more useful when combined with higher-level abstractions, like\ncollecting to a <code>Result&lt;(), E&gt;</code> where you only care about errors:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::io::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>rayon::prelude::<span class=\"kw-2\">*</span>;\n\n<span class=\"kw\">let </span>data = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Result</span>&lt;()&gt; = data.par_iter()\n    .map(|x| <span class=\"macro\">writeln!</span>(stdout(), <span class=\"string\">\"{}\"</span>, x))\n    .collect();\n<span class=\"macro\">assert!</span>(res.is_ok());</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_par_iter\" class=\"method trait-impl\"><a href=\"#method.from_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/rayon/iter/trait.FromParallelIterator.html#tymethod.from_par_iter\" class=\"fn\">from_par_iter</a>&lt;I&gt;(par_iter: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/_dep/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait devela::_dep::rayon::iter::IntoParallelIterator\">IntoParallelIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an instance of the collection from the parallel iterator <code>par_iter</code>. <a href=\"devela/_dep/rayon/iter/trait.FromParallelIterator.html#tymethod.from_par_iter\">Read more</a></div></details></div></details>","FromParallelIterator<()>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-()\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#915\">Source</a></span><a href=\"#impl-Hash-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Hash.html\" title=\"trait devela::all::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#915\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, _state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\"><code>Hasher</code></a>. <a href=\"devela/all/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"devela/all/trait.Hasher.html\" title=\"trait devela::all::Hasher\"><code>Hasher</code></a>. <a href=\"devela/all/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#124-126\">Source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"devela/_dep/serde/de/trait.IntoDeserializer.html\" title=\"trait devela::_dep::serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"devela/_dep/serde/de/trait.Error.html\" title=\"trait devela::_dep::serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#128\">Source</a><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"devela/_dep/serde/de/value/struct.UnitDeserializer.html\" title=\"struct devela::_dep::serde::de::value::UnitDeserializer\">UnitDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#130\">Source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/serde/de/value/struct.UnitDeserializer.html\" title=\"struct devela::_dep::serde::de::value::UnitDeserializer\">UnitDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoPyObject%3C'py%3E-for-()\" class=\"impl\"><a href=\"#impl-IntoPyObject%3C'py%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'py&gt; <a class=\"trait\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html\" title=\"trait devela::_dep::pyo3::IntoPyObject\">IntoPyObject</a>&lt;'py&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"struct\" href=\"devela/_dep/pyo3/types/struct.PyTuple.html\" title=\"struct devela::_dep::pyo3::types::PyTuple\">PyTuple</a></h4></section></summary><div class='docblock'>The Python output type</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"devela/_dep/pyo3/struct.Bound.html\" title=\"struct devela::_dep::pyo3::Bound\">Bound</a>&lt;'py, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a> as <a class=\"trait\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html\" title=\"trait devela::_dep::pyo3::IntoPyObject\">IntoPyObject</a>&lt;'py&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Target\" title=\"type devela::_dep::pyo3::IntoPyObject::Target\">Target</a>&gt;</h4></section></summary><div class='docblock'>The smart pointer type to use. <a href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Output\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"devela/code/enum.Infallible.html\" title=\"enum devela::code::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_pyobject\" class=\"method trait-impl\"><a href=\"#method.into_pyobject\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/pyo3/trait.IntoPyObject.html#tymethod.into_pyobject\" class=\"fn\">into_pyobject</a>(\n    self,\n    py: <a class=\"struct\" href=\"devela/_dep/pyo3/struct.Python.html\" title=\"struct devela::_dep::pyo3::Python\">Python</a>&lt;'py&gt;,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a> as <a class=\"trait\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html\" title=\"trait devela::_dep::pyo3::IntoPyObject\">IntoPyObject</a>&lt;'py&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Output\" title=\"type devela::_dep::pyo3::IntoPyObject::Output\">Output</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a> as <a class=\"trait\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html\" title=\"trait devela::_dep::pyo3::IntoPyObject\">IntoPyObject</a>&lt;'py&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/pyo3/trait.IntoPyObject.html#associatedtype.Error\" title=\"type devela::_dep::pyo3::IntoPyObject::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&lt;() as IntoPyObject&lt;&#39;py&gt;&gt;::Output, &lt;() as IntoPyObject&lt;&#39;py&gt;&gt;::Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","IntoPyObject<'py>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IteratorExtend%3C()%3E-for-()\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#451\">Source</a></span><a href=\"#impl-IteratorExtend%3C()%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.IteratorExtend.html\" title=\"trait devela::all::IteratorExtend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#452\">Source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.IteratorExtend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"devela/all/trait.IteratorExtend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#455\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.IteratorExtend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, _item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.IteratorExtend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"devela/all/trait.IteratorExtend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<()>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IteratorFrom%3C()%3E-for-()\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.23.0\">1.23.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/unit.rs.html#15\">Source</a></span><a href=\"#impl-IteratorFrom%3C()%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.IteratorFrom.html\" title=\"trait devela::all::IteratorFrom\">FromIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3><div class=\"docblock\"><p>Collapses all unit items from an iterator into one.</p>\n</div></section></summary><div class=\"docblock\"><p>This is more useful when combined with higher-level abstractions, like\ncollecting to a <code>Result&lt;(), E&gt;</code> where you only care about errors:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::io::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">let </span>data = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];\n<span class=\"kw\">let </span>res: <span class=\"prelude-ty\">Result</span>&lt;()&gt; = data.iter()\n    .map(|x| <span class=\"macro\">writeln!</span>(stdout(), <span class=\"string\">\"{x}\"</span>))\n    .collect();\n<span class=\"macro\">assert!</span>(res.is_ok());</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/unit.rs.html#16\">Source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.IteratorFrom.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.IteratorInto.html\" title=\"trait devela::all::IteratorInto\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"devela/all/trait.IteratorFrom.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<()>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MemPod-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/pod.rs.html#138\">Source</a><a href=\"#impl-MemPod-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.MemPod.html\" title=\"trait devela::all::MemPod\">MemPod</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>unsafe_layout</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/pod.rs.html#72-75\">Source</a><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.MemPod.html#method.zeroed\" class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns a new instance contrcuted from zeroes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/pod.rs.html#81-105\">Source</a><a href=\"#method.from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.MemPod.html#method.from_bytes\" class=\"fn\">from_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Returns a new instance constructed from the given bytes. <a href=\"devela/all/trait.MemPod.html#method.from_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/pod.rs.html#109-113\">Source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.MemPod.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the instance’s data as a slice of bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/sys/mem/pod.rs.html#117-121\">Source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.MemPod.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the instance’s data as a mutable slice of bytes.</div></details></div></details>","MemPod","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-()\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1959\">Source</a></span><a href=\"#impl-Ord-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Ord.html\" title=\"trait devela::all::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1961\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, _other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"devela/all/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"devela/all/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"devela/all/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"devela/all/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParallelExtend%3C()%3E-for-()\" class=\"impl\"><a href=\"#impl-ParallelExtend%3C()%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/rayon/iter/trait.ParallelExtend.html\" title=\"trait devela::_dep::rayon::iter::ParallelExtend\">ParallelExtend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3><div class=\"docblock\"><p>Collapses all unit items from a parallel iterator into one.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.par_extend\" class=\"method trait-impl\"><a href=\"#method.par_extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/rayon/iter/trait.ParallelExtend.html#tymethod.par_extend\" class=\"fn\">par_extend</a>&lt;I&gt;(&amp;mut self, par_iter: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/_dep/rayon/iter/trait.IntoParallelIterator.html\" title=\"trait devela::_dep::rayon::iter::IntoParallelIterator\">IntoParallelIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends an instance of the collection with the elements drawn\nfrom the parallel iterator <code>par_iter</code>. <a href=\"devela/_dep/rayon/iter/trait.ParallelExtend.html#tymethod.par_extend\">Read more</a></div></details></div></details>","ParallelExtend<()>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parser%3CI,+(),+E%3E-for-()\" class=\"impl\"><a href=\"#impl-Parser%3CI,+(),+E%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, E&gt; <a class=\"trait\" href=\"devela/_dep/winnow/trait.Parser.html\" title=\"trait devela::_dep::winnow::Parser\">Parser</a>&lt;I, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_next\" class=\"method trait-impl\"><a href=\"#method.parse_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#tymethod.parse_next\" class=\"fn\">parse_next</a>(&amp;mut self, _i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, E&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), E&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Take tokens from the <a href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\"><code>Stream</code></a>, turning it into the output <a href=\"devela/_dep/winnow/trait.Parser.html#tymethod.parse_next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse\" class=\"fn\">parse</a>(\n    &amp;mut self,\n    input: I,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;O, <a class=\"struct\" href=\"devela/_dep/winnow/error/struct.ParseError.html\" title=\"struct devela::_dep::winnow::error::ParseError\">ParseError</a>&lt;I, &lt;E as <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/error/trait.ParserError.html#associatedtype.Inner\" title=\"type devela::_dep::winnow::error::ParserError::Inner\">Inner</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;O, ParseError&lt;I, &lt;E as ParserError&lt;I&gt;&gt;::Inner&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html\" title=\"trait devela::_dep::winnow::stream::StreamIsPartial\">StreamIsPartial</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    &lt;E as <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/error/trait.ParserError.html#associatedtype.Inner\" title=\"type devela::_dep::winnow::error::ParserError::Inner\">Inner</a>: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Parse all of <code>input</code>, generating <code>O</code> from it <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_peek\" class=\"method trait-impl\"><a href=\"#method.parse_peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse_peek\" class=\"fn\">parse_peek</a>(&amp;mut self, input: I) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(I, O)</a>, E&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(I, O), E&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Take tokens from the <a href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\"><code>Stream</code></a>, turning it into the output <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse_peek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.ByRef.html\" title=\"struct devela::_dep::winnow::combinator::impls::ByRef\">ByRef</a>&lt;'_, Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Treat <code>&amp;mut Self</code> as a parser <a href=\"devela/_dep/winnow/trait.Parser.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method trait-impl\"><a href=\"#method.value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.value\" class=\"fn\">value</a>&lt;O2&gt;(self, val: O2) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Value.html\" title=\"struct devela::_dep::winnow::combinator::impls::Value\">Value</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    O2: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Produce the provided value <a href=\"devela/_dep/winnow/trait.Parser.html#method.value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_value\" class=\"method trait-impl\"><a href=\"#method.default_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.default_value\" class=\"fn\">default_value</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.DefaultValue.html\" title=\"struct devela::_dep::winnow::combinator::impls::DefaultValue\">DefaultValue</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    O2: <a class=\"trait\" href=\"devela/code/trait.Default.html\" title=\"trait devela::code::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Produce a type’s default value <a href=\"devela/_dep/winnow/trait.Parser.html#method.default_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.void\" class=\"method trait-impl\"><a href=\"#method.void\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.void\" class=\"fn\">void</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Void.html\" title=\"struct devela::_dep::winnow::combinator::impls::Void\">Void</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Discards the output of the <code>Parser</code> <a href=\"devela/_dep/winnow/trait.Parser.html#method.void\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.output_into\" class=\"method trait-impl\"><a href=\"#method.output_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.output_into\" class=\"fn\">output_into</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.OutputInto.html\" title=\"struct devela::_dep::winnow::combinator::impls::OutputInto\">OutputInto</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    O: <a class=\"trait\" href=\"devela/code/trait.Into.html\" title=\"trait devela::code::Into\">Into</a>&lt;O2&gt;,</div></h4></section></summary><div class='docblock'>Convert the parser’s output to another type using <a href=\"devela/code/trait.From.html\" title=\"trait devela::code::From\"><code>std::convert::From</code></a> <a href=\"devela/_dep/winnow/trait.Parser.html#method.output_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.take\" class=\"fn\">take</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Take.html\" title=\"struct devela::_dep::winnow::combinator::impls::Take\">Take</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,</div></h4></section></summary><div class='docblock'>Produce the consumed input as produced value. <a href=\"devela/_dep/winnow/trait.Parser.html#method.take\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_taken\" class=\"method trait-impl\"><a href=\"#method.with_taken\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.with_taken\" class=\"fn\">with_taken</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.WithTaken.html\" title=\"struct devela::_dep::winnow::combinator::impls::WithTaken\">WithTaken</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,</div></h4></section></summary><div class='docblock'>Produce the consumed input with the output <a href=\"devela/_dep/winnow/trait.Parser.html#method.with_taken\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.span\" class=\"method trait-impl\"><a href=\"#method.span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.span\" class=\"fn\">span</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Span.html\" title=\"struct devela::_dep::winnow::combinator::impls::Span\">Span</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Location.html\" title=\"trait devela::_dep::winnow::stream::Location\">Location</a>,</div></h4></section></summary><div class='docblock'>Produce the location of the consumed input as produced value. <a href=\"devela/_dep/winnow/trait.Parser.html#method.span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_span\" class=\"method trait-impl\"><a href=\"#method.with_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.with_span\" class=\"fn\">with_span</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.WithSpan.html\" title=\"struct devela::_dep::winnow::combinator::impls::WithSpan\">WithSpan</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Location.html\" title=\"trait devela::_dep::winnow::stream::Location\">Location</a>,</div></h4></section></summary><div class='docblock'>Produce the location of consumed input with the output <a href=\"devela/_dep/winnow/trait.Parser.html#method.with_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.map\" class=\"fn\">map</a>&lt;G, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Map.html\" title=\"struct devela::_dep::winnow::combinator::impls::Map\">Map</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(O) -&gt; O2,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps a function over the output of a parser <a href=\"devela/_dep/winnow/trait.Parser.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_map\" class=\"method trait-impl\"><a href=\"#method.try_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.try_map\" class=\"fn\">try_map</a>&lt;G, O2, E2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.TryMap.html\" title=\"struct devela::_dep::winnow::combinator::impls::TryMap\">TryMap</a>&lt;Self, G, I, O, O2, E, E2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(O) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;O2, E2&gt;,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.FromExternalError.html\" title=\"trait devela::_dep::winnow::error::FromExternalError\">FromExternalError</a>&lt;I, E2&gt; + <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Applies a function returning a <code>Result</code> over the output of a parser. <a href=\"devela/_dep/winnow/trait.Parser.html#method.try_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_map\" class=\"method trait-impl\"><a href=\"#method.verify_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.verify_map\" class=\"fn\">verify_map</a>&lt;G, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.VerifyMap.html\" title=\"struct devela::_dep::winnow::combinator::impls::VerifyMap\">VerifyMap</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(O) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;O2&gt;,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Apply both <a href=\"devela/_dep/winnow/trait.Parser.html#method.verify\" title=\"method devela::_dep::winnow::Parser::verify\"><code>Parser::verify</code></a> and <a href=\"devela/_dep/winnow/trait.Parser.html#method.map\" title=\"method devela::_dep::winnow::Parser::map\"><code>Parser::map</code></a>. <a href=\"devela/_dep/winnow/trait.Parser.html#method.verify_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;G, H, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.FlatMap.html\" title=\"struct devela::_dep::winnow::combinator::impls::FlatMap\">FlatMap</a>&lt;Self, G, H, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(O) -&gt; H,\n    H: <a class=\"trait\" href=\"devela/_dep/winnow/trait.Parser.html\" title=\"trait devela::_dep::winnow::Parser\">Parser</a>&lt;I, O2, E&gt;,</div></h4></section></summary><div class='docblock'>Creates a parser from the output of this one <a href=\"devela/_dep/winnow/trait.Parser.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method trait-impl\"><a href=\"#method.and_then\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.and_then\" class=\"fn\">and_then</a>&lt;G, O2&gt;(self, inner: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.AndThen.html\" title=\"struct devela::_dep::winnow::combinator::impls::AndThen\">AndThen</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/_dep/winnow/trait.Parser.html\" title=\"trait devela::_dep::winnow::Parser\">Parser</a>&lt;O, O2, E&gt;,\n    O: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.StreamIsPartial.html\" title=\"trait devela::_dep::winnow::stream::StreamIsPartial\">StreamIsPartial</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,</div></h4></section></summary><div class='docblock'>Applies a second parser over the output of the first one <a href=\"devela/_dep/winnow/trait.Parser.html#method.and_then\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_to\" class=\"method trait-impl\"><a href=\"#method.parse_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse_to\" class=\"fn\">parse_to</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.ParseTo.html\" title=\"struct devela::_dep::winnow::combinator::impls::ParseTo\">ParseTo</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    O: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.ParseSlice.html\" title=\"trait devela::_dep::winnow::stream::ParseSlice\">ParseSlice</a>&lt;O2&gt;,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Apply <a href=\"devela/all/trait.FromStr.html\" title=\"trait devela::all::FromStr\"><code>std::str::FromStr</code></a> to the output of the parser <a href=\"devela/_dep/winnow/trait.Parser.html#method.parse_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method trait-impl\"><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.verify\" class=\"fn\">verify</a>&lt;G, O2&gt;(self, filter: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Verify.html\" title=\"struct devela::_dep::winnow::combinator::impls::Verify\">Verify</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;O2</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    O: <a class=\"trait\" href=\"devela/all/trait.Borrow.html\" title=\"trait devela::all::Borrow\">Borrow</a>&lt;O2&gt;,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    O2: ?<a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns the output of the child parser if it satisfies a verification function. <a href=\"devela/_dep/winnow/trait.Parser.html#method.verify\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.context\" class=\"method trait-impl\"><a href=\"#method.context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.context\" class=\"fn\">context</a>&lt;C&gt;(self, context: C) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.Context.html\" title=\"struct devela::_dep::winnow::combinator::impls::Context\">Context</a>&lt;Self, I, O, E, C&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.AddContext.html\" title=\"trait devela::_dep::winnow::error::AddContext\">AddContext</a>&lt;I, C&gt; + <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    C: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a> + <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>,</div></h4></section></summary><div class='docblock'>If parsing fails, add context to the error <a href=\"devela/_dep/winnow/trait.Parser.html#method.context\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.context_with\" class=\"method trait-impl\"><a href=\"#method.context_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.context_with\" class=\"fn\">context_with</a>&lt;F, C, FI&gt;(\n    self,\n    context: F,\n) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.ContextWith.html\" title=\"struct devela::_dep::winnow::combinator::impls::ContextWith\">ContextWith</a>&lt;Self, I, O, E, F, C, FI&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.AddContext.html\" title=\"trait devela::_dep::winnow::error::AddContext\">AddContext</a>&lt;I, C&gt; + <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;,\n    F: <a class=\"trait\" href=\"devela/all/trait.Fn.html\" title=\"trait devela::all::Fn\">Fn</a>() -&gt; FI + <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    C: <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>,\n    FI: <a class=\"trait\" href=\"devela/all/trait.Iterator.html\" title=\"trait devela::all::Iterator\">Iterator</a>&lt;Item = C&gt;,</div></h4></section></summary><div class='docblock'>If parsing fails, dynamically add context to the error <a href=\"devela/_dep/winnow/trait.Parser.html#method.context_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_err\" class=\"method trait-impl\"><a href=\"#method.map_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.map_err\" class=\"fn\">map_err</a>&lt;G, E2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.MapErr.html\" title=\"struct devela::_dep::winnow::combinator::impls::MapErr\">MapErr</a>&lt;Self, G, I, O, E, E2&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"devela/all/trait.FnMut.html\" title=\"trait devela::all::FnMut\">FnMut</a>(E) -&gt; E2,\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps a function over the error of a parser <a href=\"devela/_dep/winnow/trait.Parser.html#method.map_err\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complete_err\" class=\"method trait-impl\"><a href=\"#method.complete_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.complete_err\" class=\"fn\">complete_err</a>(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.CompleteErr.html\" title=\"struct devela::_dep::winnow::combinator::impls::CompleteErr\">CompleteErr</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms <a href=\"devela/_dep/winnow/error/enum.ErrMode.html#variant.Incomplete\" title=\"variant devela::_dep::winnow::error::ErrMode::Incomplete\"><code>Incomplete</code></a> into <a href=\"devela/_dep/winnow/error/enum.ErrMode.html#variant.Backtrack\" title=\"variant devela::_dep::winnow::error::ErrMode::Backtrack\"><code>Backtrack</code></a> <a href=\"devela/_dep/winnow/trait.Parser.html#method.complete_err\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.err_into\" class=\"method trait-impl\"><a href=\"#method.err_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/trait.Parser.html#method.err_into\" class=\"fn\">err_into</a>&lt;E2&gt;(self) -&gt; <a class=\"struct\" href=\"devela/_dep/winnow/combinator/impls/struct.ErrInto.html\" title=\"struct devela::_dep::winnow::combinator::impls::ErrInto\">ErrInto</a>&lt;Self, I, O, E, E2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"devela/code/trait.Into.html\" title=\"trait devela::code::Into\">Into</a>&lt;E2&gt;,</div></h4></section></summary><div class='docblock'>Convert the parser’s error to another type using <a href=\"devela/code/trait.From.html\" title=\"trait devela::code::From\"><code>std::convert::From</code></a></div></details></div></details>","Parser<I, (), E>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParserError%3CI%3E-for-()\" class=\"impl\"><a href=\"#impl-ParserError%3CI%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/_dep/winnow/error/trait.ParserError.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Generally, <code>Self</code> <a href=\"devela/_dep/winnow/error/trait.ParserError.html#associatedtype.Inner\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_input\" class=\"method trait-impl\"><a href=\"#method.from_input\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.ParserError.html#tymethod.from_input\" class=\"fn\">from_input</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;I</a>)</h4></section></summary><div class='docblock'>Creates an error from the input position</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.ParserError.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a> as <a class=\"trait\" href=\"devela/_dep/winnow/error/trait.ParserError.html\" title=\"trait devela::_dep::winnow::error::ParserError\">ParserError</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/error/trait.ParserError.html#associatedtype.Inner\" title=\"type devela::_dep::winnow::error::ParserError::Inner\">Inner</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&lt;() as ParserError&lt;I&gt;&gt;::Inner, ()&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Unwrap the mode, returning the underlying error, if present</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert\" class=\"method trait-impl\"><a href=\"#method.assert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.assert\" class=\"fn\">assert</a>(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;I</a>, _message: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; Self<div class=\"where\">where\n    I: <a class=\"trait\" href=\"devela/all/trait.Debug.html\" title=\"trait devela::all::Debug\">Debug</a>,</div></h4></section></summary><div class='docblock'>Process a parser assertion</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.incomplete\" class=\"method trait-impl\"><a href=\"#method.incomplete\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.incomplete\" class=\"fn\">incomplete</a>(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;I</a>, _needed: <a class=\"enum\" href=\"devela/_dep/winnow/error/enum.Needed.html\" title=\"enum devela::_dep::winnow::error::Needed\">Needed</a>) -&gt; Self</h4></section></summary><div class='docblock'>There was not enough data to determine the appropriate action <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.incomplete\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method trait-impl\"><a href=\"#method.append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.append\" class=\"fn\">append</a>(self, _input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;I</a>, _token_start: &amp;&lt;I as <a class=\"trait\" href=\"devela/_dep/winnow/stream/trait.Stream.html\" title=\"trait devela::_dep::winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type devela::_dep::winnow::stream::Stream::Checkpoint\">Checkpoint</a>) -&gt; Self</h4></section></summary><div class='docblock'>Like <a href=\"devela/_dep/winnow/error/trait.ParserError.html#tymethod.from_input\" title=\"associated function devela::_dep::winnow::error::ParserError::from_input\"><code>ParserError::from_input</code></a> but merges it with the existing error. <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.append\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or\" class=\"method trait-impl\"><a href=\"#method.or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.or\" class=\"fn\">or</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Combines errors from two different parse branches. <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.or\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_backtrack\" class=\"method trait-impl\"><a href=\"#method.is_backtrack\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.is_backtrack\" class=\"fn\">is_backtrack</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is backtracking and trying new parse branches allowed?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_incomplete\" class=\"method trait-impl\"><a href=\"#method.is_incomplete\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.is_incomplete\" class=\"fn\">is_incomplete</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is more data <a href=\"devela/_dep/winnow/error/enum.Needed.html\" title=\"enum devela::_dep::winnow::error::Needed\"><code>Needed</code></a> <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.is_incomplete\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.needed\" class=\"method trait-impl\"><a href=\"#method.needed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.needed\" class=\"fn\">needed</a>(&amp;self) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/_dep/winnow/error/enum.Needed.html\" title=\"enum devela::_dep::winnow::error::Needed\">Needed</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Needed&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Extract the <a href=\"devela/_dep/winnow/error/enum.Needed.html\" title=\"enum devela::_dep::winnow::error::Needed\"><code>Needed</code></a> data, if present <a href=\"devela/_dep/winnow/error/trait.ParserError.html#method.needed\">Read more</a></div></details></div></details>","ParserError<I>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-()\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1834\">Source</a></span><a href=\"#impl-PartialEq-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialEq.html\" title=\"trait devela::all::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1836\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, _other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1840\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, _other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-()\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1917\">Source</a></span><a href=\"#impl-PartialOrd-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.PartialOrd.html\" title=\"trait devela::all::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1919\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, _: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.Ordering.html\" title=\"enum devela::all::Ordering\">Ordering</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;Ordering&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"devela/all/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"devela/all/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"devela/all/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProcessTermination-for-()\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.61.0\">1.61.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/process.rs.html#2545\">Source</a></span><a href=\"#impl-ProcessTermination-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.ProcessTermination.html\" title=\"trait devela::all::ProcessTermination\">Termination</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.report\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/process.rs.html#2547\">Source</a><a href=\"#method.report\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.ProcessTermination.html#tymethod.report\" class=\"fn\">report</a>(self) -&gt; <a class=\"struct\" href=\"devela/all/struct.ProcessExitCode.html\" title=\"struct devela::all::ProcessExitCode\">ExitCode</a></h4></section></summary><div class='docblock'>Is called to get the representation of the value as status code.\nThis status code is returned to the operating system.</div></details></div></details>","Termination","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#363\">Source</a><a href=\"#impl-Serialize-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/serde/trait.Serialize.html\" title=\"trait devela::_dep::serde::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#365-367\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/serde/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"devela/_dep/serde/trait.Serializer.html\" title=\"trait devela::_dep::serde::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/serde/trait.Serializer.html#associatedtype.Ok\" title=\"type devela::_dep::serde::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"devela/_dep/serde/trait.Serializer.html\" title=\"trait devela::_dep::serde::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"devela/_dep/serde/trait.Serializer.html#associatedtype.Error\" title=\"type devela::_dep::serde::Serializer::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;&lt;S as Serializer&gt;::Ok, &lt;S as Serializer&gt;::Error&gt;\">ⓘ</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"devela/_dep/serde/trait.Serializer.html\" title=\"trait devela::_dep::serde::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"devela/_dep/serde/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transport-for-()\" class=\"impl\"><a href=\"#impl-Transport-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/ureq/unversioned/transport/trait.Transport.html\" title=\"trait devela::_dep::ureq::unversioned::transport::Transport\">Transport</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.buffers\" class=\"method trait-impl\"><a href=\"#method.buffers\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/ureq/unversioned/transport/trait.Transport.html#tymethod.buffers\" class=\"fn\">buffers</a>(&amp;mut self) -&gt; &amp;mut dyn <a class=\"trait\" href=\"devela/_dep/ureq/unversioned/transport/trait.Buffers.html\" title=\"trait devela::_dep::ureq::unversioned::transport::Buffers\">Buffers</a></h4></section></summary><div class='docblock'>Provide buffers for this transport.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transmit_output\" class=\"method trait-impl\"><a href=\"#method.transmit_output\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/ureq/unversioned/transport/trait.Transport.html#tymethod.transmit_output\" class=\"fn\">transmit_output</a>(&amp;mut self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, _: <a class=\"struct\" href=\"devela/_dep/ureq/unversioned/transport/struct.NextTimeout.html\" title=\"struct devela::_dep::ureq::unversioned::transport::NextTimeout\">NextTimeout</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"devela/_dep/ureq/enum.Error.html\" title=\"enum devela::_dep::ureq::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;(), Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Transmit <code>amount</code> of the output buffer. ureq will always transmit the entirety\nof the data written to the output buffer. It is expected that the transport will\ntransmit the entire requested <code>amount</code>. <a href=\"devela/_dep/ureq/unversioned/transport/trait.Transport.html#tymethod.transmit_output\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.await_input\" class=\"method trait-impl\"><a href=\"#method.await_input\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/ureq/unversioned/transport/trait.Transport.html#tymethod.await_input\" class=\"fn\">await_input</a>(&amp;mut self, _: <a class=\"struct\" href=\"devela/_dep/ureq/unversioned/transport/struct.NextTimeout.html\" title=\"struct devela::_dep::ureq::unversioned::transport::NextTimeout\">NextTimeout</a>) -&gt; <a class=\"enum\" href=\"devela/all/enum.Result.html\" title=\"enum devela::all::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"devela/_dep/ureq/enum.Error.html\" title=\"enum devela::_dep::ureq::Error\">Error</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Result&lt;bool, Error&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Wait for input and fill the buffer. <a href=\"devela/_dep/ureq/unversioned/transport/trait.Transport.html#tymethod.await_input\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_open\" class=\"method trait-impl\"><a href=\"#method.is_open\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/ureq/unversioned/transport/trait.Transport.html#tymethod.is_open\" class=\"fn\">is_open</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tell whether this transport is still functional. This must provide an accurate answer\nfor connection pooling to work.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_tls\" class=\"method trait-impl\"><a href=\"#method.is_tls\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/ureq/unversioned/transport/trait.Transport.html#method.is_tls\" class=\"fn\">is_tls</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether the transport is TLS. <a href=\"devela/_dep/ureq/unversioned/transport/trait.Transport.html#method.is_tls\">Read more</a></div></details></div></details>","Transport","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tuple-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#139-212\">Source</a><a href=\"#impl-Tuple-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Tuple.html\" title=\"trait devela::all::Tuple\">Tuple</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>_tuple</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ARITY\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#140\">Source</a><a href=\"#associatedconstant.ARITY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/all/trait.Tuple.html#associatedconstant.ARITY\" class=\"constant\">ARITY</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = 0usize</h4></section></summary><div class='docblock'>The arity of this tuple (the number of contained elements)</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Head\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#142\">Source</a><a href=\"#associatedtype.Head\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype.Head\" class=\"associatedtype\">Head</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The first element of the tuple, at index 0.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Tail\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#143\">Source</a><a href=\"#associatedtype.Tail\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype.Tail\" class=\"associatedtype\">Tail</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The last element of the tuple, at index <code>ARITY-1</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.NoHead\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#144\">Source</a><a href=\"#associatedtype.NoHead\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype.NoHead\" class=\"associatedtype\">NoHead</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>This tuple without its head.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.NoTail\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#145\">Source</a><a href=\"#associatedtype.NoTail\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype.NoTail\" class=\"associatedtype\">NoTail</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>This tuple without its tail.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Append\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#146\">Source</a><a href=\"#associatedtype.Append\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype.Append\" class=\"associatedtype\">Append</a>&lt;T&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T,)</a></h4></section></summary><div class='docblock'>This tuple with an extra element <code>T</code> appended to it.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Prepend\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#147\">Source</a><a href=\"#associatedtype.Prepend\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype.Prepend\" class=\"associatedtype\">Prepend</a>&lt;T&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T,)</a></h4></section></summary><div class='docblock'>This tuple with an extra element <code>T</code> prepended to it.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._0\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#161\">Source</a><a href=\"#associatedtype._0\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._0\" class=\"associatedtype\">_0</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 0.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._1\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#162\">Source</a><a href=\"#associatedtype._1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._1\" class=\"associatedtype\">_1</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 1.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._2\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#163\">Source</a><a href=\"#associatedtype._2\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._2\" class=\"associatedtype\">_2</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 2.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._3\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#164\">Source</a><a href=\"#associatedtype._3\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._3\" class=\"associatedtype\">_3</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 3.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._4\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#165\">Source</a><a href=\"#associatedtype._4\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._4\" class=\"associatedtype\">_4</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 4.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._5\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#166\">Source</a><a href=\"#associatedtype._5\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._5\" class=\"associatedtype\">_5</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 5.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._6\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#167\">Source</a><a href=\"#associatedtype._6\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._6\" class=\"associatedtype\">_6</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 6.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._7\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#168\">Source</a><a href=\"#associatedtype._7\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._7\" class=\"associatedtype\">_7</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 7.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._8\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#169\">Source</a><a href=\"#associatedtype._8\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._8\" class=\"associatedtype\">_8</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 8.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._9\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#170\">Source</a><a href=\"#associatedtype._9\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._9\" class=\"associatedtype\">_9</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 9.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._10\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#171\">Source</a><a href=\"#associatedtype._10\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._10\" class=\"associatedtype\">_10</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 10.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype._11\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#172\">Source</a><a href=\"#associatedtype._11\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"devela/all/trait.Tuple.html#associatedtype._11\" class=\"associatedtype\">_11</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of the element at index 11.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.head\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#150\">Source</a><a href=\"#method.head\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.head\" class=\"fn\">head</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.Head\" title=\"type devela::all::Tuple::Head\">Head</a></h4></section></summary><div class='docblock'>Returns a shared reference to the head of this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tail\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#151\">Source</a><a href=\"#method.tail\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.tail\" class=\"fn\">tail</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.Tail\" title=\"type devela::all::Tuple::Tail\">Tail</a></h4></section></summary><div class='docblock'>Returns a shared reference to the tail of this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.head_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#152\">Source</a><a href=\"#method.head_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.head_mut\" class=\"fn\">head_mut</a>(&amp;mut self) -&gt; &amp;mut Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.Head\" title=\"type devela::all::Tuple::Head\">Head</a></h4></section></summary><div class='docblock'>Returns an exclusive reference to the head of this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tail_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#153\">Source</a><a href=\"#method.tail_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.tail_mut\" class=\"fn\">tail_mut</a>(&amp;mut self) -&gt; &amp;mut Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.Tail\" title=\"type devela::all::Tuple::Tail\">Tail</a></h4></section></summary><div class='docblock'>Returns an exclusive reference to the tail of this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_head\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#154\">Source</a><a href=\"#method.split_head\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.split_head\" class=\"fn\">split_head</a>(self) -&gt; (Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.Head\" title=\"type devela::all::Tuple::Head\">Head</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.NoHead\" title=\"type devela::all::Tuple::NoHead\">NoHead</a>) <a href=\"#\" class=\"tooltip\" data-notable-ty=\"(Self::Head, Self::NoHead)\">ⓘ</a></h4></section></summary><div class='docblock'>Returns this tuple with the head element splitted from the rest.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_tail\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#155\">Source</a><a href=\"#method.split_tail\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.split_tail\" class=\"fn\">split_tail</a>(self) -&gt; (Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.NoTail\" title=\"type devela::all::Tuple::NoTail\">NoTail</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.Tail\" title=\"type devela::all::Tuple::Tail\">Tail</a>) <a href=\"#\" class=\"tooltip\" data-notable-ty=\"(Self::NoTail, Self::Tail)\">ⓘ</a></h4></section></summary><div class='docblock'>Returns this tuple with the tail element splitted from the rest.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.no_head\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#156\">Source</a><a href=\"#method.no_head\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.no_head\" class=\"fn\">no_head</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.NoHead\" title=\"type devela::all::Tuple::NoHead\">NoHead</a></h4></section></summary><div class='docblock'>Returns this tuple without the head.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.no_tail\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#157\">Source</a><a href=\"#method.no_tail\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.no_tail\" class=\"fn\">no_tail</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.NoTail\" title=\"type devela::all::Tuple::NoTail\">NoTail</a></h4></section></summary><div class='docblock'>Returns this tuple without the tail.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#158\">Source</a><a href=\"#method.append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.append\" class=\"fn\">append</a>&lt;T&gt;(self, value: T) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.Append\" title=\"type devela::all::Tuple::Append\">Append</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Appends the given <code>value</code> to this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#159\">Source</a><a href=\"#method.prepend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.prepend\" class=\"fn\">prepend</a>&lt;T&gt;(self, value: T) -&gt; Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype.Prepend\" title=\"type devela::all::Tuple::Prepend\">Prepend</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Prepends the given <code>value</code> to this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#174-177\">Source</a><a href=\"#method.nth\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.nth\" class=\"fn\">nth</a>(\n    self,\n    _nth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.TupleElement.html\" title=\"enum devela::all::TupleElement\">TupleElement</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._0\" title=\"type devela::all::Tuple::_0\">_0</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._1\" title=\"type devela::all::Tuple::_1\">_1</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._2\" title=\"type devela::all::Tuple::_2\">_2</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._3\" title=\"type devela::all::Tuple::_3\">_3</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._4\" title=\"type devela::all::Tuple::_4\">_4</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._5\" title=\"type devela::all::Tuple::_5\">_5</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._6\" title=\"type devela::all::Tuple::_6\">_6</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._7\" title=\"type devela::all::Tuple::_7\">_7</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._8\" title=\"type devela::all::Tuple::_8\">_8</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._9\" title=\"type devela::all::Tuple::_9\">_9</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._10\" title=\"type devela::all::Tuple::_10\">_10</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._11\" title=\"type devela::all::Tuple::_11\">_11</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;TupleElement&lt;Self::_0, Self::_1, Self::_2, Self::_3, Self::_4, Self::_5, Self::_6, Self::_7, Self::_8, Self::_9, Self::_10, Self::_11&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the <code>nth</code> element, or <code>None</code> if <code>nth &gt;= ARITY</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_cloned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#178-182\">Source</a><a href=\"#method.nth_cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.nth_cloned\" class=\"fn\">nth_cloned</a>(\n    &amp;self,\n    _nth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.TupleElement.html\" title=\"enum devela::all::TupleElement\">TupleElement</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._0\" title=\"type devela::all::Tuple::_0\">_0</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._1\" title=\"type devela::all::Tuple::_1\">_1</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._2\" title=\"type devela::all::Tuple::_2\">_2</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._3\" title=\"type devela::all::Tuple::_3\">_3</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._4\" title=\"type devela::all::Tuple::_4\">_4</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._5\" title=\"type devela::all::Tuple::_5\">_5</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._6\" title=\"type devela::all::Tuple::_6\">_6</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._7\" title=\"type devela::all::Tuple::_7\">_7</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._8\" title=\"type devela::all::Tuple::_8\">_8</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._9\" title=\"type devela::all::Tuple::_9\">_9</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._10\" title=\"type devela::all::Tuple::_10\">_10</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._11\" title=\"type devela::all::Tuple::_11\">_11</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;TupleElement&lt;Self::_0, Self::_1, Self::_2, Self::_3, Self::_4, Self::_5, Self::_6, Self::_7, Self::_8, Self::_9, Self::_10, Self::_11&gt;&gt;\">ⓘ</a><div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._0\" title=\"type devela::all::Tuple::_0\">_0</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._1\" title=\"type devela::all::Tuple::_1\">_1</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._2\" title=\"type devela::all::Tuple::_2\">_2</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._3\" title=\"type devela::all::Tuple::_3\">_3</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._4\" title=\"type devela::all::Tuple::_4\">_4</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._5\" title=\"type devela::all::Tuple::_5\">_5</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._6\" title=\"type devela::all::Tuple::_6\">_6</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._7\" title=\"type devela::all::Tuple::_7\">_7</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._8\" title=\"type devela::all::Tuple::_8\">_8</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._9\" title=\"type devela::all::Tuple::_9\">_9</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._10\" title=\"type devela::all::Tuple::_10\">_10</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,\n    Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._11\" title=\"type devela::all::Tuple::_11\">_11</a>: <a class=\"trait\" href=\"devela/code/trait.Clone.html\" title=\"trait devela::code::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Returns the <code>nth</code> element cloned, or <code>None</code> if <code>nth &gt;= ARITY</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#183-186\">Source</a><a href=\"#method.nth_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.nth_ref\" class=\"fn\">nth_ref</a>(\n    &amp;self,\n    _nth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.TupleElementRef.html\" title=\"enum devela::all::TupleElementRef\">TupleElementRef</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._0\" title=\"type devela::all::Tuple::_0\">_0</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._1\" title=\"type devela::all::Tuple::_1\">_1</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._2\" title=\"type devela::all::Tuple::_2\">_2</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._3\" title=\"type devela::all::Tuple::_3\">_3</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._4\" title=\"type devela::all::Tuple::_4\">_4</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._5\" title=\"type devela::all::Tuple::_5\">_5</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._6\" title=\"type devela::all::Tuple::_6\">_6</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._7\" title=\"type devela::all::Tuple::_7\">_7</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._8\" title=\"type devela::all::Tuple::_8\">_8</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._9\" title=\"type devela::all::Tuple::_9\">_9</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._10\" title=\"type devela::all::Tuple::_10\">_10</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._11\" title=\"type devela::all::Tuple::_11\">_11</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;TupleElementRef&lt;&#39;_, Self::_0, Self::_1, Self::_2, Self::_3, Self::_4, Self::_5, Self::_6, Self::_7, Self::_8, Self::_9, Self::_10, Self::_11&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns a shared reference to the <code>nth</code> element,\nor <code>None</code> if <code>nth &gt;= ARITY</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#187-190\">Source</a><a href=\"#method.nth_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.nth_mut\" class=\"fn\">nth_mut</a>(\n    &amp;mut self,\n    _nth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"devela/all/enum.Option.html\" title=\"enum devela::all::Option\">Option</a>&lt;<a class=\"enum\" href=\"devela/all/enum.TupleElementMut.html\" title=\"enum devela::all::TupleElementMut\">TupleElementMut</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._0\" title=\"type devela::all::Tuple::_0\">_0</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._1\" title=\"type devela::all::Tuple::_1\">_1</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._2\" title=\"type devela::all::Tuple::_2\">_2</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._3\" title=\"type devela::all::Tuple::_3\">_3</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._4\" title=\"type devela::all::Tuple::_4\">_4</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._5\" title=\"type devela::all::Tuple::_5\">_5</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._6\" title=\"type devela::all::Tuple::_6\">_6</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._7\" title=\"type devela::all::Tuple::_7\">_7</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._8\" title=\"type devela::all::Tuple::_8\">_8</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._9\" title=\"type devela::all::Tuple::_9\">_9</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._10\" title=\"type devela::all::Tuple::_10\">_10</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._11\" title=\"type devela::all::Tuple::_11\">_11</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Option&lt;TupleElementMut&lt;&#39;_, Self::_0, Self::_1, Self::_2, Self::_3, Self::_4, Self::_5, Self::_6, Self::_7, Self::_8, Self::_9, Self::_10, Self::_11&gt;&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns an exclusive reference to the <code>nth</code> element,\nor <code>None</code> if <code>nth &gt;= ARITY</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#191-197\">Source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(\n    self,\n) -&gt; <a class=\"struct\" href=\"devela/all/struct.TupleIter.html\" title=\"struct devela::all::TupleIter\">TupleIter</a>&lt;Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._0\" title=\"type devela::all::Tuple::_0\">_0</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._1\" title=\"type devela::all::Tuple::_1\">_1</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._2\" title=\"type devela::all::Tuple::_2\">_2</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._3\" title=\"type devela::all::Tuple::_3\">_3</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._4\" title=\"type devela::all::Tuple::_4\">_4</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._5\" title=\"type devela::all::Tuple::_5\">_5</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._6\" title=\"type devela::all::Tuple::_6\">_6</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._7\" title=\"type devela::all::Tuple::_7\">_7</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._8\" title=\"type devela::all::Tuple::_8\">_8</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._9\" title=\"type devela::all::Tuple::_9\">_9</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._10\" title=\"type devela::all::Tuple::_10\">_10</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._11\" title=\"type devela::all::Tuple::_11\">_11</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TupleIter&lt;Self::_0, Self::_1, Self::_2, Self::_3, Self::_4, Self::_5, Self::_6, Self::_7, Self::_8, Self::_9, Self::_10, Self::_11&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns an iterator over elements of the tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#198-204\">Source</a><a href=\"#method.iter_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.iter_ref\" class=\"fn\">iter_ref</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"devela/all/struct.TupleIterRef.html\" title=\"struct devela::all::TupleIterRef\">TupleIterRef</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._0\" title=\"type devela::all::Tuple::_0\">_0</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._1\" title=\"type devela::all::Tuple::_1\">_1</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._2\" title=\"type devela::all::Tuple::_2\">_2</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._3\" title=\"type devela::all::Tuple::_3\">_3</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._4\" title=\"type devela::all::Tuple::_4\">_4</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._5\" title=\"type devela::all::Tuple::_5\">_5</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._6\" title=\"type devela::all::Tuple::_6\">_6</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._7\" title=\"type devela::all::Tuple::_7\">_7</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._8\" title=\"type devela::all::Tuple::_8\">_8</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._9\" title=\"type devela::all::Tuple::_9\">_9</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._10\" title=\"type devela::all::Tuple::_10\">_10</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._11\" title=\"type devela::all::Tuple::_11\">_11</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TupleIterRef&lt;&#39;_, Self::_0, Self::_1, Self::_2, Self::_3, Self::_4, Self::_5, Self::_6, Self::_7, Self::_8, Self::_9, Self::_10, Self::_11&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns an iterator over shared references to elements of the tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#205-211\">Source</a><a href=\"#method.iter_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(\n    &amp;mut self,\n) -&gt; <a class=\"struct\" href=\"devela/all/struct.TupleIterMut.html\" title=\"struct devela::all::TupleIterMut\">TupleIterMut</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._0\" title=\"type devela::all::Tuple::_0\">_0</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._1\" title=\"type devela::all::Tuple::_1\">_1</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._2\" title=\"type devela::all::Tuple::_2\">_2</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._3\" title=\"type devela::all::Tuple::_3\">_3</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._4\" title=\"type devela::all::Tuple::_4\">_4</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._5\" title=\"type devela::all::Tuple::_5\">_5</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._6\" title=\"type devela::all::Tuple::_6\">_6</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._7\" title=\"type devela::all::Tuple::_7\">_7</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._8\" title=\"type devela::all::Tuple::_8\">_8</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._9\" title=\"type devela::all::Tuple::_9\">_9</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._10\" title=\"type devela::all::Tuple::_10\">_10</a>, Self::<a class=\"associatedtype\" href=\"devela/all/trait.Tuple.html#associatedtype._11\" title=\"type devela::all::Tuple::_11\">_11</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TupleIterMut&lt;&#39;_, Self::_0, Self::_1, Self::_2, Self::_3, Self::_4, Self::_5, Self::_6, Self::_7, Self::_8, Self::_9, Self::_10, Self::_11&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns an iterator over exclusive reference to elements of the tuple.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_ARITY\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#72\">Source</a><a href=\"#associatedconstant.MAX_ARITY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"devela/all/trait.Tuple.html#associatedconstant.MAX_ARITY\" class=\"constant\">MAX_ARITY</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = 12usize</h4></section></summary><div class='docblock'>The maximum arity supported by the current compilation options. <a href=\"devela/all/trait.Tuple.html#associatedconstant.MAX_ARITY\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#134\">Source</a><a href=\"#method.arity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#method.arity\" class=\"fn\">arity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the arity (number of elements) of this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/devela/home/joseluis/tmp/andamira.github.io/devela/tmp/debug/build/devela-7aab1bafdb05fab3/out/build/tuple.rs.html#136\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/all/trait.Tuple.html#method.fmt\" class=\"fn\">fmt</a>(&amp;self) -&gt; <a class=\"struct\" href=\"devela/all/struct.TupleFmt.html\" title=\"struct devela::all::TupleFmt\">TupleFmt</a>&lt;'_, Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"devela/all/trait.Sized.html\" title=\"trait devela::all::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Wraps the tuple in a <a href=\"devela/all/struct.TupleFmt.html\" title=\"struct devela::all::TupleFmt\"><code>TupleFmt</code></a> for formatting purposes.</div></details></div></details>","Tuple","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-()\" class=\"impl\"><a href=\"#impl-Zeroable-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/bytemuck/trait.Zeroable.html\" title=\"trait devela::_dep::bytemuck::Zeroable\">Zeroable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"devela/_dep/bytemuck/trait.Zeroable.html#method.zeroed\" class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"devela/_core/mem/fn.zeroed.html\" title=\"fn devela::_core::mem::zeroed\"><code>zeroed</code></a>. <a href=\"devela/_dep/bytemuck/trait.Zeroable.html#method.zeroed\">Read more</a></div></details></div></details>","Zeroable","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<section id=\"impl-AsSendBody-for-()\" class=\"impl\"><a href=\"#impl-AsSendBody-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/ureq/trait.AsSendBody.html\" title=\"trait devela::_dep::ureq::AsSendBody\">AsSendBody</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section>","AsSendBody","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<section id=\"impl-ConstParamTy_-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#1115-1124\">Source</a><a href=\"#impl-ConstParamTy_-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_core/marker/trait.ConstParamTy_.html\" title=\"trait devela::_core::marker::ConstParamTy_\">ConstParamTy_</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section>","ConstParamTy_","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<section id=\"impl-Eq-for-()\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1856\">Source</a></span><a href=\"#impl-Eq-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/all/trait.Eq.html\" title=\"trait devela::all::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section>","Eq","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<section id=\"impl-Pod-for-()\" class=\"impl\"><a href=\"#impl-Pod-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_dep/bytemuck/trait.Pod.html\" title=\"trait devela::_dep::bytemuck::Pod\">Pod</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section>","Pod","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<section id=\"impl-PyCallArgs%3C'py%3E-for-()\" class=\"impl\"><a href=\"#impl-PyCallArgs%3C'py%3E-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'py&gt; <a class=\"trait\" href=\"devela/_dep/pyo3/call/trait.PyCallArgs.html\" title=\"trait devela::_dep::pyo3::call::PyCallArgs\">PyCallArgs</a>&lt;'py&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section>","PyCallArgs<'py>","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<section id=\"impl-StructuralPartialEq-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#265-277\">Source</a><a href=\"#impl-StructuralPartialEq-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_core/marker/trait.StructuralPartialEq.html\" title=\"trait devela::_core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section>","StructuralPartialEq","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"],["<section id=\"impl-UnsizedConstParamTy-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#1126-1139\">Source</a><a href=\"#impl-UnsizedConstParamTy-for-()\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"devela/_core/marker/trait.UnsizedConstParamTy.html\" title=\"trait devela::_core::marker::UnsizedConstParamTy\">UnsizedConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section>","UnsizedConstParamTy","devela::data::absence::NoData","devela::lang::ffi::js::primitives::js_null","devela::lang::ffi::js::primitives::js_undefined","devela::num::no::NoNum","devela::phys::time::no::NoTime","devela::sys::mem::storage::bare::Bare","devela::_dep::miniquad::native::linux_x11::libx11::Display","devela::_dep::miniquad::native::linux_x11::libx11::_XDisplay","devela::_dep::miniquad::native::linux_x11::libx11::_XGC","devela::_dep::miniquad::native::linux_x11::libx11::_XrmHashBucketRec","devela::_dep::miniquad::native::linux_x11::libx11::_XPrivate"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[173808]}